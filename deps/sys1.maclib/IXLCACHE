*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXLCACHE                              -11/26/18-<8> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  XES Cache Structure Services                  * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 1993, 2017                         * 00001200
*                                                                     * 00001300
* STATUS= HBB77B0                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The IXLCACHE macro provides operations to atomically read,     * 00002100
*      write, cast-out, and delete subsystem data from/to a coupling  * 00002200
*      facility cache structure, and otherwise manipulate subsystem   * 00002300
*      and control information in the structure.                      * 00002400
*                                                                     * 00002500
*      A cache structure is partitioned into a set of directory       * 00002600
*      entries and a set of data entries.  The numbers of each type   * 00002700
*      of entry are determined at structure allocation time via       * 00002800
*      programming interface ratio parameters that indicates the      * 00002900
*      desired partitioning of the total structure space, and are     * 00003000
*      static for the duration of the structure.                      * 00003100
*                                                                     * 00003200
*      Data entries contain cached subsystem data.  Data entries are  * 00003300
*      comprised of 1 to 255 elements.  An entry may or may not have  * 00003400
*      elements. If there are no elements then the data area size     * 00003500
*      (ELENMUM) will be 0.  The size of an element and the maximum   * 00003600
*      number of elements in an entry is specified when the structure * 00003700
*      is allocated.  The number of elements in an entry is           * 00003800
*      established when the entry is initially written and may be     * 00003900
*      changed on any subsequent write to the entry.  These elements  * 00004000
*      are allocated by invoking IXLCACHE to write subsystem data to  * 00004100
*      the structure.  Each allocated data entry has a corresponding  * 00004200
*      directory entry that contains control information.  Directory  * 00004300
*      entries may exist without an associated data entry.            * 00004400
*                                                                     * 00004500
*      An optional 64-byte extension to each data entry, referred to  * 00004600
*      as the adjunct data or adjunct area, may be specified on the   * 00004700
*      allocation of a cache structure.  When adjunct areas are       * 00004800
*      defined then IXLCACHE operations that place subsystem data     * 00004900
*      into the structure or retrieve subsystem data from the         * 00005000
*      structure may also include the adjunct data.  The content of   * 00005100
*      adjunct data is user defined.  Adjunct areas may be used only  * 00005200
*      when data elements exist in the structure and only for entries * 00005300
*      with associated data.                                          * 00005400
*                                                                     * 00005500
*      Directory entries contain control information that identifies  * 00005600
*      named subsystem data items to the structure, describes the     * 00005700
*      attributes of subsystem data items, permits registration of    * 00005800
*      connection interest in data, facilitates the casting out of    * 00005900
*      data, and affects structure resource management operations.  A * 00006000
*      directory entry is always allocated for and associated with a  * 00006100
*      data entry that contains cached subsystem data.  A directory   * 00006200
*      entry may be allocated and useful without an associated data   * 00006300
*      entry by permitting the definition of named subsystem data     * 00006400
*      items and registration of connection interest in such items    * 00006500
*      prior to, and perhaps even without, actually caching the data  * 00006600
*      in the structure.                                              * 00006700
*                                                                     * 00006800
*      All allocated directory and data entries are referred to and   * 00006900
*      identified by a connection specified name.  A name signifies   * 00007000
*      some subsystem data item, and the same name identifies both    * 00007100
*      the directory entry and the associated data entry for cached   * 00007200
*      data.  For uncached data the name identifies the directory     * 00007300
*      entry only.                                                    * 00007400
*                                                                     * 00007500
*      Registration of connection interest is according to named data * 00007600
*      items, and is always relative to a connection's local cache.   * 00007700
*      A local cache is comprised of a user allocated and managed     * 00007800
*      storage area on the local system, and the local cache vector   * 00007900
*      allocated for the connection by the IXLCONN service when the   * 00008000
*      connection is established.  Registration of connection         * 00008100
*      interest correlates a named data item to an index in the       * 00008200
*      vector for this connection such that the index reflects the    * 00008300
*      validity of the data item in the connection's local storage    * 00008400
*      area.  The local storage copy of a data item is deemed to be   * 00008500
*      valid when connection interest is registered in the named data * 00008600
*      item and the connection performs some operation (e.g.,         * 00008700
*      IXLCACHE to read subsystem data) to retrieve a local cache     * 00008800
*      copy of the data matching the latest version.  Structure       * 00008900
*      operations that cause the contents or state of a data entry to * 00009000
*      change result in the invalidation of local copies via the      * 00009100
*      local cache vectors for all registered users.                  * 00009200
*                                                                     * 00009300
*      Cached data may be in either the changed or unchanged state.   * 00009400
*      To say cached data is changed means that the version of the    * 00009500
*      data in the structure supercedes any version on another        * 00009600
*      medium.  Cast-out operations from the structure may only be    * 00009700
*      performed for changed data.  IXLCACHE facilitates casting out  * 00009800
*      data by supporting serialization mechanisms to ensure multiple * 00009900
*      connections do not perform concurrent cast-out of a given data * 00010000
*      item.  Other IXLCACHE functions, however, may be performed     * 00010100
*      against a data item for which cast-out is in progress,         * 00010200
*      including the ability to write changed subsystem data.  All    * 00010300
*      changed data items in the structure are assigned to a          * 00010400
*      connection specified cast-out class.  The number of cast-out   * 00010500
*      classes for a structure is specified via programming interface * 00010600
*      and remains static.                                            * 00010700
*                                                                     * 00010800
*      A cache structure supports the partitioning of named data      * 00010900
*      items according to storage classes.  The number of storage     * 00011000
*      classes for the structure is determined via programming        * 00011100
*      interface when the structure is allocated and remains static.  * 00011200
*      Every named data item identified to the structure resides in a * 00011300
*      connection specified storage class.  When no unused directory  * 00011400
*      or data elements are available to satisfy an IXLCACHE request  * 00011500
*      requiring allocation of an entry or the addition of data       * 00011600
*      elements to an existing entry, then structure resource         * 00011700
*      management algorithms will attempt to reclaim entries for      * 00011800
*      reuse from specific storage classes.  Reclaim is driven either * 00011900
*      using default criteria, or as specified by connections through * 00012000
*      an IXLCACHE interface.  Only directory and data entries for    * 00012100
*      unchanged and unlocked for cast-out items are candidates for   * 00012200
*      reclaim for reuse.  Preference to reclaiming is given to       * 00012300
*      entries which have data but no registered interest.            * 00012400
*                                                                     * 00012500
*      The AXIOVERRIDE keyword is intended for use to override the    * 00012600
*      IXLCONN ASYNCXI=1 specification on a request by request basis. * 00012700
*      The AXIOVERRIDE keyword is meaningful to processing only when  * 00012800
*      the connection specified ASYNCXI=1 on the IXLCONN invocation   * 00012900
*      when connecting to the cache structure and the cache structure * 00013000
*      is allocated in a CFLEVEL=23 or higher coupling facility.      * 00013100
*                                                                     * 00013200
*      When the connection specified ASYNCXI=0 on the IXLCONN         * 00013300
*      invocation when connecting to the cache structure or took the  * 00013400
*      default (ASYNCXI=0) or the cache structure is allocated in a   * 00013500
*      CFLEVEL=22 or lower coupling facility, the value of the        * 00013600
*      AXIOVERRIDE keyword is ignored and cross-invalidations are     * 00013700
*      processed synchronously to the completion of the cache         * 00013800
*      operation request.                                             * 00013900
*                                                                     * 00014000
*      A non-zero value in the CaaAsyncXISeqNum field of the cache    * 00014100
*      answer area (IXLYCAA) indicates that cross-invalidate          * 00014200
*      operations were performed asynchronously to the completion of  * 00014300
*      the cache request.  A connected user can invoke the IXLAXISN   * 00014400
*      service to determine when asynchronous cross-invalidates       * 00014500
*      associated with its connection have completed.                 * 00014600
*                                                                     * 00014700
*      Refer to the IXLCONN service description for additional        * 00014800
*      information regarding the allocation of a cache structure.     * 00014900
*                                                                     * 00015000
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00015100
*                                                                     * 00015200
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00015300
*                                                                     * 00015400
*01* ENVIRONMENT:                                                     * 00015500
*                                                                     * 00015600
*                                                                     * 00015700
*      Minimum authorization: Supervisor state and PSW key 0-7.       * 00015800
*                                                                     * 00015900
*      Dispatchable unit mode: Task or SRB mode.                      * 00016000
*                                                                     * 00016100
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00016200
*                                                                     * 00016300
*                        The current primary address space must be    * 00016400
*                        the same as the primary address space at the * 00016500
*                        time the connection service, IXLCONN, was    * 00016600
*                        issued for the structure.  This address      * 00016700
*                        space is referred to as the connector's      * 00016800
*                        address space.                               * 00016900
*                                                                     * 00017000
*                        The requestor's address space refers to the  * 00017100
*                        home address space of the unit of work which * 00017200
*                        is issuing the IXLCACHE request.  The        * 00017300
*                        requestor's address space may or may not be  * 00017400
*                        the same as the connector's address space.   * 00017500
*                                                                     * 00017600
*      AMODE:            31-bit.                                      * 00017700
*                                                                     * 00017800
*      ASC mode:         Primary or Access Register.                  * 00017900
*                                                                     * 00018000
*      Interrupt status: Enabled or disabled for I/O and external     * 00018100
*                        interrupts.                                  * 00018200
*                                                                     * 00018300
*      Locks:            Disabled callers must be legally disabled by * 00018400
*                        holding the CPU lock and cannot hold other   * 00018500
*                        disabled locks (invocation by DIE routines   * 00018600
*                        is not supported).  Enabled callers must not * 00018700
*                        hold any locks.  When MODE=SYNCSUSPEND is    * 00018800
*                        specified the caller must be enabled.        * 00018900
*                                                                     * 00019000
*      Control parameters:                                            * 00019100
*                                                                     * 00019200
*                                                                     * 00019300
*                        1.  The caller's parameter list must be      * 00019400
*                            addressable in the caller's primary      * 00019500
*                            address space.                           * 00019600
*                                                                     * 00019700
*                        2.  If the caller is running in Access       * 00019800
*                            Register ASC mode and specifies a macro  * 00019900
*                            parameter using explicit register        * 00020000
*                            notation the access register             * 00020100
*                            corresponding to the general register    * 00020200
*                            must appropriately qualify the general   * 00020300
*                            register.                                * 00020400
*                                                                     * 00020500
*                        3.  The virtual storage areas specified by   * 00020600
*                            the STGSTATS, ADJAREA, ANSAREA, BUFFER   * 00020700
*                            (for REG_NAMELIST and WRITE_DATALIST     * 00020800
*                            requests only), NSBAREA, DEIBAREA, and   * 00020900
*                            WORBAREA keywords must be addressable in * 00021000
*                            the caller's primary address space or    * 00021100
*                            from the caller's PASN access list.      * 00021200
*                                                                     * 00021300
*                        4.  All other virtual storage areas          * 00021400
*                            specified on the invocation may be       * 00021500
*                            addressable in the caller's primary,     * 00021600
*                            secondary, or home address spaces, from  * 00021700
*                            the PASN access list, or from the DU     * 00021800
*                            access list.                             * 00021900
*                                                                     * 00022000
*                                                                     * 00022100
*                                                                     * 00022200
*                                                                     * 00022300
*                                                                     * 00022400
*01* PROGRAMMING REQUIREMENTS:                                        * 00022500
*                                                                     * 00022600
*                                                                     * 00022700
*    1.  Access Register mode invokers must specify SYSSTATE          * 00022800
*        ASCENV=AR prior to invoking this macro.                      * 00022900
*                                                                     * 00023000
*                                                                     * 00023100
*                                                                     * 00023200
*01* RESTRICTIONS:                                                    * 00023300
*                                                                     * 00023400
*                                                                     * 00023500
*    1.  If the caller is disabled then the parameter list and all    * 00023600
*        storage areas addressed by macro parameters must reside in   * 00023700
*        either non-pageable or disabled reference storage.           * 00023800
*                                                                     * 00023900
*    2.  The caller may not be running as a Disabled Interrupt Exit   * 00024000
*        (DIE).                                                       * 00024100
*                                                                     * 00024200
*                                                                     * 00024300
*                                                                     * 00024400
*01* INPUT REGISTER INFORMATION:                                      * 00024500
*                                                                     * 00024600
*    Before issuing the IXLCACHE macro, the caller does not have to   * 00024700
*    place any information into any register or AR unless using it in * 00024800
*    register notation for a particular parameter, or using it as a   * 00024900
*    base register.                                                   * 00025000
*                                                                     * 00025100
*01* OUTPUT REGISTER INFORMATION:                                     * 00025200
*                                                                     * 00025300
*    When control returns to the caller, the GPRs contain:            * 00025400
*                                                                     * 00025500
*                                                                     * 00025600
*    REGISTER  CONTENTS                                               * 00025700
*                                                                     * 00025800
*    0         Reason code                                            * 00025900
*                                                                     * 00026000
*    1         Used as work registers by the system                   * 00026100
*                                                                     * 00026200
*    2-13      Unchanged                                              * 00026300
*                                                                     * 00026400
*    14        Used as work registers by the system.                  * 00026500
*                                                                     * 00026600
*    15        Return code                                            * 00026700
*                                                                     * 00026800
*                                                                     * 00026900
*                                                                     * 00027000
*    When control returns to the caller, the ARs contain:             * 00027100
*                                                                     * 00027200
*                                                                     * 00027300
*    REGISTER  CONTENTS                                               * 00027400
*                                                                     * 00027500
*    0-1       Used as work registers by the system                   * 00027600
*                                                                     * 00027700
*    2-13      Unchanged                                              * 00027800
*                                                                     * 00027900
*    14-15     Used as work registers by the system.                  * 00028000
*                                                                     * 00028100
*                                                                     * 00028200
*                                                                     * 00028300
*01* PERFORMANCE IMPLICATIONS:                                        * 00028400
*                                                                     * 00028500
*    None.                                                            * 00028600
*                                                                     * 00028700
*01* SYNTAX:                                                          * 00028800
*                                                                     * 00028900
*Ýxlabel¨  IXLCACHE  Ð  REQUEST=READ_DATA                             * 00029000
*                    !    Ý,ASSIGN=»YES!NOº¨                          * 00029100
*                    !    Ý,REGUSER=»YES!NOº¨                         * 00029200
*                    !    Ý,RETURNDATA=»YES!NOº¨                      * 00029300
*                    !    Ý,AXIOVERRIDE=»xaxioverride!0º¨             * 00029400
*                    Ô ,REQUEST=WRITE_DATA                            * 00029500
*                    !   ÐÝ,WHENREG=YES¨                              * 00029600
*                    !   ¿Ý,WHENREG=NO                                * 00029700
*                    !        Ý,REGUSER=»YES!NOº¨                     * 00029800
*                    !       ÐÝ,ASSIGN=YES¨                           * 00029900
*                    !       ¿Ý,ASSIGN=NO                             * 00030000
*                    !            Ý,LOCALREGCNTL=»NO!YESº¨¨¨          * 00030100
*                    !    Ý,VERSCOMP=»xverscomp!NO_VERSCOMPº          * 00030200
*                    !        Ý,VERSCOMPTYPE=»EQUAL!LESSOREQUALº¨¨    * 00030300
*                    !   ÐÝ,VERSUPDATE=NONE¨                          * 00030400
*                    !   ÔÝ,VERSUPDATE=INC¨                           * 00030500
*                    !   ÔÝ,VERSUPDATE=DEC¨                           * 00030600
*                    !   ¿Ý,VERSUPDATE=SET                            * 00030700
*                    !         ,NEWVERS=xnewvers¨                     * 00030800
*                    !   ÐÝ,CHANGED=NO                                * 00030900
*                    !   !    Ý,CROSSINVAL=»NO!YESº¨                  * 00031000
*                    !   !   ÐÝ,GETCOLOCK=NO¨                         * 00031100
*                    !   !   ¿Ý,GETCOLOCK=YES                         * 00031200
*                    !   !        Ý,PROCESSID                         * 00031300
*                    !   !                    =»xprocessid!NO_PROCESS * 00031400
*                    !   !                    IDº¨¨¨                  * 00031500
*                    !   ¿Ý,CHANGED=YES                               * 00031600
*                    !        Ý,PARITY=»xparity!00110000º¨            * 00031700
*                    !        Ý,USERDATA=»xuserdata!NO_USERDATAº¨¨    * 00031800
*                    !     ,ELEMNUM=xelemnum                          * 00031900
*                    !    Ý,AXIOVERRIDE=»xaxioverride!0º¨             * 00032000
*                    Ô ,REQUEST=WRITE_DATALIST                        * 00032100
*                    !     ,STARTINDEX=xstartindex                    * 00032200
*                    !     ,ENDINDEX=xendindex                        * 00032300
*                    !     ,DATAOFFSET=xdataoffset                    * 00032400
*                    !     ,WORBAREA=xworbarea                        * 00032500
*                    !    Ý,LOCALREGCNTL=»NO!YESº¨                    * 00032600
*                    !    Ý,AXIOVERRIDE=»xaxioverride!0º¨             * 00032700
*                    Ô ,REQUEST=REG_NAMELIST                          * 00032800
*                    !     ,STARTINDEX=xstartindex                    * 00032900
*                    !     ,ENDINDEX=xendindex                        * 00033000
*                    !     ,NSBAREA=xnsbarea                          * 00033100
*                    !    Ý,AXIOVERRIDE=»xaxioverride!0º¨             * 00033200
*                    Ô ,REQUEST=CASTOUT_DATA                          * 00033300
*                    !    Ý,REGUSER=»NO!YESº¨                         * 00033400
*                    !    Ý,PROCESSID=»xprocessid!NO_PROCESSIDº¨      * 00033500
*                    Ô ,REQUEST=CASTOUT_DATALIST                      * 00033600
*                    !     ,STARTINDEX=xstartindex                    * 00033700
*                    !     ,ENDINDEX=xendindex                        * 00033800
*                    !     ,DEIBAREA=xdeibarea                        * 00033900
*                    !     ,CASTOUTLIST=xcastoutlist                  * 00034000
*                    !    Ý,PROCESSID=»xprocessid!NO_PROCESSIDº¨      * 00034100
*                    Ô ,REQUEST=UNLOCK_CASTOUT                        * 00034200
*                    !     ,FIRSTNAME=xfirstname                      * 00034300
*                    !     ,LASTNAME=xlastname                        * 00034400
*                    !    Ý,PROCESSID=»xprocessid!NO_PROCESSIDº¨      * 00034500
*                    Ô ,REQUEST=UNLOCK_CO_NAME                        * 00034600
*                    !     ,CUNBAREA=xcunbarea                        * 00034700
*                    !    Ý,PROCESSID=»xprocessid!NO_PROCESSIDº¨      * 00034800
*                    Ô ,REQUEST=CROSS_INVAL                           * 00034900
*                    !    Ý,AXIOVERRIDE=»xaxioverride!0º¨             * 00035000
*                    Ô ,REQUEST=CROSS_INVALLIST                       * 00035100
*                    !     ,STARTINDEX=xstartindex                    * 00035200
*                    !     ,ENDINDEX=xendindex                        * 00035300
*                    !    Ý,ERRORACTION=»CONTINUE!TERMINATEº¨         * 00035400
*                    !    Ý,AXIOVERRIDE=»xaxioverride!0º¨             * 00035500
*                    Ô ,REQUEST=DELETE_NAME                           * 00035600
*                    !   ÐÝ,DELETETYPE=DIRANDDATA                     * 00035700
*                    !   !    Ý,HALTONCHANGED=»NO!YESº¨               * 00035800
*                    !   !    Ý,SUPPCROSSINVAL=»NO!YESº¨¨             * 00035900
*                    !   ÔÝ,DELETETYPE=UNCHDATA¨                      * 00036000
*                    !   ÔÝ,DELETETYPE=CHDATA¨                        * 00036100
*                    !   ¿Ý,DELETETYPE=ANYDATA¨                       * 00036200
*                    !    Ý,VERSCOMP=»xverscomp!NO_VERSCOMPº          * 00036300
*                    !        Ý,VERSCOMPTYPE=»EQUAL!LESSOREQUALº¨¨    * 00036400
*                    !    Ý,AXIOVERRIDE=»xaxioverride!0º¨             * 00036500
*                    Ô ,REQUEST=DELETE_NAMELIST                       * 00036600
*                    !     ,STARTINDEX=xstartindex                    * 00036700
*                    !     ,ENDINDEX=xendindex                        * 00036800
*                    !   ÐÝ,DELETETYPE=DIRANDDATA                     * 00036900
*                    !   !    Ý,HALTONCHANGED=»NO!YESº¨               * 00037000
*                    !   !    Ý,SUPPCROSSINVAL=»NO!YESº¨¨             * 00037100
*                    !   ÔÝ,DELETETYPE=UNCHDATA¨                      * 00037200
*                    !   ÔÝ,DELETETYPE=CHDATA¨                        * 00037300
*                    !   ¿Ý,DELETETYPE=ANYDATA¨                       * 00037400
*                    !    Ý,VERSCOMPTYPE=»NONE!EQUAL!LESSOREQUALº¨    * 00037500
*                    !    Ý,ERRORACTION=»CONTINUE!TERMINATEº¨         * 00037600
*                    !    Ý,AXIOVERRIDE=»xaxioverride!0º¨             * 00037700
*                    Ô ,REQUEST=READ_COCLASS                          * 00037800
*                    !    Ý,DIRINFOFMT=»NAMELIST!DIRENTRYLISTº¨       * 00037900
*                    !    Ý,RTATYPE=»NORMAL!ENHANCEDº¨                * 00038000
*                    Ô ,REQUEST=READ_DIRINFO                          * 00038100
*                    !    Ý,DIRINFOFMT=»DIRENTRYLIST!NAMELISTº¨       * 00038200
*                    !    Ý,CRITERIA=»ALL!CHANGEDº¨                   * 00038300
*                    Ô ,REQUEST=RESET_REFBIT                          * 00038400
*                    !    Ý,CRITERIA=»ALL!CHANGEDº¨                   * 00038500
*                    Ô ,REQUEST=READ_COSTATS                          * 00038600
*                    !     ,COCLASSB=xcoclassb                        * 00038700
*                    !     ,COCLASSE=xcoclasse                        * 00038800
*                    !    Ý,COSTATSFMT=»COCOUNTSLIST!COSTATSLISTº¨    * 00038900
*                    Ô ,REQUEST=READ_STGSTATS                         * 00039000
*                    !     ,STGSTATS=xstgstats                        * 00039100
*                    Ô ,REQUEST=PROCESS_REFLIST                       * 00039200
*                    !     ,NUMNAMES=xnumnames                        * 00039300
*                    ¿ ,REQUEST=SET_RECLVCTR                          * 00039400
*                          ,REPEAT=xrepeat                            * 00039500
*                         Ý,RECLVCTR=»xreclvctr!NO_RECLVCTRº¨         * 00039600
*                      ,CONTOKEN=xcontoken                            * 00039700
*                     Ý,REQID=»xreqid!NO_REQIDº¨                      * 00039800
*                     Ý,NAME=»xname!NO_NAMEº                          * 00039900
*                         Ý,NAMEMASK=»xnamemask!1111111111111111º¨    * 00040000
*                         Ý,OLDNAME=»xoldname!NO_OLDNAMEº¨¨           * 00040100
*                    ÐÝ,BUFLIST=»xbuflistº                            * 00040200
*                    !   ÐÝ,BUFADDRTYPE=VIRTUAL                       * 00040300
*                    !   !   ÐÝ,PAGEABLE=YES                          * 00040400
*                    !   !   !    Ý,BUFSTGKEY                         * 00040500
*                    !   !   !                =»xbufstgkey!CALLERS_KE * 00040600
*                    !   !   !                Yº¨¨                    * 00040700
*                    !   !   ¿Ý,PAGEABLE=NO¨                          * 00040800
*                    !   !    Ý,BUFALET=»xbufalet!NO_BUFALETº¨        * 00040900
*                    !   !   ÐÝ,BUFADDRSIZE=31¨                       * 00041000
*                    !   !   ¿Ý,BUFADDRSIZE=64¨¨                      * 00041100
*                    !   ¿Ý,BUFADDRTYPE=REAL                          * 00041200
*                    !       ÐÝ,BUFADDRSIZE=31¨                       * 00041300
*                    !       ¿Ý,BUFADDRSIZE=64¨¨                      * 00041400
*                    !    Ý,BUFNUM=»xbufnum!NO_BUFNUMº¨               * 00041500
*                    !    Ý,BUFINCRNUM=»xbufincrnum!NO_BUFINCRNUMº¨   * 00041600
*                    ¿ ,BUFFER=»xbufferº                              * 00041700
*                        ÐÝ,PAGEABLE=YES                              * 00041800
*                        !    Ý,BUFSTGKEY=»xbufstgkey!CALLERS_KEYº¨¨  * 00041900
*                        ¿Ý,PAGEABLE=NO¨                              * 00042000
*                          ,BUFSIZE=xbufsize¨                         * 00042100
*                     Ý,ADJAREA=»xadjarea!NO_ADJAREAº¨                * 00042200
*                     Ý,STGCLASS=»xstgclass!NO_STGCLASSº¨             * 00042300
*                     Ý,COCLASS=»xcoclass!NO_COCLASSº¨                * 00042400
*                     Ý,VECTORINDEX=»xvectorindex!NO_VECTORINDEXº¨    * 00042500
*                    ÐÝ,RESTOKEN=»xrestoken!NO_RESTOKENº              * 00042600
*                    ¿ ,EXTRESTOKEN=»xextrestoken!NO_EXTRESTOKENº¨    * 00042700
*                    ÐÝ,MODE=SYNCSUSPEND¨                             * 00042800
*                    ÔÝ,MODE=SYNCECB                                  * 00042900
*                    !     ,REQECB=xreqecb¨                           * 00043000
*                    ÔÝ,MODE=SYNCEXIT                                 * 00043100
*                    !    Ý,REQDATA=»xreqdata!NO_REQDATAº¨¨           * 00043200
*                    ÔÝ,MODE=SYNCTOKEN                                * 00043300
*                    !     ,REQTOKEN=xreqtoken¨                       * 00043400
*                    ÔÝ,MODE=ASYNCECB                                 * 00043500
*                    !     ,REQECB=xreqecb¨                           * 00043600
*                    ÔÝ,MODE=ASYNCEXIT                                * 00043700
*                    !    Ý,REQDATA=»xreqdata!NO_REQDATAº¨¨           * 00043800
*                    ÔÝ,MODE=ASYNCTOKEN                               * 00043900
*                    !     ,REQTOKEN=xreqtoken¨                       * 00044000
*                    ¿Ý,MODE=ASYNCNORESPONSE¨                         * 00044100
*                     Ý,ANSAREA=»xansarea!NO_ANSAREAº                 * 00044200
*                          ,ANSLEN=xanslen¨                           * 00044300
*                     Ý,RETCODE=xretcode¨                             * 00044400
*                     Ý,RSNCODE=xrsncode¨                             * 00044500
*                     Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨         * 00044600
*                    ÐÝ,MF=S¨                                         * 00044700
*                    ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                  * 00044800
*                    ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                    * 00044900
*                                                                     * 00045000
*                                                                     * 00045100
*      Where:                                                         * 00045200
*                                                                     * 00045300
*                                                                     * 00045400
*      Ýxlabel¨                                                       * 00045500
*          is an optional symbol, starting in column 1, that is the   * 00045600
*          name on the IXLCACHE macro invocation.  The name must      * 00045700
*          conform to the rules for an ordinary assembler language    * 00045800
*          symbol.                                                    * 00045900
*          DEFAULT: No name.                                          * 00046000
*                                                                     * 00046100
*                                                                     * 00046200
*                                                                     * 00046300
*                                                                     * 00046400
*      REQUEST=»READ_DATA!WRITE_DATA!WRITE_DATALIST!REG_NAMELIST!CAST * 00046500
*          OUT_DATA!CASTOUT_DATALIST!UNLOCK_CASTOUT!UNLOCK_CO_NAME!CR * 00046600
*          OSS_INVAL!CROSS_INVALLIST!DELETE_NAME!DELETE_NAMELIST!READ * 00046700
*          _COCLASS!READ_DIRINFO!...º                                 * 00046800
*          is a required keyword input that specifies the operation   * 00046900
*          to be performed.                                           * 00047000
*                                                                     * 00047100
*                                                                     * 00047200
*          REQUEST=READ_DATA                                          * 00047300
*              requests that subsystem data for the entry specified   * 00047400
*              by NAME optionally be retrieved from the structure and * 00047500
*              placed in the storage locations specified by BUFFER or * 00047600
*              BUFLIST and ADJAREA, if specified.  Furthermore, for   * 00047700
*              structures allocated in CFLEVEL=4 or lower coupling    * 00047800
*              facilities, user interest in the entry will be         * 00047900
*              registered for the connection specified by CONTOKEN    * 00048000
*              using the local cache vector index specified by        * 00048100
*              VECTORINDEX.  For structures allocated in CFLEVEL=5 or * 00048200
*              higher coupling facilities, user interest in the entry * 00048300
*              will not be registered for the connection specified by * 00048400
*              CONTOKEN if REGUSER=NO is specified. Care should be    * 00048500
*              taken when using REGUSER=NO because preference to      * 00048600
*              reclaiming is given to entries which have data but no  * 00048700
*              registered interest.  When registration occurs, if     * 00048800
*              connection interest is already registered then the     * 00048900
*              specified VECTORINDEX replaces any previously          * 00049000
*              specified local cache vector index for this CONTOKEN   * 00049100
*              for the entry.                                         * 00049200
*                                                                     * 00049300
*              The entry is assigned to the storage class specified   * 00049400
*              by STGCLASS, superceding any previously specified      * 00049500
*              storage class for NAME.                                * 00049600
*                                                                     * 00049700
*              OLDNAME should be specified to deregister any          * 00049800
*              outstanding interest for the specified local cache     * 00049900
*              vector index for a different entry.                    * 00050000
*                                                                     * 00050100
*              If ADJAREA is specified and is supported by the        * 00050200
*              structure then the CaaAdjareaValid bit in the ANSAREA  * 00050300
*              will be set to '1' if the adjunct data was returned    * 00050400
*              and '0' if the adjunct data did not exist.             * 00050500
*                                                                     * 00050600
*              For structures allocated in CFLEVEL=4 or higher        * 00050700
*              coupling facilities, RETURNDATA=NO may be specified to * 00050800
*              suppress the read function when a READ_DATA request is * 00050900
*              specified. By specifying RETURNDATA=NO the READ_DATA   * 00051000
*              request will register interest in the entry without    * 00051100
*              returning the associated data. This is useful when     * 00051200
*              data is cached with the entry but the user does not    * 00051300
*              want the data to be read. If adjunct exists, and       * 00051400
*              ADJAREA is specified, it will be returned.             * 00051500
*                                                                     * 00051600
*              The changed indication and parity from the directory   * 00051700
*              entry are returned in the answer area specified by     * 00051800
*              ANSAREA.  When the request replaced a previously       * 00051900
*              specified local cache vector index for the entry the   * 00052000
*              replaced index is returned in the answer area.         * 00052100
*                                                                     * 00052200
*              For structures allocated in CFLEVEL=3 or lower         * 00052300
*              coupling facilities, when BUFFER or BUFLIST is         * 00052400
*              specified the count of elements in the retrieved entry * 00052500
*              is also returned in the answer area.  For structures   * 00052600
*              allocated in CFLEVEL=4 or higher coupling facilities,  * 00052700
*              the count of elements in the retrieved entry is        * 00052800
*              unconditionally returned in the answer area.  When a   * 00052900
*              request fails due to the inability to obtain structure * 00053000
*              resources (e.g., directory entry) the target storage   * 00053100
*              class number from which resources should have been     * 00053200
*              reclaimed is returned in the answer area.              * 00053300
*                                                                     * 00053400
*              Required keywords are NAME, STGCLASS, CONTOKEN, and    * 00053500
*              for structures allocated in CFLEVEL=4 or lower         * 00053600
*              coupling facilities, VECTORINDEX.  For structures      * 00053700
*              allocated in CFLEVEL=5 or higher coupling facilities,  * 00053800
*              VECTORINDEX is required when REGUSER=YES is either     * 00053900
*              specified or selected by default.  VECTORINDEX is      * 00054000
*              required when REGUSER=NO is specified along with       * 00054100
*              OLDNAME and ignored if REGUSER=NO is specified without * 00054200
*              OLDNAME also being specified.                          * 00054300
*                                                                     * 00054400
*                                                                     * 00054500
*              ÝASSIGN=»YES!NOº¨                                      * 00054600
*                  is an optional keyword input that specifies        * 00054700
*                  whether or not a directory entry will be assigned  * 00054800
*                  for NAME if one does not currently exist.          * 00054900
*                                                                     * 00055000
*                  DEFAULT: YES                                       * 00055100
*                                                                     * 00055200
*                                                                     * 00055300
*                  ASSIGN=YES                                         * 00055400
*                      indicates that a directory entry will be       * 00055500
*                      assigned.                                      * 00055600
*                                                                     * 00055700
*                                                                     * 00055800
*                  ASSIGN=NO                                          * 00055900
*                      indicates that no directory entry will be      * 00056000
*                      assigned.                                      * 00056100
*                                                                     * 00056200
*                                                                     * 00056300
*                                                                     * 00056400
*                                                                     * 00056500
*                                                                     * 00056600
*                                                                     * 00056700
*              ÝREGUSER=»YES!NOº¨                                     * 00056800
*                  is an optional keyword input that specifies, for   * 00056900
*                  structures allocated in CFLEVEL=5 or higher        * 00057000
*                  coupling facilities, whether or not the request    * 00057100
*                  should register connection interest in the entry.  * 00057200
*                                                                     * 00057300
*                  DEFAULT: YES                                       * 00057400
*                                                                     * 00057500
*                                                                     * 00057600
*                  REGUSER=YES                                        * 00057700
*                      indicates that connection interest             * 00057800
*                      registration will be performed.                * 00057900
*                                                                     * 00058000
*                                                                     * 00058100
*                  REGUSER=NO                                         * 00058200
*                      indicates that no connection interest          * 00058300
*                      registration will be performed.  Care should   * 00058400
*                      be taken when using REGUSER=NO because         * 00058500
*                      preference to reclaiming is given to entries   * 00058600
*                      which have data but no registered interest.    * 00058700
*                                                                     * 00058800
*                                                                     * 00058900
*                                                                     * 00059000
*                                                                     * 00059100
*                                                                     * 00059200
*                                                                     * 00059300
*              ÝRETURNDATA=»YES!NOº¨                                  * 00059400
*                  is an optional keyword input that specifies        * 00059500
*                  whether or not the data, if there is any, will be  * 00059600
*                  read for NAME. If ReturnData is not specified then * 00059700
*                  it will default to RETURNDATA=YES.                 * 00059800
*                                                                     * 00059900
*                  DEFAULT: YES                                       * 00060000
*                                                                     * 00060100
*                                                                     * 00060200
*                  RETURNDATA=YES                                     * 00060300
*                      indicates that the data will be read.          * 00060400
*                                                                     * 00060500
*                                                                     * 00060600
*                  RETURNDATA=NO                                      * 00060700
*                      indicates that for structures allocated in     * 00060800
*                      CFLEVEL=4 or higher coupling facilities the    * 00060900
*                      data entry read will be suppressed.  Adjunct   * 00061000
*                      data, if it exists and ADJAREA is specified,   * 00061100
*                      will be returned.  For structures allocated in * 00061200
*                      CFLEVEL=3 or lower coupling facilities         * 00061300
*                      RETURNDATA is ignored.                         * 00061400
*                                                                     * 00061500
*                      If ADJAREA is specified and is supported by    * 00061600
*                      the structure then the CaaAdjareaValid bit in  * 00061700
*                      the ANSAREA will be set to '1' if the adjunct  * 00061800
*                      data was returned and '0' if the adjunct data  * 00061900
*                      did not exist.                                 * 00062000
*                                                                     * 00062100
*                                                                     * 00062200
*                                                                     * 00062300
*                                                                     * 00062400
*                                                                     * 00062500
*                                                                     * 00062600
*              ÝAXIOVERRIDE=»xaxioverride!0º¨                         * 00062700
*                  is the name (RS-type), or address in register      * 00062800
*                  (2)-(12), of an optional byte input which          * 00062900
*                  indicates whether the asynchronous                 * 00063000
*                  cross-invalidation control setting of              * 00063100
*                  IxlConnAsyncXiYes (1) for the connection           * 00063200
*                  identified by CONTOKEN should be overridden for    * 00063300
*                  this specific READ_DATA request.                   * 00063400
*                                                                     * 00063500
*                  A value of 0 (IxlCacheAXiOverrideNo) indicates     * 00063600
*                  that the asynchronous cross-invalidation control   * 00063700
*                  for the connection as specified on the IXLCONN     * 00063800
*                  invocation should be used for the operation        * 00063900
*                  request.                                           * 00064000
*                                                                     * 00064100
*                  A value of 1 (IxlCacheAXiOverrideYes) indicates    * 00064200
*                  that the ASYNCXI specification of                  * 00064300
*                  IxlConnAsyncXiYes (1) by the connector on the      * 00064400
*                  IXLCONN invocation should be overridden for this   * 00064500
*                  request only.  Cross-invalidations (if any)        * 00064600
*                  generated by this request will be processed        * 00064700
*                  synchronously to the completion of the request.    * 00064800
*                                                                     * 00064900
*                  Any other specified value will have the same       * 00065000
*                  behavior as specifying a value of 0                * 00065100
*                  (IxlCacheAXiOverrideNo).                           * 00065200
*                                                                     * 00065300
*                  DEFAULT: 0                                         * 00065400
*                                                                     * 00065500
*                                                                     * 00065600
*                                                                     * 00065700
*          REQUEST=WRITE_DATA                                         * 00065800
*              requests that subsystem data be written from the       * 00065900
*              storage locations specified by BUFFER or BUFLIST and   * 00066000
*              ADJAREA to the entry specified by NAME.  For           * 00066100
*              structures allocated in CFLEVEL=3 or lower coupling    * 00066200
*              facilities BUFFER or BUFLIST is required and ELEMNUM   * 00066300
*              must be 1 or greater.  For structures allocated in     * 00066400
*              CFLEVEL=4 or higher coupling facilities when           * 00066500
*              CHANGED=YES BUFFER or BUFLIST is required and ELEMNUM  * 00066600
*              must be 1 or greater; when CHANGED=NO neither BUFFER   * 00066700
*              nor BUFLIST is required and ELEMNUM may be 0 or        * 00066800
*              greater.                                               * 00066900
*                                                                     * 00067000
*              The entry is assigned to the storage class specified   * 00067100
*              by STGCLASS, superceding any previously specified      * 00067200
*              storage class for NAME.                                * 00067300
*                                                                     * 00067400
*              The size of an existing entry may be altered by        * 00067500
*              specifying an ELEMNUM value which is different than    * 00067600
*              the ELEMNUM value used when the entry was created.     * 00067700
*              When the amount of space indicated by ELEMNUM is       * 00067800
*              greater than the amount of data specified for BUFFER   * 00067900
*              or BUFLIST, or 0 when neither BUFFER nor BUFLIST is    * 00068000
*              specified, then the entry will be padded with zeros.   * 00068100
*                                                                     * 00068200
*              When changed subsystem data is successfully written    * 00068300
*              then the sum of changed and locked for cast-out        * 00068400
*              entries in the storage class and the total number of   * 00068500
*              data elements for the cast-out class to which the      * 00068600
*              entry is assigned is returned in the answer area       * 00068700
*              specified by ANSAREA.  When WHENREG=NO was specified   * 00068800
*              and the request replaced a previously specified local  * 00068900
*              cache vector index for the entry the replaced index is * 00069000
*              returned in the answer area.  When a request fails due * 00069100
*              to the inability to obtain structure resources (e.g.,  * 00069200
*              directory entry or data entry), then the target        * 00069300
*              storage class number from which resources should have  * 00069400
*              been reclaimed is returned in the answer area.         * 00069500
*                                                                     * 00069600
*              Required keywords are NAME, ELEMNUM, STGCLASS, and     * 00069700
*              CONTOKEN.  For structures allocated in CFLEVEL=3 or    * 00069800
*              lower coupling facilities BUFFER or BUFLIST is         * 00069900
*              required.  For structures allocated in CFLEVEL=4 or    * 00070000
*              higher coupling facilities BUFFER or BUFLIST is        * 00070100
*              required when CHANGED=YES and optional when            * 00070200
*              CHANGED=NO.                                            * 00070300
*                                                                     * 00070400
*                                                                     * 00070500
*              ÝWHENREG=»YES!NOº                                      * 00070600
*                  is an optional keyword input that specifies        * 00070700
*                  whether or not user interest for the connection    * 00070800
*                  specified by CONTOKEN must previously have been    * 00070900
*                  registered for the entry.                          * 00071000
*                                                                     * 00071100
*                  DEFAULT: YES                                       * 00071200
*                                                                     * 00071300
*                                                                     * 00071400
*                  ÝWHENREG=YES¨                                      * 00071500
*                      indicates that the request should be processed * 00071600
*                      only when connection interest is already       * 00071700
*                      registered for NAME.  If VECTORINDEX is        * 00071800
*                      specified, and the connection specified by     * 00071900
*                      CONTOKEN does not have a registered interest   * 00072000
*                      in the entry with the specified vector index   * 00072100
*                      number, the request will be failed.  Note that * 00072200
*                      specification of VECTORINDEX in this context   * 00072300
*                      will be ignored unless the structure is        * 00072400
*                      allocated in a CFLEVEL=2 or higher CF.  If     * 00072500
*                      there is no currently registered interest for  * 00072600
*                      CONTOKEN the request will be failed.           * 00072700
*                                                                     * 00072800
*                                                                     * 00072900
*                  ÝWHENREG=NO                                        * 00073000
*                      indicates that user interest need not          * 00073100
*                      previously have been registered.  In this case * 00073200
*                      the WRITE_DATA will, if necessary, assign a    * 00073300
*                      directory entry for NAME, and furthermore, for * 00073400
*                      structures allocated in CFLEVEL=4 or lower     * 00073500
*                      coupling facilities, will register interest    * 00073600
*                      for the connection specified by CONTOKEN using * 00073700
*                      the local cache vector index specified by      * 00073800
*                      VECTORINDEX.  For structures allocated in      * 00073900
*                      CFLEVEL=5 or higher coupling facilities, user  * 00074000
*                      interest in the entry will not be registered   * 00074100
*                      for the connection specified by CONTOKEN if    * 00074200
*                      REGUSER=NO is specified. Care should be taken  * 00074300
*                      when using REGUSER=NO because preference to    * 00074400
*                      reclaiming is given to entries which have data * 00074500
*                      but no registered interest.  When registration * 00074600
*                      is performed, if connection interest is        * 00074700
*                      already registered then the specified          * 00074800
*                      VECTORINDEX replaces any previously specified  * 00074900
*                      local cache vector index for this CONTOKEN for * 00075000
*                      the entry.                                     * 00075100
*                                                                     * 00075200
*                      OLDNAME should be specified to deregister any  * 00075300
*                      outstanding interest for the specified local   * 00075400
*                      cache vector index for a different entry.      * 00075500
*                                                                     * 00075600
*                      For structures allocated in CFLEVEL=4 or lower * 00075700
*                      coupling facilities, VECTORINDEX is required   * 00075800
*                      for WHENREG=NO.                                * 00075900
*                                                                     * 00076000
*                      For structures allocated in CFLEVEL=5 or       * 00076100
*                      higher coupling facilities, VECTORINDEX is     * 00076200
*                      required when REGUSER=YES is either specified  * 00076300
*                      or selected by default.  VECTORINDEX is        * 00076400
*                      required when REGUSER=NO is specified along    * 00076500
*                      with OLDNAME and ignored if REGUSER=NO is      * 00076600
*                      specified without OLDNAME also being           * 00076700
*                      specified.                                     * 00076800
*                                                                     * 00076900
*                                                                     * 00077000
*                      ÝREGUSER=»YES!NOº¨                             * 00077100
*                          is an optional keyword input that          * 00077200
*                          specifies, for structures allocated in     * 00077300
*                          CFLEVEL=5 or higher coupling facilities,   * 00077400
*                          whether or not the request should register * 00077500
*                          connection interest in the entry.          * 00077600
*                                                                     * 00077700
*                          DEFAULT: YES                               * 00077800
*                                                                     * 00077900
*                                                                     * 00078000
*                          REGUSER=YES                                * 00078100
*                              indicates that connection interest     * 00078200
*                              registration will be performed.        * 00078300
*                                                                     * 00078400
*                                                                     * 00078500
*                          REGUSER=NO                                 * 00078600
*                              indicates that no connection interest  * 00078700
*                              registration will be performed.  Care  * 00078800
*                              should be taken when using REGUSER=NO  * 00078900
*                              because preference to reclaiming is    * 00079000
*                              given to entries which have data but   * 00079100
*                              no registered interest.                * 00079200
*                                                                     * 00079300
*                                                                     * 00079400
*                                                                     * 00079500
*                                                                     * 00079600
*                                                                     * 00079700
*                                                                     * 00079800
*                      ÝASSIGN=»YES!NOº                               * 00079900
*                          is an optional keyword input that          * 00080000
*                          specifies whether or not a directory entry * 00080100
*                          will be assigned for NAME if one does not  * 00080200
*                          currently exist.                           * 00080300
*                                                                     * 00080400
*                          DEFAULT: YES                               * 00080500
*                                                                     * 00080600
*                                                                     * 00080700
*                          ÝASSIGN=YES¨                               * 00080800
*                              indicates that a directory entry will  * 00080900
*                              be assigned.                           * 00081000
*                                                                     * 00081100
*                                                                     * 00081200
*                          ÝASSIGN=NO                                 * 00081300
*                              indicates that no directory entry will * 00081400
*                              be assigned (assignment suppression).  * 00081500
*                                                                     * 00081600
*                              ASSIGN=NO is only meaningful for cache * 00081700
*                              structures allocated in a CFLEVEL=9 or * 00081800
*                              higher coupling facility.              * 00081900
*                                                                     * 00082000
*                                                                     * 00082100
*                              ÝLOCALREGCNTL=»NO!YESº¨¨¨              * 00082200
*                                  is an optional keyword input that  * 00082300
*                                  specifies whether or not the       * 00082400
*                                  WRITE_DATA request should be       * 00082500
*                                  suppressed (write suppression)     * 00082600
*                                  when the user's connection (local  * 00082700
*                                  cache) is the only registered      * 00082800
*                                  interest in the directory entry    * 00082900
*                                  for NAME in the cache structure,   * 00083000
*                                  and no subsystem data for the      * 00083100
*                                  directory entry is cached.         * 00083200
*                                                                     * 00083300
*                                  LOCALREGCNTL=YES is only           * 00083400
*                                  meaningful when write requests are * 00083500
*                                  issued to cache structures         * 00083600
*                                  allocated in a coupling facility   * 00083700
*                                  that supports write suppression    * 00083800
*                                  based on local cache registration. * 00083900
*                                  If the cache structure is          * 00084000
*                                  allocated in a coupling facility   * 00084100
*                                  that does not support write        * 00084200
*                                  suppression based on local cache   * 00084300
*                                  registration, the WRITE_DATA       * 00084400
*                                  request will be performed as if    * 00084500
*                                  LOCALREGCNTL=NO was specified.     * 00084600
*                                                                     * 00084700
*                                  CHANGED=YES is required when       * 00084800
*                                  LOCALREGCNTL=YES is specified.     * 00084900
*                                                                     * 00085000
*                                  If LOCALREGCNTL=YES is requested   * 00085100
*                                  on a WRITE_DATA request for a      * 00085200
*                                  cache structure that is currently  * 00085300
*                                  in the system-managed Duplex       * 00085400
*                                  Established phase, the request for * 00085500
*                                  write suppression is ignored.      * 00085600
*                                  DEFAULT: NO                        * 00085700
*                                                                     * 00085800
*                                                                     * 00085900
*                                  LOCALREGCNTL=NO                    * 00086000
*                                      indicates that the WRITE_DATA  * 00086100
*                                      request will be performed      * 00086200
*                                      normally without write         * 00086300
*                                      suppression.                   * 00086400
*                                                                     * 00086500
*                                  LOCALREGCNTL=YES                   * 00086600
*                                      indicates to suppress the      * 00086700
*                                      WRITE_DATA request when the    * 00086800
*                                      user's connection is the only  * 00086900
*                                      registered interest in the     * 00087000
*                                      directory entry and the data   * 00087100
*                                      entry does not have cached     * 00087200
*                                      subsystem data.  When the      * 00087300
*                                      write operation is suppressed, * 00087400
*                                      the WRITE_DATA request will    * 00087500
*                                      complete with a return code    * 00087600
*                                      IxlRetCodeWarning, reason code * 00087700
*                                      IxlRsnCodeLocalRegWrtSuppress. * 00087800
*                                                                     * 00087900
*                                      When the subsystem data is not * 00088000
*                                      written to the cache           * 00088100
*                                      structure, the local cache     * 00088200
*                                      buffer contains the only valid * 00088300
*                                      copy of the subsystem data.    * 00088400
*                                      Hardening of the subsystem     * 00088500
*                                      data to permanent storage      * 00088600
*                                      should be performed to ensure  * 00088700
*                                      availability and successful    * 00088800
*                                      recovery of data in the event  * 00088900
*                                      of a failure.                  * 00089000
*                                                                     * 00089100
*                                      When issuing a WRITE_DATA      * 00089200
*                                      request using LOCALREGCNTL=YES * 00089300
*                                      to write data to a cache       * 00089400
*                                      structure that is in           * 00089500
*                                      user-managed duplex mode, the  * 00089600
*                                      following programming techique * 00089700
*                                      should be followed:            * 00089800
*                                                                     * 00089900
*                                                                     * 00090000
*                                      o   When using registration,   * 00090100
*                                          assignment or write        * 00090200
*                                          suppression protocols in   * 00090300
*                                          the primary structure of a * 00090400
*                                          user-managed duplexed      * 00090500
*                                          structure, unconditional   * 00090600
*                                          writes of changed data to  * 00090700
*                                          the secondary structure    * 00090800
*                                          specifying LOCALREGCNTL=NO * 00090900
*                                          should be performed after  * 00091000
*                                          successful write           * 00091100
*                                          operations to the primary  * 00091200
*                                          structure.  If the write   * 00091300
*                                          operation to the primary   * 00091400
*                                          structure resulted in the  * 00091500
*                                          write being suppressed,    * 00091600
*                                          then the write operation   * 00091700
*                                          should not be issued to    * 00091800
*                                          the secondary structure.   * 00091900
*                                                                     * 00092000
*                                                                     * 00092100
*                                                                     * 00092200
*                                                                     * 00092300
*                                                                     * 00092400
*                                                                     * 00092500
*                                                                     * 00092600
*                                                                     * 00092700
*                                                                     * 00092800
*                                                                     * 00092900
*                                                                     * 00093000
*                                                                     * 00093100
*                                                                     * 00093200
*                                                                     * 00093300
*                                                                     * 00093400
*                                                                     * 00093500
*              ÝVERSCOMP=»xverscomp!NO_VERSCOMPº                      * 00093600
*                  is the name (RS-type), or address in register      * 00093700
*                  (2)-(12), of an optional 8 character input which   * 00093800
*                  specifies a value to be compared to the version    * 00093900
*                  number of the designated entry.                    * 00094000
*                                                                     * 00094100
*                  VERSCOMP is only meaningful for structures         * 00094200
*                  allocated in CFLEVEL=5 or higher coupling          * 00094300
*                  facilities.                                        * 00094400
*                                                                     * 00094500
*                  If the condition specified by VERSCOMPTYPE is not  * 00094600
*                  met then the request is terminated with no         * 00094700
*                  resultant change to the structure.                 * 00094800
*                                                                     * 00094900
*                  Note that use of VERSCOMP is needed to ensure that * 00095000
*                  updates to the version number requested via the    * 00095100
*                  VERSUPDATE keyword are not processed multiple      * 00095200
*                  times as a result of internal request redrive      * 00095300
*                  logic affecting this request.                      * 00095400
*                                                                     * 00095500
*                  When VERSCOMP is requested along with a VERSUPDATE * 00095600
*                  to update the version number, then if the initial  * 00095700
*                  execution of the request succeeds, any subsequent  * 00095800
*                  internal redrive of the request will fail due to a * 00095900
*                  version number miscompare,  preventing             * 00096000
*                  unintentional multiple updates from occurring on   * 00096100
*                  the request.                                       * 00096200
*                                                                     * 00096300
*                  Conversely, if the initial execution of the        * 00096400
*                  request was unsuccessful, then any subsequent      * 00096500
*                  internal redrive of the request will be able to    * 00096600
*                  execute successfully and update the version number * 00096700
*                  only once, as intended.                            * 00096800
*                                                                     * 00096900
*                  In either of these cases, if the request is        * 00097000
*                  internally redriven and experiences a version      * 00097100
*                  number miscompare on the redrive, a return/reason  * 00097200
*                  code of IxlRsnCodeStatusUnknown will be returned   * 00097300
*                  for the request.  This reflects the fact that it   * 00097400
*                  is not known whether the observed version number   * 00097500
*                  miscompare on this operation:                      * 00097600
*                                                                     * 00097700
*                                                                     * 00097800
*                  o   resulted from the version number update having * 00097900
*                      succeeded on the original issuance of the      * 00098000
*                      request (causing the miscompare on the         * 00098100
*                      redriven request), or                          * 00098200
*                                                                     * 00098300
*                  o   was present all along,  or                     * 00098400
*                                                                     * 00098500
*                  o   resulted from a version number update made by  * 00098600
*                      another request.                               * 00098700
*                                                                     * 00098800
*                                                                     * 00098900
*                  When this return/reason code is returned,  it is   * 00099000
*                  up to the user to determine whether or not the     * 00099100
*                  requested update has actually occurred, and take   * 00099200
*                  the appropriate recovery action.                   * 00099300
*                  DEFAULT: NO_VERSCOMP                               * 00099400
*                                                                     * 00099500
*                                                                     * 00099600
*                  ÝVERSCOMPTYPE=»EQUAL!LESSOREQUALº¨¨                * 00099700
*                      is an optional keyword input which specifies   * 00099800
*                      how the structure entry version number         * 00099900
*                      comparison is to be performed.                 * 00100000
*                                                                     * 00100100
*                      VERSCOMPTYPE is only meaningful for structures * 00100200
*                      allocated in CFLEVEL=5 or higher coupling      * 00100300
*                      facilities.                                    * 00100400
*                                                                     * 00100500
*                      DEFAULT: EQUAL                                 * 00100600
*                                                                     * 00100700
*                                                                     * 00100800
*                      VERSCOMPTYPE=EQUAL                             * 00100900
*                          The version number for the structure entry * 00101000
*                          must be equal to the value specified for   * 00101100
*                          VERSCOMP.                                  * 00101200
*                                                                     * 00101300
*                                                                     * 00101400
*                      VERSCOMPTYPE=LESSOREQUAL                       * 00101500
*                          The version number for the structure entry * 00101600
*                          must be less than or equal to the value    * 00101700
*                          specified for VERSCOMP.                    * 00101800
*                                                                     * 00101900
*                                                                     * 00102000
*                                                                     * 00102100
*                                                                     * 00102200
*                                                                     * 00102300
*                                                                     * 00102400
*                                                                     * 00102500
*                                                                     * 00102600
*              ÝVERSUPDATE=»NONE!INC!DEC!SETº¨                        * 00102700
*                  is an optional keyword input that specifies how    * 00102800
*                  the entry version number will be updated or, for   * 00102900
*                  those cases where an entry is created,             * 00103000
*                  initialized.                                       * 00103100
*                                                                     * 00103200
*                  VERSUPDATE is only meaningful for structures       * 00103300
*                  allocated in CFLEVEL=5 or higher coupling          * 00103400
*                  facilities.                                        * 00103500
*                                                                     * 00103600
*                  DEFAULT: NONE                                      * 00103700
*                                                                     * 00103800
*                                                                     * 00103900
*                  ÝVERSUPDATE=NONE¨                                  * 00104000
*                      The version number is not updated.             * 00104100
*                                                                     * 00104200
*                      On a request that causes an entry to be        * 00104300
*                      created the version number for the created     * 00104400
*                      entry is set to contain all binary zeros.      * 00104500
*                                                                     * 00104600
*                                                                     * 00104700
*                  ÝVERSUPDATE=INC¨                                   * 00104800
*                      The version number will be incremented.        * 00104900
*                                                                     * 00105000
*                      On a request that causes an entry to be        * 00105100
*                      created the version number for the created     * 00105200
*                      entry is set to contain all binary zeros,      * 00105300
*                      except for the low order bit which is set to   * 00105400
*                      one.                                           * 00105500
*                                                                     * 00105600
*                      Note that internal request redrive logic may   * 00105700
*                      cause an INC request to increment the version  * 00105800
*                      number more than once.  If it is necessary to  * 00105900
*                      ensure that this kind of multiple increment    * 00106000
*                      does not occur,  version number comparison     * 00106100
*                      must also be requested.  See the description   * 00106200
*                      of the VERSCOMP keyword.                       * 00106300
*                                                                     * 00106400
*                  ÝVERSUPDATE=DEC¨                                   * 00106500
*                      The version number will be decremented.        * 00106600
*                                                                     * 00106700
*                      On a request that causes an entry to be        * 00106800
*                      created the version number for the created     * 00106900
*                      entry is set to contain all binary ones.       * 00107000
*                                                                     * 00107100
*                      Note that internal request redrive logic may   * 00107200
*                      cause a DEC request to decrement the version   * 00107300
*                      number more than once.  If it is necessary to  * 00107400
*                      ensure that this kind of multiple decrement    * 00107500
*                      does not occur,  version number comparison     * 00107600
*                      must also be requested.  See the description   * 00107700
*                      of the VERSCOMP keyword.                       * 00107800
*                                                                     * 00107900
*                  ÝVERSUPDATE=SET                                    * 00108000
*                      The version number will be set to the value    * 00108100
*                      specified by NEWVERS, including the case where * 00108200
*                      an entry is created.                           * 00108300
*                                                                     * 00108400
*                      Note that internal request redrive logic may   * 00108500
*                      cause a SET request to set the version number  * 00108600
*                      more than once.  If it is necessary to ensure  * 00108700
*                      that this kind of multiple set does not occur, * 00108800
*                      version number comparison must also be         * 00108900
*                      requested.  See the description of the         * 00109000
*                      VERSCOMP keyword.                              * 00109100
*                                                                     * 00109200
*                                                                     * 00109300
*                      NEWVERS=xnewvers¨                              * 00109400
*                          is the name (RS-type), or address in       * 00109500
*                          register (2)-(12), of a required 8         * 00109600
*                          character input which specifies a value    * 00109700
*                          for the entry version number.              * 00109800
*                                                                     * 00109900
*                          DEFAULT: NO_NEWVERS                        * 00110000
*                                                                     * 00110100
*                                                                     * 00110200
*                                                                     * 00110300
*                                                                     * 00110400
*                                                                     * 00110500
*                                                                     * 00110600
*                                                                     * 00110700
*                                                                     * 00110800
*              ÝCHANGED=»NO!YESº¨                                     * 00110900
*                  is an optional keyword input that specifies the    * 00111000
*                  changed status of the subsystem data being         * 00111100
*                  written.  The directory entry will be updated to   * 00111200
*                  reflect this status.                               * 00111300
*                                                                     * 00111400
*                  DEFAULT: NO                                        * 00111500
*                                                                     * 00111600
*                                                                     * 00111700
*                  ÝCHANGED=NO                                        * 00111800
*                      indicates the data is unchanged.  In this case * 00111900
*                      if subsystem data is already cached it must be * 00112000
*                      unchanged.  WRITE_DATA cannot be used to       * 00112100
*                      replace changed subsystem data with unchanged  * 00112200
*                      data.  For structures allocated in CFLEVEL=4   * 00112300
*                      or higher coupling facilities, ELEMNUM=0 is    * 00112400
*                      valid and BUFFER and BUFLIST are optional when * 00112500
*                      CHANGED=NO.                                    * 00112600
*                                                                     * 00112700
*                                                                     * 00112800
*                      ÝCROSSINVAL=»NO!YESº¨                          * 00112900
*                          is an optional keyword input that          * 00113000
*                          specifies whether or not cross-invalidate  * 00113100
*                          processing should be performed.            * 00113200
*                                                                     * 00113300
*                          DEFAULT: NO                                * 00113400
*                                                                     * 00113500
*                                                                     * 00113600
*                          CROSSINVAL=NO                              * 00113700
*                              indicates that all connections with    * 00113800
*                              registered interest in the entry       * 00113900
*                              should remain registered, and that a   * 00114000
*                              cross-invalidate should not be         * 00114100
*                              performed against the local caches.    * 00114200
*                                                                     * 00114300
*                                                                     * 00114400
*                          CROSSINVAL=YES                             * 00114500
*                              Indicates, with the exception of the   * 00114600
*                              connection specified by CONTOKEN, that * 00114700
*                              all connections with registered        * 00114800
*                              interest in the entry have interest    * 00114900
*                              deregistered and a cross-invalidate    * 00115000
*                              performed against their local caches.  * 00115100
*                                                                     * 00115200
*                                                                     * 00115300
*                                                                     * 00115400
*                                                                     * 00115500
*                                                                     * 00115600
*                                                                     * 00115700
*                      ÝGETCOLOCK=»NO!YESº¨                           * 00115800
*                          is an optional keyword input that          * 00115900
*                          specifies whether or not the castout lock  * 00116000
*                          should be obtained.                        * 00116100
*                                                                     * 00116200
*                          DEFAULT: NO                                * 00116300
*                                                                     * 00116400
*                                                                     * 00116500
*                          ÝGETCOLOCK=NO¨                             * 00116600
*                              indicates the castout lock should not  * 00116700
*                              be obtained.                           * 00116800
*                                                                     * 00116900
*                                                                     * 00117000
*                          ÝGETCOLOCK=YES                             * 00117100
*                              indicates the castout lock should be   * 00117200
*                              obtained.  Note that if the cast-out   * 00117300
*                              lock is already held from a previous   * 00117400
*                              WRITE_DATA request and the same        * 00117500
*                              CONTOKEN and PROCESSID is specified on * 00117600
*                              the GETCOLOCK request as was specified * 00117700
*                              on the previous WRITE_DATA request,    * 00117800
*                              the GETCOLOCK request will be          * 00117900
*                              accepted.                              * 00118000
*                                                                     * 00118100
*                                                                     * 00118200
*                                                                     * 00118300
*                              ÝPROCESSID=»xprocessid!NO_PROCESSIDº¨¨ * 00118400
*                                  ¨                                  * 00118500
*                                  is the name (RS-type), or address  * 00118600
*                                  in register (2)-(12), of an        * 00118700
*                                  optional byte input field that     * 00118800
*                                  contains a user defined process    * 00118900
*                                  identifier to be placed in the     * 00119000
*                                  cast-out lock along with the       * 00119100
*                                  connection identifier.             * 00119200
*                                                                     * 00119300
*                                  DEFAULT: NO_PROCESSID              * 00119400
*                                                                     * 00119500
*                                                                     * 00119600
*                                                                     * 00119700
*                                                                     * 00119800
*                                                                     * 00119900
*                                                                     * 00120000
*                                                                     * 00120100
*                  ÝCHANGED=YES                                       * 00120200
*                      indicates the data is changed and will be      * 00120300
*                      assigned to the specified COCLASS, superceding * 00120400
*                      any previously specified cast-out class for    * 00120500
*                      the entry.  Furthermore, with the exception of * 00120600
*                      the connection specified by CONTOKEN, all      * 00120700
*                      connections with registered interest in the    * 00120800
*                      entry have interest deregistered and a         * 00120900
*                      cross-invalidate performed against their local * 00121000
*                      caches. ELEMNUM must be greater than or equal  * 00121100
*                      to 1.                                          * 00121200
*                                                                     * 00121300
*                      COCLASS and one of BUFFER and BUFLIST are      * 00121400
*                      required keywords when CHANGED=YES.            * 00121500
*                                                                     * 00121600
*                                                                     * 00121700
*                      ÝPARITY=»xparity!00110000º¨                    * 00121800
*                          is the name (RS-type), or address in       * 00121900
*                          register (2)-(12), of an optional 8 bit    * 00122000
*                          input field that contains the parity bits  * 00122100
*                          for the subsystem data being written.  The * 00122200
*                          directory entry parity bits are updated    * 00122300
*                          only when CHANGED=YES is specified and the * 00122400
*                          initial value of the directory entry       * 00122500
*                          parity bits is null (i.e., B'11').         * 00122600
*                          Otherwise permissable parity bit values    * 00122700
*                          are ignored.  When a directory entry is    * 00122800
*                          created the parity bits are initialized to * 00122900
*                          the null value.                            * 00123000
*                                                                     * 00123100
*                          The bits at offsets 2 and 3 are the parity * 00123200
*                          bits.  Bits 0, 1, and 4-7 are ignored.     * 00123300
*                          The possible values for the parity bits    * 00123400
*                          are defined as follows:                    * 00123500
*                                                                     * 00123600
*                                                                     * 00123700
*                          o   00 - parity is zero.                   * 00123800
*                                                                     * 00123900
*                          o   01 - parity is one.                    * 00124000
*                                                                     * 00124100
*                          o   10 - undefined.  (Not allowed.)        * 00124200
*                                                                     * 00124300
*                          o   11 - null.  (The parity is unknown.)   * 00124400
*                                                                     * 00124500
*                                                                     * 00124600
*                                                                     * 00124700
*                          DEFAULT: 00110000                          * 00124800
*                                                                     * 00124900
*                                                                     * 00125000
*                                                                     * 00125100
*                                                                     * 00125200
*                      ÝUSERDATA=»xuserdata!NO_USERDATAº¨¨            * 00125300
*                          is the name (RS-type), or address in       * 00125400
*                          register (2)-(12), of an optional 8        * 00125500
*                          character input field that contains user   * 00125600
*                          defined information to be recorded in the  * 00125700
*                          directory entry for NAME.                  * 00125800
*                                                                     * 00125900
*                          If there was previously no cached          * 00126000
*                          subsystem data for NAME or the data was    * 00126100
*                          cached as unchanged then the directory     * 00126200
*                          entry is updated to reflect any specified  * 00126300
*                          USERDATA.  Otherwise USERDATA is ignored.  * 00126400
*                                                                     * 00126500
*                          DEFAULT: NO_USERDATA                       * 00126600
*                                                                     * 00126700
*                                                                     * 00126800
*                                                                     * 00126900
*                                                                     * 00127000
*                                                                     * 00127100
*                                                                     * 00127200
*                                                                     * 00127300
*                                                                     * 00127400
*              ELEMNUM=xelemnum                                       * 00127500
*                  is the name (RS-type), or address in register      * 00127600
*                  (2)-(12), of a required byte input specifying the  * 00127700
*                  number of elements in the entry data of a cache    * 00127800
*                  entry being written.                               * 00127900
*                                                                     * 00128000
*                  If the cache entry already exists and the number   * 00128100
*                  of elements specified by ELEMNUM is greater than   * 00128200
*                  the number of elements currently in the entry then * 00128300
*                  the entry will be expanded to the new size.        * 00128400
*                  Similarly, if the cache entry already exists and   * 00128500
*                  the number of elements specified by ELEMNUM is     * 00128600
*                  less than the number of elements currently in the  * 00128700
*                  entry then the entry will be contracted to the new * 00128800
*                  size.                                              * 00128900
*                                                                     * 00129000
*                  For structures allocated in CFLEVEL=0 coupling     * 00129100
*                  facilities ELEMNUM values must be in the range of  * 00129200
*                  1 to 16.  For structures allocated in coupling     * 00129300
*                  facilities with a CFLEVEL between 1 and 3          * 00129400
*                  inclusive ELEMNUM values must be in the range of 1 * 00129500
*                  to 255.  For structures allocated in coupling      * 00129600
*                  facilities with a CFLEVEL=4 or higher ELEMNUM      * 00129700
*                  values must be in the range of 0 to 255 where 0 is * 00129800
*                  only valid when CHANGED=NO.  ELEMNUM must also be  * 00129900
*                  less than or equal to the value returned in the    * 00130000
*                  connect answer area CONACACHEMAXELEMNUM field from * 00130100
*                  the IXLCONN invocation.                            * 00130200
*                                                                     * 00130300
*                                                                     * 00130400
*                                                                     * 00130500
*                                                                     * 00130600
*              ÝAXIOVERRIDE=»xaxioverride!0º¨                         * 00130700
*                  is the name (RS-type), or address in register      * 00130800
*                  (2)-(12), of an optional byte input which          * 00130900
*                  indicates whether the asynchronous                 * 00131000
*                  cross-invalidation control setting of              * 00131100
*                  IxlConnAsyncXiYes (1) for the connection           * 00131200
*                  identified by CONTOKEN should be overridden for    * 00131300
*                  this specific WRITE_DATA request.                  * 00131400
*                                                                     * 00131500
*                  A value of 0 (IxlCacheAXiOverrideNo) indicates     * 00131600
*                  that the asynchronous cross-invalidation control   * 00131700
*                  for the connection as specified on the IXLCONN     * 00131800
*                  invocation should be used for the operation        * 00131900
*                  request.                                           * 00132000
*                                                                     * 00132100
*                  A value of 1 (IxlCacheAXiOverrideYes) indicates    * 00132200
*                  that the ASYNCXI specification of                  * 00132300
*                  IxlConnAsyncXiYes (1) by the connector on the      * 00132400
*                  IXLCONN invocation should be overridden for this   * 00132500
*                  request only.  Cross-invalidations (if any)        * 00132600
*                  generated by this request will be processed        * 00132700
*                  synchronously to the completion of the request.    * 00132800
*                                                                     * 00132900
*                  Any other specified value will have the same       * 00133000
*                  behavior as specifying a value of 0                * 00133100
*                  (IxlCacheAXiOverrideNo).                           * 00133200
*                  DEFAULT: 0                                         * 00133300
*                                                                     * 00133400
*                                                                     * 00133500
*                                                                     * 00133600
*          REQUEST=WRITE_DATALIST                                     * 00133700
*              requests that subsystem data be written for a given    * 00133800
*              set of entries for the connection specified by         * 00133900
*              CONTOKEN.  The set of entries to be written to the     * 00134000
*              structure is specified via write-operation blocks  in  * 00134100
*              the BUFFER or BUFLIST storage area.  STARTINDEX and    * 00134200
*              ENDINDEX determine the set of write-operation blocks   * 00134300
*              provided by the user in the storage locations          * 00134400
*              specified by BUFFER or BUFLIST that will be processed  * 00134500
*              by the command. The write-operation blocks in the      * 00134600
*              storage locations specified by BUFFER or BUFLIST are   * 00134700
*              numbered starting with 1.  When BUFFER is specified, 1 * 00134800
*              to 256 write-operation blocks can be provided by the   * 00134900
*              user. When BUFLIST is specified, 1 to 16               * 00135000
*              write-operation blocks can be provided by the user.    * 00135100
*              Valid STARTINDEX and ENDINDEX values are 1-origin.     * 00135200
*              DATAOFFSET will contain the offset in 256-byte         * 00135300
*              increments of the first data area in the BUFFER or     * 00135400
*              BUFLIST storage area.                                  * 00135500
*                                                                     * 00135600
*              The format of the Write-operation block is described   * 00135700
*              by the IXLYWOB mapping macro.                          * 00135800
*                                                                     * 00135900
*              The WRITE_DATALIST request type is valid only for a    * 00136000
*              structure allocated in a CFLEVEL=12 or higher coupling * 00136100
*              facility.                                              * 00136200
*                                                                     * 00136300
*              The name of the entry, the data area size in terms of  * 00136400
*              the number of elements, and storage class must be      * 00136500
*              specified in the corresponding write-operation block.  * 00136600
*                                                                     * 00136700
*              Each write-operation block in the input array of       * 00136800
*              write-operation blocks has a one-to-one correspondence * 00136900
*              with a write-operation response block returned in the  * 00137000
*              WORBAREA. The write-operation response blocks are      * 00137100
*              returned in an array.                                  * 00137200
*                                                                     * 00137300
*              For each write-operation block processed, the          * 00137400
*              write-operation response block will contain the        * 00137500
*              castout count for the castout class to which data was  * 00137600
*              just written, total changed count for the storage      * 00137700
*              class to which data was just written, and the          * 00137800
*              invalidated local cache vector index, if any.  Also    * 00137900
*              returned in the answer area specified by ANSAREA is    * 00138000
*              the invalidated local cache validity vector.           * 00138100
*                                                                     * 00138200
*              The format of the Write-operation response block is    * 00138300
*              described by the IXLYWORB mapping macro.               * 00138400
*                                                                     * 00138500
*              The suppress registration indicator in the             * 00138600
*              write-operation block should be set if the user does   * 00138700
*              not wish to register interest in the entry. When       * 00138800
*              registration is to be performed, a vector index should * 00138900
*              be specified in the write operation block.  When       * 00139000
*              registration is performed, if connection interest is   * 00139100
*              already registered then the specified vector index     * 00139200
*              replaces any previously specified local cache vector   * 00139300
*              index for this CONTOKEN for the entry.                 * 00139400
*                                                                     * 00139500
*              Oldname should be specified in the write-operation     * 00139600
*              block to deregister any outstanding interest for the   * 00139700
*              specified local cache vector index for a different     * 00139800
*              entry. If both name and oldname are specified in the   * 00139900
*              corresponding write-operation block, the name and      * 00140000
*              oldname are not equal, and the name replacement        * 00140100
*              control indicator is set, any registered interest for  * 00140200
*              the specified local cache vector index for the entry   * 00140300
*              designated by the oldname will be deregistered prior   * 00140400
*              to registering interest for the named entry.           * 00140500
*                                                                     * 00140600
*              If the assignment suppression control indicator in the * 00140700
*              write-operation block is set, no directory entry will  * 00140800
*              be assigned and the write operation will be suppressed * 00140900
*              if the entry does not exist. If the assignment         * 00141000
*              suppression control indicator is not set, a directory  * 00141100
*              entry will be assigned for the named entry and the     * 00141200
*              write will be performed if the entry does not exist.   * 00141300
*                                                                     * 00141400
*              If LOCALREGCNTL=YES is specified, and the assignment   * 00141500
*              suppression control indicator and change control       * 00141600
*              indicator in the write-operation block are set, the    * 00141700
*              write operation will be suppressed when the user's     * 00141800
*              connection is the only registered interest in the data * 00141900
*              item for WOB_NAME in the cache structure, and no       * 00142000
*              subsystem data for the data item is cached.            * 00142100
*                                                                     * 00142200
*              If LOCALREGCNTL=YES is requested on a WRITE_DATALIST   * 00142300
*              request for a cache structure that is currently in the * 00142400
*              system-managed Duplex Established phase, write         * 00142500
*              suppression is ignored.                                * 00142600
*                                                                     * 00142700
*              If the change control indicator in the write-operation * 00142800
*              block is set, the entry will be written as changed and * 00142900
*              assigned to the specified cast-out class in the        * 00143000
*              write-operation block. Furthermore, with the exception * 00143100
*              of the connection specified by CONTOKEN, all           * 00143200
*              connections with registered interest in the entry have * 00143300
*              interest deregistered and a cross-invalidate performed * 00143400
*              against their local caches. The elemnum specification  * 00143500
*              in the write-operation block must be greater than or   * 00143600
*              equal to 1.                                            * 00143700
*                                                                     * 00143800
*              If the change control indicator is not set and the     * 00143900
*              cross-invalidate control indication is set, with the   * 00144000
*              exception of the connection specified by CONTOKEN, all * 00144100
*              connections with registered interest in the entry will * 00144200
*              have interest deregistered and a cross-invalidate      * 00144300
*              performed against their local caches.                  * 00144400
*                                                                     * 00144500
*              In order to obtain the cast-out lock, the user must    * 00144600
*              have the get cast-out lock control set and the change  * 00144700
*              control indicator must not be set in the               * 00144800
*              write-operation block.  Optionally the cast-out        * 00144900
*              processid can be specified in the write-operation      * 00145000
*              block to specify a user defined process identifier to  * 00145100
*              be placed in the cast-out lock along with the          * 00145200
*              connection identifier.                                 * 00145300
*                                                                     * 00145400
*              When the change control indicator is set and the get   * 00145500
*              cast-out lock control indicator is set in the          * 00145600
*              write-operation block, the data is not written, the    * 00145700
*              cast-out lock is not obtained and the index of the     * 00145800
*              failing write-operation block is returned in the       * 00145900
*              ANSAREA. None of the specified write-operation blocks  * 00146000
*              were processed. (Processing of the entire command was  * 00146100
*              suppressed).                                           * 00146200
*                                                                     * 00146300
*              If the comparative version number along with the       * 00146400
*              version comparison request type are specified in the   * 00146500
*              write-operation block, version numbers will be         * 00146600
*              compared after the deregistration operation is         * 00146700
*              performed for this write-operation block. If           * 00146800
*              version-number comparison is requested and the name is * 00146900
*              assigned and the version number comparison is          * 00147000
*              successful, the data will be written. If the name is   * 00147100
*              assigned and the version number comparison fails, the  * 00147200
*              data is not written, the version number from the       * 00147300
*              directory entry, the index of the write-operation      * 00147400
*              block that failed, the invalidated local cache         * 00147500
*              validity vector, and the offset in the data block of   * 00147600
*              the data area for the write-operation block being      * 00147700
*              processed is returned in the ANSAREA and the           * 00147800
*              write-operation response block returned is set to      * 00147900
*              zero. All prior write-operation blocks were processed. * 00148000
*                                                                     * 00148100
*              When the change control indicator is set and an        * 00148200
*              invalid cast-out class is specified in the             * 00148300
*              write-operation block, the data is not written, the    * 00148400
*              index of the write-operation block that failed, the    * 00148500
*              invalidated local cache validity vector, and the       * 00148600
*              offset in the data block of the data area for the      * 00148700
*              write-operation block being processed is returned in   * 00148800
*              the ANSAREA and the write-operation response block     * 00148900
*              returned is set to zero. All prior write-operation     * 00149000
*              blocks were processed.                                 * 00149100
*                                                                     * 00149200
*              When the change control indicator is set and invalid   * 00149300
*              parity bits are specified in the write-operation       * 00149400
*              block, the data is not written, the index of the       * 00149500
*              write-operation block that failed, the invalidated     * 00149600
*              local cache validity vector, and the offset in the     * 00149700
*              data block of the data area for the write-operation    * 00149800
*              block being processed is returned in the ANSAREA and   * 00149900
*              the write-operation response block returned is set to  * 00150000
*              zero. All prior write-operation blocks were processed. * 00150100
*                                                                     * 00150200
*              When the change control indicator is not set in the    * 00150300
*              write-operation block and data is already cached, it   * 00150400
*              must be cached as unchanged.  If the entry is already  * 00150500
*              marked as changed or locked for cast-out, the data is  * 00150600
*              not written, the index of the write-operation block    * 00150700
*              that failed, the changed indicator, the castout lock   * 00150800
*              state, the castout lock value, the local cache vector  * 00150900
*              index, the invalidated local cache validity vector,    * 00151000
*              and the offset in the data block of the data area for  * 00151100
*              the write-operation block being processed is returned  * 00151200
*              in the ANSAREA and the write-operation response block  * 00151300
*              returned is set to zero. All prior write-operation     * 00151400
*              blocks were processed.                                 * 00151500
*                                                                     * 00151600
*              If an invalid data-area size is specified in the       * 00151700
*              write-operation block, the data is not written, the    * 00151800
*              index of the write-operation block that failed, the    * 00151900
*              invalidated local cache validity vector, and the       * 00152000
*              offset in the data block of the data area for the      * 00152100
*              write-operation block being processed is returned in   * 00152200
*              the ANSAREA and the write-operation response block     * 00152300
*              returned is set to zero. All prior write-operation     * 00152400
*              blocks were processed.                                 * 00152500
*                                                                     * 00152600
*              If an invalid storage class is specified in the        * 00152700
*              write-operation block, the data is not written, the    * 00152800
*              index of the write-operation block that failed, the    * 00152900
*              invalidated local cache validity vector, and the       * 00153000
*              offset in the data block of the data area for the      * 00153100
*              write-operation block being processed is returned in   * 00153200
*              the ANSAREA and the write-operation response block     * 00153300
*              returned is set to zero. All prior write-operation     * 00153400
*              blocks were processed.                                 * 00153500
*                                                                     * 00153600
*              When an invalid local cache vector index is specified  * 00153700
*              in the write-operation block, the data is not written  * 00153800
*              and the index of the write-operation block containing  * 00153900
*              the invalid local cache vector index is returned in    * 00154000
*              the ANSAREA. None of the specified write-operation     * 00154100
*              blocks were processed (processing of the entire        * 00154200
*              command was suppressed).                               * 00154300
*                                                                     * 00154400
*              When the request fails due to the inability to obtain  * 00154500
*              structure resources from the storage class specified   * 00154600
*              in the write-operation block, the data is not written, * 00154700
*              the index of the write-operation block that failed,    * 00154800
*              the invalidated local cache validity vector, the       * 00154900
*              offset in the data block of the data area for the      * 00155000
*              write-operation block being processed and the target   * 00155100
*              storage class number from which resources could not be * 00155200
*              reclaimed is returned in the ANSAREA and the           * 00155300
*              write-operation response block returned is set to      * 00155400
*              zero. All prior write-operation blocks were processed. * 00155500
*                                                                     * 00155600
*              When the ElemNum specified in the write-operation      * 00155700
*              block does not match the size of the data block        * 00155800
*              corresponding to the write-operation block being       * 00155900
*              processed, the data is not written, the index of the   * 00156000
*              write-operation block that failed, the invalidated     * 00156100
*              local cache validity vector, and the offset in the     * 00156200
*              data block of the data area for the write-operation    * 00156300
*              block being processed is returned in the ANSAREA and   * 00156400
*              the write-operation response block returned is set to  * 00156500
*              zero. All prior write-operation blocks were processed. * 00156600
*                                                                     * 00156700
*              When the entry does not exist and the assignment       * 00156800
*              suppression control indicator is set, the data is not  * 00156900
*              written, the index of the write-operation block that   * 00157000
*              failed, the invalidated local cache validity vector,   * 00157100
*              and the offset in the data block of the data area for  * 00157200
*              the write-operation block being processed is returned  * 00157300
*              in the ANSAREA and the write-operation response block  * 00157400
*              returned is set to zero. All prior write-operation     * 00157500
*              blocks were processed.                                 * 00157600
*                                                                     * 00157700
*              When LOCALREGCNTL=YES is specified and the assignment  * 00157800
*              suppression control indicator is set, the indication   * 00157900
*              as to whether a write operation was suppressed for a   * 00158000
*              WOB can be found in the write suppressed vector        * 00158100
*              returned in the CAAWRITESUPPRESSVECTOR field of the    * 00158200
*              answer area. The CAAWRITESUPPRESSVECTOR should be      * 00158300
*              processed whenever the WRITE_DATALIST request          * 00158400
*              completes with a return code of IXLRETCODEOK or the    * 00158500
*              return and reason code indicates that the              * 00158600
*              WRITE_DATALIST request completed prematurely and all   * 00158700
*              the write operations prior to the premature completion * 00158800
*              were processed.                                        * 00158900
*                                                                     * 00159000
*              When a model-dependent timeout occurs or the WORBAREA  * 00159100
*              is full prior to completing the processing of the      * 00159200
*              requested write-operation blocks, the write-operation  * 00159300
*              block index returned in the ANSAREA contains the index * 00159400
*              of the first unprocessed write-operation block. Also   * 00159500
*              returned in the ANSAREA is the offset in the data      * 00159600
*              block of the data area for the next write-operation    * 00159700
*              block to be processed and the invalidated local cache  * 00159800
*              validity vector.  All prior write-operation blocks     * 00159900
*              were processed.  To continue processing the desired    * 00160000
*              write-operation blocks, invoke the WRITE_DATALIST      * 00160100
*              command specifying the write-operation block index and * 00160200
*              the offset of the next data area returned in the       * 00160300
*              ANSAREA as the STARTINDEX and the DATAOFFSET.          * 00160400
*                                                                     * 00160500
*              Required keywords are BUFFER, STARTINDEX, ENDINDEX,    * 00160600
*              WORBAREA, DATAOFFSET, and CONTOKEN.                    * 00160700
*                                                                     * 00160800
*                                                                     * 00160900
*              STARTINDEX=xstartindex                                 * 00161000
*                  is the name (RS-type), or address in register      * 00161100
*                  (2)-(12), of a required halfword input field that  * 00161200
*                  contains the index into the write-operation blocks * 00161300
*                  in the storage area specified by BUFFER or BUFLIST * 00161400
*                  of the first write-operation block to be           * 00161500
*                  processed.  Note that the WRITE_DATALIST command   * 00161600
*                  will treat the first write-operation block in the  * 00161700
*                  input array as index 1.                            * 00161800
*                                                                     * 00161900
*                                                                     * 00162000
*                                                                     * 00162100
*                                                                     * 00162200
*              ENDINDEX=xendindex                                     * 00162300
*                  is the name (RS-type), or address in register      * 00162400
*                  (2)-(12), of a required halfword input field that  * 00162500
*                  contains the index into the write-operation blocks * 00162600
*                  in the storage area specified by BUFFER or BUFLIST * 00162700
*                  of the last write-operation block to be processed. * 00162800
*                  When BUFFER is specified, The ENDINDEX must be     * 00162900
*                  greater than or equal to the value specified for   * 00163000
*                  STARTINDEX, but less than or equal to 256.         * 00163100
*                                                                     * 00163200
*                  When BUFLIST is specified, The ENDINDEX must be    * 00163300
*                  greater than or equal to the value specified for   * 00163400
*                  STARTINDEX, but less than or equal to 16.  The     * 00163500
*                  specified index must not imply a larger buffer     * 00163600
*                  size than the user has actually provided.          * 00163700
*                                                                     * 00163800
*                                                                     * 00163900
*                                                                     * 00164000
*                                                                     * 00164100
*              DATAOFFSET=xdataoffset                                 * 00164200
*                  is the name (RS-type), or address in register      * 00164300
*                  (2)-(12), of a required halfword input field that  * 00164400
*                  contains the offset in 256-byte increments into    * 00164500
*                  the data block in the storage area specified by    * 00164600
*                  BUFFER or BUFLIST of the first data area to be     * 00164700
*                  processed (the data block corresponding to the     * 00164800
*                  write-operation block located by STARTINDEX).      * 00164900
*                                                                     * 00165000
*                  A value of 0 implies that there is no actual data  * 00165100
*                  being passed in the storage area specified by      * 00165200
*                  BUFFER or BUFLIST.  When this occurs, all WOBs     * 00165300
*                  have to specify an ElemNum of 0 to indicate that   * 00165400
*                  no data is being passed in to go along with these  * 00165500
*                  WOBs. If any WOB specifies an ElemNum other than   * 00165600
*                  0, the request will fail with a return code        * 00165700
*                  IxlRetCodeParmError, reason code                   * 00165800
*                  IxlRsnCodeBadElemNum.                              * 00165900
*                                                                     * 00166000
*                  The value of the DATAOFFSET keyword multiplied by  * 00166100
*                  256 must equal a value that is an integral         * 00166200
*                  multiple of the data element size in use for the   * 00166300
*                  structure.                                         * 00166400
*                                                                     * 00166500
*                                                                     * 00166600
*                                                                     * 00166700
*                                                                     * 00166800
*              WORBAREA=xworbarea                                     * 00166900
*                  is a required output.  It is the name (RS-type),   * 00167000
*                  or address in register (2)-(12), of a 192-byte     * 00167100
*                  virtual storage area, called the WORB area, in     * 00167200
*                  which the write-operation response block array     * 00167300
*                  will be placed.  The format of the WORB area is    * 00167400
*                  described by the IXLYWORB mapping macro.           * 00167500
*                                                                     * 00167600
*                                                                     * 00167700
*                                                                     * 00167800
*                                                                     * 00167900
*              ÝLOCALREGCNTL=»NO!YESº¨                                * 00168000
*                  is an optional keyword input that specifies        * 00168100
*                  whether or not the write operation requests        * 00168200
*                  represented by the write-operation blocks should   * 00168300
*                  be suppressed (write suppression) when the user's  * 00168400
*                  connection (local cache) is the only registered    * 00168500
*                  interest in the directory entry for WOB_NAME in    * 00168600
*                  the cache structure, and no subsystem data for the * 00168700
*                  directory entry is cached.                         * 00168800
*                                                                     * 00168900
*                  LOCALREGCNTL=YES is only meaningful when write     * 00169000
*                  operations are issued to cache structures          * 00169100
*                  allocated in a coupling facility that supports     * 00169200
*                  write suppression based on local cache             * 00169300
*                  registration.  If the cache structure is allocated * 00169400
*                  in a coupling facility that does not support write * 00169500
*                  suppression based on local cache registration, the * 00169600
*                  write operations will be performed as if           * 00169700
*                  LOCALREGCNTL=NO was specified.                     * 00169800
*                                                                     * 00169900
*                  If LOCALREGCNTL=YES is specified, the assignment   * 00170000
*                  suppression control indicator and change control   * 00170100
*                  indicator must be set in all the write-operation   * 00170200
*                  blocks in the provided WOB list.                   * 00170300
*                                                                     * 00170400
*                  When the subsystem data was not written to the     * 00170500
*                  cache structure, the local cache buffer contains   * 00170600
*                  the only valid copy of the subsystem data.         * 00170700
*                  Hardening of the subsystem data to permanent       * 00170800
*                  storage should be performed to ensure availability * 00170900
*                  and successful recovery of data in the event of a  * 00171000
*                  failure.                                           * 00171100
*                                                                     * 00171200
*                  Specifying LOCALREGCNTL=YES also indicates to the  * 00171300
*                  system that it may continue processing the next    * 00171400
*                  write-operation block provided in the BUFFER or    * 00171500
*                  BUFLIST storage area when:                         * 00171600
*                                                                     * 00171700
*                                                                     * 00171800
*                  o   a write operation is suppressed due to         * 00171900
*                      assignment suppression, or                     * 00172000
*                                                                     * 00172100
*                  o   a write operation is suppressed due to write   * 00172200
*                      suppression.                                   * 00172300
*                                                                     * 00172400
*                                                                     * 00172500
*                                                                     * 00172600
*                  If LOCALREGCNTL=YES is requested on a              * 00172700
*                  WRITE_DATALIST request for a cache structure that  * 00172800
*                  is currently in the system-managed Duplex          * 00172900
*                  Established phase, write suppression is ignored.   * 00173000
*                  DEFAULT: NO                                        * 00173100
*                                                                     * 00173200
*                                                                     * 00173300
*                  LOCALREGCNTL=NO                                    * 00173400
*                      indicates that the write operations will be    * 00173500
*                      performed normally without write suppression.  * 00173600
*                                                                     * 00173700
*                      If a write operation is suppressed due to      * 00173800
*                      assignment suppression, the data is not        * 00173900
*                      written, the index of the write-operation      * 00174000
*                      block that failed, and the offset in the data  * 00174100
*                      block of the data area for the write-operation * 00174200
*                      block being processed is returned in the       * 00174300
*                      ANSAREA.  The WRITE_DATALIST request fails     * 00174400
*                      with a return code IxlRetCodeParmError (08x)   * 00174500
*                      reason code IxlRsnCodeNoEntry (xxxx0825).  All * 00174600
*                      prior write-operation blocks were processed.   * 00174700
*                                                                     * 00174800
*                  LOCALREGCNTL=YES                                   * 00174900
*                      indicates to suppress the write operations     * 00175000
*                      when the user's connection is the only         * 00175100
*                      registered interest in a directory entry and   * 00175200
*                      the data entry does not have cached subsystem  * 00175300
*                      data.                                          * 00175400
*                                                                     * 00175500
*                      The CAAWRITESUPPRESSVECTOR in the ANSAREA      * 00175600
*                      indicates whether write-operation block write  * 00175700
*                      requests were suppressed during the            * 00175800
*                      WRITE_DATALIST request. Each bit represents a  * 00175900
*                      corresponding write-operation block in the     * 00176000
*                      storage area specified by BUFFER or BUFLIST    * 00176100
*                      for the WRITE_DATALIST request that specified  * 00176200
*                      LOCALREGCNTL=YES. The CAAWRITESUPPRESSVECTOR   * 00176300
*                      should be processed whenever the               * 00176400
*                      WRITE_DATALIST request completes with a return * 00176500
*                      code of IXLRETCODEOK or the return and reason  * 00176600
*                      code indicates that the WRITE_DATALIST request * 00176700
*                      completed prematurely and all the write        * 00176800
*                      operations prior to the premature completion   * 00176900
*                      were processed.                                * 00177000
*                                                                     * 00177100
*                      LOCALREGCNTL=YES is only meaningful when write * 00177200
*                      operations are issued to cache structures      * 00177300
*                      allocated in a coupling facility that supports * 00177400
*                      write suppression based on local cache         * 00177500
*                      registration.  If the cache structure is       * 00177600
*                      allocated in a coupling facility that does not * 00177700
*                      support write suppression based on local cache * 00177800
*                      registration, the write operations will be     * 00177900
*                      performed as if LOCALREGCNTL=NO was specified. * 00178000
*                                                                     * 00178100
*                      The assignment suppression control indicator   * 00178200
*                      and change control indicator must be set in    * 00178300
*                      each write-operation block when                * 00178400
*                      LOCALREGCNTL=YES is specified.                 * 00178500
*                                                                     * 00178600
*                      When issuing a WRITE_DATALIST request using    * 00178700
*                      LOCALREGCNTL=YES to write data to a cache      * 00178800
*                      structure that is in user-managed duplex mode, * 00178900
*                      the following programming technique should be  * 00179000
*                      followed:                                      * 00179100
*                                                                     * 00179200
*                                                                     * 00179300
*                      o   When using registration, assignment or     * 00179400
*                          write suppression protocols in the primary * 00179500
*                          structure of a user-managed duplexed       * 00179600
*                          structure, unconditional writes of changed * 00179700
*                          data to the secondary structure specifying * 00179800
*                          LOCALREGCNTL=NO on the WRITE_DATALIST      * 00179900
*                          request and WOB_ASC = '0'b in each         * 00180000
*                          write-operation block should be performed  * 00180100
*                          after successful write operations to the   * 00180200
*                          primary structure. If write operations to  * 00180300
*                          the primary structure resulted in the      * 00180400
*                          writes being suppressed, then those write  * 00180500
*                          operations should not be issued to the     * 00180600
*                          secondary structure                        * 00180700
*                                                                     * 00180800
*                          The storage area specified by BUFFER or    * 00180900
*                          BUFLIST that contains the write-operation  * 00181000
*                          blocks should be updated to remove         * 00181100
*                          write-operation blocks and corresponding   * 00181200
*                          data areas for write operations to the     * 00181300
*                          primary structure that were suppressed due * 00181400
*                          to assignment suppression or write         * 00181500
*                          suppression conditions. The                * 00181600
*                          CaaWriteSuppressVector in the ANSAREA      * 00181700
*                          indicates which, if any, write-operation   * 00181800
*                          block write requests were suppressed. Each * 00181900
*                          bit represents a corresponding             * 00182000
*                          write-operation block in the storage area  * 00182100
*                          specified by BUFFER or BUFLIST for the     * 00182200
*                          WRITE_DATALIST request that specified      * 00182300
*                          LOCALREGCNTL=YES.                          * 00182400
*                                                                     * 00182500
*                          The WRITE_DATALIST request should be       * 00182600
*                          issued to the secondary structure with the * 00182700
*                          updated BUFFER or BUFLIST and              * 00182800
*                          LOCALREGCNTL=NO so that write suppression  * 00182900
*                          is ignored.                                * 00183000
*                                                                     * 00183100
*                                                                     * 00183200
*                                                                     * 00183300
*                                                                     * 00183400
*                                                                     * 00183500
*                                                                     * 00183600
*                                                                     * 00183700
*                                                                     * 00183800
*              ÝAXIOVERRIDE=»xaxioverride!0º¨                         * 00183900
*                  is the name (RS-type), or address in register      * 00184000
*                  (2)-(12), of an optional byte input which          * 00184100
*                  indicates whether the asynchronous                 * 00184200
*                  cross-invalidation control setting of              * 00184300
*                  IxlConnAsyncXiYes (1) for the connection           * 00184400
*                  identified by CONTOKEN should be overridden for    * 00184500
*                  this specific WRITE_DATALIST request.              * 00184600
*                                                                     * 00184700
*                  A value of 0 (IxlCacheAXiOverrideNo) indicates     * 00184800
*                  that the asynchronous cross-invalidation control   * 00184900
*                  for the connection as specified on the IXLCONN     * 00185000
*                  invocation should be used for the operation        * 00185100
*                  request.                                           * 00185200
*                                                                     * 00185300
*                  A value of 1 (IxlCacheAXiOverrideYes) indicates    * 00185400
*                  that the ASYNCXI specification of                  * 00185500
*                  IxlConnAsyncXiYes (1) by the connector on the      * 00185600
*                  IXLCONN invocation should be overridden for this   * 00185700
*                  request only.  Cross-invalidations (if any)        * 00185800
*                  generated by this request will be processed        * 00185900
*                  synchronously to the completion of the request.    * 00186000
*                                                                     * 00186100
*                  Any other specified value will have the same       * 00186200
*                  behavior as specifying a value of 0                * 00186300
*                  (IxlCacheAXiOverrideNo).                           * 00186400
*                  DEFAULT: 0                                         * 00186500
*                                                                     * 00186600
*                                                                     * 00186700
*                                                                     * 00186800
*          REQUEST=REG_NAMELIST                                       * 00186900
*              requests that user interest be registered in a given   * 00187000
*              set of 1 to 32 entries for the connection specified by * 00187100
*              CONTOKEN.  The set of entries is specified via         * 00187200
*              registration blocks in the BUFFER storage area.  The   * 00187300
*              format of the registration block is described by the   * 00187400
*              IXLYCRRB mapping macro.  STARTINDEX  and ENDINDEX      * 00187500
*              determine the set of registration blocks provided by   * 00187600
*              the user in the BUFFER that will be processed by the   * 00187700
*              command.  The registration blocks in the BUFFER are    * 00187800
*              numbered starting with 1. Valid STARTINDEX and         * 00187900
*              ENDINDEX values are 1-origin.                          * 00188000
*                                                                     * 00188100
*              The REG_NAMELIST request type is valid only for a      * 00188200
*              structure allocated in a CFLEVEL=2 or higher coupling  * 00188300
*              facility.                                              * 00188400
*                                                                     * 00188500
*              The name of the entry and the local cache vector index * 00188600
*              to be used for the entry must be specified in the      * 00188700
*              corresponding registration block.  If connection       * 00188800
*              interest is already registered for the named entry,    * 00188900
*              then the specified local cache vector index replaces   * 00189000
*              any previously specified local cache vector index for  * 00189100
*              the connection and entry, and the old local cache      * 00189200
*              vector index for the entry, which was invalidated, is  * 00189300
*              returned in the NSBAREA.                               * 00189400
*                                                                     * 00189500
*              Storage class is a required input in a registration    * 00189600
*              block.  The entry is assigned to the storage class     * 00189700
*              specified in the corresponding registration block,     * 00189800
*              superceding any previously specified storage class for * 00189900
*              that entry.                                            * 00190000
*                                                                     * 00190100
*              If both name and old name are specified in the         * 00190200
*              corresponding registration block,  the name and old    * 00190300
*              name are not equal, and the name replacement control   * 00190400
*              indicator is set, any registered interest for the      * 00190500
*              specified local cache vector index for the entry       * 00190600
*              designated by the old name will be deregistered prior  * 00190700
*              to registering interest for the named entry.           * 00190800
*                                                                     * 00190900
*              If the assignment control indicator in the             * 00191000
*              registration block is set, a directory entry will be   * 00191100
*              assigned for the named entry if one does not currently * 00191200
*              exist.  If the assignment control indicator is not     * 00191300
*              set, no directory entry will be assigned if one does   * 00191400
*              not currently exist.                                   * 00191500
*                                                                     * 00191600
*              Each registration block in the input array of          * 00191700
*              registration blocks has a one-to-one correspondence    * 00191800
*              with a name-state block and an invalidated local cache * 00191900
*              vector index that is returned in the NSBAREA.  The     * 00192000
*              name-state blocks are returned in an array, as are the * 00192100
*              invalidated local cache vector indices.  The same      * 00192200
*              index is used to access corresponding elements in both * 00192300
*              arrays, as well as in the array of registration blocks * 00192400
*              provided as input.                                     * 00192500
*                                                                     * 00192600
*              For each registration block that was processed, the    * 00192700
*              name-state block returned will contain the changed     * 00192800
*              indicator, data-cached indicator, parity, castout lock * 00192900
*              state, invalidated local cache vector index indicator, * 00193000
*              registration-performed indicator, and for structures   * 00193100
*              allocated in coupling facilities with a CFLEVEL=4 or   * 00193200
*              higher the number of data elements.  If a valid local  * 00193300
*              cache vector index is replaced, the value of the       * 00193400
*              invalidated local cache vector index is returned in    * 00193500
*              the NSBAREA and the invalidated local cache vector     * 00193600
*              index indicator is set to one.                         * 00193700
*                                                                     * 00193800
*              When the assignment control indicator is off and the   * 00193900
*              entry name specified is not in the directory, the      * 00194000
*              name-state block returned is set to zero.              * 00194100
*                                                                     * 00194200
*              When the assignment control indicator is on and a      * 00194300
*              request fails due to the inability to obtain structure * 00194400
*              resources (e.g. directory entry), the registration     * 00194500
*              index returned in the ANSAREA indicates the            * 00194600
*              registration block for which the request failed.  All  * 00194700
*              prior registration blocks were processed.  The target  * 00194800
*              storage class number returned in the answer area       * 00194900
*              indicates the storage class from which resources could * 00195000
*              not be reclaimed.                                      * 00195100
*                                                                     * 00195200
*              When a model-dependent timeout occurs prior to         * 00195300
*              completing the processing of the requested             * 00195400
*              registration blocks, the registration index returned   * 00195500
*              in the ANSAREA contains the index of the first         * 00195600
*              unprocessed registration block.  All prior             * 00195700
*              registration blocks were processed.  To continue       * 00195800
*              processing the desired registration blocks, invoke the * 00195900
*              REG_NAMELIST command specifying the registration index * 00196000
*              returned in the ANSAREA as the STARTINDEX.             * 00196100
*                                                                     * 00196200
*              When an invalid storage class is specified in an input * 00196300
*              registration block, the index of the registration      * 00196400
*              block containing the invalid storage class is returned * 00196500
*              in the answer area.  All prior registration blocks     * 00196600
*              were processed.                                        * 00196700
*                                                                     * 00196800
*              When an invalid local cache vector index is specified  * 00196900
*              in an input registration block, the index of the       * 00197000
*              registration block containing the invalid local cache  * 00197100
*              vector index is returned in the answer area.  None of  * 00197200
*              the specified registration blocks were processed       * 00197300
*              (processing of the entire command was suppressed).     * 00197400
*                                                                     * 00197500
*              Required keywords are STARTINDEX, ENDINDEX, BUFFER,    * 00197600
*              NSBAREA, and CONTOKEN.                                 * 00197700
*                                                                     * 00197800
*                                                                     * 00197900
*              STARTINDEX=xstartindex                                 * 00198000
*                  is the name (RS-type), or address in register      * 00198100
*                  (2)-(12), of a required halfword input field that  * 00198200
*                  contains the index into the registration blocks in * 00198300
*                  the BUFFER storage area of the first registration  * 00198400
*                  block to be processed.  Note that the REG_NAMELIST * 00198500
*                  command will treat the first registration block in * 00198600
*                  the input array as index 1.                        * 00198700
*                                                                     * 00198800
*                                                                     * 00198900
*                                                                     * 00199000
*                                                                     * 00199100
*              ENDINDEX=xendindex                                     * 00199200
*                  is the name (RS-type), or address in register      * 00199300
*                  (2)-(12), of a required halfword input field that  * 00199400
*                  contains the index into the registration blocks in * 00199500
*                  the BUFFER storage area of the last registration   * 00199600
*                  block to be processed.  The specified index must   * 00199700
*                  be greater than or equal to the value specified    * 00199800
*                  for STARTINDEX, but less than or equal to 32.  The * 00199900
*                  specified index must not imply a larger buffer     * 00200000
*                  size than the user has actually provided.          * 00200100
*                                                                     * 00200200
*                                                                     * 00200300
*                                                                     * 00200400
*                                                                     * 00200500
*              NSBAREA=xnsbarea                                       * 00200600
*                  is a required output.  It is the name (RS-type),   * 00200700
*                  or address in register (2)-(12), of a 256-byte     * 00200800
*                  virtual storage area, called the NSB area, in      * 00200900
*                  which the name state block array and the array of  * 00201000
*                  invalidated local cache vector indices will be     * 00201100
*                  placed.  The format of the NSB area is described   * 00201200
*                  by the IXLYNSB mapping macro.                      * 00201300
*                                                                     * 00201400
*                                                                     * 00201500
*                                                                     * 00201600
*                                                                     * 00201700
*              ÝAXIOVERRIDE=»xaxioverride!0º¨                         * 00201800
*                  is the name (RS-type), or address in register      * 00201900
*                  (2)-(12), of an optional byte input which          * 00202000
*                  indicates whether the asynchronous                 * 00202100
*                  cross-invalidation control setting of              * 00202200
*                  IxlConnAsyncXiYes (1) for the connection           * 00202300
*                  identified by CONTOKEN should be overridden for    * 00202400
*                  this specific REG_NAMELIST request.                * 00202500
*                                                                     * 00202600
*                  A value of 0 (IxlCacheAXiOverrideNo) indicates     * 00202700
*                  that the asynchronous cross-invalidation control   * 00202800
*                  for the connection as specified on the IXLCONN     * 00202900
*                  invocation should be used for the operation        * 00203000
*                  request.                                           * 00203100
*                                                                     * 00203200
*                  A value of 1 (IxlCacheAXiOverrideYes) indicates    * 00203300
*                  that the ASYNCXI specification of                  * 00203400
*                  IxlConnAsyncXiYes (1) by the connector on the      * 00203500
*                  IXLCONN invocation should be overridden for this   * 00203600
*                  request only.  Cross-invalidations (if any)        * 00203700
*                  generated by this request will be processed        * 00203800
*                  synchronously to the completion of the request.    * 00203900
*                                                                     * 00204000
*                  Any other specified value will have the same       * 00204100
*                  behavior as specifying a value of 0                * 00204200
*                  (IxlCacheAXiOverrideNo).                           * 00204300
*                  DEFAULT: 0                                         * 00204400
*                                                                     * 00204500
*                                                                     * 00204600
*                                                                     * 00204700
*          REQUEST=CASTOUT_DATA                                       * 00204800
*              requests that the cast-out lock for the entry          * 00204900
*              specified by NAME be obtained on behalf of the         * 00205000
*              connection specified by CONTOKEN and the process       * 00205100
*              specified by PROCESSID, and that the directory entry   * 00205200
*              change bit be updated to indicate the entry contains   * 00205300
*              unchanged subsystem data.  The entry data is still     * 00205400
*              considered changed while the cast-out lock is held.    * 00205500
*              Furthermore, the subsystem data is retrieved from the  * 00205600
*              structure and placed in the storage locations          * 00205700
*              specified by BUFFER or BUFLIST and ADJAREA.            * 00205800
*                                                                     * 00205900
*              If the request completes successfully the parity bits  * 00206000
*              from the directory entry are returned in the answer    * 00206100
*              area specified by ANSAREA.  When BUFFER or BUFLIST is  * 00206200
*              specified the count of elements in the retrieved entry * 00206300
*              is also returned in the answer area.  When REGUSER=YES * 00206400
*              was specified and the request replaced a previously    * 00206500
*              specified local cache vector index for the entry the   * 00206600
*              replaced index is returned in the answer area.  If the * 00206700
*              cast-out lock cannot be obtained because another       * 00206800
*              connection or process currently holds it, the current  * 00206900
*              value of the castout lock is returned in the answer    * 00207000
*              area.                                                  * 00207100
*                                                                     * 00207200
*              Required keywords are NAME, one of BUFFER or BUFLIST,  * 00207300
*              and CONTOKEN.                                          * 00207400
*                                                                     * 00207500
*                                                                     * 00207600
*              ÝREGUSER=»NO!YESº¨                                     * 00207700
*                  is an optional keyword input that specifies        * 00207800
*                  whether or not the request should additionally     * 00207900
*                  register connection interest in the entry.         * 00208000
*                                                                     * 00208100
*                  DEFAULT: NO                                        * 00208200
*                                                                     * 00208300
*                                                                     * 00208400
*                  REGUSER=NO                                         * 00208500
*                      indicates that CASTOUT_DATA will not register  * 00208600
*                      connection interest.                           * 00208700
*                                                                     * 00208800
*                      For structures allocated in CFLEVEL=5 or       * 00208900
*                      higher coupling facilities, OLDNAME may be     * 00209000
*                      specified to deregister any outstanding        * 00209100
*                      interest for the specified local cache index   * 00209200
*                      for a different entry.  If OLDNAME is          * 00209300
*                      specified then VECTORINDEX is required.        * 00209400
*                                                                     * 00209500
*                                                                     * 00209600
*                  REGUSER=YES                                        * 00209700
*                      indicates that connection interest will be     * 00209800
*                      registered for the connection specified by     * 00209900
*                      CONTOKEN.  If interest is already registered   * 00210000
*                      then the local cache vector index specified by * 00210100
*                      VECTORINDEX replaces any previously specified  * 00210200
*                      local cache vector index for CONTOKEN for the  * 00210300
*                      entry.                                         * 00210400
*                                                                     * 00210500
*                      OLDNAME should be specified to deregister any  * 00210600
*                      outstanding interest for the specified local   * 00210700
*                      cache index for a different entry.             * 00210800
*                                                                     * 00210900
*                      VECTORINDEX is a required keyword for this     * 00211000
*                      option.                                        * 00211100
*                                                                     * 00211200
*                                                                     * 00211300
*                                                                     * 00211400
*                                                                     * 00211500
*                                                                     * 00211600
*                                                                     * 00211700
*              ÝPROCESSID=»xprocessid!NO_PROCESSIDº¨                  * 00211800
*                  is the name (RS-type), or address in register      * 00211900
*                  (2)-(12), of an optional byte input field that     * 00212000
*                  contains a user defined process identifier to be   * 00212100
*                  placed in the cast-out lock along with the         * 00212200
*                  connection identifier.                             * 00212300
*                                                                     * 00212400
*                  DEFAULT: NO_PROCESSID                              * 00212500
*                                                                     * 00212600
*                                                                     * 00212700
*                                                                     * 00212800
*          REQUEST=CASTOUT_DATALIST                                   * 00212900
*              requests that the cast-out lock for a given set of 1   * 00213000
*              to 8 entries be obtained for the connection specified  * 00213100
*              by CONTOKEN and the process specified by PROCESSID,    * 00213200
*              and that the directory entry change bit be updated for * 00213300
*              each entry to indicate that each entry contains        * 00213400
*              unchanged subsystem data. The entry data is considered * 00213500
*              changed while the cast-out lock is held for each       * 00213600
*              entry. Furthermore, the subsystem data is retrieved    * 00213700
*              from the structure for each entry and placed in        * 00213800
*              storage locations specified by BUFFER or BUFLIST,      * 00213900
*              ADJAREA, and DEIBAREA. The set of entries for which    * 00214000
*              the cast-out lock should be obtained is specified via  * 00214100
*              a list of names in the CASTOUTLIST. STARTINDEX and     * 00214200
*              ENDINDEX determine the set of names provided by the    * 00214300
*              user in the CASTOUTLIST that will be processed by the  * 00214400
*              command.  Valid STARTINDEX and ENDINDEX values are     * 00214500
*              1-origin.                                              * 00214600
*                                                                     * 00214700
*              The CASTOUT_DATALIST request type is valid only for a  * 00214800
*              structure allocated in a CFLEVEL=12 or higher coupling * 00214900
*              facility.                                              * 00215000
*                                                                     * 00215100
*              The DEIBAREA and ADJAREA, if adjunct data is present   * 00215200
*              in the structure, will contain the DEIB and ADJUNCT    * 00215300
*              data from the first processed name in the CASTOUTLIST  * 00215400
*              pointed to by STARTINDEX.  The output data buffer will * 00215500
*              contain the data area from the first processed name in * 00215600
*              the CASTOUTLIST followed by the DEIB, ADJUNCT data if  * 00215700
*              it exists and the data area from the second processed  * 00215800
*              name in the CASTOUTLIST. This will continue until the  * 00215900
*              end of the CASTOUTLIST pointed to by ENDINDEX is       * 00216000
*              reached or until the command processing completes      * 00216100
*              prematurely for some other reason, as discussed in the * 00216200
*              subsequent paragraphs.                                 * 00216300
*                                                                     * 00216400
*              If another connection or process currently holds the   * 00216500
*              cast-out lock for the entry being processed, the       * 00216600
*              castout lock is not obtained, the index of the name in * 00216700
*              the CASTOUTLIST, the value of the cast-out lock and    * 00216800
*              the value of the cast-out lock state will be returned  * 00216900
*              in the ANSAREA. All prior entries in the CASTOUTLIST   * 00217000
*              were processed.                                        * 00217100
*                                                                     * 00217200
*              If entry data is not cached, or the cached entry data  * 00217300
*              is not changed, the index of the name in the           * 00217400
*              CASTOUTLIST, the changed subsystem data indicator and  * 00217500
*              the Data-cached indicator will be returned in the      * 00217600
*              ANSAREA. All prior entries in the CASTOUTLIST were     * 00217700
*              processed.                                             * 00217800
*                                                                     * 00217900
*              If the entry name being processed in the CASTOUTLIST   * 00218000
*              is not in the directory, command processing stops and  * 00218100
*              the index of the name in the CASTOUTLIST will be       * 00218200
*              returned in the ANSAREA. All prior entries in the      * 00218300
*              CASTOUTLIST were processed.                            * 00218400
*                                                                     * 00218500
*              When the size of the BUFFER or BUFLIST is not large    * 00218600
*              enough to contain the data area for the entry          * 00218700
*              specified by STARTINDEX, no entries are processed and  * 00218800
*              the number of elements in the entry specified by       * 00218900
*              STARTINDEX is returned in the ANSAREA.                 * 00219000
*                                                                     * 00219100
*              When the remaining space in the BUFFER or BUFLIST is   * 00219200
*              not large enough to contain the data area for the      * 00219300
*              current entry in the CASTOUTLIST, the index of the     * 00219400
*              name in the CASTOUTLIST returned in the ANSAREA        * 00219500
*              contains the index of the entry being processed and    * 00219600
*              the number of elements in the desired entry is         * 00219700
*              returned in the ANSAREA. All prior entries in the      * 00219800
*              CASTOUTLIST were processed.                            * 00219900
*                                                                     * 00220000
*              When a model-dependent timeout occurs prior to         * 00220100
*              completing the processing of the requested entries in  * 00220200
*              the CASTOUTLIST, the index of the name in the          * 00220300
*              CASTOUTLIST returned in the ANSAREA contains the index * 00220400
*              of the first unprocessed entry in the CASTOUTLIST. All * 00220500
*              prior entries were processed. To continue processing   * 00220600
*              the desired entries in the CASTOUTLIST, invoke the     * 00220700
*              CASTOUT_DATALIST command specifying the CASTOUTLIST    * 00220800
*              index returned in the ANSAREA as the STARTINDEX.       * 00220900
*                                                                     * 00221000
*              Required keywords are one of BUFFER or BUFLIST,        * 00221100
*              STARTINDEX, ENDINDEX, CASTOUTLIST, DEIBAREA, and       * 00221200
*              CONTOKEN.                                              * 00221300
*                                                                     * 00221400
*                                                                     * 00221500
*              STARTINDEX=xstartindex                                 * 00221600
*                  is the name (RS-type), or address in register      * 00221700
*                  (2)-(12), of a required halfword input field that  * 00221800
*                  contains the index into the CASTOUTLIST of the     * 00221900
*                  first entry to be processed.  Note that the        * 00222000
*                  CASTOUT_DATALIST command will treat the first name * 00222100
*                  in the input array as index 1.                     * 00222200
*                                                                     * 00222300
*                                                                     * 00222400
*                                                                     * 00222500
*                                                                     * 00222600
*              ENDINDEX=xendindex                                     * 00222700
*                  is the name (RS-type), or address in register      * 00222800
*                  (2)-(12), of a required halfword input field that  * 00222900
*                  contains the index into the CASTOUTLIST of the     * 00223000
*                  last entry to be processed.  The specified index   * 00223100
*                  must be greater than or equal to the value         * 00223200
*                  specified for STARTINDEX, but less than or equal   * 00223300
*                  to 8.                                              * 00223400
*                                                                     * 00223500
*                                                                     * 00223600
*                                                                     * 00223700
*                                                                     * 00223800
*              DEIBAREA=xdeibarea                                     * 00223900
*                  is a required output.  It is the name (RS-type),   * 00224000
*                  or address in register (2)-(12), of a 128-byte     * 00224100
*                  virtual storage area. This will contain the DEIB   * 00224200
*                  from the first entry processed (the one designated * 00224300
*                  by STARTINDEX) by this command. The DEIBs for the  * 00224400
*                  rest of the entries will be returned in the data   * 00224500
*                  buffer specified by BUFFER or BUFLIST.             * 00224600
*                                                                     * 00224700
*                                                                     * 00224800
*                                                                     * 00224900
*                                                                     * 00225000
*              CASTOUTLIST=xcastoutlist                               * 00225100
*                  is the name (RS-type), or address in register      * 00225200
*                  (2)-(12), of a required 128 character input field  * 00225300
*                  that contains a list of up to 8 16-byte entry      * 00225400
*                  names to be locked for castout processing.         * 00225500
*                                                                     * 00225600
*                                                                     * 00225700
*                                                                     * 00225800
*                                                                     * 00225900
*              ÝPROCESSID=»xprocessid!NO_PROCESSIDº¨                  * 00226000
*                  is the name (RS-type), or address in register      * 00226100
*                  (2)-(12), of an optional byte input field that     * 00226200
*                  contains a user defined process identifier to be   * 00226300
*                  placed in the castout lock along with the          * 00226400
*                  connection identifier.                             * 00226500
*                                                                     * 00226600
*                  DEFAULT: NO_PROCESSID                              * 00226700
*                                                                     * 00226800
*                                                                     * 00226900
*                                                                     * 00227000
*          REQUEST=UNLOCK_CASTOUT                                     * 00227100
*              requests that the cast-out locks for the entries       * 00227200
*              specified by a list of names be reset to the not-held  * 00227300
*              state if the lock is currently held for the connection * 00227400
*              specified by CONTOKEN, and optionally by PROCESSID,    * 00227500
*              and that whenever the cast-out lock is reset the       * 00227600
*              directory entry user data and parity bits be updated   * 00227700
*              according to information corresponding to the name in  * 00227800
*              the list.                                              * 00227900
*                                                                     * 00228000
*              If the structure is allocated in a CFLEVEL=4 or higher * 00228100
*              coupling facility, an UNLOCK_CO_NAME request should be * 00228200
*              used to reset the lock for a single entry. Although    * 00228300
*              UNLOCK_CASTOUT can be used for this purpose,           * 00228400
*              UNLOCK_CO_NAME is more efficient.                      * 00228500
*                                                                     * 00228600
*              For UNLOCK_CASTOUT the list of names and corresponding * 00228700
*              information are formed into elements in the storage    * 00228800
*              area specified by BUFFER or the buffers specified by   * 00228900
*              BUFLIST.  Refer to the IXLYCUNB mapping macro for the  * 00229000
*              format of these name elements.                         * 00229100
*                                                                     * 00229200
*              Normal UNLOCK_CASTOUT processing will also perform the * 00229300
*              following for entries for which the cast-out lock is   * 00229400
*              reset:                                                 * 00229500
*                                                                     * 00229600
*                                                                     * 00229700
*              o   If the data entry contains unchanged cached        * 00229800
*                  subsystem data, then the entry is disassociated    * 00229900
*                  from any previously specified cast-out class.      * 00230000
*                                                                     * 00230100
*              o   If the data entry contains changed cached          * 00230200
*                  subsystem data, then the entry is left associated  * 00230300
*                  with the last specified cast-out class.  This may  * 00230400
*                  occur due to write activity of changed data while  * 00230500
*                  the cast-out lock is held.                         * 00230600
*                                                                     * 00230700
*                                                                     * 00230800
*                                                                     * 00230900
*              A name element in the list may, however, specify that  * 00231000
*              the cached data is to be overindicated as being        * 00231100
*              changed, regardless of its current actual state, hence * 00231200
*              leaving it assigned to the last specified cast-out     * 00231300
*              class.                                                 * 00231400
*                                                                     * 00231500
*              The names in the list are processed sequentially,      * 00231600
*              beginning with FIRSTNAME and proceeding through        * 00231700
*              LASTNAME.  If any name fails to identify an existing   * 00231800
*              structure entry then processing halts with no names    * 00231900
*              processed beyond the offending name, and the index for * 00232000
*              this name is returned in the answer area specified by  * 00232100
*              ANSAREA.  If UNLOCK_CASTOUT processing encounters any  * 00232200
*              structure entry for which the cast-out lock is not     * 00232300
*              held by the connection specified by CONTOKEN, then     * 00232400
*              processing halts with no names processed beyond the    * 00232500
*              offending name, and the index for this name and the    * 00232600
*              value of the associated directory entry cast-out lock  * 00232700
*              are returned in the answer area.                       * 00232800
*                                                                     * 00232900
*              Required keywords are one of BUFFER or BUFLIST,        * 00233000
*              FIRSTNAME, LASTNAME, and CONTOKEN                      * 00233100
*                                                                     * 00233200
*              An UNLOCK_CASTOUT request may complete prematurely if  * 00233300
*              coupling facility model dependent time out criteria is * 00233400
*              exceeded.  In this event indicative return and reason  * 00233500
*              codes are provided and the index of the first          * 00233600
*              unprocessed name is returned in ANSAREA.  The request  * 00233700
*              may subsequently be re-issued for the sublist of       * 00233800
*              remaining unprocessed name elements by specifying the  * 00233900
*              index returned in the answer area on keyword           * 00234000
*              FIRSTNAME.                                             * 00234100
*                                                                     * 00234200
*              Re-issued requests are processed identically to and    * 00234300
*              must meet the same interface requirements as original  * 00234400
*              requests.  A re-issued request may in turn experience  * 00234500
*              premature completion.                                  * 00234600
*                                                                     * 00234700
*                                                                     * 00234800
*              FIRSTNAME=xfirstname                                   * 00234900
*                  is the name (RS-type), or address in register      * 00235000
*                  (2)-(12), of a required halfword input field that  * 00235100
*                  contains the index into the list of name elements  * 00235200
*                  in the BUFFER storage area or the BUFLIST buffers  * 00235300
*                  of the first name element to be processed.         * 00235400
*                                                                     * 00235500
*                                                                     * 00235600
*                                                                     * 00235700
*                                                                     * 00235800
*              LASTNAME=xlastname                                     * 00235900
*                  is the name (RS-type), or address in register      * 00236000
*                  (2)-(12), of a required halfword input field that  * 00236100
*                  contains the index into the list of name elements  * 00236200
*                  in the BUFFER storage area or the BUFLIST buffers  * 00236300
*                  of the last name element to be processed.  The     * 00236400
*                  specified index must be greater than or equal to   * 00236500
*                  the value specified for FIRSTNAME.                 * 00236600
*                                                                     * 00236700
*                                                                     * 00236800
*                                                                     * 00236900
*                                                                     * 00237000
*              ÝPROCESSID=»xprocessid!NO_PROCESSIDº¨                  * 00237100
*                  is the name (RS-type), or address in register      * 00237200
*                  (2)-(12), of an optional byte input field that     * 00237300
*                  contains a user defined process identifier to be   * 00237400
*                  compared to the process identifier in the castout  * 00237500
*                  lock value.  If the process identifier does not    * 00237600
*                  match then the castout lock will not be released.  * 00237700
*                                                                     * 00237800
*                  DEFAULT: NO_PROCESSID                              * 00237900
*                                                                     * 00238000
*                                                                     * 00238100
*                                                                     * 00238200
*          REQUEST=UNLOCK_CO_NAME                                     * 00238300
*              requests that the cast-out lock for a single entry be  * 00238400
*              reset to the not-held state if the lock is currently   * 00238500
*              held for the connection specified by CONTOKEN, and     * 00238600
*              optionally by PROCESSID, and that whenever the         * 00238700
*              cast-out lock is reset the directory entry user data   * 00238800
*              and parity bits be updated according to information    * 00238900
*              provided.  The UNLOCK_CO_NAME request type is valid    * 00239000
*              only for a structure allocated in a CFLEVEL=4 or       * 00239100
*              higher coupling facility.                              * 00239200
*                                                                     * 00239300
*              To reset multiple locks with a single request use the  * 00239400
*              UNLOCK_CASTOUT request.                                * 00239500
*                                                                     * 00239600
*              The name and other data is provided in the CUNBAREA.   * 00239700
*              Refer to the IXLYCUNB mapping macro for the format of  * 00239800
*              this data.                                             * 00239900
*                                                                     * 00240000
*              Normal UNLOCK_CO_NAME processing will also perform the * 00240100
*              following if the cast-out lock is reset:               * 00240200
*                                                                     * 00240300
*                                                                     * 00240400
*              o   If the data entry contains unchanged cached        * 00240500
*                  subsystem data, then the entry is disassociated    * 00240600
*                  from any previously specified cast-out class.      * 00240700
*                                                                     * 00240800
*              o   If the data entry contains changed cached          * 00240900
*                  subsystem data, then the entry is left associated  * 00241000
*                  with the last specified cast-out class.  This may  * 00241100
*                  occur due to write activity of changed data while  * 00241200
*                  the cast-out lock is held.                         * 00241300
*                                                                     * 00241400
*                                                                     * 00241500
*                                                                     * 00241600
*              The CUNBAREA may, however, specify that the cached     * 00241700
*              data is to be overindicated as being changed,          * 00241800
*              regardless of its current actual state, hence leaving  * 00241900
*              it assigned to the last specified cast-out class.      * 00242000
*                                                                     * 00242100
*              Required keywords are CONTOKEN and CUNBAREA.           * 00242200
*                                                                     * 00242300
*                                                                     * 00242400
*              CUNBAREA=xcunbarea                                     * 00242500
*                  is the name (RS-type), or address in register      * 00242600
*                  (2)-(12), of a required 32 character input field   * 00242700
*                  consisting of a structure entry name followed by   * 00242800
*                  request control information.  A mapping of the     * 00242900
*                  CUNBAREA for UNLOCK_CO_NAME requests is specified  * 00243000
*                  by the IXLYCUNB mapping macro.                     * 00243100
*                                                                     * 00243200
*                  CUNBAREA is required by UNLOCK_CO_NAME requests.   * 00243300
*                  It is mutually exclusive with all other request    * 00243400
*                  types.                                             * 00243500
*                                                                     * 00243600
*                                                                     * 00243700
*                                                                     * 00243800
*                                                                     * 00243900
*              ÝPROCESSID=»xprocessid!NO_PROCESSIDº¨                  * 00244000
*                  is the name (RS-type), or address in register      * 00244100
*                  (2)-(12), of an optional byte input field that     * 00244200
*                  contains a user defined process identifier to be   * 00244300
*                  compared to the process identifier in the castout  * 00244400
*                  lock value.  If the process identifier does not    * 00244500
*                  match then the castout lock will not be released.  * 00244600
*                                                                     * 00244700
*                  DEFAULT: NO_PROCESSID                              * 00244800
*                                                                     * 00244900
*                                                                     * 00245000
*                                                                     * 00245100
*          REQUEST=CROSS_INVAL                                        * 00245200
*              requests that a cross-invalidation operation be        * 00245300
*              performed against all entries specified by NAME and    * 00245400
*              NAMEMASK.  The result of this operation is that with   * 00245500
*              the exception of the connection specified by CONTOKEN, * 00245600
*              all connections with registered interest in the entry  * 00245700
*              have interest deregistered and a cross-invalidate      * 00245800
*              performed against their local caches.                  * 00245900
*                                                                     * 00246000
*              NAME and CONTOKEN are required keywords for            * 00246100
*              CROSS_INVAL requests.                                  * 00246200
*                                                                     * 00246300
*              A CROSS_INVAL request may complete prematurely if      * 00246400
*              coupling facility model dependent time out criteria is * 00246500
*              exceeded.  In this event indicative return and reason  * 00246600
*              codes are provided and a restart token or an extended  * 00246700
*              restart token is returned in the answer area specified * 00246800
*              by ANSAREA.  This restart token may be used to resume  * 00246900
*              such requests with the appropriate structure entry.    * 00247000
*                                                                     * 00247100
*              Except for the fact that the starting point is         * 00247200
*              specified by the RESTOKEN or EXTRESTOKEN keyword,      * 00247300
*              resumed requests are processed identically to and must * 00247400
*              meet all the same interface requirements as            * 00247500
*              non-resumed requests.  A resumed request may in turn   * 00247600
*              experience premature completion.                       * 00247700
*                                                                     * 00247800
*                                                                     * 00247900
*              ÝAXIOVERRIDE=»xaxioverride!0º¨                         * 00248000
*                  is the name (RS-type), or address in register      * 00248100
*                  (2)-(12), of an optional byte input which          * 00248200
*                  indicates whether the asynchronous                 * 00248300
*                  cross-invalidation control setting of              * 00248400
*                  IxlConnAsyncXiYes (1) for the connection           * 00248500
*                  identified by CONTOKEN should be overridden for    * 00248600
*                  this specific CROSS_INVAL request.                 * 00248700
*                                                                     * 00248800
*                  A value of 0 (IxlCacheAXiOverrideNo) indicates     * 00248900
*                  that the asynchronous cross-invalidation control   * 00249000
*                  for the connection as specified on the IXLCONN     * 00249100
*                  invocation should be used for the operation        * 00249200
*                  request.                                           * 00249300
*                                                                     * 00249400
*                  A value of 1 (IxlCacheAXiOverrideYes) indicates    * 00249500
*                  that the ASYNCXI specification of                  * 00249600
*                  IxlConnAsyncXiYes (1) by the connector on the      * 00249700
*                  IXLCONN invocation should be overridden for this   * 00249800
*                  request only.  Cross-invalidations (if any)        * 00249900
*                  generated by this request will be processed        * 00250000
*                  synchronously to the completion of the request.    * 00250100
*                                                                     * 00250200
*                  Any other specified value will have the same       * 00250300
*                  behavior as specifying a value of 0                * 00250400
*                  (IxlCacheAXiOverrideNo).                           * 00250500
*                  DEFAULT: 0                                         * 00250600
*                                                                     * 00250700
*                                                                     * 00250800
*                                                                     * 00250900
*          REQUEST=CROSS_INVALLIST                                    * 00251000
*              requests that the cross-invalidate operation be        * 00251100
*              performed against a given set of 1 to 4096 entries     * 00251200
*              specified via a list of names in the BUFFER storage    * 00251300
*              area or the buffers specified by BUFLIST. STARTINDEX   * 00251400
*              and ENDINDEX determine the set of names provided by    * 00251500
*              the user in the BUFFER/BUFLIST that will be processed  * 00251600
*              by the command.  Valid STARTINDEX and ENDINDEX values  * 00251700
*              are 1-origin. The result of the operation is that with * 00251800
*              the exception of the connection specified by CONTOKEN, * 00251900
*              all connections with registered interest in the        * 00252000
*              specified entries have interest deregistered and a     * 00252100
*              cross-invalidate performed against their local caches. * 00252200
*                                                                     * 00252300
*              The CROSS_INVALLIST request type is valid only for a   * 00252400
*              structure allocated in a CFLEVEL=12 or higher coupling * 00252500
*              facility.                                              * 00252600
*                                                                     * 00252700
*              The names in the list are processed sequentially,      * 00252800
*              beginning with STARTINDEX and proceeding through       * 00252900
*              ENDINDEX.  If any name fails to identify an existing   * 00253000
*              structure entry then processing will either continue   * 00253100
*              or terminate depending on the value specified for the  * 00253200
*              ERRORACTION keyword. If ERRORACTION=TERMINATE then     * 00253300
*              processing stops and the index value of the offending  * 00253400
*              name is returned in the answer area specified by       * 00253500
*              ANSAREA.                                               * 00253600
*                                                                     * 00253700
*              A CROSS_INVALLIST request may complete prematurely if  * 00253800
*              coupling facility model dependent time out criteria is * 00253900
*              exceeded.  In this event indicative return and reason  * 00254000
*              codes are provided and the index of the first          * 00254100
*              unprocessed name is returned in ANSAREA.  The request  * 00254200
*              may subsequently be re-issued for the remaining        * 00254300
*              unprocessed name elements by specifying the index      * 00254400
*              returned in the answer area on keyword STARTINDEX.     * 00254500
*                                                                     * 00254600
*              Required keywords are one of BUFFER or BUFLIST,        * 00254700
*              STARTINDEX, ENDINDEX, and CONTOKEN.                    * 00254800
*                                                                     * 00254900
*                                                                     * 00255000
*              STARTINDEX=xstartindex                                 * 00255100
*                  is the name (RS-type), or address in register      * 00255200
*                  (2)-(12), of a required halfword input field that  * 00255300
*                  contains the index into the name elements in the   * 00255400
*                  BUFFER storage area or the buffers specified by    * 00255500
*                  BUFLIST of the first name element to be processed. * 00255600
*                  Note that the CROSS_INVALLIST command will treat   * 00255700
*                  the first name in the input array as index 1.      * 00255800
*                                                                     * 00255900
*                                                                     * 00256000
*                                                                     * 00256100
*                                                                     * 00256200
*              ENDINDEX=xendindex                                     * 00256300
*                  is the name (RS-type), or address in register      * 00256400
*                  (2)-(12), of a required halfword input field that  * 00256500
*                  contains the index into the name elements in the   * 00256600
*                  BUFFER storage area or the buffers specified by    * 00256700
*                  BUFLIST of the last name element to be processed.  * 00256800
*                  The specified index must be greater than or equal  * 00256900
*                  to the value specified for STARTINDEX and less     * 00257000
*                  than or equal to 4096.  The specified index must   * 00257100
*                  not imply a larger buffer size than the user has   * 00257200
*                  actually provided.                                 * 00257300
*                                                                     * 00257400
*                                                                     * 00257500
*                                                                     * 00257600
*                                                                     * 00257700
*              ÝERRORACTION=»CONTINUE!TERMINATEº¨                     * 00257800
*                  is an optional keyword input which specifies       * 00257900
*                  whether or not processing is to continue with the  * 00258000
*                  next name element if an entry is not found.        * 00258100
*                                                                     * 00258200
*                  DEFAULT: CONTINUE                                  * 00258300
*                                                                     * 00258400
*                                                                     * 00258500
*                  ERRORACTION=CONTINUE                               * 00258600
*                      If an error is encountered processing will     * 00258700
*                      continue with the next name element.           * 00258800
*                                                                     * 00258900
*                                                                     * 00259000
*                  ERRORACTION=TERMINATE                              * 00259100
*                      If an error is encountered processing will     * 00259200
*                      halt and the index of the offending name       * 00259300
*                      element is returned in the answer area.        * 00259400
*                                                                     * 00259500
*                                                                     * 00259600
*                                                                     * 00259700
*                                                                     * 00259800
*                                                                     * 00259900
*                                                                     * 00260000
*              ÝAXIOVERRIDE=»xaxioverride!0º¨                         * 00260100
*                  is the name (RS-type), or address in register      * 00260200
*                  (2)-(12), of an optional byte input which          * 00260300
*                  indicates whether the asynchronous                 * 00260400
*                  cross-invalidation control setting of              * 00260500
*                  IxlConnAsyncXiYes (1) for the connection           * 00260600
*                  identified by CONTOKEN should be overridden for    * 00260700
*                  this specific CROSS_INVALLIST request.             * 00260800
*                                                                     * 00260900
*                  A value of 0 (IxlCacheAXiOverrideNo) indicates     * 00261000
*                  that the asynchronous cross-invalidation control   * 00261100
*                  for the connection as specified on the IXLCONN     * 00261200
*                  invocation should be used for the operation        * 00261300
*                  request.                                           * 00261400
*                                                                     * 00261500
*                  A value of 1 (IxlCacheAXiOverrideYes) indicates    * 00261600
*                  that the ASYNCXI specification of                  * 00261700
*                  IxlConnAsyncXiYes (1) by the connector on the      * 00261800
*                  IXLCONN invocation should be overridden for this   * 00261900
*                  request only.  Cross-invalidations (if any)        * 00262000
*                  generated by this request will be processed        * 00262100
*                  synchronously to the completion of the request.    * 00262200
*                                                                     * 00262300
*                  Any other specified value will have the same       * 00262400
*                  behavior as specifying a value of 0                * 00262500
*                  (IxlCacheAXiOverrideNo).                           * 00262600
*                  DEFAULT: 0                                         * 00262700
*                                                                     * 00262800
*                                                                     * 00262900
*                                                                     * 00263000
*          REQUEST=DELETE_NAME                                        * 00263100
*              requests that association with the entries specified   * 00263200
*              by NAME and NAMEMASK be deleted from the structure.    * 00263300
*                                                                     * 00263400
*              For structures allocated in CFLEVEL=4 or lower         * 00263500
*              coupling facilities, for each applicable structure     * 00263600
*              entry, the name is invalidated and removed from        * 00263700
*              storage and cast-out classes, and all directory and    * 00263800
*              data entry resources for the entry are released for    * 00263900
*              reuse by the structure.  Furthermore, all connections  * 00264000
*              with registered interest in the entry have interest    * 00264100
*              deregistered and a cross-invalidate performed against  * 00264200
*              their local caches.                                    * 00264300
*                                                                     * 00264400
*              For structures allocated in CFLEVEL=5 or higher        * 00264500
*              coupling facilities, for each applicable structure     * 00264600
*              entry, the DELETETYPE keyword indicates what will be   * 00264700
*              deleted.                                               * 00264800
*                                                                     * 00264900
*              Required keywords are NAME and CONTOKEN.               * 00265000
*                                                                     * 00265100
*              A DELETE_NAME request may complete prematurely if      * 00265200
*              coupling facility model dependent time out criteria is * 00265300
*              exceeded or a halt condition is found as a result of   * 00265400
*              specifying HALTONCHANGED=YES.  In these events,        * 00265500
*              indicative return and reason codes are provided and a  * 00265600
*              restart token or an extended restart token is returned * 00265700
*              in the answer area specified by ANSAREA.  This restart * 00265800
*              token may be used to resume such requests with the     * 00265900
*              appropriate structure entry.                           * 00266000
*                                                                     * 00266100
*              Except for the fact that the starting point is         * 00266200
*              specified by the RESTOKEN or EXTRESTOKEN keyword,      * 00266300
*              resumed requests are processed identically to and must * 00266400
*              meet all the same interface requirements as            * 00266500
*              non-resumed requests.  A resumed request may in turn   * 00266600
*              experience premature completion.                       * 00266700
*                                                                     * 00266800
*                                                                     * 00266900
*              ÝDELETETYPE=»DIRANDDATA!UNCHDATA!CHDATA!ANYDATAº¨      * 00267000
*                  is an optional keyword input that specifies the    * 00267100
*                  type of delete which is being requested.           * 00267200
*                                                                     * 00267300
*                  DELETETYPE is only meaningful for structures       * 00267400
*                  allocated in CFLEVEL=5 or higher coupling          * 00267500
*                  facilities.                                        * 00267600
*                                                                     * 00267700
*                  DEFAULT: DIRANDDATA                                * 00267800
*                                                                     * 00267900
*                                                                     * 00268000
*                  ÝDELETETYPE=DIRANDDATA                             * 00268100
*                      For each applicable structure entry, the name  * 00268200
*                      is invalidated and removed from storage and    * 00268300
*                      cast-out classes, and all directory and data   * 00268400
*                      entry resources for the entry are released for * 00268500
*                      reuse by the structure.  Furthermore, all      * 00268600
*                      connections with registered interest in the    * 00268700
*                      entry have interest deregistered and,          * 00268800
*                      optionally, a cross-invalidate performed       * 00268900
*                      against their local caches.                    * 00269000
*                      Cross-invalidation against local caches may be * 00269100
*                      suppressed to improve overall coupling         * 00269200
*                      facility performance and quicken the           * 00269300
*                      completion of Delete_Name requests.            * 00269400
*                                                                     * 00269500
*                                                                     * 00269600
*                                                                     * 00269700
*                      ÝHALTONCHANGED=»NO!YESº¨                       * 00269800
*                          is an optional keyword input which         * 00269900
*                          specifies whether the DELETE_NAME request  * 00270000
*                          should be halted when an applicable        * 00270100
*                          structure entry is encountered that either * 00270200
*                          contains changed data or for which the     * 00270300
*                          cast-out lock is currently held.           * 00270400
*                                                                     * 00270500
*                          HALTONCHANGED is only meaningful when      * 00270600
*                          delete operations are issued to cache      * 00270700
*                          structures allocated in a coupling         * 00270800
*                          facility that supports request halting     * 00270900
*                          based on data changed status and cast-out  * 00271000
*                          lock state.                                * 00271100
*                                                                     * 00271200
*                          DEFAULT: NO                                * 00271300
*                                                                     * 00271400
*                                                                     * 00271500
*                          HALTONCHANGED=NO                           * 00271600
*                              indicates that the DELETE_NAME request * 00271700
*                              should continue processing an          * 00271800
*                              applicable structure entry which       * 00271900
*                              contains changed data or for which the * 00272000
*                              cast-out lock is held.                 * 00272100
*                                                                     * 00272200
*                          HALTONCHANGED=YES                          * 00272300
*                              indicates that the DELETE_NAME request * 00272400
*                              should be halted if an applicable      * 00272500
*                              structure entry contains changed data  * 00272600
*                              or for which the cast-out lock is      * 00272700
*                              held. The structure entry is not       * 00272800
*                              deleted.  Specifying HALTONCHANGED=YES * 00272900
*                              can prevent the inadvertent loss of    * 00273000
*                              changed data that has not yet been     * 00273100
*                              cast out to permanent storage.         * 00273200
*                                                                     * 00273300
*                              When the request is halted due to the  * 00273400
*                              presence of a structure entry that     * 00273500
*                              meets the halt criteria, the following * 00273600
*                              information for the structure entry is * 00273700
*                              returned in the answer area specified  * 00273800
*                              by ANSAREA:                            * 00273900
*                                                                     * 00274000
*                                                                     * 00274100
*                              o   entry name                         * 00274200
*                                                                     * 00274300
*                              o   changed status of the entry data   * 00274400
*                                                                     * 00274500
*                              o   entry cast-out lock state          * 00274600
*                                                                     * 00274700
*                              o   entry cast-out lock value          * 00274800
*                                                                     * 00274900
*                              o   entry cast-out class               * 00275000
*                                                                     * 00275100
*                                                                     * 00275200
*                                                                     * 00275300
*                              A restart token is returned in the     * 00275400
*                              answer area for resuming the halted    * 00275500
*                              request.                               * 00275600
*                                                                     * 00275700
*                              HALTONCHANGED=YES is intended to       * 00275800
*                              prevent the inadvertent loss of        * 00275900
*                              changed data that has not yet been     * 00276000
*                              cast out to permanent storage. When    * 00276100
*                              the DELETE_NAME request is halted, the * 00276200
*                              application is expected to take some   * 00276300
*                              action to change the state of the      * 00276400
*                              indicated structure entry data to      * 00276500
*                              "unchanged" (i.e. the cast-out lock is * 00276600
*                              not held and the status of the data is * 00276700
*                              unchanged) before resuming the request * 00276800
*                              with the restart token.  One such      * 00276900
*                              action could be to read the entry data * 00277000
*                              for castout, write the data to         * 00277100
*                              permanent storage, then reset the      * 00277200
*                              cast-out lock to the not-held state.   * 00277300
*                              Restarting the DELETE_NAME request     * 00277400
*                              before taking such an action to change * 00277500
*                              the state of the structure entry data  * 00277600
*                              to "unchanged" may result in the       * 00277700
*                              request halting on the same structure  * 00277800
*                              entry again thus preventing the        * 00277900
*                              request from proceeding further to     * 00278000
*                              process all applicable structure       * 00278100
*                              entries.                               * 00278200
*                                                                     * 00278300
*                              When the request is halted due to the  * 00278400
*                              presence of a structure entry that     * 00278500
*                              meets the halt criteria, the request   * 00278600
*                              will complete with a return code       * 00278700
*                              IxlRetCodeWarning, reason code         * 00278800
*                              IxlRsnCodeHaltChangedData, and the     * 00278900
*                              answer area specified by ANSAREA will  * 00279000
*                              contain specific information to        * 00279100
*                              identify the entry that was found to   * 00279200
*                              be in the "changed" state.             * 00279300
*                                                                     * 00279400
*                                                                     * 00279500
*                                                                     * 00279600
*                                                                     * 00279700
*                                                                     * 00279800
*                                                                     * 00279900
*                      ÝSUPPCROSSINVAL=»NO!YESº¨¨                     * 00280000
*                          is an optional keyword input which         * 00280100
*                          specifies whether cross-invalidate         * 00280200
*                          processing associated with the             * 00280300
*                          DELETETYPE=DIRANDDATA request should be    * 00280400
*                          suppressed.                                * 00280500
*                                                                     * 00280600
*                          SUPPCROSSINVAL is only meaningful when     * 00280700
*                          delete operations are issued to cache      * 00280800
*                          structures allocated in a coupling         * 00280900
*                          facility that supports suppressing cross   * 00281000
*                          invalidation processing.                   * 00281100
*                                                                     * 00281200
*                          DEFAULT: NO                                * 00281300
*                                                                     * 00281400
*                                                                     * 00281500
*                          SUPPCROSSINVAL=NO                          * 00281600
*                              indicates that cross-invalidation      * 00281700
*                              should be performed (not suppressed)   * 00281800
*                              against the local caches of all        * 00281900
*                              connections with registered interest   * 00282000
*                              in a successfully deleted structure    * 00282100
*                              entry.                                 * 00282200
*                                                                     * 00282300
*                                                                     * 00282400
*                          SUPPCROSSINVAL=YES                         * 00282500
*                              indicates that cross-invalidation      * 00282600
*                              should not be performed (suppressed)   * 00282700
*                              against the local caches of all        * 00282800
*                              connections with registered interest   * 00282900
*                              in a successfully deleted structure    * 00283000
*                              entry.                                 * 00283100
*                                                                     * 00283200
*                              Cross-invalidation signals associated  * 00283300
*                              with the cross-invalidation of local   * 00283400
*                              caches are not sent which improves     * 00283500
*                              overall performance by reducing        * 00283600
*                              coupling facility link traffic, saving * 00283700
*                              CPU cycles and quickening the          * 00283800
*                              completion of the DELETE_NAME request. * 00283900
*                                                                     * 00284000
*                              NOTE: When requesting that the system  * 00284100
*                              suppress cross-invalidation of the     * 00284200
*                              local cache of a deleted data item,    * 00284300
*                              the IXLVECTR macro can not be used to  * 00284400
*                              check the validity of that local cache * 00284500
*                              data item using the vector index that  * 00284600
*                              had been associated with the data      * 00284700
*                              item.  The vector index will be in an  * 00284800
*                              indeterminate state until it is        * 00284900
*                              subsequently reused for a new data     * 00285000
*                              item.  The application must take its   * 00285100
*                              own measures to ensure the data        * 00285200
*                              integrity of the local cache buffers   * 00285300
*                              and the subsequent reuse of the        * 00285400
*                              associated vector indexes.             * 00285500
*                                                                     * 00285600
*                                                                     * 00285700
*                                                                     * 00285800
*                                                                     * 00285900
*                                                                     * 00286000
*                  ÝDELETETYPE=UNCHDATA¨                              * 00286100
*                      For each applicable structure entry, if the    * 00286200
*                      data is unchanged, the data entry resources    * 00286300
*                      are released for reuse by the structure.  The  * 00286400
*                      directory entry is not deleted and no          * 00286500
*                      cross-invalidate is performed.                 * 00286600
*                                                                     * 00286700
*                                                                     * 00286800
*                  ÝDELETETYPE=CHDATA¨                                * 00286900
*                      For each applicable structure entry, if the    * 00287000
*                      data is changed, the data entry resources for  * 00287100
*                      the entry are released for reuse by the        * 00287200
*                      structure, the change bit, castout lock, and   * 00287300
*                      castout lock state are set to zero and the     * 00287400
*                      directory entry is removed from the castout    * 00287500
*                      class.  The directory entry is not deleted and * 00287600
*                      no cross-invalidate is performed.              * 00287700
*                                                                     * 00287800
*                                                                     * 00287900
*                  ÝDELETETYPE=ANYDATA¨                               * 00288000
*                      For each applicable structure entry, whether   * 00288100
*                      the data is changed or unchanged, the data     * 00288200
*                      entry resources for the entry are released for * 00288300
*                      reuse by the structure.  If the data is        * 00288400
*                      changed the change bit, castout lock, and      * 00288500
*                      castout lock state are set to zero and the     * 00288600
*                      directory entry is removed from the castout    * 00288700
*                      class.  The directory entry is not deleted and * 00288800
*                      no cross-invalidate is performed.              * 00288900
*                                                                     * 00289000
*                                                                     * 00289100
*                                                                     * 00289200
*                                                                     * 00289300
*                                                                     * 00289400
*                                                                     * 00289500
*              ÝVERSCOMP=»xverscomp!NO_VERSCOMPº                      * 00289600
*                  is the name (RS-type), or address in register      * 00289700
*                  (2)-(12), of an optional 8 character input which   * 00289800
*                  specifies a value to be compared to the version    * 00289900
*                  number of each applicable structure entry.         * 00290000
*                                                                     * 00290100
*                  VERSCOMP is only meaningful for structures         * 00290200
*                  allocated in CFLEVEL=5 or higher coupling          * 00290300
*                  facilities.                                        * 00290400
*                                                                     * 00290500
*                  If the comparison is not successful then the entry * 00290600
*                  is not processed.                                  * 00290700
*                  DEFAULT: NO_VERSCOMP                               * 00290800
*                                                                     * 00290900
*                                                                     * 00291000
*                  ÝVERSCOMPTYPE=»EQUAL!LESSOREQUALº¨¨                * 00291100
*                      is an optional keyword input which specifies   * 00291200
*                      how the structure entry version number         * 00291300
*                      comparison is to be performed.                 * 00291400
*                                                                     * 00291500
*                      VERSCOMPTYPE may only be specified when        * 00291600
*                      VERSCOMP is also specified.                    * 00291700
*                                                                     * 00291800
*                      VERSCOMPTYPE is only meaningful for structures * 00291900
*                      allocated in CFLEVEL=5 or higher coupling      * 00292000
*                      facilities.                                    * 00292100
*                                                                     * 00292200
*                      DEFAULT: EQUAL                                 * 00292300
*                                                                     * 00292400
*                                                                     * 00292500
*                      VERSCOMPTYPE=EQUAL                             * 00292600
*                          The version number for the structure entry * 00292700
*                          must be equal to the value specified for   * 00292800
*                          VERSCOMP.                                  * 00292900
*                                                                     * 00293000
*                                                                     * 00293100
*                      VERSCOMPTYPE=LESSOREQUAL                       * 00293200
*                          The version number for the structure entry * 00293300
*                          must be less than or equal to the value    * 00293400
*                          specified for VERSCOMP.                    * 00293500
*                                                                     * 00293600
*                                                                     * 00293700
*                                                                     * 00293800
*                                                                     * 00293900
*                                                                     * 00294000
*                                                                     * 00294100
*                                                                     * 00294200
*                                                                     * 00294300
*              ÝAXIOVERRIDE=»xaxioverride!0º¨                         * 00294400
*                  is the name (RS-type), or address in register      * 00294500
*                  (2)-(12), of an optional byte input which          * 00294600
*                  indicates whether the asynchronous                 * 00294700
*                  cross-invalidation control setting of              * 00294800
*                  IxlConnAsyncXiYes (1) for the connection           * 00294900
*                  identified by CONTOKEN should be overridden for    * 00295000
*                  this specific DELETE_NAME request.                 * 00295100
*                                                                     * 00295200
*                  A value of 0 (IxlCacheAXiOverrideNo) indicates     * 00295300
*                  that the asynchronous cross-invalidation control   * 00295400
*                  for the connection as specified on the IXLCONN     * 00295500
*                  invocation should be used for the operation        * 00295600
*                  request.                                           * 00295700
*                                                                     * 00295800
*                  A value of 1 (IxlCacheAXiOverrideYes) indicates    * 00295900
*                  that the ASYNCXI specification of                  * 00296000
*                  IxlConnAsyncXiYes (1) by the connector on the      * 00296100
*                  IXLCONN invocation should be overridden for this   * 00296200
*                  request only.  Cross-invalidations (if any)        * 00296300
*                  generated by this request will be processed        * 00296400
*                  synchronously to the completion of the request.    * 00296500
*                                                                     * 00296600
*                  Any other specified value will have the same       * 00296700
*                  behavior as specifying a value of 0                * 00296800
*                  (IxlCacheAXiOverrideNo).                           * 00296900
*                  DEFAULT: 0                                         * 00297000
*                                                                     * 00297100
*                                                                     * 00297200
*                                                                     * 00297300
*          REQUEST=DELETE_NAMELIST                                    * 00297400
*              requests that association with a specified set of      * 00297500
*              applicable entries be deleted from the structure.      * 00297600
*                                                                     * 00297700
*              DELETE_NAMELIST is only meaningful for structures      * 00297800
*              allocated in CFLEVEL=5 or higher coupling facilities.  * 00297900
*                                                                     * 00298000
*              The set of entries is specified via name elements in   * 00298100
*              the BUFFER storage area or the buffers specified by    * 00298200
*              BUFLIST.  STARTINDEX  and ENDINDEX determine the set   * 00298300
*              of name elements provided by the user in the BUFFER or * 00298400
*              BUFLIST that will be processed by the command.  The    * 00298500
*              name elements are numbered starting with 1.            * 00298600
*                                                                     * 00298700
*              For each applicable structure entry, the DELETETYPE    * 00298800
*              keyword indicates specifically what will be deleted.   * 00298900
*                                                                     * 00299000
*              The list of names and corresponding information are    * 00299100
*              formed into elements in the storage area specified by  * 00299200
*              BUFFER or the buffers specified by BUFLIST.  Refer to  * 00299300
*              the IXLYDNNB mapping macro for the format of these     * 00299400
*              name elements.                                         * 00299500
*                                                                     * 00299600
*              The names in the list are processed sequentially,      * 00299700
*              beginning with STARTINDEX and proceeding through       * 00299800
*              ENDINDEX.  If any name fails to identify an existing   * 00299900
*              structure entry then processing will either continue   * 00300000
*              or terminate depending on the value specified for the  * 00300100
*              ERRORACTION keyword. If ERRORACTION=TERMINATE then     * 00300200
*              processing stops and the index value of the offending  * 00300300
*              name is returned in the answer area specified by       * 00300400
*              ANSAREA.                                               * 00300500
*                                                                     * 00300600
*              Each name element may optionally contain a comparative * 00300700
*              version number which will be compared with the version * 00300800
*              number associated with the cache structure entry       * 00300900
*              specified by the name in the name element.  The        * 00301000
*              IXLYDNNB mapping macro describes each name element     * 00301100
*              including the name and comparative version number. The * 00301200
*              optional VERSCOMPTYPE keyword is used to define how    * 00301300
*              the comparison is to be performed. If a version        * 00301400
*              comparison mismatch is encountered then processing     * 00301500
*              will either continue or terminate depending on the     * 00301600
*              value specified for the ERRORACTION keyword. If        * 00301700
*              ERRORACTION=TERMINATE then processing stops and the    * 00301800
*              index value of the offending name is returned in the   * 00301900
*              answer area specified by ANSAREA.                      * 00302000
*                                                                     * 00302100
*              For DELETETYPE=DIRANDDATA, a check of the changed      * 00302200
*              status of data and cast-out lock state for an          * 00302300
*              applicable structure entry may be requested prior to   * 00302400
*              processing the structure entry by specifying the       * 00302500
*              HALTONCHANGED=YES keyword.  If the applicable          * 00302600
*              structure entry is found to either contain changed     * 00302700
*              data or for which the cast-out lock is currently held, * 00302800
*              then processing of the DELETE_NAMELIST request is      * 00302900
*              halted and the index value of the entry name meeting   * 00303000
*              the halt criteria is returned in the answer area       * 00303100
*              specified by ANSAREA.  After taking action to ensure   * 00303200
*              the preservation and hardening of the identified entry * 00303300
*              data to permanent storage, the DELETE_NAMELIST request * 00303400
*              may be started at the entry that originally caused the * 00303500
*              request to halt by setting keyword STARTINDEX to       * 00303600
*              CaaDNLIndex.                                           * 00303700
*                                                                     * 00303800
*              Required keywords are one of BUFFER or BUFLIST,        * 00303900
*              STARTINDEX, ENDINDEX, and CONTOKEN                     * 00304000
*                                                                     * 00304100
*              A DELETE_NAMELIST request may complete prematurely if  * 00304200
*              coupling facility model dependent time out criteria is * 00304300
*              exceeded.  In this event, indicative return and reason * 00304400
*              codes are provided and the index of the first          * 00304500
*              unprocessed name is returned in ANSAREA.  The request  * 00304600
*              may subsequently be re-issued for the remaining        * 00304700
*              unprocessed name elements by specifying the index      * 00304800
*              returned in the answer area on keyword STARTINDEX.     * 00304900
*                                                                     * 00305000
*                                                                     * 00305100
*              STARTINDEX=xstartindex                                 * 00305200
*                  is the name (RS-type), or address in register      * 00305300
*                  (2)-(12), of a required halfword input field that  * 00305400
*                  contains the index into the name elements in the   * 00305500
*                  BUFFER storage area or the buffers specified by    * 00305600
*                  BUFLIST of the first name element to be processed. * 00305700
*                  Note that the DELETE_NAMELIST command will treat   * 00305800
*                  the first registration block in the input array as * 00305900
*                  index 1.                                           * 00306000
*                                                                     * 00306100
*                                                                     * 00306200
*                                                                     * 00306300
*                                                                     * 00306400
*              ENDINDEX=xendindex                                     * 00306500
*                  is the name (RS-type), or address in register      * 00306600
*                  (2)-(12), of a required halfword input field that  * 00306700
*                  contains the index into the name elements in the   * 00306800
*                  BUFFER storage area or the buffers specified by    * 00306900
*                  BUFLIST of the last name element to be processed.  * 00307000
*                  The specified index must be greater than or equal  * 00307100
*                  to the value specified for STARTINDEX.  The        * 00307200
*                  specified index must not imply a larger buffer     * 00307300
*                  size than the user has actually provided.          * 00307400
*                                                                     * 00307500
*                                                                     * 00307600
*                                                                     * 00307700
*                                                                     * 00307800
*              ÝDELETETYPE=»DIRANDDATA!UNCHDATA!CHDATA!ANYDATAº¨      * 00307900
*                  is an optional keyword input that specifies the    * 00308000
*                  type of delete processing which is being           * 00308100
*                  requested.                                         * 00308200
*                                                                     * 00308300
*                  DEFAULT: DIRANDDATA                                * 00308400
*                                                                     * 00308500
*                                                                     * 00308600
*                  ÝDELETETYPE=DIRANDDATA                             * 00308700
*                      For each applicable structure entry, the name  * 00308800
*                      is invalidated and removed from storage and    * 00308900
*                      cast-out classes, and all directory and data   * 00309000
*                      entry resources for the entry are released for * 00309100
*                      reuse by the structure.  Furthermore, all      * 00309200
*                      connections with registered interest in the    * 00309300
*                      entry have interest deregistered and,          * 00309400
*                      optionally, a cross-invalidate performed       * 00309500
*                      against their local caches.                    * 00309600
*                      Cross-invalidation against local caches may be * 00309700
*                      suppressed to improve overall coupling         * 00309800
*                      facility performance and quicken the           * 00309900
*                      completion of Delete_NameList requests.        * 00310000
*                                                                     * 00310100
*                                                                     * 00310200
*                                                                     * 00310300
*                      ÝHALTONCHANGED=»NO!YESº¨                       * 00310400
*                          is an optional keyword input which         * 00310500
*                          specifies whether the DELETE_NAMELIST      * 00310600
*                          request should be halted when an           * 00310700
*                          applicable structure entry in the set of   * 00310800
*                          entries to be deleted is encountered that  * 00310900
*                          either contains changed data or for which  * 00311000
*                          the cast-out lock is currently held.       * 00311100
*                                                                     * 00311200
*                          HALTONCHANGED is only meaningful when      * 00311300
*                          delete operations are issued to cache      * 00311400
*                          structures allocated in a coupling         * 00311500
*                          facility that supports request halting     * 00311600
*                          based on data changed status and cast-out  * 00311700
*                          lock state.                                * 00311800
*                                                                     * 00311900
*                          DEFAULT: NO                                * 00312000
*                                                                     * 00312100
*                                                                     * 00312200
*                          HALTONCHANGED=NO                           * 00312300
*                              indicates that the DELETE_NAMELIST     * 00312400
*                              request should continue processing an  * 00312500
*                              applicable structure entry which       * 00312600
*                              contains changed data or for which the * 00312700
*                              cast-out lock is held.                 * 00312800
*                                                                     * 00312900
*                          HALTONCHANGED=YES                          * 00313000
*                              indicates that the DELETE_NAMELIST     * 00313100
*                              request should be halted if an         * 00313200
*                              applicable structure entry contains    * 00313300
*                              changed data or for which the cast-out * 00313400
*                              lock is held.  Specifying              * 00313500
*                              HALTONCHANGED=YES can prevent the      * 00313600
*                              inadvertent loss of changed data that  * 00313700
*                              has not yet been cast out to permanent * 00313800
*                              storage.                               * 00313900
*                                                                     * 00314000
*                              When the request is halted due to the  * 00314100
*                              presence of a structure entry that     * 00314200
*                              meets the halt criteria, the following * 00314300
*                              information for the structure entry is * 00314400
*                              returned in the answer area specified  * 00314500
*                              by ANSAREA:                            * 00314600
*                                                                     * 00314700
*                                                                     * 00314800
*                              o   the index value of the name        * 00314900
*                                  element within the specified list  * 00315000
*                                  of entry names being processed     * 00315100
*                                  that caused the request to be      * 00315200
*                                  halted                             * 00315300
*                                                                     * 00315400
*                              o   changed status of the entry data   * 00315500
*                                                                     * 00315600
*                              o   entry cast-out lock state          * 00315700
*                                                                     * 00315800
*                              o   entry cast-out lock value          * 00315900
*                                                                     * 00316000
*                              o   entry cast-out class               * 00316100
*                                                                     * 00316200
*                                                                     * 00316300
*                                                                     * 00316400
*                              HALTONCHANGED=YES is intended to       * 00316500
*                              prevent the inadvertent loss of        * 00316600
*                              changed data that has not yet been     * 00316700
*                              cast out to permanent storage.  When   * 00316800
*                              the DELETE_NAMELIST request is halted, * 00316900
*                              the application is expected to take    * 00317000
*                              some action to change the state of the * 00317100
*                              indicated structure entry data to      * 00317200
*                              "unchanged" (i.e. the cast-out lock is * 00317300
*                              not held and the status of the data is * 00317400
*                              unchanged) before resuming the         * 00317500
*                              request.  One such action could be to  * 00317600
*                              read the entry data for castout, write * 00317700
*                              the data to permanent storage, then    * 00317800
*                              reset the cast-out lock to the         * 00317900
*                              not-held state.                        * 00318000
*                                                                     * 00318100
*                              After taking action, the request may   * 00318200
*                              be started at the entry that           * 00318300
*                              originally caused the request to halt  * 00318400
*                              by setting keyword STARTINDEX to       * 00318500
*                              CaaDNLIndex.  Restarting the           * 00318600
*                              DELETE_NAMELIST request before taking  * 00318700
*                              such an action to change the state of  * 00318800
*                              the structure entry data to            * 00318900
*                              "unchanged" may result in the request  * 00319000
*                              halting on the same structure entry    * 00319100
*                              again thus preventing the request from * 00319200
*                              proceeding further to process all      * 00319300
*                              applicable structure entries.          * 00319400
*                                                                     * 00319500
*                              When the request is halted due to the  * 00319600
*                              presence of a structure entry that     * 00319700
*                              meets the halt criteria, the request   * 00319800
*                              will complete with a return code       * 00319900
*                              IxlRetCodeWarning, reason code         * 00320000
*                              IxlRsnCodeHaltChangedData, and the     * 00320100
*                              answer area specified by ANSAREA will  * 00320200
*                              contain specific information to        * 00320300
*                              identify the entry that was found to   * 00320400
*                              be in the "changed" state              * 00320500
*                                                                     * 00320600
*                                                                     * 00320700
*                                                                     * 00320800
*                                                                     * 00320900
*                                                                     * 00321000
*                                                                     * 00321100
*                      ÝSUPPCROSSINVAL=»NO!YESº¨¨                     * 00321200
*                          is an optional keyword input which         * 00321300
*                          specifies whether cross-invalidate         * 00321400
*                          processing associated with the             * 00321500
*                          DELETETYPE=DIRANDDATA request should be    * 00321600
*                          suppressed.                                * 00321700
*                                                                     * 00321800
*                          SUPPCROSSINVAL is only meaningful when     * 00321900
*                          delete operations are issued to cache      * 00322000
*                          structures allocated in a coupling         * 00322100
*                          facility that supports suppressing cross   * 00322200
*                          invalidation processing.                   * 00322300
*                                                                     * 00322400
*                          DEFAULT: NO                                * 00322500
*                                                                     * 00322600
*                                                                     * 00322700
*                          SUPPCROSSINVAL=NO                          * 00322800
*                              indicates that cross-invalidation      * 00322900
*                              should be performed (not suppressed)   * 00323000
*                              against the local caches of all        * 00323100
*                              connections with registered interest   * 00323200
*                              in a successfully deleted structure    * 00323300
*                              entry.                                 * 00323400
*                                                                     * 00323500
*                          SUPPCROSSINVAL=YES                         * 00323600
*                              indicates that cross-invalidation      * 00323700
*                              should not be performed (suppressed)   * 00323800
*                              against the local caches of all        * 00323900
*                              connections with registered interest   * 00324000
*                              in a successfully deleted structure    * 00324100
*                              entry.                                 * 00324200
*                                                                     * 00324300
*                              Cross-invalidation signals associated  * 00324400
*                              with the cross-invalidation of local   * 00324500
*                              caches are not sent which improves     * 00324600
*                              overall performance by reducing        * 00324700
*                              coupling facility link traffic, saving * 00324800
*                              CPU cycles and quickening the          * 00324900
*                              completion of the DELETE_NAMELIST      * 00325000
*                              request.                               * 00325100
*                                                                     * 00325200
*                              NOTE: When requesting that the system  * 00325300
*                              suppress cross-invalidation of the     * 00325400
*                              local cache of a deleted data item,    * 00325500
*                              the IXLVECTR macro can not be used to  * 00325600
*                              check the validity of that local cache * 00325700
*                              data item using the vector index that  * 00325800
*                              had been associated with the data      * 00325900
*                              item.  The vector index will be in an  * 00326000
*                              indeterminate state until it is        * 00326100
*                              subsequently reused for a new data     * 00326200
*                              item.  The application must take its   * 00326300
*                              own measures to ensure the data        * 00326400
*                              integrity of the local cache buffers   * 00326500
*                              and the subsequent reuse of the        * 00326600
*                              associated vector indexes.             * 00326700
*                                                                     * 00326800
*                                                                     * 00326900
*                                                                     * 00327000
*                                                                     * 00327100
*                                                                     * 00327200
*                  ÝDELETETYPE=UNCHDATA¨                              * 00327300
*                      For each applicable structure entry, if the    * 00327400
*                      data is unchanged, the data entry resources    * 00327500
*                      for the entry are released for reuse by the    * 00327600
*                      structure.  The directory entry is not deleted * 00327700
*                      and no cross-invalidate is performed.          * 00327800
*                                                                     * 00327900
*                                                                     * 00328000
*                  ÝDELETETYPE=CHDATA¨                                * 00328100
*                      For each applicable structure entry, if the    * 00328200
*                      data is changed, the data entry resources for  * 00328300
*                      the entry are released for reuse by the        * 00328400
*                      structure, the change bit, castout lock, and   * 00328500
*                      castout lock state are set to zero and the     * 00328600
*                      directory entry is removed from the castout    * 00328700
*                      class.  The directory entry is not deleted and * 00328800
*                      no cross-invalidate is performed.              * 00328900
*                                                                     * 00329000
*                                                                     * 00329100
*                  ÝDELETETYPE=ANYDATA¨                               * 00329200
*                      For each applicable structure entry, whether   * 00329300
*                      the data is changed or unchanged, the data     * 00329400
*                      entry resources for the entry are released for * 00329500
*                      reuse by the structure.  If the data is        * 00329600
*                      changed the change bit, castout lock, and      * 00329700
*                      castout lock state are set to zero and the     * 00329800
*                      directory entry is removed from the castout    * 00329900
*                      class.  The directory entry is not deleted and * 00330000
*                      no cross-invalidate is performed.              * 00330100
*                                                                     * 00330200
*                                                                     * 00330300
*                                                                     * 00330400
*                                                                     * 00330500
*                                                                     * 00330600
*                                                                     * 00330700
*              ÝVERSCOMPTYPE=»NONE!EQUAL!LESSOREQUALº¨                * 00330800
*                  is an optional keyword input which specifies how   * 00330900
*                  the structure entry version number comparison is   * 00331000
*                  to be performed.                                   * 00331100
*                                                                     * 00331200
*                  DEFAULT: NONE                                      * 00331300
*                                                                     * 00331400
*                                                                     * 00331500
*                  VERSCOMPTYPE=NONE                                  * 00331600
*                      No version number is provided for comparison   * 00331700
*                      so version comparisons are not performed.      * 00331800
*                                                                     * 00331900
*                                                                     * 00332000
*                  VERSCOMPTYPE=EQUAL                                 * 00332100
*                      The version number for the structure entry     * 00332200
*                      must be equal to the value specified for the   * 00332300
*                      corresponding name element as defined in the   * 00332400
*                      IXLYDNNB mapping macro.                        * 00332500
*                                                                     * 00332600
*                                                                     * 00332700
*                  VERSCOMPTYPE=LESSOREQUAL                           * 00332800
*                      The version number for the structure entry     * 00332900
*                      must be less than or equal to the value        * 00333000
*                      specified for the corresponding name element   * 00333100
*                      as defined in the IXLYDNNB mapping macro.      * 00333200
*                                                                     * 00333300
*                                                                     * 00333400
*                                                                     * 00333500
*                                                                     * 00333600
*                                                                     * 00333700
*                                                                     * 00333800
*              ÝERRORACTION=»CONTINUE!TERMINATEº¨                     * 00333900
*                  is an optional keyword input which specifies       * 00334000
*                  whether or not processing is to continue with the  * 00334100
*                  next name element if an entry is not found or a    * 00334200
*                  version number mismatch occurs.                    * 00334300
*                                                                     * 00334400
*                  DEFAULT: CONTINUE                                  * 00334500
*                                                                     * 00334600
*                                                                     * 00334700
*                  ERRORACTION=CONTINUE                               * 00334800
*                      If an error is encountered processing will     * 00334900
*                      continue with the next name element.           * 00335000
*                                                                     * 00335100
*                                                                     * 00335200
*                  ERRORACTION=TERMINATE                              * 00335300
*                      If an error is encountered processing will     * 00335400
*                      halt and the index of the offending name       * 00335500
*                      element is returned in the answer area.        * 00335600
*                                                                     * 00335700
*                                                                     * 00335800
*                                                                     * 00335900
*                                                                     * 00336000
*                                                                     * 00336100
*                                                                     * 00336200
*              ÝAXIOVERRIDE=»xaxioverride!0º¨                         * 00336300
*                  is the name (RS-type), or address in register      * 00336400
*                  (2)-(12), of an optional byte input which          * 00336500
*                  indicates whether the asynchronous                 * 00336600
*                  cross-invalidation control setting of              * 00336700
*                  IxlConnAsyncXiYes (1) for the connection           * 00336800
*                  identified by CONTOKEN should be overridden for    * 00336900
*                  this specific DELETE_NAMELIST request.             * 00337000
*                                                                     * 00337100
*                  A value of 0 (IxlCacheAXiOverrideNo) indicates     * 00337200
*                  that the asynchronous cross-invalidation control   * 00337300
*                  for the connection as specified on the IXLCONN     * 00337400
*                  invocation should be used for the operation        * 00337500
*                  request.                                           * 00337600
*                                                                     * 00337700
*                  A value of 1 (IxlCacheAXiOverrideYes) indicates    * 00337800
*                  that the ASYNCXI specification of                  * 00337900
*                  IxlConnAsyncXiYes (1) by the connector on the      * 00338000
*                  IXLCONN invocation should be overridden for this   * 00338100
*                  request only.  Cross-invalidations (if any)        * 00338200
*                  generated by this request will be processed        * 00338300
*                  synchronously to the completion of the request.    * 00338400
*                                                                     * 00338500
*                  Any other specified value will have the same       * 00338600
*                  behavior as specifying a value of 0                * 00338700
*                  (IxlCacheAXiOverrideNo).                           * 00338800
*                  DEFAULT: 0                                         * 00338900
*                                                                     * 00339000
*                                                                     * 00339100
*                                                                     * 00339200
*          REQUEST=READ_COCLASS                                       * 00339300
*              requests that directory information be retrieved for a * 00339400
*              specified cast-out class and placed in the storage     * 00339500
*              area specified by BUFFER or the buffers specified by   * 00339600
*              BUFLIST.  The returned information is reported on an   * 00339700
*              individual directory entry basis, and may be limited   * 00339800
*              by using the DIRINFOFMT keyword.                       * 00339900
*                                                                     * 00340000
*              The number of elements returned in the BUFFER area or  * 00340100
*              the BUFLIST buffers is returned in the answer area     * 00340200
*              specified by ANSAREA.  For structures allocated in     * 00340300
*              CFLEVEL=4 or lower coupling facilities refer to the    * 00340400
*              IXLYCANB mapping macro for the format of these         * 00340500
*              elements.  For structures allocated in CFLEVEL=5 or    * 00340600
*              higher coupling facilities refer to the IXLYCANB       * 00340700
*              mapping macro or the IXLYDEIB mapping macro, depending * 00340800
*              on the value specified for the DIRINFOFMT keyword. The * 00340900
*              default value is DIRINFOFMT=NAMELIST which will return * 00341000
*              data in the IXLYCANB format.                           * 00341100
*                                                                     * 00341200
*              A READ_COCLASS request may complete prematurely due to * 00341300
*              exhaustion of the storage area specified by BUFFER or  * 00341400
*              BUFLIST, or if coupling facility model dependent time  * 00341500
*              out criteria is exceeded.  In this event indicative    * 00341600
*              return and reason codes are provided, and the number   * 00341700
*              of name elements and either a restart token or an      * 00341800
*              extended restart token are returned in in ANSAREA.     * 00341900
*              This restart token may be used to resume such requests * 00342000
*              with the appropriate directory entry.                  * 00342100
*                                                                     * 00342200
*              Except for the fact that the starting point is         * 00342300
*              specified by the RESTOKEN or EXTRESTOKEN keyword,      * 00342400
*              resumed requests are processed identically to and must * 00342500
*              meet all the same interface requirements as            * 00342600
*              non-resumed requests.  For example, BUFFER and BUFLIST * 00342700
*              boundary and length requirements are unchanged, and a  * 00342800
*              resumed request may in turn experience premature       * 00342900
*              completion.                                            * 00343000
*                                                                     * 00343100
*              Required keywords are one of BUFFER and BUFLIST,       * 00343200
*              COCLASS, and CONTOKEN.                                 * 00343300
*                                                                     * 00343400
*                                                                     * 00343500
*              ÝDIRINFOFMT=»NAMELIST!DIRENTRYLISTº¨                   * 00343600
*                  is an optional keyword input that specifies the    * 00343700
*                  amount of information to be returned for each      * 00343800
*                  directory entry.                                   * 00343900
*                                                                     * 00344000
*                  DIRINFOFMT is only meaningful for structures       * 00344100
*                  allocated in CFLEVEL=5 or higher coupling          * 00344200
*                  facilities.                                        * 00344300
*                                                                     * 00344400
*                  DEFAULT: NAMELIST                                  * 00344500
*                                                                     * 00344600
*                                                                     * 00344700
*                  DIRINFOFMT=NAMELIST                                * 00344800
*                      indicates that a subset of the information for * 00344900
*                      each directory be returned.  Information       * 00345000
*                      returned includes:                             * 00345100
*                                                                     * 00345200
*                                                                     * 00345300
*                      o   Name.                                      * 00345400
*                                                                     * 00345500
*                      o   User data.                                 * 00345600
*                                                                     * 00345700
*                      o   The size of the data entry.                * 00345800
*                                                                     * 00345900
*                                                                     * 00346000
*                                                                     * 00346100
*                      Refer to the IXLYCANB mapping macro for the    * 00346200
*                      format of the data returned in the BUFFER area * 00346300
*                      or the BUFLIST buffers.                        * 00346400
*                                                                     * 00346500
*                                                                     * 00346600
*                  DIRINFOFMT=DIRENTRYLIST                            * 00346700
*                      indicates that all information for each        * 00346800
*                      directory be returned.  Information returned   * 00346900
*                      includes:                                      * 00347000
*                                                                     * 00347100
*                                                                     * 00347200
*                      o   Name.                                      * 00347300
*                                                                     * 00347400
*                      o   User data.                                 * 00347500
*                                                                     * 00347600
*                      o   Storage class assigned to.                 * 00347700
*                                                                     * 00347800
*                      o   Indication of whether data is currently    * 00347900
*                          cached.                                    * 00348000
*                                                                     * 00348100
*                      o   Indication of whether data is changed (if  * 00348200
*                          cached).                                   * 00348300
*                                                                     * 00348400
*                      o   Castout class assigned to (if changed).    * 00348500
*                                                                     * 00348600
*                      o   Parity bits.                               * 00348700
*                                                                     * 00348800
*                      o   Value and state of the cast-out lock.      * 00348900
*                                                                     * 00349000
*                      o   Indication of which connected users have   * 00349100
*                          registered interest.                       * 00349200
*                                                                     * 00349300
*                      o   The size of the data entry.                * 00349400
*                                                                     * 00349500
*                      o   The version number.                        * 00349600
*                                                                     * 00349700
*                                                                     * 00349800
*                                                                     * 00349900
*                      Refer to the IXLYDEIB mapping macro for the    * 00350000
*                      format of the data returned in the BUFFER area * 00350100
*                      or the BUFLIST buffers.                        * 00350200
*                                                                     * 00350300
*                                                                     * 00350400
*                                                                     * 00350500
*                                                                     * 00350600
*                                                                     * 00350700
*                                                                     * 00350800
*              ÝRTATYPE=»NORMAL!ENHANCEDº¨                            * 00350900
*                  is an optional keyword input that specifies the    * 00351000
*                  user's requested restart token algorithm type.     * 00351100
*                                                                     * 00351200
*                  DEFAULT: NORMAL                                    * 00351300
*                                                                     * 00351400
*                                                                     * 00351500
*                  RTATYPE=NORMAL                                     * 00351600
*                      indicates that the normal restart token        * 00351700
*                      algorithm is requested.                        * 00351800
*                                                                     * 00351900
*                      The normal restart token algorithm may return  * 00352000
*                      duplicate entries that match the user's        * 00352100
*                      requested filtering criteria in some cases,    * 00352200
*                      and it may also miss entries that match the    * 00352300
*                      user's requested filtering criteria in some    * 00352400
*                      cases. When using this option, the user must   * 00352500
*                      be prepared to handle any duplicate entries    * 00352600
*                      that may be returned.                          * 00352700
*                                                                     * 00352800
*                                                                     * 00352900
*                  RTATYPE=ENHANCED                                   * 00353000
*                      indicates that the enhanced restart token      * 00353100
*                      algorithm is requested.                        * 00353200
*                                                                     * 00353300
*                      The enhanced restart token algorithm may       * 00353400
*                      return duplicate entries that match the user's * 00353500
*                      requested filtering criteria in some cases,    * 00353600
*                      however, unlike the normal algorithm, it will  * 00353700
*                      never miss any entries that match the          * 00353800
*                      requested filtering criteria.  When using this * 00353900
*                      option, the user must be prepared to handle    * 00354000
*                      any duplicate entries that may be returned.    * 00354100
*                                                                     * 00354200
*                      Note that the request to use the enhanced      * 00354300
*                      restart token algorithm may or may not be      * 00354400
*                      honored, depending on the presence or absence  * 00354500
*                      of the required support in the CF that         * 00354600
*                      contains the cache structure. Cache answer     * 00354700
*                      area field CaaEnhancedRtAlgPresent will        * 00354800
*                      indicate whether or not the CF support for the * 00354900
*                      enhanced restart token algorithm is present,   * 00355000
*                      and thus whether or not it is possible to      * 00355100
*                      honor this request.                            * 00355200
*                                                                     * 00355300
*                                                                     * 00355400
*                                                                     * 00355500
*                                                                     * 00355600
*                                                                     * 00355700
*          REQUEST=READ_DIRINFO                                       * 00355800
*              requests that directory information from the structure * 00355900
*              be retrieved and placed in the storage location        * 00356000
*              specified by BUFFER or the buffers specified by        * 00356100
*              BUFLIST.  The returned information is reported on an   * 00356200
*              individual directory entry basis, and may be limited   * 00356300
*              by using the DIRINFOFMT keyword.                       * 00356400
*                                                                     * 00356500
*              The number of directory entries returned in the BUFFER * 00356600
*              area or the BUFLIST buffers is returned in the answer  * 00356700
*              area specified by ANSAREA.                             * 00356800
*                                                                     * 00356900
*              A READ_DIRINFO request may complete prematurely due to * 00357000
*              exhaustion of the specified output storage area, or if * 00357100
*              coupling facility model dependent time out criteria is * 00357200
*              exceeded.  In this event indicative return and reason  * 00357300
*              codes are provided, and the number of directory        * 00357400
*              entries and either a restart token or an extended      * 00357500
*              restart token are returned in ANSAREA.  This restart   * 00357600
*              token may be used to resume such requests with the     * 00357700
*              appropriate directory entry.                           * 00357800
*                                                                     * 00357900
*              Except for the fact that the starting point is         * 00358000
*              specified by the RESTOKEN or EXTRESTOKEN keyword,      * 00358100
*              resumed requests are processed identically to and must * 00358200
*              meet all the same interface requirements as            * 00358300
*              non-resumed requests.  For example, BUFFER and BUFLIST * 00358400
*              boundary and length requirements are unchanged, and a  * 00358500
*              resumed request may in turn experience premature       * 00358600
*              completion.                                            * 00358700
*                                                                     * 00358800
*              Required keywords are one of BUFFER or BUFLIST, and    * 00358900
*              CONTOKEN.                                              * 00359000
*                                                                     * 00359100
*                                                                     * 00359200
*              ÝDIRINFOFMT=»DIRENTRYLIST!NAMELISTº¨                   * 00359300
*                  is an optional keyword input that specifies the    * 00359400
*                  amount of information to be returned for each      * 00359500
*                  directory entry.                                   * 00359600
*                                                                     * 00359700
*                  DEFAULT: DIRENTRYLIST                              * 00359800
*                                                                     * 00359900
*                                                                     * 00360000
*                  DIRINFOFMT=DIRENTRYLIST                            * 00360100
*                      indicates that all information for each        * 00360200
*                      directory be returned.  Information returned   * 00360300
*                      includes:                                      * 00360400
*                                                                     * 00360500
*                                                                     * 00360600
*                      o   Name.                                      * 00360700
*                                                                     * 00360800
*                      o   User data.                                 * 00360900
*                                                                     * 00361000
*                      o   Storage class assigned to.                 * 00361100
*                                                                     * 00361200
*                      o   Indication of whether data is currently    * 00361300
*                          cached.                                    * 00361400
*                                                                     * 00361500
*                      o   Indication of whether data is changed (if  * 00361600
*                          cached).                                   * 00361700
*                                                                     * 00361800
*                      o   Castout class assigned to (if changed).    * 00361900
*                                                                     * 00362000
*                      o   Parity bits.                               * 00362100
*                                                                     * 00362200
*                      o   Value and state of the cast-out lock.      * 00362300
*                                                                     * 00362400
*                      o   Indication of which connected users have   * 00362500
*                          registered interest.                       * 00362600
*                                                                     * 00362700
*                      o   The size of the data entry.                * 00362800
*                                                                     * 00362900
*                      o   For structures allocated in CFLEVEL=5 or   * 00363000
*                          higher coupling facilities, the version    * 00363100
*                          number.                                    * 00363200
*                                                                     * 00363300
*                                                                     * 00363400
*                                                                     * 00363500
*                      Refer to the IXLYDEIB mapping macro for the    * 00363600
*                      format of the data returned in the BUFFER area * 00363700
*                      or the BUFLIST buffers.                        * 00363800
*                                                                     * 00363900
*                                                                     * 00364000
*                  DIRINFOFMT=NAMELIST                                * 00364100
*                      indicates that a subset of the information for * 00364200
*                      each directory be returned.  Information       * 00364300
*                      returned includes:                             * 00364400
*                                                                     * 00364500
*                                                                     * 00364600
*                      o   Name.                                      * 00364700
*                                                                     * 00364800
*                      o   User data.                                 * 00364900
*                                                                     * 00365000
*                      o   The size of the data entry.                * 00365100
*                                                                     * 00365200
*                                                                     * 00365300
*                                                                     * 00365400
*                      Refer to the IXLYCANB mapping macro for the    * 00365500
*                      format of the data returned in the BUFFER area * 00365600
*                      or the BUFLIST buffers.                        * 00365700
*                                                                     * 00365800
*                                                                     * 00365900
*                                                                     * 00366000
*                                                                     * 00366100
*                                                                     * 00366200
*                                                                     * 00366300
*              ÝCRITERIA=»ALL!CHANGEDº¨                               * 00366400
*                  is an optional keyword input that specifies the    * 00366500
*                  selection criteria to be used in determining for   * 00366600
*                  which directory entries information should be      * 00366700
*                  retrieved.  Further granularity on selecting       * 00366800
*                  directory entries may be achieved be specifying    * 00366900
*                  the NAME and NAMEMASK keywords.                    * 00367000
*                                                                     * 00367100
*                  DEFAULT: ALL                                       * 00367200
*                                                                     * 00367300
*                                                                     * 00367400
*                  CRITERIA=ALL                                       * 00367500
*                      indicates that information for all allocated   * 00367600
*                      directory entries will be retrieved.           * 00367700
*                                                                     * 00367800
*                                                                     * 00367900
*                  CRITERIA=CHANGED                                   * 00368000
*                      indicates that information for only those      * 00368100
*                      directory entries for changed or locked for    * 00368200
*                      cast-out cached subsystem data will be         * 00368300
*                      retrieved.                                     * 00368400
*                                                                     * 00368500
*                                                                     * 00368600
*                                                                     * 00368700
*                                                                     * 00368800
*                                                                     * 00368900
*          REQUEST=RESET_REFBIT                                       * 00369000
*              requests that the directory entry reference bit be set * 00369100
*              to indicate an unreferenced entry for each entry       * 00369200
*              meeting the specified selection criteria.              * 00369300
*                                                                     * 00369400
*              The total number of processed directory entries and    * 00369500
*              the number of these directory entries for which the    * 00369600
*              reference bit was actually reset is returned in the    * 00369700
*              answer area specified by ANSAREA.                      * 00369800
*                                                                     * 00369900
*              The CONTOKEN keyword is required on RESET_REFBIT       * 00370000
*              requests.                                              * 00370100
*                                                                     * 00370200
*              A RESET REFBIT request may complete prematurely if     * 00370300
*              coupling facility model dependent time out criteria is * 00370400
*              exceeded.  In this event indicative return and reason  * 00370500
*              codes are provided and a restart token or an extended  * 00370600
*              restart token is returned in the answer area specified * 00370700
*              by ANSAREA.  This restart token may be used to resume  * 00370800
*              such requests with the appropriate structure entry.    * 00370900
*                                                                     * 00371000
*              Except for the fact that the starting point is         * 00371100
*              specified by the RESTOKEN or EXTRESTOKEN keyword,      * 00371200
*              resumed requests are processed identically to and must * 00371300
*              meet all the same interface requirements as            * 00371400
*              non-resumed requests.  A resumed request may in turn   * 00371500
*              experience premature completion.                       * 00371600
*                                                                     * 00371700
*                                                                     * 00371800
*              ÝCRITERIA=»ALL!CHANGEDº¨                               * 00371900
*                  is an optional keyword input that specifies the    * 00372000
*                  selection criteria for determining which directory * 00372100
*                  entries RESET_REFBIT will process.  Further        * 00372200
*                  granularity on selecting directory entries may be  * 00372300
*                  achieved be specifying the NAME and NAMEMASK       * 00372400
*                  keywords.                                          * 00372500
*                                                                     * 00372600
*                  DEFAULT: ALL                                       * 00372700
*                                                                     * 00372800
*                                                                     * 00372900
*                  CRITERIA=ALL                                       * 00373000
*                      indicates that RESET_REFBIT processing should  * 00373100
*                      be performed on all allocated directory        * 00373200
*                      entries.                                       * 00373300
*                                                                     * 00373400
*                                                                     * 00373500
*                  CRITERIA=CHANGED                                   * 00373600
*                      indicates that RESET_REFBIT processing should  * 00373700
*                      be performed only on directory entries for     * 00373800
*                      changed or locked for cast-out cached          * 00373900
*                      subsystem data.                                * 00374000
*                                                                     * 00374100
*                                                                     * 00374200
*                                                                     * 00374300
*                                                                     * 00374400
*                                                                     * 00374500
*          REQUEST=READ_COSTATS                                       * 00374600
*              requests that statistical information for the cast-out * 00374700
*              classes in the range beginning with COCLASSB and       * 00374800
*              ending with COCLASSE be retrieved and placed in the    * 00374900
*              storage location specified by BUFFER or the buffers    * 00375000
*              specified by BUFLIST.                                  * 00375100
*                                                                     * 00375200
*              For structures allocated in CFLEVEL=4 or lower         * 00375300
*              coupling facilities, refer to the CCIH and the         * 00375400
*              CCIHCOUNTS mappings in the IXLYCCIH mapping macro for  * 00375500
*              the format of the data returned.  For structures       * 00375600
*              allocated in CFLEVEL=5 or higher coupling facilities,  * 00375700
*              the format of the data returned may be specified by    * 00375800
*              using the COSTATSFMT keyword.                          * 00375900
*                                                                     * 00376000
*              Required keywords are one of BUFFER and BUFLIST,       * 00376100
*              CONTOKEN, COCLASSB, and COCLASSE.                      * 00376200
*                                                                     * 00376300
*                                                                     * 00376400
*              COCLASSB=xcoclassb                                     * 00376500
*                  is the name (RS-type), or address in register      * 00376600
*                  (2)-(12), of a required halfword input field that  * 00376700
*                  contains the first cast-out class in the range of  * 00376800
*                  cast-out classes to be reported.  The specified    * 00376900
*                  value must fall within the range of 1 to the       * 00377000
*                  maximum cast-out class value defined for the       * 00377100
*                  structure, inclusive.                              * 00377200
*                                                                     * 00377300
*                                                                     * 00377400
*                                                                     * 00377500
*                                                                     * 00377600
*              COCLASSE=xcoclasse                                     * 00377700
*                  is the name (RS-type), or address in register      * 00377800
*                  (2)-(12), of a required halfword input field that  * 00377900
*                  contains the last cast-out class in the range of   * 00378000
*                  cast-out classes to be reported on.  The specified * 00378100
*                  value must fall within the range of 1 to the       * 00378200
*                  maximum cast-out class value defined for the       * 00378300
*                  structure, inclusive.                              * 00378400
*                                                                     * 00378500
*                                                                     * 00378600
*                                                                     * 00378700
*                                                                     * 00378800
*              ÝCOSTATSFMT=»COCOUNTSLIST!COSTATSLISTº¨                * 00378900
*                  is an optional keyword input that specifies the    * 00379000
*                  format of the data which is returned for each      * 00379100
*                  castout class.  COSTATSFMT is only meaningful for  * 00379200
*                  structures allocated in CFLEVEL=5 or higher        * 00379300
*                  coupling facilities.                               * 00379400
*                                                                     * 00379500
*                  DEFAULT: COCOUNTSLIST                              * 00379600
*                                                                     * 00379700
*                                                                     * 00379800
*                  COSTATSFMT=COCOUNTSLIST                            * 00379900
*                      indicates that the data returned in the BUFFER * 00380000
*                      area or the BUFLIST buffers will be in the     * 00380100
*                      format defined by the CCIH and CCIHCOUNTS      * 00380200
*                      mappings in the IXLYCCIH mapping macro.        * 00380300
*                                                                     * 00380400
*                                                                     * 00380500
*                  COSTATSFMT=COSTATSLIST                             * 00380600
*                      indicates that the data returned in the BUFFER * 00380700
*                      area or the BUFLIST buffers will be in the     * 00380800
*                      format defined by the CCIH and the CCIHCCIBS   * 00380900
*                      mappings in the IXLYCCIH mapping macro.        * 00381000
*                                                                     * 00381100
*                                                                     * 00381200
*                                                                     * 00381300
*                                                                     * 00381400
*                                                                     * 00381500
*          REQUEST=READ_STGSTATS                                      * 00381600
*              requests that statisical information for the storage   * 00381700
*              class specified by STGCLASS be retrieved and placed in * 00381800
*              the storage location specified by STGSTATS.            * 00381900
*                                                                     * 00382000
*              Required keywords are STGSTATS, STGCLASS, and          * 00382100
*              CONTOKEN.                                              * 00382200
*                                                                     * 00382300
*                                                                     * 00382400
*              STGSTATS=xstgstats                                     * 00382500
*                  is a required input.  It is the name (RS-type), or * 00382600
*                  address in register (2)-(12), of a 256-byte        * 00382700
*                  virtual storage area to contain the statistics     * 00382800
*                  returned from a READ_STGSTATS request for storage  * 00382900
*                  class statistics.                                  * 00383000
*                                                                     * 00383100
*                  Upon completion of the request the resulting       * 00383200
*                  contents of STGSTATS is defined and formatted as   * 00383300
*                  specified by the mapping in macro IXLYCSCS.        * 00383400
*                                                                     * 00383500
*                                                                     * 00383600
*                                                                     * 00383700
*          REQUEST=PROCESS_REFLIST                                    * 00383800
*              requests that the list of entry names in the storage   * 00383900
*              area specified by BUFFER or the buffers specified by   * 00384000
*              BUFLIST, for which interest is registered for the      * 00384100
*              connection specified by CONTOKEN and which are         * 00384200
*              associated with the specified storage class be         * 00384300
*              processed in the structure as having been referenced.  * 00384400
*                                                                     * 00384500
*              Required keywords are one of BUFFER or BUFLIST,        * 00384600
*              NUMNAMES, STGCLASS, and CONTOKEN.                      * 00384700
*                                                                     * 00384800
*                                                                     * 00384900
*              NUMNAMES=xnumnames                                     * 00385000
*                  is the name (RS-type), or address in register      * 00385100
*                  (2)-(12), of a required halfword input field that  * 00385200
*                  contains the number of names in the storage area   * 00385300
*                  specified by BUFFER or the buffers specified by    * 00385400
*                  BUFLIST to be processed.                           * 00385500
*                                                                     * 00385600
*                                                                     * 00385700
*                                                                     * 00385800
*          REQUEST=SET_RECLVCTR                                       * 00385900
*              requests that the reclaiming vector in the storage     * 00386000
*              location specified by RECLVCTR be activated for the    * 00386100
*              storage class specified by STGCLASS.                   * 00386200
*                                                                     * 00386300
*              When an IXLALTER is processed for a cache structure    * 00386400
*              all active reclaim vectors are deactivated.  While the * 00386500
*              structure is in the process of being altered any       * 00386600
*              attempt to activate a reclaim vector will be rejected. * 00386700
*              When the alter process completes the reclaim vectors   * 00386800
*              which were deactivated at the start of the alter are   * 00386900
*              not reinstated automatically.  It is the               * 00387000
*              responsibility of the user to activate new reclaim     * 00387100
*              vectors, if desired.                                   * 00387200
*                                                                     * 00387300
*              Required keywords are CONTOKEN, REPEAT, and STGCLASS.  * 00387400
*                                                                     * 00387500
*                                                                     * 00387600
*              REPEAT=xrepeat                                         * 00387700
*                  is the name (RS-type), or address in register      * 00387800
*                  (2)-(12), of a required halfword input field that  * 00387900
*                  contains the repeat factor for the reclaim vector  * 00388000
*                  being activated.  The specified value must fall    * 00388100
*                  within the range 0 to 65535, inclusive.            * 00388200
*                  Specifying a repeat factor of zero causes any      * 00388300
*                  currently active reclaiming vector for the storage * 00388400
*                  class to be deactivated.                           * 00388500
*                                                                     * 00388600
*                  The repeat factor defines the number of iterations * 00388700
*                  through the vector before the vector naturally     * 00388800
*                  deactivates.                                       * 00388900
*                                                                     * 00389000
*                                                                     * 00389100
*                                                                     * 00389200
*                                                                     * 00389300
*              ÝRECLVCTR=»xreclvctr!NO_RECLVCTRº¨                     * 00389400
*                  is an optional input.  It is the name (RS-type),   * 00389500
*                  or address in register (2)-(12), of a virtual      * 00389600
*                  storage area containing the reclaiming vector to   * 00389700
*                  be activated.  The storage area must be of a       * 00389800
*                  length two times the number of storage classes     * 00389900
*                  defined for the structure.  RECLVCTR is ignored    * 00390000
*                  when a REPEAT factor of zero is specified,         * 00390100
*                  otherwise it is required.                          * 00390200
*                                                                     * 00390300
*                  Upon invocation of a SET_RECLVCTR request RECLVCTR * 00390400
*                  must, starting at offset 0, contain a fully        * 00390500
*                  initialized array of halfwords, where each         * 00390600
*                  halfword contains the reclaiming count for a       * 00390700
*                  target storage class.  The relative position in    * 00390800
*                  the array of a halfword defines the storage class  * 00390900
*                  associated with that halfword.  Entry values of    * 00391000
*                  zero may be specified to avoid reclaim from a      * 00391100
*                  target storage class.  Reclaim will begin with the * 00391200
*                  target storage class associated with the first     * 00391300
*                  nonzero vector entry.                              * 00391400
*                                                                     * 00391500
*                  DEFAULT: NO_RECLVCTR                               * 00391600
*                                                                     * 00391700
*                                                                     * 00391800
*                                                                     * 00391900
*                                                                     * 00392000
*                                                                     * 00392100
*                                                                     * 00392200
*                                                                     * 00392300
*                                                                     * 00392400
*      CONTOKEN=xcontoken                                             * 00392500
*          is the name (RS-type), or address in register (2)-(12), of * 00392600
*          a required 16 character input field that contains the      * 00392700
*          connection token returned by the IXLCONN service.  The     * 00392800
*          CONTOKEN uniquely identifies the user's connection to the  * 00392900
*          structure.                                                 * 00393000
*                                                                     * 00393100
*                                                                     * 00393200
*                                                                     * 00393300
*                                                                     * 00393400
*      ÝREQID=»xreqid!NO_REQIDº¨                                      * 00393500
*          is the name (RS-type), or address in register (2)-(12), of * 00393600
*          an optional 8 character input that contains a user-defined * 00393700
*          request identifier to be associated with the request.      * 00393800
*                                                                     * 00393900
*          Requests that have not been processed may be cancelled     * 00394000
*          using this request identifier.                             * 00394100
*                                                                     * 00394200
*          DEFAULT: NO_REQID                                          * 00394300
*                                                                     * 00394400
*                                                                     * 00394500
*                                                                     * 00394600
*                                                                     * 00394700
*      ÝNAME=»xname!NO_NAMEº                                          * 00394800
*          is the name (RS-type), or address in register (2)-(12), of * 00394900
*          an optional 16 character input field that contains the     * 00395000
*          name of the structure entry to be processed, or, if used   * 00395100
*          in conjunction with NAMEMASK, the mask values to be used   * 00395200
*          in selecting names to be processed.                        * 00395300
*                                                                     * 00395400
*          NAME is required for READ_DATA, WRITE_DATA, CASTOUT_DATA,  * 00395500
*          CROSS_INVAL, and DELETE_NAME requests, and may optionally  * 00395600
*          be specified for READ_DIRINFO, READ_COCLASS, and           * 00395700
*          RESET_REFBIT requests.  NAME is mutually exclusive with    * 00395800
*          all other request types.                                   * 00395900
*                                                                     * 00396000
*          DEFAULT: NO_NAME                                           * 00396100
*                                                                     * 00396200
*                                                                     * 00396300
*          ÝNAMEMASK=»xnamemask!1111111111111111º¨                    * 00396400
*              is the name (RS-type), or address in register          * 00396500
*              (2)-(12), of an optional 16 bit input field that       * 00396600
*              contains the mask pattern definition to be applied to  * 00396700
*              NAME in determining a mask to select entry names to be * 00396800
*              processed.                                             * 00396900
*                                                                     * 00397000
*              NAMEMASK may be optionally specified for READ_DIRINFO, * 00397100
*              READ_COCLASS, RESET_REFBIT, CROSS_INVAL, and           * 00397200
*              DELETE_NAME requests.  It is mutually exclusive with   * 00397300
*              all other request types.                               * 00397400
*                                                                     * 00397500
*              The position of each bit in NAMEMASK corresponds to    * 00397600
*              the same relative character position in NAME.  If a    * 00397700
*              bit is a one then the corresponding position in NAME   * 00397800
*              is applied in the masking operation.  If a bit is a    * 00397900
*              zero then the corresponding position in NAME is not    * 00398000
*              applied.  Specifying a NAMEMASK where all the bits are * 00398100
*              zero causes all names to be selected for processing.   * 00398200
*              Specifying a NAMEMASK where all the bits are one       * 00398300
*              causes exactly one name (as specified by NAME) to be   * 00398400
*              selected.                                              * 00398500
*                                                                     * 00398600
*              DEFAULT: 1111111111111111                              * 00398700
*                                                                     * 00398800
*                                                                     * 00398900
*                                                                     * 00399000
*                                                                     * 00399100
*          ÝOLDNAME=»xoldname!NO_OLDNAMEº¨¨                           * 00399200
*              is the name (RS-type), or address in register          * 00399300
*              (2)-(12), of an optional 16 character input field that * 00399400
*              contains the name of the entry for which interest      * 00399500
*              should be deregistered for the connection specified by * 00399600
*              CONTOKEN prior to registering interest in the entry    * 00399700
*              specified by NAME.  Note that,  in order for           * 00399800
*              deregistration to be performed, NAME must be different * 00399900
*              from OLDNAME,  the connection specified by CONTOKEN    * 00400000
*              must have a current registered interest in the entry   * 00400100
*              designated by OLDNAME,  and the vector index of that   * 00400200
*              registration must match the VECTORINDEX that is        * 00400300
*              specified on the current request.  If NAME is equal to * 00400400
*              OLDNAME, the vector index does not match,  or the user * 00400500
*              is not currently registered for the OLDNAME entry, the * 00400600
*              request will be processed but deregistration for the   * 00400700
*              entry designated by OLDNAME will not be performed.     * 00400800
*                                                                     * 00400900
*              For structures allocated in CFLEVEL=5 or higher        * 00401000
*              coupling facilities, interest in the specified entry   * 00401100
*              can be deregistered for the OLDNAME without            * 00401200
*              registering interest in the entry specified by NAME.   * 00401300
*                                                                     * 00401400
*              OLDNAME may optionally be specified on READ_DATA,      * 00401500
*              WRITE_DATA when WHENREG=NO is specified, and           * 00401600
*              CASTOUT_DATA requests.  OLDNAME is mutually exclusive  * 00401700
*              with all other requests.                               * 00401800
*                                                                     * 00401900
*              For READ_DATA requests, interest in OLDNAME is         * 00402000
*              deregistered when the request completes with:          * 00402100
*                                                                     * 00402200
*                                                                     * 00402300
*              o   return code 0 (IxlRetCodeOk)                       * 00402400
*                                                                     * 00402500
*              o   return code 4 (IxlRetCodeWarning)                  * 00402600
*                                                                     * 00402700
*              o   return code 8 (IxlRetCodeParmError) with reason    * 00402800
*                  code xxxx0825 (IxlRsnCodeNoEntry)                  * 00402900
*                                                                     * 00403000
*              o   return code C (IxlRetCodeEnvError) with reason     * 00403100
*                  code xxxx0C17 (IxlRsnCodeStrFull)                  * 00403200
*                                                                     * 00403300
*                                                                     * 00403400
*                                                                     * 00403500
*              For WRITE_DATA requests, interest in OLDNAME is        * 00403600
*              deregistered when the request completes with:          * 00403700
*                                                                     * 00403800
*                                                                     * 00403900
*              o   return code 0 (IxlRetCodeOk)                       * 00404000
*                                                                     * 00404100
*              o   return code 8 (IxlRetCodeParmError) with reason    * 00404200
*                  code xxxx0825 (IxlRsnCodeNoEntry), and ASSIGN=NO   * 00404300
*                  was specified                                      * 00404400
*                                                                     * 00404500
*              o   return code 8 (IxlRetCodeParmError) with reason    * 00404600
*                  code xxxx0826 (IxlRsnCodeIncompatState)            * 00404700
*                                                                     * 00404800
*              o   return code C (IxlRetCodeEnvError) with reason     * 00404900
*                  code xxxx0C17 (IxlRsnCodeStrFull).                 * 00405000
*                                                                     * 00405100
*                                                                     * 00405200
*                                                                     * 00405300
*              For CASTOUT_DATA requests, interest in OLDNAME is      * 00405400
*              deregistered when the request completes with:          * 00405500
*                                                                     * 00405600
*                                                                     * 00405700
*              o   return code 0 (IxlRetCodeOk)                       * 00405800
*                                                                     * 00405900
*              o   return code 4 (IxlRetCodeWarning)                  * 00406000
*                                                                     * 00406100
*              o   return code 8 (IxlRetCodeParmError) with reason    * 00406200
*                  code xxxx0825 (IxlRsnCodeNoEntry), xxxx0827        * 00406300
*                  (IxlRsnCodeCoLockHeld), or xxxx0828                * 00406400
*                  (IxlRsnCodeCoUnchanged).                           * 00406500
*                                                                     * 00406600
*                                                                     * 00406700
*                                                                     * 00406800
*              DEFAULT: NO_OLDNAME                                    * 00406900
*                                                                     * 00407000
*                                                                     * 00407100
*                                                                     * 00407200
*                                                                     * 00407300
*                                                                     * 00407400
*                                                                     * 00407500
*      The following is a set of mutually exclusive keys.  This set   * 00407600
*      is optional; only one key may be specified.                    * 00407700
*                                                                     * 00407800
*                                                                     * 00407900
*      ÝBUFLIST=»xbuflistº                                            * 00408000
*          belongs to a set of mutually exclusive keys. It is an      * 00408100
*          optional input.  It is the name (RS-type), or address in   * 00408200
*          register (2)-(12), of a 128-byte virtual storage area      * 00408300
*          containing a list of addresses of buffers.  These buffers  * 00408400
*          may contain input data for the request or may receive      * 00408500
*          output data from the request, depending on the request     * 00408600
*          specified.  The set of buffers is used as if it were a     * 00408700
*          single contiguous area for purposes of input and output.   * 00408800
*          The buffers may not reside in large pages.  The buffers    * 00408900
*          may not reside in high shared virtual storage areas or in  * 00409000
*          pageable high virtual common storage (above 2GB).          * 00409100
*                                                                     * 00409200
*          The format of the list is a set of 8-byte elements.  The   * 00409300
*          BUFADDRSIZE keyword denotes whether four or eight bytes of * 00409400
*          the element are used.  If BUFADDRSIZE=31 is specified then * 00409500
*          the first four bytes of each element are reserved space    * 00409600
*          and the last four bytes contain the address of the buffer. * 00409700
*          If BUFADDRSIZE=64 is specified then the full eight bytes   * 00409800
*          specify the address of the buffer.                         * 00409900
*                                                                     * 00410000
*          There may be 0 to 16 buffers passed in the list.  Each     * 00410100
*          buffer in the list must be the same size and must reside   * 00410200
*          in the same address space or data space.  Data is fetched  * 00410300
*          from or stored into the buffers in the order specified.    * 00410400
*                                                                     * 00410500
*          One of BUFFER or BUFLIST is required for CASTOUT_DATA,     * 00410600
*          CASTOUT_DATALIST, CROSS_INVALLIST, WRITE_DATALIST,         * 00410700
*          UNLOCK_CASTOUT, PROCESS_REFLIST, READ_COCLASS,             * 00410800
*          READ_DIRINFO, READ_COSTATS, and DELETE_NAMELIST requests.  * 00410900
*                                                                     * 00411000
*          For WRITE_DATA requests, for structures allocated in       * 00411100
*          CFLEVEL=0 through CFLEVEL=3 coupling facilities inclusive  * 00411200
*          one of BUFFER or BUFLIST is required.  For structures      * 00411300
*          allocated in CFLEVEL=4 or higher coupling facilities one   * 00411400
*          of BUFFER or BUFLIST is required when CHANGED=YES and      * 00411500
*          optional when CHANGED=NO.                                  * 00411600
*                                                                     * 00411700
*          One of BUFFER or BUFLIST is optional for READ_DATA         * 00411800
*          requests.                                                  * 00411900
*                                                                     * 00412000
*          BUFFER is mutually exclusive with BUFLIST and with all     * 00412100
*          requests not described above.                              * 00412200
*                                                                     * 00412300
*          For READ_DATA, CASTOUT_DATA WRITE_DATA, DELETE_NAMELIST,   * 00412400
*          and CROSS_INVALLIST requests the length of a buffer must   * 00412500
*          be a multiple of 256 bytes between 256 and 4096.  Each     * 00412600
*          buffer must start on a 256-byte boundary and must not      * 00412700
*          cross a 4096-byte boundary.                                * 00412800
*                                                                     * 00412900
*          If BUFLIST is specified for a READ_DATA, CASTOUT_DATA, or  * 00413000
*          WRITE_DATA request and the structure does not support      * 00413100
*          entry data, or there is no data to return, or the read of  * 00413200
*          the data was suppressed, then the contents of BUFLIST      * 00413300
*          neither affects the request nor is affected by the         * 00413400
*          request.                                                   * 00413500
*                                                                     * 00413600
*          For UNLOCK_CASTOUT, PROCESS_REFLIST, READ_COCLASS,         * 00413700
*          READ_DIRINFO, READ_COSTATS, WRITE_DATALIST, and            * 00413800
*          CASTOUT_DATALIST requests each buffer must be 4096 bytes   * 00413900
*          in length and must start on a 4096-byte boundary.          * 00414000
*                                                                     * 00414100
*          For READ_DATA and CASTOUT_DATA requests BUFLIST defines a  * 00414200
*          set of buffers into which cached subsystem data is to be   * 00414300
*          read.                                                      * 00414400
*                                                                     * 00414500
*          For CASTOUT_DATALIST requests BUFLIST defines a set of     * 00414600
*          buffers that will contain the data area from the first     * 00414700
*          processed name in the CASTOUTLIST followed by the DEIB,    * 00414800
*          ADJUNCT data if it exists and the data area from the       * 00414900
*          second processed name in the CASTOUTLIST. This will        * 00415000
*          continue until the end of the CASTOUTLIST pointed to by    * 00415100
*          ENDINDEX is reached or until the command processing        * 00415200
*          completes prematurely for some other reason.               * 00415300
*                                                                     * 00415400
*          For CROSS_INVALLIST requests BUFLIST defines a set of      * 00415500
*          buffers containing a list of 16-byte structure entry names * 00415600
*          to be processed. STARTINDEX and ENDINDEX specify which     * 00415700
*          names are to be processed.                                 * 00415800
*                                                                     * 00415900
*          For WRITE_DATALIST requests BUFLIST defines a set of       * 00416000
*          buffers that will contain an array of 1 to 16              * 00416100
*          write-operation blocks specifying parameters to be used in * 00416200
*          writing entries to a cache structure, followed by the      * 00416300
*          corresponding data areas to be written to each entry       * 00416400
*          specified in the WOBs. WOBs can only be contained in the   * 00416500
*          first buffer pointed to by the first BUFLIST entry.        * 00416600
*                                                                     * 00416700
*          For WRITE_DATA requests BUFLIST defines a set of buffers   * 00416800
*          containing subsystem data to be written to the structure.  * 00416900
*                                                                     * 00417000
*          For UNLOCK_CASTOUT requests BUFLIST defines a set of       * 00417100
*          buffers containing a list of structure entry names to be   * 00417200
*          processed.  Upon invocation, the BUFLIST buffers must be   * 00417300
*          formatted into 32-byte name elements, starting at offset   * 00417400
*          zero.  FIRSTNAME and LASTNAME specify which name elements  * 00417500
*          are to be processed.  Each element consists of a 16-byte   * 00417600
*          structure entry name, immediately followed by 16 bytes of  * 00417700
*          request control information.  A mapping of a name element  * 00417800
*          for UNLOCK_CASTOUT requests is specified by the IXLYCUNB   * 00417900
*          mapping macro.                                             * 00418000
*                                                                     * 00418100
*          For PROCESS_REFLIST requests BUFLIST defines a set of      * 00418200
*          buffers containing a list of structure entry names to be   * 00418300
*          processed.  Upon invocation, the BUFLIST buffers must be   * 00418400
*          formatted into 16-byte name elements, starting at offset   * 00418500
*          zero, each of which contains a 16-byte structure entry     * 00418600
*          name to be processed.  PROCESS_REFLIST requests always     * 00418700
*          begin processing with the first name element.  NUMNAMES    * 00418800
*          specifies the number of name elements to be processed.     * 00418900
*                                                                     * 00419000
*          For READ_COCLASS requests BUFLIST defines a set of buffers * 00419100
*          to contain a list of returned elements.  Upon successful   * 00419200
*          completion, the BUFLIST buffers are formatted into         * 00419300
*          elements starting at offset zero.  A mapping of an element * 00419400
*          for READ_COCLASS requests is specified by either the       * 00419500
*          IXLYCANB mapping macro or the IXLYDEIB mapping macro       * 00419600
*          depending on the value specified on the DIRINFOFMT         * 00419700
*          keyword.                                                   * 00419800
*                                                                     * 00419900
*          For READ_DIRINFO requests BUFLIST defines a set of buffers * 00420000
*          to contain returned directory information.  Upon           * 00420100
*          successful completion, the BUFLIST buffers are formatted   * 00420200
*          into directory entries or name elements, one per directory * 00420300
*          entry processed, starting at offset zero.  Directory       * 00420400
*          entries are returned when DIRINFOFMT=DIRENTRYLIST is       * 00420500
*          specified.  The IXLYDEIB mapping macro specifies the       * 00420600
*          length, fields, and format of a directory element.  Name   * 00420700
*          elements are returned when DIRINFOFMT=NAMELIST is          * 00420800
*          specified.  The IXLYCANB mapping macro specifies the       * 00420900
*          length, fields, and format of a name element.              * 00421000
*                                                                     * 00421100
*          For READ_COSTATS requests BUFLIST defines a set of buffers * 00421200
*          to contain returned statistics information. The format of  * 00421300
*          the information returned depends on the value specified or * 00421400
*          selected by default on the COSTATSFMT keyword.  For        * 00421500
*          structures allocated in CFLEVEL=4 or lower coupling        * 00421600
*          facilities the COSTATSFMT keyword is not recognized and is * 00421700
*          considered to always default to COSTATSFMT=COCOUNTSLIST.   * 00421800
*                                                                     * 00421900
*          If COSTATSFMT=COCOUNTSLIST is either specified or selected * 00422000
*          by default then upon successful completion of the request  * 00422100
*          the first four bytes of the first buffer contain general   * 00422200
*          information pertinent to the request.  A mapping of this   * 00422300
*          information is specified by the Ccih mapping in the        * 00422400
*          IXLYCCIH mapping macro.  Starting at offset four in the    * 00422500
*          first buffer is an array of fullwords,  with each fullword * 00422600
*          containing the number of data elements associated with     * 00422700
*          entries that are associated with the indicated cast-out    * 00422800
*          class.  The number of fullwords returned equals the number * 00422900
*          of cast-out classes processed, and the relative position   * 00423000
*          of the fullword in the array associates it with the        * 00423100
*          cast-out class represented by the same relative position   * 00423200
*          in the range of cast-out classes processed.  This format   * 00423300
*          is mapped in the CCIHCOUNTS mapping in the IXLYCCIH        * 00423400
*          mapping macro.                                             * 00423500
*                                                                     * 00423600
*          If COSTATSFMT=COSTATSLIST is specified then upon           * 00423700
*          successful completion of the request the first 4 bytes of  * 00423800
*          the first buffer contains general information pertinent to * 00423900
*          the request.  A mapping of this information is specified   * 00424000
*          by the CCIH mapping in the IXLYCCIH mapping macro.  The    * 00424100
*          next 28 bytes in the buffer are reserved.  Each subsequent * 00424200
*          32 bytes will be an information element which is described * 00424300
*          by the CCIHCCIBS mapping in the IXLYCCIH mapping macro.    * 00424400
*          The number of information elements returned equals the     * 00424500
*          number of cast-out classes processed, and the relative     * 00424600
*          position of the information element in the array           * 00424700
*          associates it with the cast-out class represented by the   * 00424800
*          same relative position in the range of cast-out classes    * 00424900
*          processed.                                                 * 00425000
*                                                                     * 00425100
*          For DELETE_NAMELIST requests BUFLIST defines a set of      * 00425200
*          buffers containing a list of structure entry name elements * 00425300
*          to be processed.  Upon invocation, the BUFLIST buffers     * 00425400
*          must be formatted into 32-byte name elements, starting at  * 00425500
*          offset zero.  STARTINDEX and ENDINDEX specify which name   * 00425600
*          elements are to be processed.  A mapping of a name element * 00425700
*          for DELETE_NAMELIST requests is specified by the IXLYDNNB  * 00425800
*          mapping macro.                                             * 00425900
*                                                                     * 00426000
*                                                                     * 00426100
*          ÝBUFADDRTYPE=»VIRTUAL!REALº                                * 00426200
*              is an optional keyword input that specifies whether    * 00426300
*              the buffer addresses specified in the BUFLIST list are * 00426400
*              virtual storage addresses or real storage addresses.   * 00426500
*                                                                     * 00426600
*              DEFAULT: VIRTUAL                                       * 00426700
*                                                                     * 00426800
*                                                                     * 00426900
*              ÝBUFADDRTYPE=VIRTUAL                                   * 00427000
*                  Indicates that the buffer addresses specified in   * 00427100
*                  the BUFLIST list are virtual storage addresses.    * 00427200
*                                                                     * 00427300
*                                                                     * 00427400
*                                                                     * 00427500
*                  ÝPAGEABLE=»YES!NOº¨                                * 00427600
*                      is an optional keyword input that specifies    * 00427700
*                      whether or not the buffers specified by        * 00427800
*                      BUFLIST resides in pageable storage.           * 00427900
*                                                                     * 00428000
*                      DEFAULT: YES                                   * 00428100
*                                                                     * 00428200
*                                                                     * 00428300
*                      ÝPAGEABLE=YES                                  * 00428400
*                          Indicates that the BUFLIST buffers reside  * 00428500
*                          in pageable virtual storage.               * 00428600
*                                                                     * 00428700
*                          This includes disabled reference (DREF)    * 00428800
*                          storage, and may include storage that has  * 00428900
*                          the potential to become pageable during    * 00429000
*                          the processing of a request (for example,  * 00429100
*                          address space storage owned by any         * 00429200
*                          swappable address space, for which a PGSER * 00429300
*                          FIX has been successfully processed,  but  * 00429400
*                          for which the owning address space gets    * 00429500
*                          swapped during processing of an IXLCACHE   * 00429600
*                          request).  It does not include implicitly  * 00429700
*                          non-pageable storage (such as is obtained  * 00429800
*                          from non-pageable subpools).               * 00429900
*                                                                     * 00430000
*                          The system takes responsibility for        * 00430100
*                          managing real storage binds associated     * 00430200
*                          with the pageable virtual storage for the  * 00430300
*                          duration of the request,  regardless of    * 00430400
*                          what address space owns the storage or     * 00430500
*                          whether the storage-owning address space   * 00430600
*                          is swappable or nonswappable.  The storage * 00430700
*                          may be owned by any address space.         * 00430800
*                                                                     * 00430900
*                                                                     * 00431000
*                                                                     * 00431100
*                          ÝBUFSTGKEY=»xbufstgkey!CALLERS_KEYº¨¨      * 00431200
*                              is the name (RS-type), or address in   * 00431300
*                              register (2)-(12), of an optional 8    * 00431400
*                              bit input containing the storage key   * 00431500
*                              to be used when referencing the        * 00431600
*                              buffers in the list specified by       * 00431700
*                              BUFLIST.                               * 00431800
*                                                                     * 00431900
*                              The high order nibble contains the     * 00432000
*                              storage key, the low order nibble is   * 00432100
*                              ignored.  For example, set 'kkkk' in   * 00432200
*                              the binary bit string 'kkkkxxxx'B to   * 00432300
*                              correspond to the desired storage key. * 00432400
*                                                                     * 00432500
*                              If BUFSTGKEY is not specified, then    * 00432600
*                              all references to the BUFLIST buffers  * 00432700
*                              are performed using the caller's PSW   * 00432800
*                              key.                                   * 00432900
*                                                                     * 00433000
*                              DEFAULT: CALLERS_KEY                   * 00433100
*                                                                     * 00433200
*                                                                     * 00433300
*                                                                     * 00433400
*                      ÝPAGEABLE=NO¨                                  * 00433500
*                          Indicates that the BUFLIST buffers reside  * 00433600
*                          in non-pageable virtual storage.           * 00433700
*                                                                     * 00433800
*                          This includes implicitly non-pageable      * 00433900
*                          storage areas (such as is obtained from    * 00434000
*                          non-pageable subpools), and may include    * 00434100
*                          storage that has the potential to become   * 00434200
*                          pageable during the processing of an       * 00434300
*                          IXLCACHE request (for example, address     * 00434400
*                          space storage owned by a swappable         * 00434500
*                          requestor's or connector's address space,  * 00434600
*                          for which a PGSER FIX  has been            * 00434700
*                          successfully processed,  but for which the * 00434800
*                          owning address space has been swapped      * 00434900
*                          during processing of an IXLCACHE request). * 00435000
*                                                                     * 00435100
*                          The system takes responsibility for        * 00435200
*                          managing real storage binds associated     * 00435300
*                          with the non-pageable virtual storage for  * 00435400
*                          the duration of the request if and only if * 00435500
*                          the storage is owned by either the         * 00435600
*                          requestor's address space or the           * 00435700
*                          connector's address space.  If the storage * 00435800
*                          is owned by any other address space, then  * 00435900
*                          the invoker is responsible for ensuring    * 00436000
*                          that the virtual storage remains fixed in  * 00436100
*                          real storage for the duration of the       * 00436200
*                          request (including the case where the      * 00436300
*                          storage is owned by a swappable address    * 00436400
*                          space which is swapped during processing   * 00436500
*                          of the request).  With this proviso, the   * 00436600
*                          storage may be owned by any address space. * 00436700
*                                                                     * 00436800
*                          If MODE=ASYNCTOKEN is specified or         * 00436900
*                          MODE=SYNCTOKEN is specified and the        * 00437000
*                          request does not complete synchronously,   * 00437100
*                          then the storage must remain non-pageable  * 00437200
*                          until completion of the corresponding      * 00437300
*                          IXLFCOMP request.  If MODE=ASYNCEXIT is    * 00437400
*                          specified or MODE=SYNCEXIT is specified    * 00437500
*                          and the request does not complete          * 00437600
*                          synchronously, then the storage must       * 00437700
*                          remain non-pageable until the completion   * 00437800
*                          exit is driven for the request.  If        * 00437900
*                          MODE=ASYNCECB is specified or MODE=SYNCECB * 00438000
*                          is specified and the request does not      * 00438100
*                          complete synchronously, then the storage   * 00438200
*                          must remain non-pageable until the         * 00438300
*                          specified ECB is posted for the request.   * 00438400
*                                                                     * 00438500
*                                                                     * 00438600
*                                                                     * 00438700
*                                                                     * 00438800
*                                                                     * 00438900
*                                                                     * 00439000
*                  ÝBUFALET=»xbufalet!NO_BUFALETº¨                    * 00439100
*                      is the name (RS-type), or address in register  * 00439200
*                      (2)-(12), of an optional fullword input        * 00439300
*                      specifying the ALET value to be used in        * 00439400
*                      referencing all of the buffers specified for   * 00439500
*                      BUFLIST                                        * 00439600
*                                                                     * 00439700
*                      DEFAULT: NO_BUFALET                            * 00439800
*                                                                     * 00439900
*                                                                     * 00440000
*                                                                     * 00440100
*                                                                     * 00440200
*                  ÝBUFADDRSIZE=»31!64º¨                              * 00440300
*                      is an optional keyword input that specifies    * 00440400
*                      whether a 31 or a 64 bit address is specified  * 00440500
*                      by a BUFLIST entry.                            * 00440600
*                                                                     * 00440700
*                      DEFAULT: 31                                    * 00440800
*                                                                     * 00440900
*                                                                     * 00441000
*                      ÝBUFADDRSIZE=31¨                               * 00441100
*                          Indicates that the BUFLIST entry is 31     * 00441200
*                          bits in size.                              * 00441300
*                                                                     * 00441400
*                      ÝBUFADDRSIZE=64¨¨                              * 00441500
*                          Indicates that the BUFLIST entry is 64     * 00441600
*                          bits in size.                              * 00441700
*                                                                     * 00441800
*                                                                     * 00441900
*                                                                     * 00442000
*                                                                     * 00442100
*                                                                     * 00442200
*              ÝBUFADDRTYPE=REAL                                      * 00442300
*                  Indicates that the buffer addresses specified in   * 00442400
*                  the BUFLIST list are real storage addresses.       * 00442500
*                                                                     * 00442600
*                  The system takes no responsibility for managing    * 00442700
*                  real storage binds when real addresses are         * 00442800
*                  provided.  The invoker is responsible for ensuring * 00442900
*                  the real storage addresses provided remain valid   * 00443000
*                  for the duration of the request (including the     * 00443100
*                  case where the real storage provided is backing    * 00443200
*                  virtual storage owned by a swappable address space * 00443300
*                  which is swapped during processing of the          * 00443400
*                  request).  The virtual storage backed by the real  * 00443500
*                  storage whose addresses are provided may be owned  * 00443600
*                  by any address space.                              * 00443700
*                                                                     * 00443800
*                                                                     * 00443900
*                                                                     * 00444000
*                  ÝBUFADDRSIZE=»31!64º¨¨                             * 00444100
*                      is an optional keyword input that specifies    * 00444200
*                      whether a 31 or a 64 bit address is specified  * 00444300
*                      by a BUFLIST entry.                            * 00444400
*                                                                     * 00444500
*                      DEFAULT: 31                                    * 00444600
*                                                                     * 00444700
*                                                                     * 00444800
*                      ÝBUFADDRSIZE=31¨                               * 00444900
*                          Indicates that the BUFLIST entry is 31     * 00445000
*                          bits in size.                              * 00445100
*                                                                     * 00445200
*                      ÝBUFADDRSIZE=64¨¨                              * 00445300
*                          Indicates that the BUFLIST entry is 64     * 00445400
*                          bits in size.                              * 00445500
*                                                                     * 00445600
*                                                                     * 00445700
*                                                                     * 00445800
*                                                                     * 00445900
*                                                                     * 00446000
*                                                                     * 00446100
*                                                                     * 00446200
*                                                                     * 00446300
*                                                                     * 00446400
*                                                                     * 00446500
*          ÝBUFNUM=»xbufnum!NO_BUFNUMº¨                               * 00446600
*              is the name (RS-type), or address in register          * 00446700
*              (2)-(12), of an optional byte input specifying the     * 00446800
*              number of buffers defined in the BUFLIST list.         * 00446900
*                                                                     * 00447000
*              BUFNUM values must be in the range of 0 to 16.  A      * 00447100
*              BUFNUM value of zero indicates that no structure data  * 00447200
*              is to be read or written into the BUFLIST buffers.     * 00447300
*                                                                     * 00447400
*              BUFNUM is required when BUFLIST is specified, and is   * 00447500
*              mutually exclusive otherwise.                          * 00447600
*                                                                     * 00447700
*              DEFAULT: NO_BUFNUM                                     * 00447800
*                                                                     * 00447900
*                                                                     * 00448000
*                                                                     * 00448100
*                                                                     * 00448200
*          ÝBUFINCRNUM=»xbufincrnum!NO_BUFINCRNUMº¨                   * 00448300
*              is the name (RS-type), or address in register          * 00448400
*              (2)-(12), of an optional byte input specifying the     * 00448500
*              number of 256-byte increments or segments in each      * 00448600
*              buffer in the BUFLIST list.                            * 00448700
*                                                                     * 00448800
*              BUFINCRNUM values must be a power of 2 in the range of * 00448900
*              1 to 16 (1, 2, 4, 8, 16), corresponding to BUFLIST     * 00449000
*              buffer sizes of 256 to 4096 bytes.                     * 00449100
*                                                                     * 00449200
*              BUFINCRNUM is mutually exclusive with UNLOCK_CASTOUT,  * 00449300
*              PROCESS_REFLIST, READ_COCLASS, READ_DIRINFO,           * 00449400
*              CASTOUT_DATALIST, WRITE_DATALIST, and READ_COSTATS     * 00449500
*              requests.  For these requests a BUFINCRNUM value of 16 * 00449600
*              will be used.  For all other requests BUFINCRNUM is    * 00449700
*              required when BUFLIST is specified.                    * 00449800
*                                                                     * 00449900
*              DEFAULT: NO_BUFINCRNUM                                 * 00450000
*                                                                     * 00450100
*                                                                     * 00450200
*                                                                     * 00450300
*      BUFFER=»xbufferº                                               * 00450400
*          belongs to a set of mutually exclusive keys. It is an      * 00450500
*          optional input.  It is the name (RS-type), or address in   * 00450600
*          register (2)-(12), of a virtual storage area containing    * 00450700
*          input data for the request or to receive output data from  * 00450800
*          the request, depending on the request specified.  The      * 00450900
*          BUFSIZE keyword specifies the size of the buffer.  The     * 00451000
*          BUFFER keyword supports 4 byte addresses only.  The BUFFER * 00451100
*          keyword is mutually exclusive with the BUFADDRSIZE         * 00451200
*          keyword.  The BUFFER may not reside in large pages.        * 00451300
*                                                                     * 00451400
*          BUFFER is required for REG_NAMELIST requests.  One of      * 00451500
*          BUFFER or BUFLIST is required for CASTOUT_DATA,            * 00451600
*          CASTOUT_DATALIST, CROSS_INVALLIST, WRITE_DATALIST,         * 00451700
*          UNLOCK_CASTOUT, PROCESS_REFLIST, READ_COCLASS,             * 00451800
*          READ_DIRINFO, READ_COSTATS, and DELETE_NAMELIST requests.  * 00451900
*                                                                     * 00452000
*          For WRITE_DATA requests, for structures allocated in       * 00452100
*          CFLEVEL=0 through CFLEVEL=3 coupling facilities inclusive  * 00452200
*          one of BUFFER or BUFLIST is required.  For structures      * 00452300
*          allocated in CFLEVEL=4 or higher coupling facilities one   * 00452400
*          of BUFFER or BUFLIST is required when CHANGED=YES and      * 00452500
*          optional when CHANGED=NO.                                  * 00452600
*                                                                     * 00452700
*          One of BUFFER or BUFLIST is optional for READ_DATA         * 00452800
*          requests.                                                  * 00452900
*                                                                     * 00453000
*          BUFFER is mutually exclusive with BUFLIST and with all     * 00453100
*          requests not described above.                              * 00453200
*                                                                     * 00453300
*          For READ_DATA, REG_NAMELIST, CASTOUT_DATA,                 * 00453400
*          DELETE_NAMELIST, WRITE_DATA, WRITE_DATALIST, and           * 00453500
*          CROSS_INVALLIST requests if the length of the buffer is    * 00453600
*          less than or equal to 4096 bytes then the length of the    * 00453700
*          buffer must be a power of 2 between 256 and 4096 bytes     * 00453800
*          (256, 512, 1024, 2048, or 4096), the buffer must start on  * 00453900
*          a 256-byte boundary, and the buffer must not cross a       * 00454000
*          4096-byte boundary.  If the length of the buffer is        * 00454100
*          greater than 4096 bytes then the length of the buffer must * 00454200
*          be a multiple of 4096 bytes between 4096 and 65536 and the * 00454300
*          buffer must start on a 4096-byte boundary.                 * 00454400
*                                                                     * 00454500
*          If BUFFER is specified for a READ_DATA, CASTOUT_DATA, or   * 00454600
*          WRITE_DATA request and the structure does not support      * 00454700
*          entry data, or there is no data to return, or the read of  * 00454800
*          the data was suppressed, then the contents of BUFFER       * 00454900
*          neither affects the request nor is affected by the         * 00455000
*          request.                                                   * 00455100
*                                                                     * 00455200
*          For UNLOCK_CASTOUT, PROCESS_REFLIST, READ_COCLASS,         * 00455300
*          READ_DIRINFO, READ_COSTATS, and CASTOUT_DATALIST requests  * 00455400
*          the length of the buffer must be a multiple of 4096 bytes  * 00455500
*          between 4096 and 65536 and the buffer must start on a      * 00455600
*          4096-byte boundary.                                        * 00455700
*                                                                     * 00455800
*          For READ_DATA and CASTOUT_DATA requests BUFFER defines an  * 00455900
*          area into which cached subsystem data is to be read.       * 00456000
*                                                                     * 00456100
*          For WRITE_DATA requests BUFFER defines an area containing  * 00456200
*          subsystem data to be written to the structure.             * 00456300
*                                                                     * 00456400
*          For REG_NAMELIST requests, BUFFER defines an area          * 00456500
*          containing an array of 1 to 32 registration blocks         * 00456600
*          specifying parameters to be used in registering interest   * 00456700
*          in a given set of entries.  Note that for a REG_NAMELIST   * 00456800
*          request,  the BUFFER area must be addressable in the       * 00456900
*          caller's primary address space or from the caller's PASN   * 00457000
*          access list.                                               * 00457100
*                                                                     * 00457200
*          For WRITE_DATALIST requests, BUFFER defines an area        * 00457300
*          containing an array of 1 to 256 write-operation blocks     * 00457400
*          specifying parameters to be used in writing entries to a   * 00457500
*          cache structure, followed by the corresponding data areas  * 00457600
*          to be written to each entry specified in the WOBs.  Note   * 00457700
*          that for a WRITE_DATALIST request,  the BUFFER area must   * 00457800
*          be addressable in the caller's primary address space or    * 00457900
*          from the caller's PASN access list.                        * 00458000
*                                                                     * 00458100
*          For CASTOUT_DATALIST requests BUFFER defines an area that  * 00458200
*          will contain the data area from the first processed name   * 00458300
*          in the CASTOUTLIST followed by the DEIB, ADJUNCT data if   * 00458400
*          it exists and the data area from the second processed name * 00458500
*          in the CASTOUTLIST. This will continue until the end of    * 00458600
*          the CASTOUTLIST pointed to by ENDINDEX is reached or until * 00458700
*          the command processing completes prematurely for some      * 00458800
*          other reason.                                              * 00458900
*                                                                     * 00459000
*          For CROSS_INVALLIST requests BUFFER defines an area        * 00459100
*          containing a list of 16-byte structure entry names to be   * 00459200
*          processed. STARTINDEX and ENDINDEX specify which names are * 00459300
*          to be processed.                                           * 00459400
*                                                                     * 00459500
*          For UNLOCK_CASTOUT requests BUFFER defines an area         * 00459600
*          containing a list of structure entry names to be           * 00459700
*          processed.  Upon invocation, BUFFER must be formatted into * 00459800
*          32-byte name elements, starting at offset zero.  FIRSTNAME * 00459900
*          and LASTNAME specify which name elements are to be         * 00460000
*          processed.  Each element consists of a 16-byte structure   * 00460100
*          entry name, immediately followed by 16 bytes of request    * 00460200
*          control information.  A mapping of a name element for      * 00460300
*          UNLOCK_CASTOUT requests is specified by the IXLYCUNB       * 00460400
*          mapping macro.                                             * 00460500
*                                                                     * 00460600
*          For PROCESS_REFLIST requests BUFFER defines an area        * 00460700
*          containing a list of structure entry names to be           * 00460800
*          processed.  Upon invocation, BUFFER must be formatted into * 00460900
*          16-byte name elements, starting at offset zero, each of    * 00461000
*          which contains a 16-byte structure entry name to be        * 00461100
*          processed.  PROCESS_REFLIST requests always begin          * 00461200
*          processing with the first name element.  NUMNAMES          * 00461300
*          specifies the number of name elements to be processed.     * 00461400
*                                                                     * 00461500
*          For READ_COCLASS requests BUFFER defines an area to        * 00461600
*          contain a list of returned name elements.  Upon successful * 00461700
*          completion, BUFFER is formatted into name elements,        * 00461800
*          starting at offset zero.  A mapping of a name element for  * 00461900
*          READ_COCLASS requests is specified by either the IXLYCANB  * 00462000
*          mapping macro or the IXLYDEIB mapping macro depending on   * 00462100
*          the value specified on the DIRINFOFMT keyword.             * 00462200
*                                                                     * 00462300
*          For READ_DIRINFO requests BUFFER defines an area to        * 00462400
*          contain returned directory information.  Upon successful   * 00462500
*          completion, BUFFER is formatted into directory entries or  * 00462600
*          name elements, one per directory entry processed, starting * 00462700
*          at offset zero.  Directory entries are returned when       * 00462800
*          DIRINFOFMT=DIRENTRYLIST is specified.  The IXLYDEIB        * 00462900
*          mapping macro specifies the length, fields, and format of  * 00463000
*          a directory element.  Name elements are returned when      * 00463100
*          DIRINFOFMT=NAMELIST is specified.  The IXLYCANB mapping    * 00463200
*          macro specifies the length, fields, and format of a name   * 00463300
*          element.                                                   * 00463400
*                                                                     * 00463500
*          For READ_COSTATS requests BUFFER defines an area to        * 00463600
*          contain returned statistics information.  The format of    * 00463700
*          the information returned depends on the value specified or * 00463800
*          selected by default on the COSTATSFMT keyword.  For        * 00463900
*          structures allocated in CFLEVEL=4 or lower coupling        * 00464000
*          facilities the COSTATSFMT keyword is not recognized and is * 00464100
*          considered to always default to COSTATSFMT=COCOUNTSLIST.   * 00464200
*                                                                     * 00464300
*          If COSTATSFMT=COCOUNTSLIST is either specified or selected * 00464400
*          by default then upon successful completion of the request  * 00464500
*          the first four bytes of BUFFER contains general            * 00464600
*          information pertinent to the request.  A mapping of this   * 00464700
*          information is specified by the CCIH mapping in the        * 00464800
*          IXLYCCIH mapping macro.  Starting at offset four BUFFER    * 00464900
*          contains an array of fullwords,  with each fullword        * 00465000
*          containing the number of data elements associated with     * 00465100
*          entries that are associated with the indicated cast-out    * 00465200
*          class.  The number of fullwords returned equals the number * 00465300
*          of cast-out classes processed, and the relative position   * 00465400
*          of the fullword in the array associates it with the        * 00465500
*          cast-out class represented by the same relative position   * 00465600
*          in the range of cast-out classes processed.  A mapping of  * 00465700
*          this information is specified by the CCIHCOUNTS mapping in * 00465800
*          the IXLYCCIH mapping macro.                                * 00465900
*                                                                     * 00466000
*          If COSTATSFMT=COSTATSLIST is specified then upon           * 00466100
*          successful completion of the request the first 4 bytes of  * 00466200
*          the BUFFER contain general information pertinent to the    * 00466300
*          request.  A mapping of this information is specified by    * 00466400
*          the CCIH mapping in the IXLYCCIH mapping macro.  The next  * 00466500
*          28 bytes in the buffer are reserved.  Each subsequent 32   * 00466600
*          bytes will be an information element which is described by * 00466700
*          the CCIHCCIBS mapping in the IXLYCCIH mapping macro.  The  * 00466800
*          number of information elements returned equals the number  * 00466900
*          of cast-out classes processed, and the relative position   * 00467000
*          of the information element in the array associates it with * 00467100
*          the cast-out class represented by the same relative        * 00467200
*          position in the range of cast-out classes processed.       * 00467300
*                                                                     * 00467400
*          For DELETE_NAMELIST requests BUFFER defines an area        * 00467500
*          containing a list of structure entry name elements to be   * 00467600
*          processed.  Upon invocation, BUFFER must be formatted into * 00467700
*          32-byte name elements, starting at offset zero.            * 00467800
*          STARTINDEX and ENDINDEX specify which name elements are to * 00467900
*          be processed.  A mapping of a name element for             * 00468000
*          DELETE_NAMELIST requests is specified by the IXLYDNNB      * 00468100
*          mapping macro.                                             * 00468200
*                                                                     * 00468300
*                                                                     * 00468400
*          ÝPAGEABLE=»YES!NOº¨                                        * 00468500
*              is an optional keyword input that specifies whether or * 00468600
*              not the storage area specified by BUFFER resides in    * 00468700
*              pageable storage.                                      * 00468800
*                                                                     * 00468900
*              DEFAULT: YES                                           * 00469000
*                                                                     * 00469100
*                                                                     * 00469200
*              ÝPAGEABLE=YES                                          * 00469300
*                  Indicates that the BUFFER area resides in pageable * 00469400
*                  virtual storage.                                   * 00469500
*                                                                     * 00469600
*                  This includes disabled reference (DREF) storage,   * 00469700
*                  and may include storage that has the potential to  * 00469800
*                  become pageable during the processing of a request * 00469900
*                  (for example, address space storage owned by any   * 00470000
*                  swappable address space, for which a PGSER FIX has * 00470100
*                  been successfully processed,  but for which the    * 00470200
*                  owning address space gets swapped during           * 00470300
*                  processing of an IXLCACHE request).  It does not   * 00470400
*                  include implicitly non-pageable storage (such as   * 00470500
*                  is obtained from non-pageable subpools).           * 00470600
*                                                                     * 00470700
*                  The system takes responsibility for managing real  * 00470800
*                  storage binds associated with the pageable virtual * 00470900
*                  storage for the duration of the request,           * 00471000
*                  regardless of what address space owns the storage  * 00471100
*                  or whether the storage-owning address space is     * 00471200
*                  swappable or nonswappable.  The storage may be     * 00471300
*                  owned by any address space.                        * 00471400
*                                                                     * 00471500
*                                                                     * 00471600
*                                                                     * 00471700
*                  ÝBUFSTGKEY=»xbufstgkey!CALLERS_KEYº¨¨              * 00471800
*                      is the name (RS-type), or address in register  * 00471900
*                      (2)-(12), of an optional 8 bit input           * 00472000
*                      containing the storage key to be used when     * 00472100
*                      referencing the storage area specified by      * 00472200
*                      BUFFER.                                        * 00472300
*                                                                     * 00472400
*                      The high order nibble contains the storage     * 00472500
*                      key, the low order nibble is ignored.  For     * 00472600
*                      example, set 'kkkk' in the binary bit string   * 00472700
*                      'kkkkxxxx'B to correspond to the desired       * 00472800
*                      storage key.                                   * 00472900
*                                                                     * 00473000
*                      If BUFSTGKEY is not specified, then all        * 00473100
*                      references to the BUFFER buffer storage are    * 00473200
*                      performed using the caller's PSW key.          * 00473300
*                                                                     * 00473400
*                      DEFAULT: CALLERS_KEY                           * 00473500
*                                                                     * 00473600
*                                                                     * 00473700
*                                                                     * 00473800
*              ÝPAGEABLE=NO¨                                          * 00473900
*                  Indicates that the BUFFER area resides in          * 00474000
*                  non-pageable virtual storage.                      * 00474100
*                                                                     * 00474200
*                  This includes implicitly non-pageable storage      * 00474300
*                  areas (such as is obtained from non-pageable       * 00474400
*                  subpools), and may include storage that has the    * 00474500
*                  potential to become pageable during the processing * 00474600
*                  of an IXLCACHE request (for example, address space * 00474700
*                  storage owned by a swappable requestor's or        * 00474800
*                  connector's address space, for which a PGSER FIX   * 00474900
*                  has been successfully processed,  but for which    * 00475000
*                  the owning address space has been swapped during   * 00475100
*                  processing of an IXLCACHE request).                * 00475200
*                                                                     * 00475300
*                  The system takes responsibility for managing real  * 00475400
*                  storage binds associated with the non-pageable     * 00475500
*                  virtual storage for the duration of the request if * 00475600
*                  and only if the storage is owned by either the     * 00475700
*                  requestor's address space or the connector's       * 00475800
*                  address space.  If the storage is owned by any     * 00475900
*                  other address space, then the invoker is           * 00476000
*                  responsible for ensuring that the virtual storage  * 00476100
*                  remains fixed in real storage for the duration of  * 00476200
*                  the request (including the case where the storage  * 00476300
*                  is owned by a swappable address space which is     * 00476400
*                  swapped during processing of the request).  With   * 00476500
*                  this proviso, the storage may be owned by any      * 00476600
*                  address space.                                     * 00476700
*                                                                     * 00476800
*                  If MODE=ASYNCTOKEN is specified or MODE=SYNCTOKEN  * 00476900
*                  is specified and the request does not complete     * 00477000
*                  synchronously, then the storage must remain        * 00477100
*                  non-pageable until completion of the corresponding * 00477200
*                  IXLFCOMP request.  If MODE=ASYNCEXIT is specified  * 00477300
*                  or MODE=SYNCEXIT is specified and the request does * 00477400
*                  not complete synchronously, then the storage must  * 00477500
*                  remain non-pageable until the completion exit is   * 00477600
*                  driven for the request.  If MODE=ASYNCECB is       * 00477700
*                  specified or MODE=SYNCECB is specified and the     * 00477800
*                  request does not complete synchronously, then the  * 00477900
*                  storage must remain non-pageable until the         * 00478000
*                  specified ECB is posted for the request.           * 00478100
*                                                                     * 00478200
*                                                                     * 00478300
*                                                                     * 00478400
*                                                                     * 00478500
*                                                                     * 00478600
*                                                                     * 00478700
*          BUFSIZE=xbufsize¨                                          * 00478800
*              is the name (RS-type), or address in register          * 00478900
*              (2)-(12), of a required fullword input specifying the  * 00479000
*              length of the virtual storage area specified for       * 00479100
*              BUFFER in bytes.                                       * 00479200
*                                                                     * 00479300
*              Refer to BUFFER for the buffer size requirements for   * 00479400
*              each request type.                                     * 00479500
*                                                                     * 00479600
*              BUFSIZE is required when BUFFER is specified, and is   * 00479700
*              mutually exclusive otherwise.                          * 00479800
*                                                                     * 00479900
*                                                                     * 00480000
*                                                                     * 00480100
*                                                                     * 00480200
*                                                                     * 00480300
*      End of a set of mutually exclusive optional keys.              * 00480400
*      DEFAULT: BUFLIST                                               * 00480500
*                                                                     * 00480600
*                                                                     * 00480700
*                                                                     * 00480800
*      ÝADJAREA=»xadjarea!NO_ADJAREAº¨                                * 00480900
*          is an optional input.  It is the name (RS-type), or        * 00481000
*          address in register (2)-(12), of a 64-byte area in virtual * 00481100
*          storage where structure entry adjunct data is to be read   * 00481200
*          for a READ_DATA, CASTOUT_DATA, or CASTOUT_DATALIST         * 00481300
*          request, or where data to be written to a structure entry  * 00481400
*          adjunct area resides for a WRITE_DATA request.  When       * 00481500
*          ADJAREA is specified for a CASTOUT_DATALIST request, it    * 00481600
*          will contain the adjunct data that was read from the first * 00481700
*          processed entry.                                           * 00481800
*                                                                     * 00481900
*          ADJAREA may optionally be specified on READ_DATA,          * 00482000
*          CASTOUT_DATA, and CASTOUT_DATALIST requests.  ADJAREA may  * 00482100
*          optionally be specified for a WRITE_DATA request only when * 00482200
*          ELEMNUM is greater than 0.  ADJAREA is mutually exclusive  * 00482300
*          with all other request types.                              * 00482400
*                                                                     * 00482500
*          If the structure supports adjunct data and ADJAREA is not  * 00482600
*          specified, then:                                           * 00482700
*                                                                     * 00482800
*                                                                     * 00482900
*          o   For WRITE_DATA requests binary zeros are written to    * 00483000
*              the adjunct area if ELEMNUM is greater than 0.         * 00483100
*              Otherwise adjunct does not exist for the entry.        * 00483200
*                                                                     * 00483300
*          o   For READ_DATA and CASTOUT_DATA requests no adjunct     * 00483400
*              data is returned.                                      * 00483500
*                                                                     * 00483600
*          o   For CASTOUT_DATALIST requests no adjunct data is       * 00483700
*              returned for the first entry processed.                * 00483800
*                                                                     * 00483900
*                                                                     * 00484000
*                                                                     * 00484100
*          If the structure does not support adjunct data and ADJAREA * 00484200
*          is specified, then:                                        * 00484300
*                                                                     * 00484400
*                                                                     * 00484500
*          o   For WRITE_DATA requests ADJAREA is ignored.            * 00484600
*                                                                     * 00484700
*          o   For READ_DATA and CASTOUT_DATA, requests entry data is * 00484800
*              returned, but no adjunct data is returned and the      * 00484900
*              request will complete with return code 4               * 00485000
*              (IxlRetCodeWarning) and reason code xxxx040C           * 00485100
*              (IxlRsnCodeNoAdjunctData).                             * 00485200
*                                                                     * 00485300
*          o   For CASTOUT_DATALIST requests entry data is returned,  * 00485400
*              but no adjunct data is returned for every entry        * 00485500
*              processed and CaaAdjareaValid, returned in the         * 00485600
*              ANSAREA, will indicate that adjunct data did not       * 00485700
*              exist.                                                 * 00485800
*                                                                     * 00485900
*                                                                     * 00486000
*                                                                     * 00486100
*          If the structure supports adjunct data and ADJAREA is      * 00486200
*          specified, but there is no data and adjunct associated     * 00486300
*          with the entry then:                                       * 00486400
*                                                                     * 00486500
*                                                                     * 00486600
*          o   For READ_DATA requests the request completes with      * 00486700
*              return code 4 (IxlRetCodeWarning) and reason code      * 00486800
*              xxxx040A (IxlRsnCodeNoReadData).                       * 00486900
*                                                                     * 00487000
*          o   For CASTOUT_DATA requests the request fails with       * 00487100
*              return code 8 (IxlRetCodeParmError) and reason code    * 00487200
*              xxxx0828 (IxlRsnCodeCOUnchanged).                      * 00487300
*                                                                     * 00487400
*                                                                     * 00487500
*                                                                     * 00487600
*          DEFAULT: NO_ADJAREA                                        * 00487700
*                                                                     * 00487800
*                                                                     * 00487900
*                                                                     * 00488000
*                                                                     * 00488100
*      ÝSTGCLASS=»xstgclass!NO_STGCLASSº¨                             * 00488200
*          is the name (RS-type), or address in register (2)-(12), of * 00488300
*          an optional byte input field that contains the storage     * 00488400
*          class for the data entry being read or written, for which  * 00488500
*          storage class a reclaim vector is to be activated or       * 00488600
*          deactivated, to indicate which storage class is affected   * 00488700
*          by reference processing, or to indicate which storage      * 00488800
*          class statistics should be reported for.                   * 00488900
*                                                                     * 00489000
*          STGCLASS is required for READ_DATA, WRITE_DATA,            * 00489100
*          PROCESS_REFLIST, SET_RECLVCTR, and READ_STGSTATS requests. * 00489200
*          It is mutually exclusive with all other request types.     * 00489300
*                                                                     * 00489400
*          DEFAULT: NO_STGCLASS                                       * 00489500
*                                                                     * 00489600
*                                                                     * 00489700
*                                                                     * 00489800
*                                                                     * 00489900
*      ÝCOCLASS=»xcoclass!NO_COCLASSº¨                                * 00490000
*          is the name (RS-type), or address in register (2)-(12), of * 00490100
*          an optional halfword input field that contains the         * 00490200
*          cast-out class number for the data entry being written, or * 00490300
*          for which cast-out class directory entry names and         * 00490400
*          directory entry user data should be retrieved.             * 00490500
*                                                                     * 00490600
*          COCLASS is required for WRITE_DATA requests when           * 00490700
*          CHANGED=YES is also specified, and for READ_COCLASS        * 00490800
*          requests.  It is mutually exclusive with all other request * 00490900
*          types.                                                     * 00491000
*                                                                     * 00491100
*          DEFAULT: NO_COCLASS                                        * 00491200
*                                                                     * 00491300
*                                                                     * 00491400
*                                                                     * 00491500
*                                                                     * 00491600
*      ÝVECTORINDEX=»xvectorindex!NO_VECTORINDEXº¨                    * 00491700
*          is the name (RS-type), or address in register (2)-(12), of * 00491800
*          an optional fullword input field that contains the index   * 00491900
*          into the local cache vector for CONTOKEN for the entry     * 00492000
*          specified by NAME.  For structures allocated in CFLEVEL=4  * 00492100
*          or lower coupling facilities, VECTORINDEX is required for  * 00492200
*          READ_DATA requests, WRITE_DATA requests when WHENREG=NO,   * 00492300
*          and CASTOUT_DATA requests when REGUSER=YES.  For           * 00492400
*          structures allocated in CFLEVEL=5 or higher coupling       * 00492500
*          facilities, VECTORINDEX is required on READ_DATA requests, * 00492600
*          CASTOUT_DATA requests , and WRITE_DATA requests when       * 00492700
*          WHENREG=NO, when either REGUSER=YES or OLDNAME is          * 00492800
*          specified, Note that REGUSER=YES is the default for        * 00492900
*          READ_DATA and WRITE_DATA requests and REGUSER=NO is the    * 00493000
*          default for CASTOUT_DATA requests.                         * 00493100
*                                                                     * 00493200
*          VECTORINDEX is optional for WRITE_DATA requests when       * 00493300
*          WHENREG=YES is specified.  If VECTORINDEX is specified on  * 00493400
*          a WRITE_DATA  request with WHENREG=YES specified, and the  * 00493500
*          connection specified by CONTOKEN does not have a           * 00493600
*          registered interest in the entry with the specified vector * 00493700
*          index number, the request will be failed.  Note that       * 00493800
*          specification of VECTORINDEX in this context will be       * 00493900
*          ignored unless the structure is allocated in a coupling    * 00494000
*          facility with CFLEVEL=2 or higher.                         * 00494100
*                                                                     * 00494200
*          VECTORINDEX is mutually exclusive with all other request   * 00494300
*          types.                                                     * 00494400
*                                                                     * 00494500
*          DEFAULT: NO_VECTORINDEX                                    * 00494600
*                                                                     * 00494700
*                                                                     * 00494800
*                                                                     * 00494900
*                                                                     * 00495000
*      The following is a set of mutually exclusive keys.  This set   * 00495100
*      is optional; only one key may be specified.                    * 00495200
*                                                                     * 00495300
*                                                                     * 00495400
*          The RESTOKEN and EXTRESTOKEN keywords are input fields     * 00495500
*          that name a restart token specifying an appropriate        * 00495600
*          coupling facility indicator for resuming requests that     * 00495700
*          complete prematurely.                                      * 00495800
*                                                                     * 00495900
*          RESTOKEN and EXTRESTOKEN are optional on READ_DIRINFO,     * 00496000
*          READ_COCLASS, CROSS_INVAL, DELETE_NAME, and RESET_REFBIT   * 00496100
*          requests, and are mutually exclusive with all other        * 00496200
*          request types.                                             * 00496300
*                                                                     * 00496400
*          Specifying an input restart token initialized to all zeros * 00496500
*          causes the request to consider all directory entries as    * 00496600
*          unprocessed.  Specifying an input restart token other than * 00496700
*          one returned from a previous invocation of the request and * 00496800
*          not fully initialized to all zeros will produce            * 00496900
*          unpredictable request results.                             * 00497000
*                                                                     * 00497100
*          A restart token is returned in the answer area specified   * 00497200
*          by ANSAREA when coupling facility model dependent time out * 00497300
*          criteria has been exceeded prior to completion of the      * 00497400
*          request, or because the storage area specified by BUFFER   * 00497500
*          or the buffers specified by BUFLIST have been exhausted    * 00497600
*          before all the directory entries matching the selected     * 00497700
*          criteria have been reported on.  If neither of these       * 00497800
*          events occurs, then the returned token will contain binary * 00497900
*          zeros.                                                     * 00498000
*                                                                     * 00498100
*          A returned restart token may be specified as input on a    * 00498200
*          subsequent request of the same type with the same request  * 00498300
*          options/values specified.  This will cause processing of   * 00498400
*          the request to resume with the appropriate structure or    * 00498500
*          directory entry.                                           * 00498600
*                                                                     * 00498700
*          Requestors who specify IXLCONN ALLOWAUTO=YES must use the  * 00498800
*          16-byte extended restart token (EXTRESTOKEN).  Users who   * 00498900
*          specify IXLCONN ALLOWAUTO=NO must use the standard 8-byte  * 00499000
*          restart tokens (RESTOKEN).                                 * 00499100
*                                                                     * 00499200
*      ÝRESTOKEN=»xrestoken!NO_RESTOKENº                              * 00499300
*          belongs to a set of mutually exclusive keys. It is the     * 00499400
*          name (RS-type), or address in register (2)-(12), of an     * 00499500
*          optional 8 character input field that contains a restart   * 00499600
*          token specifying an appropriate coupling facility          * 00499700
*          indicator for resuming requests that complete prematurely. * 00499800
*                                                                     * 00499900
*          A restart token is returned in the CAARESTOKEN field of    * 00500000
*          the answer area specified by ANSAREA when the request      * 00500100
*          completes prematurely.                                     * 00500200
*                                                                     * 00500300
*          DEFAULT: NO_RESTOKEN                                       * 00500400
*                                                                     * 00500500
*      EXTRESTOKEN=»xextrestoken!NO_EXTRESTOKENº¨                     * 00500600
*          belongs to a set of mutually exclusive keys. It is the     * 00500700
*          name (RS-type), or address in register (2)-(12), of an     * 00500800
*          optional 16 character input field that contains an         * 00500900
*          extended restart token specifying an appropriate coupling  * 00501000
*          facility indicator for resuming requests that complete     * 00501100
*          prematurely.                                               * 00501200
*                                                                     * 00501300
*          A restart token is returned in the CAAEXTRESTOKEN field of * 00501400
*          the answer area specified by ANSAREA when the request      * 00501500
*          completes prematurely.  Use of the EXTRESTOKEN keyword     * 00501600
*          requires a value of ANSLEN greater than or equal to        * 00501700
*          CAALEVEL1LEN.                                              * 00501800
*                                                                     * 00501900
*          DEFAULT: NO_EXTRESTOKEN                                    * 00502000
*                                                                     * 00502100
*                                                                     * 00502200
*                                                                     * 00502300
*      End of a set of mutually exclusive optional keys.              * 00502400
*      DEFAULT: RESTOKEN                                              * 00502500
*                                                                     * 00502600
*                                                                     * 00502700
*                                                                     * 00502800
*      ÝMODE=»SYNCSUSPEND!SYNCECB!SYNCEXIT!SYNCTOKEN!ASYNCECB!ASYNCEX * 00502900
*          IT!ASYNCTOKEN!ASYNCNORESPONSEº¨                            * 00503000
*          is an optional keyword input that specifies whether the    * 00503100
*          request is to be performed synchronously or                * 00503200
*          asynchronously.                                            * 00503300
*                                                                     * 00503400
*          DEFAULT: SYNCSUSPEND                                       * 00503500
*                                                                     * 00503600
*                                                                     * 00503700
*          ÝMODE=SYNCSUSPEND¨                                         * 00503800
*              Indicates that the request will be performed           * 00503900
*              synchronously.  Control is not returned to the caller  * 00504000
*              until request processing is complete and the final     * 00504100
*              disposition determined.                                * 00504200
*                                                                     * 00504300
*              If necessary the caller will be suspended until the    * 00504400
*              request completes.  The caller must be executing in an * 00504500
*              enabled state to use this option.                      * 00504600
*                                                                     * 00504700
*                                                                     * 00504800
*          ÝMODE=SYNCECB                                              * 00504900
*              Indicates that the request will be attempted           * 00505000
*              synchronously.  If the request can not be completed    * 00505100
*              synchronously control is returned to the caller prior  * 00505200
*              to completion of the request, and the ECB specified by * 00505300
*              REQECB is posted when the request has completed.       * 00505400
*                                                                     * 00505500
*              When MODE=SYNCECB is specified and the request does    * 00505600
*              not complete synchronously latent XES binds to the     * 00505700
*              storage locations specified by BUFFER, BUFLIST,        * 00505800
*              STGSTATS, ADJAREA, ANSAREA, WORBAREA, DEIBAREA, and    * 00505900
*              NSBAREA persist until the REQECB ECB is posted.        * 00506000
*                                                                     * 00506100
*                                                                     * 00506200
*              REQECB=xreqecb¨                                        * 00506300
*                  is the name (RS-type), or address in register      * 00506400
*                  (2)-(12), of a required 4 byte input that contains * 00506500
*                  the address of an ECB to be posted when the        * 00506600
*                  request has completed.                             * 00506700
*                                                                     * 00506800
*                  The ECB should be initialized by the requestor     * 00506900
*                  prior to use with this service.  The ECB must      * 00507000
*                  reside either in common storage or in the home     * 00507100
*                  address space that existed at the time the         * 00507200
*                  connection service, IXLCONN, was issued for the    * 00507300
*                  structure.  Any task which waits on the ECB must   * 00507400
*                  have the same home address space as existed when   * 00507500
*                  IXLCONN was issued.                                * 00507600
*                                                                     * 00507700
*                                                                     * 00507800
*                                                                     * 00507900
*          ÝMODE=SYNCEXIT                                             * 00508000
*              Indicates that the request will be attempted           * 00508100
*              synchronously.  If the request can not be completed    * 00508200
*              synchronously control is returned to the caller prior  * 00508300
*              to completion of the request.  When the request        * 00508400
*              completes the connection's Complete Exit will be       * 00508500
*              called.                                                * 00508600
*                                                                     * 00508700
*              When MODE=SYNCEXIT is specified and the request does   * 00508800
*              not complete synchronously latent XES binds to the     * 00508900
*              storage locations specified by BUFFER, BUFLIST,        * 00509000
*              STGSTATS, WORBAREA, DEIBAREA, ADJAREA, ANSAREA, and    * 00509100
*              NSBAREA persist until the connection's Complete Exit   * 00509200
*              is called.                                             * 00509300
*                                                                     * 00509400
*                                                                     * 00509500
*              ÝREQDATA=»xreqdata!NO_REQDATAº¨¨                       * 00509600
*                  is the name (RS-type), or address in register      * 00509700
*                  (2)-(12), of an optional 8 character input         * 00509800
*                  variable that contains connected user-defined data * 00509900
*                  for the request to be passed to the Complete Exit  * 00510000
*                  when driven.  The contents of REQDATA has no       * 00510100
*                  meaning to the system.                             * 00510200
*                                                                     * 00510300
*                  DEFAULT: NO_REQDATA                                * 00510400
*                                                                     * 00510500
*                                                                     * 00510600
*                                                                     * 00510700
*          ÝMODE=SYNCTOKEN                                            * 00510800
*              Indicates that the request will be attempted           * 00510900
*              synchronously.  If the request can not be completed    * 00511000
*              synchronously control is returned to the caller prior  * 00511100
*              to completion of the request and a token that uniquely * 00511200
*              identifies the request is returned.                    * 00511300
*                                                                     * 00511400
*              When MODE=SYNCTOKEN is specified and the request does  * 00511500
*              not complete synchronously latent XES binds to the     * 00511600
*              storage locations specified by BUFFER, BUFLIST,        * 00511700
*              STGSTATS, WORBAREA, DEIBAREA, ADJAREA, ANSAREA, and    * 00511800
*              NSBAREA persist until a subsequent corresponding       * 00511900
*              IXLFCOMP request indicates request completion.         * 00512000
*                                                                     * 00512100
*                                                                     * 00512200
*              REQTOKEN=xreqtoken¨                                    * 00512300
*                  is a required output.  It is the name (RS-type),   * 00512400
*                  or address in register (2)-(12), of a 16 character * 00512500
*                  field into which is stored a token that uniquely   * 00512600
*                  identifies this request.                           * 00512700
*                                                                     * 00512800
*                  This token must be specified on a subsequent       * 00512900
*                  invocation of IXLFCOMP to force completion of the  * 00513000
*                  request and determine its final disposition.       * 00513100
*                                                                     * 00513200
*                                                                     * 00513300
*                                                                     * 00513400
*          ÝMODE=ASYNCECB                                             * 00513500
*              Indicates that the request is to be initiated and      * 00513600
*              control is to be returned to the caller prior to       * 00513700
*              completion of the request.  When the request completes * 00513800
*              the ECB specified by REQECB will be posted.            * 00513900
*                                                                     * 00514000
*              When MODE=ASYNCECB is specified latent XES binds to    * 00514100
*              the storage locations specified by BUFFER, BUFLIST,    * 00514200
*              STGSTATS, WORBAREA, DEIBAREA, ADJAREA, ANSAREA, and    * 00514300
*              NSBAREA persist until the REQECB ECB is posted.        * 00514400
*                                                                     * 00514500
*                                                                     * 00514600
*              REQECB=xreqecb¨                                        * 00514700
*                  is the name (RS-type), or address in register      * 00514800
*                  (2)-(12), of a required 4 byte input that contains * 00514900
*                  the address of an ECB to be posted when the        * 00515000
*                  request has completed.                             * 00515100
*                                                                     * 00515200
*                  The ECB should be initialized by the requestor     * 00515300
*                  prior to use with this service.  The ECB must      * 00515400
*                  reside either in common storage or in the home     * 00515500
*                  address space that existed at the time the         * 00515600
*                  connection service, IXLCONN, was issued for the    * 00515700
*                  structure.  Any task which waits on the ECB must   * 00515800
*                  have the same home address space as existed when   * 00515900
*                  IXLCONN was issued.                                * 00516000
*                                                                     * 00516100
*                                                                     * 00516200
*                                                                     * 00516300
*          ÝMODE=ASYNCEXIT                                            * 00516400
*              Indicates that the request is to be initiated and      * 00516500
*              control is to be returned to the caller prior to       * 00516600
*              completion of the request.  When the request completes * 00516700
*              the connection's Complete Exit will be called.         * 00516800
*                                                                     * 00516900
*              When MODE=ASYNCEXIT is specified latent XES binds to   * 00517000
*              the storage locations specified by BUFFER, BUFLIST,    * 00517100
*              STGSTATS, WORBAREA, DEIBAREA, ADJAREA, ANSAREA, and    * 00517200
*              NSBAREA persist until the connection's Complete Exit   * 00517300
*              is called.                                             * 00517400
*                                                                     * 00517500
*                                                                     * 00517600
*              ÝREQDATA=»xreqdata!NO_REQDATAº¨¨                       * 00517700
*                  is the name (RS-type), or address in register      * 00517800
*                  (2)-(12), of an optional 8 character input         * 00517900
*                  variable that contains connected user-defined data * 00518000
*                  for the request to be passed to the Complete Exit  * 00518100
*                  when driven.  The contents of REQDATA has no       * 00518200
*                  meaning to the system.                             * 00518300
*                                                                     * 00518400
*                  DEFAULT: NO_REQDATA                                * 00518500
*                                                                     * 00518600
*                                                                     * 00518700
*                                                                     * 00518800
*          ÝMODE=ASYNCTOKEN                                           * 00518900
*              Indicates that the request is to be initiated, a token * 00519000
*              generated that uniquely identifies the request on this * 00519100
*              system, and control returned to the caller prior to    * 00519200
*              completion of the requested operation.                 * 00519300
*                                                                     * 00519400
*              When MODE=ASYNCTOKEN is specified latent XES binds to  * 00519500
*              the storage locations specified by BUFFER, BUFLIST,    * 00519600
*              STGSTATS, WORBAREA, DEIBAREA, ADJAREA, ANSAREA, and    * 00519700
*              NSBAREA persist until a subsequent corresponding       * 00519800
*              IXLFCOMP request indicates request completion.         * 00519900
*                                                                     * 00520000
*                                                                     * 00520100
*              REQTOKEN=xreqtoken¨                                    * 00520200
*                  is a required output.  It is the name (RS-type),   * 00520300
*                  or address in register (2)-(12), of a 16 character * 00520400
*                  field into which is stored a token that uniquely   * 00520500
*                  identifies this request.                           * 00520600
*                                                                     * 00520700
*                  This token must be specified on a subsequent       * 00520800
*                  invocation of IXLFCOMP to force completion of the  * 00520900
*                  request and determine its final disposition.       * 00521000
*                                                                     * 00521100
*                                                                     * 00521200
*                                                                     * 00521300
*          ÝMODE=ASYNCNORESPONSE¨                                     * 00521400
*              Indicates that the request is to be initiated and      * 00521500
*              control returned to the caller prior to completion of  * 00521600
*              the requested operation.  No asynchronous request      * 00521700
*              token is returned, hence no external mechanism exists  * 00521800
*              to force completion of the request.                    * 00521900
*                                                                     * 00522000
*              MODE=ASYNCNORESPONSE may only be specified for         * 00522100
*              SET_RECLVCTR requests.                                 * 00522200
*                                                                     * 00522300
*                                                                     * 00522400
*                                                                     * 00522500
*                                                                     * 00522600
*                                                                     * 00522700
*                                                                     * 00522800
*      ÝANSAREA=»xansarea!NO_ANSAREAº                                 * 00522900
*          is an optional input.  It is the name (RS-type), or        * 00523000
*          address in register (2)-(12), of a virtual storage area,   * 00523100
*          called the answer area, in which command response          * 00523200
*          information will be placed.  The format of the answer area * 00523300
*          is described by the IXLYCAA mapping macro.                 * 00523400
*                                                                     * 00523500
*          ANSAREA is required when a MODE value of SYNCTOKEN or      * 00523600
*          ASYNCTOKEN is specified.                                   * 00523700
*                                                                     * 00523800
*          ANSAREA is required when the connection specified          * 00523900
*          ASYNCXI=1 on the IXLCONN invocation when connecting to the * 00524000
*          cache structure, AXIOVERRIDE=0 was specified or defaulted  * 00524100
*          to and the request is one of the following:  READ_DATA,    * 00524200
*          WRITE_DATA, WRITE_DATALIST, DELETE_NAME, DELETE_NAMELIST,  * 00524300
*          CROSS_INVAL, CROSS_INVALLIST and REG_NAMELIST.             * 00524400
*                                                                     * 00524500
*          ANSAREA may be specified in conjunction with any type of   * 00524600
*          IXLCACHE request, although not all fields in the answer    * 00524700
*          area are applicable to all request types.                  * 00524800
*                                                                     * 00524900
*          ANSAREA is ignored whenever ASYNC=NORESPONSE is also       * 00525000
*          specified.                                                 * 00525100
*                                                                     * 00525200
*          DEFAULT: NO_ANSAREA                                        * 00525300
*                                                                     * 00525400
*                                                                     * 00525500
*          ANSLEN=xanslen¨                                            * 00525600
*              is the name (RS-type), or address in register          * 00525700
*              (2)-(12), of a required halfword input field that      * 00525800
*              contains the length of the answer area specified by    * 00525900
*              ANSAREA.  The answer area length must be at least      * 00526000
*              large enough to accomodate the level of the IXLYCAA    * 00526100
*              mapping appropriate to the requested function.         * 00526200
*                                                                     * 00526300
*              The following table specifies required answer area     * 00526400
*              length as a function of PLISTVER.  Length constants    * 00526500
*              are defined in IXLYCAA.                                * 00526600
*                                                                     * 00526700
*                                                                     * 00526800
*              PLISTVER      MINIMUM ANSWER AREA LENGTH               * 00526900
*                                                                     * 00527000
*              0 - 3         CaaLevel0Len                             * 00527100
*                                                                     * 00527200
*              4 - 8         CaaLevel1Len                             * 00527300
*                                                                     * 00527400
*                                                                     * 00527500
*                                                                     * 00527600
*              When the connection specified ASYNCXI=1 on the IXLCONN * 00527700
*              the following requests could initiate asynchronous     * 00527800
*              cross-invalidates:  READ_DATA, WRITE_DATA,             * 00527900
*              DELETE_NAME, DELETE_NAMELIST, CROSS_INVAL,             * 00528000
*              CROSS_INVALLIST, REG_NAMELIST and WRITE_DATALIST. For  * 00528100
*              these requests, if AXIOVERRIDE=0 was specified or      * 00528200
*              defaulted to then the answer area length must be a     * 00528300
*              minimum length of CAALEVEL2LEN.                        * 00528400
*                                                                     * 00528500
*              DEFAULT: NO_ANSLEN                                     * 00528600
*                                                                     * 00528700
*                                                                     * 00528800
*                                                                     * 00528900
*                                                                     * 00529000
*                                                                     * 00529100
*                                                                     * 00529200
*      ÝRETCODE=xretcode¨                                             * 00529300
*          is the name (RS-type) of an optional fullword output       * 00529400
*          variable, or register (2)-(12) or (15), into which the     * 00529500
*          return code is to be copied from GPR 15.  If you specify   * 00529600
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00529700
*          the value will be left in GPR 15.                          * 00529800
*                                                                     * 00529900
*                                                                     * 00530000
*                                                                     * 00530100
*                                                                     * 00530200
*      ÝRSNCODE=xrsncode¨                                             * 00530300
*          is the name (RS-type) of an optional fullword output       * 00530400
*          variable into which the reason code is to be copied from   * 00530500
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00530600
*          R0 (within or without parentheses), the value will be left * 00530700
*          in GPR 0.                                                  * 00530800
*                                                                     * 00530900
*                                                                     * 00531000
*                                                                     * 00531100
*                                                                     * 00531200
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00531300
*          is an optional byte input decimal value in the "0-8" range * 00531400
*          that specifies the macro version.  PLISTVER is the only    * 00531500
*          key allowed on the list form of MF and determines which    * 00531600
*          parameter list is generated.  The macro keys associated    * 00531700
*          with each supported version of the macro are listed in     * 00531800
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 00531900
*          instead of a number, and the parameter list will be of the * 00532000
*          largest size currently supported. This size may grow from  * 00532100
*          release to release (thus possibly affecting the amount of  * 00532200
*          storage needed by your program).  If your program can      * 00532300
*          tolerate this, IBM recommends that you always specify MAX  * 00532400
*          when creating the list form parameter list as that will    * 00532500
*          ensure that the list form parameter list is always long    * 00532600
*          enough to hold whatever parameters might be specified on   * 00532700
*          the execute form.                                          * 00532800
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00532900
*          default is the lowest version which allows all of the      * 00533000
*          parameters specified on the invocation to be processed.    * 00533100
*                                                                     * 00533200
*                                                                     * 00533300
*                                                                     * 00533400
*                                                                     * 00533500
*      ÝMF=»S!L!Eº¨                                                   * 00533600
*          is an optional keyword input which specifies the macro     * 00533700
*          form.                                                      * 00533800
*          DEFAULT: S                                                 * 00533900
*                                                                     * 00534000
*                                                                     * 00534100
*          ÝMF=S¨                                                     * 00534200
*              specifies the standard form of the macro.  The "S"     * 00534300
*              form generates code to put the parameters into an      * 00534400
*              in-line parameter list and invoke the desired service. * 00534500
*              Full checking for required macro keys is done along    * 00534600
*              with supplying defaults for omitted optional           * 00534700
*              parameters.                                            * 00534800
*                                                                     * 00534900
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00535000
*              specifies the list form of the macro.  The "L" form    * 00535100
*              defines an area to be used for the parameter list.     * 00535200
*              Only the PLISTVER key may be specified on the          * 00535300
*              invocation.  All other macro parameters are flagged as * 00535400
*              errors.  If PLISTVER is not specified, the original    * 00535500
*              parameter list definition is used.                     * 00535600
*                                                                     * 00535700
*            ,xmfctrl                                                 * 00535800
*              is a required input.  It is the name of a storage area * 00535900
*              for the parameter list.                                * 00536000
*                                                                     * 00536100
*            »,xmfattr!0Dº                                            * 00536200
*              is an optional 60 character input string that varies   * 00536300
*              from 1 to 60 characters. Use it to force boundary      * 00536400
*              alignment of the parameter list. Use only 0F or 0D.    * 00536500
*              DEFAULT: 0D which forces the parameter list to a       * 00536600
*              doubleword boundary.                                   * 00536700
*                                                                     * 00536800
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00536900
*              specifies the execute form of the macro.  The "E" form * 00537000
*              generates code to put the parameters into the          * 00537100
*              parameter list specified by xmfctrl and provides full  * 00537200
*              syntax checking with default setting.                  * 00537300
*                                                                     * 00537400
*            ,xmfctrl                                                 * 00537500
*              is a required input.  It is the name (RS-type), or     * 00537600
*              address in register (1)-(12), of a storage area for    * 00537700
*              the parameter list.                                    * 00537800
*                                                                     * 00537900
*            »,COMPLETEº                                              * 00538000
*              is an optional keyword input which specifies the       * 00538100
*              degree of macro parameter syntax checking.             * 00538200
*              DEFAULT: COMPLETE                                      * 00538300
*                                                                     * 00538400
*                                                                     * 00538500
*              COMPLETE                                               * 00538600
*                  Checking for required macro keys is done and       * 00538700
*                  defaults are supplied for omitted optional         * 00538800
*                  parameters.                                        * 00538900
*                                                                     * 00539000
*                                                                     * 00539100
*                                                                     * 00539200
*                                                                     * 00539300
*                                                                     * 00539400
*                                                                     * 00539500
*                                                                     * 00539600
*01* RETURN CODES:                                                    * 00539700
*                                                                     * 00539800
*                                                                     * 00539900
*       0         IxlRetCodeOk:  Successful completion.               * 00540000
*                                                                     * 00540100
*                 If a MODE value of ASYNCECB, ASYNCEXIT, ASYNCTOKEN, * 00540200
*                 or ASYNCNORESPONSE was specified then the request   * 00540300
*                 has been successfully initiated.                    * 00540400
*                                                                     * 00540500
*                                                                     * 00540600
*       4         IxlRetCodeWarning:  Warning.  The request           * 00540700
*                 completed, but with exceptional circumstances.      * 00540800
*                                                                     * 00540900
*                 HEX REASON  MEANING                                 * 00541000
*                 CODE                                                * 00541100
*                                                                     * 00541200
*                                                                     * 00541300
*                 xxxx0402    IxlRsnCodeAsynch:  The request could    * 00541400
*                             not be completed synchronously.  It     * 00541500
*                             will be completed asynchronously.       * 00541600
*                                                                     * 00541700
*                             If MODE=SYNCECB was specified the ECB   * 00541800
*                             specified for REQECB will be posted     * 00541900
*                             when the request has finished.          * 00542000
*                                                                     * 00542100
*                             If MODE=SYNCEXIT was specified the      * 00542200
*                             connection's completion exit will be    * 00542300
*                             given control when the request has      * 00542400
*                             finished.                               * 00542500
*                                                                     * 00542600
*                             If MODE=SYNCTOKEN was specified the     * 00542700
*                             answer area contains an asynchronous    * 00542800
*                             request token which may be used on the  * 00542900
*                             IXLFCOMP macro to determine when the    * 00543000
*                             request has finished.                   * 00543100
*                                                                     * 00543200
*                 xxxx0409    IxlRsnCodeTimeout:  A REG_NAMELIST,     * 00543300
*                             READ_DIRINFO, READ_COCLASS,             * 00543400
*                             DELETE_NAME, DELETE_NAMELIST,           * 00543500
*                             CROSS_INVAL, UNLOCK_CASTOUT,            * 00543600
*                             RESET_REFBIT, CROSS_INVALLIST,          * 00543700
*                             CASTOUT_DATALIST, or WRITE_DATALIST     * 00543800
*                             request has completed prematurely due   * 00543900
*                             to a model-dependent timeout condition. * 00544000
*                                                                     * 00544100
*                             For READ_DIRINFO and READ_COCLASS       * 00544200
*                             requests, the number of reliable        * 00544300
*                             directory or name elements,             * 00544400
*                             respectively, and a token for           * 00544500
*                             restarting the request have been        * 00544600
*                             returned in the answer area.            * 00544700
*                                                                     * 00544800
*                             For REG_NAMELIST requests, the index of * 00544900
*                             the first unprocessed registration      * 00545000
*                             block has been returned in the answer   * 00545100
*                             area.  All prior registration blocks    * 00545200
*                             have been processed.                    * 00545300
*                                                                     * 00545400
*                             For UNLOCK_CASTOUT requests, the index  * 00545500
*                             of the first unprocessed name element   * 00545600
*                             has been returned in the answer area.   * 00545700
*                                                                     * 00545800
*                             For CROSS_INVALLIST requests, the index * 00545900
*                             of the first unprocessed entry has been * 00546000
*                             returned in the answer area.  All prior * 00546100
*                             entries have been processed.            * 00546200
*                                                                     * 00546300
*                             For CASTOUT_DATALIST requests, the      * 00546400
*                             index of the first unprocessed entry in * 00546500
*                             the CASTOUTLIST has been returned in    * 00546600
*                             the answer area.  All prior entries     * 00546700
*                             have been processed.  If ADJAREA was    * 00546800
*                             specified, check the CaaAdjareaValid    * 00546900
*                             bit in the ANSAREA to see if adjunct    * 00547000
*                             was returned. If ADJAREA was specified, * 00547100
*                             check the CaaAdjAreaNonAddr bit to      * 00547200
*                             determine if the provided storage for   * 00547300
*                             the adjunct data is addressable. If the * 00547400
*                             provided storage for the DEIBAREA is    * 00547500
*                             not addressable, then the               * 00547600
*                             CaaDeibAreaNonAddr bit will be set.     * 00547700
*                                                                     * 00547800
*                             For WRITE_DATALIST requests, the index  * 00547900
*                             of the first unprocessed                * 00548000
*                             write-operation block and the offset of * 00548100
*                             the current data area will be returned  * 00548200
*                             in the answer area.  All prior          * 00548300
*                             write-operation blocks have been        * 00548400
*                             processed.                              * 00548500
*                                                                     * 00548600
*                             For DELETE_NAMELIST requests, the index * 00548700
*                             of the first unprocessed entry has been * 00548800
*                             returned in the answer area.  All prior * 00548900
*                             entries have been processed, however,   * 00549000
*                             if ErrorAction=CONTINUE was specified   * 00549100
*                             then some of the prior name elements    * 00549200
*                             may not have been processed             * 00549300
*                             successfully.                           * 00549400
*                                                                     * 00549500
*                             For all other request types a token for * 00549600
*                             restarting the request has been         * 00549700
*                             returned in the answer area.            * 00549800
*                                                                     * 00549900
*                 xxxx040A    IxlRsnCodeNoReadData:  A READ_DATA      * 00550000
*                             request may have caused interest to be  * 00550100
*                             registered in the entry, but there was  * 00550200
*                             no cached subsystem data for NAME or    * 00550300
*                             data existed but the read was           * 00550400
*                             suppressed, hence no data was returned  * 00550500
*                             in BUFFER or BUFLIST.  If the structure * 00550600
*                             entry contained data and adjunct, and   * 00550700
*                             ADJAREA was specified, then the adjunct * 00550800
*                             was returned and the CaaAdjareaValid    * 00550900
*                             bit in the ANSAREA was set to '1'. If   * 00551000
*                             adjunct data did not exist then the     * 00551100
*                             CaaAdjareaValid bit was set to '0'.     * 00551200
*                                                                     * 00551300
*                 xxxx040B    IxlRsnCodeHighCOEnd:  The specified     * 00551400
*                             COCLASSE on a READ_COSTATS request      * 00551500
*                             exceeds the maximum defined castout     * 00551600
*                             class for the structure.  A subrange of * 00551700
*                             classes through the maximum defined     * 00551800
*                             class was reported on.                  * 00551900
*                                                                     * 00552000
*                 xxxx040C    IxlRsnCodeNoAdjunctData:  A READ_DATA,  * 00552100
*                             or CASTOUT_DATA request specified that  * 00552200
*                             adjunct data was to be read, but the    * 00552300
*                             structure does not support adjunct      * 00552400
*                             areas.  The cached subsystem data was   * 00552500
*                             retrieved if requested.                 * 00552600
*                                                                     * 00552700
*                 xxxx040D    IxlRsnCodeBadReadAdjData:  A READ_DATA, * 00552800
*                             or CASTOUT_DATA request specified that  * 00552900
*                             adjunct data was to be read, but the    * 00553000
*                             provided storage area for adjunct data  * 00553100
*                             is not addressable.  The subsystem data * 00553200
*                             was retrieved if requested.             * 00553300
*                                                                     * 00553400
*                 xxxx040F    IxlRsnCodeBufferFull:  A READ_DIRINFO,  * 00553500
*                             READ_COCLASS, READ_COSTATS, or          * 00553600
*                             CASTOUT_DATALIST request has completed  * 00553700
*                             prematurely due to a buffer full        * 00553800
*                             condition.                              * 00553900
*                                                                     * 00554000
*                             For READ_DIRINFO and READ_COCLASS       * 00554100
*                             requests, the number of reliable        * 00554200
*                             directory or name elements,             * 00554300
*                             respectively, and a token for           * 00554400
*                             restarting the request have been        * 00554500
*                             returned in the answer area.            * 00554600
*                                                                     * 00554700
*                             For CASTOUT_DATALIST requests, the      * 00554800
*                             index of the name in the CASTOUTLIST    * 00554900
*                             returned in the ANSAREA contains the    * 00555000
*                             index of the entry currently being      * 00555100
*                             processed and the number of elements in * 00555200
*                             the desired entry is returned in the    * 00555300
*                             ANSAREA.  If ADJAREA was specified,     * 00555400
*                             check the CaaAdjareaValid bit in the    * 00555500
*                             ANSAREA to see if adjunct was returned. * 00555600
*                             If ADJAREA was specified, check the     * 00555700
*                             CaaAdjAreaNonAddr bit to determine if   * 00555800
*                             the provided storage for the adjunct    * 00555900
*                             data is addressable. If the provided    * 00556000
*                             storage for the DEIBAREA is not         * 00556100
*                             addressable, then the                   * 00556200
*                             CaaDeibAreaNonAddr bit will be set.     * 00556300
*                                                                     * 00556400
*                             For READ_COSTATS requests, a subrange   * 00556500
*                             of the requested cast-out classes was   * 00556600
*                             reported on, as specified in the        * 00556700
*                             IXLYCCIH mapping macro.                 * 00556800
*                                                                     * 00556900
*                 xxxx0414    IxlRsnCodeRclVctrNotSet:  An IXLCACHE   * 00557000
*                             request to set the reclaim vector was   * 00557100
*                             not performed because either the        * 00557200
*                             structure size or the entry-to-element  * 00557300
*                             ratio is being changed via IXLALTER.    * 00557400
*                                                                     * 00557500
*                 xxxx042A    IxlRsnCodeHaltChangedData:  A           * 00557600
*                             DELETE_NAME or DELETE_NAMELIST request  * 00557700
*                             with HALTONCHANGED=YES specified was    * 00557800
*                             halted due to a structure entry being   * 00557900
*                             found to have data in the changed state * 00558000
*                             or having a cast-out lock held.         * 00558100
*                                                                     * 00558200
*                             For DELETE_NAMELIST requests, the index * 00558300
*                             of the name element that met the halt   * 00558400
*                             criteria as well as cast-out            * 00558500
*                             information for the entry has been      * 00558600
*                             returned in the answer area.  All prior * 00558700
*                             entries have been processed.            * 00558800
*                                                                     * 00558900
*                             For DELETE_NAME requests, the entry     * 00559000
*                             name that met the halt criteria as well * 00559100
*                             as cast-out information for the entry   * 00559200
*                             has been returned in the answer area.   * 00559300
*                                                                     * 00559400
*                             Since delete processing was requested   * 00559500
*                             to be halted when changed data or data  * 00559600
*                             locked for cast-out was encountered,    * 00559700
*                             the application should treat the        * 00559800
*                             deletion attempt as an error condition  * 00559900
*                             and prior to restarting the request,    * 00560000
*                             recover by hardening the entry's data   * 00560100
*                             to permanent storage to prevent loss of * 00560200
*                             data, and ensure availability of        * 00560300
*                             accurate data in the event of a         * 00560400
*                             failure.                                * 00560500
*                                                                     * 00560600
*                             For DELETE_NAME requests, a token for   * 00560700
*                             restarting the request has been         * 00560800
*                             returned in the answer area.  After     * 00560900
*                             taking recovery actions, the restart    * 00561000
*                             token may be used to resume request     * 00561100
*                             processing.                             * 00561200
*                                                                     * 00561300
*                             For DELETE_NAMELIST requests, the index * 00561400
*                             value of the name within the specified  * 00561500
*                             list of entry names being processed     * 00561600
*                             that caused the request to be halted    * 00561700
*                             has been returned in the answer area.   * 00561800
*                             After taking recovery actions, the      * 00561900
*                             request may be started at the entry     * 00562000
*                             that originally caused the request to   * 00562100
*                             halt by setting keyword STARTINDEX to   * 00562200
*                             CaaDNLIndex.                            * 00562300
*                                                                     * 00562400
*                 xxxx042C    IxlRsnCodeLocalRegWrtSuppress:  For a   * 00562500
*                             WRITE_DATA request with WHENREG=NO,     * 00562600
*                             ASSIGN=NO, LOCALREGCNTL=YES and         * 00562700
*                             CHANGED=YES specified, the user's       * 00562800
*                             connection was the only registered      * 00562900
*                             interest in the directory entry for     * 00563000
*                             NAME in the cache structure, and no     * 00563100
*                             subsystem data for the directory entry  * 00563200
*                             is cached.  The write operation to the  * 00563300
*                             coupling facility is suppressed.  No    * 00563400
*                             data was written for the data item.     * 00563500
*                                                                     * 00563600
*                                                                     * 00563700
*                                                                     * 00563800
*                                                                     * 00563900
*       8         IxlRetCodeParmError:  Error.  The request cannot be * 00564000
*                 completed due to a user error.                      * 00564100
*                                                                     * 00564200
*                 HEX REASON  MEANING                                 * 00564300
*                 CODE                                                * 00564400
*                                                                     * 00564500
*                                                                     * 00564600
*                 xxxx0801    IxlRsnCodeBadParmlist:  The IXLCACHE    * 00564700
*                             parameter list is not addressable.      * 00564800
*                                                                     * 00564900
*                 xxxx0804    IxlRsnCodeBadVersion#:  The version     * 00565000
*                             number in the parameter list is not     * 00565100
*                             valid.  This usually indicates that the * 00565200
*                             level of the macro is incompatible with * 00565300
*                             the level of the XES service code.      * 00565400
*                                                                     * 00565500
*                 xxxx080A    IxlRsnCodeBadContoken:  Invalid         * 00565600
*                             contoken specified.  The contoken is    * 00565700
*                             invalid for one of the following        * 00565800
*                             reasons:  disconnect has occurred, EOT  * 00565900
*                             of the connector's task, input contoken * 00566000
*                             is not the contoken returned from       * 00566100
*                             IXLCONN, the request was issued outside * 00566200
*                             the connector's address space, or the   * 00566300
*                             contoken has been invalidated for       * 00566400
*                             rebuild.                                * 00566500
*                                                                     * 00566600
*                 xxxx0819    IxlRsnCodeBadVectorOp:  On a READ_DATA, * 00566700
*                             WRITE_DATA, or CASTOUT_DATA request, a  * 00566800
*                             local cache bit vector operation failed * 00566900
*                             because the specified VECTORINDEX is    * 00567000
*                             invalid.  Request processing was        * 00567100
*                             suppressed.  On a REG_NAMELIST request, * 00567200
*                             a local cache bit vector operation      * 00567300
*                             failed because the vector index         * 00567400
*                             specified in one of the registration    * 00567500
*                             blocks is invalid.  The index of the    * 00567600
*                             registration block containing the first * 00567700
*                             invalid vector index is returned in the * 00567800
*                             ANSAREA  None of the specified          * 00567900
*                             registration blocks were processed      * 00568000
*                             (processing of the entire command was   * 00568100
*                             suppressed).  On a WRITE_DATALIST       * 00568200
*                             request, a local cache bit vector       * 00568300
*                             operation failed because the vector     * 00568400
*                             index specified in one of the           * 00568500
*                             write-operation blocks is invalid.  The * 00568600
*                             index of the write-operation block      * 00568700
*                             containing the first invalid vector     * 00568800
*                             index is returned in the ANSAREA.  None * 00568900
*                             of the specified write-operation blocks * 00569000
*                             were processed (processing of the       * 00569100
*                             entire command was suppressed).         * 00569200
*                                                                     * 00569300
*                 xxxx081E    IxlRsnCodeBadCoLockState:  Change-bit   * 00569400
*                             overindication was specified for        * 00569500
*                             unlocking a castout lock on either an   * 00569600
*                             UNLOCK_CASTOUT request or an            * 00569700
*                             UNLOCK_CO_NAME request, but the castout * 00569800
*                             lock state indicates write with         * 00569900
*                             castout, which is incompatible.         * 00570000
*                                                                     * 00570100
*                 xxxx0824    IxlRsnCodeWrongStrType:  The connection * 00570200
*                             specified by CONTOKEN is not to a cache * 00570300
*                             structure.                              * 00570400
*                                                                     * 00570500
*                 xxxx0825    IxlRsnCodeNoEntry:  For a READ_DATA     * 00570600
*                             request with ASSIGN=NO specified, or    * 00570700
*                             for a CASTOUT_DATA request, the entry   * 00570800
*                             designated by NAME did not exist within * 00570900
*                             the structure.  For a WRITE_DATA        * 00571000
*                             request with WHENREG=YES specified,     * 00571100
*                             either the entry did not exist or the   * 00571200
*                             user's connection did not have          * 00571300
*                             registered interest in the entry.  For  * 00571400
*                             a WRITE_DATA request with WHENREG=YES   * 00571500
*                             and VECTORINDEX specified, either the   * 00571600
*                             entry did not exist or the connection   * 00571700
*                             specified by CONTOKEN did not have      * 00571800
*                             registered interest in the entry with   * 00571900
*                             the specified vector index number.  For * 00572000
*                             a WRITE_DATA request with WHENREG=NO    * 00572100
*                             and ASSIGN=NO specified, the entry did  * 00572200
*                             not exist.                              * 00572300
*                                                                     * 00572400
*                             For WRITE_DATALIST requests, the        * 00572500
*                             assignment suppression control          * 00572600
*                             indication specified in the WOB was set * 00572700
*                             and the entry did not exist.  The data  * 00572800
*                             is not written, the index of the        * 00572900
*                             write-operation block that failed, and  * 00573000
*                             the offset in the data block of the     * 00573100
*                             data area for the write-operation block * 00573200
*                             being processed is returned in the      * 00573300
*                             ANSAREA. All prior write-operation      * 00573400
*                             blocks were processed.  For an          * 00573500
*                             UNLOCK_CASTOUT, DELETE_NAMELIST, or     * 00573600
*                             CASTOUT_DATALIST request a name element * 00573700
*                             specified an entry name that did not    * 00573800
*                             exist in the structure. The index of    * 00573900
*                             the failing entry is returned and all   * 00574000
*                             prior names were processed.  For a      * 00574100
*                             CASTOUT_DATALIST request if ADJAREA was * 00574200
*                             specified, check the CaaAdjareaValid    * 00574300
*                             bit in the ANSAREA to see if adjunct    * 00574400
*                             was returned. If ADJAREA was specified, * 00574500
*                             check the CaaAdjAreaNonAddr bit to      * 00574600
*                             determine if the provided storage for   * 00574700
*                             the adjunct data is addressable. If the * 00574800
*                             provided storage for the DEIBAREA is    * 00574900
*                             not addressable, then the               * 00575000
*                             CaaDeibAreaNonAddr bit will be set.     * 00575100
*                             For a CROSS_INVALLIST request the name  * 00575200
*                             element specified an entry name that    * 00575300
*                             did not exist in the structure and      * 00575400
*                             ERRORACTION=TERMINATE was specified.    * 00575500
*                             The index of the failing name element   * 00575600
*                             is returned and all prior names were    * 00575700
*                             processed.  For an UNLOCK_CO_NAME       * 00575800
*                             request the name specified in the       * 00575900
*                             CUNBAREA did not exist in the           * 00576000
*                             structure.                              * 00576100
*                                                                     * 00576200
*                 xxxx0826    IxlRsnCodeIncompatState:  A WRITE_DATA  * 00576300
*                             or a WRITE_DATALIST request failed      * 00576400
*                             because the state of the named data     * 00576500
*                             item is incompatible with the request.  * 00576600
*                             This may be due to one of the following * 00576700
*                             conditions:                             * 00576800
*                                                                     * 00576900
*                                                                     * 00577000
*                             o   CHANGED=NO was specified on a       * 00577100
*                                 WRITE_DATA or the change control    * 00577200
*                                 indicator was not set in the        * 00577300
*                                 write-operation block on a          * 00577400
*                                 WRITE_DATALIST request, but the     * 00577500
*                                 data in the cache structure was     * 00577600
*                                 marked as changed.                  * 00577700
*                                                                     * 00577800
*                             o   GETCOLOCK=YES was specified on a    * 00577900
*                                 WRITE_DATA or the get cast-out lock * 00578000
*                                 control was set in the              * 00578100
*                                 write-operation block on a          * 00578200
*                                 WRITE_DATALIST request, but the     * 00578300
*                                 cast-out lock was already held from * 00578400
*                                 a previous request.  The previous   * 00578500
*                                 request will be one of the          * 00578600
*                                 following:                          * 00578700
*                                                                     * 00578800
*                                                                     * 00578900
*                                 -   A CASTOUT_DATA or               * 00579000
*                                     CASTOUT_DATALIST request.       * 00579100
*                                                                     * 00579200
*                                 -   A WRITE_DATA request with       * 00579300
*                                     GETCOLOCK=YES specified or a    * 00579400
*                                     WRITE_DATALIST request with the * 00579500
*                                     get cast-out lock control set   * 00579600
*                                     in the write-operation block,   * 00579700
*                                     where the CONTOKEN specified on * 00579800
*                                     the previous request is not     * 00579900
*                                     equal to the CONTOKEN specified * 00580000
*                                     on the failing WRITE_DATA or    * 00580100
*                                     WRITE_DATALIST request.         * 00580200
*                                                                     * 00580300
*                                 -   A WRITE_DATA request with       * 00580400
*                                     GETCOLOCK=YES specified or a    * 00580500
*                                     WRITE_DATALIST request with the * 00580600
*                                     get cast-out lock control set   * 00580700
*                                     in the write-operation block,   * 00580800
*                                     where the CONTOKEN specified on * 00580900
*                                     the previous request was equal  * 00581000
*                                     to the CONTOKEN specified on    * 00581100
*                                     the failing WRITE_DATA or       * 00581200
*                                     WRITE_DATALIST request, but the * 00581300
*                                     PROCESSID specified on the      * 00581400
*                                     previous request was not equal  * 00581500
*                                     to the PROCESSID specified on   * 00581600
*                                     the failing WRITE_DATA or       * 00581700
*                                     WRITE_DATALIST request.         * 00581800
*                                                                     * 00581900
*                                                                     * 00582000
*                                                                     * 00582100
*                                                                     * 00582200
*                                                                     * 00582300
*                             For WRITE_DATALIST requests, the data   * 00582400
*                             is not written, the index of the        * 00582500
*                             write-operation block that failed, and  * 00582600
*                             the offset in the data block of the     * 00582700
*                             data area for the write-operation block * 00582800
*                             being processed is returned in the      * 00582900
*                             ANSAREA. All prior write-operation      * 00583000
*                             blocks were processed.                  * 00583100
*                                                                     * 00583200
*                 xxxx0827    IxlRsnCodeCOLockHeld:  For a            * 00583300
*                             CASTOUT_DATA request, the request found * 00583400
*                             the cast-out lock for NAME was already  * 00583500
*                             held, and hence did not lock the entry  * 00583600
*                             for cast-out.  No subsystem data was    * 00583700
*                             returned in BUFFER, BUFLIST, or         * 00583800
*                             ADJAREA.  For a CASTOUT_DATALIST        * 00583900
*                             request, the request found the cast-out * 00584000
*                             lock was already held for the entry     * 00584100
*                             name currently being processed in the   * 00584200
*                             CASTOUTLIST and hence did not lock the  * 00584300
*                             entry for cast-out.  The index of the   * 00584400
*                             name in the CASTOUTLIST, the value of   * 00584500
*                             the cast-out lock and the value of the  * 00584600
*                             cast-out lock state are returned in the * 00584700
*                             ANSAREA. All prior entries  in the      * 00584800
*                             CASTOUTLIST were processed.  If ADJAREA * 00584900
*                             was specified, check the                * 00585000
*                             CaaAdjareaValid bit in the ANSAREA to   * 00585100
*                             see if adjunct was returned. If ADJAREA * 00585200
*                             was specified, check the                * 00585300
*                             CaaAdjAreaNonAddr bit to determine if   * 00585400
*                             the provided storage for the adjunct    * 00585500
*                             data is addressable. If the provided    * 00585600
*                             storage for the DEIBAREA is not         * 00585700
*                             addressable, then the                   * 00585800
*                             CaaDeibAreaNonAddr bit will be set.     * 00585900
*                                                                     * 00586000
*                 xxxx0828    IxlRsnCodeCOUnchanged:  For a           * 00586100
*                             CASTOUT_DATA request, the request was   * 00586200
*                             issued for an entry that did not        * 00586300
*                             contain changed subsystem data.  The    * 00586400
*                             request was denied and no data was      * 00586500
*                             returned in BUFFER, BUFLIST, or         * 00586600
*                             ADJAREA.  For a CASTOUT_DATALIST        * 00586700
*                             request, the entry being processed did  * 00586800
*                             not contain changed subsystem data. The * 00586900
*                             request was denied and the index of the * 00587000
*                             name in the CASTOUTLIST, the changed    * 00587100
*                             indicator and the data cached indicator * 00587200
*                             are returned in the ANSAREA. All prior  * 00587300
*                             entries in the CASTOUTLIST were         * 00587400
*                             processed.  If ADJAREA was specified,   * 00587500
*                             check the CaaAdjareaValid bit in the    * 00587600
*                             ANSAREA to see if adjunct was returned. * 00587700
*                             If ADJAREA was specified, check the     * 00587800
*                             CaaAdjAreaNonAddr bit to determine if   * 00587900
*                             the provided storage for the adjunct    * 00588000
*                             data is addressable. If the provided    * 00588100
*                             storage for the DEIBAREA is not         * 00588200
*                             addressable, then the                   * 00588300
*                             CaaDeibAreaNonAddr bit will be set.     * 00588400
*                                                                     * 00588500
*                 xxxx0829    IxlRsnCodeBadUnlockVal:  For an         * 00588600
*                             UNLOCK_CASTOUT request, the request     * 00588700
*                             encountered a name element for which    * 00588800
*                             the cast-out lock was not held for the  * 00588900
*                             connection specified by CONTOKEN, and   * 00589000
*                             optionally the PROCESSID.  Processing   * 00589100
*                             was halted with this name element.  For * 00589200
*                             an UNLOCK_CO_NAME request, the cast-out * 00589300
*                             lock was not held for the connection    * 00589400
*                             specified by CONTOKEN, and optionally   * 00589500
*                             the PROCESSID.                          * 00589600
*                                                                     * 00589700
*                 xxxx082A    IxlRsnCodeBadCOBeg:  The specified      * 00589800
*                             COCLASSB on a READ_COSTATS request      * 00589900
*                             exceeds the maximum defined cast-out    * 00590000
*                             class for the structure.                * 00590100
*                                                                     * 00590200
*                 xxxx082B    IxlRsnCodeBadIDIndex:  On an            * 00590300
*                             UNLOCK_CASTOUT request, either an       * 00590400
*                             invalid FIRSTNAME or invalid LASTNAME   * 00590500
*                             was specified.  The index of the first  * 00590600
*                             name element which was not processed is * 00590700
*                             returned in the answer area.  On a      * 00590800
*                             DELETE_NAMELIST request the value       * 00590900
*                             specified for STARTINDEX or ENDINDEX is * 00591000
*                             not valid. ENDINDEX must be greater     * 00591100
*                             than or equal to STARTINDEX.  On a      * 00591200
*                             CROSS_INVALLIST request the value       * 00591300
*                             specified for STARTINDEX or ENDINDEX is * 00591400
*                             not valid. ENDINDEX must be greater     * 00591500
*                             than or equal to STARTINDEX and         * 00591600
*                             ENDINDEX must be less than or equal to  * 00591700
*                             4096.  On a CASTOUT_DATALIST request    * 00591800
*                             the value specified for STARTINDEX or   * 00591900
*                             ENDINDEX is not valid. ENDINDEX must be * 00592000
*                             greater than or equal to STARTINDEX and * 00592100
*                             ENDINDEX must be less than or equal to  * 00592200
*                             8.                                      * 00592300
*                                                                     * 00592400
*                 xxxx082D    IxlRsnCodeBadStgClass:  On a READ_DATA, * 00592500
*                             WRITE_DATA, PROCESS_REFLIST,            * 00592600
*                             SET_RECLVCTR, or READ_STGSTATS request, * 00592700
*                             STGCLASS specifies a storage class      * 00592800
*                             exceeding the maximum defined storage   * 00592900
*                             class for the structure.  On a          * 00593000
*                             REG_NAMELIST request, one of the        * 00593100
*                             registration blocks specified a storage * 00593200
*                             class that exceeded the maximum defined * 00593300
*                             storage class for the structure.  The   * 00593400
*                             ANSAREA contains the index of the       * 00593500
*                             registration block for which the error  * 00593600
*                             was encountered.  The preceding         * 00593700
*                             registration blocks were processed.     * 00593800
*                                                                     * 00593900
*                             For WRITE_DATALIST requests, the        * 00594000
*                             storage class specified in the WOB      * 00594100
*                             exceeds the maximum defined storage     * 00594200
*                             class for the structure.  The data is   * 00594300
*                             not written, the index of the           * 00594400
*                             write-operation block that failed, and  * 00594500
*                             the offset in the data block of the     * 00594600
*                             data area for the write-operation block * 00594700
*                             being processed is is returned in the   * 00594800
*                             ANSAREA. All prior write-operation      * 00594900
*                             blocks were processed.                  * 00595000
*                                                                     * 00595100
*                 xxxx082E    IxlRsnCodeBadCOClass:  COCLASS          * 00595200
*                             specifies a cast-out class exceeding    * 00595300
*                             the maximum defined cast-out class for  * 00595400
*                             the structure.                          * 00595500
*                                                                     * 00595600
*                             For WRITE_DATALIST requests, the        * 00595700
*                             cast-out class specified in the WOB     * 00595800
*                             exceeds the maximum defined cast-out    * 00595900
*                             class for the structure.  The data is   * 00596000
*                             not written, the index of the           * 00596100
*                             write-operation block that failed, and  * 00596200
*                             the offset in the data block of the     * 00596300
*                             data area for the write-operation block * 00596400
*                             being processed is is returned in the   * 00596500
*                             ANSAREA. All prior write-operation      * 00596600
*                             blocks were processed.                  * 00596700
*                                                                     * 00596800
*                 xxxx082F    IxlRsnCodeBadParity:  For a WRITE_DATA  * 00596900
*                             request, the specified PARITY value was * 00597000
*                             invalid.  For an UNLOCK_CASTOUT         * 00597100
*                             request, the parity bits in a name      * 00597200
*                             element were invalid.  For an           * 00597300
*                             UNLOCK_CO_NAME request, the parity bits * 00597400
*                             for the name specified in the CUNBAREA  * 00597500
*                             were invalid.                           * 00597600
*                                                                     * 00597700
*                             For WRITE_DATALIST requests, the parity * 00597800
*                             value specified in the WOB was invalid. * 00597900
*                             The data is not written, the index of   * 00598000
*                             the write-operation block that failed,  * 00598100
*                             and the offset in the data block of the * 00598200
*                             data area for the write-operation block * 00598300
*                             being processed is returned in the      * 00598400
*                             ANSAREA. All prior write-operation      * 00598500
*                             blocks were processed.                  * 00598600
*                                                                     * 00598700
*                 xxxx0830    IxlRsnCodeBadNumNames:  A               * 00598800
*                             PROCESS_REFLIST request specified a     * 00598900
*                             NUMNAMES value which is not valid.      * 00599000
*                                                                     * 00599100
*                 xxxx0832    IxlRsnCodeNoRclvctr:  A SET_RECLVCTR    * 00599200
*                             request specified a REPEAT value        * 00599300
*                             greater than 0, but no RECLVCTR storage * 00599400
*                             area was specified.                     * 00599500
*                                                                     * 00599600
*                 xxxx0833    IxlRsnCodeBadPgblAttr:  The storage     * 00599700
*                             area specified by BUFFER, or one of the * 00599800
*                             buffers in the BUFLIST list is          * 00599900
*                             specified as being pageable, but is     * 00600000
*                             not.                                    * 00600100
*                                                                     * 00600200
*                 xxxx0834    IxlRsnCodeBadNonPgblAttr:  The storage  * 00600300
*                             area specified by BUFFER, or one of the * 00600400
*                             buffers in the BUFLIST list is          * 00600500
*                             specified as being non-pageable, but is * 00600600
*                             pageable.                               * 00600700
*                                                                     * 00600800
*                 xxxx0835    IxlRsnCodeBadDataAddr:  The storage     * 00600900
*                             area specified by BUFFER or one of the  * 00601000
*                             buffers in the BUFLIST list is not      * 00601100
*                             addressable.                            * 00601200
*                                                                     * 00601300
*                 xxxx0836    IxlRsnCodeBadRealAddr:  Real storage    * 00601400
*                             addresses were provided in a BUFLIST    * 00601500
*                             list.  One of the buffers is not        * 00601600
*                             addressable in central storage.         * 00601700
*                                                                     * 00601800
*                 xxxx0837    IxlRsnCodeBadWriteAdjData:  A           * 00601900
*                             WRITE_DATA specified that adjunct data  * 00602000
*                             was to be written, but the provided     * 00602100
*                             storage area for adjunct data is not    * 00602200
*                             addressable.  The request was           * 00602300
*                             suppressed.                             * 00602400
*                                                                     * 00602500
*                 xxxx0838    IxlRsnCodeBadAnsArea:  The storage area * 00602600
*                             specified by ANSAREA and ANSLEN is not  * 00602700
*                             addressable.                            * 00602800
*                                                                     * 00602900
*                 xxxx0839    IxlRsnCodeBadReqTokenArea:  The storage * 00603000
*                             area specified by REQTOKEN is not       * 00603100
*                             addressable.                            * 00603200
*                                                                     * 00603300
*                 xxxx083D    IxlRsnCodeBadAnsLen:  The length of the * 00603400
*                             answer area, as specified by ANSLEN, is * 00603500
*                             not sufficient for providing answer     * 00603600
*                             area information.                       * 00603700
*                                                                     * 00603800
*                 xxxx083F    IxlRsnCodeBadEntryVersion:  The         * 00603900
*                             specified structure entry has a version * 00604000
*                             number which does not meet the criteria * 00604100
*                             specified in the request.  The          * 00604200
*                             structure entry version number is       * 00604300
*                             returned in the answer area.            * 00604400
*                                                                     * 00604500
*                             For WRITE_DATALIST requests, the        * 00604600
*                             version number specified in the WOB     * 00604700
*                             does not meet the version number        * 00604800
*                             comparison criteria specified in the    * 00604900
*                             WOB.  The data is not written, the      * 00605000
*                             version number for the entry, the index * 00605100
*                             of the write-operation block that       * 00605200
*                             failed, and the offset in the data      * 00605300
*                             block of the data area for the          * 00605400
*                             write-operation block being processed   * 00605500
*                             is is returned in the ANSAREA. All      * 00605600
*                             prior write-operation blocks were       * 00605700
*                             processed.                              * 00605800
*                                                                     * 00605900
*                 xxxx0849    IxlRsnCodeBadResToken:  The specified   * 00606000
*                             RESTOKEN does not resolve to an         * 00606100
*                             appropriate entry to resume the         * 00606200
*                             request.  Possible causes are:          * 00606300
*                                                                     * 00606400
*                                                                     * 00606500
*                             o   For a READ_COCLASS request it may   * 00606600
*                                 be that the entry to be resumed on  * 00606700
*                                 no longer resides in the cast-out   * 00606800
*                                 class specified by COCLASS.         * 00606900
*                                                                     * 00607000
*                             o   The specified token does not        * 00607100
*                                 correspond to a previous            * 00607200
*                                 prematurely-completed request.      * 00607300
*                                                                     * 00607400
*                             o   The user specified RESTOKEN when    * 00607500
*                                 EXTRESTOKEN was required.           * 00607600
*                                                                     * 00607700
*                             o   The user specified EXTRESTOKEN when * 00607800
*                                 RESTOKEN was required.              * 00607900
*                                                                     * 00608000
*                                                                     * 00608100
*                                                                     * 00608200
*                 xxxx0851    IxlRsnCodeNoSuspenDisable:  A request   * 00608300
*                             specifying MODE=SYNCSUSPEND failed      * 00608400
*                             because the caller is disabled and      * 00608500
*                             cannot be suspended.                    * 00608600
*                                                                     * 00608700
*                 xxxx0864    IxlRsnCodeBadBufSize:  The specified    * 00608800
*                             buffer area is not large enough to      * 00608900
*                             contain the data being read.  No data   * 00609000
*                             is returned.                            * 00609100
*                                                                     * 00609200
*                             For CASTOUT_DATALIST requests, the      * 00609300
*                             specified buffer area is not large      * 00609400
*                             enough to contain the data area for the * 00609500
*                             entry in the CASTOUTLIST specified by   * 00609600
*                             STARTINDEX. The the number of elements  * 00609700
*                             in the desired entry is returned in the * 00609800
*                             ANSAREA.                                * 00609900
*                                                                     * 00610000
*                 xxxx0865    IxlRsnCodeBadBufSpec:  The buffer       * 00610100
*                             specification is in error.  Refer to    * 00610200
*                             the BUFFER or BUFLIST specification     * 00610300
*                             requirements.                           * 00610400
*                                                                     * 00610500
*                 xxxx0866    IxlRsnCodeBadBufKey:  The buffer        * 00610600
*                             storage key is incorrect.  For requests * 00610700
*                             which write CF data the data cannot be  * 00610800
*                             fetched.  For requests which read CF    * 00610900
*                             data the data cannot be stored.         * 00611000
*                                                                     * 00611100
*                 xxxx0867    IxlRsnCodeBadBufList:  The storage area * 00611200
*                             specified by BUFLIST is not             * 00611300
*                             addressable.                            * 00611400
*                                                                     * 00611500
*                 xxxx0868    IxlRsnCodeBadReclVctr:  The storage     * 00611600
*                             area specified by RECLVCTR is not       * 00611700
*                             addressable.                            * 00611800
*                                                                     * 00611900
*                 xxxx0869    IxlRsnCodeBadStgStats:  The storage     * 00612000
*                             area specified by STGSTATS is not       * 00612100
*                             addressable.                            * 00612200
*                                                                     * 00612300
*                 xxxx086A    IxlRsnCodeBadElemNum:  The value        * 00612400
*                             specified for ELEMNUM is not valid.     * 00612500
*                                                                     * 00612600
*                             For WRITE_DATALIST requests, the        * 00612700
*                             ELEMNUM specified in the WOB is not     * 00612800
*                             valid.  The data is not written, the    * 00612900
*                             index of the write-operation block that * 00613000
*                             failed, and the offset in the data      * 00613100
*                             block of the data area for the          * 00613200
*                             write-operation block being processed   * 00613300
*                             is returned in the ANSAREA. All prior   * 00613400
*                             write-operation blocks were processed.  * 00613500
*                                                                     * 00613600
*                 xxxx0874    IxlRsnCodeBadRNLIndex:  The value       * 00613700
*                             specified for either STARTINDEX or      * 00613800
*                             ENDINDEX is not valid.                  * 00613900
*                                                                     * 00614000
*                 xxxx0874    IxlRsnCodeBadWDLIndex:  On a            * 00614100
*                             WRITE_DATALIST request value specified  * 00614200
*                             for either STARTINDEX or ENDINDEX is    * 00614300
*                             not valid.                              * 00614400
*                                                                     * 00614500
*                 xxxx0875    IxlRsnCodeBadNSBArea:  The storage area * 00614600
*                             specified by NSBAREA is not             * 00614700
*                             addressable.                            * 00614800
*                                                                     * 00614900
*                 xxxx0887    IxlRsnCodeBadExtResToken:  The          * 00615000
*                             specified extended restart token is not * 00615100
*                             valid.  The specified token refers to   * 00615200
*                             an older instance of the target         * 00615300
*                             structure.                              * 00615400
*                                                                     * 00615500
*                 xxxx087D    IxlRsnCodeBadWORBArea:  The storage     * 00615600
*                             area specified by WORBAREA is not       * 00615700
*                             addressable.                            * 00615800
*                                                                     * 00615900
*                 xxxx08AA    IxlRsnCodeElemNumMisMatch:  For         * 00616000
*                             WRITE_DATALIST requests, the specified  * 00616100
*                             data area size in the WOB does not      * 00616200
*                             match the actual size of the            * 00616300
*                             corresponding data area in the data     * 00616400
*                             block.  The data is not written, the    * 00616500
*                             data-area size for the entry, the index * 00616600
*                             of the write-operation block that       * 00616700
*                             failed, and the offset in the data      * 00616800
*                             block of the data area for the          * 00616900
*                             write-operation block being processed   * 00617000
*                             is is returned in the ANSAREA. All      * 00617100
*                             prior write-operation blocks were       * 00617200
*                             processed.                              * 00617300
*                                                                     * 00617400
*                 xxxx08AB    IxlRsnCodeBadDataOffset:  On a          * 00617500
*                             WRITE_DATALIST request, an invalid      * 00617600
*                             DATAOFFSET was specified. No data is    * 00617700
*                             returned.                               * 00617800
*                                                                     * 00617900
*                 xxxx08AC    IxlRsnCodeBadGetCOlock:  On a           * 00618000
*                             WRITE_DATALIST request, the change      * 00618100
*                             control indicator was set and the get   * 00618200
*                             castout lock control indicator was also * 00618300
*                             set in the WOB. The data is not         * 00618400
*                             written, the castout lock is not        * 00618500
*                             obtained and the index of the failing   * 00618600
*                             write-operation block is returned in    * 00618700
*                             the ANSAREA. None of the specified      * 00618800
*                             write-operation blocks were processed.  * 00618900
*                             Processing of the entire command was    * 00619000
*                             suppressed.                             * 00619100
*                                                                     * 00619200
*                 xxxx08AD    IxlRsnCodeBadHighSharedVirt:  Request   * 00619300
*                             specified a high shared virtual storage * 00619400
*                             area (above 2GB).                       * 00619500
*                                                                     * 00619600
*                 xxxx08AF    IxlRsnCodeBadWrtSuppressCntl:  On a     * 00619700
*                             WRITE_DATALIST request,                 * 00619800
*                             LOCALREGCNTL=YES was specified, but the * 00619900
*                             change control and assignment           * 00620000
*                             suppression indicators were not set in  * 00620100
*                             all the WOBs in the WOB list.  The data * 00620200
*                             is not written, the index of the        * 00620300
*                             failing write-operation block is        * 00620400
*                             returned in the ANSAREA. None of the    * 00620500
*                             specified write-operation blocks were   * 00620600
*                             processed. Processing of the entire     * 00620700
*                             command was suppressed.                 * 00620800
*                                                                     * 00620900
*                 xxxx08B9    IxlRsnCodeNoAnsArea:  No answer area    * 00621000
*                             was specified.  The requested service   * 00621100
*                             determined that conditions exist that   * 00621200
*                             require an ANSAREA to complete the      * 00621300
*                             request. Please see the description for * 00621400
*                             ANSAREA for a list of conditions that   * 00621500
*                             require an ANSAREA.                     * 00621600
*                                                                     * 00621700
*                                                                     * 00621800
*                                                                     * 00621900
*                                                                     * 00622000
*       C         IxlRetCodeEnvError:  Environmental problem.         * 00622100
*                                                                     * 00622200
*                 HEX REASON  MEANING                                 * 00622300
*                 CODE                                                * 00622400
*                                                                     * 00622500
*                                                                     * 00622600
*                 xxxx0C06    IxlRsnCodeNoConn:  No connectivity to   * 00622700
*                             the cache structure.  This may occur    * 00622800
*                             due to operator commands such as VARY   * 00622900
*                             PATH OFFLINE or CONFIG CHP OFFLINE or   * 00623000
*                             hardware errors such as facility or     * 00623100
*                             path failures.  The contoken will be    * 00623200
*                             invalidated.  The user should           * 00623300
*                             disconnect or rebuild.                  * 00623400
*                                                                     * 00623500
*                 xxxx0C13    IxlRsnCodeReqPurged:  Prior to          * 00623600
*                             completion of the request, the request  * 00623700
*                             was purged.  Reasons: the connector     * 00623800
*                             failed, the connector disconnected, the * 00623900
*                             requestor failed, the request was       * 00624000
*                             purged by IXLPURGE, or requests were    * 00624100
*                             purged when the connector provided an   * 00624200
*                             IXLEERSP response for the Rebuild Stop  * 00624300
*                             or Rebuild Cleanup event.               * 00624400
*                                                                     * 00624500
*                 xxxx0C14    IxlRsnCodeStatusUnknown:  The IXLCACHE  * 00624600
*                             request has completed, but the final    * 00624700
*                             disposition of the request can not be   * 00624800
*                             determined.                             * 00624900
*                                                                     * 00625000
*                 xxxx0C17    IxlRsnCodeStrFull:  READ_DATA,          * 00625100
*                             WRITE_DATA, REG_NAMELIST, or            * 00625200
*                             WRITE_DATALIST processing needed to     * 00625300
*                             allocate a directory and/or data entry, * 00625400
*                             but none was available nor could any be * 00625500
*                             reclaimed.  On a REG_NAMELIST request,  * 00625600
*                             the ANSAREA contains both the index of  * 00625700
*                             the registration block which was being  * 00625800
*                             processed when the error was            * 00625900
*                             encountered, and the target storage     * 00626000
*                             class from which resources could not be * 00626100
*                             reclaimed.  All prior registration      * 00626200
*                             blocks were processed.                  * 00626300
*                                                                     * 00626400
*                             For WRITE_DATALIST requests, The data   * 00626500
*                             is not written, the target storage      * 00626600
*                             class for the entry, the index of the   * 00626700
*                             write-operation block that failed, and  * 00626800
*                             the offset in the data block of the     * 00626900
*                             data area for the write-operation block * 00627000
*                             being processed is returned in the      * 00627100
*                             ANSAREA. All prior write-operation      * 00627200
*                             blocks were processed.                  * 00627300
*                                                                     * 00627400
*                 xxxx0C25    IxlRsnCodeStrFailure:  Prior to         * 00627500
*                             completion of the request, the cache    * 00627600
*                             structure failed.                       * 00627700
*                                                                     * 00627800
*                 xxxx0C68    IxlRsnCodeBadReqCFLevel:  The request   * 00627900
*                             type is not permitted for the level of  * 00628000
*                             coupling facility in which the target   * 00628100
*                             structure is allocated.                 * 00628200
*                                                                     * 00628300
*                 xxxx0CA0    IxlRsnCodeQuiescedSuspendFail:  The     * 00628400
*                             request is failed because the structure * 00628500
*                             is quiesced for a system-managed        * 00628600
*                             process (other than a STOP or SWITCH to * 00628700
*                             fall out of a system-managed duplexing  * 00628800
*                             rebuild) and SUSPEND=FAIL was specified * 00628900
*                             on the IXLCONN.                         * 00629000
*                                                                     * 00629100
*                 xxxxFFFF    IxlRsnCodeNotAvailable:  XES functions  * 00629200
*                             are not available.  This can be because * 00629300
*                             the hardware necessary to provide XES   * 00629400
*                             function is not present.                * 00629500
*                                                                     * 00629600
*                                                                     * 00629700
*                                                                     * 00629800
*                                                                     * 00629900
*       10        IxlRetCodeCompError:  XES processing failure.  The  * 00630000
*                 state of the involved structure and the disposition * 00630100
*                 of the request are unpredictable.                   * 00630200
*                                                                     * 00630300
*                                                                     * 00630400
*                                                                     * 00630500
*01* REASON CODES:                                                    * 00630600
*                                                                     * 00630700
*       Reason codes, as appropriate, are defined under their         * 00630800
*       corresponding return code.  Reason code and return code       * 00630900
*       constants are defined within IXLYCON.                         * 00631000
*                                                                     * 00631100
*01* MODULE TYPE:  ASSEM MACRO                                        * 00631200
*                                                                     * 00631300
*02*   PROCESSOR:  ASSEM                                              * 00631400
*                                                                     * 00631500
*01* COMPONENT:  SCIXL                                                * 00631600
*                                                                     * 00631700
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00631800
*                                                                     * 00631900
*01* MACRO USAGE NOTES:                                               * 00632000
*                                                                     * 00632100
*                                                                     * 00632200
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00632300
*        global macro variable.  Any value other than 'NO' will       * 00632400
*        result in the macro expansion being printed.  The default is * 00632500
*        'YES'.  The following examples illustrate how the ZPRINT     * 00632600
*        variable should be set.                                      * 00632700
*                                                                     * 00632800
*                    GBLC &ZPRINT                                     * 00632900
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00633000
*                                                                     * 00633100
*                                                                     * 00633200
*    2.  The IXLCACHE macro supports multiple versions. The macro key * 00633300
*        list  below  contains the version level in which the key was * 00633400
*        first  introduced.  Positionals  are  identified by the word * 00633500
*        'Positional'  followed by the numeric value of its position. * 00633600
*        Nested  positionals  are  preceded  by their outer key.  The * 00633700
*        lowest value represents the original version and the highest * 00633800
*        value  represents  the  most  recent version of the IXLCACHE * 00633900
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00634000
*        least  as high as the highest version number of all the keys * 00634100
*        being used.                                                  * 00634200
*                                                                     * 00634300
*        VERSION   KEY                                                * 00634400
*                                                                     * 00634500
*              0      ADJAREA                                         * 00634600
*                     ANSAREA                                         * 00634700
*                     ANSLEN                                          * 00634800
*                     ASSIGN                                          * 00634900
*                     BUFADDRSIZE                                     * 00635000
*                     BUFADDRTYPE                                     * 00635100
*                     BUFALET                                         * 00635200
*                     BUFFER                                          * 00635300
*                     BUFINCRNUM                                      * 00635400
*                     BUFLIST                                         * 00635500
*                     BUFNUM                                          * 00635600
*                     BUFSIZE                                         * 00635700
*                     BUFSTGKEY                                       * 00635800
*                     CHANGED                                         * 00635900
*                     COCLASS                                         * 00636000
*                     COCLASSB                                        * 00636100
*                     COCLASSE                                        * 00636200
*                     CONTOKEN                                        * 00636300
*                     CRITERIA                                        * 00636400
*                     CROSSINVAL                                      * 00636500
*                     DIRINFOFMT                                      * 00636600
*                     ELEMNUM                                         * 00636700
*                     FIRSTNAME                                       * 00636800
*                     GETCOLOCK                                       * 00636900
*                     LASTNAME                                        * 00637000
*                     MODE                                            * 00637100
*                     NAME                                            * 00637200
*                     NAMEMASK                                        * 00637300
*                     NUMNAMES                                        * 00637400
*                     OLDNAME                                         * 00637500
*                     PAGEABLE                                        * 00637600
*                     PARITY                                          * 00637700
*                     PROCESSID                                       * 00637800
*                     RECLVCTR                                        * 00637900
*                     REGUSER                                         * 00638000
*                     REPEAT                                          * 00638100
*                     REQDATA                                         * 00638200
*                     REQECB                                          * 00638300
*                     REQID                                           * 00638400
*                     REQTOKEN                                        * 00638500
*                     REQUEST                                         * 00638600
*                     RESTOKEN                                        * 00638700
*                     RTATYPE                                         * 00638800
*                     STGCLASS                                        * 00638900
*                     STGSTATS                                        * 00639000
*                     USERDATA                                        * 00639100
*                     VECTORINDEX                                     * 00639200
*                     WHENREG                                         * 00639300
*              1      ENDINDEX                                        * 00639400
*                     NSBAREA                                         * 00639500
*                     STARTINDEX                                      * 00639600
*              2      CUNBAREA                                        * 00639700
*                     RETURNDATA                                      * 00639800
*              3      COSTATSFMT                                      * 00639900
*                     DELETETYPE                                      * 00640000
*                     ERRORACTION                                     * 00640100
*                     NEWVERS                                         * 00640200
*                     VERSCOMP                                        * 00640300
*                     VERSCOMPTYPE                                    * 00640400
*                     VERSUPDATE                                      * 00640500
*              4      EXTRESTOKEN                                     * 00640600
*              6      CASTOUTLIST                                     * 00640700
*                     DATAOFFSET                                      * 00640800
*                     DEIBAREA                                        * 00640900
*                     WORBAREA                                        * 00641000
*              7      LOCALREGCNTL                                    * 00641100
*              8      AXIOVERRIDE                                     * 00641200
*                     HALTONCHANGED                                   * 00641300
*                     SUPPCROSSINVAL                                  * 00641400
*                                                                     * 00641500
*    3.  Different parameter list versions may be generated depending * 00641600
*        on  the  value  specified  for certain keys.   The following * 00641700
*        table  summarizes  the  minimum  version required to support * 00641800
*        such  specifications.   When  specifying  PLISTVER,  be sure * 00641900
*        that it is as least as high as the highest version number of * 00642000
*        all the key values being used.                               * 00642100
*                                                                     * 00642200
*        Key              Version  Key Value                          * 00642300
*        -------------    -------  ---------------------------------- * 00642400
*        -                                                            * 00642500
*        ASSIGN           0        YES                                * 00642600
*                                  NO with REQUEST=READ_DATA          * 00642700
*                         1        same as 0                          * 00642800
*                         2        same as 1                          * 00642900
*                         3        same as 2                          * 00643000
*                         4        same as 3                          * 00643100
*                         5        YES                                * 00643200
*                                  NO with REQUEST=READ_DATA          * 00643300
*                                  NO with REQUEST=WRITE_DATA,        * 00643400
*                                  WHENREG=NO                         * 00643500
*                                                                     * 00643600
*                                                                     * 00643700
*                                                                     * 00643800
*01* CHANGE ACTIVITY:                                                 * 00643900
*                                                                     * 00644000
*   Flag LineItem  FMID    Date   ID    Comment                       * 00644100
*                                                                     * 00644200
*    $L0=SYSLKSMG HBB5510 910304 PD00K1:  Locking support             * 00644300
*    $P1=PIG0383  HBB5510 910923 PD00AO:  Fix name block size         * 00644400
*    $P2=PIG0267  HBB5510 910923 PD00AO:  Fix asm plst field          * 00644500
*                                         references                  * 00644600
*    $P3=PIG0503  HBB5510 920106 PD00AO:  Update RSN code             * 00644700
*                                         documentation               * 00644800
*    $P4=PIG0504  HBB5510 920106 PD00AO:  Change REPLNAME to OLDNAME  * 00644900
*    $P5=PIG0536  HBB5510 920106 PD00AO:  Fix NO_xxx defaults         * 00645000
*    $P6=PIG0578  HBB5510 920224 PD00AO:  Add ASM default removal     * 00645100
*    $D1=DIG0018  HBB5510 921105 PD00AO:  >4K support                 * 00645200
*    $D2=DIG0048  HBB5510 930114 PD00AO:  Miscellaneous changes       * 00645300
*    $P7=PIG1064  HBB5510 930201 PD00AO:  Fix ASM stmt syntax         * 00645400
*    $P8=PIG1557  HBB5510 930520 PD00AO:  Change for BufSize check    * 00645500
*    $D3=DIG0129  HBB5510 930520 PD00AO:  Write-thru cache support    * 00645600
*    $P9=PIG1857  HBB5510 930607 PD00AO:  Fix MCB DBS values          * 00645700
*    $D4=DIG0162  HBB5510 930802 PD00AO:  New architecture support    * 00645800
*    $PA=PIG2997  HBB5510 931001 PD00AO:  Do not allow VectorIndex on * 00645900
*                                         Castout_Data with           * 00646000
*                                         RegUser(No)                 * 00646100
*    $PB=PIG3233  HBB5510 931001 PD00AO:  Fix ASM BufSize offset      * 00646200
*    $PC=PIG3684  HBB5510 931201 PD00AO:  Expand RsnCode descriptions * 00646300
*    $PD=PIG3706  HBB5510 931119 PD00AO:  Expand RsnCode and OldName  * 00646400
*                                         descriptions                * 00646500
*    $PE=PIG5158  HBB5510 940211 PD00FR:  Castout Class Count defn    * 00646600
*    $PF=PIG5178  HBB5510 940314 PD00AO:  Performance                 * 00646700
*    $PG=PIG5236  HBB5510 940314 PD00FR:  Document DIE mode           * 00646800
*                                         restriction                 * 00646900
*    $PH=PIG5540  HBB5510 940715 PD00AO:  Fix ELEMNUM and PARITY      * 00647000
*                                         assembler                   * 00647100
*    $PI=PIG5560  HBB5510 940801 PD00AO:  Fix ASYNCxxxx assembler     * 00647200
*    $D5=DN70083  HBB5520 940720 PD00AO:  Reapportionment support     * 00647300
*    $D6=DN70092  HBB5520 940801 PD00AO:  255-element support         * 00647400
*    $PJ=PN71438  HBB5520 940901 PD00AO:  Fix 255-element             * 00647500
*                                         documentation               * 00647600
*    $01=OW13805  HBB5510 950616 PD00FR:  Fix DIRINFOFMT assembler    * 00647700
*    $02=OW15587  HBB5520 950615 PD00HX:  REG_NAMELIST support        * 00647800
*    $03=OW19393  HBB5510 961127 PD00FR:  Storage bind processing     * 00647900
*    $04=OW24532  HBB5520 961230 PD00GW:  UNLOCK_CO_NAME and Write    * 00648000
*                                         with no data                * 00648100
*    $05=OW28460  HBB6603 970401 PD00GW:  User Controlled Duplexing   * 00648200
*    $PK=PVT0144  HBB5510 971211 PD00BC:  VECTORINDEX checking        * 00648300
*    $PL=PVT0169  HBB5510 971211 PD00BC:  STARTINDEX code generation  * 00648400
*    $PM=PVT0456  HBB6603 980228 PD00BC:  PLOFF_XCMDFLAG9 offset      * 00648500
*    $L1=AUTOR    HBB6608 980622 PD00XM:  Add ExtRestoken keyword     * 00648600
*    $PN=PWK0157  HBB6608 980828 PD00XM:  Fix ASM setting of extended * 00648700
*                                         restart token in parameter  * 00648800
*                                         list                        * 00648900
*    $L2=AUTOR    HBB6608 980828 PD00MP:  Auto Rebuild support        * 00649000
*    $L3=64BIT    HBB7703 981208 B7VBGD:  64 bit real support         * 00649100
*    $06=OW35883  HBB6603 990107 PD00GW:  Fix EndIndex code           * 00649200
*                                         generation                  * 00649300
*    $PO=PWY0280  JBB6609 990322 PD00DV:  Assignment Suppression      * 00649400
*                                         Control                     * 00649500
*    $PP=PWY0716  JBB6609 990726 PD00FR:  Version number              * 00649600
*                                         comparison/update           * 00649700
*                                         documentation changes       * 00649800
*    $PQ=PXD0474  HBB7703 991022 PD00GW:  Version number              * 00649900
*                                         comparison/update           * 00650000
*                                         documentation changes       * 00650100
*    $PR=PXD1141  HBB7703 990112 PD00GW:  Version number              * 00650200
*                                         comparison/update           * 00650300
*                                         documentation changes       * 00650400
*    $07=OW39892  HBB7705 001115 PD00QQ:  AutoR extension for CICS    * 00650500
*    $L4=V64BIT   HBB7705 000912 PD00SE:  64-Bit Virtual Support      * 00650600
*    $PS=PX00445  HBB7705 001127 PD00XK:  Fix ASM xWhenReg statement  * 00650700
*    $PT=PX00769  HBB7705 010122 PD00SE:  64-Bit Virtual Support      * 00650800
*    $PU=PX01240  HBB7705 010122 PD00MO:  Reship to pick up AMG fix   * 00650900
*    $08=OW52762  HBB6608 020131 PD00BN:  ExtResToken assembler error * 00651000
*    $L5=DB2PE    HBB7707 010924 PD002F:  DB2 Performance             * 00651100
*                                         Enhancements                * 00651200
*    $D7=DCR0001  HBB7707 011130 PD002F:  Buflist Support for         * 00651300
*                                         WRITE_DATALIST              * 00651400
*    $PV=PYV0309  HBB7707 020201 PD002F:  Documentation fixes         * 00651500
*    $PW=PYV0403  HBB7707 020218 PD002F:  OW53548 Support             * 00651600
*    $09=OA14351  HBB7707 051111 PD00FR:  Enhanced Restart Token      * 00651700
*                                         support for READ_COCLASS    * 00651800
*    $PX=ME08196  HBB7740 070629 PD00FR:  RSMPIN/RSMLKPG large pages  * 00651900
*                                         (APAR OA20902)              * 00652000
*    $PY=ME12915  HBB7750 080314 PD00FR:  Correct macro documentation * 00652100
*                                         regarding disallowed use of * 00652200
*                                         high shared virtual storage * 00652300
*                                         areas (PYN0893)             * 00652400
*    $L6=CACWRAND HBB7790 110130 PD00C9:  CF Cache Write Around       * 00652500
*                                         Support - Suppress Write    * 00652600
*                                         When Locally Registered     * 00652700
*                                         Control (SWWLRC)            * 00652800
*    $L7=CACRAVAL HBB7790 110303 PD00C9:  CF Cache Register           * 00652900
*                                         Attachment Validation       * 00653000
*    $0B=OA38419  HBB7770 111209 PD00C9:  HaltOnChanged and           * 00653100
*                                         SuppCrossInval              * 00653200
*    $0C=OA37550  HBB7770 120904 PD00C9:  Prolog updates              * 00653300
*    $L8=CFCRYPT  HBB77B0 160311 PD002F:  CF Encryption               * 00653400
*    $PZ=151683   HBB77B0 170112 PD00C9:  Add documentation regarding * 00653500
*                                         disallowed use of pageable  * 00653600
*                                         high virtual common storage * 00653700
*                                         (above 2GB) for buffers     * 00653800
*    $L9=OA54688  HBB77A0 180219 PD00C9:  Asynchronous XI support     * 00653900
*    $LA=OA54688  HBB77A0 180205 PD002F:  Asynchronous XI support     * 00654000
****** END OF SPECIFICATIONS *****************************************/ 00654100
*/********************************************************************* 00654200
         MACRO                                                          00654300
&XLABEL  IXLCACHE &REQUEST=,&ASSIGN=,&REGUSER=,&RETURNDATA=,           *00654400
               &AXIOVERRIDE=,&WHENREG=,&LOCALREGCNTL=,&VERSCOMP=,      *00654500
               &VERSCOMPTYPE=,&VERSUPDATE=,&NEWVERS=,&CHANGED=,        *00654600
               &CROSSINVAL=,&GETCOLOCK=,&PROCESSID=,&PARITY=,          *00654700
               &USERDATA=,&ELEMNUM=,&STARTINDEX=,&ENDINDEX=,           *00654800
               &DATAOFFSET=,&WORBAREA=,&NSBAREA=,&DEIBAREA=,           *00654900
               &CASTOUTLIST=,&FIRSTNAME=,&LASTNAME=,&CUNBAREA=,        *00655000
               &ERRORACTION=,&DELETETYPE=,&HALTONCHANGED=,             *00655100
               &SUPPCROSSINVAL=,&DIRINFOFMT=,&RTATYPE=,&CRITERIA=,     *00655200
               &COCLASSB=,&COCLASSE=,&COSTATSFMT=,&STGSTATS=,          *00655300
               &NUMNAMES=,&REPEAT=,&RECLVCTR=,&CONTOKEN=,&REQID=,      *00655400
               &NAME=,&NAMEMASK=,&OLDNAME=,&BUFLIST=,&BUFADDRTYPE=,    *00655500
               &PAGEABLE=,&BUFSTGKEY=,&BUFALET=,&BUFADDRSIZE=,&BUFNUM=,*00655600
               &BUFINCRNUM=,&BUFFER=,&BUFSIZE=,&ADJAREA=,&STGCLASS=,   *00655700
               &COCLASS=,&VECTORINDEX=,&RESTOKEN=,&EXTRESTOKEN=,&MODE=,*00655800
               &REQECB=,&REQDATA=,&REQTOKEN=,&ANSAREA=,&ANSLEN=,       *00655900
               &RETCODE=,&RSNCODE=,&PLISTVER=,&MF=                      00656000
.*                                                                      00656100
*                      MACDATE -11/26/18-<8>                            00656200
.*                                                                      00656300
.*******************************************************************    00656400
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00656500
.*******************************************************************    00656600
                      GBLC  &ZPRINT     YES=PRINT NO=NO PRINT           00656700
                      GBLC  &ZTEST      YES=TEST NO=NO TEST             00656800
                      GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX     00656900
.*                                                                      00657000
                      GBLC  &ZIXLCACHE  YES=MACRO USED AT LEAST ONCE    00657100
.*******************************************************************    00657200
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00657300
.*******************************************************************    00657400
                      LCLC  &ZMS        ERROR MESSAGE WORK AREA         00657500
                      LCLC  &ZCNDX      SYSNDX CHARACTERS               00657600
                      LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED      00657700
                      LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR     00657800
                      LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE     00657900
                      LCLA  &ZAWRK      USED AS A WORK AREA             00658000
                      LCLA  &ZASIZ      USED FOR SIZE OF VALUE          00658100
                      LCLA  &ZN         NUMERIC WORK VARIABLE           00658200
                      LCLC  &ZC         CHARACTER WORK VARIABLE         00658300
                      LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE     00658400
                      LCLA  &ZTLA       VALUE TOO LONG VARIABLE         00658500
                      LCLC  &ZMAC_G     "G" or null                     00658600
&ZMAC_G               SETC  ''                                          00658700
                      LCLC  &ZMAC_LR                                    00658800
&ZMAC_LR              SETC  'LR'                                        00658900
                      LCLC  &ZMAC_L                                     00659000
&ZMAC_L               SETC  'L'                                         00659100
                      LCLC  &ZMAC_ST                                    00659200
&ZMAC_ST              SETC  'ST'                                        00659300
                      LCLC  &ZMAC_LLGT                                  00659400
&ZMAC_LLGT            SETC  'L'                                         00659500
                      LCLC  &ZMAC_LGR                                   00659600
&ZMAC_LGR             SETC  'LR'                                        00659700
                      LCLC  &ZMAC_LG                                    00659800
&ZMAC_LG              SETC  'L'                                         00659900
                      LCLC  &ZMAC_STG                                   00660000
&ZMAC_STG             SETC  'ST'                                        00660100
                      LCLA  &ZMACRET    MACRO RETURN CODE               00660200
&ZMACRET              SETA  0           ASSUME NO ERRORS                00660300
.*                                                                      00660400
                      LCLC  &ZCSYSLIST(255)     NONXKEY, POS ARRAY      00660500
                      LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()      00660600
                      LCLA  &ZPLLEN     PARAMETER LIST LENGTH           00660700
                      LCLC  &ZENDBASEPL         End of base PL          00660800
                      LCLA  &ZPLWORKA   PARAMETER LIST LENGTH           00660900
.*******************************************************************    00661000
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00661100
.*******************************************************************    00661200
                      LCLA  &ZI         INDEX FOR ARRAY                 00661300
                      LCLA  &ZJ         INDEX FOR PARMS                 00661400
                      LCLA  &ZK         INDEX FOR PARSE                 00661500
                      LCLA  &ZLO        LOW RANGE VALUE                 00661600
                      LCLA  &ZHI        HIGH RANGE VALUE                00661700
                      LCLC  &ZW         WORK AREA FOR PARM              00661800
.********************************************************************   00661900
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00662000
.********************************************************************   00662100
                      GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL         00662200
                      GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE  00662300
                      GBLA  &SYSALVL    SYSSTATE ARCHLVL                00662400
                      GBLC  &SYSAM64    SYSSTATE AMODE64                00662500
.*                                                                      00662600
                      AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED  00662700
                      AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED   00662800
                      SPLEVEL  TEST                                     00662900
.ZSYS2                ANOP  ,                                           00663000
                      AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1       00663100
                      AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1       00663200
                      SYSSTATE TEST                                     00663300
                      AGO   .ZSYS4                                      00663400
.ZSYS3                ANOP  ,                                           00663500
&SYSASCE              SETC  'P'         ASSUME SYSSTATE PRIMARY         00663600
.ZSYS4                ANOP  ,                                           00663700
                      AIF   ('&SYSAM64' NE 'YES').ZSYSN64               00663800
&ZMAC_LLGT            SETC 'LLGT'                                       00663900
&ZMAC_LGR             SETC 'LGR'                                        00664000
&ZMAC_LG              SETC 'LG'                                         00664100
&ZMAC_STG             SETC 'STG'                                        00664200
.ZSYSN64              ANOP  ,                                           00664300
.*******************************************************************    00664400
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00664500
.*******************************************************************    00664600
                      LCLC  &XREQUEST   ++ VALUE                        00664700
                      LCLC  &XASSIGN    ++ VALUE                        00664800
                      LCLC  &XREGUSER   ++ VALUE                        00664900
                      LCLC  &XRETURNDATA        ++ VALUE                00665000
                      LCLC  &XAXIOVERRIDE       ++ NAME                 00665100
                      LCLC  &XWHENREG   ++ VALUE                        00665200
                      LCLC  &XLOCALREGCNTL      ++ VALUE                00665300
                      LCLC  &XVERSCOMP  ++ NAME                         00665400
                      LCLC  &XVERSCOMPTYPE      ++ VALUE                00665500
                      LCLC  &XVERSUPDATE        ++ VALUE                00665600
                      LCLC  &XNEWVERS   ++ NAME                         00665700
                      LCLC  &XCHANGED   ++ VALUE                        00665800
                      LCLC  &XCROSSINVAL        ++ VALUE                00665900
                      LCLC  &XGETCOLOCK         ++ VALUE                00666000
                      LCLC  &XPROCESSID         ++ NAME                 00666100
                      LCLC  &XPARITY    ++ NAME                         00666200
                      LCLC  &XUSERDATA  ++ NAME                         00666300
                      LCLC  &XELEMNUM   ++ NAME                         00666400
                      LCLC  &XSTARTINDEX        ++ NAME                 00666500
                      LCLC  &XENDINDEX  ++ NAME                         00666600
                      LCLC  &XDATAOFFSET        ++ NAME                 00666700
                      LCLC  &XWORBAREA  ++ NAME                         00666800
                      LCLC  &XNSBAREA   ++ NAME                         00666900
                      LCLC  &XDEIBAREA  ++ NAME                         00667000
                      LCLC  &XCASTOUTLIST       ++ NAME                 00667100
                      LCLC  &XFIRSTNAME         ++ NAME                 00667200
                      LCLC  &XLASTNAME  ++ NAME                         00667300
                      LCLC  &XCUNBAREA  ++ NAME                         00667400
                      LCLC  &XERRORACTION       ++ VALUE                00667500
                      LCLC  &XDELETETYPE        ++ VALUE                00667600
                      LCLC  &XHALTONCHANGED     ++ VALUE                00667700
                      LCLC  &XSUPPCROSSINVAL    ++ VALUE                00667800
                      LCLC  &XDIRINFOFMT        ++ VALUE                00667900
                      LCLC  &XRTATYPE   ++ VALUE                        00668000
                      LCLC  &XCRITERIA  ++ VALUE                        00668100
                      LCLC  &XCOCLASSB  ++ NAME                         00668200
                      LCLC  &XCOCLASSE  ++ NAME                         00668300
                      LCLC  &XCOSTATSFMT        ++ VALUE                00668400
                      LCLC  &XSTGSTATS  ++ NAME                         00668500
                      LCLC  &XNUMNAMES  ++ NAME                         00668600
                      LCLC  &XREPEAT    ++ NAME                         00668700
                      LCLC  &XRECLVCTR  ++ NAME                         00668800
                      LCLC  &XCONTOKEN  ++ NAME                         00668900
                      LCLC  &XREQID     ++ NAME                         00669000
                      LCLC  &XNAME      ++ NAME                         00669100
                      LCLC  &XNAMEMASK  ++ NAME                         00669200
                      LCLC  &XOLDNAME   ++ NAME                         00669300
                      LCLC  &XDATAREA   ++ NAME                         00669400
                      LCLC  &XBUFLIST   ++ NAME                         00669500
                      LCLC  &XBUFADDRTYPE       ++ VALUE                00669600
                      LCLC  &XPAGEABLE  ++ VALUE                        00669700
                      LCLC  &XBUFSTGKEY         ++ NAME                 00669800
                      LCLC  &XBUFALET   ++ NAME                         00669900
                      LCLC  &XBUFADDRSIZE       ++ VALUE                00670000
                      LCLC  &XBUFNUM    ++ NAME                         00670100
                      LCLC  &XBUFINCRNUM        ++ NAME                 00670200
                      LCLC  &XBUFFER    ++ NAME                         00670300
                      LCLC  &XBUFSIZE   ++ NAME                         00670400
                      LCLC  &XADJAREA   ++ NAME                         00670500
                      LCLC  &XSTGCLASS  ++ NAME                         00670600
                      LCLC  &XCOCLASS   ++ NAME                         00670700
                      LCLC  &XVECTORINDEX       ++ NAME                 00670800
                      LCLC  &XRSTTKN    ++ NAME                         00670900
                      LCLC  &XRESTOKEN  ++ NAME                         00671000
                      LCLC  &XEXTRESTOKEN       ++ NAME                 00671100
                      LCLC  &XMODE      ++ VALUE                        00671200
                      LCLC  &XREQECB    ++ NAME                         00671300
                      LCLC  &XREQDATA   ++ NAME                         00671400
                      LCLC  &XREQTOKEN  ++ NAME                         00671500
                      LCLC  &XANSAREA   ++ NAME                         00671600
                      LCLC  &XANSLEN    ++ NAME                         00671700
                      LCLC  &XRETCODE   ++ NAME                         00671800
                      LCLC  &XRSNCODE   ++ NAME                         00671900
                      LCLA  &XPLISTVER  ++ VALUE                        00672000
                      LCLC  &XMF        ++ VALUE                        00672100
                      LCLC  &XMFCTRL    ++ NAME                         00672200
                      LCLC  &XMFATTR    ++ VALUE                        00672300
                      LCLC  &XMFSCK     ++ VALUE                        00672400
.*******************************************************************    00672500
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00672600
.*******************************************************************    00672700
                      LCLC  &ZXREQUEST  ++ INPUT VALUE                  00672800
                      LCLC  &ZXASSIGN   ++ INPUT VALUE                  00672900
                      LCLC  &ZXREGUSER  ++ INPUT VALUE                  00673000
                      LCLC  &ZXRETURNDATA       ++ INPUT VALUE          00673100
                      LCLC  &ZXAXIOVERRIDE      ++ INPUT NAME           00673200
                      LCLC  &ZXWHENREG  ++ INPUT VALUE                  00673300
                      LCLC  &ZXLOCALREGCNTL     ++ INPUT VALUE          00673400
                      LCLC  &ZXVERSCOMP         ++ INPUT NAME           00673500
                      LCLC  &ZXVERSCOMPTYPE     ++ INPUT VALUE          00673600
                      LCLC  &ZXVERSUPDATE       ++ INPUT VALUE          00673700
                      LCLC  &ZXNEWVERS  ++ INPUT NAME                   00673800
                      LCLC  &ZXCHANGED  ++ INPUT VALUE                  00673900
                      LCLC  &ZXCROSSINVAL       ++ INPUT VALUE          00674000
                      LCLC  &ZXGETCOLOCK        ++ INPUT VALUE          00674100
                      LCLC  &ZXPROCESSID        ++ INPUT NAME           00674200
                      LCLC  &ZXPARITY   ++ INPUT NAME                   00674300
                      LCLC  &ZXUSERDATA         ++ INPUT NAME           00674400
                      LCLC  &ZXELEMNUM  ++ INPUT NAME                   00674500
                      LCLC  &ZXSTARTINDEX       ++ INPUT NAME           00674600
                      LCLC  &ZXENDINDEX         ++ INPUT NAME           00674700
                      LCLC  &ZXDATAOFFSET       ++ INPUT NAME           00674800
                      LCLC  &ZXWORBAREA         ++ OUTPUT NAME          00674900
                      LCLC  &ZXNSBAREA  ++ OUTPUT NAME                  00675000
                      LCLC  &ZXDEIBAREA         ++ OUTPUT NAME          00675100
                      LCLC  &ZXCASTOUTLIST      ++ INPUT NAME           00675200
                      LCLC  &ZXFIRSTNAME        ++ INPUT NAME           00675300
                      LCLC  &ZXLASTNAME         ++ INPUT NAME           00675400
                      LCLC  &ZXCUNBAREA         ++ INPUT NAME           00675500
                      LCLC  &ZXERRORACTION      ++ INPUT VALUE          00675600
                      LCLC  &ZXDELETETYPE       ++ INPUT VALUE          00675700
                      LCLC  &ZXHALTONCHANGED    ++ INPUT VALUE          00675800
                      LCLC  &ZXSUPPCROSSINVAL   ++ INPUT VALUE          00675900
                      LCLC  &ZXDIRINFOFMT       ++ INPUT VALUE          00676000
                      LCLC  &ZXRTATYPE  ++ INPUT VALUE                  00676100
                      LCLC  &ZXCRITERIA         ++ INPUT VALUE          00676200
                      LCLC  &ZXCOCLASSB         ++ INPUT NAME           00676300
                      LCLC  &ZXCOCLASSE         ++ INPUT NAME           00676400
                      LCLC  &ZXCOSTATSFMT       ++ INPUT VALUE          00676500
                      LCLC  &ZXSTGSTATS         ++ INPUT NAME           00676600
                      LCLC  &ZXNUMNAMES         ++ INPUT NAME           00676700
                      LCLC  &ZXREPEAT   ++ INPUT NAME                   00676800
                      LCLC  &ZXRECLVCTR         ++ INPUT NAME           00676900
                      LCLC  &ZXCONTOKEN         ++ INPUT NAME           00677000
                      LCLC  &ZXREQID    ++ INPUT NAME                   00677100
                      LCLC  &ZXNAME     ++ INPUT NAME                   00677200
                      LCLC  &ZXNAMEMASK         ++ INPUT NAME           00677300
                      LCLC  &ZXOLDNAME  ++ INPUT NAME                   00677400
                      LCLC  &ZXDATAREA  ++ INPUT NAME                   00677500
                      LCLC  &ZXBUFLIST  ++ INPUT NAME                   00677600
                      LCLC  &ZXBUFADDRTYPE      ++ INPUT VALUE          00677700
                      LCLC  &ZXPAGEABLE         ++ INPUT VALUE          00677800
                      LCLC  &ZXBUFSTGKEY        ++ INPUT NAME           00677900
                      LCLC  &ZXBUFALET  ++ INPUT NAME                   00678000
                      LCLC  &ZXBUFADDRSIZE      ++ INPUT VALUE          00678100
                      LCLC  &ZXBUFNUM   ++ INPUT NAME                   00678200
                      LCLC  &ZXBUFINCRNUM       ++ INPUT NAME           00678300
                      LCLC  &ZXBUFFER   ++ INPUT NAME                   00678400
                      LCLC  &ZXBUFSIZE  ++ INPUT NAME                   00678500
                      LCLC  &ZXADJAREA  ++ INPUT NAME                   00678600
                      LCLC  &ZXSTGCLASS         ++ INPUT NAME           00678700
                      LCLC  &ZXCOCLASS  ++ INPUT NAME                   00678800
                      LCLC  &ZXVECTORINDEX      ++ INPUT NAME           00678900
                      LCLC  &ZXRSTTKN   ++ INPUT NAME                   00679000
                      LCLC  &ZXRESTOKEN         ++ INPUT NAME           00679100
                      LCLC  &ZXEXTRESTOKEN      ++ INPUT NAME           00679200
                      LCLC  &ZXMODE     ++ INPUT VALUE                  00679300
                      LCLC  &ZXREQECB   ++ INPUT NAME                   00679400
                      LCLC  &ZXREQDATA  ++ INPUT NAME                   00679500
                      LCLC  &ZXREQTOKEN         ++ OUTPUT NAME          00679600
                      LCLC  &ZXANSAREA  ++ INPUT NAME                   00679700
                      LCLC  &ZXANSLEN   ++ INPUT NAME                   00679800
                      LCLC  &ZXRETCODE  ++ OUTPUT NAME                  00679900
                      LCLC  &ZXRSNCODE  ++ OUTPUT NAME                  00680000
                      LCLC  &ZXPLISTVER         ++ INPUT VALUE          00680100
                      LCLC  &ZXMF       ++ INPUT VALUE                  00680200
                      LCLC  &ZXMFCTRL   ++ INPUT NAME                   00680300
                      LCLC  &ZXMFATTR   ++ INPUT VALUE                  00680400
                      LCLC  &ZXMFSCK    ++ INPUT VALUE                  00680500
.********************************************************************   00680600
.***AC.PLV01  PROCESS PLISTVER                                      *   00680700
.********************************************************************   00680800
&XPLISTVER      SETA  0                                                 00680900
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00681000
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00681100
&XPLISTVER      SETA  8                                                 00681200
.ZPLV0          ANOP  ,                                                 00681300
.*                                                                      00681400
                AIF   ('&RETURNDATA' EQ '').ZPLV1E                      00681500
                AIF   (&XPLISTVER GE 2).ZPLV1E                          00681600
&XPLISTVER      SETA  2                                                 00681700
.ZPLV1E         ANOP  ,                                                 00681800
.*                                                                      00681900
                AIF   ('&AXIOVERRIDE' EQ '').ZPLV2E                     00682000
                AIF   (&XPLISTVER GE 08).ZPLV2E                         00682100
&XPLISTVER      SETA  08                                                00682200
.ZPLV2E         ANOP  ,                                                 00682300
.*                                                                      00682400
                AIF   ('&LOCALREGCNTL' EQ '').ZPLV3E                    00682500
                AIF   (&XPLISTVER GE 7).ZPLV3E                          00682600
&XPLISTVER      SETA  7                                                 00682700
.ZPLV3E         ANOP  ,                                                 00682800
.*                                                                      00682900
                AIF   ('&VERSCOMP' EQ '').ZPLV4E                        00683000
                AIF   (&XPLISTVER GE 3).ZPLV4E                          00683100
&XPLISTVER      SETA  3                                                 00683200
.ZPLV4E         ANOP  ,                                                 00683300
.*                                                                      00683400
                AIF   ('&VERSCOMPTYPE' EQ '').ZPLV5E                    00683500
                AIF   (&XPLISTVER GE 3).ZPLV5E                          00683600
&XPLISTVER      SETA  3                                                 00683700
.ZPLV5E         ANOP  ,                                                 00683800
.*                                                                      00683900
                AIF   ('&VERSUPDATE' EQ '').ZPLV6E                      00684000
                AIF   (&XPLISTVER GE 3).ZPLV6E                          00684100
&XPLISTVER      SETA  3                                                 00684200
.ZPLV6E         ANOP  ,                                                 00684300
.*                                                                      00684400
                AIF   ('&NEWVERS' EQ '').ZPLV7E                         00684500
                AIF   (&XPLISTVER GE 3).ZPLV7E                          00684600
&XPLISTVER      SETA  3                                                 00684700
.ZPLV7E         ANOP  ,                                                 00684800
.*                                                                      00684900
                AIF   ('&AXIOVERRIDE' EQ '').ZPLV8E                     00685000
                AIF   (&XPLISTVER GE 08).ZPLV8E                         00685100
&XPLISTVER      SETA  08                                                00685200
.ZPLV8E         ANOP  ,                                                 00685300
.*                                                                      00685400
                AIF   ('&STARTINDEX' EQ '').ZPLV9E                      00685500
                AIF   (&XPLISTVER GE 1).ZPLV9E                          00685600
&XPLISTVER      SETA  1                                                 00685700
.ZPLV9E         ANOP  ,                                                 00685800
.*                                                                      00685900
                AIF   ('&ENDINDEX' EQ '').ZPLV10E                       00686000
                AIF   (&XPLISTVER GE 1).ZPLV10E                         00686100
&XPLISTVER      SETA  1                                                 00686200
.ZPLV10E        ANOP  ,                                                 00686300
.*                                                                      00686400
                AIF   ('&DATAOFFSET' EQ '').ZPLV11E                     00686500
                AIF   (&XPLISTVER GE 6).ZPLV11E                         00686600
&XPLISTVER      SETA  6                                                 00686700
.ZPLV11E        ANOP  ,                                                 00686800
.*                                                                      00686900
                AIF   ('&WORBAREA' EQ '').ZPLV12E                       00687000
                AIF   (&XPLISTVER GE 6).ZPLV12E                         00687100
&XPLISTVER      SETA  6                                                 00687200
.ZPLV12E        ANOP  ,                                                 00687300
.*                                                                      00687400
                AIF   ('&LOCALREGCNTL' EQ '').ZPLV13E                   00687500
                AIF   (&XPLISTVER GE 7).ZPLV13E                         00687600
&XPLISTVER      SETA  7                                                 00687700
.ZPLV13E        ANOP  ,                                                 00687800
.*                                                                      00687900
                AIF   ('&AXIOVERRIDE' EQ '').ZPLV14E                    00688000
                AIF   (&XPLISTVER GE 08).ZPLV14E                        00688100
&XPLISTVER      SETA  08                                                00688200
.ZPLV14E        ANOP  ,                                                 00688300
.*                                                                      00688400
                AIF   ('&STARTINDEX' EQ '').ZPLV15E                     00688500
                AIF   (&XPLISTVER GE 1).ZPLV15E                         00688600
&XPLISTVER      SETA  1                                                 00688700
.ZPLV15E        ANOP  ,                                                 00688800
.*                                                                      00688900
                AIF   ('&ENDINDEX' EQ '').ZPLV16E                       00689000
                AIF   (&XPLISTVER GE 1).ZPLV16E                         00689100
&XPLISTVER      SETA  1                                                 00689200
.ZPLV16E        ANOP  ,                                                 00689300
.*                                                                      00689400
                AIF   ('&NSBAREA' EQ '').ZPLV17E                        00689500
                AIF   (&XPLISTVER GE 1).ZPLV17E                         00689600
&XPLISTVER      SETA  1                                                 00689700
.ZPLV17E        ANOP  ,                                                 00689800
.*                                                                      00689900
                AIF   ('&AXIOVERRIDE' EQ '').ZPLV18E                    00690000
                AIF   (&XPLISTVER GE 08).ZPLV18E                        00690100
&XPLISTVER      SETA  08                                                00690200
.ZPLV18E        ANOP  ,                                                 00690300
.*                                                                      00690400
                AIF   ('&STARTINDEX' EQ '').ZPLV19E                     00690500
                AIF   (&XPLISTVER GE 1).ZPLV19E                         00690600
&XPLISTVER      SETA  1                                                 00690700
.ZPLV19E        ANOP  ,                                                 00690800
.*                                                                      00690900
                AIF   ('&ENDINDEX' EQ '').ZPLV20E                       00691000
                AIF   (&XPLISTVER GE 1).ZPLV20E                         00691100
&XPLISTVER      SETA  1                                                 00691200
.ZPLV20E        ANOP  ,                                                 00691300
.*                                                                      00691400
                AIF   ('&DEIBAREA' EQ '').ZPLV21E                       00691500
                AIF   (&XPLISTVER GE 6).ZPLV21E                         00691600
&XPLISTVER      SETA  6                                                 00691700
.ZPLV21E        ANOP  ,                                                 00691800
.*                                                                      00691900
                AIF   ('&CASTOUTLIST' EQ '').ZPLV22E                    00692000
                AIF   (&XPLISTVER GE 6).ZPLV22E                         00692100
&XPLISTVER      SETA  6                                                 00692200
.ZPLV22E        ANOP  ,                                                 00692300
.*                                                                      00692400
                AIF   ('&CUNBAREA' EQ '').ZPLV23E                       00692500
                AIF   (&XPLISTVER GE 2).ZPLV23E                         00692600
&XPLISTVER      SETA  2                                                 00692700
.ZPLV23E        ANOP  ,                                                 00692800
.*                                                                      00692900
                AIF   ('&AXIOVERRIDE' EQ '').ZPLV24E                    00693000
                AIF   (&XPLISTVER GE 08).ZPLV24E                        00693100
&XPLISTVER      SETA  08                                                00693200
.ZPLV24E        ANOP  ,                                                 00693300
.*                                                                      00693400
                AIF   ('&STARTINDEX' EQ '').ZPLV25E                     00693500
                AIF   (&XPLISTVER GE 1).ZPLV25E                         00693600
&XPLISTVER      SETA  1                                                 00693700
.ZPLV25E        ANOP  ,                                                 00693800
.*                                                                      00693900
                AIF   ('&ENDINDEX' EQ '').ZPLV26E                       00694000
                AIF   (&XPLISTVER GE 1).ZPLV26E                         00694100
&XPLISTVER      SETA  1                                                 00694200
.ZPLV26E        ANOP  ,                                                 00694300
.*                                                                      00694400
                AIF   ('&ERRORACTION' EQ '').ZPLV27E                    00694500
                AIF   (&XPLISTVER GE 3).ZPLV27E                         00694600
&XPLISTVER      SETA  3                                                 00694700
.ZPLV27E        ANOP  ,                                                 00694800
.*                                                                      00694900
                AIF   ('&AXIOVERRIDE' EQ '').ZPLV28E                    00695000
                AIF   (&XPLISTVER GE 08).ZPLV28E                        00695100
&XPLISTVER      SETA  08                                                00695200
.ZPLV28E        ANOP  ,                                                 00695300
.*                                                                      00695400
                AIF   ('&DELETETYPE' EQ '').ZPLV29E                     00695500
                AIF   (&XPLISTVER GE 3).ZPLV29E                         00695600
&XPLISTVER      SETA  3                                                 00695700
.ZPLV29E        ANOP  ,                                                 00695800
.*                                                                      00695900
                AIF   ('&HALTONCHANGED' EQ '').ZPLV30E                  00696000
                AIF   (&XPLISTVER GE 8).ZPLV30E                         00696100
&XPLISTVER      SETA  8                                                 00696200
.ZPLV30E        ANOP  ,                                                 00696300
.*                                                                      00696400
                AIF   ('&SUPPCROSSINVAL' EQ '').ZPLV31E                 00696500
                AIF   (&XPLISTVER GE 8).ZPLV31E                         00696600
&XPLISTVER      SETA  8                                                 00696700
.ZPLV31E        ANOP  ,                                                 00696800
.*                                                                      00696900
                AIF   ('&VERSCOMP' EQ '').ZPLV32E                       00697000
                AIF   (&XPLISTVER GE 3).ZPLV32E                         00697100
&XPLISTVER      SETA  3                                                 00697200
.ZPLV32E        ANOP  ,                                                 00697300
.*                                                                      00697400
                AIF   ('&VERSCOMPTYPE' EQ '').ZPLV33E                   00697500
                AIF   (&XPLISTVER GE 3).ZPLV33E                         00697600
&XPLISTVER      SETA  3                                                 00697700
.ZPLV33E        ANOP  ,                                                 00697800
.*                                                                      00697900
                AIF   ('&AXIOVERRIDE' EQ '').ZPLV34E                    00698000
                AIF   (&XPLISTVER GE 08).ZPLV34E                        00698100
&XPLISTVER      SETA  08                                                00698200
.ZPLV34E        ANOP  ,                                                 00698300
.*                                                                      00698400
                AIF   ('&STARTINDEX' EQ '').ZPLV35E                     00698500
                AIF   (&XPLISTVER GE 1).ZPLV35E                         00698600
&XPLISTVER      SETA  1                                                 00698700
.ZPLV35E        ANOP  ,                                                 00698800
.*                                                                      00698900
                AIF   ('&ENDINDEX' EQ '').ZPLV36E                       00699000
                AIF   (&XPLISTVER GE 1).ZPLV36E                         00699100
&XPLISTVER      SETA  1                                                 00699200
.ZPLV36E        ANOP  ,                                                 00699300
.*                                                                      00699400
                AIF   ('&DELETETYPE' EQ '').ZPLV37E                     00699500
                AIF   (&XPLISTVER GE 3).ZPLV37E                         00699600
&XPLISTVER      SETA  3                                                 00699700
.ZPLV37E        ANOP  ,                                                 00699800
.*                                                                      00699900
                AIF   ('&HALTONCHANGED' EQ '').ZPLV38E                  00700000
                AIF   (&XPLISTVER GE 8).ZPLV38E                         00700100
&XPLISTVER      SETA  8                                                 00700200
.ZPLV38E        ANOP  ,                                                 00700300
.*                                                                      00700400
                AIF   ('&SUPPCROSSINVAL' EQ '').ZPLV39E                 00700500
                AIF   (&XPLISTVER GE 8).ZPLV39E                         00700600
&XPLISTVER      SETA  8                                                 00700700
.ZPLV39E        ANOP  ,                                                 00700800
.*                                                                      00700900
                AIF   ('&VERSCOMPTYPE' EQ '').ZPLV40E                   00701000
                AIF   (&XPLISTVER GE 3).ZPLV40E                         00701100
&XPLISTVER      SETA  3                                                 00701200
.ZPLV40E        ANOP  ,                                                 00701300
.*                                                                      00701400
                AIF   ('&ERRORACTION' EQ '').ZPLV41E                    00701500
                AIF   (&XPLISTVER GE 3).ZPLV41E                         00701600
&XPLISTVER      SETA  3                                                 00701700
.ZPLV41E        ANOP  ,                                                 00701800
.*                                                                      00701900
                AIF   ('&AXIOVERRIDE' EQ '').ZPLV42E                    00702000
                AIF   (&XPLISTVER GE 08).ZPLV42E                        00702100
&XPLISTVER      SETA  08                                                00702200
.ZPLV42E        ANOP  ,                                                 00702300
.*                                                                      00702400
                AIF   ('&COSTATSFMT' EQ '').ZPLV43E                     00702500
                AIF   (&XPLISTVER GE 3).ZPLV43E                         00702600
&XPLISTVER      SETA  3                                                 00702700
.ZPLV43E        ANOP  ,                                                 00702800
.*                                                                      00702900
                AIF   ('&EXTRESTOKEN' EQ '').ZPLV44E                    00703000
                AIF   (&XPLISTVER GE 4).ZPLV44E                         00703100
&XPLISTVER      SETA  4                                                 00703200
.ZPLV44E        ANOP  ,                                                 00703300
.*                                                                      00703400
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00703500
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00703600
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00703700
.*-------------------------------------------------------------------   00703800
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00703900
&ZMS            SETC  '"PLISTVER='                                      00704000
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00704100
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00704200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00704300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00704400
                AGO   .ZPVCK2                                           00704500
.ZPVCK3         ANOP  ,                                                 00704600
.*-------------------------------------------------------------------   00704700
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00704800
&ZMS            SETC  '"PLISTVER='                                      00704900
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00705000
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00705100
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00705200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00705300
                AGO   .ZPVCKE                                           00705400
.ZPVCK2         ANOP  ,                                                 00705500
.*-------------------------------------------------------------------   00705600
&ZCVAL          SETC  '&PLISTVER(1)'                                    00705700
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00705800
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00705900
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00706000
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00706100
                AIF   (&ZN LE 8).ZPVCK4A   NOT HIGH                     00706200
.ZPVCK6         ANOP  ,                                                 00706300
&ZMS            SETC  '"PLISTVER='                                      00706400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00706500
&ZMS            SETC  '&ZMS THE RANGE IS "0-8"'                         00706600
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00706700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00706800
&XPLISTVER      SETA  8                                                 00706900
                AGO   .ZPVCKE                                           00707000
.*-------------------------------------------------------------------   00707100
.ZPVCK4A        ANOP  ,                                                 00707200
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00707300
&ZMS            SETC  'PLISTVER='                                       00707400
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00707500
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00707600
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00707700
                MNOTE 8,' &ZMS IS REQUIRED.'                            00707800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00707900
                AGO   .ZPVCK5                                           00708000
.ZPVCK4         ANOP  ,                                                 00708100
&XPLISTVER      SETA  &PLISTVER(1)                                      00708200
.ZPVCK5         ANOP  ,                                                 00708300
.ZPVCKE         ANOP  ,                                                 00708400
.********************************************************************   00708500
.***AG.MF01 PROCESS MF MACRO FORMS                                      00708600
.********************************************************************   00708700
                      ACTR  10000                                       00708800
.*------------------------------------------------------------------    00708900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00709000
&XMF                  SETC  ''          INITIALIZE XVARIABLE            00709100
.*-------------------------------------------------------------------   00709200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00709300
.ZG433                ANOP  ,                                           00709400
&ZTLC                 SETC 'S'                                          00709500
                      AIF   ('&MF(1)' NE '&ZTLC').ZG434                 00709600
&XMF                  SETC  'S'         SET KEYWORD                     00709700
                      AIF   (N'&MF LE 1).ZG433A  CK NUM                 00709800
&ZMS                  SETC  '"MF='                                      00709900
&ZMS                  SETC  '&ZMS.&MF"'                                 00710000
&ZMS                  SETC  '&ZMS "MF"'                                 00710100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00710200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00710300
.ZG433A               ANOP  ,                                           00710400
.*-------------------------------------------------------------------   00710500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00710600
.ZG434                ANOP  ,                                           00710700
&ZTLC                 SETC 'L'                                          00710800
                      AIF   ('&MF(1)' NE '&ZTLC').ZG441                 00710900
&XMF                  SETC  'L'         SET KEYWORD                     00711000
                      AIF   (N'&MF LE 3).ZG434A  CK NUM                 00711100
&ZMS                  SETC  '"MF='                                      00711200
&ZMS                  SETC  '&ZMS.&MF"'                                 00711300
&ZMS                  SETC  '&ZMS "MF"'                                 00711400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'        00711500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00711600
.ZG434A               ANOP  ,                                           00711700
.*-------------------------------------------------------------------   00711800
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00711900
                      AIF   (N'&SYSLIST NE 0).ZG434B  POSITIONALS?      00712000
                      AIF   ('&REQUEST' NE '').ZG434B  KEYS?            00712100
                      AIF   ('&ASSIGN' NE '').ZG434B  KEYS?             00712200
                      AIF   ('&REGUSER' NE '').ZG434B  KEYS?            00712300
                      AIF   ('&RETURNDATA' NE '').ZG434B  KEYS?         00712400
                      AIF   ('&AXIOVERRIDE' NE '').ZG434B  KEYS?        00712500
                      AIF   ('&WHENREG' NE '').ZG434B  KEYS?            00712600
                      AIF   ('&LOCALREGCNTL' NE '').ZG434B  KEYS?       00712700
                      AIF   ('&VERSCOMP' NE '').ZG434B  KEYS?           00712800
                      AIF   ('&VERSCOMPTYPE' NE '').ZG434B  KEYS?       00712900
                      AIF   ('&VERSUPDATE' NE '').ZG434B  KEYS?         00713000
                      AIF   ('&NEWVERS' NE '').ZG434B  KEYS?            00713100
                      AIF   ('&CHANGED' NE '').ZG434B  KEYS?            00713200
                      AIF   ('&CROSSINVAL' NE '').ZG434B  KEYS?         00713300
                      AIF   ('&GETCOLOCK' NE '').ZG434B  KEYS?          00713400
                      AIF   ('&PROCESSID' NE '').ZG434B  KEYS?          00713500
                      AIF   ('&PARITY' NE '').ZG434B  KEYS?             00713600
                      AIF   ('&USERDATA' NE '').ZG434B  KEYS?           00713700
                      AIF   ('&ELEMNUM' NE '').ZG434B  KEYS?            00713800
                      AIF   ('&STARTINDEX' NE '').ZG434B  KEYS?         00713900
                      AIF   ('&ENDINDEX' NE '').ZG434B  KEYS?           00714000
                      AIF   ('&DATAOFFSET' NE '').ZG434B  KEYS?         00714100
                      AIF   ('&WORBAREA' NE '').ZG434B  KEYS?           00714200
                      AIF   ('&NSBAREA' NE '').ZG434B  KEYS?            00714300
                      AIF   ('&DEIBAREA' NE '').ZG434B  KEYS?           00714400
                      AIF   ('&CASTOUTLIST' NE '').ZG434B  KEYS?        00714500
                      AIF   ('&FIRSTNAME' NE '').ZG434B  KEYS?          00714600
                      AIF   ('&LASTNAME' NE '').ZG434B  KEYS?           00714700
                      AIF   ('&CUNBAREA' NE '').ZG434B  KEYS?           00714800
                      AIF   ('&ERRORACTION' NE '').ZG434B  KEYS?        00714900
                      AIF   ('&DELETETYPE' NE '').ZG434B  KEYS?         00715000
                      AIF   ('&HALTONCHANGED' NE '').ZG434B  KEYS?      00715100
                      AIF   ('&SUPPCROSSINVAL' NE '').ZG434B  KEYS?     00715200
                      AIF   ('&DIRINFOFMT' NE '').ZG434B  KEYS?         00715300
                      AIF   ('&RTATYPE' NE '').ZG434B  KEYS?            00715400
                      AIF   ('&CRITERIA' NE '').ZG434B  KEYS?           00715500
                      AIF   ('&COCLASSB' NE '').ZG434B  KEYS?           00715600
                      AIF   ('&COCLASSE' NE '').ZG434B  KEYS?           00715700
                      AIF   ('&COSTATSFMT' NE '').ZG434B  KEYS?         00715800
                      AIF   ('&STGSTATS' NE '').ZG434B  KEYS?           00715900
                      AIF   ('&NUMNAMES' NE '').ZG434B  KEYS?           00716000
                      AIF   ('&REPEAT' NE '').ZG434B  KEYS?             00716100
                      AIF   ('&RECLVCTR' NE '').ZG434B  KEYS?           00716200
                      AIF   ('&CONTOKEN' NE '').ZG434B  KEYS?           00716300
                      AIF   ('&REQID' NE '').ZG434B  KEYS?              00716400
                      AIF   ('&NAME' NE '').ZG434B  KEYS?               00716500
                      AIF   ('&NAMEMASK' NE '').ZG434B  KEYS?           00716600
                      AIF   ('&OLDNAME' NE '').ZG434B  KEYS?            00716700
                      AIF   ('&BUFLIST' NE '').ZG434B  KEYS?            00716800
                      AIF   ('&BUFADDRTYPE' NE '').ZG434B  KEYS?        00716900
                      AIF   ('&PAGEABLE' NE '').ZG434B  KEYS?           00717000
                      AIF   ('&BUFSTGKEY' NE '').ZG434B  KEYS?          00717100
                      AIF   ('&BUFALET' NE '').ZG434B  KEYS?            00717200
                      AIF   ('&BUFADDRSIZE' NE '').ZG434B  KEYS?        00717300
                      AIF   ('&BUFNUM' NE '').ZG434B  KEYS?             00717400
                      AIF   ('&BUFINCRNUM' NE '').ZG434B  KEYS?         00717500
                      AIF   ('&BUFFER' NE '').ZG434B  KEYS?             00717600
                      AIF   ('&BUFSIZE' NE '').ZG434B  KEYS?            00717700
                      AIF   ('&ADJAREA' NE '').ZG434B  KEYS?            00717800
                      AIF   ('&STGCLASS' NE '').ZG434B  KEYS?           00717900
                      AIF   ('&COCLASS' NE '').ZG434B  KEYS?            00718000
                      AIF   ('&VECTORINDEX' NE '').ZG434B  KEYS?        00718100
                      AIF   ('&RESTOKEN' NE '').ZG434B  KEYS?           00718200
                      AIF   ('&EXTRESTOKEN' NE '').ZG434B  KEYS?        00718300
                      AIF   ('&MODE' NE '').ZG434B  KEYS?               00718400
                      AIF   ('&REQECB' NE '').ZG434B  KEYS?             00718500
                      AIF   ('&REQDATA' NE '').ZG434B  KEYS?            00718600
                      AIF   ('&REQTOKEN' NE '').ZG434B  KEYS?           00718700
                      AIF   ('&ANSAREA' NE '').ZG434B  KEYS?            00718800
                      AIF   ('&ANSLEN' NE '').ZG434B  KEYS?             00718900
                      AIF   ('&RETCODE' NE '').ZG434B  KEYS?            00719000
                      AIF   ('&RSNCODE' NE '').ZG434B  KEYS?            00719100
                      AGO    .ZG434C    INVOCATION OKAY                 00719200
.ZG434B               ANOP  ,                                           00719300
&ZMS                  SETC  'THE "L" FORM OF "MF"'                      00719400
&ZMS                  SETC  '&ZMS CAN ONLY HAVE'                        00719500
&ZMS                  SETC  '&ZMS THE "PLISTVER" KEY'                   00719600
                      MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'      00719700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00719800
.ZG434C               ANOP  ,                                           00719900
.*-------------------------------------------------------------------   00720000
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00720100
&ZXMFCTRL             SETC  'INPUT'     SET IN/OUTPUT                   00720200
&XMFCTRL              SETC  '&MF(2,1)'  SET XVARIABLE                   00720300
                      AIF   (N'&MF(2) GT 1).ZG436B  MULTI               00720400
&XMFCTRL              SETC  '&MF(2)'    SET XVARIABLE                   00720500
.ZG436B               AIF   (K'&MF(2) GT 0).ZG436C                      00720600
&ZXMFCTRL             SETC  ''          RESET IN/OUTPUT                 00720700
&ZMS                  SETC  'WHEN "L" IS SPECIFIED'                     00720800
&ZMS                  SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'         00720900
                      MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                00721000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00721100
.ZG436C               ANOP  ,                                           00721200
.*-------------------------------------------------------------------   00721300
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00721400
                      AIF   (K'&ZXMFCTRL LE 0).ZG436P  NOT I/O          00721500
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZG436P             00721600
&ZXMFCTRL             SETC  ''          RESET IN/OUTPUT                 00721700
&ZMS                  SETC  '"MF='                                      00721800
&ZMS                  SETC  '&ZMS.&MF"'                                 00721900
&ZMS                  SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'   00722000
                      MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'           00722100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00722200
.ZG436P               ANOP  ,                                           00722300
.*-------------------------------------------------------------------   00722400
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00722500
&ZXMFATTR             SETC  'INPUT'     SET IN/OUTPUT                   00722600
&XMFATTR              SETC  '0D'                                        00722700
                      AIF   (K'&MF(3) LE 0).ZG439B  PARM                00722800
&XMFATTR              SETC  '&MF(3,1)'  SET XVARIABLE                   00722900
                      AIF   (N'&MF(3) GT 1).ZG439B  MULTI               00723000
&XMFATTR              SETC  '&MF(3)'    SET XVARIABLE                   00723100
.ZG439B               ANOP  ,                                           00723200
.*-------------------------------------------------------------------   00723300
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00723400
                      AIF   (K'&ZXMFATTR LE 0).ZG439P  NOT I/O          00723500
                      AIF   ('&XMFATTR'(1,1) NE '(').ZG439P             00723600
&ZXMFATTR             SETC  ''          RESET IN/OUTPUT                 00723700
&ZMS                  SETC  '"MF='                                      00723800
&ZMS                  SETC  '&ZMS.&MF"'                                 00723900
&ZMS                  SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'   00724000
                      MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'           00724100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00724200
.ZG439P               ANOP  ,                                           00724300
.*-------------------------------------------------------------------   00724400
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00724500
                      AIF   (K'&ZXMFATTR LE 0).ZG439S  NOT I/O          00724600
                      AIF   (K'&XMFATTR LE 60).ZG439S  LNG OK           00724700
&ZXMFATTR             SETC  ''          RESET IN/OUTPUT                 00724800
&ZMS                  SETC  '"MF='                                      00724900
&ZMS                  SETC  '&ZMS.&MF"'                                 00725000
&ZMS                  SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'       00725100
                      MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'          00725200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00725300
.ZG439S               ANOP  ,                                           00725400
.*-------------------------------------------------------------------   00725500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00725600
.ZG441                ANOP  ,                                           00725700
&ZTLC                 SETC 'E'                                          00725800
                      AIF   ('&MF(1)' NE '&ZTLC').ZG449                 00725900
&XMF                  SETC  'E'         SET KEYWORD                     00726000
                      AIF   (N'&MF LE 3).ZG441A  CK NUM                 00726100
&ZMS                  SETC  '"MF='                                      00726200
&ZMS                  SETC  '&ZMS.&MF"'                                 00726300
&ZMS                  SETC  '&ZMS "MF"'                                 00726400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'        00726500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00726600
.ZG441A               ANOP  ,                                           00726700
.*-------------------------------------------------------------------   00726800
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00726900
&ZXMFCTRL             SETC  'INPUT'     SET IN/OUTPUT                   00727000
&XMFCTRL              SETC  '&MF(2,1)'  SET XVARIABLE                   00727100
                      AIF   (N'&MF(2) GT 1).ZG443B  MULTI               00727200
&XMFCTRL              SETC  '&MF(2)'    SET XVARIABLE                   00727300
.ZG443B               AIF   (K'&MF(2) GT 0).ZG443C                      00727400
&ZXMFCTRL             SETC  ''          RESET IN/OUTPUT                 00727500
&ZMS                  SETC  'WHEN "E" IS SPECIFIED'                     00727600
&ZMS                  SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'         00727700
                      MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                00727800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00727900
.ZG443C               ANOP  ,                                           00728000
.*-------------------------------------------------------------------   00728100
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00728200
                      AIF   (K'&ZXMFCTRL LE 0).ZG443R  NOT I/O          00728300
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZG443R             00728400
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                  00728500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG443P               00728600
                      AIF   (K'&ZCGPR GT 2).ZG443Q                      00728700
                      AIF   ('&ZCGPR' EQ '0').ZG443Q                    00728800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00728900
                      AIF   (T'&ZCGPR NE 'N').ZG443Q  INVALID REG NAME  00729000
.ZG443P               ANOP  ,                                           00729100
                      AIF   (T'&ZCGPR NE 'N').ZG443R  NON NUMERIC       00729200
                      AIF   ('&ZCGPR' LT '1').ZG443Q                    00729300
                      AIF   ('&ZCGPR' LE '12').ZG443R                   00729400
.ZG443Q               ANOP  ,                                           00729500
&ZMS                  SETC  '"MF='                                      00729600
&ZMS                  SETC  '&ZMS.&MF"'                                 00729700
&ZMS                  SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'   00729800
                      MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'            00729900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00730000
.ZG443R               ANOP  ,                                           00730100
.*-------------------------------------------------------------------   00730200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00730300
&XMFSCK               SETC  ''          INITIALIZE XVARIABLE            00730400
.ZG447A   AIF   ('&MF(3)' NE 'COMPLETE').ZG448A                         00730500
&XMFSCK               SETC  'COMPLETE'  SET KEYWORD                     00730600
.*-------------------------------------------------------------------   00730700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00730800
.ZG448A               AIF   (K'&XMFSCK GT 0).ZG448C  KEYWORD            00730900
                      AIF   (K'&MF(3) LE 0).ZG448B                      00731000
&ZMS                  SETC  '"MF='                                      00731100
&ZMS                  SETC  '&ZMS.&MF"'                                 00731200
&ZMS                  SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '   00731300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00731400
&ZMS                  SETC  '&ZMS "COMPLETE".'                          00731500
                      MNOTE 8,' &ZMS '                                  00731600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00731700
.ZG448B               ANOP  ,                                           00731800
&XMFSCK               SETC  'COMPLETE'  SET DEFAULT KEYWORD             00731900
.ZG448C               ANOP  ,                                           00732000
&ZXMFSCK              SETC  'INPUT'     SET IN/OUTPUT                   00732100
.*------------------------------------------------------------------    00732200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00732300
.ZG449                ANOP  ,                                           00732400
&ZXMF                 SETC  'INPUT'     SET IN/OUTPUT                   00732500
                      AIF   (K'&XMF GT 0).ZG449E  VALID ARG             00732600
                      AIF   (T'&MF EQ 'O').ZG449D  OMITTED              00732700
&ZASYSLNDX            SETA  0                                           00732800
.ZG449A               ANOP  ,           POSITIONAL MACRO KEY            00732900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00733000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG449C           00733100
&ZTLC                 SETC 'MF'                                         00733200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG449A  00733300
.ZG449B               ANOP  ,                                           00733400
&ZXMF                 SETC  ''          RESET IN/OUTPUT                 00733500
&ZMS                  SETC  'THE "MF" KEY'                              00733600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00733700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00733800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00733900
                      AGO   .ZG449E                                     00734000
.ZG449C               ANOP  ,                                           00734100
&ZXMF                 SETC  ''          RESET IN/OUTPUT                 00734200
&ZMS                  SETC  '"MF='                                      00734300
&ZMS                  SETC  '&ZMS.&MF"'                                 00734400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00734500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00734600
&ZMS                  SETC  '&ZMS "S",'                                 00734700
&ZMS                  SETC  '&ZMS "L",'                                 00734800
&ZMS                  SETC  '&ZMS OR "E".'                              00734900
                      MNOTE 8,' &ZMS '                                  00735000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00735100
                      AGO   .ZG449E                                     00735200
.ZG449D               ANOP  ,                                           00735300
&XMF                  SETC  'S'         SET DEFAULT KEYWORD             00735400
&XMFSCK               SETC  'COMPLETE'  COMPLETE CHECKING               00735500
.ZG449E               ANOP  ,                                           00735600
.********************************************************************   00735700
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00735800
.********************************************************************   00735900
                      ACTR  10000                                       00736000
.*-------------------------------------------------------------------   00736100
.***AG.MF03 MF=(SLE)                                                    00736200
                      AIF   ('&XMF' EQ 'L').ZGMFX                       00736300
.*------------------------------------------------------------------    00736400
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00736500
&XREQUEST             SETC  ''          INITIALIZE XVARIABLE            00736600
.*-------------------------------------------------------------------   00736700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00736800
.ZG3                  ANOP  ,                                           00736900
                      AIF   (K'&REQUEST(1) LE 0).ZG3A                   00737000
&ZTLC                 SETC 'READ_DATA'                                  00737100
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG22             00737200
&XREQUEST             SETC  'READ_DATA'         SET KEYWORD             00737300
                      AIF   (N'&REQUEST LE 1).ZG3A  CK NUM              00737400
&ZMS                  SETC  '"REQUEST='                                 00737500
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00737600
&ZMS                  SETC  '&ZMS "REQUEST"'                            00737700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00737800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00737900
.ZG3A                 ANOP  ,                                           00738000
.*------------------------------------------------------------------    00738100
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00738200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00738300
.ZG3A0                AIF   (K'&WHENREG LE 0).ZG3A1  OK                 00738400
&ZCVAL                SETC '&ZCVAL WHENREG'     INCORRECT KEY USED      00738500
.ZG3A1                AIF   (K'&LOCALREGCNTL LE 0).ZG3A2  OK            00738600
&ZCVAL                SETC '&ZCVAL LOCALREGCNTL'  INCORRECT KEY USED    00738700
.ZG3A2                AIF   (K'&VERSCOMP LE 0).ZG3A3  OK                00738800
&ZCVAL                SETC '&ZCVAL VERSCOMP'    INCORRECT KEY USED      00738900
.ZG3A3                AIF   (K'&VERSCOMPTYPE LE 0).ZG3A4  OK            00739000
&ZCVAL                SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED    00739100
.ZG3A4                AIF   (K'&VERSUPDATE LE 0).ZG3A5  OK              00739200
&ZCVAL                SETC '&ZCVAL VERSUPDATE'  INCORRECT KEY USED      00739300
.ZG3A5                AIF   (K'&NEWVERS LE 0).ZG3A6  OK                 00739400
&ZCVAL                SETC '&ZCVAL NEWVERS'     INCORRECT KEY USED      00739500
.ZG3A6                AIF   (K'&CHANGED LE 0).ZG3A7  OK                 00739600
&ZCVAL                SETC '&ZCVAL CHANGED'     INCORRECT KEY USED      00739700
.ZG3A7                AIF   (K'&CROSSINVAL LE 0).ZG3A8  OK              00739800
&ZCVAL                SETC '&ZCVAL CROSSINVAL'  INCORRECT KEY USED      00739900
.ZG3A8                AIF   (K'&GETCOLOCK LE 0).ZG3A9  OK               00740000
&ZCVAL                SETC '&ZCVAL GETCOLOCK'   INCORRECT KEY USED      00740100
.ZG3A9                AIF   (K'&PROCESSID LE 0).ZG3A10  OK              00740200
&ZCVAL                SETC '&ZCVAL PROCESSID'   INCORRECT KEY USED      00740300
.ZG3A10               AIF   (K'&PARITY LE 0).ZG3A11  OK                 00740400
&ZCVAL                SETC '&ZCVAL PARITY'      INCORRECT KEY USED      00740500
.ZG3A11               AIF   (K'&USERDATA LE 0).ZG3A12  OK               00740600
&ZCVAL                SETC '&ZCVAL USERDATA'    INCORRECT KEY USED      00740700
.ZG3A12               AIF   (K'&ELEMNUM LE 0).ZG3A13  OK                00740800
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      00740900
.ZG3A13               AIF   (K'&STARTINDEX LE 0).ZG3A14  OK             00741000
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00741100
.ZG3A14               AIF   (K'&ENDINDEX LE 0).ZG3A15  OK               00741200
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00741300
.ZG3A15               AIF   (K'&DATAOFFSET LE 0).ZG3A16  OK             00741400
&ZCVAL                SETC '&ZCVAL DATAOFFSET'  INCORRECT KEY USED      00741500
.ZG3A16               AIF   (K'&WORBAREA LE 0).ZG3A17  OK               00741600
&ZCVAL                SETC '&ZCVAL WORBAREA'    INCORRECT KEY USED      00741700
.ZG3A17               AIF   (K'&NSBAREA LE 0).ZG3A18  OK                00741800
&ZCVAL                SETC '&ZCVAL NSBAREA'     INCORRECT KEY USED      00741900
.ZG3A18               AIF   (K'&DEIBAREA LE 0).ZG3A19  OK               00742000
&ZCVAL                SETC '&ZCVAL DEIBAREA'    INCORRECT KEY USED      00742100
.ZG3A19               AIF   (K'&CASTOUTLIST LE 0).ZG3A20  OK            00742200
&ZCVAL                SETC '&ZCVAL CASTOUTLIST'  INCORRECT KEY USED     00742300
.ZG3A20               AIF   (K'&FIRSTNAME LE 0).ZG3A21  OK              00742400
&ZCVAL                SETC '&ZCVAL FIRSTNAME'   INCORRECT KEY USED      00742500
.ZG3A21               AIF   (K'&LASTNAME LE 0).ZG3A22  OK               00742600
&ZCVAL                SETC '&ZCVAL LASTNAME'    INCORRECT KEY USED      00742700
.ZG3A22               AIF   (K'&CUNBAREA LE 0).ZG3A23  OK               00742800
&ZCVAL                SETC '&ZCVAL CUNBAREA'    INCORRECT KEY USED      00742900
.ZG3A23               AIF   (K'&ERRORACTION LE 0).ZG3A24  OK            00743000
&ZCVAL                SETC '&ZCVAL ERRORACTION'  INCORRECT KEY USED     00743100
.ZG3A24               AIF   (K'&DELETETYPE LE 0).ZG3A25  OK             00743200
&ZCVAL                SETC '&ZCVAL DELETETYPE'  INCORRECT KEY USED      00743300
.ZG3A25               AIF   (K'&HALTONCHANGED LE 0).ZG3A26  OK          00743400
&ZCVAL                SETC '&ZCVAL HALTONCHANGED'  INCORRECT KEY USED   00743500
.ZG3A26               AIF   (K'&SUPPCROSSINVAL LE 0).ZG3A27  OK         00743600
&ZCVAL                SETC '&ZCVAL SUPPCROSSINVAL'  INCORRECT KEY USED  00743700
.ZG3A27               AIF   (K'&DIRINFOFMT LE 0).ZG3A28  OK             00743800
&ZCVAL                SETC '&ZCVAL DIRINFOFMT'  INCORRECT KEY USED      00743900
.ZG3A28               AIF   (K'&RTATYPE LE 0).ZG3A29  OK                00744000
&ZCVAL                SETC '&ZCVAL RTATYPE'     INCORRECT KEY USED      00744100
.ZG3A29               AIF   (K'&CRITERIA LE 0).ZG3A30  OK               00744200
&ZCVAL                SETC '&ZCVAL CRITERIA'    INCORRECT KEY USED      00744300
.ZG3A30               AIF   (K'&COCLASSB LE 0).ZG3A31  OK               00744400
&ZCVAL                SETC '&ZCVAL COCLASSB'    INCORRECT KEY USED      00744500
.ZG3A31               AIF   (K'&COCLASSE LE 0).ZG3A32  OK               00744600
&ZCVAL                SETC '&ZCVAL COCLASSE'    INCORRECT KEY USED      00744700
.ZG3A32               AIF   (K'&COSTATSFMT LE 0).ZG3A33  OK             00744800
&ZCVAL                SETC '&ZCVAL COSTATSFMT'  INCORRECT KEY USED      00744900
.ZG3A33               AIF   (K'&STGSTATS LE 0).ZG3A34  OK               00745000
&ZCVAL                SETC '&ZCVAL STGSTATS'    INCORRECT KEY USED      00745100
.ZG3A34               AIF   (K'&NUMNAMES LE 0).ZG3A35  OK               00745200
&ZCVAL                SETC '&ZCVAL NUMNAMES'    INCORRECT KEY USED      00745300
.ZG3A35               AIF   (K'&REPEAT LE 0).ZG3A36  OK                 00745400
&ZCVAL                SETC '&ZCVAL REPEAT'      INCORRECT KEY USED      00745500
.ZG3A36               AIF   (K'&RECLVCTR LE 0).ZG3A37  OK               00745600
&ZCVAL                SETC '&ZCVAL RECLVCTR'    INCORRECT KEY USED      00745700
.ZG3A37               AIF   (K'&ZCVAL LE 0).ZG3A38  OK                  00745800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00745900
                      AIF  (K'&ZCVAL LE 160).ZG3A38A                    00746000
&ZCVAL                SETC '&ZCVAL'(1,160)                              00746100
&ZCVAL                SETC '&ZCVAL....'                                 00746200
.ZG3A38A              ANOP                                              00746300
&ZMS                  SETC  '"REQUEST'                                  00746400
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00746500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00746600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00746700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00746800
.ZG3A38               ANOP  ,                                           00746900
.*----------------------------------------------------------------***   00747000
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00747100
                      AIF   (N'&ASSIGN LE 1).ZG5A  CK NUM               00747200
&ZMS                  SETC  '"ASSIGN='                                  00747300
&ZMS                  SETC  '&ZMS.&ASSIGN"'                             00747400
&ZMS                  SETC  '&ZMS "ASSIGN"'                             00747500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00747600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00747700
.ZG5A                 ANOP  ,                                           00747800
.*-------------------------------------------------------------------   00747900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00748000
&XASSIGN              SETC  ''          INITIALIZE XVARIABLE            00748100
.ZG6A   AIF   ('&ASSIGN(1)' NE 'YES').ZG7A                              00748200
&XASSIGN              SETC  'YES'       SET KEYWORD                     00748300
.*-------------------------------------------------------------------   00748400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00748500
.ZG7A   AIF   ('&ASSIGN(1)' NE 'NO').ZG8A                               00748600
&XASSIGN              SETC  'NO'        SET KEYWORD                     00748700
.*-------------------------------------------------------------------   00748800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00748900
.ZG8A                 AIF   (K'&XASSIGN GT 0).ZG8C  KEYWORD             00749000
                      AIF   (K'&ASSIGN(1) LE 0).ZG8B                    00749100
&ZMS                  SETC  '"ASSIGN='                                  00749200
&ZMS                  SETC  '&ZMS.&ASSIGN"'                             00749300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00749400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00749500
&ZMS                  SETC  '&ZMS "YES"'                                00749600
&ZMS                  SETC  '&ZMS OR "NO".'                             00749700
                      MNOTE 8,' &ZMS '                                  00749800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00749900
.ZG8B                 ANOP  ,                                           00750000
&XASSIGN              SETC  'YES'       SET DEFAULT KEYWORD             00750100
.ZG8C                 ANOP  ,                                           00750200
&ZXASSIGN             SETC  'INPUT'     SET IN/OUTPUT                   00750300
.*----------------------------------------------------------------***   00750400
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00750500
                      AIF   (N'&REGUSER LE 1).ZG10A  CK NUM             00750600
&ZMS                  SETC  '"REGUSER='                                 00750700
&ZMS                  SETC  '&ZMS.&REGUSER"'                            00750800
&ZMS                  SETC  '&ZMS "REGUSER"'                            00750900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00751000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00751100
.ZG10A                ANOP  ,                                           00751200
.*-------------------------------------------------------------------   00751300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00751400
&XREGUSER             SETC  ''          INITIALIZE XVARIABLE            00751500
.ZG11A   AIF   ('&REGUSER(1)' NE 'YES').ZG12A                           00751600
&XREGUSER             SETC  'YES'       SET KEYWORD                     00751700
.*-------------------------------------------------------------------   00751800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00751900
.ZG12A   AIF   ('&REGUSER(1)' NE 'NO').ZG13A                            00752000
&XREGUSER             SETC  'NO'        SET KEYWORD                     00752100
.*-------------------------------------------------------------------   00752200
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00752300
.ZG13A                AIF   (K'&XREGUSER GT 0).ZG13C  KEYWORD           00752400
                      AIF   (K'&REGUSER(1) LE 0).ZG13B                  00752500
&ZMS                  SETC  '"REGUSER='                                 00752600
&ZMS                  SETC  '&ZMS.&REGUSER"'                            00752700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00752800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00752900
&ZMS                  SETC  '&ZMS "YES"'                                00753000
&ZMS                  SETC  '&ZMS OR "NO".'                             00753100
                      MNOTE 8,' &ZMS '                                  00753200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00753300
.ZG13B                ANOP  ,                                           00753400
&XREGUSER             SETC  'YES'       SET DEFAULT KEYWORD             00753500
.ZG13C                ANOP  ,                                           00753600
&ZXREGUSER            SETC  'INPUT'     SET IN/OUTPUT                   00753700
.*----------------------------------------------------------------***   00753800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00753900
                      AIF   (N'&RETURNDATA LE 1).ZG15A  CK NUM          00754000
&ZMS                  SETC  '"RETURNDATA='                              00754100
&ZMS                  SETC  '&ZMS.&RETURNDATA"'                         00754200
&ZMS                  SETC  '&ZMS "RETURNDATA"'                         00754300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00754400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00754500
.ZG15A                ANOP  ,                                           00754600
.*-------------------------------------------------------------------   00754700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00754800
&XRETURNDATA          SETC  ''          INITIALIZE XVARIABLE            00754900
.ZG16A   AIF   ('&RETURNDATA(1)' NE 'YES').ZG17A                        00755000
&XRETURNDATA          SETC  'YES'       SET KEYWORD                     00755100
.*-------------------------------------------------------------------   00755200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00755300
.ZG17A   AIF   ('&RETURNDATA(1)' NE 'NO').ZG18A                         00755400
&XRETURNDATA          SETC  'NO'        SET KEYWORD                     00755500
.*-------------------------------------------------------------------   00755600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00755700
.ZG18A                AIF   (K'&XRETURNDATA GT 0).ZG18C  KEYWORD        00755800
                      AIF   (K'&RETURNDATA(1) LE 0).ZG18B               00755900
&ZMS                  SETC  '"RETURNDATA='                              00756000
&ZMS                  SETC  '&ZMS.&RETURNDATA"'                         00756100
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00756200
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00756300
&ZMS                  SETC  '&ZMS "YES"'                                00756400
&ZMS                  SETC  '&ZMS OR "NO".'                             00756500
                      MNOTE 8,' &ZMS '                                  00756600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00756700
.ZG18B                ANOP  ,                                           00756800
&XRETURNDATA          SETC  'YES'       SET DEFAULT KEYWORD             00756900
.ZG18C                ANOP  ,                                           00757000
&ZXRETURNDATA         SETC  'INPUT'     SET IN/OUTPUT                   00757100
.*----------------------------------------------------------------***   00757200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00757300
                      AIF   (N'&AXIOVERRIDE LE 1).ZG20A  CK NUM         00757400
&ZMS                  SETC  '"AXIOVERRIDE='                             00757500
&ZMS                  SETC  '&ZMS.&AXIOVERRIDE"'                        00757600
&ZMS                  SETC  '&ZMS "AXIOVERRIDE"'                        00757700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00757800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00757900
.ZG20A                ANOP  ,                                           00758000
.*-------------------------------------------------------------------   00758100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00758200
&ZXAXIOVERRIDE        SETC  'INPUT'     SET IN/OUTPUT                   00758300
&XAXIOVERRIDE         SETC  '0'                                         00758400
                      AIF   (K'&AXIOVERRIDE(1) LE 0).ZG20B  PARM        00758500
&XAXIOVERRIDE         SETC  '&AXIOVERRIDE(1)'   SET XVARIABLE           00758600
                      AIF   (N'&AXIOVERRIDE GT 1).ZG20B  MULTI          00758700
&XAXIOVERRIDE         SETC  '&AXIOVERRIDE'      SET XVARIABLE           00758800
.ZG20B                ANOP  ,                                           00758900
.*-------------------------------------------------------------------   00759000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00759100
                      AIF   (K'&ZXAXIOVERRIDE LE 0).ZG20R  NOT I/O      00759200
         AIF   ('&XAXIOVERRIDE' EQ '0').ZG20R                           00759300
                      AIF   ('&XAXIOVERRIDE'(1,1) NE '(').ZG20R         00759400
&ZCGPR                SETC  '&XAXIOVERRIDE'(2,K'&XAXIOVERRIDE-2)        00759500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG20P                00759600
                      AIF   (K'&ZCGPR GT 2).ZG20Q                       00759700
                      AIF   ('&ZCGPR' EQ '0').ZG20Q                     00759800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00759900
                      AIF   (T'&ZCGPR NE 'N').ZG20Q  INVALID REG NAME   00760000
.ZG20P                ANOP  ,                                           00760100
                      AIF   (T'&ZCGPR NE 'N').ZG20R  NON NUMERIC        00760200
                      AIF   ('&ZCGPR' LT '2').ZG20Q                     00760300
                      AIF   ('&ZCGPR' LE '12').ZG20R                    00760400
.ZG20Q                ANOP  ,                                           00760500
&ZMS                  SETC  '"AXIOVERRIDE='                             00760600
&ZMS                  SETC  '&ZMS.&AXIOVERRIDE"'                        00760700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00760800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00760900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00761000
.ZG20R                ANOP  ,                                           00761100
.*-------------------------------------------------------------------   00761200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00761300
.ZG22                 ANOP  ,                                           00761400
&ZTLC                 SETC 'WRITE_DATA'                                 00761500
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG91             00761600
&XREQUEST             SETC  'WRITE_DATA'        SET KEYWORD             00761700
                      AIF   (N'&REQUEST LE 1).ZG22A  CK NUM             00761800
&ZMS                  SETC  '"REQUEST='                                 00761900
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00762000
&ZMS                  SETC  '&ZMS "REQUEST"'                            00762100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00762200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00762300
.ZG22A                ANOP  ,                                           00762400
.*------------------------------------------------------------------    00762500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00762600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00762700
.ZG22A0               AIF   (K'&RETURNDATA LE 0).ZG22A1  OK             00762800
&ZCVAL                SETC '&ZCVAL RETURNDATA'  INCORRECT KEY USED      00762900
.ZG22A1               AIF   (K'&STARTINDEX LE 0).ZG22A2  OK             00763000
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00763100
.ZG22A2               AIF   (K'&ENDINDEX LE 0).ZG22A3  OK               00763200
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00763300
.ZG22A3               AIF   (K'&DATAOFFSET LE 0).ZG22A4  OK             00763400
&ZCVAL                SETC '&ZCVAL DATAOFFSET'  INCORRECT KEY USED      00763500
.ZG22A4               AIF   (K'&WORBAREA LE 0).ZG22A5  OK               00763600
&ZCVAL                SETC '&ZCVAL WORBAREA'    INCORRECT KEY USED      00763700
.ZG22A5               AIF   (K'&NSBAREA LE 0).ZG22A6  OK                00763800
&ZCVAL                SETC '&ZCVAL NSBAREA'     INCORRECT KEY USED      00763900
.ZG22A6               AIF   (K'&DEIBAREA LE 0).ZG22A7  OK               00764000
&ZCVAL                SETC '&ZCVAL DEIBAREA'    INCORRECT KEY USED      00764100
.ZG22A7               AIF   (K'&CASTOUTLIST LE 0).ZG22A8  OK            00764200
&ZCVAL                SETC '&ZCVAL CASTOUTLIST'  INCORRECT KEY USED     00764300
.ZG22A8               AIF   (K'&FIRSTNAME LE 0).ZG22A9  OK              00764400
&ZCVAL                SETC '&ZCVAL FIRSTNAME'   INCORRECT KEY USED      00764500
.ZG22A9               AIF   (K'&LASTNAME LE 0).ZG22A10  OK              00764600
&ZCVAL                SETC '&ZCVAL LASTNAME'    INCORRECT KEY USED      00764700
.ZG22A10              AIF   (K'&CUNBAREA LE 0).ZG22A11  OK              00764800
&ZCVAL                SETC '&ZCVAL CUNBAREA'    INCORRECT KEY USED      00764900
.ZG22A11              AIF   (K'&ERRORACTION LE 0).ZG22A12  OK           00765000
&ZCVAL                SETC '&ZCVAL ERRORACTION'  INCORRECT KEY USED     00765100
.ZG22A12              AIF   (K'&DELETETYPE LE 0).ZG22A13  OK            00765200
&ZCVAL                SETC '&ZCVAL DELETETYPE'  INCORRECT KEY USED      00765300
.ZG22A13              AIF   (K'&HALTONCHANGED LE 0).ZG22A14  OK         00765400
&ZCVAL                SETC '&ZCVAL HALTONCHANGED'  INCORRECT KEY USED   00765500
.ZG22A14              AIF   (K'&SUPPCROSSINVAL LE 0).ZG22A15  OK        00765600
&ZCVAL                SETC '&ZCVAL SUPPCROSSINVAL'  INCORRECT KEY USED  00765700
.ZG22A15              AIF   (K'&DIRINFOFMT LE 0).ZG22A16  OK            00765800
&ZCVAL                SETC '&ZCVAL DIRINFOFMT'  INCORRECT KEY USED      00765900
.ZG22A16              AIF   (K'&RTATYPE LE 0).ZG22A17  OK               00766000
&ZCVAL                SETC '&ZCVAL RTATYPE'     INCORRECT KEY USED      00766100
.ZG22A17              AIF   (K'&CRITERIA LE 0).ZG22A18  OK              00766200
&ZCVAL                SETC '&ZCVAL CRITERIA'    INCORRECT KEY USED      00766300
.ZG22A18              AIF   (K'&COCLASSB LE 0).ZG22A19  OK              00766400
&ZCVAL                SETC '&ZCVAL COCLASSB'    INCORRECT KEY USED      00766500
.ZG22A19              AIF   (K'&COCLASSE LE 0).ZG22A20  OK              00766600
&ZCVAL                SETC '&ZCVAL COCLASSE'    INCORRECT KEY USED      00766700
.ZG22A20              AIF   (K'&COSTATSFMT LE 0).ZG22A21  OK            00766800
&ZCVAL                SETC '&ZCVAL COSTATSFMT'  INCORRECT KEY USED      00766900
.ZG22A21              AIF   (K'&STGSTATS LE 0).ZG22A22  OK              00767000
&ZCVAL                SETC '&ZCVAL STGSTATS'    INCORRECT KEY USED      00767100
.ZG22A22              AIF   (K'&NUMNAMES LE 0).ZG22A23  OK              00767200
&ZCVAL                SETC '&ZCVAL NUMNAMES'    INCORRECT KEY USED      00767300
.ZG22A23              AIF   (K'&REPEAT LE 0).ZG22A24  OK                00767400
&ZCVAL                SETC '&ZCVAL REPEAT'      INCORRECT KEY USED      00767500
.ZG22A24              AIF   (K'&RECLVCTR LE 0).ZG22A25  OK              00767600
&ZCVAL                SETC '&ZCVAL RECLVCTR'    INCORRECT KEY USED      00767700
.ZG22A25              AIF   (K'&ZCVAL LE 0).ZG22A26  OK                 00767800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00767900
                      AIF  (K'&ZCVAL LE 160).ZG22A26A                   00768000
&ZCVAL                SETC '&ZCVAL'(1,160)                              00768100
&ZCVAL                SETC '&ZCVAL....'                                 00768200
.ZG22A26A             ANOP                                              00768300
&ZMS                  SETC  '"REQUEST'                                  00768400
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00768500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00768600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00768700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00768800
.ZG22A26              ANOP  ,                                           00768900
.*------------------------------------------------------------------    00769000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00769100
&XWHENREG             SETC  ''          INITIALIZE XVARIABLE            00769200
.*-------------------------------------------------------------------   00769300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00769400
.ZG25                 ANOP  ,                                           00769500
                      AIF   (K'&WHENREG(1) LE 0).ZG25A                  00769600
&ZTLC                 SETC 'YES'                                        00769700
                      AIF   ('&WHENREG(1)' NE '&ZTLC').ZG26             00769800
&XWHENREG             SETC  'YES'       SET KEYWORD                     00769900
                      AIF   (N'&WHENREG LE 1).ZG25A  CK NUM             00770000
&ZMS                  SETC  '"WHENREG='                                 00770100
&ZMS                  SETC  '&ZMS.&WHENREG"'                            00770200
&ZMS                  SETC  '&ZMS "WHENREG"'                            00770300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00770400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00770500
.ZG25A                ANOP  ,                                           00770600
.*------------------------------------------------------------------    00770700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00770800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00770900
.ZG25A0               AIF   (K'&REGUSER LE 0).ZG25A1  OK                00771000
&ZCVAL                SETC '&ZCVAL REGUSER'     INCORRECT KEY USED      00771100
.ZG25A1               AIF   (K'&ASSIGN LE 0).ZG25A2  OK                 00771200
&ZCVAL                SETC '&ZCVAL ASSIGN'      INCORRECT KEY USED      00771300
.ZG25A2               AIF   (K'&LOCALREGCNTL LE 0).ZG25A3  OK           00771400
&ZCVAL                SETC '&ZCVAL LOCALREGCNTL'  INCORRECT KEY USED    00771500
.ZG25A3               AIF   (K'&ZCVAL LE 0).ZG25A4  OK                  00771600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00771700
&ZMS                  SETC  '"WHENREG'                                  00771800
&ZMS                  SETC  '&ZMS.=&WHENREG"'                           00771900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00772000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00772100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00772200
.ZG25A4               ANOP  ,                                           00772300
.*-------------------------------------------------------------------   00772400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00772500
.ZG26                 ANOP  ,                                           00772600
&ZTLC                 SETC 'NO'                                         00772700
                      AIF   ('&WHENREG(1)' NE '&ZTLC').ZG42             00772800
&XWHENREG             SETC  'NO'        SET KEYWORD                     00772900
                      AIF   (N'&WHENREG LE 1).ZG26A  CK NUM             00773000
&ZMS                  SETC  '"WHENREG='                                 00773100
&ZMS                  SETC  '&ZMS.&WHENREG"'                            00773200
&ZMS                  SETC  '&ZMS "WHENREG"'                            00773300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00773400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00773500
.ZG26A                ANOP  ,                                           00773600
.*----------------------------------------------------------------***   00773700
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00773800
                      AIF   (N'&REGUSER LE 1).ZG28A  CK NUM             00773900
&ZMS                  SETC  '"REGUSER='                                 00774000
&ZMS                  SETC  '&ZMS.&REGUSER"'                            00774100
&ZMS                  SETC  '&ZMS "REGUSER"'                            00774200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00774300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00774400
.ZG28A                ANOP  ,                                           00774500
.*-------------------------------------------------------------------   00774600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00774700
&XREGUSER             SETC  ''          INITIALIZE XVARIABLE            00774800
.ZG29A   AIF   ('&REGUSER(1)' NE 'YES').ZG30A                           00774900
&XREGUSER             SETC  'YES'       SET KEYWORD                     00775000
.*-------------------------------------------------------------------   00775100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00775200
.ZG30A   AIF   ('&REGUSER(1)' NE 'NO').ZG31A                            00775300
&XREGUSER             SETC  'NO'        SET KEYWORD                     00775400
.*-------------------------------------------------------------------   00775500
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00775600
.ZG31A                AIF   (K'&XREGUSER GT 0).ZG31C  KEYWORD           00775700
                      AIF   (K'&REGUSER(1) LE 0).ZG31B                  00775800
&ZMS                  SETC  '"REGUSER='                                 00775900
&ZMS                  SETC  '&ZMS.&REGUSER"'                            00776000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00776100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00776200
&ZMS                  SETC  '&ZMS "YES"'                                00776300
&ZMS                  SETC  '&ZMS OR "NO".'                             00776400
                      MNOTE 8,' &ZMS '                                  00776500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00776600
.ZG31B                ANOP  ,                                           00776700
&XREGUSER             SETC  'YES'       SET DEFAULT KEYWORD             00776800
.ZG31C                ANOP  ,                                           00776900
&ZXREGUSER            SETC  'INPUT'     SET IN/OUTPUT                   00777000
.*------------------------------------------------------------------    00777100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00777200
&XASSIGN              SETC  ''          INITIALIZE XVARIABLE            00777300
.*-------------------------------------------------------------------   00777400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00777500
.ZG34                 ANOP  ,                                           00777600
                      AIF   (K'&ASSIGN(1) LE 0).ZG34A                   00777700
&ZTLC                 SETC 'YES'                                        00777800
                      AIF   ('&ASSIGN(1)' NE '&ZTLC').ZG35              00777900
&XASSIGN              SETC  'YES'       SET KEYWORD                     00778000
                      AIF   (N'&ASSIGN LE 1).ZG34A  CK NUM              00778100
&ZMS                  SETC  '"ASSIGN='                                  00778200
&ZMS                  SETC  '&ZMS.&ASSIGN"'                             00778300
&ZMS                  SETC  '&ZMS "ASSIGN"'                             00778400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00778500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00778600
.ZG34A                ANOP  ,                                           00778700
.*------------------------------------------------------------------    00778800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00778900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00779000
.ZG34A0               AIF   (K'&LOCALREGCNTL LE 0).ZG34A1  OK           00779100
&ZCVAL                SETC '&ZCVAL LOCALREGCNTL'  INCORRECT KEY USED    00779200
.ZG34A1               AIF   (K'&ZCVAL LE 0).ZG34A2  OK                  00779300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00779400
&ZMS                  SETC  '"ASSIGN'                                   00779500
&ZMS                  SETC  '&ZMS.=&ASSIGN"'                            00779600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00779700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00779800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00779900
.ZG34A2               ANOP  ,                                           00780000
.*-------------------------------------------------------------------   00780100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00780200
.ZG35                 ANOP  ,                                           00780300
&ZTLC                 SETC 'NO'                                         00780400
                      AIF   ('&ASSIGN(1)' NE '&ZTLC').ZG41              00780500
&XASSIGN              SETC  'NO'        SET KEYWORD                     00780600
                      AIF   (N'&ASSIGN LE 1).ZG35A  CK NUM              00780700
&ZMS                  SETC  '"ASSIGN='                                  00780800
&ZMS                  SETC  '&ZMS.&ASSIGN"'                             00780900
&ZMS                  SETC  '&ZMS "ASSIGN"'                             00781000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00781100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00781200
.ZG35A                ANOP  ,                                           00781300
.*----------------------------------------------------------------***   00781400
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00781500
                      AIF   (N'&LOCALREGCNTL LE 1).ZG37A  CK NUM        00781600
&ZMS                  SETC  '"LOCALREGCNTL='                            00781700
&ZMS                  SETC  '&ZMS.&LOCALREGCNTL"'                       00781800
&ZMS                  SETC  '&ZMS "LOCALREGCNTL"'                       00781900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00782000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00782100
.ZG37A                ANOP  ,                                           00782200
.*-------------------------------------------------------------------   00782300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00782400
&XLOCALREGCNTL        SETC  ''          INITIALIZE XVARIABLE            00782500
.ZG38A   AIF   ('&LOCALREGCNTL(1)' NE 'NO').ZG39A                       00782600
&XLOCALREGCNTL        SETC  'NO'        SET KEYWORD                     00782700
.*-------------------------------------------------------------------   00782800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00782900
.ZG39A   AIF   ('&LOCALREGCNTL(1)' NE 'YES').ZG40A                      00783000
&XLOCALREGCNTL        SETC  'YES'       SET KEYWORD                     00783100
.*-------------------------------------------------------------------   00783200
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00783300
.ZG40A                AIF   (K'&XLOCALREGCNTL GT 0).ZG40C  KEYWORD      00783400
                      AIF   (K'&LOCALREGCNTL(1) LE 0).ZG40B             00783500
&ZMS                  SETC  '"LOCALREGCNTL='                            00783600
&ZMS                  SETC  '&ZMS.&LOCALREGCNTL"'                       00783700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00783800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00783900
&ZMS                  SETC  '&ZMS "NO"'                                 00784000
&ZMS                  SETC  '&ZMS OR "YES".'                            00784100
                      MNOTE 8,' &ZMS '                                  00784200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00784300
.ZG40B                ANOP  ,                                           00784400
&XLOCALREGCNTL        SETC  'NO'        SET DEFAULT KEYWORD             00784500
.ZG40C                ANOP  ,                                           00784600
&ZXLOCALREGCNTL       SETC  'INPUT'     SET IN/OUTPUT                   00784700
.*------------------------------------------------------------------    00784800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00784900
.ZG41                 ANOP  ,                                           00785000
&ZXASSIGN             SETC  'INPUT'     SET IN/OUTPUT                   00785100
                      AIF   (K'&XASSIGN GT 0).ZG41E  VALID ARG          00785200
                      AIF   (T'&ASSIGN EQ 'O').ZG41D  OMITTED           00785300
&ZASYSLNDX            SETA  0                                           00785400
.ZG41A                ANOP  ,           POSITIONAL MACRO KEY            00785500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00785600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG41C            00785700
&ZTLC                 SETC 'ASSIGN'                                     00785800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG41A   00785900
.ZG41B                ANOP  ,                                           00786000
&ZXASSIGN             SETC  ''          RESET IN/OUTPUT                 00786100
&ZMS                  SETC  'THE "ASSIGN" KEY'                          00786200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00786300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00786400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00786500
                      AGO   .ZG41E                                      00786600
.ZG41C                ANOP  ,                                           00786700
&ZXASSIGN             SETC  ''          RESET IN/OUTPUT                 00786800
&ZMS                  SETC  '"ASSIGN='                                  00786900
&ZMS                  SETC  '&ZMS.&ASSIGN"'                             00787000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00787100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00787200
&ZMS                  SETC  '&ZMS "YES"'                                00787300
&ZMS                  SETC  '&ZMS OR "NO".'                             00787400
                      MNOTE 8,' &ZMS '                                  00787500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00787600
                      AGO   .ZG41E                                      00787700
.ZG41D                ANOP  ,                                           00787800
&XASSIGN              SETC  'YES'       SET DEFAULT KEYWORD             00787900
.ZG41E                ANOP  ,                                           00788000
.*------------------------------------------------------------------    00788100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00788200
.ZG42                 ANOP  ,                                           00788300
&ZXWHENREG            SETC  'INPUT'     SET IN/OUTPUT                   00788400
                      AIF   (K'&XWHENREG GT 0).ZG42E  VALID ARG         00788500
                      AIF   (T'&WHENREG EQ 'O').ZG42D  OMITTED          00788600
&ZASYSLNDX            SETA  0                                           00788700
.ZG42A                ANOP  ,           POSITIONAL MACRO KEY            00788800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00788900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG42C            00789000
&ZTLC                 SETC 'WHENREG'                                    00789100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG42A   00789200
.ZG42B                ANOP  ,                                           00789300
&ZXWHENREG            SETC  ''          RESET IN/OUTPUT                 00789400
&ZMS                  SETC  'THE "WHENREG" KEY'                         00789500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00789600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00789700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00789800
                      AGO   .ZG42E                                      00789900
.ZG42C                ANOP  ,                                           00790000
&ZXWHENREG            SETC  ''          RESET IN/OUTPUT                 00790100
&ZMS                  SETC  '"WHENREG='                                 00790200
&ZMS                  SETC  '&ZMS.&WHENREG"'                            00790300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00790400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00790500
&ZMS                  SETC  '&ZMS "YES"'                                00790600
&ZMS                  SETC  '&ZMS OR "NO".'                             00790700
                      MNOTE 8,' &ZMS '                                  00790800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00790900
                      AGO   .ZG42E                                      00791000
.ZG42D                ANOP  ,                                           00791100
&XWHENREG             SETC  'YES'       SET DEFAULT KEYWORD             00791200
.ZG42E                ANOP  ,                                           00791300
.*----------------------------------------------------------------***   00791400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00791500
                      AIF   (N'&VERSCOMP LE 1).ZG44A  CK NUM            00791600
&ZMS                  SETC  '"VERSCOMP='                                00791700
&ZMS                  SETC  '&ZMS.&VERSCOMP"'                           00791800
&ZMS                  SETC  '&ZMS "VERSCOMP"'                           00791900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00792000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00792100
.ZG44A                ANOP  ,                                           00792200
.*-------------------------------------------------------------------   00792300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00792400
&ZXVERSCOMP           SETC  'INPUT'     SET IN/OUTPUT                   00792500
&XVERSCOMP            SETC  'NO_VERSCOMP'                               00792600
                      AIF   (K'&VERSCOMP(1) LE 0).ZG44B  PARM           00792700
&XVERSCOMP            SETC  '&VERSCOMP(1)'      SET XVARIABLE           00792800
                      AIF   (N'&VERSCOMP GT 1).ZG44B  MULTI             00792900
&XVERSCOMP            SETC  '&VERSCOMP'         SET XVARIABLE           00793000
.ZG44B                ANOP  ,                                           00793100
.*-------------------------------------------------------------------   00793200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00793300
                      AIF   (K'&ZXVERSCOMP LE 0).ZG44R  NOT I/O         00793400
         AIF   ('&XVERSCOMP' EQ 'NO_VERSCOMP').ZG44R                    00793500
                      AIF   ('&XVERSCOMP'(1,1) NE '(').ZG44R            00793600
&ZCGPR                SETC  '&XVERSCOMP'(2,K'&XVERSCOMP-2)              00793700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG44P                00793800
                      AIF   (K'&ZCGPR GT 2).ZG44Q                       00793900
                      AIF   ('&ZCGPR' EQ '0').ZG44Q                     00794000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00794100
                      AIF   (T'&ZCGPR NE 'N').ZG44Q  INVALID REG NAME   00794200
.ZG44P                ANOP  ,                                           00794300
                      AIF   (T'&ZCGPR NE 'N').ZG44R  NON NUMERIC        00794400
                      AIF   ('&ZCGPR' LT '2').ZG44Q                     00794500
                      AIF   ('&ZCGPR' LE '12').ZG44R                    00794600
.ZG44Q                ANOP  ,                                           00794700
&ZMS                  SETC  '"VERSCOMP='                                00794800
&ZMS                  SETC  '&ZMS.&VERSCOMP"'                           00794900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00795000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00795100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00795200
.ZG44R                ANOP  ,                                           00795300
.*----------------------------------------------------------------***   00795400
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00795500
                      AIF   (N'&VERSCOMPTYPE LE 1).ZG46A  CK NUM        00795600
&ZMS                  SETC  '"VERSCOMPTYPE='                            00795700
&ZMS                  SETC  '&ZMS.&VERSCOMPTYPE"'                       00795800
&ZMS                  SETC  '&ZMS "VERSCOMPTYPE"'                       00795900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00796000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00796100
.ZG46A                ANOP  ,                                           00796200
.*-------------------------------------------------------------------   00796300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00796400
&XVERSCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            00796500
.ZG47A   AIF   ('&VERSCOMPTYPE(1)' NE 'EQUAL').ZG48A                    00796600
&XVERSCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     00796700
.*-------------------------------------------------------------------   00796800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00796900
.ZG48A   AIF   ('&VERSCOMPTYPE(1)' NE 'LESSOREQUAL').ZG49A              00797000
&XVERSCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             00797100
.*-------------------------------------------------------------------   00797200
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00797300
.ZG49A                AIF   (K'&XVERSCOMPTYPE GT 0).ZG49C  KEYWORD      00797400
                      AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG49B             00797500
&ZMS                  SETC  '"VERSCOMPTYPE='                            00797600
&ZMS                  SETC  '&ZMS.&VERSCOMPTYPE"'                       00797700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00797800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00797900
&ZMS                  SETC  '&ZMS "EQUAL"'                              00798000
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    00798100
                      MNOTE 8,' &ZMS '                                  00798200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00798300
.ZG49B                ANOP  ,                                           00798400
&XVERSCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             00798500
.ZG49C                ANOP  ,                                           00798600
&ZXVERSCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   00798700
.*-------------------------------------------------------------------   00798800
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00798900
                      AIF   (K'&VERSCOMP(1) GT 0).ZG49D  KEY            00799000
                      AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG49D  PARM       00799100
&ZMS                  SETC  '"VERSCOMPTYPE'                             00799200
&ZMS                  SETC  '&ZMS.=&VERSCOMPTYPE"'                      00799300
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             00799400
&ZMS                  SETC  '&ZMS '                                     00799500
&ZMS                  SETC  '&ZMS "VERSCOMP"'                           00799600
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                00799700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00799800
.ZG49D                ANOP  ,                                           00799900
.*------------------------------------------------------------------    00800000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00800100
&XVERSUPDATE          SETC  ''          INITIALIZE XVARIABLE            00800200
.*-------------------------------------------------------------------   00800300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00800400
.ZG53                 ANOP  ,                                           00800500
                      AIF   (K'&VERSUPDATE(1) LE 0).ZG53A               00800600
&ZTLC                 SETC 'NONE'                                       00800700
                      AIF   ('&VERSUPDATE(1)' NE '&ZTLC').ZG54          00800800
&XVERSUPDATE          SETC  'NONE'      SET KEYWORD                     00800900
                      AIF   (N'&VERSUPDATE LE 1).ZG53A  CK NUM          00801000
&ZMS                  SETC  '"VERSUPDATE='                              00801100
&ZMS                  SETC  '&ZMS.&VERSUPDATE"'                         00801200
&ZMS                  SETC  '&ZMS "VERSUPDATE"'                         00801300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00801400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00801500
.ZG53A                ANOP  ,                                           00801600
.*------------------------------------------------------------------    00801700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00801800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00801900
.ZG53A0               AIF   (K'&NEWVERS LE 0).ZG53A1  OK                00802000
&ZCVAL                SETC '&ZCVAL NEWVERS'     INCORRECT KEY USED      00802100
.ZG53A1               AIF   (K'&ZCVAL LE 0).ZG53A2  OK                  00802200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00802300
&ZMS                  SETC  '"VERSUPDATE'                               00802400
&ZMS                  SETC  '&ZMS.=&VERSUPDATE"'                        00802500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00802600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00802700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00802800
.ZG53A2               ANOP  ,                                           00802900
.*-------------------------------------------------------------------   00803000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00803100
.ZG54                 ANOP  ,                                           00803200
&ZTLC                 SETC 'INC'                                        00803300
                      AIF   ('&VERSUPDATE(1)' NE '&ZTLC').ZG55          00803400
&XVERSUPDATE          SETC  'INC'       SET KEYWORD                     00803500
                      AIF   (N'&VERSUPDATE LE 1).ZG54A  CK NUM          00803600
&ZMS                  SETC  '"VERSUPDATE='                              00803700
&ZMS                  SETC  '&ZMS.&VERSUPDATE"'                         00803800
&ZMS                  SETC  '&ZMS "VERSUPDATE"'                         00803900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00804000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00804100
.ZG54A                ANOP  ,                                           00804200
.*------------------------------------------------------------------    00804300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00804400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00804500
.ZG54A0               AIF   (K'&NEWVERS LE 0).ZG54A1  OK                00804600
&ZCVAL                SETC '&ZCVAL NEWVERS'     INCORRECT KEY USED      00804700
.ZG54A1               AIF   (K'&ZCVAL LE 0).ZG54A2  OK                  00804800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00804900
&ZMS                  SETC  '"VERSUPDATE'                               00805000
&ZMS                  SETC  '&ZMS.=&VERSUPDATE"'                        00805100
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00805200
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00805300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00805400
.ZG54A2               ANOP  ,                                           00805500
.*-------------------------------------------------------------------   00805600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00805700
.ZG55                 ANOP  ,                                           00805800
&ZTLC                 SETC 'DEC'                                        00805900
                      AIF   ('&VERSUPDATE(1)' NE '&ZTLC').ZG56          00806000
&XVERSUPDATE          SETC  'DEC'       SET KEYWORD                     00806100
                      AIF   (N'&VERSUPDATE LE 1).ZG55A  CK NUM          00806200
&ZMS                  SETC  '"VERSUPDATE='                              00806300
&ZMS                  SETC  '&ZMS.&VERSUPDATE"'                         00806400
&ZMS                  SETC  '&ZMS "VERSUPDATE"'                         00806500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00806600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00806700
.ZG55A                ANOP  ,                                           00806800
.*------------------------------------------------------------------    00806900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00807000
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00807100
.ZG55A0               AIF   (K'&NEWVERS LE 0).ZG55A1  OK                00807200
&ZCVAL                SETC '&ZCVAL NEWVERS'     INCORRECT KEY USED      00807300
.ZG55A1               AIF   (K'&ZCVAL LE 0).ZG55A2  OK                  00807400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00807500
&ZMS                  SETC  '"VERSUPDATE'                               00807600
&ZMS                  SETC  '&ZMS.=&VERSUPDATE"'                        00807700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00807800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00807900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00808000
.ZG55A2               ANOP  ,                                           00808100
.*-------------------------------------------------------------------   00808200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00808300
.ZG56                 ANOP  ,                                           00808400
&ZTLC                 SETC 'SET'                                        00808500
                      AIF   ('&VERSUPDATE(1)' NE '&ZTLC').ZG60          00808600
&XVERSUPDATE          SETC  'SET'       SET KEYWORD                     00808700
                      AIF   (N'&VERSUPDATE LE 1).ZG56A  CK NUM          00808800
&ZMS                  SETC  '"VERSUPDATE='                              00808900
&ZMS                  SETC  '&ZMS.&VERSUPDATE"'                         00809000
&ZMS                  SETC  '&ZMS "VERSUPDATE"'                         00809100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00809200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00809300
.ZG56A                ANOP  ,                                           00809400
.*----------------------------------------------------------------***   00809500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00809600
                      AIF   (N'&NEWVERS LE 1).ZG58A  CK NUM             00809700
&ZMS                  SETC  '"NEWVERS='                                 00809800
&ZMS                  SETC  '&ZMS.&NEWVERS"'                            00809900
&ZMS                  SETC  '&ZMS "NEWVERS"'                            00810000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00810100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00810200
.ZG58A                ANOP  ,                                           00810300
.*-------------------------------------------------------------------   00810400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00810500
&ZXNEWVERS            SETC  'INPUT'     SET IN/OUTPUT                   00810600
&XNEWVERS             SETC  '&NEWVERS(1)'       SET XVARIABLE           00810700
                      AIF   (N'&NEWVERS GT 1).ZG58B  MULTI              00810800
&XNEWVERS             SETC  '&NEWVERS'  SET XVARIABLE                   00810900
.ZG58B                AIF   (K'&NEWVERS(1) GT 0).ZG58C                  00811000
&ZXNEWVERS            SETC  ''          RESET IN/OUTPUT                 00811100
&ZMS                  SETC  ' '                                         00811200
&ZMS                  SETC  '&ZMS "NEWVERS" KEY AND ITS'                00811300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00811400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00811500
                      AGO   .ZG58D                                      00811600
.ZG58C                AIF   ('&XNEWVERS' NE 'NO_NEWVERS').ZG58D         00811700
&ZXNEWVERS            SETC  ''          RESET IN/OUTPUT                 00811800
.ZG58D                ANOP  ,                                           00811900
.*-------------------------------------------------------------------   00812000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00812100
                      AIF   (K'&ZXNEWVERS LE 0).ZG58R  NOT I/O          00812200
         AIF   ('&XNEWVERS' EQ 'NO_NEWVERS').ZG58R                      00812300
                      AIF   ('&XNEWVERS'(1,1) NE '(').ZG58R             00812400
&ZCGPR                SETC  '&XNEWVERS'(2,K'&XNEWVERS-2)                00812500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG58P                00812600
                      AIF   (K'&ZCGPR GT 2).ZG58Q                       00812700
                      AIF   ('&ZCGPR' EQ '0').ZG58Q                     00812800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00812900
                      AIF   (T'&ZCGPR NE 'N').ZG58Q  INVALID REG NAME   00813000
.ZG58P                ANOP  ,                                           00813100
                      AIF   (T'&ZCGPR NE 'N').ZG58R  NON NUMERIC        00813200
                      AIF   ('&ZCGPR' LT '2').ZG58Q                     00813300
                      AIF   ('&ZCGPR' LE '12').ZG58R                    00813400
.ZG58Q                ANOP  ,                                           00813500
&ZMS                  SETC  '"NEWVERS='                                 00813600
&ZMS                  SETC  '&ZMS.&NEWVERS"'                            00813700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00813800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00813900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00814000
.ZG58R                ANOP  ,                                           00814100
.*------------------------------------------------------------------    00814200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00814300
.ZG60                 ANOP  ,                                           00814400
&ZXVERSUPDATE         SETC  'INPUT'     SET IN/OUTPUT                   00814500
                      AIF   (K'&XVERSUPDATE GT 0).ZG60E  VALID ARG      00814600
                      AIF   (T'&VERSUPDATE EQ 'O').ZG60D  OMITTED       00814700
&ZASYSLNDX            SETA  0                                           00814800
.ZG60A                ANOP  ,           POSITIONAL MACRO KEY            00814900
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00815000
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG60C            00815100
&ZTLC                 SETC 'VERSUPDATE'                                 00815200
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG60A   00815300
.ZG60B                ANOP  ,                                           00815400
&ZXVERSUPDATE         SETC  ''          RESET IN/OUTPUT                 00815500
&ZMS                  SETC  'THE "VERSUPDATE" KEY'                      00815600
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00815700
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00815800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00815900
                      AGO   .ZG60E                                      00816000
.ZG60C                ANOP  ,                                           00816100
&ZXVERSUPDATE         SETC  ''          RESET IN/OUTPUT                 00816200
&ZMS                  SETC  '"VERSUPDATE='                              00816300
&ZMS                  SETC  '&ZMS.&VERSUPDATE"'                         00816400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00816500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00816600
&ZMS                  SETC  '&ZMS "NONE",'                              00816700
&ZMS                  SETC  '&ZMS "INC",'                               00816800
&ZMS                  SETC  '&ZMS "DEC",'                               00816900
&ZMS                  SETC  '&ZMS OR "SET".'                            00817000
                      MNOTE 8,' &ZMS '                                  00817100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00817200
                      AGO   .ZG60E                                      00817300
.ZG60D                ANOP  ,                                           00817400
&XVERSUPDATE          SETC  'NONE'      SET DEFAULT KEYWORD             00817500
.ZG60E                ANOP  ,                                           00817600
.*------------------------------------------------------------------    00817700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00817800
&XCHANGED             SETC  ''          INITIALIZE XVARIABLE            00817900
.*-------------------------------------------------------------------   00818000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00818100
.ZG63                 ANOP  ,                                           00818200
                      AIF   (K'&CHANGED(1) LE 0).ZG63A                  00818300
&ZTLC                 SETC 'NO'                                         00818400
                      AIF   ('&CHANGED(1)' NE '&ZTLC').ZG77             00818500
&XCHANGED             SETC  'NO'        SET KEYWORD                     00818600
                      AIF   (N'&CHANGED LE 1).ZG63A  CK NUM             00818700
&ZMS                  SETC  '"CHANGED='                                 00818800
&ZMS                  SETC  '&ZMS.&CHANGED"'                            00818900
&ZMS                  SETC  '&ZMS "CHANGED"'                            00819000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00819100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00819200
.ZG63A                ANOP  ,                                           00819300
.*------------------------------------------------------------------    00819400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00819500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00819600
.ZG63A0               AIF   (K'&PARITY LE 0).ZG63A1  OK                 00819700
&ZCVAL                SETC '&ZCVAL PARITY'      INCORRECT KEY USED      00819800
.ZG63A1               AIF   (K'&USERDATA LE 0).ZG63A2  OK               00819900
&ZCVAL                SETC '&ZCVAL USERDATA'    INCORRECT KEY USED      00820000
.ZG63A2               AIF   (K'&ZCVAL LE 0).ZG63A3  OK                  00820100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00820200
&ZMS                  SETC  '"CHANGED'                                  00820300
&ZMS                  SETC  '&ZMS.=&CHANGED"'                           00820400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00820500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00820600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00820700
.ZG63A3               ANOP  ,                                           00820800
.*----------------------------------------------------------------***   00820900
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00821000
                      AIF   (N'&CROSSINVAL LE 1).ZG65A  CK NUM          00821100
&ZMS                  SETC  '"CROSSINVAL='                              00821200
&ZMS                  SETC  '&ZMS.&CROSSINVAL"'                         00821300
&ZMS                  SETC  '&ZMS "CROSSINVAL"'                         00821400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00821500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00821600
.ZG65A                ANOP  ,                                           00821700
.*-------------------------------------------------------------------   00821800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00821900
&XCROSSINVAL          SETC  ''          INITIALIZE XVARIABLE            00822000
.ZG66A   AIF   ('&CROSSINVAL(1)' NE 'NO').ZG67A                         00822100
&XCROSSINVAL          SETC  'NO'        SET KEYWORD                     00822200
.*-------------------------------------------------------------------   00822300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00822400
.ZG67A   AIF   ('&CROSSINVAL(1)' NE 'YES').ZG68A                        00822500
&XCROSSINVAL          SETC  'YES'       SET KEYWORD                     00822600
.*-------------------------------------------------------------------   00822700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00822800
.ZG68A                AIF   (K'&XCROSSINVAL GT 0).ZG68C  KEYWORD        00822900
                      AIF   (K'&CROSSINVAL(1) LE 0).ZG68B               00823000
&ZMS                  SETC  '"CROSSINVAL='                              00823100
&ZMS                  SETC  '&ZMS.&CROSSINVAL"'                         00823200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00823300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00823400
&ZMS                  SETC  '&ZMS "NO"'                                 00823500
&ZMS                  SETC  '&ZMS OR "YES".'                            00823600
                      MNOTE 8,' &ZMS '                                  00823700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00823800
.ZG68B                ANOP  ,                                           00823900
&XCROSSINVAL          SETC  'NO'        SET DEFAULT KEYWORD             00824000
.ZG68C                ANOP  ,                                           00824100
&ZXCROSSINVAL         SETC  'INPUT'     SET IN/OUTPUT                   00824200
.*------------------------------------------------------------------    00824300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00824400
&XGETCOLOCK           SETC  ''          INITIALIZE XVARIABLE            00824500
.*-------------------------------------------------------------------   00824600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00824700
.ZG71                 ANOP  ,                                           00824800
                      AIF   (K'&GETCOLOCK(1) LE 0).ZG71A                00824900
&ZTLC                 SETC 'NO'                                         00825000
                      AIF   ('&GETCOLOCK(1)' NE '&ZTLC').ZG72           00825100
&XGETCOLOCK           SETC  'NO'        SET KEYWORD                     00825200
                      AIF   (N'&GETCOLOCK LE 1).ZG71A  CK NUM           00825300
&ZMS                  SETC  '"GETCOLOCK='                               00825400
&ZMS                  SETC  '&ZMS.&GETCOLOCK"'                          00825500
&ZMS                  SETC  '&ZMS "GETCOLOCK"'                          00825600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00825700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00825800
.ZG71A                ANOP  ,                                           00825900
.*------------------------------------------------------------------    00826000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00826100
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00826200
.ZG71A0               AIF   (K'&PROCESSID LE 0).ZG71A1  OK              00826300
&ZCVAL                SETC '&ZCVAL PROCESSID'   INCORRECT KEY USED      00826400
.ZG71A1               AIF   (K'&ZCVAL LE 0).ZG71A2  OK                  00826500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00826600
&ZMS                  SETC  '"GETCOLOCK'                                00826700
&ZMS                  SETC  '&ZMS.=&GETCOLOCK"'                         00826800
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00826900
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00827000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00827100
.ZG71A2               ANOP  ,                                           00827200
.*-------------------------------------------------------------------   00827300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00827400
.ZG72                 ANOP  ,                                           00827500
&ZTLC                 SETC 'YES'                                        00827600
                      AIF   ('&GETCOLOCK(1)' NE '&ZTLC').ZG76           00827700
&XGETCOLOCK           SETC  'YES'       SET KEYWORD                     00827800
                      AIF   (N'&GETCOLOCK LE 1).ZG72A  CK NUM           00827900
&ZMS                  SETC  '"GETCOLOCK='                               00828000
&ZMS                  SETC  '&ZMS.&GETCOLOCK"'                          00828100
&ZMS                  SETC  '&ZMS "GETCOLOCK"'                          00828200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00828300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00828400
.ZG72A                ANOP  ,                                           00828500
.*----------------------------------------------------------------***   00828600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00828700
                      AIF   (N'&PROCESSID LE 1).ZG74A  CK NUM           00828800
&ZMS                  SETC  '"PROCESSID='                               00828900
&ZMS                  SETC  '&ZMS.&PROCESSID"'                          00829000
&ZMS                  SETC  '&ZMS "PROCESSID"'                          00829100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00829200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00829300
.ZG74A                ANOP  ,                                           00829400
.*-------------------------------------------------------------------   00829500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00829600
&ZXPROCESSID          SETC  'INPUT'     SET IN/OUTPUT                   00829700
&XPROCESSID           SETC  'NO_PROCESSID'                              00829800
                      AIF   (K'&PROCESSID(1) LE 0).ZG74B  PARM          00829900
&XPROCESSID           SETC  '&PROCESSID(1)'     SET XVARIABLE           00830000
                      AIF   (N'&PROCESSID GT 1).ZG74B  MULTI            00830100
&XPROCESSID           SETC  '&PROCESSID'        SET XVARIABLE           00830200
.ZG74B                ANOP  ,                                           00830300
.*-------------------------------------------------------------------   00830400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00830500
                      AIF   (K'&ZXPROCESSID LE 0).ZG74R  NOT I/O        00830600
         AIF   ('&XPROCESSID' EQ 'NO_PROCESSID').ZG74R                  00830700
                      AIF   ('&XPROCESSID'(1,1) NE '(').ZG74R           00830800
&ZCGPR                SETC  '&XPROCESSID'(2,K'&XPROCESSID-2)            00830900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG74P                00831000
                      AIF   (K'&ZCGPR GT 2).ZG74Q                       00831100
                      AIF   ('&ZCGPR' EQ '0').ZG74Q                     00831200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00831300
                      AIF   (T'&ZCGPR NE 'N').ZG74Q  INVALID REG NAME   00831400
.ZG74P                ANOP  ,                                           00831500
                      AIF   (T'&ZCGPR NE 'N').ZG74R  NON NUMERIC        00831600
                      AIF   ('&ZCGPR' LT '2').ZG74Q                     00831700
                      AIF   ('&ZCGPR' LE '12').ZG74R                    00831800
.ZG74Q                ANOP  ,                                           00831900
&ZMS                  SETC  '"PROCESSID='                               00832000
&ZMS                  SETC  '&ZMS.&PROCESSID"'                          00832100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00832200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00832300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00832400
.ZG74R                ANOP  ,                                           00832500
.*------------------------------------------------------------------    00832600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00832700
.ZG76                 ANOP  ,                                           00832800
&ZXGETCOLOCK          SETC  'INPUT'     SET IN/OUTPUT                   00832900
                      AIF   (K'&XGETCOLOCK GT 0).ZG76E  VALID ARG       00833000
                      AIF   (T'&GETCOLOCK EQ 'O').ZG76D  OMITTED        00833100
&ZASYSLNDX            SETA  0                                           00833200
.ZG76A                ANOP  ,           POSITIONAL MACRO KEY            00833300
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00833400
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG76C            00833500
&ZTLC                 SETC 'GETCOLOCK'                                  00833600
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG76A   00833700
.ZG76B                ANOP  ,                                           00833800
&ZXGETCOLOCK          SETC  ''          RESET IN/OUTPUT                 00833900
&ZMS                  SETC  'THE "GETCOLOCK" KEY'                       00834000
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00834100
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00834200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00834300
                      AGO   .ZG76E                                      00834400
.ZG76C                ANOP  ,                                           00834500
&ZXGETCOLOCK          SETC  ''          RESET IN/OUTPUT                 00834600
&ZMS                  SETC  '"GETCOLOCK='                               00834700
&ZMS                  SETC  '&ZMS.&GETCOLOCK"'                          00834800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00834900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00835000
&ZMS                  SETC  '&ZMS "NO"'                                 00835100
&ZMS                  SETC  '&ZMS OR "YES".'                            00835200
                      MNOTE 8,' &ZMS '                                  00835300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00835400
                      AGO   .ZG76E                                      00835500
.ZG76D                ANOP  ,                                           00835600
&XGETCOLOCK           SETC  'NO'        SET DEFAULT KEYWORD             00835700
.ZG76E                ANOP  ,                                           00835800
.*-------------------------------------------------------------------   00835900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00836000
.ZG77                 ANOP  ,                                           00836100
&ZTLC                 SETC 'YES'                                        00836200
                      AIF   ('&CHANGED(1)' NE '&ZTLC').ZG84             00836300
&XCHANGED             SETC  'YES'       SET KEYWORD                     00836400
                      AIF   (N'&CHANGED LE 1).ZG77A  CK NUM             00836500
&ZMS                  SETC  '"CHANGED='                                 00836600
&ZMS                  SETC  '&ZMS.&CHANGED"'                            00836700
&ZMS                  SETC  '&ZMS "CHANGED"'                            00836800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00836900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00837000
.ZG77A                ANOP  ,                                           00837100
.*------------------------------------------------------------------    00837200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00837300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00837400
.ZG77A0               AIF   (K'&CROSSINVAL LE 0).ZG77A1  OK             00837500
&ZCVAL                SETC '&ZCVAL CROSSINVAL'  INCORRECT KEY USED      00837600
.ZG77A1               AIF   (K'&GETCOLOCK LE 0).ZG77A2  OK              00837700
&ZCVAL                SETC '&ZCVAL GETCOLOCK'   INCORRECT KEY USED      00837800
.ZG77A2               AIF   (K'&PROCESSID LE 0).ZG77A3  OK              00837900
&ZCVAL                SETC '&ZCVAL PROCESSID'   INCORRECT KEY USED      00838000
.ZG77A3               AIF   (K'&ZCVAL LE 0).ZG77A4  OK                  00838100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00838200
&ZMS                  SETC  '"CHANGED'                                  00838300
&ZMS                  SETC  '&ZMS.=&CHANGED"'                           00838400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00838500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00838600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00838700
.ZG77A4               ANOP  ,                                           00838800
.*----------------------------------------------------------------***   00838900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00839000
                      AIF   (N'&PARITY LE 1).ZG79A  CK NUM              00839100
&ZMS                  SETC  '"PARITY='                                  00839200
&ZMS                  SETC  '&ZMS.&PARITY"'                             00839300
&ZMS                  SETC  '&ZMS "PARITY"'                             00839400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00839500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00839600
.ZG79A                ANOP  ,                                           00839700
.*-------------------------------------------------------------------   00839800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00839900
&ZXPARITY             SETC  'INPUT'     SET IN/OUTPUT                   00840000
&XPARITY              SETC  '00110000'                                  00840100
                      AIF   (K'&PARITY(1) LE 0).ZG79B  PARM             00840200
&XPARITY              SETC  '&PARITY(1)'        SET XVARIABLE           00840300
                      AIF   (N'&PARITY GT 1).ZG79B  MULTI               00840400
&XPARITY              SETC  '&PARITY'   SET XVARIABLE                   00840500
.ZG79B                ANOP  ,                                           00840600
.*-------------------------------------------------------------------   00840700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00840800
                      AIF   (K'&ZXPARITY LE 0).ZG79R  NOT I/O           00840900
                      AIF   ('&XPARITY'(1,1) NE '(').ZG79R              00841000
&ZCGPR                SETC  '&XPARITY'(2,K'&XPARITY-2)                  00841100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG79P                00841200
                      AIF   (K'&ZCGPR GT 2).ZG79Q                       00841300
                      AIF   ('&ZCGPR' EQ '0').ZG79Q                     00841400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00841500
                      AIF   (T'&ZCGPR NE 'N').ZG79Q  INVALID REG NAME   00841600
.ZG79P                ANOP  ,                                           00841700
                      AIF   (T'&ZCGPR NE 'N').ZG79R  NON NUMERIC        00841800
                      AIF   ('&ZCGPR' LT '2').ZG79Q                     00841900
                      AIF   ('&ZCGPR' LE '12').ZG79R                    00842000
.ZG79Q                ANOP  ,                                           00842100
&ZMS                  SETC  '"PARITY='                                  00842200
&ZMS                  SETC  '&ZMS.&PARITY"'                             00842300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00842400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00842500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00842600
.ZG79R                ANOP  ,                                           00842700
.*----------------------------------------------------------------***   00842800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00842900
                      AIF   (N'&USERDATA LE 1).ZG82A  CK NUM            00843000
&ZMS                  SETC  '"USERDATA='                                00843100
&ZMS                  SETC  '&ZMS.&USERDATA"'                           00843200
&ZMS                  SETC  '&ZMS "USERDATA"'                           00843300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00843400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00843500
.ZG82A                ANOP  ,                                           00843600
.*-------------------------------------------------------------------   00843700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00843800
&ZXUSERDATA           SETC  'INPUT'     SET IN/OUTPUT                   00843900
&XUSERDATA            SETC  'NO_USERDATA'                               00844000
                      AIF   (K'&USERDATA(1) LE 0).ZG82B  PARM           00844100
&XUSERDATA            SETC  '&USERDATA(1)'      SET XVARIABLE           00844200
                      AIF   (N'&USERDATA GT 1).ZG82B  MULTI             00844300
&XUSERDATA            SETC  '&USERDATA'         SET XVARIABLE           00844400
.ZG82B                ANOP  ,                                           00844500
.*-------------------------------------------------------------------   00844600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00844700
                      AIF   (K'&ZXUSERDATA LE 0).ZG82R  NOT I/O         00844800
         AIF   ('&XUSERDATA' EQ 'NO_USERDATA').ZG82R                    00844900
                      AIF   ('&XUSERDATA'(1,1) NE '(').ZG82R            00845000
&ZCGPR                SETC  '&XUSERDATA'(2,K'&XUSERDATA-2)              00845100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG82P                00845200
                      AIF   (K'&ZCGPR GT 2).ZG82Q                       00845300
                      AIF   ('&ZCGPR' EQ '0').ZG82Q                     00845400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00845500
                      AIF   (T'&ZCGPR NE 'N').ZG82Q  INVALID REG NAME   00845600
.ZG82P                ANOP  ,                                           00845700
                      AIF   (T'&ZCGPR NE 'N').ZG82R  NON NUMERIC        00845800
                      AIF   ('&ZCGPR' LT '2').ZG82Q                     00845900
                      AIF   ('&ZCGPR' LE '12').ZG82R                    00846000
.ZG82Q                ANOP  ,                                           00846100
&ZMS                  SETC  '"USERDATA='                                00846200
&ZMS                  SETC  '&ZMS.&USERDATA"'                           00846300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00846400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00846500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00846600
.ZG82R                ANOP  ,                                           00846700
.*------------------------------------------------------------------    00846800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00846900
.ZG84                 ANOP  ,                                           00847000
&ZXCHANGED            SETC  'INPUT'     SET IN/OUTPUT                   00847100
                      AIF   (K'&XCHANGED GT 0).ZG84E  VALID ARG         00847200
                      AIF   (T'&CHANGED EQ 'O').ZG84D  OMITTED          00847300
&ZASYSLNDX            SETA  0                                           00847400
.ZG84A                ANOP  ,           POSITIONAL MACRO KEY            00847500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                00847600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG84C            00847700
&ZTLC                 SETC 'CHANGED'                                    00847800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG84A   00847900
.ZG84B                ANOP  ,                                           00848000
&ZXCHANGED            SETC  ''          RESET IN/OUTPUT                 00848100
&ZMS                  SETC  'THE "CHANGED" KEY'                         00848200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     00848300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            00848400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00848500
                      AGO   .ZG84E                                      00848600
.ZG84C                ANOP  ,                                           00848700
&ZXCHANGED            SETC  ''          RESET IN/OUTPUT                 00848800
&ZMS                  SETC  '"CHANGED='                                 00848900
&ZMS                  SETC  '&ZMS.&CHANGED"'                            00849000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00849100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00849200
&ZMS                  SETC  '&ZMS "NO"'                                 00849300
&ZMS                  SETC  '&ZMS OR "YES".'                            00849400
                      MNOTE 8,' &ZMS '                                  00849500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00849600
                      AGO   .ZG84E                                      00849700
.ZG84D                ANOP  ,                                           00849800
&XCHANGED             SETC  'NO'        SET DEFAULT KEYWORD             00849900
.ZG84E                ANOP  ,                                           00850000
.*----------------------------------------------------------------***   00850100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00850200
                      AIF   (N'&ELEMNUM LE 1).ZG86A  CK NUM             00850300
&ZMS                  SETC  '"ELEMNUM='                                 00850400
&ZMS                  SETC  '&ZMS.&ELEMNUM"'                            00850500
&ZMS                  SETC  '&ZMS "ELEMNUM"'                            00850600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00850700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00850800
.ZG86A                ANOP  ,                                           00850900
.*-------------------------------------------------------------------   00851000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00851100
&ZXELEMNUM            SETC  'INPUT'     SET IN/OUTPUT                   00851200
&XELEMNUM             SETC  '&ELEMNUM(1)'       SET XVARIABLE           00851300
                      AIF   (N'&ELEMNUM GT 1).ZG86B  MULTI              00851400
&XELEMNUM             SETC  '&ELEMNUM'  SET XVARIABLE                   00851500
.ZG86B                AIF   (K'&ELEMNUM(1) GT 0).ZG86C                  00851600
&ZXELEMNUM            SETC  ''          RESET IN/OUTPUT                 00851700
&ZMS                  SETC  ' '                                         00851800
&ZMS                  SETC  '&ZMS "ELEMNUM" KEY AND ITS'                00851900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00852000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00852100
.ZG86C                ANOP  ,                                           00852200
.*-------------------------------------------------------------------   00852300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00852400
                      AIF   (K'&ZXELEMNUM LE 0).ZG86R  NOT I/O          00852500
                      AIF   ('&XELEMNUM'(1,1) NE '(').ZG86R             00852600
&ZCGPR                SETC  '&XELEMNUM'(2,K'&XELEMNUM-2)                00852700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG86P                00852800
                      AIF   (K'&ZCGPR GT 2).ZG86Q                       00852900
                      AIF   ('&ZCGPR' EQ '0').ZG86Q                     00853000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00853100
                      AIF   (T'&ZCGPR NE 'N').ZG86Q  INVALID REG NAME   00853200
.ZG86P                ANOP  ,                                           00853300
                      AIF   (T'&ZCGPR NE 'N').ZG86R  NON NUMERIC        00853400
                      AIF   ('&ZCGPR' LT '2').ZG86Q                     00853500
                      AIF   ('&ZCGPR' LE '12').ZG86R                    00853600
.ZG86Q                ANOP  ,                                           00853700
&ZMS                  SETC  '"ELEMNUM='                                 00853800
&ZMS                  SETC  '&ZMS.&ELEMNUM"'                            00853900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00854000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00854100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00854200
.ZG86R                ANOP  ,                                           00854300
.*----------------------------------------------------------------***   00854400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00854500
                      AIF   (N'&AXIOVERRIDE LE 1).ZG89A  CK NUM         00854600
&ZMS                  SETC  '"AXIOVERRIDE='                             00854700
&ZMS                  SETC  '&ZMS.&AXIOVERRIDE"'                        00854800
&ZMS                  SETC  '&ZMS "AXIOVERRIDE"'                        00854900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00855000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00855100
.ZG89A                ANOP  ,                                           00855200
.*-------------------------------------------------------------------   00855300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00855400
&ZXAXIOVERRIDE        SETC  'INPUT'     SET IN/OUTPUT                   00855500
&XAXIOVERRIDE         SETC  '0'                                         00855600
                      AIF   (K'&AXIOVERRIDE(1) LE 0).ZG89B  PARM        00855700
&XAXIOVERRIDE         SETC  '&AXIOVERRIDE(1)'   SET XVARIABLE           00855800
                      AIF   (N'&AXIOVERRIDE GT 1).ZG89B  MULTI          00855900
&XAXIOVERRIDE         SETC  '&AXIOVERRIDE'      SET XVARIABLE           00856000
.ZG89B                ANOP  ,                                           00856100
.*-------------------------------------------------------------------   00856200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00856300
                      AIF   (K'&ZXAXIOVERRIDE LE 0).ZG89R  NOT I/O      00856400
         AIF   ('&XAXIOVERRIDE' EQ '0').ZG89R                           00856500
                      AIF   ('&XAXIOVERRIDE'(1,1) NE '(').ZG89R         00856600
&ZCGPR                SETC  '&XAXIOVERRIDE'(2,K'&XAXIOVERRIDE-2)        00856700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG89P                00856800
                      AIF   (K'&ZCGPR GT 2).ZG89Q                       00856900
                      AIF   ('&ZCGPR' EQ '0').ZG89Q                     00857000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00857100
                      AIF   (T'&ZCGPR NE 'N').ZG89Q  INVALID REG NAME   00857200
.ZG89P                ANOP  ,                                           00857300
                      AIF   (T'&ZCGPR NE 'N').ZG89R  NON NUMERIC        00857400
                      AIF   ('&ZCGPR' LT '2').ZG89Q                     00857500
                      AIF   ('&ZCGPR' LE '12').ZG89R                    00857600
.ZG89Q                ANOP  ,                                           00857700
&ZMS                  SETC  '"AXIOVERRIDE='                             00857800
&ZMS                  SETC  '&ZMS.&AXIOVERRIDE"'                        00857900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00858000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00858100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00858200
.ZG89R                ANOP  ,                                           00858300
.*-------------------------------------------------------------------   00858400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00858500
.ZG91                 ANOP  ,                                           00858600
&ZTLC                 SETC 'WRITE_DATALIST'                             00858700
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG112            00858800
&XREQUEST             SETC  'WRITE_DATALIST'    SET KEYWORD             00858900
                      AIF   (N'&REQUEST LE 1).ZG91A  CK NUM             00859000
&ZMS                  SETC  '"REQUEST='                                 00859100
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00859200
&ZMS                  SETC  '&ZMS "REQUEST"'                            00859300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00859400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00859500
.ZG91A                ANOP  ,                                           00859600
.*------------------------------------------------------------------    00859700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00859800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00859900
.ZG91A0               AIF   (K'&ASSIGN LE 0).ZG91A1  OK                 00860000
&ZCVAL                SETC '&ZCVAL ASSIGN'      INCORRECT KEY USED      00860100
.ZG91A1               AIF   (K'&REGUSER LE 0).ZG91A2  OK                00860200
&ZCVAL                SETC '&ZCVAL REGUSER'     INCORRECT KEY USED      00860300
.ZG91A2               AIF   (K'&RETURNDATA LE 0).ZG91A3  OK             00860400
&ZCVAL                SETC '&ZCVAL RETURNDATA'  INCORRECT KEY USED      00860500
.ZG91A3               AIF   (K'&WHENREG LE 0).ZG91A4  OK                00860600
&ZCVAL                SETC '&ZCVAL WHENREG'     INCORRECT KEY USED      00860700
.ZG91A4               AIF   (K'&VERSCOMP LE 0).ZG91A5  OK               00860800
&ZCVAL                SETC '&ZCVAL VERSCOMP'    INCORRECT KEY USED      00860900
.ZG91A5               AIF   (K'&VERSCOMPTYPE LE 0).ZG91A6  OK           00861000
&ZCVAL                SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED    00861100
.ZG91A6               AIF   (K'&VERSUPDATE LE 0).ZG91A7  OK             00861200
&ZCVAL                SETC '&ZCVAL VERSUPDATE'  INCORRECT KEY USED      00861300
.ZG91A7               AIF   (K'&NEWVERS LE 0).ZG91A8  OK                00861400
&ZCVAL                SETC '&ZCVAL NEWVERS'     INCORRECT KEY USED      00861500
.ZG91A8               AIF   (K'&CHANGED LE 0).ZG91A9  OK                00861600
&ZCVAL                SETC '&ZCVAL CHANGED'     INCORRECT KEY USED      00861700
.ZG91A9               AIF   (K'&CROSSINVAL LE 0).ZG91A10  OK            00861800
&ZCVAL                SETC '&ZCVAL CROSSINVAL'  INCORRECT KEY USED      00861900
.ZG91A10              AIF   (K'&GETCOLOCK LE 0).ZG91A11  OK             00862000
&ZCVAL                SETC '&ZCVAL GETCOLOCK'   INCORRECT KEY USED      00862100
.ZG91A11              AIF   (K'&PROCESSID LE 0).ZG91A12  OK             00862200
&ZCVAL                SETC '&ZCVAL PROCESSID'   INCORRECT KEY USED      00862300
.ZG91A12              AIF   (K'&PARITY LE 0).ZG91A13  OK                00862400
&ZCVAL                SETC '&ZCVAL PARITY'      INCORRECT KEY USED      00862500
.ZG91A13              AIF   (K'&USERDATA LE 0).ZG91A14  OK              00862600
&ZCVAL                SETC '&ZCVAL USERDATA'    INCORRECT KEY USED      00862700
.ZG91A14              AIF   (K'&ELEMNUM LE 0).ZG91A15  OK               00862800
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      00862900
.ZG91A15              AIF   (K'&NSBAREA LE 0).ZG91A16  OK               00863000
&ZCVAL                SETC '&ZCVAL NSBAREA'     INCORRECT KEY USED      00863100
.ZG91A16              AIF   (K'&DEIBAREA LE 0).ZG91A17  OK              00863200
&ZCVAL                SETC '&ZCVAL DEIBAREA'    INCORRECT KEY USED      00863300
.ZG91A17              AIF   (K'&CASTOUTLIST LE 0).ZG91A18  OK           00863400
&ZCVAL                SETC '&ZCVAL CASTOUTLIST'  INCORRECT KEY USED     00863500
.ZG91A18              AIF   (K'&FIRSTNAME LE 0).ZG91A19  OK             00863600
&ZCVAL                SETC '&ZCVAL FIRSTNAME'   INCORRECT KEY USED      00863700
.ZG91A19              AIF   (K'&LASTNAME LE 0).ZG91A20  OK              00863800
&ZCVAL                SETC '&ZCVAL LASTNAME'    INCORRECT KEY USED      00863900
.ZG91A20              AIF   (K'&CUNBAREA LE 0).ZG91A21  OK              00864000
&ZCVAL                SETC '&ZCVAL CUNBAREA'    INCORRECT KEY USED      00864100
.ZG91A21              AIF   (K'&ERRORACTION LE 0).ZG91A22  OK           00864200
&ZCVAL                SETC '&ZCVAL ERRORACTION'  INCORRECT KEY USED     00864300
.ZG91A22              AIF   (K'&DELETETYPE LE 0).ZG91A23  OK            00864400
&ZCVAL                SETC '&ZCVAL DELETETYPE'  INCORRECT KEY USED      00864500
.ZG91A23              AIF   (K'&HALTONCHANGED LE 0).ZG91A24  OK         00864600
&ZCVAL                SETC '&ZCVAL HALTONCHANGED'  INCORRECT KEY USED   00864700
.ZG91A24              AIF   (K'&SUPPCROSSINVAL LE 0).ZG91A25  OK        00864800
&ZCVAL                SETC '&ZCVAL SUPPCROSSINVAL'  INCORRECT KEY USED  00864900
.ZG91A25              AIF   (K'&DIRINFOFMT LE 0).ZG91A26  OK            00865000
&ZCVAL                SETC '&ZCVAL DIRINFOFMT'  INCORRECT KEY USED      00865100
.ZG91A26              AIF   (K'&RTATYPE LE 0).ZG91A27  OK               00865200
&ZCVAL                SETC '&ZCVAL RTATYPE'     INCORRECT KEY USED      00865300
.ZG91A27              AIF   (K'&CRITERIA LE 0).ZG91A28  OK              00865400
&ZCVAL                SETC '&ZCVAL CRITERIA'    INCORRECT KEY USED      00865500
.ZG91A28              AIF   (K'&COCLASSB LE 0).ZG91A29  OK              00865600
&ZCVAL                SETC '&ZCVAL COCLASSB'    INCORRECT KEY USED      00865700
.ZG91A29              AIF   (K'&COCLASSE LE 0).ZG91A30  OK              00865800
&ZCVAL                SETC '&ZCVAL COCLASSE'    INCORRECT KEY USED      00865900
.ZG91A30              AIF   (K'&COSTATSFMT LE 0).ZG91A31  OK            00866000
&ZCVAL                SETC '&ZCVAL COSTATSFMT'  INCORRECT KEY USED      00866100
.ZG91A31              AIF   (K'&STGSTATS LE 0).ZG91A32  OK              00866200
&ZCVAL                SETC '&ZCVAL STGSTATS'    INCORRECT KEY USED      00866300
.ZG91A32              AIF   (K'&NUMNAMES LE 0).ZG91A33  OK              00866400
&ZCVAL                SETC '&ZCVAL NUMNAMES'    INCORRECT KEY USED      00866500
.ZG91A33              AIF   (K'&REPEAT LE 0).ZG91A34  OK                00866600
&ZCVAL                SETC '&ZCVAL REPEAT'      INCORRECT KEY USED      00866700
.ZG91A34              AIF   (K'&RECLVCTR LE 0).ZG91A35  OK              00866800
&ZCVAL                SETC '&ZCVAL RECLVCTR'    INCORRECT KEY USED      00866900
.ZG91A35              AIF   (K'&ZCVAL LE 0).ZG91A36  OK                 00867000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00867100
                      AIF  (K'&ZCVAL LE 160).ZG91A36A                   00867200
&ZCVAL                SETC '&ZCVAL'(1,160)                              00867300
&ZCVAL                SETC '&ZCVAL....'                                 00867400
.ZG91A36A             ANOP                                              00867500
&ZMS                  SETC  '"REQUEST'                                  00867600
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00867700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00867800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00867900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00868000
.ZG91A36              ANOP  ,                                           00868100
.*----------------------------------------------------------------***   00868200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00868300
                      AIF   (N'&STARTINDEX LE 1).ZG93A  CK NUM          00868400
&ZMS                  SETC  '"STARTINDEX='                              00868500
&ZMS                  SETC  '&ZMS.&STARTINDEX"'                         00868600
&ZMS                  SETC  '&ZMS "STARTINDEX"'                         00868700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00868800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00868900
.ZG93A                ANOP  ,                                           00869000
.*-------------------------------------------------------------------   00869100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00869200
&ZXSTARTINDEX         SETC  'INPUT'     SET IN/OUTPUT                   00869300
&XSTARTINDEX          SETC  '&STARTINDEX(1)'    SET XVARIABLE           00869400
                      AIF   (N'&STARTINDEX GT 1).ZG93B  MULTI           00869500
&XSTARTINDEX          SETC  '&STARTINDEX'       SET XVARIABLE           00869600
.ZG93B                AIF   (K'&STARTINDEX(1) GT 0).ZG93C               00869700
&ZXSTARTINDEX         SETC  ''          RESET IN/OUTPUT                 00869800
&ZMS                  SETC  ' '                                         00869900
&ZMS                  SETC  '&ZMS "STARTINDEX" KEY AND ITS'             00870000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00870100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00870200
.ZG93C                ANOP  ,                                           00870300
.*-------------------------------------------------------------------   00870400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00870500
                      AIF   (K'&ZXSTARTINDEX LE 0).ZG93R  NOT I/O       00870600
                      AIF   ('&XSTARTINDEX'(1,1) NE '(').ZG93R          00870700
&ZCGPR                SETC  '&XSTARTINDEX'(2,K'&XSTARTINDEX-2)          00870800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG93P                00870900
                      AIF   (K'&ZCGPR GT 2).ZG93Q                       00871000
                      AIF   ('&ZCGPR' EQ '0').ZG93Q                     00871100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00871200
                      AIF   (T'&ZCGPR NE 'N').ZG93Q  INVALID REG NAME   00871300
.ZG93P                ANOP  ,                                           00871400
                      AIF   (T'&ZCGPR NE 'N').ZG93R  NON NUMERIC        00871500
                      AIF   ('&ZCGPR' LT '2').ZG93Q                     00871600
                      AIF   ('&ZCGPR' LE '12').ZG93R                    00871700
.ZG93Q                ANOP  ,                                           00871800
&ZMS                  SETC  '"STARTINDEX='                              00871900
&ZMS                  SETC  '&ZMS.&STARTINDEX"'                         00872000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00872100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00872200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00872300
.ZG93R                ANOP  ,                                           00872400
.*----------------------------------------------------------------***   00872500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00872600
                      AIF   (N'&ENDINDEX LE 1).ZG96A  CK NUM            00872700
&ZMS                  SETC  '"ENDINDEX='                                00872800
&ZMS                  SETC  '&ZMS.&ENDINDEX"'                           00872900
&ZMS                  SETC  '&ZMS "ENDINDEX"'                           00873000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00873100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00873200
.ZG96A                ANOP  ,                                           00873300
.*-------------------------------------------------------------------   00873400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00873500
&ZXENDINDEX           SETC  'INPUT'     SET IN/OUTPUT                   00873600
&XENDINDEX            SETC  '&ENDINDEX(1)'      SET XVARIABLE           00873700
                      AIF   (N'&ENDINDEX GT 1).ZG96B  MULTI             00873800
&XENDINDEX            SETC  '&ENDINDEX'         SET XVARIABLE           00873900
.ZG96B                AIF   (K'&ENDINDEX(1) GT 0).ZG96C                 00874000
&ZXENDINDEX           SETC  ''          RESET IN/OUTPUT                 00874100
&ZMS                  SETC  ' '                                         00874200
&ZMS                  SETC  '&ZMS "ENDINDEX" KEY AND ITS'               00874300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00874400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00874500
.ZG96C                ANOP  ,                                           00874600
.*-------------------------------------------------------------------   00874700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00874800
                      AIF   (K'&ZXENDINDEX LE 0).ZG96R  NOT I/O         00874900
                      AIF   ('&XENDINDEX'(1,1) NE '(').ZG96R            00875000
&ZCGPR                SETC  '&XENDINDEX'(2,K'&XENDINDEX-2)              00875100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG96P                00875200
                      AIF   (K'&ZCGPR GT 2).ZG96Q                       00875300
                      AIF   ('&ZCGPR' EQ '0').ZG96Q                     00875400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00875500
                      AIF   (T'&ZCGPR NE 'N').ZG96Q  INVALID REG NAME   00875600
.ZG96P                ANOP  ,                                           00875700
                      AIF   (T'&ZCGPR NE 'N').ZG96R  NON NUMERIC        00875800
                      AIF   ('&ZCGPR' LT '2').ZG96Q                     00875900
                      AIF   ('&ZCGPR' LE '12').ZG96R                    00876000
.ZG96Q                ANOP  ,                                           00876100
&ZMS                  SETC  '"ENDINDEX='                                00876200
&ZMS                  SETC  '&ZMS.&ENDINDEX"'                           00876300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00876400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00876500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00876600
.ZG96R                ANOP  ,                                           00876700
.*----------------------------------------------------------------***   00876800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00876900
                      AIF   (N'&DATAOFFSET LE 1).ZG99A  CK NUM          00877000
&ZMS                  SETC  '"DATAOFFSET='                              00877100
&ZMS                  SETC  '&ZMS.&DATAOFFSET"'                         00877200
&ZMS                  SETC  '&ZMS "DATAOFFSET"'                         00877300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00877400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00877500
.ZG99A                ANOP  ,                                           00877600
.*-------------------------------------------------------------------   00877700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00877800
&ZXDATAOFFSET         SETC  'INPUT'     SET IN/OUTPUT                   00877900
&XDATAOFFSET          SETC  '&DATAOFFSET(1)'    SET XVARIABLE           00878000
                      AIF   (N'&DATAOFFSET GT 1).ZG99B  MULTI           00878100
&XDATAOFFSET          SETC  '&DATAOFFSET'       SET XVARIABLE           00878200
.ZG99B                AIF   (K'&DATAOFFSET(1) GT 0).ZG99C               00878300
&ZXDATAOFFSET         SETC  ''          RESET IN/OUTPUT                 00878400
&ZMS                  SETC  ' '                                         00878500
&ZMS                  SETC  '&ZMS "DATAOFFSET" KEY AND ITS'             00878600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00878700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00878800
.ZG99C                ANOP  ,                                           00878900
.*-------------------------------------------------------------------   00879000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00879100
                      AIF   (K'&ZXDATAOFFSET LE 0).ZG99R  NOT I/O       00879200
                      AIF   ('&XDATAOFFSET'(1,1) NE '(').ZG99R          00879300
&ZCGPR                SETC  '&XDATAOFFSET'(2,K'&XDATAOFFSET-2)          00879400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG99P                00879500
                      AIF   (K'&ZCGPR GT 2).ZG99Q                       00879600
                      AIF   ('&ZCGPR' EQ '0').ZG99Q                     00879700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00879800
                      AIF   (T'&ZCGPR NE 'N').ZG99Q  INVALID REG NAME   00879900
.ZG99P                ANOP  ,                                           00880000
                      AIF   (T'&ZCGPR NE 'N').ZG99R  NON NUMERIC        00880100
                      AIF   ('&ZCGPR' LT '2').ZG99Q                     00880200
                      AIF   ('&ZCGPR' LE '12').ZG99R                    00880300
.ZG99Q                ANOP  ,                                           00880400
&ZMS                  SETC  '"DATAOFFSET='                              00880500
&ZMS                  SETC  '&ZMS.&DATAOFFSET"'                         00880600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00880700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00880800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00880900
.ZG99R                ANOP  ,                                           00881000
.*----------------------------------------------------------------***   00881100
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00881200
                      AIF   (N'&WORBAREA LE 1).ZG102A  CK NUM           00881300
&ZMS                  SETC  '"WORBAREA='                                00881400
&ZMS                  SETC  '&ZMS.&WORBAREA"'                           00881500
&ZMS                  SETC  '&ZMS "WORBAREA"'                           00881600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00881700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00881800
.ZG102A               ANOP  ,                                           00881900
.*-------------------------------------------------------------------   00882000
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00882100
&ZXWORBAREA           SETC  'OUTPUT'    SET IN/OUTPUT                   00882200
&XWORBAREA            SETC  '&WORBAREA(1)'      SET XVARIABLE           00882300
                      AIF   (N'&WORBAREA GT 1).ZG102B  MULTI            00882400
&XWORBAREA            SETC  '&WORBAREA'         SET XVARIABLE           00882500
.ZG102B               AIF   (K'&WORBAREA(1) GT 0).ZG102C                00882600
&ZXWORBAREA           SETC  ''          RESET IN/OUTPUT                 00882700
&ZMS                  SETC  ' '                                         00882800
&ZMS                  SETC  '&ZMS "WORBAREA" KEY AND ITS'               00882900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00883000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00883100
.ZG102C               ANOP  ,                                           00883200
.*-------------------------------------------------------------------   00883300
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00883400
                      AIF   (K'&ZXWORBAREA LE 0).ZG102R  NOT I/O        00883500
                      AIF   ('&XWORBAREA'(1,1) NE '(').ZG102R           00883600
&ZCGPR                SETC  '&XWORBAREA'(2,K'&XWORBAREA-2)              00883700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG102P               00883800
                      AIF   (K'&ZCGPR GT 2).ZG102Q                      00883900
                      AIF   ('&ZCGPR' EQ '0').ZG102Q                    00884000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00884100
                      AIF   (T'&ZCGPR NE 'N').ZG102Q  INVALID REG NAME  00884200
.ZG102P               ANOP  ,                                           00884300
                      AIF   (T'&ZCGPR NE 'N').ZG102R  NON NUMERIC       00884400
                      AIF   ('&ZCGPR' LT '2').ZG102Q                    00884500
                      AIF   ('&ZCGPR' LE '12').ZG102R                   00884600
.ZG102Q               ANOP  ,                                           00884700
&ZMS                  SETC  '"WORBAREA='                                00884800
&ZMS                  SETC  '&ZMS.&WORBAREA"'                           00884900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00885000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00885100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00885200
.ZG102R               ANOP  ,                                           00885300
.*----------------------------------------------------------------***   00885400
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00885500
                      AIF   (N'&LOCALREGCNTL LE 1).ZG105A  CK NUM       00885600
&ZMS                  SETC  '"LOCALREGCNTL='                            00885700
&ZMS                  SETC  '&ZMS.&LOCALREGCNTL"'                       00885800
&ZMS                  SETC  '&ZMS "LOCALREGCNTL"'                       00885900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00886000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00886100
.ZG105A               ANOP  ,                                           00886200
.*-------------------------------------------------------------------   00886300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00886400
&XLOCALREGCNTL        SETC  ''          INITIALIZE XVARIABLE            00886500
.ZG106A   AIF   ('&LOCALREGCNTL(1)' NE 'NO').ZG107A                     00886600
&XLOCALREGCNTL        SETC  'NO'        SET KEYWORD                     00886700
.*-------------------------------------------------------------------   00886800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00886900
.ZG107A   AIF   ('&LOCALREGCNTL(1)' NE 'YES').ZG108A                    00887000
&XLOCALREGCNTL        SETC  'YES'       SET KEYWORD                     00887100
.*-------------------------------------------------------------------   00887200
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00887300
.ZG108A               AIF   (K'&XLOCALREGCNTL GT 0).ZG108C  KEYWORD     00887400
                      AIF   (K'&LOCALREGCNTL(1) LE 0).ZG108B            00887500
&ZMS                  SETC  '"LOCALREGCNTL='                            00887600
&ZMS                  SETC  '&ZMS.&LOCALREGCNTL"'                       00887700
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00887800
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00887900
&ZMS                  SETC  '&ZMS "NO"'                                 00888000
&ZMS                  SETC  '&ZMS OR "YES".'                            00888100
                      MNOTE 8,' &ZMS '                                  00888200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00888300
.ZG108B               ANOP  ,                                           00888400
&XLOCALREGCNTL        SETC  'NO'        SET DEFAULT KEYWORD             00888500
.ZG108C               ANOP  ,                                           00888600
&ZXLOCALREGCNTL       SETC  'INPUT'     SET IN/OUTPUT                   00888700
.*----------------------------------------------------------------***   00888800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00888900
                      AIF   (N'&AXIOVERRIDE LE 1).ZG110A  CK NUM        00889000
&ZMS                  SETC  '"AXIOVERRIDE='                             00889100
&ZMS                  SETC  '&ZMS.&AXIOVERRIDE"'                        00889200
&ZMS                  SETC  '&ZMS "AXIOVERRIDE"'                        00889300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00889400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00889500
.ZG110A               ANOP  ,                                           00889600
.*-------------------------------------------------------------------   00889700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00889800
&ZXAXIOVERRIDE        SETC  'INPUT'     SET IN/OUTPUT                   00889900
&XAXIOVERRIDE         SETC  '0'                                         00890000
                      AIF   (K'&AXIOVERRIDE(1) LE 0).ZG110B  PARM       00890100
&XAXIOVERRIDE         SETC  '&AXIOVERRIDE(1)'   SET XVARIABLE           00890200
                      AIF   (N'&AXIOVERRIDE GT 1).ZG110B  MULTI         00890300
&XAXIOVERRIDE         SETC  '&AXIOVERRIDE'      SET XVARIABLE           00890400
.ZG110B               ANOP  ,                                           00890500
.*-------------------------------------------------------------------   00890600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00890700
                      AIF   (K'&ZXAXIOVERRIDE LE 0).ZG110R  NOT I/O     00890800
         AIF   ('&XAXIOVERRIDE' EQ '0').ZG110R                          00890900
                      AIF   ('&XAXIOVERRIDE'(1,1) NE '(').ZG110R        00891000
&ZCGPR                SETC  '&XAXIOVERRIDE'(2,K'&XAXIOVERRIDE-2)        00891100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG110P               00891200
                      AIF   (K'&ZCGPR GT 2).ZG110Q                      00891300
                      AIF   ('&ZCGPR' EQ '0').ZG110Q                    00891400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00891500
                      AIF   (T'&ZCGPR NE 'N').ZG110Q  INVALID REG NAME  00891600
.ZG110P               ANOP  ,                                           00891700
                      AIF   (T'&ZCGPR NE 'N').ZG110R  NON NUMERIC       00891800
                      AIF   ('&ZCGPR' LT '2').ZG110Q                    00891900
                      AIF   ('&ZCGPR' LE '12').ZG110R                   00892000
.ZG110Q               ANOP  ,                                           00892100
&ZMS                  SETC  '"AXIOVERRIDE='                             00892200
&ZMS                  SETC  '&ZMS.&AXIOVERRIDE"'                        00892300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00892400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00892500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00892600
.ZG110R               ANOP  ,                                           00892700
.*-------------------------------------------------------------------   00892800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00892900
.ZG112                ANOP  ,                                           00893000
&ZTLC                 SETC 'REG_NAMELIST'                               00893100
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG125            00893200
&XREQUEST             SETC  'REG_NAMELIST'      SET KEYWORD             00893300
                      AIF   (N'&REQUEST LE 1).ZG112A  CK NUM            00893400
&ZMS                  SETC  '"REQUEST='                                 00893500
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00893600
&ZMS                  SETC  '&ZMS "REQUEST"'                            00893700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00893800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00893900
.ZG112A               ANOP  ,                                           00894000
.*------------------------------------------------------------------    00894100
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00894200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00894300
.ZG112A0              AIF   (K'&ASSIGN LE 0).ZG112A1  OK                00894400
&ZCVAL                SETC '&ZCVAL ASSIGN'      INCORRECT KEY USED      00894500
.ZG112A1              AIF   (K'&REGUSER LE 0).ZG112A2  OK               00894600
&ZCVAL                SETC '&ZCVAL REGUSER'     INCORRECT KEY USED      00894700
.ZG112A2              AIF   (K'&RETURNDATA LE 0).ZG112A3  OK            00894800
&ZCVAL                SETC '&ZCVAL RETURNDATA'  INCORRECT KEY USED      00894900
.ZG112A3              AIF   (K'&WHENREG LE 0).ZG112A4  OK               00895000
&ZCVAL                SETC '&ZCVAL WHENREG'     INCORRECT KEY USED      00895100
.ZG112A4              AIF   (K'&LOCALREGCNTL LE 0).ZG112A5  OK          00895200
&ZCVAL                SETC '&ZCVAL LOCALREGCNTL'  INCORRECT KEY USED    00895300
.ZG112A5              AIF   (K'&VERSCOMP LE 0).ZG112A6  OK              00895400
&ZCVAL                SETC '&ZCVAL VERSCOMP'    INCORRECT KEY USED      00895500
.ZG112A6              AIF   (K'&VERSCOMPTYPE LE 0).ZG112A7  OK          00895600
&ZCVAL                SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED    00895700
.ZG112A7              AIF   (K'&VERSUPDATE LE 0).ZG112A8  OK            00895800
&ZCVAL                SETC '&ZCVAL VERSUPDATE'  INCORRECT KEY USED      00895900
.ZG112A8              AIF   (K'&NEWVERS LE 0).ZG112A9  OK               00896000
&ZCVAL                SETC '&ZCVAL NEWVERS'     INCORRECT KEY USED      00896100
.ZG112A9              AIF   (K'&CHANGED LE 0).ZG112A10  OK              00896200
&ZCVAL                SETC '&ZCVAL CHANGED'     INCORRECT KEY USED      00896300
.ZG112A10             AIF   (K'&CROSSINVAL LE 0).ZG112A11  OK           00896400
&ZCVAL                SETC '&ZCVAL CROSSINVAL'  INCORRECT KEY USED      00896500
.ZG112A11             AIF   (K'&GETCOLOCK LE 0).ZG112A12  OK            00896600
&ZCVAL                SETC '&ZCVAL GETCOLOCK'   INCORRECT KEY USED      00896700
.ZG112A12             AIF   (K'&PROCESSID LE 0).ZG112A13  OK            00896800
&ZCVAL                SETC '&ZCVAL PROCESSID'   INCORRECT KEY USED      00896900
.ZG112A13             AIF   (K'&PARITY LE 0).ZG112A14  OK               00897000
&ZCVAL                SETC '&ZCVAL PARITY'      INCORRECT KEY USED      00897100
.ZG112A14             AIF   (K'&USERDATA LE 0).ZG112A15  OK             00897200
&ZCVAL                SETC '&ZCVAL USERDATA'    INCORRECT KEY USED      00897300
.ZG112A15             AIF   (K'&ELEMNUM LE 0).ZG112A16  OK              00897400
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      00897500
.ZG112A16             AIF   (K'&DATAOFFSET LE 0).ZG112A17  OK           00897600
&ZCVAL                SETC '&ZCVAL DATAOFFSET'  INCORRECT KEY USED      00897700
.ZG112A17             AIF   (K'&WORBAREA LE 0).ZG112A18  OK             00897800
&ZCVAL                SETC '&ZCVAL WORBAREA'    INCORRECT KEY USED      00897900
.ZG112A18             AIF   (K'&DEIBAREA LE 0).ZG112A19  OK             00898000
&ZCVAL                SETC '&ZCVAL DEIBAREA'    INCORRECT KEY USED      00898100
.ZG112A19             AIF   (K'&CASTOUTLIST LE 0).ZG112A20  OK          00898200
&ZCVAL                SETC '&ZCVAL CASTOUTLIST'  INCORRECT KEY USED     00898300
.ZG112A20             AIF   (K'&FIRSTNAME LE 0).ZG112A21  OK            00898400
&ZCVAL                SETC '&ZCVAL FIRSTNAME'   INCORRECT KEY USED      00898500
.ZG112A21             AIF   (K'&LASTNAME LE 0).ZG112A22  OK             00898600
&ZCVAL                SETC '&ZCVAL LASTNAME'    INCORRECT KEY USED      00898700
.ZG112A22             AIF   (K'&CUNBAREA LE 0).ZG112A23  OK             00898800
&ZCVAL                SETC '&ZCVAL CUNBAREA'    INCORRECT KEY USED      00898900
.ZG112A23             AIF   (K'&ERRORACTION LE 0).ZG112A24  OK          00899000
&ZCVAL                SETC '&ZCVAL ERRORACTION'  INCORRECT KEY USED     00899100
.ZG112A24             AIF   (K'&DELETETYPE LE 0).ZG112A25  OK           00899200
&ZCVAL                SETC '&ZCVAL DELETETYPE'  INCORRECT KEY USED      00899300
.ZG112A25             AIF   (K'&HALTONCHANGED LE 0).ZG112A26  OK        00899400
&ZCVAL                SETC '&ZCVAL HALTONCHANGED'  INCORRECT KEY USED   00899500
.ZG112A26             AIF   (K'&SUPPCROSSINVAL LE 0).ZG112A27  OK       00899600
&ZCVAL                SETC '&ZCVAL SUPPCROSSINVAL'  INCORRECT KEY USED  00899700
.ZG112A27             AIF   (K'&DIRINFOFMT LE 0).ZG112A28  OK           00899800
&ZCVAL                SETC '&ZCVAL DIRINFOFMT'  INCORRECT KEY USED      00899900
.ZG112A28             AIF   (K'&RTATYPE LE 0).ZG112A29  OK              00900000
&ZCVAL                SETC '&ZCVAL RTATYPE'     INCORRECT KEY USED      00900100
.ZG112A29             AIF   (K'&CRITERIA LE 0).ZG112A30  OK             00900200
&ZCVAL                SETC '&ZCVAL CRITERIA'    INCORRECT KEY USED      00900300
.ZG112A30             AIF   (K'&COCLASSB LE 0).ZG112A31  OK             00900400
&ZCVAL                SETC '&ZCVAL COCLASSB'    INCORRECT KEY USED      00900500
.ZG112A31             AIF   (K'&COCLASSE LE 0).ZG112A32  OK             00900600
&ZCVAL                SETC '&ZCVAL COCLASSE'    INCORRECT KEY USED      00900700
.ZG112A32             AIF   (K'&COSTATSFMT LE 0).ZG112A33  OK           00900800
&ZCVAL                SETC '&ZCVAL COSTATSFMT'  INCORRECT KEY USED      00900900
.ZG112A33             AIF   (K'&STGSTATS LE 0).ZG112A34  OK             00901000
&ZCVAL                SETC '&ZCVAL STGSTATS'    INCORRECT KEY USED      00901100
.ZG112A34             AIF   (K'&NUMNAMES LE 0).ZG112A35  OK             00901200
&ZCVAL                SETC '&ZCVAL NUMNAMES'    INCORRECT KEY USED      00901300
.ZG112A35             AIF   (K'&REPEAT LE 0).ZG112A36  OK               00901400
&ZCVAL                SETC '&ZCVAL REPEAT'      INCORRECT KEY USED      00901500
.ZG112A36             AIF   (K'&RECLVCTR LE 0).ZG112A37  OK             00901600
&ZCVAL                SETC '&ZCVAL RECLVCTR'    INCORRECT KEY USED      00901700
.ZG112A37             AIF   (K'&ZCVAL LE 0).ZG112A38  OK                00901800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00901900
                      AIF  (K'&ZCVAL LE 160).ZG112A38A                  00902000
&ZCVAL                SETC '&ZCVAL'(1,160)                              00902100
&ZCVAL                SETC '&ZCVAL....'                                 00902200
.ZG112A38A            ANOP                                              00902300
&ZMS                  SETC  '"REQUEST'                                  00902400
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00902500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00902600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00902700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00902800
.ZG112A38             ANOP  ,                                           00902900
.*----------------------------------------------------------------***   00903000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00903100
                      AIF   (N'&STARTINDEX LE 1).ZG114A  CK NUM         00903200
&ZMS                  SETC  '"STARTINDEX='                              00903300
&ZMS                  SETC  '&ZMS.&STARTINDEX"'                         00903400
&ZMS                  SETC  '&ZMS "STARTINDEX"'                         00903500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00903600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00903700
.ZG114A               ANOP  ,                                           00903800
.*-------------------------------------------------------------------   00903900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00904000
&ZXSTARTINDEX         SETC  'INPUT'     SET IN/OUTPUT                   00904100
&XSTARTINDEX          SETC  '&STARTINDEX(1)'    SET XVARIABLE           00904200
                      AIF   (N'&STARTINDEX GT 1).ZG114B  MULTI          00904300
&XSTARTINDEX          SETC  '&STARTINDEX'       SET XVARIABLE           00904400
.ZG114B               AIF   (K'&STARTINDEX(1) GT 0).ZG114C              00904500
&ZXSTARTINDEX         SETC  ''          RESET IN/OUTPUT                 00904600
&ZMS                  SETC  ' '                                         00904700
&ZMS                  SETC  '&ZMS "STARTINDEX" KEY AND ITS'             00904800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00904900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00905000
.ZG114C               ANOP  ,                                           00905100
.*-------------------------------------------------------------------   00905200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00905300
                      AIF   (K'&ZXSTARTINDEX LE 0).ZG114R  NOT I/O      00905400
                      AIF   ('&XSTARTINDEX'(1,1) NE '(').ZG114R         00905500
&ZCGPR                SETC  '&XSTARTINDEX'(2,K'&XSTARTINDEX-2)          00905600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG114P               00905700
                      AIF   (K'&ZCGPR GT 2).ZG114Q                      00905800
                      AIF   ('&ZCGPR' EQ '0').ZG114Q                    00905900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00906000
                      AIF   (T'&ZCGPR NE 'N').ZG114Q  INVALID REG NAME  00906100
.ZG114P               ANOP  ,                                           00906200
                      AIF   (T'&ZCGPR NE 'N').ZG114R  NON NUMERIC       00906300
                      AIF   ('&ZCGPR' LT '2').ZG114Q                    00906400
                      AIF   ('&ZCGPR' LE '12').ZG114R                   00906500
.ZG114Q               ANOP  ,                                           00906600
&ZMS                  SETC  '"STARTINDEX='                              00906700
&ZMS                  SETC  '&ZMS.&STARTINDEX"'                         00906800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00906900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00907000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00907100
.ZG114R               ANOP  ,                                           00907200
.*----------------------------------------------------------------***   00907300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00907400
                      AIF   (N'&ENDINDEX LE 1).ZG117A  CK NUM           00907500
&ZMS                  SETC  '"ENDINDEX='                                00907600
&ZMS                  SETC  '&ZMS.&ENDINDEX"'                           00907700
&ZMS                  SETC  '&ZMS "ENDINDEX"'                           00907800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00907900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00908000
.ZG117A               ANOP  ,                                           00908100
.*-------------------------------------------------------------------   00908200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00908300
&ZXENDINDEX           SETC  'INPUT'     SET IN/OUTPUT                   00908400
&XENDINDEX            SETC  '&ENDINDEX(1)'      SET XVARIABLE           00908500
                      AIF   (N'&ENDINDEX GT 1).ZG117B  MULTI            00908600
&XENDINDEX            SETC  '&ENDINDEX'         SET XVARIABLE           00908700
.ZG117B               AIF   (K'&ENDINDEX(1) GT 0).ZG117C                00908800
&ZXENDINDEX           SETC  ''          RESET IN/OUTPUT                 00908900
&ZMS                  SETC  ' '                                         00909000
&ZMS                  SETC  '&ZMS "ENDINDEX" KEY AND ITS'               00909100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00909200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00909300
.ZG117C               ANOP  ,                                           00909400
.*-------------------------------------------------------------------   00909500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00909600
                      AIF   (K'&ZXENDINDEX LE 0).ZG117R  NOT I/O        00909700
                      AIF   ('&XENDINDEX'(1,1) NE '(').ZG117R           00909800
&ZCGPR                SETC  '&XENDINDEX'(2,K'&XENDINDEX-2)              00909900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG117P               00910000
                      AIF   (K'&ZCGPR GT 2).ZG117Q                      00910100
                      AIF   ('&ZCGPR' EQ '0').ZG117Q                    00910200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00910300
                      AIF   (T'&ZCGPR NE 'N').ZG117Q  INVALID REG NAME  00910400
.ZG117P               ANOP  ,                                           00910500
                      AIF   (T'&ZCGPR NE 'N').ZG117R  NON NUMERIC       00910600
                      AIF   ('&ZCGPR' LT '2').ZG117Q                    00910700
                      AIF   ('&ZCGPR' LE '12').ZG117R                   00910800
.ZG117Q               ANOP  ,                                           00910900
&ZMS                  SETC  '"ENDINDEX='                                00911000
&ZMS                  SETC  '&ZMS.&ENDINDEX"'                           00911100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00911200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00911300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00911400
.ZG117R               ANOP  ,                                           00911500
.*----------------------------------------------------------------***   00911600
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00911700
                      AIF   (N'&NSBAREA LE 1).ZG120A  CK NUM            00911800
&ZMS                  SETC  '"NSBAREA='                                 00911900
&ZMS                  SETC  '&ZMS.&NSBAREA"'                            00912000
&ZMS                  SETC  '&ZMS "NSBAREA"'                            00912100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00912200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00912300
.ZG120A               ANOP  ,                                           00912400
.*-------------------------------------------------------------------   00912500
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00912600
&ZXNSBAREA            SETC  'OUTPUT'    SET IN/OUTPUT                   00912700
&XNSBAREA             SETC  '&NSBAREA(1)'       SET XVARIABLE           00912800
                      AIF   (N'&NSBAREA GT 1).ZG120B  MULTI             00912900
&XNSBAREA             SETC  '&NSBAREA'  SET XVARIABLE                   00913000
.ZG120B               AIF   (K'&NSBAREA(1) GT 0).ZG120C                 00913100
&ZXNSBAREA            SETC  ''          RESET IN/OUTPUT                 00913200
&ZMS                  SETC  ' '                                         00913300
&ZMS                  SETC  '&ZMS "NSBAREA" KEY AND ITS'                00913400
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00913500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00913600
.ZG120C               ANOP  ,                                           00913700
.*-------------------------------------------------------------------   00913800
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00913900
                      AIF   (K'&ZXNSBAREA LE 0).ZG120R  NOT I/O         00914000
                      AIF   ('&XNSBAREA'(1,1) NE '(').ZG120R            00914100
&ZCGPR                SETC  '&XNSBAREA'(2,K'&XNSBAREA-2)                00914200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG120P               00914300
                      AIF   (K'&ZCGPR GT 2).ZG120Q                      00914400
                      AIF   ('&ZCGPR' EQ '0').ZG120Q                    00914500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00914600
                      AIF   (T'&ZCGPR NE 'N').ZG120Q  INVALID REG NAME  00914700
.ZG120P               ANOP  ,                                           00914800
                      AIF   (T'&ZCGPR NE 'N').ZG120R  NON NUMERIC       00914900
                      AIF   ('&ZCGPR' LT '2').ZG120Q                    00915000
                      AIF   ('&ZCGPR' LE '12').ZG120R                   00915100
.ZG120Q               ANOP  ,                                           00915200
&ZMS                  SETC  '"NSBAREA='                                 00915300
&ZMS                  SETC  '&ZMS.&NSBAREA"'                            00915400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00915500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00915600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00915700
.ZG120R               ANOP  ,                                           00915800
.*----------------------------------------------------------------***   00915900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00916000
                      AIF   (N'&AXIOVERRIDE LE 1).ZG123A  CK NUM        00916100
&ZMS                  SETC  '"AXIOVERRIDE='                             00916200
&ZMS                  SETC  '&ZMS.&AXIOVERRIDE"'                        00916300
&ZMS                  SETC  '&ZMS "AXIOVERRIDE"'                        00916400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00916500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00916600
.ZG123A               ANOP  ,                                           00916700
.*-------------------------------------------------------------------   00916800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00916900
&ZXAXIOVERRIDE        SETC  'INPUT'     SET IN/OUTPUT                   00917000
&XAXIOVERRIDE         SETC  '0'                                         00917100
                      AIF   (K'&AXIOVERRIDE(1) LE 0).ZG123B  PARM       00917200
&XAXIOVERRIDE         SETC  '&AXIOVERRIDE(1)'   SET XVARIABLE           00917300
                      AIF   (N'&AXIOVERRIDE GT 1).ZG123B  MULTI         00917400
&XAXIOVERRIDE         SETC  '&AXIOVERRIDE'      SET XVARIABLE           00917500
.ZG123B               ANOP  ,                                           00917600
.*-------------------------------------------------------------------   00917700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00917800
                      AIF   (K'&ZXAXIOVERRIDE LE 0).ZG123R  NOT I/O     00917900
         AIF   ('&XAXIOVERRIDE' EQ '0').ZG123R                          00918000
                      AIF   ('&XAXIOVERRIDE'(1,1) NE '(').ZG123R        00918100
&ZCGPR                SETC  '&XAXIOVERRIDE'(2,K'&XAXIOVERRIDE-2)        00918200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG123P               00918300
                      AIF   (K'&ZCGPR GT 2).ZG123Q                      00918400
                      AIF   ('&ZCGPR' EQ '0').ZG123Q                    00918500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00918600
                      AIF   (T'&ZCGPR NE 'N').ZG123Q  INVALID REG NAME  00918700
.ZG123P               ANOP  ,                                           00918800
                      AIF   (T'&ZCGPR NE 'N').ZG123R  NON NUMERIC       00918900
                      AIF   ('&ZCGPR' LT '2').ZG123Q                    00919000
                      AIF   ('&ZCGPR' LE '12').ZG123R                   00919100
.ZG123Q               ANOP  ,                                           00919200
&ZMS                  SETC  '"AXIOVERRIDE='                             00919300
&ZMS                  SETC  '&ZMS.&AXIOVERRIDE"'                        00919400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00919500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00919600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00919700
.ZG123R               ANOP  ,                                           00919800
.*-------------------------------------------------------------------   00919900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00920000
.ZG125                ANOP  ,                                           00920100
&ZTLC                 SETC 'CASTOUT_DATA'                               00920200
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG134            00920300
&XREQUEST             SETC  'CASTOUT_DATA'      SET KEYWORD             00920400
                      AIF   (N'&REQUEST LE 1).ZG125A  CK NUM            00920500
&ZMS                  SETC  '"REQUEST='                                 00920600
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00920700
&ZMS                  SETC  '&ZMS "REQUEST"'                            00920800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00920900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00921000
.ZG125A               ANOP  ,                                           00921100
.*------------------------------------------------------------------    00921200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00921300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00921400
.ZG125A0              AIF   (K'&ASSIGN LE 0).ZG125A1  OK                00921500
&ZCVAL                SETC '&ZCVAL ASSIGN'      INCORRECT KEY USED      00921600
.ZG125A1              AIF   (K'&RETURNDATA LE 0).ZG125A2  OK            00921700
&ZCVAL                SETC '&ZCVAL RETURNDATA'  INCORRECT KEY USED      00921800
.ZG125A2              AIF   (K'&AXIOVERRIDE LE 0).ZG125A3  OK           00921900
&ZCVAL                SETC '&ZCVAL AXIOVERRIDE'  INCORRECT KEY USED     00922000
.ZG125A3              AIF   (K'&WHENREG LE 0).ZG125A4  OK               00922100
&ZCVAL                SETC '&ZCVAL WHENREG'     INCORRECT KEY USED      00922200
.ZG125A4              AIF   (K'&LOCALREGCNTL LE 0).ZG125A5  OK          00922300
&ZCVAL                SETC '&ZCVAL LOCALREGCNTL'  INCORRECT KEY USED    00922400
.ZG125A5              AIF   (K'&VERSCOMP LE 0).ZG125A6  OK              00922500
&ZCVAL                SETC '&ZCVAL VERSCOMP'    INCORRECT KEY USED      00922600
.ZG125A6              AIF   (K'&VERSCOMPTYPE LE 0).ZG125A7  OK          00922700
&ZCVAL                SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED    00922800
.ZG125A7              AIF   (K'&VERSUPDATE LE 0).ZG125A8  OK            00922900
&ZCVAL                SETC '&ZCVAL VERSUPDATE'  INCORRECT KEY USED      00923000
.ZG125A8              AIF   (K'&NEWVERS LE 0).ZG125A9  OK               00923100
&ZCVAL                SETC '&ZCVAL NEWVERS'     INCORRECT KEY USED      00923200
.ZG125A9              AIF   (K'&CHANGED LE 0).ZG125A10  OK              00923300
&ZCVAL                SETC '&ZCVAL CHANGED'     INCORRECT KEY USED      00923400
.ZG125A10             AIF   (K'&CROSSINVAL LE 0).ZG125A11  OK           00923500
&ZCVAL                SETC '&ZCVAL CROSSINVAL'  INCORRECT KEY USED      00923600
.ZG125A11             AIF   (K'&GETCOLOCK LE 0).ZG125A12  OK            00923700
&ZCVAL                SETC '&ZCVAL GETCOLOCK'   INCORRECT KEY USED      00923800
.ZG125A12             AIF   (K'&PARITY LE 0).ZG125A13  OK               00923900
&ZCVAL                SETC '&ZCVAL PARITY'      INCORRECT KEY USED      00924000
.ZG125A13             AIF   (K'&USERDATA LE 0).ZG125A14  OK             00924100
&ZCVAL                SETC '&ZCVAL USERDATA'    INCORRECT KEY USED      00924200
.ZG125A14             AIF   (K'&ELEMNUM LE 0).ZG125A15  OK              00924300
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      00924400
.ZG125A15             AIF   (K'&STARTINDEX LE 0).ZG125A16  OK           00924500
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00924600
.ZG125A16             AIF   (K'&ENDINDEX LE 0).ZG125A17  OK             00924700
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00924800
.ZG125A17             AIF   (K'&DATAOFFSET LE 0).ZG125A18  OK           00924900
&ZCVAL                SETC '&ZCVAL DATAOFFSET'  INCORRECT KEY USED      00925000
.ZG125A18             AIF   (K'&WORBAREA LE 0).ZG125A19  OK             00925100
&ZCVAL                SETC '&ZCVAL WORBAREA'    INCORRECT KEY USED      00925200
.ZG125A19             AIF   (K'&NSBAREA LE 0).ZG125A20  OK              00925300
&ZCVAL                SETC '&ZCVAL NSBAREA'     INCORRECT KEY USED      00925400
.ZG125A20             AIF   (K'&DEIBAREA LE 0).ZG125A21  OK             00925500
&ZCVAL                SETC '&ZCVAL DEIBAREA'    INCORRECT KEY USED      00925600
.ZG125A21             AIF   (K'&CASTOUTLIST LE 0).ZG125A22  OK          00925700
&ZCVAL                SETC '&ZCVAL CASTOUTLIST'  INCORRECT KEY USED     00925800
.ZG125A22             AIF   (K'&FIRSTNAME LE 0).ZG125A23  OK            00925900
&ZCVAL                SETC '&ZCVAL FIRSTNAME'   INCORRECT KEY USED      00926000
.ZG125A23             AIF   (K'&LASTNAME LE 0).ZG125A24  OK             00926100
&ZCVAL                SETC '&ZCVAL LASTNAME'    INCORRECT KEY USED      00926200
.ZG125A24             AIF   (K'&CUNBAREA LE 0).ZG125A25  OK             00926300
&ZCVAL                SETC '&ZCVAL CUNBAREA'    INCORRECT KEY USED      00926400
.ZG125A25             AIF   (K'&ERRORACTION LE 0).ZG125A26  OK          00926500
&ZCVAL                SETC '&ZCVAL ERRORACTION'  INCORRECT KEY USED     00926600
.ZG125A26             AIF   (K'&DELETETYPE LE 0).ZG125A27  OK           00926700
&ZCVAL                SETC '&ZCVAL DELETETYPE'  INCORRECT KEY USED      00926800
.ZG125A27             AIF   (K'&HALTONCHANGED LE 0).ZG125A28  OK        00926900
&ZCVAL                SETC '&ZCVAL HALTONCHANGED'  INCORRECT KEY USED   00927000
.ZG125A28             AIF   (K'&SUPPCROSSINVAL LE 0).ZG125A29  OK       00927100
&ZCVAL                SETC '&ZCVAL SUPPCROSSINVAL'  INCORRECT KEY USED  00927200
.ZG125A29             AIF   (K'&DIRINFOFMT LE 0).ZG125A30  OK           00927300
&ZCVAL                SETC '&ZCVAL DIRINFOFMT'  INCORRECT KEY USED      00927400
.ZG125A30             AIF   (K'&RTATYPE LE 0).ZG125A31  OK              00927500
&ZCVAL                SETC '&ZCVAL RTATYPE'     INCORRECT KEY USED      00927600
.ZG125A31             AIF   (K'&CRITERIA LE 0).ZG125A32  OK             00927700
&ZCVAL                SETC '&ZCVAL CRITERIA'    INCORRECT KEY USED      00927800
.ZG125A32             AIF   (K'&COCLASSB LE 0).ZG125A33  OK             00927900
&ZCVAL                SETC '&ZCVAL COCLASSB'    INCORRECT KEY USED      00928000
.ZG125A33             AIF   (K'&COCLASSE LE 0).ZG125A34  OK             00928100
&ZCVAL                SETC '&ZCVAL COCLASSE'    INCORRECT KEY USED      00928200
.ZG125A34             AIF   (K'&COSTATSFMT LE 0).ZG125A35  OK           00928300
&ZCVAL                SETC '&ZCVAL COSTATSFMT'  INCORRECT KEY USED      00928400
.ZG125A35             AIF   (K'&STGSTATS LE 0).ZG125A36  OK             00928500
&ZCVAL                SETC '&ZCVAL STGSTATS'    INCORRECT KEY USED      00928600
.ZG125A36             AIF   (K'&NUMNAMES LE 0).ZG125A37  OK             00928700
&ZCVAL                SETC '&ZCVAL NUMNAMES'    INCORRECT KEY USED      00928800
.ZG125A37             AIF   (K'&REPEAT LE 0).ZG125A38  OK               00928900
&ZCVAL                SETC '&ZCVAL REPEAT'      INCORRECT KEY USED      00929000
.ZG125A38             AIF   (K'&RECLVCTR LE 0).ZG125A39  OK             00929100
&ZCVAL                SETC '&ZCVAL RECLVCTR'    INCORRECT KEY USED      00929200
.ZG125A39             AIF   (K'&ZCVAL LE 0).ZG125A40  OK                00929300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00929400
                      AIF  (K'&ZCVAL LE 160).ZG125A40A                  00929500
&ZCVAL                SETC '&ZCVAL'(1,160)                              00929600
&ZCVAL                SETC '&ZCVAL....'                                 00929700
.ZG125A40A            ANOP                                              00929800
&ZMS                  SETC  '"REQUEST'                                  00929900
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00930000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00930100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00930200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00930300
.ZG125A40             ANOP  ,                                           00930400
.*----------------------------------------------------------------***   00930500
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00930600
                      AIF   (N'&REGUSER LE 1).ZG127A  CK NUM            00930700
&ZMS                  SETC  '"REGUSER='                                 00930800
&ZMS                  SETC  '&ZMS.&REGUSER"'                            00930900
&ZMS                  SETC  '&ZMS "REGUSER"'                            00931000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00931100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00931200
.ZG127A               ANOP  ,                                           00931300
.*-------------------------------------------------------------------   00931400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00931500
&XREGUSER             SETC  ''          INITIALIZE XVARIABLE            00931600
.ZG128A   AIF   ('&REGUSER(1)' NE 'NO').ZG129A                          00931700
&XREGUSER             SETC  'NO'        SET KEYWORD                     00931800
.*-------------------------------------------------------------------   00931900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00932000
.ZG129A   AIF   ('&REGUSER(1)' NE 'YES').ZG130A                         00932100
&XREGUSER             SETC  'YES'       SET KEYWORD                     00932200
.*-------------------------------------------------------------------   00932300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00932400
.ZG130A               AIF   (K'&XREGUSER GT 0).ZG130C  KEYWORD          00932500
                      AIF   (K'&REGUSER(1) LE 0).ZG130B                 00932600
&ZMS                  SETC  '"REGUSER='                                 00932700
&ZMS                  SETC  '&ZMS.&REGUSER"'                            00932800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   00932900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         00933000
&ZMS                  SETC  '&ZMS "NO"'                                 00933100
&ZMS                  SETC  '&ZMS OR "YES".'                            00933200
                      MNOTE 8,' &ZMS '                                  00933300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00933400
.ZG130B               ANOP  ,                                           00933500
&XREGUSER             SETC  'NO'        SET DEFAULT KEYWORD             00933600
.ZG130C               ANOP  ,                                           00933700
&ZXREGUSER            SETC  'INPUT'     SET IN/OUTPUT                   00933800
.*----------------------------------------------------------------***   00933900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00934000
                      AIF   (N'&PROCESSID LE 1).ZG132A  CK NUM          00934100
&ZMS                  SETC  '"PROCESSID='                               00934200
&ZMS                  SETC  '&ZMS.&PROCESSID"'                          00934300
&ZMS                  SETC  '&ZMS "PROCESSID"'                          00934400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00934500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00934600
.ZG132A               ANOP  ,                                           00934700
.*-------------------------------------------------------------------   00934800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00934900
&ZXPROCESSID          SETC  'INPUT'     SET IN/OUTPUT                   00935000
&XPROCESSID           SETC  'NO_PROCESSID'                              00935100
                      AIF   (K'&PROCESSID(1) LE 0).ZG132B  PARM         00935200
&XPROCESSID           SETC  '&PROCESSID(1)'     SET XVARIABLE           00935300
                      AIF   (N'&PROCESSID GT 1).ZG132B  MULTI           00935400
&XPROCESSID           SETC  '&PROCESSID'        SET XVARIABLE           00935500
.ZG132B               ANOP  ,                                           00935600
.*-------------------------------------------------------------------   00935700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00935800
                      AIF   (K'&ZXPROCESSID LE 0).ZG132R  NOT I/O       00935900
         AIF   ('&XPROCESSID' EQ 'NO_PROCESSID').ZG132R                 00936000
                      AIF   ('&XPROCESSID'(1,1) NE '(').ZG132R          00936100
&ZCGPR                SETC  '&XPROCESSID'(2,K'&XPROCESSID-2)            00936200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG132P               00936300
                      AIF   (K'&ZCGPR GT 2).ZG132Q                      00936400
                      AIF   ('&ZCGPR' EQ '0').ZG132Q                    00936500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00936600
                      AIF   (T'&ZCGPR NE 'N').ZG132Q  INVALID REG NAME  00936700
.ZG132P               ANOP  ,                                           00936800
                      AIF   (T'&ZCGPR NE 'N').ZG132R  NON NUMERIC       00936900
                      AIF   ('&ZCGPR' LT '2').ZG132Q                    00937000
                      AIF   ('&ZCGPR' LE '12').ZG132R                   00937100
.ZG132Q               ANOP  ,                                           00937200
&ZMS                  SETC  '"PROCESSID='                               00937300
&ZMS                  SETC  '&ZMS.&PROCESSID"'                          00937400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00937500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00937600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00937700
.ZG132R               ANOP  ,                                           00937800
.*-------------------------------------------------------------------   00937900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00938000
.ZG134                ANOP  ,                                           00938100
&ZTLC                 SETC 'CASTOUT_DATALIST'                           00938200
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG150            00938300
&XREQUEST             SETC  'CASTOUT_DATALIST'  SET KEYWORD             00938400
                      AIF   (N'&REQUEST LE 1).ZG134A  CK NUM            00938500
&ZMS                  SETC  '"REQUEST='                                 00938600
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00938700
&ZMS                  SETC  '&ZMS "REQUEST"'                            00938800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00938900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00939000
.ZG134A               ANOP  ,                                           00939100
.*------------------------------------------------------------------    00939200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00939300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00939400
.ZG134A0              AIF   (K'&ASSIGN LE 0).ZG134A1  OK                00939500
&ZCVAL                SETC '&ZCVAL ASSIGN'      INCORRECT KEY USED      00939600
.ZG134A1              AIF   (K'&REGUSER LE 0).ZG134A2  OK               00939700
&ZCVAL                SETC '&ZCVAL REGUSER'     INCORRECT KEY USED      00939800
.ZG134A2              AIF   (K'&RETURNDATA LE 0).ZG134A3  OK            00939900
&ZCVAL                SETC '&ZCVAL RETURNDATA'  INCORRECT KEY USED      00940000
.ZG134A3              AIF   (K'&AXIOVERRIDE LE 0).ZG134A4  OK           00940100
&ZCVAL                SETC '&ZCVAL AXIOVERRIDE'  INCORRECT KEY USED     00940200
.ZG134A4              AIF   (K'&WHENREG LE 0).ZG134A5  OK               00940300
&ZCVAL                SETC '&ZCVAL WHENREG'     INCORRECT KEY USED      00940400
.ZG134A5              AIF   (K'&LOCALREGCNTL LE 0).ZG134A6  OK          00940500
&ZCVAL                SETC '&ZCVAL LOCALREGCNTL'  INCORRECT KEY USED    00940600
.ZG134A6              AIF   (K'&VERSCOMP LE 0).ZG134A7  OK              00940700
&ZCVAL                SETC '&ZCVAL VERSCOMP'    INCORRECT KEY USED      00940800
.ZG134A7              AIF   (K'&VERSCOMPTYPE LE 0).ZG134A8  OK          00940900
&ZCVAL                SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED    00941000
.ZG134A8              AIF   (K'&VERSUPDATE LE 0).ZG134A9  OK            00941100
&ZCVAL                SETC '&ZCVAL VERSUPDATE'  INCORRECT KEY USED      00941200
.ZG134A9              AIF   (K'&NEWVERS LE 0).ZG134A10  OK              00941300
&ZCVAL                SETC '&ZCVAL NEWVERS'     INCORRECT KEY USED      00941400
.ZG134A10             AIF   (K'&CHANGED LE 0).ZG134A11  OK              00941500
&ZCVAL                SETC '&ZCVAL CHANGED'     INCORRECT KEY USED      00941600
.ZG134A11             AIF   (K'&CROSSINVAL LE 0).ZG134A12  OK           00941700
&ZCVAL                SETC '&ZCVAL CROSSINVAL'  INCORRECT KEY USED      00941800
.ZG134A12             AIF   (K'&GETCOLOCK LE 0).ZG134A13  OK            00941900
&ZCVAL                SETC '&ZCVAL GETCOLOCK'   INCORRECT KEY USED      00942000
.ZG134A13             AIF   (K'&PARITY LE 0).ZG134A14  OK               00942100
&ZCVAL                SETC '&ZCVAL PARITY'      INCORRECT KEY USED      00942200
.ZG134A14             AIF   (K'&USERDATA LE 0).ZG134A15  OK             00942300
&ZCVAL                SETC '&ZCVAL USERDATA'    INCORRECT KEY USED      00942400
.ZG134A15             AIF   (K'&ELEMNUM LE 0).ZG134A16  OK              00942500
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      00942600
.ZG134A16             AIF   (K'&DATAOFFSET LE 0).ZG134A17  OK           00942700
&ZCVAL                SETC '&ZCVAL DATAOFFSET'  INCORRECT KEY USED      00942800
.ZG134A17             AIF   (K'&WORBAREA LE 0).ZG134A18  OK             00942900
&ZCVAL                SETC '&ZCVAL WORBAREA'    INCORRECT KEY USED      00943000
.ZG134A18             AIF   (K'&NSBAREA LE 0).ZG134A19  OK              00943100
&ZCVAL                SETC '&ZCVAL NSBAREA'     INCORRECT KEY USED      00943200
.ZG134A19             AIF   (K'&FIRSTNAME LE 0).ZG134A20  OK            00943300
&ZCVAL                SETC '&ZCVAL FIRSTNAME'   INCORRECT KEY USED      00943400
.ZG134A20             AIF   (K'&LASTNAME LE 0).ZG134A21  OK             00943500
&ZCVAL                SETC '&ZCVAL LASTNAME'    INCORRECT KEY USED      00943600
.ZG134A21             AIF   (K'&CUNBAREA LE 0).ZG134A22  OK             00943700
&ZCVAL                SETC '&ZCVAL CUNBAREA'    INCORRECT KEY USED      00943800
.ZG134A22             AIF   (K'&ERRORACTION LE 0).ZG134A23  OK          00943900
&ZCVAL                SETC '&ZCVAL ERRORACTION'  INCORRECT KEY USED     00944000
.ZG134A23             AIF   (K'&DELETETYPE LE 0).ZG134A24  OK           00944100
&ZCVAL                SETC '&ZCVAL DELETETYPE'  INCORRECT KEY USED      00944200
.ZG134A24             AIF   (K'&HALTONCHANGED LE 0).ZG134A25  OK        00944300
&ZCVAL                SETC '&ZCVAL HALTONCHANGED'  INCORRECT KEY USED   00944400
.ZG134A25             AIF   (K'&SUPPCROSSINVAL LE 0).ZG134A26  OK       00944500
&ZCVAL                SETC '&ZCVAL SUPPCROSSINVAL'  INCORRECT KEY USED  00944600
.ZG134A26             AIF   (K'&DIRINFOFMT LE 0).ZG134A27  OK           00944700
&ZCVAL                SETC '&ZCVAL DIRINFOFMT'  INCORRECT KEY USED      00944800
.ZG134A27             AIF   (K'&RTATYPE LE 0).ZG134A28  OK              00944900
&ZCVAL                SETC '&ZCVAL RTATYPE'     INCORRECT KEY USED      00945000
.ZG134A28             AIF   (K'&CRITERIA LE 0).ZG134A29  OK             00945100
&ZCVAL                SETC '&ZCVAL CRITERIA'    INCORRECT KEY USED      00945200
.ZG134A29             AIF   (K'&COCLASSB LE 0).ZG134A30  OK             00945300
&ZCVAL                SETC '&ZCVAL COCLASSB'    INCORRECT KEY USED      00945400
.ZG134A30             AIF   (K'&COCLASSE LE 0).ZG134A31  OK             00945500
&ZCVAL                SETC '&ZCVAL COCLASSE'    INCORRECT KEY USED      00945600
.ZG134A31             AIF   (K'&COSTATSFMT LE 0).ZG134A32  OK           00945700
&ZCVAL                SETC '&ZCVAL COSTATSFMT'  INCORRECT KEY USED      00945800
.ZG134A32             AIF   (K'&STGSTATS LE 0).ZG134A33  OK             00945900
&ZCVAL                SETC '&ZCVAL STGSTATS'    INCORRECT KEY USED      00946000
.ZG134A33             AIF   (K'&NUMNAMES LE 0).ZG134A34  OK             00946100
&ZCVAL                SETC '&ZCVAL NUMNAMES'    INCORRECT KEY USED      00946200
.ZG134A34             AIF   (K'&REPEAT LE 0).ZG134A35  OK               00946300
&ZCVAL                SETC '&ZCVAL REPEAT'      INCORRECT KEY USED      00946400
.ZG134A35             AIF   (K'&RECLVCTR LE 0).ZG134A36  OK             00946500
&ZCVAL                SETC '&ZCVAL RECLVCTR'    INCORRECT KEY USED      00946600
.ZG134A36             AIF   (K'&ZCVAL LE 0).ZG134A37  OK                00946700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00946800
                      AIF  (K'&ZCVAL LE 160).ZG134A37A                  00946900
&ZCVAL                SETC '&ZCVAL'(1,160)                              00947000
&ZCVAL                SETC '&ZCVAL....'                                 00947100
.ZG134A37A            ANOP                                              00947200
&ZMS                  SETC  '"REQUEST'                                  00947300
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00947400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00947500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00947600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00947700
.ZG134A37             ANOP  ,                                           00947800
.*----------------------------------------------------------------***   00947900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00948000
                      AIF   (N'&STARTINDEX LE 1).ZG136A  CK NUM         00948100
&ZMS                  SETC  '"STARTINDEX='                              00948200
&ZMS                  SETC  '&ZMS.&STARTINDEX"'                         00948300
&ZMS                  SETC  '&ZMS "STARTINDEX"'                         00948400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00948500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00948600
.ZG136A               ANOP  ,                                           00948700
.*-------------------------------------------------------------------   00948800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00948900
&ZXSTARTINDEX         SETC  'INPUT'     SET IN/OUTPUT                   00949000
&XSTARTINDEX          SETC  '&STARTINDEX(1)'    SET XVARIABLE           00949100
                      AIF   (N'&STARTINDEX GT 1).ZG136B  MULTI          00949200
&XSTARTINDEX          SETC  '&STARTINDEX'       SET XVARIABLE           00949300
.ZG136B               AIF   (K'&STARTINDEX(1) GT 0).ZG136C              00949400
&ZXSTARTINDEX         SETC  ''          RESET IN/OUTPUT                 00949500
&ZMS                  SETC  ' '                                         00949600
&ZMS                  SETC  '&ZMS "STARTINDEX" KEY AND ITS'             00949700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00949800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00949900
.ZG136C               ANOP  ,                                           00950000
.*-------------------------------------------------------------------   00950100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00950200
                      AIF   (K'&ZXSTARTINDEX LE 0).ZG136R  NOT I/O      00950300
                      AIF   ('&XSTARTINDEX'(1,1) NE '(').ZG136R         00950400
&ZCGPR                SETC  '&XSTARTINDEX'(2,K'&XSTARTINDEX-2)          00950500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG136P               00950600
                      AIF   (K'&ZCGPR GT 2).ZG136Q                      00950700
                      AIF   ('&ZCGPR' EQ '0').ZG136Q                    00950800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00950900
                      AIF   (T'&ZCGPR NE 'N').ZG136Q  INVALID REG NAME  00951000
.ZG136P               ANOP  ,                                           00951100
                      AIF   (T'&ZCGPR NE 'N').ZG136R  NON NUMERIC       00951200
                      AIF   ('&ZCGPR' LT '2').ZG136Q                    00951300
                      AIF   ('&ZCGPR' LE '12').ZG136R                   00951400
.ZG136Q               ANOP  ,                                           00951500
&ZMS                  SETC  '"STARTINDEX='                              00951600
&ZMS                  SETC  '&ZMS.&STARTINDEX"'                         00951700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00951800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00951900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00952000
.ZG136R               ANOP  ,                                           00952100
.*----------------------------------------------------------------***   00952200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00952300
                      AIF   (N'&ENDINDEX LE 1).ZG139A  CK NUM           00952400
&ZMS                  SETC  '"ENDINDEX='                                00952500
&ZMS                  SETC  '&ZMS.&ENDINDEX"'                           00952600
&ZMS                  SETC  '&ZMS "ENDINDEX"'                           00952700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00952800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00952900
.ZG139A               ANOP  ,                                           00953000
.*-------------------------------------------------------------------   00953100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00953200
&ZXENDINDEX           SETC  'INPUT'     SET IN/OUTPUT                   00953300
&XENDINDEX            SETC  '&ENDINDEX(1)'      SET XVARIABLE           00953400
                      AIF   (N'&ENDINDEX GT 1).ZG139B  MULTI            00953500
&XENDINDEX            SETC  '&ENDINDEX'         SET XVARIABLE           00953600
.ZG139B               AIF   (K'&ENDINDEX(1) GT 0).ZG139C                00953700
&ZXENDINDEX           SETC  ''          RESET IN/OUTPUT                 00953800
&ZMS                  SETC  ' '                                         00953900
&ZMS                  SETC  '&ZMS "ENDINDEX" KEY AND ITS'               00954000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00954100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00954200
.ZG139C               ANOP  ,                                           00954300
.*-------------------------------------------------------------------   00954400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00954500
                      AIF   (K'&ZXENDINDEX LE 0).ZG139R  NOT I/O        00954600
                      AIF   ('&XENDINDEX'(1,1) NE '(').ZG139R           00954700
&ZCGPR                SETC  '&XENDINDEX'(2,K'&XENDINDEX-2)              00954800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG139P               00954900
                      AIF   (K'&ZCGPR GT 2).ZG139Q                      00955000
                      AIF   ('&ZCGPR' EQ '0').ZG139Q                    00955100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00955200
                      AIF   (T'&ZCGPR NE 'N').ZG139Q  INVALID REG NAME  00955300
.ZG139P               ANOP  ,                                           00955400
                      AIF   (T'&ZCGPR NE 'N').ZG139R  NON NUMERIC       00955500
                      AIF   ('&ZCGPR' LT '2').ZG139Q                    00955600
                      AIF   ('&ZCGPR' LE '12').ZG139R                   00955700
.ZG139Q               ANOP  ,                                           00955800
&ZMS                  SETC  '"ENDINDEX='                                00955900
&ZMS                  SETC  '&ZMS.&ENDINDEX"'                           00956000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00956100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00956200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00956300
.ZG139R               ANOP  ,                                           00956400
.*----------------------------------------------------------------***   00956500
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00956600
                      AIF   (N'&DEIBAREA LE 1).ZG142A  CK NUM           00956700
&ZMS                  SETC  '"DEIBAREA='                                00956800
&ZMS                  SETC  '&ZMS.&DEIBAREA"'                           00956900
&ZMS                  SETC  '&ZMS "DEIBAREA"'                           00957000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00957100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00957200
.ZG142A               ANOP  ,                                           00957300
.*-------------------------------------------------------------------   00957400
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00957500
&ZXDEIBAREA           SETC  'OUTPUT'    SET IN/OUTPUT                   00957600
&XDEIBAREA            SETC  '&DEIBAREA(1)'      SET XVARIABLE           00957700
                      AIF   (N'&DEIBAREA GT 1).ZG142B  MULTI            00957800
&XDEIBAREA            SETC  '&DEIBAREA'         SET XVARIABLE           00957900
.ZG142B               AIF   (K'&DEIBAREA(1) GT 0).ZG142C                00958000
&ZXDEIBAREA           SETC  ''          RESET IN/OUTPUT                 00958100
&ZMS                  SETC  ' '                                         00958200
&ZMS                  SETC  '&ZMS "DEIBAREA" KEY AND ITS'               00958300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00958400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00958500
.ZG142C               ANOP  ,                                           00958600
.*-------------------------------------------------------------------   00958700
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00958800
                      AIF   (K'&ZXDEIBAREA LE 0).ZG142R  NOT I/O        00958900
                      AIF   ('&XDEIBAREA'(1,1) NE '(').ZG142R           00959000
&ZCGPR                SETC  '&XDEIBAREA'(2,K'&XDEIBAREA-2)              00959100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG142P               00959200
                      AIF   (K'&ZCGPR GT 2).ZG142Q                      00959300
                      AIF   ('&ZCGPR' EQ '0').ZG142Q                    00959400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00959500
                      AIF   (T'&ZCGPR NE 'N').ZG142Q  INVALID REG NAME  00959600
.ZG142P               ANOP  ,                                           00959700
                      AIF   (T'&ZCGPR NE 'N').ZG142R  NON NUMERIC       00959800
                      AIF   ('&ZCGPR' LT '2').ZG142Q                    00959900
                      AIF   ('&ZCGPR' LE '12').ZG142R                   00960000
.ZG142Q               ANOP  ,                                           00960100
&ZMS                  SETC  '"DEIBAREA='                                00960200
&ZMS                  SETC  '&ZMS.&DEIBAREA"'                           00960300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00960400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00960500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00960600
.ZG142R               ANOP  ,                                           00960700
.*----------------------------------------------------------------***   00960800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00960900
                      AIF   (N'&CASTOUTLIST LE 1).ZG145A  CK NUM        00961000
&ZMS                  SETC  '"CASTOUTLIST='                             00961100
&ZMS                  SETC  '&ZMS.&CASTOUTLIST"'                        00961200
&ZMS                  SETC  '&ZMS "CASTOUTLIST"'                        00961300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00961400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00961500
.ZG145A               ANOP  ,                                           00961600
.*-------------------------------------------------------------------   00961700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00961800
&ZXCASTOUTLIST        SETC  'INPUT'     SET IN/OUTPUT                   00961900
&XCASTOUTLIST         SETC  '&CASTOUTLIST(1)'   SET XVARIABLE           00962000
                      AIF   (N'&CASTOUTLIST GT 1).ZG145B  MULTI         00962100
&XCASTOUTLIST         SETC  '&CASTOUTLIST'      SET XVARIABLE           00962200
.ZG145B               AIF   (K'&CASTOUTLIST(1) GT 0).ZG145C             00962300
&ZXCASTOUTLIST        SETC  ''          RESET IN/OUTPUT                 00962400
&ZMS                  SETC  ' '                                         00962500
&ZMS                  SETC  '&ZMS "CASTOUTLIST" KEY AND ITS'            00962600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00962700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00962800
.ZG145C               ANOP  ,                                           00962900
.*-------------------------------------------------------------------   00963000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00963100
                      AIF   (K'&ZXCASTOUTLIST LE 0).ZG145R  NOT I/O     00963200
                      AIF   ('&XCASTOUTLIST'(1,1) NE '(').ZG145R        00963300
&ZCGPR                SETC  '&XCASTOUTLIST'(2,K'&XCASTOUTLIST-2)        00963400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG145P               00963500
                      AIF   (K'&ZCGPR GT 2).ZG145Q                      00963600
                      AIF   ('&ZCGPR' EQ '0').ZG145Q                    00963700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00963800
                      AIF   (T'&ZCGPR NE 'N').ZG145Q  INVALID REG NAME  00963900
.ZG145P               ANOP  ,                                           00964000
                      AIF   (T'&ZCGPR NE 'N').ZG145R  NON NUMERIC       00964100
                      AIF   ('&ZCGPR' LT '2').ZG145Q                    00964200
                      AIF   ('&ZCGPR' LE '12').ZG145R                   00964300
.ZG145Q               ANOP  ,                                           00964400
&ZMS                  SETC  '"CASTOUTLIST='                             00964500
&ZMS                  SETC  '&ZMS.&CASTOUTLIST"'                        00964600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00964700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00964800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00964900
.ZG145R               ANOP  ,                                           00965000
.*----------------------------------------------------------------***   00965100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00965200
                      AIF   (N'&PROCESSID LE 1).ZG148A  CK NUM          00965300
&ZMS                  SETC  '"PROCESSID='                               00965400
&ZMS                  SETC  '&ZMS.&PROCESSID"'                          00965500
&ZMS                  SETC  '&ZMS "PROCESSID"'                          00965600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00965700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00965800
.ZG148A               ANOP  ,                                           00965900
.*-------------------------------------------------------------------   00966000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00966100
&ZXPROCESSID          SETC  'INPUT'     SET IN/OUTPUT                   00966200
&XPROCESSID           SETC  'NO_PROCESSID'                              00966300
                      AIF   (K'&PROCESSID(1) LE 0).ZG148B  PARM         00966400
&XPROCESSID           SETC  '&PROCESSID(1)'     SET XVARIABLE           00966500
                      AIF   (N'&PROCESSID GT 1).ZG148B  MULTI           00966600
&XPROCESSID           SETC  '&PROCESSID'        SET XVARIABLE           00966700
.ZG148B               ANOP  ,                                           00966800
.*-------------------------------------------------------------------   00966900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00967000
                      AIF   (K'&ZXPROCESSID LE 0).ZG148R  NOT I/O       00967100
         AIF   ('&XPROCESSID' EQ 'NO_PROCESSID').ZG148R                 00967200
                      AIF   ('&XPROCESSID'(1,1) NE '(').ZG148R          00967300
&ZCGPR                SETC  '&XPROCESSID'(2,K'&XPROCESSID-2)            00967400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG148P               00967500
                      AIF   (K'&ZCGPR GT 2).ZG148Q                      00967600
                      AIF   ('&ZCGPR' EQ '0').ZG148Q                    00967700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00967800
                      AIF   (T'&ZCGPR NE 'N').ZG148Q  INVALID REG NAME  00967900
.ZG148P               ANOP  ,                                           00968000
                      AIF   (T'&ZCGPR NE 'N').ZG148R  NON NUMERIC       00968100
                      AIF   ('&ZCGPR' LT '2').ZG148Q                    00968200
                      AIF   ('&ZCGPR' LE '12').ZG148R                   00968300
.ZG148Q               ANOP  ,                                           00968400
&ZMS                  SETC  '"PROCESSID='                               00968500
&ZMS                  SETC  '&ZMS.&PROCESSID"'                          00968600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00968700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00968800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00968900
.ZG148R               ANOP  ,                                           00969000
.*-------------------------------------------------------------------   00969100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00969200
.ZG150                ANOP  ,                                           00969300
&ZTLC                 SETC 'UNLOCK_CASTOUT'                             00969400
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG160            00969500
&XREQUEST             SETC  'UNLOCK_CASTOUT'    SET KEYWORD             00969600
                      AIF   (N'&REQUEST LE 1).ZG150A  CK NUM            00969700
&ZMS                  SETC  '"REQUEST='                                 00969800
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00969900
&ZMS                  SETC  '&ZMS "REQUEST"'                            00970000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00970100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00970200
.ZG150A               ANOP  ,                                           00970300
.*------------------------------------------------------------------    00970400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00970500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00970600
.ZG150A0              AIF   (K'&ASSIGN LE 0).ZG150A1  OK                00970700
&ZCVAL                SETC '&ZCVAL ASSIGN'      INCORRECT KEY USED      00970800
.ZG150A1              AIF   (K'&REGUSER LE 0).ZG150A2  OK               00970900
&ZCVAL                SETC '&ZCVAL REGUSER'     INCORRECT KEY USED      00971000
.ZG150A2              AIF   (K'&RETURNDATA LE 0).ZG150A3  OK            00971100
&ZCVAL                SETC '&ZCVAL RETURNDATA'  INCORRECT KEY USED      00971200
.ZG150A3              AIF   (K'&AXIOVERRIDE LE 0).ZG150A4  OK           00971300
&ZCVAL                SETC '&ZCVAL AXIOVERRIDE'  INCORRECT KEY USED     00971400
.ZG150A4              AIF   (K'&WHENREG LE 0).ZG150A5  OK               00971500
&ZCVAL                SETC '&ZCVAL WHENREG'     INCORRECT KEY USED      00971600
.ZG150A5              AIF   (K'&LOCALREGCNTL LE 0).ZG150A6  OK          00971700
&ZCVAL                SETC '&ZCVAL LOCALREGCNTL'  INCORRECT KEY USED    00971800
.ZG150A6              AIF   (K'&VERSCOMP LE 0).ZG150A7  OK              00971900
&ZCVAL                SETC '&ZCVAL VERSCOMP'    INCORRECT KEY USED      00972000
.ZG150A7              AIF   (K'&VERSCOMPTYPE LE 0).ZG150A8  OK          00972100
&ZCVAL                SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED    00972200
.ZG150A8              AIF   (K'&VERSUPDATE LE 0).ZG150A9  OK            00972300
&ZCVAL                SETC '&ZCVAL VERSUPDATE'  INCORRECT KEY USED      00972400
.ZG150A9              AIF   (K'&NEWVERS LE 0).ZG150A10  OK              00972500
&ZCVAL                SETC '&ZCVAL NEWVERS'     INCORRECT KEY USED      00972600
.ZG150A10             AIF   (K'&CHANGED LE 0).ZG150A11  OK              00972700
&ZCVAL                SETC '&ZCVAL CHANGED'     INCORRECT KEY USED      00972800
.ZG150A11             AIF   (K'&CROSSINVAL LE 0).ZG150A12  OK           00972900
&ZCVAL                SETC '&ZCVAL CROSSINVAL'  INCORRECT KEY USED      00973000
.ZG150A12             AIF   (K'&GETCOLOCK LE 0).ZG150A13  OK            00973100
&ZCVAL                SETC '&ZCVAL GETCOLOCK'   INCORRECT KEY USED      00973200
.ZG150A13             AIF   (K'&PARITY LE 0).ZG150A14  OK               00973300
&ZCVAL                SETC '&ZCVAL PARITY'      INCORRECT KEY USED      00973400
.ZG150A14             AIF   (K'&USERDATA LE 0).ZG150A15  OK             00973500
&ZCVAL                SETC '&ZCVAL USERDATA'    INCORRECT KEY USED      00973600
.ZG150A15             AIF   (K'&ELEMNUM LE 0).ZG150A16  OK              00973700
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      00973800
.ZG150A16             AIF   (K'&STARTINDEX LE 0).ZG150A17  OK           00973900
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00974000
.ZG150A17             AIF   (K'&ENDINDEX LE 0).ZG150A18  OK             00974100
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00974200
.ZG150A18             AIF   (K'&DATAOFFSET LE 0).ZG150A19  OK           00974300
&ZCVAL                SETC '&ZCVAL DATAOFFSET'  INCORRECT KEY USED      00974400
.ZG150A19             AIF   (K'&WORBAREA LE 0).ZG150A20  OK             00974500
&ZCVAL                SETC '&ZCVAL WORBAREA'    INCORRECT KEY USED      00974600
.ZG150A20             AIF   (K'&NSBAREA LE 0).ZG150A21  OK              00974700
&ZCVAL                SETC '&ZCVAL NSBAREA'     INCORRECT KEY USED      00974800
.ZG150A21             AIF   (K'&DEIBAREA LE 0).ZG150A22  OK             00974900
&ZCVAL                SETC '&ZCVAL DEIBAREA'    INCORRECT KEY USED      00975000
.ZG150A22             AIF   (K'&CASTOUTLIST LE 0).ZG150A23  OK          00975100
&ZCVAL                SETC '&ZCVAL CASTOUTLIST'  INCORRECT KEY USED     00975200
.ZG150A23             AIF   (K'&CUNBAREA LE 0).ZG150A24  OK             00975300
&ZCVAL                SETC '&ZCVAL CUNBAREA'    INCORRECT KEY USED      00975400
.ZG150A24             AIF   (K'&ERRORACTION LE 0).ZG150A25  OK          00975500
&ZCVAL                SETC '&ZCVAL ERRORACTION'  INCORRECT KEY USED     00975600
.ZG150A25             AIF   (K'&DELETETYPE LE 0).ZG150A26  OK           00975700
&ZCVAL                SETC '&ZCVAL DELETETYPE'  INCORRECT KEY USED      00975800
.ZG150A26             AIF   (K'&HALTONCHANGED LE 0).ZG150A27  OK        00975900
&ZCVAL                SETC '&ZCVAL HALTONCHANGED'  INCORRECT KEY USED   00976000
.ZG150A27             AIF   (K'&SUPPCROSSINVAL LE 0).ZG150A28  OK       00976100
&ZCVAL                SETC '&ZCVAL SUPPCROSSINVAL'  INCORRECT KEY USED  00976200
.ZG150A28             AIF   (K'&DIRINFOFMT LE 0).ZG150A29  OK           00976300
&ZCVAL                SETC '&ZCVAL DIRINFOFMT'  INCORRECT KEY USED      00976400
.ZG150A29             AIF   (K'&RTATYPE LE 0).ZG150A30  OK              00976500
&ZCVAL                SETC '&ZCVAL RTATYPE'     INCORRECT KEY USED      00976600
.ZG150A30             AIF   (K'&CRITERIA LE 0).ZG150A31  OK             00976700
&ZCVAL                SETC '&ZCVAL CRITERIA'    INCORRECT KEY USED      00976800
.ZG150A31             AIF   (K'&COCLASSB LE 0).ZG150A32  OK             00976900
&ZCVAL                SETC '&ZCVAL COCLASSB'    INCORRECT KEY USED      00977000
.ZG150A32             AIF   (K'&COCLASSE LE 0).ZG150A33  OK             00977100
&ZCVAL                SETC '&ZCVAL COCLASSE'    INCORRECT KEY USED      00977200
.ZG150A33             AIF   (K'&COSTATSFMT LE 0).ZG150A34  OK           00977300
&ZCVAL                SETC '&ZCVAL COSTATSFMT'  INCORRECT KEY USED      00977400
.ZG150A34             AIF   (K'&STGSTATS LE 0).ZG150A35  OK             00977500
&ZCVAL                SETC '&ZCVAL STGSTATS'    INCORRECT KEY USED      00977600
.ZG150A35             AIF   (K'&NUMNAMES LE 0).ZG150A36  OK             00977700
&ZCVAL                SETC '&ZCVAL NUMNAMES'    INCORRECT KEY USED      00977800
.ZG150A36             AIF   (K'&REPEAT LE 0).ZG150A37  OK               00977900
&ZCVAL                SETC '&ZCVAL REPEAT'      INCORRECT KEY USED      00978000
.ZG150A37             AIF   (K'&RECLVCTR LE 0).ZG150A38  OK             00978100
&ZCVAL                SETC '&ZCVAL RECLVCTR'    INCORRECT KEY USED      00978200
.ZG150A38             AIF   (K'&ZCVAL LE 0).ZG150A39  OK                00978300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       00978400
                      AIF  (K'&ZCVAL LE 160).ZG150A39A                  00978500
&ZCVAL                SETC '&ZCVAL'(1,160)                              00978600
&ZCVAL                SETC '&ZCVAL....'                                 00978700
.ZG150A39A            ANOP                                              00978800
&ZMS                  SETC  '"REQUEST'                                  00978900
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           00979000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        00979100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        00979200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00979300
.ZG150A39             ANOP  ,                                           00979400
.*----------------------------------------------------------------***   00979500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00979600
                      AIF   (N'&FIRSTNAME LE 1).ZG152A  CK NUM          00979700
&ZMS                  SETC  '"FIRSTNAME='                               00979800
&ZMS                  SETC  '&ZMS.&FIRSTNAME"'                          00979900
&ZMS                  SETC  '&ZMS "FIRSTNAME"'                          00980000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00980100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00980200
.ZG152A               ANOP  ,                                           00980300
.*-------------------------------------------------------------------   00980400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00980500
&ZXFIRSTNAME          SETC  'INPUT'     SET IN/OUTPUT                   00980600
&XFIRSTNAME           SETC  '&FIRSTNAME(1)'     SET XVARIABLE           00980700
                      AIF   (N'&FIRSTNAME GT 1).ZG152B  MULTI           00980800
&XFIRSTNAME           SETC  '&FIRSTNAME'        SET XVARIABLE           00980900
.ZG152B               AIF   (K'&FIRSTNAME(1) GT 0).ZG152C               00981000
&ZXFIRSTNAME          SETC  ''          RESET IN/OUTPUT                 00981100
&ZMS                  SETC  ' '                                         00981200
&ZMS                  SETC  '&ZMS "FIRSTNAME" KEY AND ITS'              00981300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00981400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00981500
.ZG152C               ANOP  ,                                           00981600
.*-------------------------------------------------------------------   00981700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00981800
                      AIF   (K'&ZXFIRSTNAME LE 0).ZG152R  NOT I/O       00981900
                      AIF   ('&XFIRSTNAME'(1,1) NE '(').ZG152R          00982000
&ZCGPR                SETC  '&XFIRSTNAME'(2,K'&XFIRSTNAME-2)            00982100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG152P               00982200
                      AIF   (K'&ZCGPR GT 2).ZG152Q                      00982300
                      AIF   ('&ZCGPR' EQ '0').ZG152Q                    00982400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00982500
                      AIF   (T'&ZCGPR NE 'N').ZG152Q  INVALID REG NAME  00982600
.ZG152P               ANOP  ,                                           00982700
                      AIF   (T'&ZCGPR NE 'N').ZG152R  NON NUMERIC       00982800
                      AIF   ('&ZCGPR' LT '2').ZG152Q                    00982900
                      AIF   ('&ZCGPR' LE '12').ZG152R                   00983000
.ZG152Q               ANOP  ,                                           00983100
&ZMS                  SETC  '"FIRSTNAME='                               00983200
&ZMS                  SETC  '&ZMS.&FIRSTNAME"'                          00983300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00983400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00983500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00983600
.ZG152R               ANOP  ,                                           00983700
.*----------------------------------------------------------------***   00983800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00983900
                      AIF   (N'&LASTNAME LE 1).ZG155A  CK NUM           00984000
&ZMS                  SETC  '"LASTNAME='                                00984100
&ZMS                  SETC  '&ZMS.&LASTNAME"'                           00984200
&ZMS                  SETC  '&ZMS "LASTNAME"'                           00984300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00984400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00984500
.ZG155A               ANOP  ,                                           00984600
.*-------------------------------------------------------------------   00984700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00984800
&ZXLASTNAME           SETC  'INPUT'     SET IN/OUTPUT                   00984900
&XLASTNAME            SETC  '&LASTNAME(1)'      SET XVARIABLE           00985000
                      AIF   (N'&LASTNAME GT 1).ZG155B  MULTI            00985100
&XLASTNAME            SETC  '&LASTNAME'         SET XVARIABLE           00985200
.ZG155B               AIF   (K'&LASTNAME(1) GT 0).ZG155C                00985300
&ZXLASTNAME           SETC  ''          RESET IN/OUTPUT                 00985400
&ZMS                  SETC  ' '                                         00985500
&ZMS                  SETC  '&ZMS "LASTNAME" KEY AND ITS'               00985600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            00985700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00985800
.ZG155C               ANOP  ,                                           00985900
.*-------------------------------------------------------------------   00986000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00986100
                      AIF   (K'&ZXLASTNAME LE 0).ZG155R  NOT I/O        00986200
                      AIF   ('&XLASTNAME'(1,1) NE '(').ZG155R           00986300
&ZCGPR                SETC  '&XLASTNAME'(2,K'&XLASTNAME-2)              00986400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG155P               00986500
                      AIF   (K'&ZCGPR GT 2).ZG155Q                      00986600
                      AIF   ('&ZCGPR' EQ '0').ZG155Q                    00986700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00986800
                      AIF   (T'&ZCGPR NE 'N').ZG155Q  INVALID REG NAME  00986900
.ZG155P               ANOP  ,                                           00987000
                      AIF   (T'&ZCGPR NE 'N').ZG155R  NON NUMERIC       00987100
                      AIF   ('&ZCGPR' LT '2').ZG155Q                    00987200
                      AIF   ('&ZCGPR' LE '12').ZG155R                   00987300
.ZG155Q               ANOP  ,                                           00987400
&ZMS                  SETC  '"LASTNAME='                                00987500
&ZMS                  SETC  '&ZMS.&LASTNAME"'                           00987600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00987700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00987800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00987900
.ZG155R               ANOP  ,                                           00988000
.*----------------------------------------------------------------***   00988100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00988200
                      AIF   (N'&PROCESSID LE 1).ZG158A  CK NUM          00988300
&ZMS                  SETC  '"PROCESSID='                               00988400
&ZMS                  SETC  '&ZMS.&PROCESSID"'                          00988500
&ZMS                  SETC  '&ZMS "PROCESSID"'                          00988600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00988700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00988800
.ZG158A               ANOP  ,                                           00988900
.*-------------------------------------------------------------------   00989000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00989100
&ZXPROCESSID          SETC  'INPUT'     SET IN/OUTPUT                   00989200
&XPROCESSID           SETC  'NO_PROCESSID'                              00989300
                      AIF   (K'&PROCESSID(1) LE 0).ZG158B  PARM         00989400
&XPROCESSID           SETC  '&PROCESSID(1)'     SET XVARIABLE           00989500
                      AIF   (N'&PROCESSID GT 1).ZG158B  MULTI           00989600
&XPROCESSID           SETC  '&PROCESSID'        SET XVARIABLE           00989700
.ZG158B               ANOP  ,                                           00989800
.*-------------------------------------------------------------------   00989900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00990000
                      AIF   (K'&ZXPROCESSID LE 0).ZG158R  NOT I/O       00990100
         AIF   ('&XPROCESSID' EQ 'NO_PROCESSID').ZG158R                 00990200
                      AIF   ('&XPROCESSID'(1,1) NE '(').ZG158R          00990300
&ZCGPR                SETC  '&XPROCESSID'(2,K'&XPROCESSID-2)            00990400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG158P               00990500
                      AIF   (K'&ZCGPR GT 2).ZG158Q                      00990600
                      AIF   ('&ZCGPR' EQ '0').ZG158Q                    00990700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               00990800
                      AIF   (T'&ZCGPR NE 'N').ZG158Q  INVALID REG NAME  00990900
.ZG158P               ANOP  ,                                           00991000
                      AIF   (T'&ZCGPR NE 'N').ZG158R  NON NUMERIC       00991100
                      AIF   ('&ZCGPR' LT '2').ZG158Q                    00991200
                      AIF   ('&ZCGPR' LE '12').ZG158R                   00991300
.ZG158Q               ANOP  ,                                           00991400
&ZMS                  SETC  '"PROCESSID='                               00991500
&ZMS                  SETC  '&ZMS.&PROCESSID"'                          00991600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   00991700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            00991800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00991900
.ZG158R               ANOP  ,                                           00992000
.*-------------------------------------------------------------------   00992100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00992200
.ZG160                ANOP  ,                                           00992300
&ZTLC                 SETC 'UNLOCK_CO_NAME'                             00992400
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG167            00992500
&XREQUEST             SETC  'UNLOCK_CO_NAME'    SET KEYWORD             00992600
                      AIF   (N'&REQUEST LE 1).ZG160A  CK NUM            00992700
&ZMS                  SETC  '"REQUEST='                                 00992800
&ZMS                  SETC  '&ZMS.&REQUEST"'                            00992900
&ZMS                  SETC  '&ZMS "REQUEST"'                            00993000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         00993100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     00993200
.ZG160A               ANOP  ,                                           00993300
.*------------------------------------------------------------------    00993400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00993500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     00993600
.ZG160A0              AIF   (K'&ASSIGN LE 0).ZG160A1  OK                00993700
&ZCVAL                SETC '&ZCVAL ASSIGN'      INCORRECT KEY USED      00993800
.ZG160A1              AIF   (K'&REGUSER LE 0).ZG160A2  OK               00993900
&ZCVAL                SETC '&ZCVAL REGUSER'     INCORRECT KEY USED      00994000
.ZG160A2              AIF   (K'&RETURNDATA LE 0).ZG160A3  OK            00994100
&ZCVAL                SETC '&ZCVAL RETURNDATA'  INCORRECT KEY USED      00994200
.ZG160A3              AIF   (K'&AXIOVERRIDE LE 0).ZG160A4  OK           00994300
&ZCVAL                SETC '&ZCVAL AXIOVERRIDE'  INCORRECT KEY USED     00994400
.ZG160A4              AIF   (K'&WHENREG LE 0).ZG160A5  OK               00994500
&ZCVAL                SETC '&ZCVAL WHENREG'     INCORRECT KEY USED      00994600
.ZG160A5              AIF   (K'&LOCALREGCNTL LE 0).ZG160A6  OK          00994700
&ZCVAL                SETC '&ZCVAL LOCALREGCNTL'  INCORRECT KEY USED    00994800
.ZG160A6              AIF   (K'&VERSCOMP LE 0).ZG160A7  OK              00994900
&ZCVAL                SETC '&ZCVAL VERSCOMP'    INCORRECT KEY USED      00995000
.ZG160A7              AIF   (K'&VERSCOMPTYPE LE 0).ZG160A8  OK          00995100
&ZCVAL                SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED    00995200
.ZG160A8              AIF   (K'&VERSUPDATE LE 0).ZG160A9  OK            00995300
&ZCVAL                SETC '&ZCVAL VERSUPDATE'  INCORRECT KEY USED      00995400
.ZG160A9              AIF   (K'&NEWVERS LE 0).ZG160A10  OK              00995500
&ZCVAL                SETC '&ZCVAL NEWVERS'     INCORRECT KEY USED      00995600
.ZG160A10             AIF   (K'&CHANGED LE 0).ZG160A11  OK              00995700
&ZCVAL                SETC '&ZCVAL CHANGED'     INCORRECT KEY USED      00995800
.ZG160A11             AIF   (K'&CROSSINVAL LE 0).ZG160A12  OK           00995900
&ZCVAL                SETC '&ZCVAL CROSSINVAL'  INCORRECT KEY USED      00996000
.ZG160A12             AIF   (K'&GETCOLOCK LE 0).ZG160A13  OK            00996100
&ZCVAL                SETC '&ZCVAL GETCOLOCK'   INCORRECT KEY USED      00996200
.ZG160A13             AIF   (K'&PARITY LE 0).ZG160A14  OK               00996300
&ZCVAL                SETC '&ZCVAL PARITY'      INCORRECT KEY USED      00996400
.ZG160A14             AIF   (K'&USERDATA LE 0).ZG160A15  OK             00996500
&ZCVAL                SETC '&ZCVAL USERDATA'    INCORRECT KEY USED      00996600
.ZG160A15             AIF   (K'&ELEMNUM LE 0).ZG160A16  OK              00996700
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      00996800
.ZG160A16             AIF   (K'&STARTINDEX LE 0).ZG160A17  OK           00996900
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      00997000
.ZG160A17             AIF   (K'&ENDINDEX LE 0).ZG160A18  OK             00997100
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      00997200
.ZG160A18             AIF   (K'&DATAOFFSET LE 0).ZG160A19  OK           00997300
&ZCVAL                SETC '&ZCVAL DATAOFFSET'  INCORRECT KEY USED      00997400
.ZG160A19             AIF   (K'&WORBAREA LE 0).ZG160A20  OK             00997500
&ZCVAL                SETC '&ZCVAL WORBAREA'    INCORRECT KEY USED      00997600
.ZG160A20             AIF   (K'&NSBAREA LE 0).ZG160A21  OK              00997700
&ZCVAL                SETC '&ZCVAL NSBAREA'     INCORRECT KEY USED      00997800
.ZG160A21             AIF   (K'&DEIBAREA LE 0).ZG160A22  OK             00997900
&ZCVAL                SETC '&ZCVAL DEIBAREA'    INCORRECT KEY USED      00998000
.ZG160A22             AIF   (K'&CASTOUTLIST LE 0).ZG160A23  OK          00998100
&ZCVAL                SETC '&ZCVAL CASTOUTLIST'  INCORRECT KEY USED     00998200
.ZG160A23             AIF   (K'&FIRSTNAME LE 0).ZG160A24  OK            00998300
&ZCVAL                SETC '&ZCVAL FIRSTNAME'   INCORRECT KEY USED      00998400
.ZG160A24             AIF   (K'&LASTNAME LE 0).ZG160A25  OK             00998500
&ZCVAL                SETC '&ZCVAL LASTNAME'    INCORRECT KEY USED      00998600
.ZG160A25             AIF   (K'&ERRORACTION LE 0).ZG160A26  OK          00998700
&ZCVAL                SETC '&ZCVAL ERRORACTION'  INCORRECT KEY USED     00998800
.ZG160A26             AIF   (K'&DELETETYPE LE 0).ZG160A27  OK           00998900
&ZCVAL                SETC '&ZCVAL DELETETYPE'  INCORRECT KEY USED      00999000
.ZG160A27             AIF   (K'&HALTONCHANGED LE 0).ZG160A28  OK        00999100
&ZCVAL                SETC '&ZCVAL HALTONCHANGED'  INCORRECT KEY USED   00999200
.ZG160A28             AIF   (K'&SUPPCROSSINVAL LE 0).ZG160A29  OK       00999300
&ZCVAL                SETC '&ZCVAL SUPPCROSSINVAL'  INCORRECT KEY USED  00999400
.ZG160A29             AIF   (K'&DIRINFOFMT LE 0).ZG160A30  OK           00999500
&ZCVAL                SETC '&ZCVAL DIRINFOFMT'  INCORRECT KEY USED      00999600
.ZG160A30             AIF   (K'&RTATYPE LE 0).ZG160A31  OK              00999700
&ZCVAL                SETC '&ZCVAL RTATYPE'     INCORRECT KEY USED      00999800
.ZG160A31             AIF   (K'&CRITERIA LE 0).ZG160A32  OK             00999900
&ZCVAL                SETC '&ZCVAL CRITERIA'    INCORRECT KEY USED      01000000
.ZG160A32             AIF   (K'&COCLASSB LE 0).ZG160A33  OK             01000100
&ZCVAL                SETC '&ZCVAL COCLASSB'    INCORRECT KEY USED      01000200
.ZG160A33             AIF   (K'&COCLASSE LE 0).ZG160A34  OK             01000300
&ZCVAL                SETC '&ZCVAL COCLASSE'    INCORRECT KEY USED      01000400
.ZG160A34             AIF   (K'&COSTATSFMT LE 0).ZG160A35  OK           01000500
&ZCVAL                SETC '&ZCVAL COSTATSFMT'  INCORRECT KEY USED      01000600
.ZG160A35             AIF   (K'&STGSTATS LE 0).ZG160A36  OK             01000700
&ZCVAL                SETC '&ZCVAL STGSTATS'    INCORRECT KEY USED      01000800
.ZG160A36             AIF   (K'&NUMNAMES LE 0).ZG160A37  OK             01000900
&ZCVAL                SETC '&ZCVAL NUMNAMES'    INCORRECT KEY USED      01001000
.ZG160A37             AIF   (K'&REPEAT LE 0).ZG160A38  OK               01001100
&ZCVAL                SETC '&ZCVAL REPEAT'      INCORRECT KEY USED      01001200
.ZG160A38             AIF   (K'&RECLVCTR LE 0).ZG160A39  OK             01001300
&ZCVAL                SETC '&ZCVAL RECLVCTR'    INCORRECT KEY USED      01001400
.ZG160A39             AIF   (K'&ZCVAL LE 0).ZG160A40  OK                01001500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01001600
                      AIF  (K'&ZCVAL LE 160).ZG160A40A                  01001700
&ZCVAL                SETC '&ZCVAL'(1,160)                              01001800
&ZCVAL                SETC '&ZCVAL....'                                 01001900
.ZG160A40A            ANOP                                              01002000
&ZMS                  SETC  '"REQUEST'                                  01002100
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           01002200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01002300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01002400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01002500
.ZG160A40             ANOP  ,                                           01002600
.*----------------------------------------------------------------***   01002700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01002800
                      AIF   (N'&CUNBAREA LE 1).ZG162A  CK NUM           01002900
&ZMS                  SETC  '"CUNBAREA='                                01003000
&ZMS                  SETC  '&ZMS.&CUNBAREA"'                           01003100
&ZMS                  SETC  '&ZMS "CUNBAREA"'                           01003200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01003300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01003400
.ZG162A               ANOP  ,                                           01003500
.*-------------------------------------------------------------------   01003600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01003700
&ZXCUNBAREA           SETC  'INPUT'     SET IN/OUTPUT                   01003800
&XCUNBAREA            SETC  '&CUNBAREA(1)'      SET XVARIABLE           01003900
                      AIF   (N'&CUNBAREA GT 1).ZG162B  MULTI            01004000
&XCUNBAREA            SETC  '&CUNBAREA'         SET XVARIABLE           01004100
.ZG162B               AIF   (K'&CUNBAREA(1) GT 0).ZG162C                01004200
&ZXCUNBAREA           SETC  ''          RESET IN/OUTPUT                 01004300
&ZMS                  SETC  ' '                                         01004400
&ZMS                  SETC  '&ZMS "CUNBAREA" KEY AND ITS'               01004500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01004600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01004700
.ZG162C               ANOP  ,                                           01004800
.*-------------------------------------------------------------------   01004900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01005000
                      AIF   (K'&ZXCUNBAREA LE 0).ZG162R  NOT I/O        01005100
                      AIF   ('&XCUNBAREA'(1,1) NE '(').ZG162R           01005200
&ZCGPR                SETC  '&XCUNBAREA'(2,K'&XCUNBAREA-2)              01005300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG162P               01005400
                      AIF   (K'&ZCGPR GT 2).ZG162Q                      01005500
                      AIF   ('&ZCGPR' EQ '0').ZG162Q                    01005600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01005700
                      AIF   (T'&ZCGPR NE 'N').ZG162Q  INVALID REG NAME  01005800
.ZG162P               ANOP  ,                                           01005900
                      AIF   (T'&ZCGPR NE 'N').ZG162R  NON NUMERIC       01006000
                      AIF   ('&ZCGPR' LT '2').ZG162Q                    01006100
                      AIF   ('&ZCGPR' LE '12').ZG162R                   01006200
.ZG162Q               ANOP  ,                                           01006300
&ZMS                  SETC  '"CUNBAREA='                                01006400
&ZMS                  SETC  '&ZMS.&CUNBAREA"'                           01006500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01006600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01006700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01006800
.ZG162R               ANOP  ,                                           01006900
.*----------------------------------------------------------------***   01007000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01007100
                      AIF   (N'&PROCESSID LE 1).ZG165A  CK NUM          01007200
&ZMS                  SETC  '"PROCESSID='                               01007300
&ZMS                  SETC  '&ZMS.&PROCESSID"'                          01007400
&ZMS                  SETC  '&ZMS "PROCESSID"'                          01007500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01007600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01007700
.ZG165A               ANOP  ,                                           01007800
.*-------------------------------------------------------------------   01007900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01008000
&ZXPROCESSID          SETC  'INPUT'     SET IN/OUTPUT                   01008100
&XPROCESSID           SETC  'NO_PROCESSID'                              01008200
                      AIF   (K'&PROCESSID(1) LE 0).ZG165B  PARM         01008300
&XPROCESSID           SETC  '&PROCESSID(1)'     SET XVARIABLE           01008400
                      AIF   (N'&PROCESSID GT 1).ZG165B  MULTI           01008500
&XPROCESSID           SETC  '&PROCESSID'        SET XVARIABLE           01008600
.ZG165B               ANOP  ,                                           01008700
.*-------------------------------------------------------------------   01008800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01008900
                      AIF   (K'&ZXPROCESSID LE 0).ZG165R  NOT I/O       01009000
         AIF   ('&XPROCESSID' EQ 'NO_PROCESSID').ZG165R                 01009100
                      AIF   ('&XPROCESSID'(1,1) NE '(').ZG165R          01009200
&ZCGPR                SETC  '&XPROCESSID'(2,K'&XPROCESSID-2)            01009300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG165P               01009400
                      AIF   (K'&ZCGPR GT 2).ZG165Q                      01009500
                      AIF   ('&ZCGPR' EQ '0').ZG165Q                    01009600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01009700
                      AIF   (T'&ZCGPR NE 'N').ZG165Q  INVALID REG NAME  01009800
.ZG165P               ANOP  ,                                           01009900
                      AIF   (T'&ZCGPR NE 'N').ZG165R  NON NUMERIC       01010000
                      AIF   ('&ZCGPR' LT '2').ZG165Q                    01010100
                      AIF   ('&ZCGPR' LE '12').ZG165R                   01010200
.ZG165Q               ANOP  ,                                           01010300
&ZMS                  SETC  '"PROCESSID='                               01010400
&ZMS                  SETC  '&ZMS.&PROCESSID"'                          01010500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01010600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01010700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01010800
.ZG165R               ANOP  ,                                           01010900
.*-------------------------------------------------------------------   01011000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01011100
.ZG167                ANOP  ,                                           01011200
&ZTLC                 SETC 'CROSS_INVAL'                                01011300
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG171            01011400
&XREQUEST             SETC  'CROSS_INVAL'       SET KEYWORD             01011500
                      AIF   (N'&REQUEST LE 1).ZG167A  CK NUM            01011600
&ZMS                  SETC  '"REQUEST='                                 01011700
&ZMS                  SETC  '&ZMS.&REQUEST"'                            01011800
&ZMS                  SETC  '&ZMS "REQUEST"'                            01011900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01012000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01012100
.ZG167A               ANOP  ,                                           01012200
.*------------------------------------------------------------------    01012300
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01012400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01012500
.ZG167A0              AIF   (K'&ASSIGN LE 0).ZG167A1  OK                01012600
&ZCVAL                SETC '&ZCVAL ASSIGN'      INCORRECT KEY USED      01012700
.ZG167A1              AIF   (K'&REGUSER LE 0).ZG167A2  OK               01012800
&ZCVAL                SETC '&ZCVAL REGUSER'     INCORRECT KEY USED      01012900
.ZG167A2              AIF   (K'&RETURNDATA LE 0).ZG167A3  OK            01013000
&ZCVAL                SETC '&ZCVAL RETURNDATA'  INCORRECT KEY USED      01013100
.ZG167A3              AIF   (K'&WHENREG LE 0).ZG167A4  OK               01013200
&ZCVAL                SETC '&ZCVAL WHENREG'     INCORRECT KEY USED      01013300
.ZG167A4              AIF   (K'&LOCALREGCNTL LE 0).ZG167A5  OK          01013400
&ZCVAL                SETC '&ZCVAL LOCALREGCNTL'  INCORRECT KEY USED    01013500
.ZG167A5              AIF   (K'&VERSCOMP LE 0).ZG167A6  OK              01013600
&ZCVAL                SETC '&ZCVAL VERSCOMP'    INCORRECT KEY USED      01013700
.ZG167A6              AIF   (K'&VERSCOMPTYPE LE 0).ZG167A7  OK          01013800
&ZCVAL                SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED    01013900
.ZG167A7              AIF   (K'&VERSUPDATE LE 0).ZG167A8  OK            01014000
&ZCVAL                SETC '&ZCVAL VERSUPDATE'  INCORRECT KEY USED      01014100
.ZG167A8              AIF   (K'&NEWVERS LE 0).ZG167A9  OK               01014200
&ZCVAL                SETC '&ZCVAL NEWVERS'     INCORRECT KEY USED      01014300
.ZG167A9              AIF   (K'&CHANGED LE 0).ZG167A10  OK              01014400
&ZCVAL                SETC '&ZCVAL CHANGED'     INCORRECT KEY USED      01014500
.ZG167A10             AIF   (K'&CROSSINVAL LE 0).ZG167A11  OK           01014600
&ZCVAL                SETC '&ZCVAL CROSSINVAL'  INCORRECT KEY USED      01014700
.ZG167A11             AIF   (K'&GETCOLOCK LE 0).ZG167A12  OK            01014800
&ZCVAL                SETC '&ZCVAL GETCOLOCK'   INCORRECT KEY USED      01014900
.ZG167A12             AIF   (K'&PROCESSID LE 0).ZG167A13  OK            01015000
&ZCVAL                SETC '&ZCVAL PROCESSID'   INCORRECT KEY USED      01015100
.ZG167A13             AIF   (K'&PARITY LE 0).ZG167A14  OK               01015200
&ZCVAL                SETC '&ZCVAL PARITY'      INCORRECT KEY USED      01015300
.ZG167A14             AIF   (K'&USERDATA LE 0).ZG167A15  OK             01015400
&ZCVAL                SETC '&ZCVAL USERDATA'    INCORRECT KEY USED      01015500
.ZG167A15             AIF   (K'&ELEMNUM LE 0).ZG167A16  OK              01015600
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      01015700
.ZG167A16             AIF   (K'&STARTINDEX LE 0).ZG167A17  OK           01015800
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      01015900
.ZG167A17             AIF   (K'&ENDINDEX LE 0).ZG167A18  OK             01016000
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      01016100
.ZG167A18             AIF   (K'&DATAOFFSET LE 0).ZG167A19  OK           01016200
&ZCVAL                SETC '&ZCVAL DATAOFFSET'  INCORRECT KEY USED      01016300
.ZG167A19             AIF   (K'&WORBAREA LE 0).ZG167A20  OK             01016400
&ZCVAL                SETC '&ZCVAL WORBAREA'    INCORRECT KEY USED      01016500
.ZG167A20             AIF   (K'&NSBAREA LE 0).ZG167A21  OK              01016600
&ZCVAL                SETC '&ZCVAL NSBAREA'     INCORRECT KEY USED      01016700
.ZG167A21             AIF   (K'&DEIBAREA LE 0).ZG167A22  OK             01016800
&ZCVAL                SETC '&ZCVAL DEIBAREA'    INCORRECT KEY USED      01016900
.ZG167A22             AIF   (K'&CASTOUTLIST LE 0).ZG167A23  OK          01017000
&ZCVAL                SETC '&ZCVAL CASTOUTLIST'  INCORRECT KEY USED     01017100
.ZG167A23             AIF   (K'&FIRSTNAME LE 0).ZG167A24  OK            01017200
&ZCVAL                SETC '&ZCVAL FIRSTNAME'   INCORRECT KEY USED      01017300
.ZG167A24             AIF   (K'&LASTNAME LE 0).ZG167A25  OK             01017400
&ZCVAL                SETC '&ZCVAL LASTNAME'    INCORRECT KEY USED      01017500
.ZG167A25             AIF   (K'&CUNBAREA LE 0).ZG167A26  OK             01017600
&ZCVAL                SETC '&ZCVAL CUNBAREA'    INCORRECT KEY USED      01017700
.ZG167A26             AIF   (K'&ERRORACTION LE 0).ZG167A27  OK          01017800
&ZCVAL                SETC '&ZCVAL ERRORACTION'  INCORRECT KEY USED     01017900
.ZG167A27             AIF   (K'&DELETETYPE LE 0).ZG167A28  OK           01018000
&ZCVAL                SETC '&ZCVAL DELETETYPE'  INCORRECT KEY USED      01018100
.ZG167A28             AIF   (K'&HALTONCHANGED LE 0).ZG167A29  OK        01018200
&ZCVAL                SETC '&ZCVAL HALTONCHANGED'  INCORRECT KEY USED   01018300
.ZG167A29             AIF   (K'&SUPPCROSSINVAL LE 0).ZG167A30  OK       01018400
&ZCVAL                SETC '&ZCVAL SUPPCROSSINVAL'  INCORRECT KEY USED  01018500
.ZG167A30             AIF   (K'&DIRINFOFMT LE 0).ZG167A31  OK           01018600
&ZCVAL                SETC '&ZCVAL DIRINFOFMT'  INCORRECT KEY USED      01018700
.ZG167A31             AIF   (K'&RTATYPE LE 0).ZG167A32  OK              01018800
&ZCVAL                SETC '&ZCVAL RTATYPE'     INCORRECT KEY USED      01018900
.ZG167A32             AIF   (K'&CRITERIA LE 0).ZG167A33  OK             01019000
&ZCVAL                SETC '&ZCVAL CRITERIA'    INCORRECT KEY USED      01019100
.ZG167A33             AIF   (K'&COCLASSB LE 0).ZG167A34  OK             01019200
&ZCVAL                SETC '&ZCVAL COCLASSB'    INCORRECT KEY USED      01019300
.ZG167A34             AIF   (K'&COCLASSE LE 0).ZG167A35  OK             01019400
&ZCVAL                SETC '&ZCVAL COCLASSE'    INCORRECT KEY USED      01019500
.ZG167A35             AIF   (K'&COSTATSFMT LE 0).ZG167A36  OK           01019600
&ZCVAL                SETC '&ZCVAL COSTATSFMT'  INCORRECT KEY USED      01019700
.ZG167A36             AIF   (K'&STGSTATS LE 0).ZG167A37  OK             01019800
&ZCVAL                SETC '&ZCVAL STGSTATS'    INCORRECT KEY USED      01019900
.ZG167A37             AIF   (K'&NUMNAMES LE 0).ZG167A38  OK             01020000
&ZCVAL                SETC '&ZCVAL NUMNAMES'    INCORRECT KEY USED      01020100
.ZG167A38             AIF   (K'&REPEAT LE 0).ZG167A39  OK               01020200
&ZCVAL                SETC '&ZCVAL REPEAT'      INCORRECT KEY USED      01020300
.ZG167A39             AIF   (K'&RECLVCTR LE 0).ZG167A40  OK             01020400
&ZCVAL                SETC '&ZCVAL RECLVCTR'    INCORRECT KEY USED      01020500
.ZG167A40             AIF   (K'&ZCVAL LE 0).ZG167A41  OK                01020600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01020700
                      AIF  (K'&ZCVAL LE 160).ZG167A41A                  01020800
&ZCVAL                SETC '&ZCVAL'(1,160)                              01020900
&ZCVAL                SETC '&ZCVAL....'                                 01021000
.ZG167A41A            ANOP                                              01021100
&ZMS                  SETC  '"REQUEST'                                  01021200
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           01021300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01021400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01021500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01021600
.ZG167A41             ANOP  ,                                           01021700
.*----------------------------------------------------------------***   01021800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01021900
                      AIF   (N'&AXIOVERRIDE LE 1).ZG169A  CK NUM        01022000
&ZMS                  SETC  '"AXIOVERRIDE='                             01022100
&ZMS                  SETC  '&ZMS.&AXIOVERRIDE"'                        01022200
&ZMS                  SETC  '&ZMS "AXIOVERRIDE"'                        01022300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01022400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01022500
.ZG169A               ANOP  ,                                           01022600
.*-------------------------------------------------------------------   01022700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01022800
&ZXAXIOVERRIDE        SETC  'INPUT'     SET IN/OUTPUT                   01022900
&XAXIOVERRIDE         SETC  '0'                                         01023000
                      AIF   (K'&AXIOVERRIDE(1) LE 0).ZG169B  PARM       01023100
&XAXIOVERRIDE         SETC  '&AXIOVERRIDE(1)'   SET XVARIABLE           01023200
                      AIF   (N'&AXIOVERRIDE GT 1).ZG169B  MULTI         01023300
&XAXIOVERRIDE         SETC  '&AXIOVERRIDE'      SET XVARIABLE           01023400
.ZG169B               ANOP  ,                                           01023500
.*-------------------------------------------------------------------   01023600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01023700
                      AIF   (K'&ZXAXIOVERRIDE LE 0).ZG169R  NOT I/O     01023800
         AIF   ('&XAXIOVERRIDE' EQ '0').ZG169R                          01023900
                      AIF   ('&XAXIOVERRIDE'(1,1) NE '(').ZG169R        01024000
&ZCGPR                SETC  '&XAXIOVERRIDE'(2,K'&XAXIOVERRIDE-2)        01024100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG169P               01024200
                      AIF   (K'&ZCGPR GT 2).ZG169Q                      01024300
                      AIF   ('&ZCGPR' EQ '0').ZG169Q                    01024400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01024500
                      AIF   (T'&ZCGPR NE 'N').ZG169Q  INVALID REG NAME  01024600
.ZG169P               ANOP  ,                                           01024700
                      AIF   (T'&ZCGPR NE 'N').ZG169R  NON NUMERIC       01024800
                      AIF   ('&ZCGPR' LT '2').ZG169Q                    01024900
                      AIF   ('&ZCGPR' LE '12').ZG169R                   01025000
.ZG169Q               ANOP  ,                                           01025100
&ZMS                  SETC  '"AXIOVERRIDE='                             01025200
&ZMS                  SETC  '&ZMS.&AXIOVERRIDE"'                        01025300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01025400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01025500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01025600
.ZG169R               ANOP  ,                                           01025700
.*-------------------------------------------------------------------   01025800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01025900
.ZG171                ANOP  ,                                           01026000
&ZTLC                 SETC 'CROSS_INVALLIST'                            01026100
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG186            01026200
&XREQUEST             SETC  'CROSS_INVALLIST'   SET KEYWORD             01026300
                      AIF   (N'&REQUEST LE 1).ZG171A  CK NUM            01026400
&ZMS                  SETC  '"REQUEST='                                 01026500
&ZMS                  SETC  '&ZMS.&REQUEST"'                            01026600
&ZMS                  SETC  '&ZMS "REQUEST"'                            01026700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01026800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01026900
.ZG171A               ANOP  ,                                           01027000
.*------------------------------------------------------------------    01027100
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01027200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01027300
.ZG171A0              AIF   (K'&ASSIGN LE 0).ZG171A1  OK                01027400
&ZCVAL                SETC '&ZCVAL ASSIGN'      INCORRECT KEY USED      01027500
.ZG171A1              AIF   (K'&REGUSER LE 0).ZG171A2  OK               01027600
&ZCVAL                SETC '&ZCVAL REGUSER'     INCORRECT KEY USED      01027700
.ZG171A2              AIF   (K'&RETURNDATA LE 0).ZG171A3  OK            01027800
&ZCVAL                SETC '&ZCVAL RETURNDATA'  INCORRECT KEY USED      01027900
.ZG171A3              AIF   (K'&WHENREG LE 0).ZG171A4  OK               01028000
&ZCVAL                SETC '&ZCVAL WHENREG'     INCORRECT KEY USED      01028100
.ZG171A4              AIF   (K'&LOCALREGCNTL LE 0).ZG171A5  OK          01028200
&ZCVAL                SETC '&ZCVAL LOCALREGCNTL'  INCORRECT KEY USED    01028300
.ZG171A5              AIF   (K'&VERSCOMP LE 0).ZG171A6  OK              01028400
&ZCVAL                SETC '&ZCVAL VERSCOMP'    INCORRECT KEY USED      01028500
.ZG171A6              AIF   (K'&VERSCOMPTYPE LE 0).ZG171A7  OK          01028600
&ZCVAL                SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED    01028700
.ZG171A7              AIF   (K'&VERSUPDATE LE 0).ZG171A8  OK            01028800
&ZCVAL                SETC '&ZCVAL VERSUPDATE'  INCORRECT KEY USED      01028900
.ZG171A8              AIF   (K'&NEWVERS LE 0).ZG171A9  OK               01029000
&ZCVAL                SETC '&ZCVAL NEWVERS'     INCORRECT KEY USED      01029100
.ZG171A9              AIF   (K'&CHANGED LE 0).ZG171A10  OK              01029200
&ZCVAL                SETC '&ZCVAL CHANGED'     INCORRECT KEY USED      01029300
.ZG171A10             AIF   (K'&CROSSINVAL LE 0).ZG171A11  OK           01029400
&ZCVAL                SETC '&ZCVAL CROSSINVAL'  INCORRECT KEY USED      01029500
.ZG171A11             AIF   (K'&GETCOLOCK LE 0).ZG171A12  OK            01029600
&ZCVAL                SETC '&ZCVAL GETCOLOCK'   INCORRECT KEY USED      01029700
.ZG171A12             AIF   (K'&PROCESSID LE 0).ZG171A13  OK            01029800
&ZCVAL                SETC '&ZCVAL PROCESSID'   INCORRECT KEY USED      01029900
.ZG171A13             AIF   (K'&PARITY LE 0).ZG171A14  OK               01030000
&ZCVAL                SETC '&ZCVAL PARITY'      INCORRECT KEY USED      01030100
.ZG171A14             AIF   (K'&USERDATA LE 0).ZG171A15  OK             01030200
&ZCVAL                SETC '&ZCVAL USERDATA'    INCORRECT KEY USED      01030300
.ZG171A15             AIF   (K'&ELEMNUM LE 0).ZG171A16  OK              01030400
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      01030500
.ZG171A16             AIF   (K'&DATAOFFSET LE 0).ZG171A17  OK           01030600
&ZCVAL                SETC '&ZCVAL DATAOFFSET'  INCORRECT KEY USED      01030700
.ZG171A17             AIF   (K'&WORBAREA LE 0).ZG171A18  OK             01030800
&ZCVAL                SETC '&ZCVAL WORBAREA'    INCORRECT KEY USED      01030900
.ZG171A18             AIF   (K'&NSBAREA LE 0).ZG171A19  OK              01031000
&ZCVAL                SETC '&ZCVAL NSBAREA'     INCORRECT KEY USED      01031100
.ZG171A19             AIF   (K'&DEIBAREA LE 0).ZG171A20  OK             01031200
&ZCVAL                SETC '&ZCVAL DEIBAREA'    INCORRECT KEY USED      01031300
.ZG171A20             AIF   (K'&CASTOUTLIST LE 0).ZG171A21  OK          01031400
&ZCVAL                SETC '&ZCVAL CASTOUTLIST'  INCORRECT KEY USED     01031500
.ZG171A21             AIF   (K'&FIRSTNAME LE 0).ZG171A22  OK            01031600
&ZCVAL                SETC '&ZCVAL FIRSTNAME'   INCORRECT KEY USED      01031700
.ZG171A22             AIF   (K'&LASTNAME LE 0).ZG171A23  OK             01031800
&ZCVAL                SETC '&ZCVAL LASTNAME'    INCORRECT KEY USED      01031900
.ZG171A23             AIF   (K'&CUNBAREA LE 0).ZG171A24  OK             01032000
&ZCVAL                SETC '&ZCVAL CUNBAREA'    INCORRECT KEY USED      01032100
.ZG171A24             AIF   (K'&DELETETYPE LE 0).ZG171A25  OK           01032200
&ZCVAL                SETC '&ZCVAL DELETETYPE'  INCORRECT KEY USED      01032300
.ZG171A25             AIF   (K'&HALTONCHANGED LE 0).ZG171A26  OK        01032400
&ZCVAL                SETC '&ZCVAL HALTONCHANGED'  INCORRECT KEY USED   01032500
.ZG171A26             AIF   (K'&SUPPCROSSINVAL LE 0).ZG171A27  OK       01032600
&ZCVAL                SETC '&ZCVAL SUPPCROSSINVAL'  INCORRECT KEY USED  01032700
.ZG171A27             AIF   (K'&DIRINFOFMT LE 0).ZG171A28  OK           01032800
&ZCVAL                SETC '&ZCVAL DIRINFOFMT'  INCORRECT KEY USED      01032900
.ZG171A28             AIF   (K'&RTATYPE LE 0).ZG171A29  OK              01033000
&ZCVAL                SETC '&ZCVAL RTATYPE'     INCORRECT KEY USED      01033100
.ZG171A29             AIF   (K'&CRITERIA LE 0).ZG171A30  OK             01033200
&ZCVAL                SETC '&ZCVAL CRITERIA'    INCORRECT KEY USED      01033300
.ZG171A30             AIF   (K'&COCLASSB LE 0).ZG171A31  OK             01033400
&ZCVAL                SETC '&ZCVAL COCLASSB'    INCORRECT KEY USED      01033500
.ZG171A31             AIF   (K'&COCLASSE LE 0).ZG171A32  OK             01033600
&ZCVAL                SETC '&ZCVAL COCLASSE'    INCORRECT KEY USED      01033700
.ZG171A32             AIF   (K'&COSTATSFMT LE 0).ZG171A33  OK           01033800
&ZCVAL                SETC '&ZCVAL COSTATSFMT'  INCORRECT KEY USED      01033900
.ZG171A33             AIF   (K'&STGSTATS LE 0).ZG171A34  OK             01034000
&ZCVAL                SETC '&ZCVAL STGSTATS'    INCORRECT KEY USED      01034100
.ZG171A34             AIF   (K'&NUMNAMES LE 0).ZG171A35  OK             01034200
&ZCVAL                SETC '&ZCVAL NUMNAMES'    INCORRECT KEY USED      01034300
.ZG171A35             AIF   (K'&REPEAT LE 0).ZG171A36  OK               01034400
&ZCVAL                SETC '&ZCVAL REPEAT'      INCORRECT KEY USED      01034500
.ZG171A36             AIF   (K'&RECLVCTR LE 0).ZG171A37  OK             01034600
&ZCVAL                SETC '&ZCVAL RECLVCTR'    INCORRECT KEY USED      01034700
.ZG171A37             AIF   (K'&ZCVAL LE 0).ZG171A38  OK                01034800
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01034900
                      AIF  (K'&ZCVAL LE 160).ZG171A38A                  01035000
&ZCVAL                SETC '&ZCVAL'(1,160)                              01035100
&ZCVAL                SETC '&ZCVAL....'                                 01035200
.ZG171A38A            ANOP                                              01035300
&ZMS                  SETC  '"REQUEST'                                  01035400
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           01035500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01035600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01035700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01035800
.ZG171A38             ANOP  ,                                           01035900
.*----------------------------------------------------------------***   01036000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01036100
                      AIF   (N'&STARTINDEX LE 1).ZG173A  CK NUM         01036200
&ZMS                  SETC  '"STARTINDEX='                              01036300
&ZMS                  SETC  '&ZMS.&STARTINDEX"'                         01036400
&ZMS                  SETC  '&ZMS "STARTINDEX"'                         01036500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01036600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01036700
.ZG173A               ANOP  ,                                           01036800
.*-------------------------------------------------------------------   01036900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01037000
&ZXSTARTINDEX         SETC  'INPUT'     SET IN/OUTPUT                   01037100
&XSTARTINDEX          SETC  '&STARTINDEX(1)'    SET XVARIABLE           01037200
                      AIF   (N'&STARTINDEX GT 1).ZG173B  MULTI          01037300
&XSTARTINDEX          SETC  '&STARTINDEX'       SET XVARIABLE           01037400
.ZG173B               AIF   (K'&STARTINDEX(1) GT 0).ZG173C              01037500
&ZXSTARTINDEX         SETC  ''          RESET IN/OUTPUT                 01037600
&ZMS                  SETC  ' '                                         01037700
&ZMS                  SETC  '&ZMS "STARTINDEX" KEY AND ITS'             01037800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01037900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01038000
.ZG173C               ANOP  ,                                           01038100
.*-------------------------------------------------------------------   01038200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01038300
                      AIF   (K'&ZXSTARTINDEX LE 0).ZG173R  NOT I/O      01038400
                      AIF   ('&XSTARTINDEX'(1,1) NE '(').ZG173R         01038500
&ZCGPR                SETC  '&XSTARTINDEX'(2,K'&XSTARTINDEX-2)          01038600
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG173P               01038700
                      AIF   (K'&ZCGPR GT 2).ZG173Q                      01038800
                      AIF   ('&ZCGPR' EQ '0').ZG173Q                    01038900
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01039000
                      AIF   (T'&ZCGPR NE 'N').ZG173Q  INVALID REG NAME  01039100
.ZG173P               ANOP  ,                                           01039200
                      AIF   (T'&ZCGPR NE 'N').ZG173R  NON NUMERIC       01039300
                      AIF   ('&ZCGPR' LT '2').ZG173Q                    01039400
                      AIF   ('&ZCGPR' LE '12').ZG173R                   01039500
.ZG173Q               ANOP  ,                                           01039600
&ZMS                  SETC  '"STARTINDEX='                              01039700
&ZMS                  SETC  '&ZMS.&STARTINDEX"'                         01039800
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01039900
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01040000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01040100
.ZG173R               ANOP  ,                                           01040200
.*----------------------------------------------------------------***   01040300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01040400
                      AIF   (N'&ENDINDEX LE 1).ZG176A  CK NUM           01040500
&ZMS                  SETC  '"ENDINDEX='                                01040600
&ZMS                  SETC  '&ZMS.&ENDINDEX"'                           01040700
&ZMS                  SETC  '&ZMS "ENDINDEX"'                           01040800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01040900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01041000
.ZG176A               ANOP  ,                                           01041100
.*-------------------------------------------------------------------   01041200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01041300
&ZXENDINDEX           SETC  'INPUT'     SET IN/OUTPUT                   01041400
&XENDINDEX            SETC  '&ENDINDEX(1)'      SET XVARIABLE           01041500
                      AIF   (N'&ENDINDEX GT 1).ZG176B  MULTI            01041600
&XENDINDEX            SETC  '&ENDINDEX'         SET XVARIABLE           01041700
.ZG176B               AIF   (K'&ENDINDEX(1) GT 0).ZG176C                01041800
&ZXENDINDEX           SETC  ''          RESET IN/OUTPUT                 01041900
&ZMS                  SETC  ' '                                         01042000
&ZMS                  SETC  '&ZMS "ENDINDEX" KEY AND ITS'               01042100
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01042200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01042300
.ZG176C               ANOP  ,                                           01042400
.*-------------------------------------------------------------------   01042500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01042600
                      AIF   (K'&ZXENDINDEX LE 0).ZG176R  NOT I/O        01042700
                      AIF   ('&XENDINDEX'(1,1) NE '(').ZG176R           01042800
&ZCGPR                SETC  '&XENDINDEX'(2,K'&XENDINDEX-2)              01042900
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG176P               01043000
                      AIF   (K'&ZCGPR GT 2).ZG176Q                      01043100
                      AIF   ('&ZCGPR' EQ '0').ZG176Q                    01043200
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01043300
                      AIF   (T'&ZCGPR NE 'N').ZG176Q  INVALID REG NAME  01043400
.ZG176P               ANOP  ,                                           01043500
                      AIF   (T'&ZCGPR NE 'N').ZG176R  NON NUMERIC       01043600
                      AIF   ('&ZCGPR' LT '2').ZG176Q                    01043700
                      AIF   ('&ZCGPR' LE '12').ZG176R                   01043800
.ZG176Q               ANOP  ,                                           01043900
&ZMS                  SETC  '"ENDINDEX='                                01044000
&ZMS                  SETC  '&ZMS.&ENDINDEX"'                           01044100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01044200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01044300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01044400
.ZG176R               ANOP  ,                                           01044500
.*----------------------------------------------------------------***   01044600
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01044700
                      AIF   (N'&ERRORACTION LE 1).ZG179A  CK NUM        01044800
&ZMS                  SETC  '"ERRORACTION='                             01044900
&ZMS                  SETC  '&ZMS.&ERRORACTION"'                        01045000
&ZMS                  SETC  '&ZMS "ERRORACTION"'                        01045100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01045200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01045300
.ZG179A               ANOP  ,                                           01045400
.*-------------------------------------------------------------------   01045500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01045600
&XERRORACTION         SETC  ''          INITIALIZE XVARIABLE            01045700
.ZG180A   AIF   ('&ERRORACTION(1)' NE 'CONTINUE').ZG181A                01045800
&XERRORACTION         SETC  'CONTINUE'  SET KEYWORD                     01045900
.*-------------------------------------------------------------------   01046000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01046100
.ZG181A   AIF   ('&ERRORACTION(1)' NE 'TERMINATE').ZG182A               01046200
&XERRORACTION         SETC  'TERMINATE'         SET KEYWORD             01046300
.*-------------------------------------------------------------------   01046400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01046500
.ZG182A               AIF   (K'&XERRORACTION GT 0).ZG182C  KEYWORD      01046600
                      AIF   (K'&ERRORACTION(1) LE 0).ZG182B             01046700
&ZMS                  SETC  '"ERRORACTION='                             01046800
&ZMS                  SETC  '&ZMS.&ERRORACTION"'                        01046900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01047000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01047100
&ZMS                  SETC  '&ZMS "CONTINUE"'                           01047200
&ZMS                  SETC  '&ZMS OR "TERMINATE".'                      01047300
                      MNOTE 8,' &ZMS '                                  01047400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01047500
.ZG182B               ANOP  ,                                           01047600
&XERRORACTION         SETC  'CONTINUE'  SET DEFAULT KEYWORD             01047700
.ZG182C               ANOP  ,                                           01047800
&ZXERRORACTION        SETC  'INPUT'     SET IN/OUTPUT                   01047900
.*----------------------------------------------------------------***   01048000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01048100
                      AIF   (N'&AXIOVERRIDE LE 1).ZG184A  CK NUM        01048200
&ZMS                  SETC  '"AXIOVERRIDE='                             01048300
&ZMS                  SETC  '&ZMS.&AXIOVERRIDE"'                        01048400
&ZMS                  SETC  '&ZMS "AXIOVERRIDE"'                        01048500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01048600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01048700
.ZG184A               ANOP  ,                                           01048800
.*-------------------------------------------------------------------   01048900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01049000
&ZXAXIOVERRIDE        SETC  'INPUT'     SET IN/OUTPUT                   01049100
&XAXIOVERRIDE         SETC  '0'                                         01049200
                      AIF   (K'&AXIOVERRIDE(1) LE 0).ZG184B  PARM       01049300
&XAXIOVERRIDE         SETC  '&AXIOVERRIDE(1)'   SET XVARIABLE           01049400
                      AIF   (N'&AXIOVERRIDE GT 1).ZG184B  MULTI         01049500
&XAXIOVERRIDE         SETC  '&AXIOVERRIDE'      SET XVARIABLE           01049600
.ZG184B               ANOP  ,                                           01049700
.*-------------------------------------------------------------------   01049800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01049900
                      AIF   (K'&ZXAXIOVERRIDE LE 0).ZG184R  NOT I/O     01050000
         AIF   ('&XAXIOVERRIDE' EQ '0').ZG184R                          01050100
                      AIF   ('&XAXIOVERRIDE'(1,1) NE '(').ZG184R        01050200
&ZCGPR                SETC  '&XAXIOVERRIDE'(2,K'&XAXIOVERRIDE-2)        01050300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG184P               01050400
                      AIF   (K'&ZCGPR GT 2).ZG184Q                      01050500
                      AIF   ('&ZCGPR' EQ '0').ZG184Q                    01050600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01050700
                      AIF   (T'&ZCGPR NE 'N').ZG184Q  INVALID REG NAME  01050800
.ZG184P               ANOP  ,                                           01050900
                      AIF   (T'&ZCGPR NE 'N').ZG184R  NON NUMERIC       01051000
                      AIF   ('&ZCGPR' LT '2').ZG184Q                    01051100
                      AIF   ('&ZCGPR' LE '12').ZG184R                   01051200
.ZG184Q               ANOP  ,                                           01051300
&ZMS                  SETC  '"AXIOVERRIDE='                             01051400
&ZMS                  SETC  '&ZMS.&AXIOVERRIDE"'                        01051500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01051600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01051700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01051800
.ZG184R               ANOP  ,                                           01051900
.*-------------------------------------------------------------------   01052000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01052100
.ZG186                ANOP  ,                                           01052200
&ZTLC                 SETC 'DELETE_NAME'                                01052300
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG215            01052400
&XREQUEST             SETC  'DELETE_NAME'       SET KEYWORD             01052500
                      AIF   (N'&REQUEST LE 1).ZG186A  CK NUM            01052600
&ZMS                  SETC  '"REQUEST='                                 01052700
&ZMS                  SETC  '&ZMS.&REQUEST"'                            01052800
&ZMS                  SETC  '&ZMS "REQUEST"'                            01052900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01053000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01053100
.ZG186A               ANOP  ,                                           01053200
.*------------------------------------------------------------------    01053300
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01053400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01053500
.ZG186A0              AIF   (K'&ASSIGN LE 0).ZG186A1  OK                01053600
&ZCVAL                SETC '&ZCVAL ASSIGN'      INCORRECT KEY USED      01053700
.ZG186A1              AIF   (K'&REGUSER LE 0).ZG186A2  OK               01053800
&ZCVAL                SETC '&ZCVAL REGUSER'     INCORRECT KEY USED      01053900
.ZG186A2              AIF   (K'&RETURNDATA LE 0).ZG186A3  OK            01054000
&ZCVAL                SETC '&ZCVAL RETURNDATA'  INCORRECT KEY USED      01054100
.ZG186A3              AIF   (K'&WHENREG LE 0).ZG186A4  OK               01054200
&ZCVAL                SETC '&ZCVAL WHENREG'     INCORRECT KEY USED      01054300
.ZG186A4              AIF   (K'&LOCALREGCNTL LE 0).ZG186A5  OK          01054400
&ZCVAL                SETC '&ZCVAL LOCALREGCNTL'  INCORRECT KEY USED    01054500
.ZG186A5              AIF   (K'&VERSUPDATE LE 0).ZG186A6  OK            01054600
&ZCVAL                SETC '&ZCVAL VERSUPDATE'  INCORRECT KEY USED      01054700
.ZG186A6              AIF   (K'&NEWVERS LE 0).ZG186A7  OK               01054800
&ZCVAL                SETC '&ZCVAL NEWVERS'     INCORRECT KEY USED      01054900
.ZG186A7              AIF   (K'&CHANGED LE 0).ZG186A8  OK               01055000
&ZCVAL                SETC '&ZCVAL CHANGED'     INCORRECT KEY USED      01055100
.ZG186A8              AIF   (K'&CROSSINVAL LE 0).ZG186A9  OK            01055200
&ZCVAL                SETC '&ZCVAL CROSSINVAL'  INCORRECT KEY USED      01055300
.ZG186A9              AIF   (K'&GETCOLOCK LE 0).ZG186A10  OK            01055400
&ZCVAL                SETC '&ZCVAL GETCOLOCK'   INCORRECT KEY USED      01055500
.ZG186A10             AIF   (K'&PROCESSID LE 0).ZG186A11  OK            01055600
&ZCVAL                SETC '&ZCVAL PROCESSID'   INCORRECT KEY USED      01055700
.ZG186A11             AIF   (K'&PARITY LE 0).ZG186A12  OK               01055800
&ZCVAL                SETC '&ZCVAL PARITY'      INCORRECT KEY USED      01055900
.ZG186A12             AIF   (K'&USERDATA LE 0).ZG186A13  OK             01056000
&ZCVAL                SETC '&ZCVAL USERDATA'    INCORRECT KEY USED      01056100
.ZG186A13             AIF   (K'&ELEMNUM LE 0).ZG186A14  OK              01056200
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      01056300
.ZG186A14             AIF   (K'&STARTINDEX LE 0).ZG186A15  OK           01056400
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      01056500
.ZG186A15             AIF   (K'&ENDINDEX LE 0).ZG186A16  OK             01056600
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      01056700
.ZG186A16             AIF   (K'&DATAOFFSET LE 0).ZG186A17  OK           01056800
&ZCVAL                SETC '&ZCVAL DATAOFFSET'  INCORRECT KEY USED      01056900
.ZG186A17             AIF   (K'&WORBAREA LE 0).ZG186A18  OK             01057000
&ZCVAL                SETC '&ZCVAL WORBAREA'    INCORRECT KEY USED      01057100
.ZG186A18             AIF   (K'&NSBAREA LE 0).ZG186A19  OK              01057200
&ZCVAL                SETC '&ZCVAL NSBAREA'     INCORRECT KEY USED      01057300
.ZG186A19             AIF   (K'&DEIBAREA LE 0).ZG186A20  OK             01057400
&ZCVAL                SETC '&ZCVAL DEIBAREA'    INCORRECT KEY USED      01057500
.ZG186A20             AIF   (K'&CASTOUTLIST LE 0).ZG186A21  OK          01057600
&ZCVAL                SETC '&ZCVAL CASTOUTLIST'  INCORRECT KEY USED     01057700
.ZG186A21             AIF   (K'&FIRSTNAME LE 0).ZG186A22  OK            01057800
&ZCVAL                SETC '&ZCVAL FIRSTNAME'   INCORRECT KEY USED      01057900
.ZG186A22             AIF   (K'&LASTNAME LE 0).ZG186A23  OK             01058000
&ZCVAL                SETC '&ZCVAL LASTNAME'    INCORRECT KEY USED      01058100
.ZG186A23             AIF   (K'&CUNBAREA LE 0).ZG186A24  OK             01058200
&ZCVAL                SETC '&ZCVAL CUNBAREA'    INCORRECT KEY USED      01058300
.ZG186A24             AIF   (K'&ERRORACTION LE 0).ZG186A25  OK          01058400
&ZCVAL                SETC '&ZCVAL ERRORACTION'  INCORRECT KEY USED     01058500
.ZG186A25             AIF   (K'&DIRINFOFMT LE 0).ZG186A26  OK           01058600
&ZCVAL                SETC '&ZCVAL DIRINFOFMT'  INCORRECT KEY USED      01058700
.ZG186A26             AIF   (K'&RTATYPE LE 0).ZG186A27  OK              01058800
&ZCVAL                SETC '&ZCVAL RTATYPE'     INCORRECT KEY USED      01058900
.ZG186A27             AIF   (K'&CRITERIA LE 0).ZG186A28  OK             01059000
&ZCVAL                SETC '&ZCVAL CRITERIA'    INCORRECT KEY USED      01059100
.ZG186A28             AIF   (K'&COCLASSB LE 0).ZG186A29  OK             01059200
&ZCVAL                SETC '&ZCVAL COCLASSB'    INCORRECT KEY USED      01059300
.ZG186A29             AIF   (K'&COCLASSE LE 0).ZG186A30  OK             01059400
&ZCVAL                SETC '&ZCVAL COCLASSE'    INCORRECT KEY USED      01059500
.ZG186A30             AIF   (K'&COSTATSFMT LE 0).ZG186A31  OK           01059600
&ZCVAL                SETC '&ZCVAL COSTATSFMT'  INCORRECT KEY USED      01059700
.ZG186A31             AIF   (K'&STGSTATS LE 0).ZG186A32  OK             01059800
&ZCVAL                SETC '&ZCVAL STGSTATS'    INCORRECT KEY USED      01059900
.ZG186A32             AIF   (K'&NUMNAMES LE 0).ZG186A33  OK             01060000
&ZCVAL                SETC '&ZCVAL NUMNAMES'    INCORRECT KEY USED      01060100
.ZG186A33             AIF   (K'&REPEAT LE 0).ZG186A34  OK               01060200
&ZCVAL                SETC '&ZCVAL REPEAT'      INCORRECT KEY USED      01060300
.ZG186A34             AIF   (K'&RECLVCTR LE 0).ZG186A35  OK             01060400
&ZCVAL                SETC '&ZCVAL RECLVCTR'    INCORRECT KEY USED      01060500
.ZG186A35             AIF   (K'&ZCVAL LE 0).ZG186A36  OK                01060600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01060700
                      AIF  (K'&ZCVAL LE 160).ZG186A36A                  01060800
&ZCVAL                SETC '&ZCVAL'(1,160)                              01060900
&ZCVAL                SETC '&ZCVAL....'                                 01061000
.ZG186A36A            ANOP                                              01061100
&ZMS                  SETC  '"REQUEST'                                  01061200
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           01061300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01061400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01061500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01061600
.ZG186A36             ANOP  ,                                           01061700
.*------------------------------------------------------------------    01061800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01061900
&XDELETETYPE          SETC  ''          INITIALIZE XVARIABLE            01062000
.*-------------------------------------------------------------------   01062100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01062200
.ZG189                ANOP  ,                                           01062300
                      AIF   (K'&DELETETYPE(1) LE 0).ZG189A              01062400
&ZTLC                 SETC 'DIRANDDATA'                                 01062500
                      AIF   ('&DELETETYPE(1)' NE '&ZTLC').ZG200         01062600
&XDELETETYPE          SETC  'DIRANDDATA'        SET KEYWORD             01062700
                      AIF   (N'&DELETETYPE LE 1).ZG189A  CK NUM         01062800
&ZMS                  SETC  '"DELETETYPE='                              01062900
&ZMS                  SETC  '&ZMS.&DELETETYPE"'                         01063000
&ZMS                  SETC  '&ZMS "DELETETYPE"'                         01063100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01063200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01063300
.ZG189A               ANOP  ,                                           01063400
.*----------------------------------------------------------------***   01063500
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01063600
                      AIF   (N'&HALTONCHANGED LE 1).ZG191A  CK NUM      01063700
&ZMS                  SETC  '"HALTONCHANGED='                           01063800
&ZMS                  SETC  '&ZMS.&HALTONCHANGED"'                      01063900
&ZMS                  SETC  '&ZMS "HALTONCHANGED"'                      01064000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01064100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01064200
.ZG191A               ANOP  ,                                           01064300
.*-------------------------------------------------------------------   01064400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01064500
&XHALTONCHANGED       SETC  ''          INITIALIZE XVARIABLE            01064600
.ZG192A   AIF   ('&HALTONCHANGED(1)' NE 'NO').ZG193A                    01064700
&XHALTONCHANGED       SETC  'NO'        SET KEYWORD                     01064800
.*-------------------------------------------------------------------   01064900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01065000
.ZG193A   AIF   ('&HALTONCHANGED(1)' NE 'YES').ZG194A                   01065100
&XHALTONCHANGED       SETC  'YES'       SET KEYWORD                     01065200
.*-------------------------------------------------------------------   01065300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01065400
.ZG194A               AIF   (K'&XHALTONCHANGED GT 0).ZG194C  KEYWORD    01065500
                      AIF   (K'&HALTONCHANGED(1) LE 0).ZG194B           01065600
&ZMS                  SETC  '"HALTONCHANGED='                           01065700
&ZMS                  SETC  '&ZMS.&HALTONCHANGED"'                      01065800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01065900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01066000
&ZMS                  SETC  '&ZMS "NO"'                                 01066100
&ZMS                  SETC  '&ZMS OR "YES".'                            01066200
                      MNOTE 8,' &ZMS '                                  01066300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01066400
.ZG194B               ANOP  ,                                           01066500
&XHALTONCHANGED       SETC  'NO'        SET DEFAULT KEYWORD             01066600
.ZG194C               ANOP  ,                                           01066700
&ZXHALTONCHANGED      SETC  'INPUT'     SET IN/OUTPUT                   01066800
.*----------------------------------------------------------------***   01066900
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01067000
                      AIF   (N'&SUPPCROSSINVAL LE 1).ZG196A  CK NUM     01067100
&ZMS                  SETC  '"SUPPCROSSINVAL='                          01067200
&ZMS                  SETC  '&ZMS.&SUPPCROSSINVAL"'                     01067300
&ZMS                  SETC  '&ZMS "SUPPCROSSINVAL"'                     01067400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01067500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01067600
.ZG196A               ANOP  ,                                           01067700
.*-------------------------------------------------------------------   01067800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01067900
&XSUPPCROSSINVAL      SETC  ''          INITIALIZE XVARIABLE            01068000
.ZG197A   AIF   ('&SUPPCROSSINVAL(1)' NE 'NO').ZG198A                   01068100
&XSUPPCROSSINVAL      SETC  'NO'        SET KEYWORD                     01068200
.*-------------------------------------------------------------------   01068300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01068400
.ZG198A   AIF   ('&SUPPCROSSINVAL(1)' NE 'YES').ZG199A                  01068500
&XSUPPCROSSINVAL      SETC  'YES'       SET KEYWORD                     01068600
.*-------------------------------------------------------------------   01068700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01068800
.ZG199A               AIF   (K'&XSUPPCROSSINVAL GT 0).ZG199C  KEYWORD   01068900
                      AIF   (K'&SUPPCROSSINVAL(1) LE 0).ZG199B          01069000
&ZMS                  SETC  '"SUPPCROSSINVAL='                          01069100
&ZMS                  SETC  '&ZMS.&SUPPCROSSINVAL"'                     01069200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01069300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01069400
&ZMS                  SETC  '&ZMS "NO"'                                 01069500
&ZMS                  SETC  '&ZMS OR "YES".'                            01069600
                      MNOTE 8,' &ZMS '                                  01069700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01069800
.ZG199B               ANOP  ,                                           01069900
&XSUPPCROSSINVAL      SETC  'NO'        SET DEFAULT KEYWORD             01070000
.ZG199C               ANOP  ,                                           01070100
&ZXSUPPCROSSINVAL     SETC  'INPUT'     SET IN/OUTPUT                   01070200
.*-------------------------------------------------------------------   01070300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01070400
.ZG200                ANOP  ,                                           01070500
&ZTLC                 SETC 'UNCHDATA'                                   01070600
                      AIF   ('&DELETETYPE(1)' NE '&ZTLC').ZG201         01070700
&XDELETETYPE          SETC  'UNCHDATA'  SET KEYWORD                     01070800
                      AIF   (N'&DELETETYPE LE 1).ZG200A  CK NUM         01070900
&ZMS                  SETC  '"DELETETYPE='                              01071000
&ZMS                  SETC  '&ZMS.&DELETETYPE"'                         01071100
&ZMS                  SETC  '&ZMS "DELETETYPE"'                         01071200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01071300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01071400
.ZG200A               ANOP  ,                                           01071500
.*------------------------------------------------------------------    01071600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01071700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01071800
.ZG200A0              AIF   (K'&HALTONCHANGED LE 0).ZG200A1  OK         01071900
&ZCVAL                SETC '&ZCVAL HALTONCHANGED'  INCORRECT KEY USED   01072000
.ZG200A1              AIF   (K'&SUPPCROSSINVAL LE 0).ZG200A2  OK        01072100
&ZCVAL                SETC '&ZCVAL SUPPCROSSINVAL'  INCORRECT KEY USED  01072200
.ZG200A2              AIF   (K'&ZCVAL LE 0).ZG200A3  OK                 01072300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01072400
&ZMS                  SETC  '"DELETETYPE'                               01072500
&ZMS                  SETC  '&ZMS.=&DELETETYPE"'                        01072600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01072700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01072800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01072900
.ZG200A3              ANOP  ,                                           01073000
.*-------------------------------------------------------------------   01073100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01073200
.ZG201                ANOP  ,                                           01073300
&ZTLC                 SETC 'CHDATA'                                     01073400
                      AIF   ('&DELETETYPE(1)' NE '&ZTLC').ZG202         01073500
&XDELETETYPE          SETC  'CHDATA'    SET KEYWORD                     01073600
                      AIF   (N'&DELETETYPE LE 1).ZG201A  CK NUM         01073700
&ZMS                  SETC  '"DELETETYPE='                              01073800
&ZMS                  SETC  '&ZMS.&DELETETYPE"'                         01073900
&ZMS                  SETC  '&ZMS "DELETETYPE"'                         01074000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01074100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01074200
.ZG201A               ANOP  ,                                           01074300
.*------------------------------------------------------------------    01074400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01074500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01074600
.ZG201A0              AIF   (K'&HALTONCHANGED LE 0).ZG201A1  OK         01074700
&ZCVAL                SETC '&ZCVAL HALTONCHANGED'  INCORRECT KEY USED   01074800
.ZG201A1              AIF   (K'&SUPPCROSSINVAL LE 0).ZG201A2  OK        01074900
&ZCVAL                SETC '&ZCVAL SUPPCROSSINVAL'  INCORRECT KEY USED  01075000
.ZG201A2              AIF   (K'&ZCVAL LE 0).ZG201A3  OK                 01075100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01075200
&ZMS                  SETC  '"DELETETYPE'                               01075300
&ZMS                  SETC  '&ZMS.=&DELETETYPE"'                        01075400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01075500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01075600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01075700
.ZG201A3              ANOP  ,                                           01075800
.*-------------------------------------------------------------------   01075900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01076000
.ZG202                ANOP  ,                                           01076100
&ZTLC                 SETC 'ANYDATA'                                    01076200
                      AIF   ('&DELETETYPE(1)' NE '&ZTLC').ZG203         01076300
&XDELETETYPE          SETC  'ANYDATA'   SET KEYWORD                     01076400
                      AIF   (N'&DELETETYPE LE 1).ZG202A  CK NUM         01076500
&ZMS                  SETC  '"DELETETYPE='                              01076600
&ZMS                  SETC  '&ZMS.&DELETETYPE"'                         01076700
&ZMS                  SETC  '&ZMS "DELETETYPE"'                         01076800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01076900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01077000
.ZG202A               ANOP  ,                                           01077100
.*------------------------------------------------------------------    01077200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01077300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01077400
.ZG202A0              AIF   (K'&HALTONCHANGED LE 0).ZG202A1  OK         01077500
&ZCVAL                SETC '&ZCVAL HALTONCHANGED'  INCORRECT KEY USED   01077600
.ZG202A1              AIF   (K'&SUPPCROSSINVAL LE 0).ZG202A2  OK        01077700
&ZCVAL                SETC '&ZCVAL SUPPCROSSINVAL'  INCORRECT KEY USED  01077800
.ZG202A2              AIF   (K'&ZCVAL LE 0).ZG202A3  OK                 01077900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01078000
&ZMS                  SETC  '"DELETETYPE'                               01078100
&ZMS                  SETC  '&ZMS.=&DELETETYPE"'                        01078200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01078300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01078400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01078500
.ZG202A3              ANOP  ,                                           01078600
.*------------------------------------------------------------------    01078700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01078800
.ZG203                ANOP  ,                                           01078900
&ZXDELETETYPE         SETC  'INPUT'     SET IN/OUTPUT                   01079000
                      AIF   (K'&XDELETETYPE GT 0).ZG203E  VALID ARG     01079100
                      AIF   (T'&DELETETYPE EQ 'O').ZG203D  OMITTED      01079200
&ZASYSLNDX            SETA  0                                           01079300
.ZG203A               ANOP  ,           POSITIONAL MACRO KEY            01079400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01079500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG203C           01079600
&ZTLC                 SETC 'DELETETYPE'                                 01079700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG203A  01079800
.ZG203B               ANOP  ,                                           01079900
&ZXDELETETYPE         SETC  ''          RESET IN/OUTPUT                 01080000
&ZMS                  SETC  'THE "DELETETYPE" KEY'                      01080100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01080200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01080300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01080400
                      AGO   .ZG203E                                     01080500
.ZG203C               ANOP  ,                                           01080600
&ZXDELETETYPE         SETC  ''          RESET IN/OUTPUT                 01080700
&ZMS                  SETC  '"DELETETYPE='                              01080800
&ZMS                  SETC  '&ZMS.&DELETETYPE"'                         01080900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01081000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01081100
&ZMS                  SETC  '&ZMS "DIRANDDATA",'                        01081200
&ZMS                  SETC  '&ZMS "UNCHDATA",'                          01081300
&ZMS                  SETC  '&ZMS "CHDATA",'                            01081400
&ZMS                  SETC  '&ZMS OR "ANYDATA".'                        01081500
                      MNOTE 8,' &ZMS '                                  01081600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01081700
                      AGO   .ZG203E                                     01081800
.ZG203D               ANOP  ,                                           01081900
&XDELETETYPE          SETC  'DIRANDDATA'        SET DEFAULT KEYWORD     01082000
.ZG203E               ANOP  ,                                           01082100
.*----------------------------------------------------------------***   01082200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01082300
                      AIF   (N'&VERSCOMP LE 1).ZG205A  CK NUM           01082400
&ZMS                  SETC  '"VERSCOMP='                                01082500
&ZMS                  SETC  '&ZMS.&VERSCOMP"'                           01082600
&ZMS                  SETC  '&ZMS "VERSCOMP"'                           01082700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01082800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01082900
.ZG205A               ANOP  ,                                           01083000
.*-------------------------------------------------------------------   01083100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01083200
&ZXVERSCOMP           SETC  'INPUT'     SET IN/OUTPUT                   01083300
&XVERSCOMP            SETC  'NO_VERSCOMP'                               01083400
                      AIF   (K'&VERSCOMP(1) LE 0).ZG205B  PARM          01083500
&XVERSCOMP            SETC  '&VERSCOMP(1)'      SET XVARIABLE           01083600
                      AIF   (N'&VERSCOMP GT 1).ZG205B  MULTI            01083700
&XVERSCOMP            SETC  '&VERSCOMP'         SET XVARIABLE           01083800
.ZG205B               ANOP  ,                                           01083900
.*-------------------------------------------------------------------   01084000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01084100
                      AIF   (K'&ZXVERSCOMP LE 0).ZG205R  NOT I/O        01084200
         AIF   ('&XVERSCOMP' EQ 'NO_VERSCOMP').ZG205R                   01084300
                      AIF   ('&XVERSCOMP'(1,1) NE '(').ZG205R           01084400
&ZCGPR                SETC  '&XVERSCOMP'(2,K'&XVERSCOMP-2)              01084500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG205P               01084600
                      AIF   (K'&ZCGPR GT 2).ZG205Q                      01084700
                      AIF   ('&ZCGPR' EQ '0').ZG205Q                    01084800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01084900
                      AIF   (T'&ZCGPR NE 'N').ZG205Q  INVALID REG NAME  01085000
.ZG205P               ANOP  ,                                           01085100
                      AIF   (T'&ZCGPR NE 'N').ZG205R  NON NUMERIC       01085200
                      AIF   ('&ZCGPR' LT '2').ZG205Q                    01085300
                      AIF   ('&ZCGPR' LE '12').ZG205R                   01085400
.ZG205Q               ANOP  ,                                           01085500
&ZMS                  SETC  '"VERSCOMP='                                01085600
&ZMS                  SETC  '&ZMS.&VERSCOMP"'                           01085700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01085800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01085900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01086000
.ZG205R               ANOP  ,                                           01086100
.*----------------------------------------------------------------***   01086200
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01086300
                      AIF   (N'&VERSCOMPTYPE LE 1).ZG207A  CK NUM       01086400
&ZMS                  SETC  '"VERSCOMPTYPE='                            01086500
&ZMS                  SETC  '&ZMS.&VERSCOMPTYPE"'                       01086600
&ZMS                  SETC  '&ZMS "VERSCOMPTYPE"'                       01086700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01086800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01086900
.ZG207A               ANOP  ,                                           01087000
.*-------------------------------------------------------------------   01087100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01087200
&XVERSCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            01087300
.ZG208A   AIF   ('&VERSCOMPTYPE(1)' NE 'EQUAL').ZG209A                  01087400
&XVERSCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     01087500
.*-------------------------------------------------------------------   01087600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01087700
.ZG209A   AIF   ('&VERSCOMPTYPE(1)' NE 'LESSOREQUAL').ZG210A            01087800
&XVERSCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             01087900
.*-------------------------------------------------------------------   01088000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01088100
.ZG210A               AIF   (K'&XVERSCOMPTYPE GT 0).ZG210C  KEYWORD     01088200
                      AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG210B            01088300
&ZMS                  SETC  '"VERSCOMPTYPE='                            01088400
&ZMS                  SETC  '&ZMS.&VERSCOMPTYPE"'                       01088500
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01088600
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01088700
&ZMS                  SETC  '&ZMS "EQUAL"'                              01088800
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    01088900
                      MNOTE 8,' &ZMS '                                  01089000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01089100
.ZG210B               ANOP  ,                                           01089200
&XVERSCOMPTYPE        SETC  'EQUAL'     SET DEFAULT KEYWORD             01089300
.ZG210C               ANOP  ,                                           01089400
&ZXVERSCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   01089500
.*-------------------------------------------------------------------   01089600
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01089700
                      AIF   (K'&VERSCOMP(1) GT 0).ZG210D  KEY           01089800
                      AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG210D  PARM      01089900
&ZMS                  SETC  '"VERSCOMPTYPE'                             01090000
&ZMS                  SETC  '&ZMS.=&VERSCOMPTYPE"'                      01090100
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01090200
&ZMS                  SETC  '&ZMS '                                     01090300
&ZMS                  SETC  '&ZMS "VERSCOMP"'                           01090400
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01090500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01090600
.ZG210D               ANOP  ,                                           01090700
.*----------------------------------------------------------------***   01090800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01090900
                      AIF   (N'&AXIOVERRIDE LE 1).ZG213A  CK NUM        01091000
&ZMS                  SETC  '"AXIOVERRIDE='                             01091100
&ZMS                  SETC  '&ZMS.&AXIOVERRIDE"'                        01091200
&ZMS                  SETC  '&ZMS "AXIOVERRIDE"'                        01091300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01091400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01091500
.ZG213A               ANOP  ,                                           01091600
.*-------------------------------------------------------------------   01091700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01091800
&ZXAXIOVERRIDE        SETC  'INPUT'     SET IN/OUTPUT                   01091900
&XAXIOVERRIDE         SETC  '0'                                         01092000
                      AIF   (K'&AXIOVERRIDE(1) LE 0).ZG213B  PARM       01092100
&XAXIOVERRIDE         SETC  '&AXIOVERRIDE(1)'   SET XVARIABLE           01092200
                      AIF   (N'&AXIOVERRIDE GT 1).ZG213B  MULTI         01092300
&XAXIOVERRIDE         SETC  '&AXIOVERRIDE'      SET XVARIABLE           01092400
.ZG213B               ANOP  ,                                           01092500
.*-------------------------------------------------------------------   01092600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01092700
                      AIF   (K'&ZXAXIOVERRIDE LE 0).ZG213R  NOT I/O     01092800
         AIF   ('&XAXIOVERRIDE' EQ '0').ZG213R                          01092900
                      AIF   ('&XAXIOVERRIDE'(1,1) NE '(').ZG213R        01093000
&ZCGPR                SETC  '&XAXIOVERRIDE'(2,K'&XAXIOVERRIDE-2)        01093100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG213P               01093200
                      AIF   (K'&ZCGPR GT 2).ZG213Q                      01093300
                      AIF   ('&ZCGPR' EQ '0').ZG213Q                    01093400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01093500
                      AIF   (T'&ZCGPR NE 'N').ZG213Q  INVALID REG NAME  01093600
.ZG213P               ANOP  ,                                           01093700
                      AIF   (T'&ZCGPR NE 'N').ZG213R  NON NUMERIC       01093800
                      AIF   ('&ZCGPR' LT '2').ZG213Q                    01093900
                      AIF   ('&ZCGPR' LE '12').ZG213R                   01094000
.ZG213Q               ANOP  ,                                           01094100
&ZMS                  SETC  '"AXIOVERRIDE='                             01094200
&ZMS                  SETC  '&ZMS.&AXIOVERRIDE"'                        01094300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01094400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01094500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01094600
.ZG213R               ANOP  ,                                           01094700
.*-------------------------------------------------------------------   01094800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01094900
.ZG215                ANOP  ,                                           01095000
&ZTLC                 SETC 'DELETE_NAMELIST'                            01095100
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG253            01095200
&XREQUEST             SETC  'DELETE_NAMELIST'   SET KEYWORD             01095300
                      AIF   (N'&REQUEST LE 1).ZG215A  CK NUM            01095400
&ZMS                  SETC  '"REQUEST='                                 01095500
&ZMS                  SETC  '&ZMS.&REQUEST"'                            01095600
&ZMS                  SETC  '&ZMS "REQUEST"'                            01095700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01095800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01095900
.ZG215A               ANOP  ,                                           01096000
.*------------------------------------------------------------------    01096100
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01096200
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01096300
.ZG215A0              AIF   (K'&ASSIGN LE 0).ZG215A1  OK                01096400
&ZCVAL                SETC '&ZCVAL ASSIGN'      INCORRECT KEY USED      01096500
.ZG215A1              AIF   (K'&REGUSER LE 0).ZG215A2  OK               01096600
&ZCVAL                SETC '&ZCVAL REGUSER'     INCORRECT KEY USED      01096700
.ZG215A2              AIF   (K'&RETURNDATA LE 0).ZG215A3  OK            01096800
&ZCVAL                SETC '&ZCVAL RETURNDATA'  INCORRECT KEY USED      01096900
.ZG215A3              AIF   (K'&WHENREG LE 0).ZG215A4  OK               01097000
&ZCVAL                SETC '&ZCVAL WHENREG'     INCORRECT KEY USED      01097100
.ZG215A4              AIF   (K'&LOCALREGCNTL LE 0).ZG215A5  OK          01097200
&ZCVAL                SETC '&ZCVAL LOCALREGCNTL'  INCORRECT KEY USED    01097300
.ZG215A5              AIF   (K'&VERSCOMP LE 0).ZG215A6  OK              01097400
&ZCVAL                SETC '&ZCVAL VERSCOMP'    INCORRECT KEY USED      01097500
.ZG215A6              AIF   (K'&VERSUPDATE LE 0).ZG215A7  OK            01097600
&ZCVAL                SETC '&ZCVAL VERSUPDATE'  INCORRECT KEY USED      01097700
.ZG215A7              AIF   (K'&NEWVERS LE 0).ZG215A8  OK               01097800
&ZCVAL                SETC '&ZCVAL NEWVERS'     INCORRECT KEY USED      01097900
.ZG215A8              AIF   (K'&CHANGED LE 0).ZG215A9  OK               01098000
&ZCVAL                SETC '&ZCVAL CHANGED'     INCORRECT KEY USED      01098100
.ZG215A9              AIF   (K'&CROSSINVAL LE 0).ZG215A10  OK           01098200
&ZCVAL                SETC '&ZCVAL CROSSINVAL'  INCORRECT KEY USED      01098300
.ZG215A10             AIF   (K'&GETCOLOCK LE 0).ZG215A11  OK            01098400
&ZCVAL                SETC '&ZCVAL GETCOLOCK'   INCORRECT KEY USED      01098500
.ZG215A11             AIF   (K'&PROCESSID LE 0).ZG215A12  OK            01098600
&ZCVAL                SETC '&ZCVAL PROCESSID'   INCORRECT KEY USED      01098700
.ZG215A12             AIF   (K'&PARITY LE 0).ZG215A13  OK               01098800
&ZCVAL                SETC '&ZCVAL PARITY'      INCORRECT KEY USED      01098900
.ZG215A13             AIF   (K'&USERDATA LE 0).ZG215A14  OK             01099000
&ZCVAL                SETC '&ZCVAL USERDATA'    INCORRECT KEY USED      01099100
.ZG215A14             AIF   (K'&ELEMNUM LE 0).ZG215A15  OK              01099200
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      01099300
.ZG215A15             AIF   (K'&DATAOFFSET LE 0).ZG215A16  OK           01099400
&ZCVAL                SETC '&ZCVAL DATAOFFSET'  INCORRECT KEY USED      01099500
.ZG215A16             AIF   (K'&WORBAREA LE 0).ZG215A17  OK             01099600
&ZCVAL                SETC '&ZCVAL WORBAREA'    INCORRECT KEY USED      01099700
.ZG215A17             AIF   (K'&NSBAREA LE 0).ZG215A18  OK              01099800
&ZCVAL                SETC '&ZCVAL NSBAREA'     INCORRECT KEY USED      01099900
.ZG215A18             AIF   (K'&DEIBAREA LE 0).ZG215A19  OK             01100000
&ZCVAL                SETC '&ZCVAL DEIBAREA'    INCORRECT KEY USED      01100100
.ZG215A19             AIF   (K'&CASTOUTLIST LE 0).ZG215A20  OK          01100200
&ZCVAL                SETC '&ZCVAL CASTOUTLIST'  INCORRECT KEY USED     01100300
.ZG215A20             AIF   (K'&FIRSTNAME LE 0).ZG215A21  OK            01100400
&ZCVAL                SETC '&ZCVAL FIRSTNAME'   INCORRECT KEY USED      01100500
.ZG215A21             AIF   (K'&LASTNAME LE 0).ZG215A22  OK             01100600
&ZCVAL                SETC '&ZCVAL LASTNAME'    INCORRECT KEY USED      01100700
.ZG215A22             AIF   (K'&CUNBAREA LE 0).ZG215A23  OK             01100800
&ZCVAL                SETC '&ZCVAL CUNBAREA'    INCORRECT KEY USED      01100900
.ZG215A23             AIF   (K'&DIRINFOFMT LE 0).ZG215A24  OK           01101000
&ZCVAL                SETC '&ZCVAL DIRINFOFMT'  INCORRECT KEY USED      01101100
.ZG215A24             AIF   (K'&RTATYPE LE 0).ZG215A25  OK              01101200
&ZCVAL                SETC '&ZCVAL RTATYPE'     INCORRECT KEY USED      01101300
.ZG215A25             AIF   (K'&CRITERIA LE 0).ZG215A26  OK             01101400
&ZCVAL                SETC '&ZCVAL CRITERIA'    INCORRECT KEY USED      01101500
.ZG215A26             AIF   (K'&COCLASSB LE 0).ZG215A27  OK             01101600
&ZCVAL                SETC '&ZCVAL COCLASSB'    INCORRECT KEY USED      01101700
.ZG215A27             AIF   (K'&COCLASSE LE 0).ZG215A28  OK             01101800
&ZCVAL                SETC '&ZCVAL COCLASSE'    INCORRECT KEY USED      01101900
.ZG215A28             AIF   (K'&COSTATSFMT LE 0).ZG215A29  OK           01102000
&ZCVAL                SETC '&ZCVAL COSTATSFMT'  INCORRECT KEY USED      01102100
.ZG215A29             AIF   (K'&STGSTATS LE 0).ZG215A30  OK             01102200
&ZCVAL                SETC '&ZCVAL STGSTATS'    INCORRECT KEY USED      01102300
.ZG215A30             AIF   (K'&NUMNAMES LE 0).ZG215A31  OK             01102400
&ZCVAL                SETC '&ZCVAL NUMNAMES'    INCORRECT KEY USED      01102500
.ZG215A31             AIF   (K'&REPEAT LE 0).ZG215A32  OK               01102600
&ZCVAL                SETC '&ZCVAL REPEAT'      INCORRECT KEY USED      01102700
.ZG215A32             AIF   (K'&RECLVCTR LE 0).ZG215A33  OK             01102800
&ZCVAL                SETC '&ZCVAL RECLVCTR'    INCORRECT KEY USED      01102900
.ZG215A33             AIF   (K'&ZCVAL LE 0).ZG215A34  OK                01103000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01103100
                      AIF  (K'&ZCVAL LE 160).ZG215A34A                  01103200
&ZCVAL                SETC '&ZCVAL'(1,160)                              01103300
&ZCVAL                SETC '&ZCVAL....'                                 01103400
.ZG215A34A            ANOP                                              01103500
&ZMS                  SETC  '"REQUEST'                                  01103600
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           01103700
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01103800
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01103900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01104000
.ZG215A34             ANOP  ,                                           01104100
.*----------------------------------------------------------------***   01104200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01104300
                      AIF   (N'&STARTINDEX LE 1).ZG217A  CK NUM         01104400
&ZMS                  SETC  '"STARTINDEX='                              01104500
&ZMS                  SETC  '&ZMS.&STARTINDEX"'                         01104600
&ZMS                  SETC  '&ZMS "STARTINDEX"'                         01104700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01104800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01104900
.ZG217A               ANOP  ,                                           01105000
.*-------------------------------------------------------------------   01105100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01105200
&ZXSTARTINDEX         SETC  'INPUT'     SET IN/OUTPUT                   01105300
&XSTARTINDEX          SETC  '&STARTINDEX(1)'    SET XVARIABLE           01105400
                      AIF   (N'&STARTINDEX GT 1).ZG217B  MULTI          01105500
&XSTARTINDEX          SETC  '&STARTINDEX'       SET XVARIABLE           01105600
.ZG217B               AIF   (K'&STARTINDEX(1) GT 0).ZG217C              01105700
&ZXSTARTINDEX         SETC  ''          RESET IN/OUTPUT                 01105800
&ZMS                  SETC  ' '                                         01105900
&ZMS                  SETC  '&ZMS "STARTINDEX" KEY AND ITS'             01106000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01106100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01106200
.ZG217C               ANOP  ,                                           01106300
.*-------------------------------------------------------------------   01106400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01106500
                      AIF   (K'&ZXSTARTINDEX LE 0).ZG217R  NOT I/O      01106600
                      AIF   ('&XSTARTINDEX'(1,1) NE '(').ZG217R         01106700
&ZCGPR                SETC  '&XSTARTINDEX'(2,K'&XSTARTINDEX-2)          01106800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG217P               01106900
                      AIF   (K'&ZCGPR GT 2).ZG217Q                      01107000
                      AIF   ('&ZCGPR' EQ '0').ZG217Q                    01107100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01107200
                      AIF   (T'&ZCGPR NE 'N').ZG217Q  INVALID REG NAME  01107300
.ZG217P               ANOP  ,                                           01107400
                      AIF   (T'&ZCGPR NE 'N').ZG217R  NON NUMERIC       01107500
                      AIF   ('&ZCGPR' LT '2').ZG217Q                    01107600
                      AIF   ('&ZCGPR' LE '12').ZG217R                   01107700
.ZG217Q               ANOP  ,                                           01107800
&ZMS                  SETC  '"STARTINDEX='                              01107900
&ZMS                  SETC  '&ZMS.&STARTINDEX"'                         01108000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01108100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01108200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01108300
.ZG217R               ANOP  ,                                           01108400
.*----------------------------------------------------------------***   01108500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01108600
                      AIF   (N'&ENDINDEX LE 1).ZG220A  CK NUM           01108700
&ZMS                  SETC  '"ENDINDEX='                                01108800
&ZMS                  SETC  '&ZMS.&ENDINDEX"'                           01108900
&ZMS                  SETC  '&ZMS "ENDINDEX"'                           01109000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01109100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01109200
.ZG220A               ANOP  ,                                           01109300
.*-------------------------------------------------------------------   01109400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01109500
&ZXENDINDEX           SETC  'INPUT'     SET IN/OUTPUT                   01109600
&XENDINDEX            SETC  '&ENDINDEX(1)'      SET XVARIABLE           01109700
                      AIF   (N'&ENDINDEX GT 1).ZG220B  MULTI            01109800
&XENDINDEX            SETC  '&ENDINDEX'         SET XVARIABLE           01109900
.ZG220B               AIF   (K'&ENDINDEX(1) GT 0).ZG220C                01110000
&ZXENDINDEX           SETC  ''          RESET IN/OUTPUT                 01110100
&ZMS                  SETC  ' '                                         01110200
&ZMS                  SETC  '&ZMS "ENDINDEX" KEY AND ITS'               01110300
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01110400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01110500
.ZG220C               ANOP  ,                                           01110600
.*-------------------------------------------------------------------   01110700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01110800
                      AIF   (K'&ZXENDINDEX LE 0).ZG220R  NOT I/O        01110900
                      AIF   ('&XENDINDEX'(1,1) NE '(').ZG220R           01111000
&ZCGPR                SETC  '&XENDINDEX'(2,K'&XENDINDEX-2)              01111100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG220P               01111200
                      AIF   (K'&ZCGPR GT 2).ZG220Q                      01111300
                      AIF   ('&ZCGPR' EQ '0').ZG220Q                    01111400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01111500
                      AIF   (T'&ZCGPR NE 'N').ZG220Q  INVALID REG NAME  01111600
.ZG220P               ANOP  ,                                           01111700
                      AIF   (T'&ZCGPR NE 'N').ZG220R  NON NUMERIC       01111800
                      AIF   ('&ZCGPR' LT '2').ZG220Q                    01111900
                      AIF   ('&ZCGPR' LE '12').ZG220R                   01112000
.ZG220Q               ANOP  ,                                           01112100
&ZMS                  SETC  '"ENDINDEX='                                01112200
&ZMS                  SETC  '&ZMS.&ENDINDEX"'                           01112300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01112400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01112500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01112600
.ZG220R               ANOP  ,                                           01112700
.*------------------------------------------------------------------    01112800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01112900
&XDELETETYPE          SETC  ''          INITIALIZE XVARIABLE            01113000
.*-------------------------------------------------------------------   01113100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01113200
.ZG224                ANOP  ,                                           01113300
                      AIF   (K'&DELETETYPE(1) LE 0).ZG224A              01113400
&ZTLC                 SETC 'DIRANDDATA'                                 01113500
                      AIF   ('&DELETETYPE(1)' NE '&ZTLC').ZG235         01113600
&XDELETETYPE          SETC  'DIRANDDATA'        SET KEYWORD             01113700
                      AIF   (N'&DELETETYPE LE 1).ZG224A  CK NUM         01113800
&ZMS                  SETC  '"DELETETYPE='                              01113900
&ZMS                  SETC  '&ZMS.&DELETETYPE"'                         01114000
&ZMS                  SETC  '&ZMS "DELETETYPE"'                         01114100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01114200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01114300
.ZG224A               ANOP  ,                                           01114400
.*----------------------------------------------------------------***   01114500
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01114600
                      AIF   (N'&HALTONCHANGED LE 1).ZG226A  CK NUM      01114700
&ZMS                  SETC  '"HALTONCHANGED='                           01114800
&ZMS                  SETC  '&ZMS.&HALTONCHANGED"'                      01114900
&ZMS                  SETC  '&ZMS "HALTONCHANGED"'                      01115000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01115100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01115200
.ZG226A               ANOP  ,                                           01115300
.*-------------------------------------------------------------------   01115400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01115500
&XHALTONCHANGED       SETC  ''          INITIALIZE XVARIABLE            01115600
.ZG227A   AIF   ('&HALTONCHANGED(1)' NE 'NO').ZG228A                    01115700
&XHALTONCHANGED       SETC  'NO'        SET KEYWORD                     01115800
.*-------------------------------------------------------------------   01115900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01116000
.ZG228A   AIF   ('&HALTONCHANGED(1)' NE 'YES').ZG229A                   01116100
&XHALTONCHANGED       SETC  'YES'       SET KEYWORD                     01116200
.*-------------------------------------------------------------------   01116300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01116400
.ZG229A               AIF   (K'&XHALTONCHANGED GT 0).ZG229C  KEYWORD    01116500
                      AIF   (K'&HALTONCHANGED(1) LE 0).ZG229B           01116600
&ZMS                  SETC  '"HALTONCHANGED='                           01116700
&ZMS                  SETC  '&ZMS.&HALTONCHANGED"'                      01116800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01116900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01117000
&ZMS                  SETC  '&ZMS "NO"'                                 01117100
&ZMS                  SETC  '&ZMS OR "YES".'                            01117200
                      MNOTE 8,' &ZMS '                                  01117300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01117400
.ZG229B               ANOP  ,                                           01117500
&XHALTONCHANGED       SETC  'NO'        SET DEFAULT KEYWORD             01117600
.ZG229C               ANOP  ,                                           01117700
&ZXHALTONCHANGED      SETC  'INPUT'     SET IN/OUTPUT                   01117800
.*----------------------------------------------------------------***   01117900
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01118000
                      AIF   (N'&SUPPCROSSINVAL LE 1).ZG231A  CK NUM     01118100
&ZMS                  SETC  '"SUPPCROSSINVAL='                          01118200
&ZMS                  SETC  '&ZMS.&SUPPCROSSINVAL"'                     01118300
&ZMS                  SETC  '&ZMS "SUPPCROSSINVAL"'                     01118400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01118500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01118600
.ZG231A               ANOP  ,                                           01118700
.*-------------------------------------------------------------------   01118800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01118900
&XSUPPCROSSINVAL      SETC  ''          INITIALIZE XVARIABLE            01119000
.ZG232A   AIF   ('&SUPPCROSSINVAL(1)' NE 'NO').ZG233A                   01119100
&XSUPPCROSSINVAL      SETC  'NO'        SET KEYWORD                     01119200
.*-------------------------------------------------------------------   01119300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01119400
.ZG233A   AIF   ('&SUPPCROSSINVAL(1)' NE 'YES').ZG234A                  01119500
&XSUPPCROSSINVAL      SETC  'YES'       SET KEYWORD                     01119600
.*-------------------------------------------------------------------   01119700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01119800
.ZG234A               AIF   (K'&XSUPPCROSSINVAL GT 0).ZG234C  KEYWORD   01119900
                      AIF   (K'&SUPPCROSSINVAL(1) LE 0).ZG234B          01120000
&ZMS                  SETC  '"SUPPCROSSINVAL='                          01120100
&ZMS                  SETC  '&ZMS.&SUPPCROSSINVAL"'                     01120200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01120300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01120400
&ZMS                  SETC  '&ZMS "NO"'                                 01120500
&ZMS                  SETC  '&ZMS OR "YES".'                            01120600
                      MNOTE 8,' &ZMS '                                  01120700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01120800
.ZG234B               ANOP  ,                                           01120900
&XSUPPCROSSINVAL      SETC  'NO'        SET DEFAULT KEYWORD             01121000
.ZG234C               ANOP  ,                                           01121100
&ZXSUPPCROSSINVAL     SETC  'INPUT'     SET IN/OUTPUT                   01121200
.*-------------------------------------------------------------------   01121300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01121400
.ZG235                ANOP  ,                                           01121500
&ZTLC                 SETC 'UNCHDATA'                                   01121600
                      AIF   ('&DELETETYPE(1)' NE '&ZTLC').ZG236         01121700
&XDELETETYPE          SETC  'UNCHDATA'  SET KEYWORD                     01121800
                      AIF   (N'&DELETETYPE LE 1).ZG235A  CK NUM         01121900
&ZMS                  SETC  '"DELETETYPE='                              01122000
&ZMS                  SETC  '&ZMS.&DELETETYPE"'                         01122100
&ZMS                  SETC  '&ZMS "DELETETYPE"'                         01122200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01122300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01122400
.ZG235A               ANOP  ,                                           01122500
.*------------------------------------------------------------------    01122600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01122700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01122800
.ZG235A0              AIF   (K'&HALTONCHANGED LE 0).ZG235A1  OK         01122900
&ZCVAL                SETC '&ZCVAL HALTONCHANGED'  INCORRECT KEY USED   01123000
.ZG235A1              AIF   (K'&SUPPCROSSINVAL LE 0).ZG235A2  OK        01123100
&ZCVAL                SETC '&ZCVAL SUPPCROSSINVAL'  INCORRECT KEY USED  01123200
.ZG235A2              AIF   (K'&ZCVAL LE 0).ZG235A3  OK                 01123300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01123400
&ZMS                  SETC  '"DELETETYPE'                               01123500
&ZMS                  SETC  '&ZMS.=&DELETETYPE"'                        01123600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01123700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01123800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01123900
.ZG235A3              ANOP  ,                                           01124000
.*-------------------------------------------------------------------   01124100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01124200
.ZG236                ANOP  ,                                           01124300
&ZTLC                 SETC 'CHDATA'                                     01124400
                      AIF   ('&DELETETYPE(1)' NE '&ZTLC').ZG237         01124500
&XDELETETYPE          SETC  'CHDATA'    SET KEYWORD                     01124600
                      AIF   (N'&DELETETYPE LE 1).ZG236A  CK NUM         01124700
&ZMS                  SETC  '"DELETETYPE='                              01124800
&ZMS                  SETC  '&ZMS.&DELETETYPE"'                         01124900
&ZMS                  SETC  '&ZMS "DELETETYPE"'                         01125000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01125100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01125200
.ZG236A               ANOP  ,                                           01125300
.*------------------------------------------------------------------    01125400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01125500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01125600
.ZG236A0              AIF   (K'&HALTONCHANGED LE 0).ZG236A1  OK         01125700
&ZCVAL                SETC '&ZCVAL HALTONCHANGED'  INCORRECT KEY USED   01125800
.ZG236A1              AIF   (K'&SUPPCROSSINVAL LE 0).ZG236A2  OK        01125900
&ZCVAL                SETC '&ZCVAL SUPPCROSSINVAL'  INCORRECT KEY USED  01126000
.ZG236A2              AIF   (K'&ZCVAL LE 0).ZG236A3  OK                 01126100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01126200
&ZMS                  SETC  '"DELETETYPE'                               01126300
&ZMS                  SETC  '&ZMS.=&DELETETYPE"'                        01126400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01126500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01126600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01126700
.ZG236A3              ANOP  ,                                           01126800
.*-------------------------------------------------------------------   01126900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01127000
.ZG237                ANOP  ,                                           01127100
&ZTLC                 SETC 'ANYDATA'                                    01127200
                      AIF   ('&DELETETYPE(1)' NE '&ZTLC').ZG238         01127300
&XDELETETYPE          SETC  'ANYDATA'   SET KEYWORD                     01127400
                      AIF   (N'&DELETETYPE LE 1).ZG237A  CK NUM         01127500
&ZMS                  SETC  '"DELETETYPE='                              01127600
&ZMS                  SETC  '&ZMS.&DELETETYPE"'                         01127700
&ZMS                  SETC  '&ZMS "DELETETYPE"'                         01127800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01127900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01128000
.ZG237A               ANOP  ,                                           01128100
.*------------------------------------------------------------------    01128200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01128300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01128400
.ZG237A0              AIF   (K'&HALTONCHANGED LE 0).ZG237A1  OK         01128500
&ZCVAL                SETC '&ZCVAL HALTONCHANGED'  INCORRECT KEY USED   01128600
.ZG237A1              AIF   (K'&SUPPCROSSINVAL LE 0).ZG237A2  OK        01128700
&ZCVAL                SETC '&ZCVAL SUPPCROSSINVAL'  INCORRECT KEY USED  01128800
.ZG237A2              AIF   (K'&ZCVAL LE 0).ZG237A3  OK                 01128900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01129000
&ZMS                  SETC  '"DELETETYPE'                               01129100
&ZMS                  SETC  '&ZMS.=&DELETETYPE"'                        01129200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01129300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01129400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01129500
.ZG237A3              ANOP  ,                                           01129600
.*------------------------------------------------------------------    01129700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01129800
.ZG238                ANOP  ,                                           01129900
&ZXDELETETYPE         SETC  'INPUT'     SET IN/OUTPUT                   01130000
                      AIF   (K'&XDELETETYPE GT 0).ZG238E  VALID ARG     01130100
                      AIF   (T'&DELETETYPE EQ 'O').ZG238D  OMITTED      01130200
&ZASYSLNDX            SETA  0                                           01130300
.ZG238A               ANOP  ,           POSITIONAL MACRO KEY            01130400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01130500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG238C           01130600
&ZTLC                 SETC 'DELETETYPE'                                 01130700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG238A  01130800
.ZG238B               ANOP  ,                                           01130900
&ZXDELETETYPE         SETC  ''          RESET IN/OUTPUT                 01131000
&ZMS                  SETC  'THE "DELETETYPE" KEY'                      01131100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01131200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01131300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01131400
                      AGO   .ZG238E                                     01131500
.ZG238C               ANOP  ,                                           01131600
&ZXDELETETYPE         SETC  ''          RESET IN/OUTPUT                 01131700
&ZMS                  SETC  '"DELETETYPE='                              01131800
&ZMS                  SETC  '&ZMS.&DELETETYPE"'                         01131900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01132000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01132100
&ZMS                  SETC  '&ZMS "DIRANDDATA",'                        01132200
&ZMS                  SETC  '&ZMS "UNCHDATA",'                          01132300
&ZMS                  SETC  '&ZMS "CHDATA",'                            01132400
&ZMS                  SETC  '&ZMS OR "ANYDATA".'                        01132500
                      MNOTE 8,' &ZMS '                                  01132600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01132700
                      AGO   .ZG238E                                     01132800
.ZG238D               ANOP  ,                                           01132900
&XDELETETYPE          SETC  'DIRANDDATA'        SET DEFAULT KEYWORD     01133000
.ZG238E               ANOP  ,                                           01133100
.*----------------------------------------------------------------***   01133200
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01133300
                      AIF   (N'&VERSCOMPTYPE LE 1).ZG240A  CK NUM       01133400
&ZMS                  SETC  '"VERSCOMPTYPE='                            01133500
&ZMS                  SETC  '&ZMS.&VERSCOMPTYPE"'                       01133600
&ZMS                  SETC  '&ZMS "VERSCOMPTYPE"'                       01133700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01133800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01133900
.ZG240A               ANOP  ,                                           01134000
.*-------------------------------------------------------------------   01134100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01134200
&XVERSCOMPTYPE        SETC  ''          INITIALIZE XVARIABLE            01134300
.ZG241A   AIF   ('&VERSCOMPTYPE(1)' NE 'NONE').ZG242A                   01134400
&XVERSCOMPTYPE        SETC  'NONE'      SET KEYWORD                     01134500
.*-------------------------------------------------------------------   01134600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01134700
.ZG242A   AIF   ('&VERSCOMPTYPE(1)' NE 'EQUAL').ZG243A                  01134800
&XVERSCOMPTYPE        SETC  'EQUAL'     SET KEYWORD                     01134900
.*-------------------------------------------------------------------   01135000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01135100
.ZG243A   AIF   ('&VERSCOMPTYPE(1)' NE 'LESSOREQUAL').ZG244A            01135200
&XVERSCOMPTYPE        SETC  'LESSOREQUAL'       SET KEYWORD             01135300
.*-------------------------------------------------------------------   01135400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01135500
.ZG244A               AIF   (K'&XVERSCOMPTYPE GT 0).ZG244C  KEYWORD     01135600
                      AIF   (K'&VERSCOMPTYPE(1) LE 0).ZG244B            01135700
&ZMS                  SETC  '"VERSCOMPTYPE='                            01135800
&ZMS                  SETC  '&ZMS.&VERSCOMPTYPE"'                       01135900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01136000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01136100
&ZMS                  SETC  '&ZMS "NONE",'                              01136200
&ZMS                  SETC  '&ZMS "EQUAL",'                             01136300
&ZMS                  SETC  '&ZMS OR "LESSOREQUAL".'                    01136400
                      MNOTE 8,' &ZMS '                                  01136500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01136600
.ZG244B               ANOP  ,                                           01136700
&XVERSCOMPTYPE        SETC  'NONE'      SET DEFAULT KEYWORD             01136800
.ZG244C               ANOP  ,                                           01136900
&ZXVERSCOMPTYPE       SETC  'INPUT'     SET IN/OUTPUT                   01137000
.*----------------------------------------------------------------***   01137100
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01137200
                      AIF   (N'&ERRORACTION LE 1).ZG246A  CK NUM        01137300
&ZMS                  SETC  '"ERRORACTION='                             01137400
&ZMS                  SETC  '&ZMS.&ERRORACTION"'                        01137500
&ZMS                  SETC  '&ZMS "ERRORACTION"'                        01137600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01137700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01137800
.ZG246A               ANOP  ,                                           01137900
.*-------------------------------------------------------------------   01138000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01138100
&XERRORACTION         SETC  ''          INITIALIZE XVARIABLE            01138200
.ZG247A   AIF   ('&ERRORACTION(1)' NE 'CONTINUE').ZG248A                01138300
&XERRORACTION         SETC  'CONTINUE'  SET KEYWORD                     01138400
.*-------------------------------------------------------------------   01138500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01138600
.ZG248A   AIF   ('&ERRORACTION(1)' NE 'TERMINATE').ZG249A               01138700
&XERRORACTION         SETC  'TERMINATE'         SET KEYWORD             01138800
.*-------------------------------------------------------------------   01138900
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01139000
.ZG249A               AIF   (K'&XERRORACTION GT 0).ZG249C  KEYWORD      01139100
                      AIF   (K'&ERRORACTION(1) LE 0).ZG249B             01139200
&ZMS                  SETC  '"ERRORACTION='                             01139300
&ZMS                  SETC  '&ZMS.&ERRORACTION"'                        01139400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01139500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01139600
&ZMS                  SETC  '&ZMS "CONTINUE"'                           01139700
&ZMS                  SETC  '&ZMS OR "TERMINATE".'                      01139800
                      MNOTE 8,' &ZMS '                                  01139900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01140000
.ZG249B               ANOP  ,                                           01140100
&XERRORACTION         SETC  'CONTINUE'  SET DEFAULT KEYWORD             01140200
.ZG249C               ANOP  ,                                           01140300
&ZXERRORACTION        SETC  'INPUT'     SET IN/OUTPUT                   01140400
.*----------------------------------------------------------------***   01140500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01140600
                      AIF   (N'&AXIOVERRIDE LE 1).ZG251A  CK NUM        01140700
&ZMS                  SETC  '"AXIOVERRIDE='                             01140800
&ZMS                  SETC  '&ZMS.&AXIOVERRIDE"'                        01140900
&ZMS                  SETC  '&ZMS "AXIOVERRIDE"'                        01141000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01141100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01141200
.ZG251A               ANOP  ,                                           01141300
.*-------------------------------------------------------------------   01141400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01141500
&ZXAXIOVERRIDE        SETC  'INPUT'     SET IN/OUTPUT                   01141600
&XAXIOVERRIDE         SETC  '0'                                         01141700
                      AIF   (K'&AXIOVERRIDE(1) LE 0).ZG251B  PARM       01141800
&XAXIOVERRIDE         SETC  '&AXIOVERRIDE(1)'   SET XVARIABLE           01141900
                      AIF   (N'&AXIOVERRIDE GT 1).ZG251B  MULTI         01142000
&XAXIOVERRIDE         SETC  '&AXIOVERRIDE'      SET XVARIABLE           01142100
.ZG251B               ANOP  ,                                           01142200
.*-------------------------------------------------------------------   01142300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01142400
                      AIF   (K'&ZXAXIOVERRIDE LE 0).ZG251R  NOT I/O     01142500
         AIF   ('&XAXIOVERRIDE' EQ '0').ZG251R                          01142600
                      AIF   ('&XAXIOVERRIDE'(1,1) NE '(').ZG251R        01142700
&ZCGPR                SETC  '&XAXIOVERRIDE'(2,K'&XAXIOVERRIDE-2)        01142800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG251P               01142900
                      AIF   (K'&ZCGPR GT 2).ZG251Q                      01143000
                      AIF   ('&ZCGPR' EQ '0').ZG251Q                    01143100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01143200
                      AIF   (T'&ZCGPR NE 'N').ZG251Q  INVALID REG NAME  01143300
.ZG251P               ANOP  ,                                           01143400
                      AIF   (T'&ZCGPR NE 'N').ZG251R  NON NUMERIC       01143500
                      AIF   ('&ZCGPR' LT '2').ZG251Q                    01143600
                      AIF   ('&ZCGPR' LE '12').ZG251R                   01143700
.ZG251Q               ANOP  ,                                           01143800
&ZMS                  SETC  '"AXIOVERRIDE='                             01143900
&ZMS                  SETC  '&ZMS.&AXIOVERRIDE"'                        01144000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01144100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01144200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01144300
.ZG251R               ANOP  ,                                           01144400
.*-------------------------------------------------------------------   01144500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01144600
.ZG253                ANOP  ,                                           01144700
&ZTLC                 SETC 'READ_COCLASS'                               01144800
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG264            01144900
&XREQUEST             SETC  'READ_COCLASS'      SET KEYWORD             01145000
                      AIF   (N'&REQUEST LE 1).ZG253A  CK NUM            01145100
&ZMS                  SETC  '"REQUEST='                                 01145200
&ZMS                  SETC  '&ZMS.&REQUEST"'                            01145300
&ZMS                  SETC  '&ZMS "REQUEST"'                            01145400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01145500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01145600
.ZG253A               ANOP  ,                                           01145700
.*------------------------------------------------------------------    01145800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01145900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01146000
.ZG253A0              AIF   (K'&ASSIGN LE 0).ZG253A1  OK                01146100
&ZCVAL                SETC '&ZCVAL ASSIGN'      INCORRECT KEY USED      01146200
.ZG253A1              AIF   (K'&REGUSER LE 0).ZG253A2  OK               01146300
&ZCVAL                SETC '&ZCVAL REGUSER'     INCORRECT KEY USED      01146400
.ZG253A2              AIF   (K'&RETURNDATA LE 0).ZG253A3  OK            01146500
&ZCVAL                SETC '&ZCVAL RETURNDATA'  INCORRECT KEY USED      01146600
.ZG253A3              AIF   (K'&AXIOVERRIDE LE 0).ZG253A4  OK           01146700
&ZCVAL                SETC '&ZCVAL AXIOVERRIDE'  INCORRECT KEY USED     01146800
.ZG253A4              AIF   (K'&WHENREG LE 0).ZG253A5  OK               01146900
&ZCVAL                SETC '&ZCVAL WHENREG'     INCORRECT KEY USED      01147000
.ZG253A5              AIF   (K'&LOCALREGCNTL LE 0).ZG253A6  OK          01147100
&ZCVAL                SETC '&ZCVAL LOCALREGCNTL'  INCORRECT KEY USED    01147200
.ZG253A6              AIF   (K'&VERSCOMP LE 0).ZG253A7  OK              01147300
&ZCVAL                SETC '&ZCVAL VERSCOMP'    INCORRECT KEY USED      01147400
.ZG253A7              AIF   (K'&VERSCOMPTYPE LE 0).ZG253A8  OK          01147500
&ZCVAL                SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED    01147600
.ZG253A8              AIF   (K'&VERSUPDATE LE 0).ZG253A9  OK            01147700
&ZCVAL                SETC '&ZCVAL VERSUPDATE'  INCORRECT KEY USED      01147800
.ZG253A9              AIF   (K'&NEWVERS LE 0).ZG253A10  OK              01147900
&ZCVAL                SETC '&ZCVAL NEWVERS'     INCORRECT KEY USED      01148000
.ZG253A10             AIF   (K'&CHANGED LE 0).ZG253A11  OK              01148100
&ZCVAL                SETC '&ZCVAL CHANGED'     INCORRECT KEY USED      01148200
.ZG253A11             AIF   (K'&CROSSINVAL LE 0).ZG253A12  OK           01148300
&ZCVAL                SETC '&ZCVAL CROSSINVAL'  INCORRECT KEY USED      01148400
.ZG253A12             AIF   (K'&GETCOLOCK LE 0).ZG253A13  OK            01148500
&ZCVAL                SETC '&ZCVAL GETCOLOCK'   INCORRECT KEY USED      01148600
.ZG253A13             AIF   (K'&PROCESSID LE 0).ZG253A14  OK            01148700
&ZCVAL                SETC '&ZCVAL PROCESSID'   INCORRECT KEY USED      01148800
.ZG253A14             AIF   (K'&PARITY LE 0).ZG253A15  OK               01148900
&ZCVAL                SETC '&ZCVAL PARITY'      INCORRECT KEY USED      01149000
.ZG253A15             AIF   (K'&USERDATA LE 0).ZG253A16  OK             01149100
&ZCVAL                SETC '&ZCVAL USERDATA'    INCORRECT KEY USED      01149200
.ZG253A16             AIF   (K'&ELEMNUM LE 0).ZG253A17  OK              01149300
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      01149400
.ZG253A17             AIF   (K'&STARTINDEX LE 0).ZG253A18  OK           01149500
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      01149600
.ZG253A18             AIF   (K'&ENDINDEX LE 0).ZG253A19  OK             01149700
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      01149800
.ZG253A19             AIF   (K'&DATAOFFSET LE 0).ZG253A20  OK           01149900
&ZCVAL                SETC '&ZCVAL DATAOFFSET'  INCORRECT KEY USED      01150000
.ZG253A20             AIF   (K'&WORBAREA LE 0).ZG253A21  OK             01150100
&ZCVAL                SETC '&ZCVAL WORBAREA'    INCORRECT KEY USED      01150200
.ZG253A21             AIF   (K'&NSBAREA LE 0).ZG253A22  OK              01150300
&ZCVAL                SETC '&ZCVAL NSBAREA'     INCORRECT KEY USED      01150400
.ZG253A22             AIF   (K'&DEIBAREA LE 0).ZG253A23  OK             01150500
&ZCVAL                SETC '&ZCVAL DEIBAREA'    INCORRECT KEY USED      01150600
.ZG253A23             AIF   (K'&CASTOUTLIST LE 0).ZG253A24  OK          01150700
&ZCVAL                SETC '&ZCVAL CASTOUTLIST'  INCORRECT KEY USED     01150800
.ZG253A24             AIF   (K'&FIRSTNAME LE 0).ZG253A25  OK            01150900
&ZCVAL                SETC '&ZCVAL FIRSTNAME'   INCORRECT KEY USED      01151000
.ZG253A25             AIF   (K'&LASTNAME LE 0).ZG253A26  OK             01151100
&ZCVAL                SETC '&ZCVAL LASTNAME'    INCORRECT KEY USED      01151200
.ZG253A26             AIF   (K'&CUNBAREA LE 0).ZG253A27  OK             01151300
&ZCVAL                SETC '&ZCVAL CUNBAREA'    INCORRECT KEY USED      01151400
.ZG253A27             AIF   (K'&ERRORACTION LE 0).ZG253A28  OK          01151500
&ZCVAL                SETC '&ZCVAL ERRORACTION'  INCORRECT KEY USED     01151600
.ZG253A28             AIF   (K'&DELETETYPE LE 0).ZG253A29  OK           01151700
&ZCVAL                SETC '&ZCVAL DELETETYPE'  INCORRECT KEY USED      01151800
.ZG253A29             AIF   (K'&HALTONCHANGED LE 0).ZG253A30  OK        01151900
&ZCVAL                SETC '&ZCVAL HALTONCHANGED'  INCORRECT KEY USED   01152000
.ZG253A30             AIF   (K'&SUPPCROSSINVAL LE 0).ZG253A31  OK       01152100
&ZCVAL                SETC '&ZCVAL SUPPCROSSINVAL'  INCORRECT KEY USED  01152200
.ZG253A31             AIF   (K'&CRITERIA LE 0).ZG253A32  OK             01152300
&ZCVAL                SETC '&ZCVAL CRITERIA'    INCORRECT KEY USED      01152400
.ZG253A32             AIF   (K'&COCLASSB LE 0).ZG253A33  OK             01152500
&ZCVAL                SETC '&ZCVAL COCLASSB'    INCORRECT KEY USED      01152600
.ZG253A33             AIF   (K'&COCLASSE LE 0).ZG253A34  OK             01152700
&ZCVAL                SETC '&ZCVAL COCLASSE'    INCORRECT KEY USED      01152800
.ZG253A34             AIF   (K'&COSTATSFMT LE 0).ZG253A35  OK           01152900
&ZCVAL                SETC '&ZCVAL COSTATSFMT'  INCORRECT KEY USED      01153000
.ZG253A35             AIF   (K'&STGSTATS LE 0).ZG253A36  OK             01153100
&ZCVAL                SETC '&ZCVAL STGSTATS'    INCORRECT KEY USED      01153200
.ZG253A36             AIF   (K'&NUMNAMES LE 0).ZG253A37  OK             01153300
&ZCVAL                SETC '&ZCVAL NUMNAMES'    INCORRECT KEY USED      01153400
.ZG253A37             AIF   (K'&REPEAT LE 0).ZG253A38  OK               01153500
&ZCVAL                SETC '&ZCVAL REPEAT'      INCORRECT KEY USED      01153600
.ZG253A38             AIF   (K'&RECLVCTR LE 0).ZG253A39  OK             01153700
&ZCVAL                SETC '&ZCVAL RECLVCTR'    INCORRECT KEY USED      01153800
.ZG253A39             AIF   (K'&ZCVAL LE 0).ZG253A40  OK                01153900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01154000
                      AIF  (K'&ZCVAL LE 160).ZG253A40A                  01154100
&ZCVAL                SETC '&ZCVAL'(1,160)                              01154200
&ZCVAL                SETC '&ZCVAL....'                                 01154300
.ZG253A40A            ANOP                                              01154400
&ZMS                  SETC  '"REQUEST'                                  01154500
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           01154600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01154700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01154800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01154900
.ZG253A40             ANOP  ,                                           01155000
.*----------------------------------------------------------------***   01155100
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01155200
                      AIF   (N'&DIRINFOFMT LE 1).ZG255A  CK NUM         01155300
&ZMS                  SETC  '"DIRINFOFMT='                              01155400
&ZMS                  SETC  '&ZMS.&DIRINFOFMT"'                         01155500
&ZMS                  SETC  '&ZMS "DIRINFOFMT"'                         01155600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01155700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01155800
.ZG255A               ANOP  ,                                           01155900
.*-------------------------------------------------------------------   01156000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01156100
&XDIRINFOFMT          SETC  ''          INITIALIZE XVARIABLE            01156200
.ZG256A   AIF   ('&DIRINFOFMT(1)' NE 'NAMELIST').ZG257A                 01156300
&XDIRINFOFMT          SETC  'NAMELIST'  SET KEYWORD                     01156400
.*-------------------------------------------------------------------   01156500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01156600
.ZG257A   AIF   ('&DIRINFOFMT(1)' NE 'DIRENTRYLIST').ZG258A             01156700
&XDIRINFOFMT          SETC  'DIRENTRYLIST'      SET KEYWORD             01156800
.*-------------------------------------------------------------------   01156900
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01157000
.ZG258A               AIF   (K'&XDIRINFOFMT GT 0).ZG258C  KEYWORD       01157100
                      AIF   (K'&DIRINFOFMT(1) LE 0).ZG258B              01157200
&ZMS                  SETC  '"DIRINFOFMT='                              01157300
&ZMS                  SETC  '&ZMS.&DIRINFOFMT"'                         01157400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01157500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01157600
&ZMS                  SETC  '&ZMS "NAMELIST"'                           01157700
&ZMS                  SETC  '&ZMS OR "DIRENTRYLIST".'                   01157800
                      MNOTE 8,' &ZMS '                                  01157900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01158000
.ZG258B               ANOP  ,                                           01158100
&XDIRINFOFMT          SETC  'NAMELIST'  SET DEFAULT KEYWORD             01158200
.ZG258C               ANOP  ,                                           01158300
&ZXDIRINFOFMT         SETC  'INPUT'     SET IN/OUTPUT                   01158400
.*----------------------------------------------------------------***   01158500
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01158600
                      AIF   (N'&RTATYPE LE 1).ZG260A  CK NUM            01158700
&ZMS                  SETC  '"RTATYPE='                                 01158800
&ZMS                  SETC  '&ZMS.&RTATYPE"'                            01158900
&ZMS                  SETC  '&ZMS "RTATYPE"'                            01159000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01159100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01159200
.ZG260A               ANOP  ,                                           01159300
.*-------------------------------------------------------------------   01159400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01159500
&XRTATYPE             SETC  ''          INITIALIZE XVARIABLE            01159600
.ZG261A   AIF   ('&RTATYPE(1)' NE 'NORMAL').ZG262A                      01159700
&XRTATYPE             SETC  'NORMAL'    SET KEYWORD                     01159800
.*-------------------------------------------------------------------   01159900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01160000
.ZG262A   AIF   ('&RTATYPE(1)' NE 'ENHANCED').ZG263A                    01160100
&XRTATYPE             SETC  'ENHANCED'  SET KEYWORD                     01160200
.*-------------------------------------------------------------------   01160300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01160400
.ZG263A               AIF   (K'&XRTATYPE GT 0).ZG263C  KEYWORD          01160500
                      AIF   (K'&RTATYPE(1) LE 0).ZG263B                 01160600
&ZMS                  SETC  '"RTATYPE='                                 01160700
&ZMS                  SETC  '&ZMS.&RTATYPE"'                            01160800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01160900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01161000
&ZMS                  SETC  '&ZMS "NORMAL"'                             01161100
&ZMS                  SETC  '&ZMS OR "ENHANCED".'                       01161200
                      MNOTE 8,' &ZMS '                                  01161300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01161400
.ZG263B               ANOP  ,                                           01161500
&XRTATYPE             SETC  'NORMAL'    SET DEFAULT KEYWORD             01161600
.ZG263C               ANOP  ,                                           01161700
&ZXRTATYPE            SETC  'INPUT'     SET IN/OUTPUT                   01161800
.*-------------------------------------------------------------------   01161900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01162000
.ZG264                ANOP  ,                                           01162100
&ZTLC                 SETC 'READ_DIRINFO'                               01162200
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG275            01162300
&XREQUEST             SETC  'READ_DIRINFO'      SET KEYWORD             01162400
                      AIF   (N'&REQUEST LE 1).ZG264A  CK NUM            01162500
&ZMS                  SETC  '"REQUEST='                                 01162600
&ZMS                  SETC  '&ZMS.&REQUEST"'                            01162700
&ZMS                  SETC  '&ZMS "REQUEST"'                            01162800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01162900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01163000
.ZG264A               ANOP  ,                                           01163100
.*------------------------------------------------------------------    01163200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01163300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01163400
.ZG264A0              AIF   (K'&ASSIGN LE 0).ZG264A1  OK                01163500
&ZCVAL                SETC '&ZCVAL ASSIGN'      INCORRECT KEY USED      01163600
.ZG264A1              AIF   (K'&REGUSER LE 0).ZG264A2  OK               01163700
&ZCVAL                SETC '&ZCVAL REGUSER'     INCORRECT KEY USED      01163800
.ZG264A2              AIF   (K'&RETURNDATA LE 0).ZG264A3  OK            01163900
&ZCVAL                SETC '&ZCVAL RETURNDATA'  INCORRECT KEY USED      01164000
.ZG264A3              AIF   (K'&AXIOVERRIDE LE 0).ZG264A4  OK           01164100
&ZCVAL                SETC '&ZCVAL AXIOVERRIDE'  INCORRECT KEY USED     01164200
.ZG264A4              AIF   (K'&WHENREG LE 0).ZG264A5  OK               01164300
&ZCVAL                SETC '&ZCVAL WHENREG'     INCORRECT KEY USED      01164400
.ZG264A5              AIF   (K'&LOCALREGCNTL LE 0).ZG264A6  OK          01164500
&ZCVAL                SETC '&ZCVAL LOCALREGCNTL'  INCORRECT KEY USED    01164600
.ZG264A6              AIF   (K'&VERSCOMP LE 0).ZG264A7  OK              01164700
&ZCVAL                SETC '&ZCVAL VERSCOMP'    INCORRECT KEY USED      01164800
.ZG264A7              AIF   (K'&VERSCOMPTYPE LE 0).ZG264A8  OK          01164900
&ZCVAL                SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED    01165000
.ZG264A8              AIF   (K'&VERSUPDATE LE 0).ZG264A9  OK            01165100
&ZCVAL                SETC '&ZCVAL VERSUPDATE'  INCORRECT KEY USED      01165200
.ZG264A9              AIF   (K'&NEWVERS LE 0).ZG264A10  OK              01165300
&ZCVAL                SETC '&ZCVAL NEWVERS'     INCORRECT KEY USED      01165400
.ZG264A10             AIF   (K'&CHANGED LE 0).ZG264A11  OK              01165500
&ZCVAL                SETC '&ZCVAL CHANGED'     INCORRECT KEY USED      01165600
.ZG264A11             AIF   (K'&CROSSINVAL LE 0).ZG264A12  OK           01165700
&ZCVAL                SETC '&ZCVAL CROSSINVAL'  INCORRECT KEY USED      01165800
.ZG264A12             AIF   (K'&GETCOLOCK LE 0).ZG264A13  OK            01165900
&ZCVAL                SETC '&ZCVAL GETCOLOCK'   INCORRECT KEY USED      01166000
.ZG264A13             AIF   (K'&PROCESSID LE 0).ZG264A14  OK            01166100
&ZCVAL                SETC '&ZCVAL PROCESSID'   INCORRECT KEY USED      01166200
.ZG264A14             AIF   (K'&PARITY LE 0).ZG264A15  OK               01166300
&ZCVAL                SETC '&ZCVAL PARITY'      INCORRECT KEY USED      01166400
.ZG264A15             AIF   (K'&USERDATA LE 0).ZG264A16  OK             01166500
&ZCVAL                SETC '&ZCVAL USERDATA'    INCORRECT KEY USED      01166600
.ZG264A16             AIF   (K'&ELEMNUM LE 0).ZG264A17  OK              01166700
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      01166800
.ZG264A17             AIF   (K'&STARTINDEX LE 0).ZG264A18  OK           01166900
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      01167000
.ZG264A18             AIF   (K'&ENDINDEX LE 0).ZG264A19  OK             01167100
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      01167200
.ZG264A19             AIF   (K'&DATAOFFSET LE 0).ZG264A20  OK           01167300
&ZCVAL                SETC '&ZCVAL DATAOFFSET'  INCORRECT KEY USED      01167400
.ZG264A20             AIF   (K'&WORBAREA LE 0).ZG264A21  OK             01167500
&ZCVAL                SETC '&ZCVAL WORBAREA'    INCORRECT KEY USED      01167600
.ZG264A21             AIF   (K'&NSBAREA LE 0).ZG264A22  OK              01167700
&ZCVAL                SETC '&ZCVAL NSBAREA'     INCORRECT KEY USED      01167800
.ZG264A22             AIF   (K'&DEIBAREA LE 0).ZG264A23  OK             01167900
&ZCVAL                SETC '&ZCVAL DEIBAREA'    INCORRECT KEY USED      01168000
.ZG264A23             AIF   (K'&CASTOUTLIST LE 0).ZG264A24  OK          01168100
&ZCVAL                SETC '&ZCVAL CASTOUTLIST'  INCORRECT KEY USED     01168200
.ZG264A24             AIF   (K'&FIRSTNAME LE 0).ZG264A25  OK            01168300
&ZCVAL                SETC '&ZCVAL FIRSTNAME'   INCORRECT KEY USED      01168400
.ZG264A25             AIF   (K'&LASTNAME LE 0).ZG264A26  OK             01168500
&ZCVAL                SETC '&ZCVAL LASTNAME'    INCORRECT KEY USED      01168600
.ZG264A26             AIF   (K'&CUNBAREA LE 0).ZG264A27  OK             01168700
&ZCVAL                SETC '&ZCVAL CUNBAREA'    INCORRECT KEY USED      01168800
.ZG264A27             AIF   (K'&ERRORACTION LE 0).ZG264A28  OK          01168900
&ZCVAL                SETC '&ZCVAL ERRORACTION'  INCORRECT KEY USED     01169000
.ZG264A28             AIF   (K'&DELETETYPE LE 0).ZG264A29  OK           01169100
&ZCVAL                SETC '&ZCVAL DELETETYPE'  INCORRECT KEY USED      01169200
.ZG264A29             AIF   (K'&HALTONCHANGED LE 0).ZG264A30  OK        01169300
&ZCVAL                SETC '&ZCVAL HALTONCHANGED'  INCORRECT KEY USED   01169400
.ZG264A30             AIF   (K'&SUPPCROSSINVAL LE 0).ZG264A31  OK       01169500
&ZCVAL                SETC '&ZCVAL SUPPCROSSINVAL'  INCORRECT KEY USED  01169600
.ZG264A31             AIF   (K'&RTATYPE LE 0).ZG264A32  OK              01169700
&ZCVAL                SETC '&ZCVAL RTATYPE'     INCORRECT KEY USED      01169800
.ZG264A32             AIF   (K'&COCLASSB LE 0).ZG264A33  OK             01169900
&ZCVAL                SETC '&ZCVAL COCLASSB'    INCORRECT KEY USED      01170000
.ZG264A33             AIF   (K'&COCLASSE LE 0).ZG264A34  OK             01170100
&ZCVAL                SETC '&ZCVAL COCLASSE'    INCORRECT KEY USED      01170200
.ZG264A34             AIF   (K'&COSTATSFMT LE 0).ZG264A35  OK           01170300
&ZCVAL                SETC '&ZCVAL COSTATSFMT'  INCORRECT KEY USED      01170400
.ZG264A35             AIF   (K'&STGSTATS LE 0).ZG264A36  OK             01170500
&ZCVAL                SETC '&ZCVAL STGSTATS'    INCORRECT KEY USED      01170600
.ZG264A36             AIF   (K'&NUMNAMES LE 0).ZG264A37  OK             01170700
&ZCVAL                SETC '&ZCVAL NUMNAMES'    INCORRECT KEY USED      01170800
.ZG264A37             AIF   (K'&REPEAT LE 0).ZG264A38  OK               01170900
&ZCVAL                SETC '&ZCVAL REPEAT'      INCORRECT KEY USED      01171000
.ZG264A38             AIF   (K'&RECLVCTR LE 0).ZG264A39  OK             01171100
&ZCVAL                SETC '&ZCVAL RECLVCTR'    INCORRECT KEY USED      01171200
.ZG264A39             AIF   (K'&ZCVAL LE 0).ZG264A40  OK                01171300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01171400
                      AIF  (K'&ZCVAL LE 160).ZG264A40A                  01171500
&ZCVAL                SETC '&ZCVAL'(1,160)                              01171600
&ZCVAL                SETC '&ZCVAL....'                                 01171700
.ZG264A40A            ANOP                                              01171800
&ZMS                  SETC  '"REQUEST'                                  01171900
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           01172000
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01172100
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01172200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01172300
.ZG264A40             ANOP  ,                                           01172400
.*----------------------------------------------------------------***   01172500
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01172600
                      AIF   (N'&DIRINFOFMT LE 1).ZG266A  CK NUM         01172700
&ZMS                  SETC  '"DIRINFOFMT='                              01172800
&ZMS                  SETC  '&ZMS.&DIRINFOFMT"'                         01172900
&ZMS                  SETC  '&ZMS "DIRINFOFMT"'                         01173000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01173100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01173200
.ZG266A               ANOP  ,                                           01173300
.*-------------------------------------------------------------------   01173400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01173500
&XDIRINFOFMT          SETC  ''          INITIALIZE XVARIABLE            01173600
.ZG267A   AIF   ('&DIRINFOFMT(1)' NE 'DIRENTRYLIST').ZG268A             01173700
&XDIRINFOFMT          SETC  'DIRENTRYLIST'      SET KEYWORD             01173800
.*-------------------------------------------------------------------   01173900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01174000
.ZG268A   AIF   ('&DIRINFOFMT(1)' NE 'NAMELIST').ZG269A                 01174100
&XDIRINFOFMT          SETC  'NAMELIST'  SET KEYWORD                     01174200
.*-------------------------------------------------------------------   01174300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01174400
.ZG269A               AIF   (K'&XDIRINFOFMT GT 0).ZG269C  KEYWORD       01174500
                      AIF   (K'&DIRINFOFMT(1) LE 0).ZG269B              01174600
&ZMS                  SETC  '"DIRINFOFMT='                              01174700
&ZMS                  SETC  '&ZMS.&DIRINFOFMT"'                         01174800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01174900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01175000
&ZMS                  SETC  '&ZMS "DIRENTRYLIST"'                       01175100
&ZMS                  SETC  '&ZMS OR "NAMELIST".'                       01175200
                      MNOTE 8,' &ZMS '                                  01175300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01175400
.ZG269B               ANOP  ,                                           01175500
&XDIRINFOFMT          SETC  'DIRENTRYLIST'      SET DEFAULT KEYWORD     01175600
.ZG269C               ANOP  ,                                           01175700
&ZXDIRINFOFMT         SETC  'INPUT'     SET IN/OUTPUT                   01175800
.*----------------------------------------------------------------***   01175900
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01176000
                      AIF   (N'&CRITERIA LE 1).ZG271A  CK NUM           01176100
&ZMS                  SETC  '"CRITERIA='                                01176200
&ZMS                  SETC  '&ZMS.&CRITERIA"'                           01176300
&ZMS                  SETC  '&ZMS "CRITERIA"'                           01176400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01176500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01176600
.ZG271A               ANOP  ,                                           01176700
.*-------------------------------------------------------------------   01176800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01176900
&XCRITERIA            SETC  ''          INITIALIZE XVARIABLE            01177000
.ZG272A   AIF   ('&CRITERIA(1)' NE 'ALL').ZG273A                        01177100
&XCRITERIA            SETC  'ALL'       SET KEYWORD                     01177200
.*-------------------------------------------------------------------   01177300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01177400
.ZG273A   AIF   ('&CRITERIA(1)' NE 'CHANGED').ZG274A                    01177500
&XCRITERIA            SETC  'CHANGED'   SET KEYWORD                     01177600
.*-------------------------------------------------------------------   01177700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01177800
.ZG274A               AIF   (K'&XCRITERIA GT 0).ZG274C  KEYWORD         01177900
                      AIF   (K'&CRITERIA(1) LE 0).ZG274B                01178000
&ZMS                  SETC  '"CRITERIA='                                01178100
&ZMS                  SETC  '&ZMS.&CRITERIA"'                           01178200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01178300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01178400
&ZMS                  SETC  '&ZMS "ALL"'                                01178500
&ZMS                  SETC  '&ZMS OR "CHANGED".'                        01178600
                      MNOTE 8,' &ZMS '                                  01178700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01178800
.ZG274B               ANOP  ,                                           01178900
&XCRITERIA            SETC  'ALL'       SET DEFAULT KEYWORD             01179000
.ZG274C               ANOP  ,                                           01179100
&ZXCRITERIA           SETC  'INPUT'     SET IN/OUTPUT                   01179200
.*-------------------------------------------------------------------   01179300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01179400
.ZG275                ANOP  ,                                           01179500
&ZTLC                 SETC 'RESET_REFBIT'                               01179600
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG281            01179700
&XREQUEST             SETC  'RESET_REFBIT'      SET KEYWORD             01179800
                      AIF   (N'&REQUEST LE 1).ZG275A  CK NUM            01179900
&ZMS                  SETC  '"REQUEST='                                 01180000
&ZMS                  SETC  '&ZMS.&REQUEST"'                            01180100
&ZMS                  SETC  '&ZMS "REQUEST"'                            01180200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01180300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01180400
.ZG275A               ANOP  ,                                           01180500
.*------------------------------------------------------------------    01180600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01180700
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01180800
.ZG275A0              AIF   (K'&ASSIGN LE 0).ZG275A1  OK                01180900
&ZCVAL                SETC '&ZCVAL ASSIGN'      INCORRECT KEY USED      01181000
.ZG275A1              AIF   (K'&REGUSER LE 0).ZG275A2  OK               01181100
&ZCVAL                SETC '&ZCVAL REGUSER'     INCORRECT KEY USED      01181200
.ZG275A2              AIF   (K'&RETURNDATA LE 0).ZG275A3  OK            01181300
&ZCVAL                SETC '&ZCVAL RETURNDATA'  INCORRECT KEY USED      01181400
.ZG275A3              AIF   (K'&AXIOVERRIDE LE 0).ZG275A4  OK           01181500
&ZCVAL                SETC '&ZCVAL AXIOVERRIDE'  INCORRECT KEY USED     01181600
.ZG275A4              AIF   (K'&WHENREG LE 0).ZG275A5  OK               01181700
&ZCVAL                SETC '&ZCVAL WHENREG'     INCORRECT KEY USED      01181800
.ZG275A5              AIF   (K'&LOCALREGCNTL LE 0).ZG275A6  OK          01181900
&ZCVAL                SETC '&ZCVAL LOCALREGCNTL'  INCORRECT KEY USED    01182000
.ZG275A6              AIF   (K'&VERSCOMP LE 0).ZG275A7  OK              01182100
&ZCVAL                SETC '&ZCVAL VERSCOMP'    INCORRECT KEY USED      01182200
.ZG275A7              AIF   (K'&VERSCOMPTYPE LE 0).ZG275A8  OK          01182300
&ZCVAL                SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED    01182400
.ZG275A8              AIF   (K'&VERSUPDATE LE 0).ZG275A9  OK            01182500
&ZCVAL                SETC '&ZCVAL VERSUPDATE'  INCORRECT KEY USED      01182600
.ZG275A9              AIF   (K'&NEWVERS LE 0).ZG275A10  OK              01182700
&ZCVAL                SETC '&ZCVAL NEWVERS'     INCORRECT KEY USED      01182800
.ZG275A10             AIF   (K'&CHANGED LE 0).ZG275A11  OK              01182900
&ZCVAL                SETC '&ZCVAL CHANGED'     INCORRECT KEY USED      01183000
.ZG275A11             AIF   (K'&CROSSINVAL LE 0).ZG275A12  OK           01183100
&ZCVAL                SETC '&ZCVAL CROSSINVAL'  INCORRECT KEY USED      01183200
.ZG275A12             AIF   (K'&GETCOLOCK LE 0).ZG275A13  OK            01183300
&ZCVAL                SETC '&ZCVAL GETCOLOCK'   INCORRECT KEY USED      01183400
.ZG275A13             AIF   (K'&PROCESSID LE 0).ZG275A14  OK            01183500
&ZCVAL                SETC '&ZCVAL PROCESSID'   INCORRECT KEY USED      01183600
.ZG275A14             AIF   (K'&PARITY LE 0).ZG275A15  OK               01183700
&ZCVAL                SETC '&ZCVAL PARITY'      INCORRECT KEY USED      01183800
.ZG275A15             AIF   (K'&USERDATA LE 0).ZG275A16  OK             01183900
&ZCVAL                SETC '&ZCVAL USERDATA'    INCORRECT KEY USED      01184000
.ZG275A16             AIF   (K'&ELEMNUM LE 0).ZG275A17  OK              01184100
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      01184200
.ZG275A17             AIF   (K'&STARTINDEX LE 0).ZG275A18  OK           01184300
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      01184400
.ZG275A18             AIF   (K'&ENDINDEX LE 0).ZG275A19  OK             01184500
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      01184600
.ZG275A19             AIF   (K'&DATAOFFSET LE 0).ZG275A20  OK           01184700
&ZCVAL                SETC '&ZCVAL DATAOFFSET'  INCORRECT KEY USED      01184800
.ZG275A20             AIF   (K'&WORBAREA LE 0).ZG275A21  OK             01184900
&ZCVAL                SETC '&ZCVAL WORBAREA'    INCORRECT KEY USED      01185000
.ZG275A21             AIF   (K'&NSBAREA LE 0).ZG275A22  OK              01185100
&ZCVAL                SETC '&ZCVAL NSBAREA'     INCORRECT KEY USED      01185200
.ZG275A22             AIF   (K'&DEIBAREA LE 0).ZG275A23  OK             01185300
&ZCVAL                SETC '&ZCVAL DEIBAREA'    INCORRECT KEY USED      01185400
.ZG275A23             AIF   (K'&CASTOUTLIST LE 0).ZG275A24  OK          01185500
&ZCVAL                SETC '&ZCVAL CASTOUTLIST'  INCORRECT KEY USED     01185600
.ZG275A24             AIF   (K'&FIRSTNAME LE 0).ZG275A25  OK            01185700
&ZCVAL                SETC '&ZCVAL FIRSTNAME'   INCORRECT KEY USED      01185800
.ZG275A25             AIF   (K'&LASTNAME LE 0).ZG275A26  OK             01185900
&ZCVAL                SETC '&ZCVAL LASTNAME'    INCORRECT KEY USED      01186000
.ZG275A26             AIF   (K'&CUNBAREA LE 0).ZG275A27  OK             01186100
&ZCVAL                SETC '&ZCVAL CUNBAREA'    INCORRECT KEY USED      01186200
.ZG275A27             AIF   (K'&ERRORACTION LE 0).ZG275A28  OK          01186300
&ZCVAL                SETC '&ZCVAL ERRORACTION'  INCORRECT KEY USED     01186400
.ZG275A28             AIF   (K'&DELETETYPE LE 0).ZG275A29  OK           01186500
&ZCVAL                SETC '&ZCVAL DELETETYPE'  INCORRECT KEY USED      01186600
.ZG275A29             AIF   (K'&HALTONCHANGED LE 0).ZG275A30  OK        01186700
&ZCVAL                SETC '&ZCVAL HALTONCHANGED'  INCORRECT KEY USED   01186800
.ZG275A30             AIF   (K'&SUPPCROSSINVAL LE 0).ZG275A31  OK       01186900
&ZCVAL                SETC '&ZCVAL SUPPCROSSINVAL'  INCORRECT KEY USED  01187000
.ZG275A31             AIF   (K'&DIRINFOFMT LE 0).ZG275A32  OK           01187100
&ZCVAL                SETC '&ZCVAL DIRINFOFMT'  INCORRECT KEY USED      01187200
.ZG275A32             AIF   (K'&RTATYPE LE 0).ZG275A33  OK              01187300
&ZCVAL                SETC '&ZCVAL RTATYPE'     INCORRECT KEY USED      01187400
.ZG275A33             AIF   (K'&COCLASSB LE 0).ZG275A34  OK             01187500
&ZCVAL                SETC '&ZCVAL COCLASSB'    INCORRECT KEY USED      01187600
.ZG275A34             AIF   (K'&COCLASSE LE 0).ZG275A35  OK             01187700
&ZCVAL                SETC '&ZCVAL COCLASSE'    INCORRECT KEY USED      01187800
.ZG275A35             AIF   (K'&COSTATSFMT LE 0).ZG275A36  OK           01187900
&ZCVAL                SETC '&ZCVAL COSTATSFMT'  INCORRECT KEY USED      01188000
.ZG275A36             AIF   (K'&STGSTATS LE 0).ZG275A37  OK             01188100
&ZCVAL                SETC '&ZCVAL STGSTATS'    INCORRECT KEY USED      01188200
.ZG275A37             AIF   (K'&NUMNAMES LE 0).ZG275A38  OK             01188300
&ZCVAL                SETC '&ZCVAL NUMNAMES'    INCORRECT KEY USED      01188400
.ZG275A38             AIF   (K'&REPEAT LE 0).ZG275A39  OK               01188500
&ZCVAL                SETC '&ZCVAL REPEAT'      INCORRECT KEY USED      01188600
.ZG275A39             AIF   (K'&RECLVCTR LE 0).ZG275A40  OK             01188700
&ZCVAL                SETC '&ZCVAL RECLVCTR'    INCORRECT KEY USED      01188800
.ZG275A40             AIF   (K'&ZCVAL LE 0).ZG275A41  OK                01188900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01189000
                      AIF  (K'&ZCVAL LE 160).ZG275A41A                  01189100
&ZCVAL                SETC '&ZCVAL'(1,160)                              01189200
&ZCVAL                SETC '&ZCVAL....'                                 01189300
.ZG275A41A            ANOP                                              01189400
&ZMS                  SETC  '"REQUEST'                                  01189500
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           01189600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01189700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01189800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01189900
.ZG275A41             ANOP  ,                                           01190000
.*----------------------------------------------------------------***   01190100
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01190200
                      AIF   (N'&CRITERIA LE 1).ZG277A  CK NUM           01190300
&ZMS                  SETC  '"CRITERIA='                                01190400
&ZMS                  SETC  '&ZMS.&CRITERIA"'                           01190500
&ZMS                  SETC  '&ZMS "CRITERIA"'                           01190600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01190700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01190800
.ZG277A               ANOP  ,                                           01190900
.*-------------------------------------------------------------------   01191000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01191100
&XCRITERIA            SETC  ''          INITIALIZE XVARIABLE            01191200
.ZG278A   AIF   ('&CRITERIA(1)' NE 'ALL').ZG279A                        01191300
&XCRITERIA            SETC  'ALL'       SET KEYWORD                     01191400
.*-------------------------------------------------------------------   01191500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01191600
.ZG279A   AIF   ('&CRITERIA(1)' NE 'CHANGED').ZG280A                    01191700
&XCRITERIA            SETC  'CHANGED'   SET KEYWORD                     01191800
.*-------------------------------------------------------------------   01191900
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01192000
.ZG280A               AIF   (K'&XCRITERIA GT 0).ZG280C  KEYWORD         01192100
                      AIF   (K'&CRITERIA(1) LE 0).ZG280B                01192200
&ZMS                  SETC  '"CRITERIA='                                01192300
&ZMS                  SETC  '&ZMS.&CRITERIA"'                           01192400
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01192500
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01192600
&ZMS                  SETC  '&ZMS "ALL"'                                01192700
&ZMS                  SETC  '&ZMS OR "CHANGED".'                        01192800
                      MNOTE 8,' &ZMS '                                  01192900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01193000
.ZG280B               ANOP  ,                                           01193100
&XCRITERIA            SETC  'ALL'       SET DEFAULT KEYWORD             01193200
.ZG280C               ANOP  ,                                           01193300
&ZXCRITERIA           SETC  'INPUT'     SET IN/OUTPUT                   01193400
.*-------------------------------------------------------------------   01193500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01193600
.ZG281                ANOP  ,                                           01193700
&ZTLC                 SETC 'READ_COSTATS'                               01193800
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG293            01193900
&XREQUEST             SETC  'READ_COSTATS'      SET KEYWORD             01194000
                      AIF   (N'&REQUEST LE 1).ZG281A  CK NUM            01194100
&ZMS                  SETC  '"REQUEST='                                 01194200
&ZMS                  SETC  '&ZMS.&REQUEST"'                            01194300
&ZMS                  SETC  '&ZMS "REQUEST"'                            01194400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01194500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01194600
.ZG281A               ANOP  ,                                           01194700
.*------------------------------------------------------------------    01194800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01194900
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01195000
.ZG281A0              AIF   (K'&ASSIGN LE 0).ZG281A1  OK                01195100
&ZCVAL                SETC '&ZCVAL ASSIGN'      INCORRECT KEY USED      01195200
.ZG281A1              AIF   (K'&REGUSER LE 0).ZG281A2  OK               01195300
&ZCVAL                SETC '&ZCVAL REGUSER'     INCORRECT KEY USED      01195400
.ZG281A2              AIF   (K'&RETURNDATA LE 0).ZG281A3  OK            01195500
&ZCVAL                SETC '&ZCVAL RETURNDATA'  INCORRECT KEY USED      01195600
.ZG281A3              AIF   (K'&AXIOVERRIDE LE 0).ZG281A4  OK           01195700
&ZCVAL                SETC '&ZCVAL AXIOVERRIDE'  INCORRECT KEY USED     01195800
.ZG281A4              AIF   (K'&WHENREG LE 0).ZG281A5  OK               01195900
&ZCVAL                SETC '&ZCVAL WHENREG'     INCORRECT KEY USED      01196000
.ZG281A5              AIF   (K'&LOCALREGCNTL LE 0).ZG281A6  OK          01196100
&ZCVAL                SETC '&ZCVAL LOCALREGCNTL'  INCORRECT KEY USED    01196200
.ZG281A6              AIF   (K'&VERSCOMP LE 0).ZG281A7  OK              01196300
&ZCVAL                SETC '&ZCVAL VERSCOMP'    INCORRECT KEY USED      01196400
.ZG281A7              AIF   (K'&VERSCOMPTYPE LE 0).ZG281A8  OK          01196500
&ZCVAL                SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED    01196600
.ZG281A8              AIF   (K'&VERSUPDATE LE 0).ZG281A9  OK            01196700
&ZCVAL                SETC '&ZCVAL VERSUPDATE'  INCORRECT KEY USED      01196800
.ZG281A9              AIF   (K'&NEWVERS LE 0).ZG281A10  OK              01196900
&ZCVAL                SETC '&ZCVAL NEWVERS'     INCORRECT KEY USED      01197000
.ZG281A10             AIF   (K'&CHANGED LE 0).ZG281A11  OK              01197100
&ZCVAL                SETC '&ZCVAL CHANGED'     INCORRECT KEY USED      01197200
.ZG281A11             AIF   (K'&CROSSINVAL LE 0).ZG281A12  OK           01197300
&ZCVAL                SETC '&ZCVAL CROSSINVAL'  INCORRECT KEY USED      01197400
.ZG281A12             AIF   (K'&GETCOLOCK LE 0).ZG281A13  OK            01197500
&ZCVAL                SETC '&ZCVAL GETCOLOCK'   INCORRECT KEY USED      01197600
.ZG281A13             AIF   (K'&PROCESSID LE 0).ZG281A14  OK            01197700
&ZCVAL                SETC '&ZCVAL PROCESSID'   INCORRECT KEY USED      01197800
.ZG281A14             AIF   (K'&PARITY LE 0).ZG281A15  OK               01197900
&ZCVAL                SETC '&ZCVAL PARITY'      INCORRECT KEY USED      01198000
.ZG281A15             AIF   (K'&USERDATA LE 0).ZG281A16  OK             01198100
&ZCVAL                SETC '&ZCVAL USERDATA'    INCORRECT KEY USED      01198200
.ZG281A16             AIF   (K'&ELEMNUM LE 0).ZG281A17  OK              01198300
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      01198400
.ZG281A17             AIF   (K'&STARTINDEX LE 0).ZG281A18  OK           01198500
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      01198600
.ZG281A18             AIF   (K'&ENDINDEX LE 0).ZG281A19  OK             01198700
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      01198800
.ZG281A19             AIF   (K'&DATAOFFSET LE 0).ZG281A20  OK           01198900
&ZCVAL                SETC '&ZCVAL DATAOFFSET'  INCORRECT KEY USED      01199000
.ZG281A20             AIF   (K'&WORBAREA LE 0).ZG281A21  OK             01199100
&ZCVAL                SETC '&ZCVAL WORBAREA'    INCORRECT KEY USED      01199200
.ZG281A21             AIF   (K'&NSBAREA LE 0).ZG281A22  OK              01199300
&ZCVAL                SETC '&ZCVAL NSBAREA'     INCORRECT KEY USED      01199400
.ZG281A22             AIF   (K'&DEIBAREA LE 0).ZG281A23  OK             01199500
&ZCVAL                SETC '&ZCVAL DEIBAREA'    INCORRECT KEY USED      01199600
.ZG281A23             AIF   (K'&CASTOUTLIST LE 0).ZG281A24  OK          01199700
&ZCVAL                SETC '&ZCVAL CASTOUTLIST'  INCORRECT KEY USED     01199800
.ZG281A24             AIF   (K'&FIRSTNAME LE 0).ZG281A25  OK            01199900
&ZCVAL                SETC '&ZCVAL FIRSTNAME'   INCORRECT KEY USED      01200000
.ZG281A25             AIF   (K'&LASTNAME LE 0).ZG281A26  OK             01200100
&ZCVAL                SETC '&ZCVAL LASTNAME'    INCORRECT KEY USED      01200200
.ZG281A26             AIF   (K'&CUNBAREA LE 0).ZG281A27  OK             01200300
&ZCVAL                SETC '&ZCVAL CUNBAREA'    INCORRECT KEY USED      01200400
.ZG281A27             AIF   (K'&ERRORACTION LE 0).ZG281A28  OK          01200500
&ZCVAL                SETC '&ZCVAL ERRORACTION'  INCORRECT KEY USED     01200600
.ZG281A28             AIF   (K'&DELETETYPE LE 0).ZG281A29  OK           01200700
&ZCVAL                SETC '&ZCVAL DELETETYPE'  INCORRECT KEY USED      01200800
.ZG281A29             AIF   (K'&HALTONCHANGED LE 0).ZG281A30  OK        01200900
&ZCVAL                SETC '&ZCVAL HALTONCHANGED'  INCORRECT KEY USED   01201000
.ZG281A30             AIF   (K'&SUPPCROSSINVAL LE 0).ZG281A31  OK       01201100
&ZCVAL                SETC '&ZCVAL SUPPCROSSINVAL'  INCORRECT KEY USED  01201200
.ZG281A31             AIF   (K'&DIRINFOFMT LE 0).ZG281A32  OK           01201300
&ZCVAL                SETC '&ZCVAL DIRINFOFMT'  INCORRECT KEY USED      01201400
.ZG281A32             AIF   (K'&RTATYPE LE 0).ZG281A33  OK              01201500
&ZCVAL                SETC '&ZCVAL RTATYPE'     INCORRECT KEY USED      01201600
.ZG281A33             AIF   (K'&CRITERIA LE 0).ZG281A34  OK             01201700
&ZCVAL                SETC '&ZCVAL CRITERIA'    INCORRECT KEY USED      01201800
.ZG281A34             AIF   (K'&STGSTATS LE 0).ZG281A35  OK             01201900
&ZCVAL                SETC '&ZCVAL STGSTATS'    INCORRECT KEY USED      01202000
.ZG281A35             AIF   (K'&NUMNAMES LE 0).ZG281A36  OK             01202100
&ZCVAL                SETC '&ZCVAL NUMNAMES'    INCORRECT KEY USED      01202200
.ZG281A36             AIF   (K'&REPEAT LE 0).ZG281A37  OK               01202300
&ZCVAL                SETC '&ZCVAL REPEAT'      INCORRECT KEY USED      01202400
.ZG281A37             AIF   (K'&RECLVCTR LE 0).ZG281A38  OK             01202500
&ZCVAL                SETC '&ZCVAL RECLVCTR'    INCORRECT KEY USED      01202600
.ZG281A38             AIF   (K'&ZCVAL LE 0).ZG281A39  OK                01202700
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01202800
                      AIF  (K'&ZCVAL LE 160).ZG281A39A                  01202900
&ZCVAL                SETC '&ZCVAL'(1,160)                              01203000
&ZCVAL                SETC '&ZCVAL....'                                 01203100
.ZG281A39A            ANOP                                              01203200
&ZMS                  SETC  '"REQUEST'                                  01203300
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           01203400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01203500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01203600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01203700
.ZG281A39             ANOP  ,                                           01203800
.*----------------------------------------------------------------***   01203900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01204000
                      AIF   (N'&COCLASSB LE 1).ZG283A  CK NUM           01204100
&ZMS                  SETC  '"COCLASSB='                                01204200
&ZMS                  SETC  '&ZMS.&COCLASSB"'                           01204300
&ZMS                  SETC  '&ZMS "COCLASSB"'                           01204400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01204500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01204600
.ZG283A               ANOP  ,                                           01204700
.*-------------------------------------------------------------------   01204800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01204900
&ZXCOCLASSB           SETC  'INPUT'     SET IN/OUTPUT                   01205000
&XCOCLASSB            SETC  '&COCLASSB(1)'      SET XVARIABLE           01205100
                      AIF   (N'&COCLASSB GT 1).ZG283B  MULTI            01205200
&XCOCLASSB            SETC  '&COCLASSB'         SET XVARIABLE           01205300
.ZG283B               AIF   (K'&COCLASSB(1) GT 0).ZG283C                01205400
&ZXCOCLASSB           SETC  ''          RESET IN/OUTPUT                 01205500
&ZMS                  SETC  ' '                                         01205600
&ZMS                  SETC  '&ZMS "COCLASSB" KEY AND ITS'               01205700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01205800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01205900
.ZG283C               ANOP  ,                                           01206000
.*-------------------------------------------------------------------   01206100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01206200
                      AIF   (K'&ZXCOCLASSB LE 0).ZG283R  NOT I/O        01206300
                      AIF   ('&XCOCLASSB'(1,1) NE '(').ZG283R           01206400
&ZCGPR                SETC  '&XCOCLASSB'(2,K'&XCOCLASSB-2)              01206500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG283P               01206600
                      AIF   (K'&ZCGPR GT 2).ZG283Q                      01206700
                      AIF   ('&ZCGPR' EQ '0').ZG283Q                    01206800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01206900
                      AIF   (T'&ZCGPR NE 'N').ZG283Q  INVALID REG NAME  01207000
.ZG283P               ANOP  ,                                           01207100
                      AIF   (T'&ZCGPR NE 'N').ZG283R  NON NUMERIC       01207200
                      AIF   ('&ZCGPR' LT '2').ZG283Q                    01207300
                      AIF   ('&ZCGPR' LE '12').ZG283R                   01207400
.ZG283Q               ANOP  ,                                           01207500
&ZMS                  SETC  '"COCLASSB='                                01207600
&ZMS                  SETC  '&ZMS.&COCLASSB"'                           01207700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01207800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01207900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01208000
.ZG283R               ANOP  ,                                           01208100
.*----------------------------------------------------------------***   01208200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01208300
                      AIF   (N'&COCLASSE LE 1).ZG286A  CK NUM           01208400
&ZMS                  SETC  '"COCLASSE='                                01208500
&ZMS                  SETC  '&ZMS.&COCLASSE"'                           01208600
&ZMS                  SETC  '&ZMS "COCLASSE"'                           01208700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01208800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01208900
.ZG286A               ANOP  ,                                           01209000
.*-------------------------------------------------------------------   01209100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01209200
&ZXCOCLASSE           SETC  'INPUT'     SET IN/OUTPUT                   01209300
&XCOCLASSE            SETC  '&COCLASSE(1)'      SET XVARIABLE           01209400
                      AIF   (N'&COCLASSE GT 1).ZG286B  MULTI            01209500
&XCOCLASSE            SETC  '&COCLASSE'         SET XVARIABLE           01209600
.ZG286B               AIF   (K'&COCLASSE(1) GT 0).ZG286C                01209700
&ZXCOCLASSE           SETC  ''          RESET IN/OUTPUT                 01209800
&ZMS                  SETC  ' '                                         01209900
&ZMS                  SETC  '&ZMS "COCLASSE" KEY AND ITS'               01210000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01210100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01210200
.ZG286C               ANOP  ,                                           01210300
.*-------------------------------------------------------------------   01210400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01210500
                      AIF   (K'&ZXCOCLASSE LE 0).ZG286R  NOT I/O        01210600
                      AIF   ('&XCOCLASSE'(1,1) NE '(').ZG286R           01210700
&ZCGPR                SETC  '&XCOCLASSE'(2,K'&XCOCLASSE-2)              01210800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG286P               01210900
                      AIF   (K'&ZCGPR GT 2).ZG286Q                      01211000
                      AIF   ('&ZCGPR' EQ '0').ZG286Q                    01211100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01211200
                      AIF   (T'&ZCGPR NE 'N').ZG286Q  INVALID REG NAME  01211300
.ZG286P               ANOP  ,                                           01211400
                      AIF   (T'&ZCGPR NE 'N').ZG286R  NON NUMERIC       01211500
                      AIF   ('&ZCGPR' LT '2').ZG286Q                    01211600
                      AIF   ('&ZCGPR' LE '12').ZG286R                   01211700
.ZG286Q               ANOP  ,                                           01211800
&ZMS                  SETC  '"COCLASSE='                                01211900
&ZMS                  SETC  '&ZMS.&COCLASSE"'                           01212000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01212100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01212200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01212300
.ZG286R               ANOP  ,                                           01212400
.*----------------------------------------------------------------***   01212500
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01212600
                      AIF   (N'&COSTATSFMT LE 1).ZG289A  CK NUM         01212700
&ZMS                  SETC  '"COSTATSFMT='                              01212800
&ZMS                  SETC  '&ZMS.&COSTATSFMT"'                         01212900
&ZMS                  SETC  '&ZMS "COSTATSFMT"'                         01213000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01213100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01213200
.ZG289A               ANOP  ,                                           01213300
.*-------------------------------------------------------------------   01213400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01213500
&XCOSTATSFMT          SETC  ''          INITIALIZE XVARIABLE            01213600
.ZG290A   AIF   ('&COSTATSFMT(1)' NE 'COCOUNTSLIST').ZG291A             01213700
&XCOSTATSFMT          SETC  'COCOUNTSLIST'      SET KEYWORD             01213800
.*-------------------------------------------------------------------   01213900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01214000
.ZG291A   AIF   ('&COSTATSFMT(1)' NE 'COSTATSLIST').ZG292A              01214100
&XCOSTATSFMT          SETC  'COSTATSLIST'       SET KEYWORD             01214200
.*-------------------------------------------------------------------   01214300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01214400
.ZG292A               AIF   (K'&XCOSTATSFMT GT 0).ZG292C  KEYWORD       01214500
                      AIF   (K'&COSTATSFMT(1) LE 0).ZG292B              01214600
&ZMS                  SETC  '"COSTATSFMT='                              01214700
&ZMS                  SETC  '&ZMS.&COSTATSFMT"'                         01214800
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01214900
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01215000
&ZMS                  SETC  '&ZMS "COCOUNTSLIST"'                       01215100
&ZMS                  SETC  '&ZMS OR "COSTATSLIST".'                    01215200
                      MNOTE 8,' &ZMS '                                  01215300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01215400
.ZG292B               ANOP  ,                                           01215500
&XCOSTATSFMT          SETC  'COCOUNTSLIST'      SET DEFAULT KEYWORD     01215600
.ZG292C               ANOP  ,                                           01215700
&ZXCOSTATSFMT         SETC  'INPUT'     SET IN/OUTPUT                   01215800
.*-------------------------------------------------------------------   01215900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01216000
.ZG293                ANOP  ,                                           01216100
&ZTLC                 SETC 'READ_STGSTATS'                              01216200
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG297            01216300
&XREQUEST             SETC  'READ_STGSTATS'     SET KEYWORD             01216400
                      AIF   (N'&REQUEST LE 1).ZG293A  CK NUM            01216500
&ZMS                  SETC  '"REQUEST='                                 01216600
&ZMS                  SETC  '&ZMS.&REQUEST"'                            01216700
&ZMS                  SETC  '&ZMS "REQUEST"'                            01216800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01216900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01217000
.ZG293A               ANOP  ,                                           01217100
.*------------------------------------------------------------------    01217200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01217300
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01217400
.ZG293A0              AIF   (K'&ASSIGN LE 0).ZG293A1  OK                01217500
&ZCVAL                SETC '&ZCVAL ASSIGN'      INCORRECT KEY USED      01217600
.ZG293A1              AIF   (K'&REGUSER LE 0).ZG293A2  OK               01217700
&ZCVAL                SETC '&ZCVAL REGUSER'     INCORRECT KEY USED      01217800
.ZG293A2              AIF   (K'&RETURNDATA LE 0).ZG293A3  OK            01217900
&ZCVAL                SETC '&ZCVAL RETURNDATA'  INCORRECT KEY USED      01218000
.ZG293A3              AIF   (K'&AXIOVERRIDE LE 0).ZG293A4  OK           01218100
&ZCVAL                SETC '&ZCVAL AXIOVERRIDE'  INCORRECT KEY USED     01218200
.ZG293A4              AIF   (K'&WHENREG LE 0).ZG293A5  OK               01218300
&ZCVAL                SETC '&ZCVAL WHENREG'     INCORRECT KEY USED      01218400
.ZG293A5              AIF   (K'&LOCALREGCNTL LE 0).ZG293A6  OK          01218500
&ZCVAL                SETC '&ZCVAL LOCALREGCNTL'  INCORRECT KEY USED    01218600
.ZG293A6              AIF   (K'&VERSCOMP LE 0).ZG293A7  OK              01218700
&ZCVAL                SETC '&ZCVAL VERSCOMP'    INCORRECT KEY USED      01218800
.ZG293A7              AIF   (K'&VERSCOMPTYPE LE 0).ZG293A8  OK          01218900
&ZCVAL                SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED    01219000
.ZG293A8              AIF   (K'&VERSUPDATE LE 0).ZG293A9  OK            01219100
&ZCVAL                SETC '&ZCVAL VERSUPDATE'  INCORRECT KEY USED      01219200
.ZG293A9              AIF   (K'&NEWVERS LE 0).ZG293A10  OK              01219300
&ZCVAL                SETC '&ZCVAL NEWVERS'     INCORRECT KEY USED      01219400
.ZG293A10             AIF   (K'&CHANGED LE 0).ZG293A11  OK              01219500
&ZCVAL                SETC '&ZCVAL CHANGED'     INCORRECT KEY USED      01219600
.ZG293A11             AIF   (K'&CROSSINVAL LE 0).ZG293A12  OK           01219700
&ZCVAL                SETC '&ZCVAL CROSSINVAL'  INCORRECT KEY USED      01219800
.ZG293A12             AIF   (K'&GETCOLOCK LE 0).ZG293A13  OK            01219900
&ZCVAL                SETC '&ZCVAL GETCOLOCK'   INCORRECT KEY USED      01220000
.ZG293A13             AIF   (K'&PROCESSID LE 0).ZG293A14  OK            01220100
&ZCVAL                SETC '&ZCVAL PROCESSID'   INCORRECT KEY USED      01220200
.ZG293A14             AIF   (K'&PARITY LE 0).ZG293A15  OK               01220300
&ZCVAL                SETC '&ZCVAL PARITY'      INCORRECT KEY USED      01220400
.ZG293A15             AIF   (K'&USERDATA LE 0).ZG293A16  OK             01220500
&ZCVAL                SETC '&ZCVAL USERDATA'    INCORRECT KEY USED      01220600
.ZG293A16             AIF   (K'&ELEMNUM LE 0).ZG293A17  OK              01220700
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      01220800
.ZG293A17             AIF   (K'&STARTINDEX LE 0).ZG293A18  OK           01220900
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      01221000
.ZG293A18             AIF   (K'&ENDINDEX LE 0).ZG293A19  OK             01221100
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      01221200
.ZG293A19             AIF   (K'&DATAOFFSET LE 0).ZG293A20  OK           01221300
&ZCVAL                SETC '&ZCVAL DATAOFFSET'  INCORRECT KEY USED      01221400
.ZG293A20             AIF   (K'&WORBAREA LE 0).ZG293A21  OK             01221500
&ZCVAL                SETC '&ZCVAL WORBAREA'    INCORRECT KEY USED      01221600
.ZG293A21             AIF   (K'&NSBAREA LE 0).ZG293A22  OK              01221700
&ZCVAL                SETC '&ZCVAL NSBAREA'     INCORRECT KEY USED      01221800
.ZG293A22             AIF   (K'&DEIBAREA LE 0).ZG293A23  OK             01221900
&ZCVAL                SETC '&ZCVAL DEIBAREA'    INCORRECT KEY USED      01222000
.ZG293A23             AIF   (K'&CASTOUTLIST LE 0).ZG293A24  OK          01222100
&ZCVAL                SETC '&ZCVAL CASTOUTLIST'  INCORRECT KEY USED     01222200
.ZG293A24             AIF   (K'&FIRSTNAME LE 0).ZG293A25  OK            01222300
&ZCVAL                SETC '&ZCVAL FIRSTNAME'   INCORRECT KEY USED      01222400
.ZG293A25             AIF   (K'&LASTNAME LE 0).ZG293A26  OK             01222500
&ZCVAL                SETC '&ZCVAL LASTNAME'    INCORRECT KEY USED      01222600
.ZG293A26             AIF   (K'&CUNBAREA LE 0).ZG293A27  OK             01222700
&ZCVAL                SETC '&ZCVAL CUNBAREA'    INCORRECT KEY USED      01222800
.ZG293A27             AIF   (K'&ERRORACTION LE 0).ZG293A28  OK          01222900
&ZCVAL                SETC '&ZCVAL ERRORACTION'  INCORRECT KEY USED     01223000
.ZG293A28             AIF   (K'&DELETETYPE LE 0).ZG293A29  OK           01223100
&ZCVAL                SETC '&ZCVAL DELETETYPE'  INCORRECT KEY USED      01223200
.ZG293A29             AIF   (K'&HALTONCHANGED LE 0).ZG293A30  OK        01223300
&ZCVAL                SETC '&ZCVAL HALTONCHANGED'  INCORRECT KEY USED   01223400
.ZG293A30             AIF   (K'&SUPPCROSSINVAL LE 0).ZG293A31  OK       01223500
&ZCVAL                SETC '&ZCVAL SUPPCROSSINVAL'  INCORRECT KEY USED  01223600
.ZG293A31             AIF   (K'&DIRINFOFMT LE 0).ZG293A32  OK           01223700
&ZCVAL                SETC '&ZCVAL DIRINFOFMT'  INCORRECT KEY USED      01223800
.ZG293A32             AIF   (K'&RTATYPE LE 0).ZG293A33  OK              01223900
&ZCVAL                SETC '&ZCVAL RTATYPE'     INCORRECT KEY USED      01224000
.ZG293A33             AIF   (K'&CRITERIA LE 0).ZG293A34  OK             01224100
&ZCVAL                SETC '&ZCVAL CRITERIA'    INCORRECT KEY USED      01224200
.ZG293A34             AIF   (K'&COCLASSB LE 0).ZG293A35  OK             01224300
&ZCVAL                SETC '&ZCVAL COCLASSB'    INCORRECT KEY USED      01224400
.ZG293A35             AIF   (K'&COCLASSE LE 0).ZG293A36  OK             01224500
&ZCVAL                SETC '&ZCVAL COCLASSE'    INCORRECT KEY USED      01224600
.ZG293A36             AIF   (K'&COSTATSFMT LE 0).ZG293A37  OK           01224700
&ZCVAL                SETC '&ZCVAL COSTATSFMT'  INCORRECT KEY USED      01224800
.ZG293A37             AIF   (K'&NUMNAMES LE 0).ZG293A38  OK             01224900
&ZCVAL                SETC '&ZCVAL NUMNAMES'    INCORRECT KEY USED      01225000
.ZG293A38             AIF   (K'&REPEAT LE 0).ZG293A39  OK               01225100
&ZCVAL                SETC '&ZCVAL REPEAT'      INCORRECT KEY USED      01225200
.ZG293A39             AIF   (K'&RECLVCTR LE 0).ZG293A40  OK             01225300
&ZCVAL                SETC '&ZCVAL RECLVCTR'    INCORRECT KEY USED      01225400
.ZG293A40             AIF   (K'&ZCVAL LE 0).ZG293A41  OK                01225500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01225600
                      AIF  (K'&ZCVAL LE 160).ZG293A41A                  01225700
&ZCVAL                SETC '&ZCVAL'(1,160)                              01225800
&ZCVAL                SETC '&ZCVAL....'                                 01225900
.ZG293A41A            ANOP                                              01226000
&ZMS                  SETC  '"REQUEST'                                  01226100
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           01226200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01226300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01226400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01226500
.ZG293A41             ANOP  ,                                           01226600
.*----------------------------------------------------------------***   01226700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01226800
                      AIF   (N'&STGSTATS LE 1).ZG295A  CK NUM           01226900
&ZMS                  SETC  '"STGSTATS='                                01227000
&ZMS                  SETC  '&ZMS.&STGSTATS"'                           01227100
&ZMS                  SETC  '&ZMS "STGSTATS"'                           01227200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01227300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01227400
.ZG295A               ANOP  ,                                           01227500
.*-------------------------------------------------------------------   01227600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01227700
&ZXSTGSTATS           SETC  'INPUT'     SET IN/OUTPUT                   01227800
&XSTGSTATS            SETC  '&STGSTATS(1)'      SET XVARIABLE           01227900
                      AIF   (N'&STGSTATS GT 1).ZG295B  MULTI            01228000
&XSTGSTATS            SETC  '&STGSTATS'         SET XVARIABLE           01228100
.ZG295B               AIF   (K'&STGSTATS(1) GT 0).ZG295C                01228200
&ZXSTGSTATS           SETC  ''          RESET IN/OUTPUT                 01228300
&ZMS                  SETC  ' '                                         01228400
&ZMS                  SETC  '&ZMS "STGSTATS" KEY AND ITS'               01228500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01228600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01228700
.ZG295C               ANOP  ,                                           01228800
.*-------------------------------------------------------------------   01228900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01229000
                      AIF   (K'&ZXSTGSTATS LE 0).ZG295R  NOT I/O        01229100
                      AIF   ('&XSTGSTATS'(1,1) NE '(').ZG295R           01229200
&ZCGPR                SETC  '&XSTGSTATS'(2,K'&XSTGSTATS-2)              01229300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG295P               01229400
                      AIF   (K'&ZCGPR GT 2).ZG295Q                      01229500
                      AIF   ('&ZCGPR' EQ '0').ZG295Q                    01229600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01229700
                      AIF   (T'&ZCGPR NE 'N').ZG295Q  INVALID REG NAME  01229800
.ZG295P               ANOP  ,                                           01229900
                      AIF   (T'&ZCGPR NE 'N').ZG295R  NON NUMERIC       01230000
                      AIF   ('&ZCGPR' LT '2').ZG295Q                    01230100
                      AIF   ('&ZCGPR' LE '12').ZG295R                   01230200
.ZG295Q               ANOP  ,                                           01230300
&ZMS                  SETC  '"STGSTATS='                                01230400
&ZMS                  SETC  '&ZMS.&STGSTATS"'                           01230500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01230600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01230700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01230800
.ZG295R               ANOP  ,                                           01230900
.*-------------------------------------------------------------------   01231000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01231100
.ZG297                ANOP  ,                                           01231200
&ZTLC                 SETC 'PROCESS_REFLIST'                            01231300
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG301            01231400
&XREQUEST             SETC  'PROCESS_REFLIST'   SET KEYWORD             01231500
                      AIF   (N'&REQUEST LE 1).ZG297A  CK NUM            01231600
&ZMS                  SETC  '"REQUEST='                                 01231700
&ZMS                  SETC  '&ZMS.&REQUEST"'                            01231800
&ZMS                  SETC  '&ZMS "REQUEST"'                            01231900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01232000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01232100
.ZG297A               ANOP  ,                                           01232200
.*------------------------------------------------------------------    01232300
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01232400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01232500
.ZG297A0              AIF   (K'&ASSIGN LE 0).ZG297A1  OK                01232600
&ZCVAL                SETC '&ZCVAL ASSIGN'      INCORRECT KEY USED      01232700
.ZG297A1              AIF   (K'&REGUSER LE 0).ZG297A2  OK               01232800
&ZCVAL                SETC '&ZCVAL REGUSER'     INCORRECT KEY USED      01232900
.ZG297A2              AIF   (K'&RETURNDATA LE 0).ZG297A3  OK            01233000
&ZCVAL                SETC '&ZCVAL RETURNDATA'  INCORRECT KEY USED      01233100
.ZG297A3              AIF   (K'&AXIOVERRIDE LE 0).ZG297A4  OK           01233200
&ZCVAL                SETC '&ZCVAL AXIOVERRIDE'  INCORRECT KEY USED     01233300
.ZG297A4              AIF   (K'&WHENREG LE 0).ZG297A5  OK               01233400
&ZCVAL                SETC '&ZCVAL WHENREG'     INCORRECT KEY USED      01233500
.ZG297A5              AIF   (K'&LOCALREGCNTL LE 0).ZG297A6  OK          01233600
&ZCVAL                SETC '&ZCVAL LOCALREGCNTL'  INCORRECT KEY USED    01233700
.ZG297A6              AIF   (K'&VERSCOMP LE 0).ZG297A7  OK              01233800
&ZCVAL                SETC '&ZCVAL VERSCOMP'    INCORRECT KEY USED      01233900
.ZG297A7              AIF   (K'&VERSCOMPTYPE LE 0).ZG297A8  OK          01234000
&ZCVAL                SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED    01234100
.ZG297A8              AIF   (K'&VERSUPDATE LE 0).ZG297A9  OK            01234200
&ZCVAL                SETC '&ZCVAL VERSUPDATE'  INCORRECT KEY USED      01234300
.ZG297A9              AIF   (K'&NEWVERS LE 0).ZG297A10  OK              01234400
&ZCVAL                SETC '&ZCVAL NEWVERS'     INCORRECT KEY USED      01234500
.ZG297A10             AIF   (K'&CHANGED LE 0).ZG297A11  OK              01234600
&ZCVAL                SETC '&ZCVAL CHANGED'     INCORRECT KEY USED      01234700
.ZG297A11             AIF   (K'&CROSSINVAL LE 0).ZG297A12  OK           01234800
&ZCVAL                SETC '&ZCVAL CROSSINVAL'  INCORRECT KEY USED      01234900
.ZG297A12             AIF   (K'&GETCOLOCK LE 0).ZG297A13  OK            01235000
&ZCVAL                SETC '&ZCVAL GETCOLOCK'   INCORRECT KEY USED      01235100
.ZG297A13             AIF   (K'&PROCESSID LE 0).ZG297A14  OK            01235200
&ZCVAL                SETC '&ZCVAL PROCESSID'   INCORRECT KEY USED      01235300
.ZG297A14             AIF   (K'&PARITY LE 0).ZG297A15  OK               01235400
&ZCVAL                SETC '&ZCVAL PARITY'      INCORRECT KEY USED      01235500
.ZG297A15             AIF   (K'&USERDATA LE 0).ZG297A16  OK             01235600
&ZCVAL                SETC '&ZCVAL USERDATA'    INCORRECT KEY USED      01235700
.ZG297A16             AIF   (K'&ELEMNUM LE 0).ZG297A17  OK              01235800
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      01235900
.ZG297A17             AIF   (K'&STARTINDEX LE 0).ZG297A18  OK           01236000
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      01236100
.ZG297A18             AIF   (K'&ENDINDEX LE 0).ZG297A19  OK             01236200
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      01236300
.ZG297A19             AIF   (K'&DATAOFFSET LE 0).ZG297A20  OK           01236400
&ZCVAL                SETC '&ZCVAL DATAOFFSET'  INCORRECT KEY USED      01236500
.ZG297A20             AIF   (K'&WORBAREA LE 0).ZG297A21  OK             01236600
&ZCVAL                SETC '&ZCVAL WORBAREA'    INCORRECT KEY USED      01236700
.ZG297A21             AIF   (K'&NSBAREA LE 0).ZG297A22  OK              01236800
&ZCVAL                SETC '&ZCVAL NSBAREA'     INCORRECT KEY USED      01236900
.ZG297A22             AIF   (K'&DEIBAREA LE 0).ZG297A23  OK             01237000
&ZCVAL                SETC '&ZCVAL DEIBAREA'    INCORRECT KEY USED      01237100
.ZG297A23             AIF   (K'&CASTOUTLIST LE 0).ZG297A24  OK          01237200
&ZCVAL                SETC '&ZCVAL CASTOUTLIST'  INCORRECT KEY USED     01237300
.ZG297A24             AIF   (K'&FIRSTNAME LE 0).ZG297A25  OK            01237400
&ZCVAL                SETC '&ZCVAL FIRSTNAME'   INCORRECT KEY USED      01237500
.ZG297A25             AIF   (K'&LASTNAME LE 0).ZG297A26  OK             01237600
&ZCVAL                SETC '&ZCVAL LASTNAME'    INCORRECT KEY USED      01237700
.ZG297A26             AIF   (K'&CUNBAREA LE 0).ZG297A27  OK             01237800
&ZCVAL                SETC '&ZCVAL CUNBAREA'    INCORRECT KEY USED      01237900
.ZG297A27             AIF   (K'&ERRORACTION LE 0).ZG297A28  OK          01238000
&ZCVAL                SETC '&ZCVAL ERRORACTION'  INCORRECT KEY USED     01238100
.ZG297A28             AIF   (K'&DELETETYPE LE 0).ZG297A29  OK           01238200
&ZCVAL                SETC '&ZCVAL DELETETYPE'  INCORRECT KEY USED      01238300
.ZG297A29             AIF   (K'&HALTONCHANGED LE 0).ZG297A30  OK        01238400
&ZCVAL                SETC '&ZCVAL HALTONCHANGED'  INCORRECT KEY USED   01238500
.ZG297A30             AIF   (K'&SUPPCROSSINVAL LE 0).ZG297A31  OK       01238600
&ZCVAL                SETC '&ZCVAL SUPPCROSSINVAL'  INCORRECT KEY USED  01238700
.ZG297A31             AIF   (K'&DIRINFOFMT LE 0).ZG297A32  OK           01238800
&ZCVAL                SETC '&ZCVAL DIRINFOFMT'  INCORRECT KEY USED      01238900
.ZG297A32             AIF   (K'&RTATYPE LE 0).ZG297A33  OK              01239000
&ZCVAL                SETC '&ZCVAL RTATYPE'     INCORRECT KEY USED      01239100
.ZG297A33             AIF   (K'&CRITERIA LE 0).ZG297A34  OK             01239200
&ZCVAL                SETC '&ZCVAL CRITERIA'    INCORRECT KEY USED      01239300
.ZG297A34             AIF   (K'&COCLASSB LE 0).ZG297A35  OK             01239400
&ZCVAL                SETC '&ZCVAL COCLASSB'    INCORRECT KEY USED      01239500
.ZG297A35             AIF   (K'&COCLASSE LE 0).ZG297A36  OK             01239600
&ZCVAL                SETC '&ZCVAL COCLASSE'    INCORRECT KEY USED      01239700
.ZG297A36             AIF   (K'&COSTATSFMT LE 0).ZG297A37  OK           01239800
&ZCVAL                SETC '&ZCVAL COSTATSFMT'  INCORRECT KEY USED      01239900
.ZG297A37             AIF   (K'&STGSTATS LE 0).ZG297A38  OK             01240000
&ZCVAL                SETC '&ZCVAL STGSTATS'    INCORRECT KEY USED      01240100
.ZG297A38             AIF   (K'&REPEAT LE 0).ZG297A39  OK               01240200
&ZCVAL                SETC '&ZCVAL REPEAT'      INCORRECT KEY USED      01240300
.ZG297A39             AIF   (K'&RECLVCTR LE 0).ZG297A40  OK             01240400
&ZCVAL                SETC '&ZCVAL RECLVCTR'    INCORRECT KEY USED      01240500
.ZG297A40             AIF   (K'&ZCVAL LE 0).ZG297A41  OK                01240600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01240700
                      AIF  (K'&ZCVAL LE 160).ZG297A41A                  01240800
&ZCVAL                SETC '&ZCVAL'(1,160)                              01240900
&ZCVAL                SETC '&ZCVAL....'                                 01241000
.ZG297A41A            ANOP                                              01241100
&ZMS                  SETC  '"REQUEST'                                  01241200
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           01241300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01241400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01241500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01241600
.ZG297A41             ANOP  ,                                           01241700
.*----------------------------------------------------------------***   01241800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01241900
                      AIF   (N'&NUMNAMES LE 1).ZG299A  CK NUM           01242000
&ZMS                  SETC  '"NUMNAMES='                                01242100
&ZMS                  SETC  '&ZMS.&NUMNAMES"'                           01242200
&ZMS                  SETC  '&ZMS "NUMNAMES"'                           01242300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01242400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01242500
.ZG299A               ANOP  ,                                           01242600
.*-------------------------------------------------------------------   01242700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01242800
&ZXNUMNAMES           SETC  'INPUT'     SET IN/OUTPUT                   01242900
&XNUMNAMES            SETC  '&NUMNAMES(1)'      SET XVARIABLE           01243000
                      AIF   (N'&NUMNAMES GT 1).ZG299B  MULTI            01243100
&XNUMNAMES            SETC  '&NUMNAMES'         SET XVARIABLE           01243200
.ZG299B               AIF   (K'&NUMNAMES(1) GT 0).ZG299C                01243300
&ZXNUMNAMES           SETC  ''          RESET IN/OUTPUT                 01243400
&ZMS                  SETC  ' '                                         01243500
&ZMS                  SETC  '&ZMS "NUMNAMES" KEY AND ITS'               01243600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01243700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01243800
.ZG299C               ANOP  ,                                           01243900
.*-------------------------------------------------------------------   01244000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01244100
                      AIF   (K'&ZXNUMNAMES LE 0).ZG299R  NOT I/O        01244200
                      AIF   ('&XNUMNAMES'(1,1) NE '(').ZG299R           01244300
&ZCGPR                SETC  '&XNUMNAMES'(2,K'&XNUMNAMES-2)              01244400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG299P               01244500
                      AIF   (K'&ZCGPR GT 2).ZG299Q                      01244600
                      AIF   ('&ZCGPR' EQ '0').ZG299Q                    01244700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01244800
                      AIF   (T'&ZCGPR NE 'N').ZG299Q  INVALID REG NAME  01244900
.ZG299P               ANOP  ,                                           01245000
                      AIF   (T'&ZCGPR NE 'N').ZG299R  NON NUMERIC       01245100
                      AIF   ('&ZCGPR' LT '2').ZG299Q                    01245200
                      AIF   ('&ZCGPR' LE '12').ZG299R                   01245300
.ZG299Q               ANOP  ,                                           01245400
&ZMS                  SETC  '"NUMNAMES='                                01245500
&ZMS                  SETC  '&ZMS.&NUMNAMES"'                           01245600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01245700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01245800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01245900
.ZG299R               ANOP  ,                                           01246000
.*-------------------------------------------------------------------   01246100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01246200
.ZG301                ANOP  ,                                           01246300
&ZTLC                 SETC 'SET_RECLVCTR'                               01246400
                      AIF   ('&REQUEST(1)' NE '&ZTLC').ZG308            01246500
&XREQUEST             SETC  'SET_RECLVCTR'      SET KEYWORD             01246600
                      AIF   (N'&REQUEST LE 1).ZG301A  CK NUM            01246700
&ZMS                  SETC  '"REQUEST='                                 01246800
&ZMS                  SETC  '&ZMS.&REQUEST"'                            01246900
&ZMS                  SETC  '&ZMS "REQUEST"'                            01247000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01247100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01247200
.ZG301A               ANOP  ,                                           01247300
.*------------------------------------------------------------------    01247400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01247500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01247600
.ZG301A0              AIF   (K'&ASSIGN LE 0).ZG301A1  OK                01247700
&ZCVAL                SETC '&ZCVAL ASSIGN'      INCORRECT KEY USED      01247800
.ZG301A1              AIF   (K'&REGUSER LE 0).ZG301A2  OK               01247900
&ZCVAL                SETC '&ZCVAL REGUSER'     INCORRECT KEY USED      01248000
.ZG301A2              AIF   (K'&RETURNDATA LE 0).ZG301A3  OK            01248100
&ZCVAL                SETC '&ZCVAL RETURNDATA'  INCORRECT KEY USED      01248200
.ZG301A3              AIF   (K'&AXIOVERRIDE LE 0).ZG301A4  OK           01248300
&ZCVAL                SETC '&ZCVAL AXIOVERRIDE'  INCORRECT KEY USED     01248400
.ZG301A4              AIF   (K'&WHENREG LE 0).ZG301A5  OK               01248500
&ZCVAL                SETC '&ZCVAL WHENREG'     INCORRECT KEY USED      01248600
.ZG301A5              AIF   (K'&LOCALREGCNTL LE 0).ZG301A6  OK          01248700
&ZCVAL                SETC '&ZCVAL LOCALREGCNTL'  INCORRECT KEY USED    01248800
.ZG301A6              AIF   (K'&VERSCOMP LE 0).ZG301A7  OK              01248900
&ZCVAL                SETC '&ZCVAL VERSCOMP'    INCORRECT KEY USED      01249000
.ZG301A7              AIF   (K'&VERSCOMPTYPE LE 0).ZG301A8  OK          01249100
&ZCVAL                SETC '&ZCVAL VERSCOMPTYPE'  INCORRECT KEY USED    01249200
.ZG301A8              AIF   (K'&VERSUPDATE LE 0).ZG301A9  OK            01249300
&ZCVAL                SETC '&ZCVAL VERSUPDATE'  INCORRECT KEY USED      01249400
.ZG301A9              AIF   (K'&NEWVERS LE 0).ZG301A10  OK              01249500
&ZCVAL                SETC '&ZCVAL NEWVERS'     INCORRECT KEY USED      01249600
.ZG301A10             AIF   (K'&CHANGED LE 0).ZG301A11  OK              01249700
&ZCVAL                SETC '&ZCVAL CHANGED'     INCORRECT KEY USED      01249800
.ZG301A11             AIF   (K'&CROSSINVAL LE 0).ZG301A12  OK           01249900
&ZCVAL                SETC '&ZCVAL CROSSINVAL'  INCORRECT KEY USED      01250000
.ZG301A12             AIF   (K'&GETCOLOCK LE 0).ZG301A13  OK            01250100
&ZCVAL                SETC '&ZCVAL GETCOLOCK'   INCORRECT KEY USED      01250200
.ZG301A13             AIF   (K'&PROCESSID LE 0).ZG301A14  OK            01250300
&ZCVAL                SETC '&ZCVAL PROCESSID'   INCORRECT KEY USED      01250400
.ZG301A14             AIF   (K'&PARITY LE 0).ZG301A15  OK               01250500
&ZCVAL                SETC '&ZCVAL PARITY'      INCORRECT KEY USED      01250600
.ZG301A15             AIF   (K'&USERDATA LE 0).ZG301A16  OK             01250700
&ZCVAL                SETC '&ZCVAL USERDATA'    INCORRECT KEY USED      01250800
.ZG301A16             AIF   (K'&ELEMNUM LE 0).ZG301A17  OK              01250900
&ZCVAL                SETC '&ZCVAL ELEMNUM'     INCORRECT KEY USED      01251000
.ZG301A17             AIF   (K'&STARTINDEX LE 0).ZG301A18  OK           01251100
&ZCVAL                SETC '&ZCVAL STARTINDEX'  INCORRECT KEY USED      01251200
.ZG301A18             AIF   (K'&ENDINDEX LE 0).ZG301A19  OK             01251300
&ZCVAL                SETC '&ZCVAL ENDINDEX'    INCORRECT KEY USED      01251400
.ZG301A19             AIF   (K'&DATAOFFSET LE 0).ZG301A20  OK           01251500
&ZCVAL                SETC '&ZCVAL DATAOFFSET'  INCORRECT KEY USED      01251600
.ZG301A20             AIF   (K'&WORBAREA LE 0).ZG301A21  OK             01251700
&ZCVAL                SETC '&ZCVAL WORBAREA'    INCORRECT KEY USED      01251800
.ZG301A21             AIF   (K'&NSBAREA LE 0).ZG301A22  OK              01251900
&ZCVAL                SETC '&ZCVAL NSBAREA'     INCORRECT KEY USED      01252000
.ZG301A22             AIF   (K'&DEIBAREA LE 0).ZG301A23  OK             01252100
&ZCVAL                SETC '&ZCVAL DEIBAREA'    INCORRECT KEY USED      01252200
.ZG301A23             AIF   (K'&CASTOUTLIST LE 0).ZG301A24  OK          01252300
&ZCVAL                SETC '&ZCVAL CASTOUTLIST'  INCORRECT KEY USED     01252400
.ZG301A24             AIF   (K'&FIRSTNAME LE 0).ZG301A25  OK            01252500
&ZCVAL                SETC '&ZCVAL FIRSTNAME'   INCORRECT KEY USED      01252600
.ZG301A25             AIF   (K'&LASTNAME LE 0).ZG301A26  OK             01252700
&ZCVAL                SETC '&ZCVAL LASTNAME'    INCORRECT KEY USED      01252800
.ZG301A26             AIF   (K'&CUNBAREA LE 0).ZG301A27  OK             01252900
&ZCVAL                SETC '&ZCVAL CUNBAREA'    INCORRECT KEY USED      01253000
.ZG301A27             AIF   (K'&ERRORACTION LE 0).ZG301A28  OK          01253100
&ZCVAL                SETC '&ZCVAL ERRORACTION'  INCORRECT KEY USED     01253200
.ZG301A28             AIF   (K'&DELETETYPE LE 0).ZG301A29  OK           01253300
&ZCVAL                SETC '&ZCVAL DELETETYPE'  INCORRECT KEY USED      01253400
.ZG301A29             AIF   (K'&HALTONCHANGED LE 0).ZG301A30  OK        01253500
&ZCVAL                SETC '&ZCVAL HALTONCHANGED'  INCORRECT KEY USED   01253600
.ZG301A30             AIF   (K'&SUPPCROSSINVAL LE 0).ZG301A31  OK       01253700
&ZCVAL                SETC '&ZCVAL SUPPCROSSINVAL'  INCORRECT KEY USED  01253800
.ZG301A31             AIF   (K'&DIRINFOFMT LE 0).ZG301A32  OK           01253900
&ZCVAL                SETC '&ZCVAL DIRINFOFMT'  INCORRECT KEY USED      01254000
.ZG301A32             AIF   (K'&RTATYPE LE 0).ZG301A33  OK              01254100
&ZCVAL                SETC '&ZCVAL RTATYPE'     INCORRECT KEY USED      01254200
.ZG301A33             AIF   (K'&CRITERIA LE 0).ZG301A34  OK             01254300
&ZCVAL                SETC '&ZCVAL CRITERIA'    INCORRECT KEY USED      01254400
.ZG301A34             AIF   (K'&COCLASSB LE 0).ZG301A35  OK             01254500
&ZCVAL                SETC '&ZCVAL COCLASSB'    INCORRECT KEY USED      01254600
.ZG301A35             AIF   (K'&COCLASSE LE 0).ZG301A36  OK             01254700
&ZCVAL                SETC '&ZCVAL COCLASSE'    INCORRECT KEY USED      01254800
.ZG301A36             AIF   (K'&COSTATSFMT LE 0).ZG301A37  OK           01254900
&ZCVAL                SETC '&ZCVAL COSTATSFMT'  INCORRECT KEY USED      01255000
.ZG301A37             AIF   (K'&STGSTATS LE 0).ZG301A38  OK             01255100
&ZCVAL                SETC '&ZCVAL STGSTATS'    INCORRECT KEY USED      01255200
.ZG301A38             AIF   (K'&NUMNAMES LE 0).ZG301A39  OK             01255300
&ZCVAL                SETC '&ZCVAL NUMNAMES'    INCORRECT KEY USED      01255400
.ZG301A39             AIF   (K'&ZCVAL LE 0).ZG301A40  OK                01255500
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01255600
                      AIF  (K'&ZCVAL LE 160).ZG301A40A                  01255700
&ZCVAL                SETC '&ZCVAL'(1,160)                              01255800
&ZCVAL                SETC '&ZCVAL....'                                 01255900
.ZG301A40A            ANOP                                              01256000
&ZMS                  SETC  '"REQUEST'                                  01256100
&ZMS                  SETC  '&ZMS.=&REQUEST"'                           01256200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01256300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01256400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01256500
.ZG301A40             ANOP  ,                                           01256600
.*----------------------------------------------------------------***   01256700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01256800
                      AIF   (N'&REPEAT LE 1).ZG303A  CK NUM             01256900
&ZMS                  SETC  '"REPEAT='                                  01257000
&ZMS                  SETC  '&ZMS.&REPEAT"'                             01257100
&ZMS                  SETC  '&ZMS "REPEAT"'                             01257200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01257300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01257400
.ZG303A               ANOP  ,                                           01257500
.*-------------------------------------------------------------------   01257600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01257700
&ZXREPEAT             SETC  'INPUT'     SET IN/OUTPUT                   01257800
&XREPEAT              SETC  '&REPEAT(1)'        SET XVARIABLE           01257900
                      AIF   (N'&REPEAT GT 1).ZG303B  MULTI              01258000
&XREPEAT              SETC  '&REPEAT'   SET XVARIABLE                   01258100
.ZG303B               AIF   (K'&REPEAT(1) GT 0).ZG303C                  01258200
&ZXREPEAT             SETC  ''          RESET IN/OUTPUT                 01258300
&ZMS                  SETC  ' '                                         01258400
&ZMS                  SETC  '&ZMS "REPEAT" KEY AND ITS'                 01258500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01258600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01258700
.ZG303C               ANOP  ,                                           01258800
.*-------------------------------------------------------------------   01258900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01259000
                      AIF   (K'&ZXREPEAT LE 0).ZG303R  NOT I/O          01259100
                      AIF   ('&XREPEAT'(1,1) NE '(').ZG303R             01259200
&ZCGPR                SETC  '&XREPEAT'(2,K'&XREPEAT-2)                  01259300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG303P               01259400
                      AIF   (K'&ZCGPR GT 2).ZG303Q                      01259500
                      AIF   ('&ZCGPR' EQ '0').ZG303Q                    01259600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01259700
                      AIF   (T'&ZCGPR NE 'N').ZG303Q  INVALID REG NAME  01259800
.ZG303P               ANOP  ,                                           01259900
                      AIF   (T'&ZCGPR NE 'N').ZG303R  NON NUMERIC       01260000
                      AIF   ('&ZCGPR' LT '2').ZG303Q                    01260100
                      AIF   ('&ZCGPR' LE '12').ZG303R                   01260200
.ZG303Q               ANOP  ,                                           01260300
&ZMS                  SETC  '"REPEAT='                                  01260400
&ZMS                  SETC  '&ZMS.&REPEAT"'                             01260500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01260600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01260700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01260800
.ZG303R               ANOP  ,                                           01260900
.*----------------------------------------------------------------***   01261000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01261100
                      AIF   (N'&RECLVCTR LE 1).ZG306A  CK NUM           01261200
&ZMS                  SETC  '"RECLVCTR='                                01261300
&ZMS                  SETC  '&ZMS.&RECLVCTR"'                           01261400
&ZMS                  SETC  '&ZMS "RECLVCTR"'                           01261500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01261600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01261700
.ZG306A               ANOP  ,                                           01261800
.*-------------------------------------------------------------------   01261900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01262000
&ZXRECLVCTR           SETC  'INPUT'     SET IN/OUTPUT                   01262100
&XRECLVCTR            SETC  'NO_RECLVCTR'                               01262200
                      AIF   (K'&RECLVCTR(1) LE 0).ZG306B  PARM          01262300
&XRECLVCTR            SETC  '&RECLVCTR(1)'      SET XVARIABLE           01262400
                      AIF   (N'&RECLVCTR GT 1).ZG306B  MULTI            01262500
&XRECLVCTR            SETC  '&RECLVCTR'         SET XVARIABLE           01262600
.ZG306B               ANOP  ,                                           01262700
.*-------------------------------------------------------------------   01262800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01262900
                      AIF   (K'&ZXRECLVCTR LE 0).ZG306R  NOT I/O        01263000
         AIF   ('&XRECLVCTR' EQ 'NO_RECLVCTR').ZG306R                   01263100
                      AIF   ('&XRECLVCTR'(1,1) NE '(').ZG306R           01263200
&ZCGPR                SETC  '&XRECLVCTR'(2,K'&XRECLVCTR-2)              01263300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG306P               01263400
                      AIF   (K'&ZCGPR GT 2).ZG306Q                      01263500
                      AIF   ('&ZCGPR' EQ '0').ZG306Q                    01263600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01263700
                      AIF   (T'&ZCGPR NE 'N').ZG306Q  INVALID REG NAME  01263800
.ZG306P               ANOP  ,                                           01263900
                      AIF   (T'&ZCGPR NE 'N').ZG306R  NON NUMERIC       01264000
                      AIF   ('&ZCGPR' LT '2').ZG306Q                    01264100
                      AIF   ('&ZCGPR' LE '12').ZG306R                   01264200
.ZG306Q               ANOP  ,                                           01264300
&ZMS                  SETC  '"RECLVCTR='                                01264400
&ZMS                  SETC  '&ZMS.&RECLVCTR"'                           01264500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01264600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01264700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01264800
.ZG306R               ANOP  ,                                           01264900
.*------------------------------------------------------------------    01265000
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01265100
.ZG308                ANOP  ,                                           01265200
&ZXREQUEST            SETC  'INPUT'     SET IN/OUTPUT                   01265300
                      AIF   (K'&XREQUEST GT 0).ZG308E  VALID ARG        01265400
                      AIF   (T'&REQUEST EQ 'O').ZG308D  OMITTED         01265500
&ZASYSLNDX            SETA  0                                           01265600
.ZG308A               ANOP  ,           POSITIONAL MACRO KEY            01265700
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01265800
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG308C           01265900
&ZTLC                 SETC 'REQUEST'                                    01266000
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG308A  01266100
.ZG308B               ANOP  ,                                           01266200
&ZXREQUEST            SETC  ''          RESET IN/OUTPUT                 01266300
&ZMS                  SETC  'THE "REQUEST" KEY'                         01266400
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01266500
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01266600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01266700
                      AGO   .ZG308E                                     01266800
.ZG308C               ANOP  ,                                           01266900
&ZXREQUEST            SETC  ''          RESET IN/OUTPUT                 01267000
&ZMS                  SETC  '"REQUEST='                                 01267100
&ZMS                  SETC  '&ZMS.&REQUEST"'                            01267200
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01267300
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01267400
&ZMS                  SETC  '&ZMS "READ_DATA",'                         01267500
&ZMS                  SETC  '&ZMS "WRITE_DATA",'                        01267600
&ZMS                  SETC  '&ZMS "WRITE_DATALIST",'                    01267700
&ZMS                  SETC  '&ZMS "REG_NAMELIST",'                      01267800
&ZMS                  SETC  '&ZMS "CASTOUT_DATA",'                      01267900
&ZMS                  SETC  '&ZMS "CASTOUT_DATALIST",'                  01268000
&ZMS                  SETC  '&ZMS "UNLOCK_CASTOUT",'                    01268100
&ZMS                  SETC  '&ZMS "UNLOCK_CO_NAME",'                    01268200
&ZMS                  SETC  '&ZMS "CROSS_INVAL",'                       01268300
                      MNOTE 8,' &ZMS '                                  01268400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01268500
&ZMS                  SETC  '(CONTINUED) '                              01268600
&ZMS                  SETC  '&ZMS "CROSS_INVALLIST",'                   01268700
&ZMS                  SETC  '&ZMS "DELETE_NAME",'                       01268800
&ZMS                  SETC  '&ZMS "DELETE_NAMELIST",'                   01268900
&ZMS                  SETC  '&ZMS "READ_COCLASS",'                      01269000
&ZMS                  SETC  '&ZMS "READ_DIRINFO",'                      01269100
&ZMS                  SETC  '&ZMS "RESET_REFBIT",'                      01269200
&ZMS                  SETC  '&ZMS "READ_COSTATS",'                      01269300
&ZMS                  SETC  '&ZMS "READ_STGSTATS",'                     01269400
&ZMS                  SETC  '&ZMS "PROCESS_REFLIST",'                   01269500
&ZMS                  SETC  '&ZMS OR "SET_RECLVCTR".'                   01269600
                      MNOTE 8,' &ZMS '                                  01269700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01269800
                      AGO   .ZG308E                                     01269900
.ZG308D               ANOP  ,                                           01270000
&XREQUEST             SETC  'READ_DATA'         SET DEFAULT KEYWORD     01270100
.ZG308E               ANOP  ,                                           01270200
.*------------------------------------------------------------------    01270300
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01270400
                      AIF   (K'&REQUEST(1) GT 0).ZG308F  PARM           01270500
&XREQUEST             SETC  ''          ENSURE NULL KEYWORD             01270600
&ZXREQUEST            SETC  ''          RESET IN/OUTPUT                 01270700
&ZMS                  SETC  'THE'                                       01270800
&ZMS                  SETC  '&ZMS "REQUEST" KEY AND ITS'                01270900
&ZMS                  SETC  '&ZMS ARGUMENT ARE REQUIRED.'               01271000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01271100
&ZMS                  SETC  '&ZMS "READ_DATA",'                         01271200
&ZMS                  SETC  '&ZMS "WRITE_DATA",'                        01271300
&ZMS                  SETC  '&ZMS "WRITE_DATALIST",'                    01271400
&ZMS                  SETC  '&ZMS "REG_NAMELIST",'                      01271500
&ZMS                  SETC  '&ZMS "CASTOUT_DATA",'                      01271600
&ZMS                  SETC  '&ZMS "CASTOUT_DATALIST",'                  01271700
&ZMS                  SETC  '&ZMS "UNLOCK_CASTOUT",'                    01271800
&ZMS                  SETC  '&ZMS "UNLOCK_CO_NAME",'                    01271900
                      MNOTE 8,' &ZMS '                                  01272000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01272100
&ZMS                  SETC  '(CONTINUED) '                              01272200
&ZMS                  SETC  '&ZMS "CROSS_INVAL",'                       01272300
&ZMS                  SETC  '&ZMS "CROSS_INVALLIST",'                   01272400
&ZMS                  SETC  '&ZMS "DELETE_NAME",'                       01272500
&ZMS                  SETC  '&ZMS "DELETE_NAMELIST",'                   01272600
&ZMS                  SETC  '&ZMS "READ_COCLASS",'                      01272700
&ZMS                  SETC  '&ZMS "READ_DIRINFO",'                      01272800
&ZMS                  SETC  '&ZMS "RESET_REFBIT",'                      01272900
&ZMS                  SETC  '&ZMS "READ_COSTATS",'                      01273000
&ZMS                  SETC  '&ZMS "READ_STGSTATS",'                     01273100
&ZMS                  SETC  '&ZMS "PROCESS_REFLIST",'                   01273200
&ZMS                  SETC  '&ZMS OR "SET_RECLVCTR".'                   01273300
                      MNOTE 8,' &ZMS '                                  01273400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01273500
.ZG308F               ANOP  ,                                           01273600
.*----------------------------------------------------------------***   01273700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01273800
                      AIF   (N'&CONTOKEN LE 1).ZG310A  CK NUM           01273900
&ZMS                  SETC  '"CONTOKEN='                                01274000
&ZMS                  SETC  '&ZMS.&CONTOKEN"'                           01274100
&ZMS                  SETC  '&ZMS "CONTOKEN"'                           01274200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01274300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01274400
.ZG310A               ANOP  ,                                           01274500
.*-------------------------------------------------------------------   01274600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01274700
&ZXCONTOKEN           SETC  'INPUT'     SET IN/OUTPUT                   01274800
&XCONTOKEN            SETC  '&CONTOKEN(1)'      SET XVARIABLE           01274900
                      AIF   (N'&CONTOKEN GT 1).ZG310B  MULTI            01275000
&XCONTOKEN            SETC  '&CONTOKEN'         SET XVARIABLE           01275100
.ZG310B               AIF   (K'&CONTOKEN(1) GT 0).ZG310C                01275200
&ZXCONTOKEN           SETC  ''          RESET IN/OUTPUT                 01275300
&ZMS                  SETC  ' '                                         01275400
&ZMS                  SETC  '&ZMS "CONTOKEN" KEY AND ITS'               01275500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01275600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01275700
.ZG310C               ANOP  ,                                           01275800
.*-------------------------------------------------------------------   01275900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01276000
                      AIF   (K'&ZXCONTOKEN LE 0).ZG310R  NOT I/O        01276100
                      AIF   ('&XCONTOKEN'(1,1) NE '(').ZG310R           01276200
&ZCGPR                SETC  '&XCONTOKEN'(2,K'&XCONTOKEN-2)              01276300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG310P               01276400
                      AIF   (K'&ZCGPR GT 2).ZG310Q                      01276500
                      AIF   ('&ZCGPR' EQ '0').ZG310Q                    01276600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01276700
                      AIF   (T'&ZCGPR NE 'N').ZG310Q  INVALID REG NAME  01276800
.ZG310P               ANOP  ,                                           01276900
                      AIF   (T'&ZCGPR NE 'N').ZG310R  NON NUMERIC       01277000
                      AIF   ('&ZCGPR' LT '2').ZG310Q                    01277100
                      AIF   ('&ZCGPR' LE '12').ZG310R                   01277200
.ZG310Q               ANOP  ,                                           01277300
&ZMS                  SETC  '"CONTOKEN='                                01277400
&ZMS                  SETC  '&ZMS.&CONTOKEN"'                           01277500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01277600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01277700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01277800
.ZG310R               ANOP  ,                                           01277900
.*----------------------------------------------------------------***   01278000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01278100
                      AIF   (N'&REQID LE 1).ZG313A  CK NUM              01278200
&ZMS                  SETC  '"REQID='                                   01278300
&ZMS                  SETC  '&ZMS.&REQID"'                              01278400
&ZMS                  SETC  '&ZMS "REQID"'                              01278500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01278600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01278700
.ZG313A               ANOP  ,                                           01278800
.*-------------------------------------------------------------------   01278900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01279000
&ZXREQID              SETC  'INPUT'     SET IN/OUTPUT                   01279100
&XREQID               SETC  'NO_REQID'                                  01279200
                      AIF   (K'&REQID(1) LE 0).ZG313B  PARM             01279300
&XREQID               SETC  '&REQID(1)'         SET XVARIABLE           01279400
                      AIF   (N'&REQID GT 1).ZG313B  MULTI               01279500
&XREQID               SETC  '&REQID'    SET XVARIABLE                   01279600
.ZG313B               ANOP  ,                                           01279700
.*-------------------------------------------------------------------   01279800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01279900
                      AIF   (K'&ZXREQID LE 0).ZG313R  NOT I/O           01280000
         AIF   ('&XREQID' EQ 'NO_REQID').ZG313R                         01280100
                      AIF   ('&XREQID'(1,1) NE '(').ZG313R              01280200
&ZCGPR                SETC  '&XREQID'(2,K'&XREQID-2)                    01280300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG313P               01280400
                      AIF   (K'&ZCGPR GT 2).ZG313Q                      01280500
                      AIF   ('&ZCGPR' EQ '0').ZG313Q                    01280600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01280700
                      AIF   (T'&ZCGPR NE 'N').ZG313Q  INVALID REG NAME  01280800
.ZG313P               ANOP  ,                                           01280900
                      AIF   (T'&ZCGPR NE 'N').ZG313R  NON NUMERIC       01281000
                      AIF   ('&ZCGPR' LT '2').ZG313Q                    01281100
                      AIF   ('&ZCGPR' LE '12').ZG313R                   01281200
.ZG313Q               ANOP  ,                                           01281300
&ZMS                  SETC  '"REQID='                                   01281400
&ZMS                  SETC  '&ZMS.&REQID"'                              01281500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01281600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01281700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01281800
.ZG313R               ANOP  ,                                           01281900
.*----------------------------------------------------------------***   01282000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01282100
                      AIF   (N'&NAME LE 1).ZG316A  CK NUM               01282200
&ZMS                  SETC  '"NAME='                                    01282300
&ZMS                  SETC  '&ZMS.&NAME"'                               01282400
&ZMS                  SETC  '&ZMS "NAME"'                               01282500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01282600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01282700
.ZG316A               ANOP  ,                                           01282800
.*-------------------------------------------------------------------   01282900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01283000
&ZXNAME               SETC  'INPUT'     SET IN/OUTPUT                   01283100
&XNAME                SETC  'NO_NAME'                                   01283200
                      AIF   (K'&NAME(1) LE 0).ZG316B  PARM              01283300
&XNAME                SETC  '&NAME(1)'  SET XVARIABLE                   01283400
                      AIF   (N'&NAME GT 1).ZG316B  MULTI                01283500
&XNAME                SETC  '&NAME'     SET XVARIABLE                   01283600
.ZG316B               ANOP  ,                                           01283700
.*-------------------------------------------------------------------   01283800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01283900
                      AIF   (K'&ZXNAME LE 0).ZG316R  NOT I/O            01284000
         AIF   ('&XNAME' EQ 'NO_NAME').ZG316R                           01284100
                      AIF   ('&XNAME'(1,1) NE '(').ZG316R               01284200
&ZCGPR                SETC  '&XNAME'(2,K'&XNAME-2)                      01284300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG316P               01284400
                      AIF   (K'&ZCGPR GT 2).ZG316Q                      01284500
                      AIF   ('&ZCGPR' EQ '0').ZG316Q                    01284600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01284700
                      AIF   (T'&ZCGPR NE 'N').ZG316Q  INVALID REG NAME  01284800
.ZG316P               ANOP  ,                                           01284900
                      AIF   (T'&ZCGPR NE 'N').ZG316R  NON NUMERIC       01285000
                      AIF   ('&ZCGPR' LT '2').ZG316Q                    01285100
                      AIF   ('&ZCGPR' LE '12').ZG316R                   01285200
.ZG316Q               ANOP  ,                                           01285300
&ZMS                  SETC  '"NAME='                                    01285400
&ZMS                  SETC  '&ZMS.&NAME"'                               01285500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01285600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01285700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01285800
.ZG316R               ANOP  ,                                           01285900
.*----------------------------------------------------------------***   01286000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01286100
                      AIF   (N'&NAMEMASK LE 1).ZG318A  CK NUM           01286200
&ZMS                  SETC  '"NAMEMASK='                                01286300
&ZMS                  SETC  '&ZMS.&NAMEMASK"'                           01286400
&ZMS                  SETC  '&ZMS "NAMEMASK"'                           01286500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01286600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01286700
.ZG318A               ANOP  ,                                           01286800
.*-------------------------------------------------------------------   01286900
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         01287000
&XNAMEMASK            SETC  '1111111111111111'  SET DEFAULT             01287100
                      AIF   (K'&NAMEMASK(1) LE 0).ZG318C  PARM          01287200
&XNAMEMASK            SETC  '&NAMEMASK(1)'      SET XVARIABLE           01287300
                      AIF   (N'&NAMEMASK GT 1).ZG318B  MULTI            01287400
&XNAMEMASK            SETC  '&NAMEMASK'         SET XVARIABLE           01287500
.ZG318B               AIF   (K'&NAME(1) GT 0).ZG318C  KEY               01287600
&ZMS                  SETC  '"NAMEMASK'                                 01287700
&ZMS                  SETC  '&ZMS.=&NAMEMASK"'                          01287800
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01287900
&ZMS                  SETC  '&ZMS '                                     01288000
&ZMS                  SETC  '&ZMS "NAME"'                               01288100
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01288200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01288300
.ZG318C               ANOP  ,                                           01288400
&ZXNAMEMASK           SETC  'INPUT'     SET IN/OUTPUT                   01288500
.*-------------------------------------------------------------------   01288600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01288700
                      AIF   (K'&ZXNAMEMASK LE 0).ZG318R  NOT I/O        01288800
                      AIF   ('&XNAMEMASK'(1,1) NE '(').ZG318R           01288900
&ZCGPR                SETC  '&XNAMEMASK'(2,K'&XNAMEMASK-2)              01289000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG318P               01289100
                      AIF   (K'&ZCGPR GT 2).ZG318Q                      01289200
                      AIF   ('&ZCGPR' EQ '0').ZG318Q                    01289300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01289400
                      AIF   (T'&ZCGPR NE 'N').ZG318Q  INVALID REG NAME  01289500
.ZG318P               ANOP  ,                                           01289600
                      AIF   (T'&ZCGPR NE 'N').ZG318R  NON NUMERIC       01289700
                      AIF   ('&ZCGPR' LT '2').ZG318Q                    01289800
                      AIF   ('&ZCGPR' LE '12').ZG318R                   01289900
.ZG318Q               ANOP  ,                                           01290000
&ZMS                  SETC  '"NAMEMASK='                                01290100
&ZMS                  SETC  '&ZMS.&NAMEMASK"'                           01290200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01290300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01290400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01290500
.ZG318R               ANOP  ,                                           01290600
.*----------------------------------------------------------------***   01290700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01290800
                      AIF   (N'&OLDNAME LE 1).ZG321A  CK NUM            01290900
&ZMS                  SETC  '"OLDNAME='                                 01291000
&ZMS                  SETC  '&ZMS.&OLDNAME"'                            01291100
&ZMS                  SETC  '&ZMS "OLDNAME"'                            01291200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01291300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01291400
.ZG321A               ANOP  ,                                           01291500
.*-------------------------------------------------------------------   01291600
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         01291700
&XOLDNAME             SETC  'NO_OLDNAME'        SET DEFAULT             01291800
                      AIF   (K'&OLDNAME(1) LE 0).ZG321C  PARM           01291900
&XOLDNAME             SETC  '&OLDNAME(1)'       SET XVARIABLE           01292000
                      AIF   (N'&OLDNAME GT 1).ZG321B  MULTI             01292100
&XOLDNAME             SETC  '&OLDNAME'  SET XVARIABLE                   01292200
.ZG321B               AIF   (K'&NAME(1) GT 0).ZG321C  KEY               01292300
&ZMS                  SETC  '"OLDNAME'                                  01292400
&ZMS                  SETC  '&ZMS.=&OLDNAME"'                           01292500
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01292600
&ZMS                  SETC  '&ZMS '                                     01292700
&ZMS                  SETC  '&ZMS "NAME"'                               01292800
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01292900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01293000
.ZG321C               ANOP  ,                                           01293100
&ZXOLDNAME            SETC  'INPUT'     SET IN/OUTPUT                   01293200
.*-------------------------------------------------------------------   01293300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01293400
                      AIF   (K'&ZXOLDNAME LE 0).ZG321R  NOT I/O         01293500
         AIF   ('&XOLDNAME' EQ 'NO_OLDNAME').ZG321R                     01293600
                      AIF   ('&XOLDNAME'(1,1) NE '(').ZG321R            01293700
&ZCGPR                SETC  '&XOLDNAME'(2,K'&XOLDNAME-2)                01293800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG321P               01293900
                      AIF   (K'&ZCGPR GT 2).ZG321Q                      01294000
                      AIF   ('&ZCGPR' EQ '0').ZG321Q                    01294100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01294200
                      AIF   (T'&ZCGPR NE 'N').ZG321Q  INVALID REG NAME  01294300
.ZG321P               ANOP  ,                                           01294400
                      AIF   (T'&ZCGPR NE 'N').ZG321R  NON NUMERIC       01294500
                      AIF   ('&ZCGPR' LT '2').ZG321Q                    01294600
                      AIF   ('&ZCGPR' LE '12').ZG321R                   01294700
.ZG321Q               ANOP  ,                                           01294800
&ZMS                  SETC  '"OLDNAME='                                 01294900
&ZMS                  SETC  '&ZMS.&OLDNAME"'                            01295000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01295100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01295200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01295300
.ZG321R               ANOP  ,                                           01295400
.*----------------------------------------------------------------***   01295500
.***AG.KMEKY01 NAME, OPT INPUT, ME KEYS -XVARIABLE                      01295600
&XDATAREA             SETC  ''          INITIALIZE XVARIABLE            01295700
                      AIF   (K'&BUFLIST LE 0).ZG325C                    01295800
&ZXDATAREA            SETC  'INPUT'     SET IN/OUTPUT                   01295900
&XDATAREA             SETC  'BUFLIST'   SET XVARIABLE                   01296000
&ZXBUFLIST            SETC  'INPUT'     SET IN/OUTPUT                   01296100
&XBUFLIST             SETC  '&BUFLIST(1)'       SET XVARIABLE PARM      01296200
                      AIF   (N'&BUFLIST GT 1).ZG325A                    01296300
&XBUFLIST             SETC  '&BUFLIST'  SET XVARIABLE PARM              01296400
.ZG325A               AIF   (N'&BUFLIST LE 1).ZG325B  CK NUM            01296500
&ZMS                  SETC  '"BUFLIST='                                 01296600
&ZMS                  SETC  '&ZMS.&BUFLIST"'                            01296700
&ZMS                  SETC  '&ZMS "BUFLIST"'                            01296800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01296900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01297000
.ZG325B               AIF   (K'&XBUFLIST GT 0).ZG325C  ONE PARM         01297100
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 01297200
&ZXBUFLIST            SETC  ''          RESET IN/OUTPUT                 01297300
&ZMS                  SETC  ' '                                         01297400
&ZMS                  SETC  '&ZMS "BUFLIST" KEY AND ITS'                01297500
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01297600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01297700
.ZG325C               ANOP  ,                                           01297800
.*----------------------------------------------------------------***   01297900
.***AG.KMEKY02 NAME, OPT INPUT, ME KEYS -XVARIABLE                      01298000
                      AIF   (K'&BUFFER LE 0).ZG358D  NO ME KEY          01298100
                      AIF   (N'&BUFFER LE 1).ZG358A  CK NUM             01298200
&ZMS                  SETC  '"BUFFER='                                  01298300
&ZMS                  SETC  '&ZMS.&BUFFER"'                             01298400
&ZMS                  SETC  '&ZMS "BUFFER"'                             01298500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01298600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01298700
.ZG358A               AIF   (K'&XDATAREA LE 0).ZG358B                   01298800
&ZMS                  SETC  '"BUFFER'                                   01298900
&ZMS                  SETC  '&ZMS.=&BUFFER"'                            01299000
&ZMS                  SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'       01299100
&ZMS                  SETC  '&ZMS "&XDATAREA"'                          01299200
                      MNOTE 8,' &ZMS KEY.'                              01299300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01299400
                      AGO   .ZG358D                                     01299500
.*                                                                      01299600
.ZG358B               ANOP  ,                                           01299700
&ZXDATAREA            SETC  'INPUT'     SET IN/OUTPUT                   01299800
&XDATAREA             SETC  'BUFFER'    SET XVARIABLE                   01299900
&ZXBUFFER             SETC  'INPUT'     SET IN/OUTPUT                   01300000
&XBUFFER              SETC  '&BUFFER(1)'        SET XVARIABLE PARM      01300100
                      AIF   (N'&BUFFER GT 1).ZG358C                     01300200
&XBUFFER              SETC  '&BUFFER'   SET XVARIABLE PARM              01300300
.ZG358C               AIF   (K'&XBUFFER GT 0).ZG358D  ONE PARM          01300400
&ZXDATAREA            SETC  ''          RESET IN/OUTPUT                 01300500
&ZXBUFFER             SETC  ''          RESET IN/OUTPUT                 01300600
&ZMS                  SETC  ' '                                         01300700
&ZMS                  SETC  '&ZMS "BUFFER" KEY AND ITS'                 01300800
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01300900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01301000
.ZG358D               ANOP  ,                                           01301100
.*------------------------------------------------------------------    01301200
.***AG.KMEKY07 NAME, OPT INPUT, ME KEYS -CHECK IF KEY ENTERED           01301300
                      AIF   (K'&XDATAREA GT 0).ZG370B                   01301400
&ZXDATAREA            SETC  'INPUT'     SET IN/OUTPUT                   01301500
&XDATAREA             SETC  'BUFLIST'   SET DEFAULT                     01301600
&ZXBUFLIST            SETC  'INPUT'     SET IN/OUTPUT                   01301700
&XBUFLIST             SETC  '0'         SET DEFAULT PARM                01301800
.ZG370B               ANOP  ,                                           01301900
.*-------------------------------------------------------------------   01302000
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 01302100
                      AIF   (K'&ZXBUFFER LE 0).ZG370R  NOT I/O          01302200
                      AIF   ('&XBUFFER'(1,1) NE '(').ZG370R             01302300
&ZCGPR                SETC  '&XBUFFER'(2,K'&XBUFFER-2)                  01302400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG370P               01302500
                      AIF   (K'&ZCGPR GT 2).ZG370Q                      01302600
                      AIF   ('&ZCGPR' EQ '0').ZG370Q                    01302700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01302800
                      AIF   (T'&ZCGPR NE 'N').ZG370Q  INVALID REG NAME  01302900
.ZG370P               ANOP  ,                                           01303000
                      AIF   (T'&ZCGPR NE 'N').ZG370R  NON NUMERIC       01303100
                      AIF   ('&ZCGPR' LT '2').ZG370Q                    01303200
                      AIF   ('&ZCGPR' LE '12').ZG370R                   01303300
.ZG370Q               ANOP  ,                                           01303400
&ZMS                  SETC  '"BUFFER='                                  01303500
&ZMS                  SETC  '&ZMS.&BUFFER"'                             01303600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01303700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01303800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01303900
.ZG370R               ANOP  ,                                           01304000
.*-------------------------------------------------------------------   01304100
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           01304200
.ZG325ZY  AIF    ('&XDATAREA' NE 'BUFLIST').ZG358ZY                     01304300
.*-------------------------------------------------------------------   01304400
.***AG.KMEKY14 NAME, OPT INPUT, ME KEYS -DISALLOWED KEYS                01304500
&ZCVAL                SETC ''           ERROR KEY FIELD                 01304600
.ZG325I0              AIF   (K'&BUFSIZE LE 0).ZG325I1                   01304700
&ZCVAL                SETC '&ZCVAL BUFSIZE'     DISALLOWED KEY          01304800
.ZG325I1              AIF   (K'&ZCVAL LE 0).ZG325J  KEY                 01304900
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01305000
&ZMS                  SETC  '"BUFLIST'                                  01305100
&ZMS                  SETC  '&ZMS.=&BUFLIST"'                           01305200
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01305300
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01305400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01305500
.ZG325J               ANOP  ,                                           01305600
.*-------------------------------------------------------------------   01305700
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 01305800
                      AIF   (K'&ZXBUFLIST LE 0).ZG325R  NOT I/O         01305900
                      AIF   ('&XBUFLIST'(1,1) NE '(').ZG325R            01306000
&ZCGPR                SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                01306100
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG325P               01306200
                      AIF   (K'&ZCGPR GT 2).ZG325Q                      01306300
                      AIF   ('&ZCGPR' EQ '0').ZG325Q                    01306400
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01306500
                      AIF   (T'&ZCGPR NE 'N').ZG325Q  INVALID REG NAME  01306600
.ZG325P               ANOP  ,                                           01306700
                      AIF   (T'&ZCGPR NE 'N').ZG325R  NON NUMERIC       01306800
                      AIF   ('&ZCGPR' LT '2').ZG325Q                    01306900
                      AIF   ('&ZCGPR' LE '12').ZG325R                   01307000
.ZG325Q               ANOP  ,                                           01307100
&ZMS                  SETC  '"BUFLIST='                                 01307200
&ZMS                  SETC  '&ZMS.&BUFLIST"'                            01307300
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01307400
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01307500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01307600
.ZG325R               ANOP  ,                                           01307700
.*------------------------------------------------------------------    01307800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01307900
&XBUFADDRTYPE         SETC  ''          INITIALIZE XVARIABLE            01308000
.*-------------------------------------------------------------------   01308100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01308200
.ZG328                ANOP  ,                                           01308300
                      AIF   (K'&BUFADDRTYPE(1) LE 0).ZG328A             01308400
&ZTLC                 SETC 'VIRTUAL'                                    01308500
                      AIF   ('&BUFADDRTYPE(1)' NE '&ZTLC').ZG345        01308600
&XBUFADDRTYPE         SETC  'VIRTUAL'   SET KEYWORD                     01308700
                      AIF   (N'&BUFADDRTYPE LE 1).ZG328A  CK NUM        01308800
&ZMS                  SETC  '"BUFADDRTYPE='                             01308900
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        01309000
&ZMS                  SETC  '&ZMS "BUFADDRTYPE"'                        01309100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01309200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01309300
.ZG328A               ANOP  ,                                           01309400
.*------------------------------------------------------------------    01309500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01309600
&XPAGEABLE            SETC  ''          INITIALIZE XVARIABLE            01309700
.*-------------------------------------------------------------------   01309800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01309900
.ZG331                ANOP  ,                                           01310000
                      AIF   (K'&PAGEABLE(1) LE 0).ZG331A                01310100
&ZTLC                 SETC 'YES'                                        01310200
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG335           01310300
&XPAGEABLE            SETC  'YES'       SET KEYWORD                     01310400
                      AIF   (N'&PAGEABLE LE 1).ZG331A  CK NUM           01310500
&ZMS                  SETC  '"PAGEABLE='                                01310600
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           01310700
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           01310800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01310900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01311000
.ZG331A               ANOP  ,                                           01311100
.*----------------------------------------------------------------***   01311200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01311300
                      AIF   (N'&BUFSTGKEY LE 1).ZG333A  CK NUM          01311400
&ZMS                  SETC  '"BUFSTGKEY='                               01311500
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          01311600
&ZMS                  SETC  '&ZMS "BUFSTGKEY"'                          01311700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01311800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01311900
.ZG333A               ANOP  ,                                           01312000
.*-------------------------------------------------------------------   01312100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01312200
&ZXBUFSTGKEY          SETC  'INPUT'     SET IN/OUTPUT                   01312300
&XBUFSTGKEY           SETC  'CALLERS_KEY'                               01312400
                      AIF   (K'&BUFSTGKEY(1) LE 0).ZG333B  PARM         01312500
&XBUFSTGKEY           SETC  '&BUFSTGKEY(1)'     SET XVARIABLE           01312600
                      AIF   (N'&BUFSTGKEY GT 1).ZG333B  MULTI           01312700
&XBUFSTGKEY           SETC  '&BUFSTGKEY'        SET XVARIABLE           01312800
.ZG333B               ANOP  ,                                           01312900
.*-------------------------------------------------------------------   01313000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01313100
                      AIF   (K'&ZXBUFSTGKEY LE 0).ZG333R  NOT I/O       01313200
         AIF   ('&XBUFSTGKEY' EQ 'CALLERS_KEY').ZG333R                  01313300
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZG333R          01313400
&ZCGPR                SETC  '&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2)            01313500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG333P               01313600
                      AIF   (K'&ZCGPR GT 2).ZG333Q                      01313700
                      AIF   ('&ZCGPR' EQ '0').ZG333Q                    01313800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01313900
                      AIF   (T'&ZCGPR NE 'N').ZG333Q  INVALID REG NAME  01314000
.ZG333P               ANOP  ,                                           01314100
                      AIF   (T'&ZCGPR NE 'N').ZG333R  NON NUMERIC       01314200
                      AIF   ('&ZCGPR' LT '2').ZG333Q                    01314300
                      AIF   ('&ZCGPR' LE '12').ZG333R                   01314400
.ZG333Q               ANOP  ,                                           01314500
&ZMS                  SETC  '"BUFSTGKEY='                               01314600
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          01314700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01314800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01314900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01315000
.ZG333R               ANOP  ,                                           01315100
.*-------------------------------------------------------------------   01315200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01315300
.ZG335                ANOP  ,                                           01315400
&ZTLC                 SETC 'NO'                                         01315500
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG336           01315600
&XPAGEABLE            SETC  'NO'        SET KEYWORD                     01315700
                      AIF   (N'&PAGEABLE LE 1).ZG335A  CK NUM           01315800
&ZMS                  SETC  '"PAGEABLE='                                01315900
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           01316000
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           01316100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01316200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01316300
.ZG335A               ANOP  ,                                           01316400
.*------------------------------------------------------------------    01316500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01316600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01316700
.ZG335A0              AIF   (K'&BUFSTGKEY LE 0).ZG335A1  OK             01316800
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      01316900
.ZG335A1              AIF   (K'&ZCVAL LE 0).ZG335A2  OK                 01317000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01317100
&ZMS                  SETC  '"PAGEABLE'                                 01317200
&ZMS                  SETC  '&ZMS.=&PAGEABLE"'                          01317300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01317400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01317500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01317600
.ZG335A2              ANOP  ,                                           01317700
.*------------------------------------------------------------------    01317800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01317900
.ZG336                ANOP  ,                                           01318000
&ZXPAGEABLE           SETC  'INPUT'     SET IN/OUTPUT                   01318100
                      AIF   (K'&XPAGEABLE GT 0).ZG336E  VALID ARG       01318200
                      AIF   (T'&PAGEABLE EQ 'O').ZG336D  OMITTED        01318300
&ZASYSLNDX            SETA  0                                           01318400
.ZG336A               ANOP  ,           POSITIONAL MACRO KEY            01318500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01318600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG336C           01318700
&ZTLC                 SETC 'PAGEABLE'                                   01318800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG336A  01318900
.ZG336B               ANOP  ,                                           01319000
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 01319100
&ZMS                  SETC  'THE "PAGEABLE" KEY'                        01319200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01319300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01319400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01319500
                      AGO   .ZG336E                                     01319600
.ZG336C               ANOP  ,                                           01319700
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 01319800
&ZMS                  SETC  '"PAGEABLE='                                01319900
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           01320000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01320100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01320200
&ZMS                  SETC  '&ZMS "YES"'                                01320300
&ZMS                  SETC  '&ZMS OR "NO".'                             01320400
                      MNOTE 8,' &ZMS '                                  01320500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01320600
                      AGO   .ZG336E                                     01320700
.ZG336D               ANOP  ,                                           01320800
&XPAGEABLE            SETC  'YES'       SET DEFAULT KEYWORD             01320900
.ZG336E               ANOP  ,                                           01321000
.*----------------------------------------------------------------***   01321100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01321200
                      AIF   (N'&BUFALET LE 1).ZG338A  CK NUM            01321300
&ZMS                  SETC  '"BUFALET='                                 01321400
&ZMS                  SETC  '&ZMS.&BUFALET"'                            01321500
&ZMS                  SETC  '&ZMS "BUFALET"'                            01321600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01321700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01321800
.ZG338A               ANOP  ,                                           01321900
.*-------------------------------------------------------------------   01322000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01322100
&ZXBUFALET            SETC  'INPUT'     SET IN/OUTPUT                   01322200
&XBUFALET             SETC  'NO_BUFALET'                                01322300
                      AIF   (K'&BUFALET(1) LE 0).ZG338B  PARM           01322400
&XBUFALET             SETC  '&BUFALET(1)'       SET XVARIABLE           01322500
                      AIF   (N'&BUFALET GT 1).ZG338B  MULTI             01322600
&XBUFALET             SETC  '&BUFALET'  SET XVARIABLE                   01322700
.ZG338B               ANOP  ,                                           01322800
.*-------------------------------------------------------------------   01322900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01323000
                      AIF   (K'&ZXBUFALET LE 0).ZG338R  NOT I/O         01323100
         AIF   ('&XBUFALET' EQ 'NO_BUFALET').ZG338R                     01323200
                      AIF   ('&XBUFALET'(1,1) NE '(').ZG338R            01323300
&ZCGPR                SETC  '&XBUFALET'(2,K'&XBUFALET-2)                01323400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG338P               01323500
                      AIF   (K'&ZCGPR GT 2).ZG338Q                      01323600
                      AIF   ('&ZCGPR' EQ '0').ZG338Q                    01323700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01323800
                      AIF   (T'&ZCGPR NE 'N').ZG338Q  INVALID REG NAME  01323900
.ZG338P               ANOP  ,                                           01324000
                      AIF   (T'&ZCGPR NE 'N').ZG338R  NON NUMERIC       01324100
                      AIF   ('&ZCGPR' LT '2').ZG338Q                    01324200
                      AIF   ('&ZCGPR' LE '12').ZG338R                   01324300
.ZG338Q               ANOP  ,                                           01324400
&ZMS                  SETC  '"BUFALET='                                 01324500
&ZMS                  SETC  '&ZMS.&BUFALET"'                            01324600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01324700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01324800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01324900
.ZG338R               ANOP  ,                                           01325000
.*------------------------------------------------------------------    01325100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01325200
&XBUFADDRSIZE         SETC  ''          INITIALIZE XVARIABLE            01325300
.*-------------------------------------------------------------------   01325400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01325500
.ZG342                ANOP  ,                                           01325600
                      AIF   (K'&BUFADDRSIZE(1) LE 0).ZG342A             01325700
&ZTLC                 SETC '31'                                         01325800
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG343        01325900
&XBUFADDRSIZE         SETC  '31'        SET KEYWORD                     01326000
                      AIF   (N'&BUFADDRSIZE LE 1).ZG342A  CK NUM        01326100
&ZMS                  SETC  '"BUFADDRSIZE='                             01326200
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        01326300
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        01326400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01326500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01326600
.ZG342A               ANOP  ,                                           01326700
.*-------------------------------------------------------------------   01326800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01326900
.ZG343                ANOP  ,                                           01327000
&ZTLC                 SETC '64'                                         01327100
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG344        01327200
&XBUFADDRSIZE         SETC  '64'        SET KEYWORD                     01327300
                      AIF   (N'&BUFADDRSIZE LE 1).ZG343A  CK NUM        01327400
&ZMS                  SETC  '"BUFADDRSIZE='                             01327500
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        01327600
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        01327700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01327800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01327900
.ZG343A               ANOP  ,                                           01328000
.*------------------------------------------------------------------    01328100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01328200
.ZG344                ANOP  ,                                           01328300
&ZXBUFADDRSIZE        SETC  'INPUT'     SET IN/OUTPUT                   01328400
                      AIF   (K'&XBUFADDRSIZE GT 0).ZG344E  VALID ARG    01328500
                      AIF   (T'&BUFADDRSIZE EQ 'O').ZG344D  OMITTED     01328600
&ZASYSLNDX            SETA  0                                           01328700
.ZG344A               ANOP  ,           POSITIONAL MACRO KEY            01328800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01328900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG344C           01329000
&ZTLC                 SETC 'BUFADDRSIZE'                                01329100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG344A  01329200
.ZG344B               ANOP  ,                                           01329300
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 01329400
&ZMS                  SETC  'THE "BUFADDRSIZE" KEY'                     01329500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01329600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01329700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01329800
                      AGO   .ZG344E                                     01329900
.ZG344C               ANOP  ,                                           01330000
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 01330100
&ZMS                  SETC  '"BUFADDRSIZE='                             01330200
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        01330300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01330400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01330500
&ZMS                  SETC  '&ZMS "31"'                                 01330600
&ZMS                  SETC  '&ZMS OR "64".'                             01330700
                      MNOTE 8,' &ZMS '                                  01330800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01330900
                      AGO   .ZG344E                                     01331000
.ZG344D               ANOP  ,                                           01331100
&XBUFADDRSIZE         SETC  '31'        SET DEFAULT KEYWORD             01331200
.ZG344E               ANOP  ,                                           01331300
.*-------------------------------------------------------------------   01331400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01331500
.ZG345                ANOP  ,                                           01331600
&ZTLC                 SETC 'REAL'                                       01331700
                      AIF   ('&BUFADDRTYPE(1)' NE '&ZTLC').ZG351        01331800
&XBUFADDRTYPE         SETC  'REAL'      SET KEYWORD                     01331900
                      AIF   (N'&BUFADDRTYPE LE 1).ZG345A  CK NUM        01332000
&ZMS                  SETC  '"BUFADDRTYPE='                             01332100
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        01332200
&ZMS                  SETC  '&ZMS "BUFADDRTYPE"'                        01332300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01332400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01332500
.ZG345A               ANOP  ,                                           01332600
.*------------------------------------------------------------------    01332700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01332800
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01332900
.ZG345A0              AIF   (K'&PAGEABLE LE 0).ZG345A1  OK              01333000
&ZCVAL                SETC '&ZCVAL PAGEABLE'    INCORRECT KEY USED      01333100
.ZG345A1              AIF   (K'&BUFSTGKEY LE 0).ZG345A2  OK             01333200
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      01333300
.ZG345A2              AIF   (K'&BUFALET LE 0).ZG345A3  OK               01333400
&ZCVAL                SETC '&ZCVAL BUFALET'     INCORRECT KEY USED      01333500
.ZG345A3              AIF   (K'&ZCVAL LE 0).ZG345A4  OK                 01333600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01333700
&ZMS                  SETC  '"BUFADDRTYPE'                              01333800
&ZMS                  SETC  '&ZMS.=&BUFADDRTYPE"'                       01333900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01334000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01334100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01334200
.ZG345A4              ANOP  ,                                           01334300
.*------------------------------------------------------------------    01334400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01334500
&XBUFADDRSIZE         SETC  ''          INITIALIZE XVARIABLE            01334600
.*-------------------------------------------------------------------   01334700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01334800
.ZG348                ANOP  ,                                           01334900
                      AIF   (K'&BUFADDRSIZE(1) LE 0).ZG348A             01335000
&ZTLC                 SETC '31'                                         01335100
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG349        01335200
&XBUFADDRSIZE         SETC  '31'        SET KEYWORD                     01335300
                      AIF   (N'&BUFADDRSIZE LE 1).ZG348A  CK NUM        01335400
&ZMS                  SETC  '"BUFADDRSIZE='                             01335500
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        01335600
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        01335700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01335800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01335900
.ZG348A               ANOP  ,                                           01336000
.*-------------------------------------------------------------------   01336100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01336200
.ZG349                ANOP  ,                                           01336300
&ZTLC                 SETC '64'                                         01336400
                      AIF   ('&BUFADDRSIZE(1)' NE '&ZTLC').ZG350        01336500
&XBUFADDRSIZE         SETC  '64'        SET KEYWORD                     01336600
                      AIF   (N'&BUFADDRSIZE LE 1).ZG349A  CK NUM        01336700
&ZMS                  SETC  '"BUFADDRSIZE='                             01336800
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        01336900
&ZMS                  SETC  '&ZMS "BUFADDRSIZE"'                        01337000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01337100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01337200
.ZG349A               ANOP  ,                                           01337300
.*------------------------------------------------------------------    01337400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01337500
.ZG350                ANOP  ,                                           01337600
&ZXBUFADDRSIZE        SETC  'INPUT'     SET IN/OUTPUT                   01337700
                      AIF   (K'&XBUFADDRSIZE GT 0).ZG350E  VALID ARG    01337800
                      AIF   (T'&BUFADDRSIZE EQ 'O').ZG350D  OMITTED     01337900
&ZASYSLNDX            SETA  0                                           01338000
.ZG350A               ANOP  ,           POSITIONAL MACRO KEY            01338100
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01338200
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG350C           01338300
&ZTLC                 SETC 'BUFADDRSIZE'                                01338400
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG350A  01338500
.ZG350B               ANOP  ,                                           01338600
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 01338700
&ZMS                  SETC  'THE "BUFADDRSIZE" KEY'                     01338800
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01338900
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01339000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01339100
                      AGO   .ZG350E                                     01339200
.ZG350C               ANOP  ,                                           01339300
&ZXBUFADDRSIZE        SETC  ''          RESET IN/OUTPUT                 01339400
&ZMS                  SETC  '"BUFADDRSIZE='                             01339500
&ZMS                  SETC  '&ZMS.&BUFADDRSIZE"'                        01339600
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01339700
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01339800
&ZMS                  SETC  '&ZMS "31"'                                 01339900
&ZMS                  SETC  '&ZMS OR "64".'                             01340000
                      MNOTE 8,' &ZMS '                                  01340100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01340200
                      AGO   .ZG350E                                     01340300
.ZG350D               ANOP  ,                                           01340400
&XBUFADDRSIZE         SETC  '31'        SET DEFAULT KEYWORD             01340500
.ZG350E               ANOP  ,                                           01340600
.*------------------------------------------------------------------    01340700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01340800
.ZG351                ANOP  ,                                           01340900
&ZXBUFADDRTYPE        SETC  'INPUT'     SET IN/OUTPUT                   01341000
                      AIF   (K'&XBUFADDRTYPE GT 0).ZG351E  VALID ARG    01341100
                      AIF   (T'&BUFADDRTYPE EQ 'O').ZG351D  OMITTED     01341200
&ZASYSLNDX            SETA  0                                           01341300
.ZG351A               ANOP  ,           POSITIONAL MACRO KEY            01341400
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01341500
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG351C           01341600
&ZTLC                 SETC 'BUFADDRTYPE'                                01341700
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG351A  01341800
.ZG351B               ANOP  ,                                           01341900
&ZXBUFADDRTYPE        SETC  ''          RESET IN/OUTPUT                 01342000
&ZMS                  SETC  'THE "BUFADDRTYPE" KEY'                     01342100
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01342200
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01342300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01342400
                      AGO   .ZG351E                                     01342500
.ZG351C               ANOP  ,                                           01342600
&ZXBUFADDRTYPE        SETC  ''          RESET IN/OUTPUT                 01342700
&ZMS                  SETC  '"BUFADDRTYPE='                             01342800
&ZMS                  SETC  '&ZMS.&BUFADDRTYPE"'                        01342900
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01343000
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01343100
&ZMS                  SETC  '&ZMS "VIRTUAL"'                            01343200
&ZMS                  SETC  '&ZMS OR "REAL".'                           01343300
                      MNOTE 8,' &ZMS '                                  01343400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01343500
                      AGO   .ZG351E                                     01343600
.ZG351D               ANOP  ,                                           01343700
&XBUFADDRTYPE         SETC  'VIRTUAL'   SET DEFAULT KEYWORD             01343800
.ZG351E               ANOP  ,                                           01343900
.*----------------------------------------------------------------***   01344000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01344100
                      AIF   (N'&BUFNUM LE 1).ZG353A  CK NUM             01344200
&ZMS                  SETC  '"BUFNUM='                                  01344300
&ZMS                  SETC  '&ZMS.&BUFNUM"'                             01344400
&ZMS                  SETC  '&ZMS "BUFNUM"'                             01344500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01344600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01344700
.ZG353A               ANOP  ,                                           01344800
.*-------------------------------------------------------------------   01344900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01345000
&ZXBUFNUM             SETC  'INPUT'     SET IN/OUTPUT                   01345100
&XBUFNUM              SETC  'NO_BUFNUM'                                 01345200
                      AIF   (K'&BUFNUM(1) LE 0).ZG353B  PARM            01345300
&XBUFNUM              SETC  '&BUFNUM(1)'        SET XVARIABLE           01345400
                      AIF   (N'&BUFNUM GT 1).ZG353B  MULTI              01345500
&XBUFNUM              SETC  '&BUFNUM'   SET XVARIABLE                   01345600
.ZG353B               ANOP  ,                                           01345700
.*-------------------------------------------------------------------   01345800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01345900
                      AIF   (K'&ZXBUFNUM LE 0).ZG353R  NOT I/O          01346000
         AIF   ('&XBUFNUM' EQ 'NO_BUFNUM').ZG353R                       01346100
                      AIF   ('&XBUFNUM'(1,1) NE '(').ZG353R             01346200
&ZCGPR                SETC  '&XBUFNUM'(2,K'&XBUFNUM-2)                  01346300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG353P               01346400
                      AIF   (K'&ZCGPR GT 2).ZG353Q                      01346500
                      AIF   ('&ZCGPR' EQ '0').ZG353Q                    01346600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01346700
                      AIF   (T'&ZCGPR NE 'N').ZG353Q  INVALID REG NAME  01346800
.ZG353P               ANOP  ,                                           01346900
                      AIF   (T'&ZCGPR NE 'N').ZG353R  NON NUMERIC       01347000
                      AIF   ('&ZCGPR' LT '2').ZG353Q                    01347100
                      AIF   ('&ZCGPR' LE '12').ZG353R                   01347200
.ZG353Q               ANOP  ,                                           01347300
&ZMS                  SETC  '"BUFNUM='                                  01347400
&ZMS                  SETC  '&ZMS.&BUFNUM"'                             01347500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01347600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01347700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01347800
.ZG353R               ANOP  ,                                           01347900
.*----------------------------------------------------------------***   01348000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01348100
                      AIF   (N'&BUFINCRNUM LE 1).ZG356A  CK NUM         01348200
&ZMS                  SETC  '"BUFINCRNUM='                              01348300
&ZMS                  SETC  '&ZMS.&BUFINCRNUM"'                         01348400
&ZMS                  SETC  '&ZMS "BUFINCRNUM"'                         01348500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01348600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01348700
.ZG356A               ANOP  ,                                           01348800
.*-------------------------------------------------------------------   01348900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01349000
&ZXBUFINCRNUM         SETC  'INPUT'     SET IN/OUTPUT                   01349100
&XBUFINCRNUM          SETC  'NO_BUFINCRNUM'                             01349200
                      AIF   (K'&BUFINCRNUM(1) LE 0).ZG356B  PARM        01349300
&XBUFINCRNUM          SETC  '&BUFINCRNUM(1)'    SET XVARIABLE           01349400
                      AIF   (N'&BUFINCRNUM GT 1).ZG356B  MULTI          01349500
&XBUFINCRNUM          SETC  '&BUFINCRNUM'       SET XVARIABLE           01349600
.ZG356B               ANOP  ,                                           01349700
.*-------------------------------------------------------------------   01349800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01349900
                      AIF   (K'&ZXBUFINCRNUM LE 0).ZG356R  NOT I/O      01350000
         AIF   ('&XBUFINCRNUM' EQ 'NO_BUFINCRNUM').ZG356R               01350100
                      AIF   ('&XBUFINCRNUM'(1,1) NE '(').ZG356R         01350200
&ZCGPR                SETC  '&XBUFINCRNUM'(2,K'&XBUFINCRNUM-2)          01350300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG356P               01350400
                      AIF   (K'&ZCGPR GT 2).ZG356Q                      01350500
                      AIF   ('&ZCGPR' EQ '0').ZG356Q                    01350600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01350700
                      AIF   (T'&ZCGPR NE 'N').ZG356Q  INVALID REG NAME  01350800
.ZG356P               ANOP  ,                                           01350900
                      AIF   (T'&ZCGPR NE 'N').ZG356R  NON NUMERIC       01351000
                      AIF   ('&ZCGPR' LT '2').ZG356Q                    01351100
                      AIF   ('&ZCGPR' LE '12').ZG356R                   01351200
.ZG356Q               ANOP  ,                                           01351300
&ZMS                  SETC  '"BUFINCRNUM='                              01351400
&ZMS                  SETC  '&ZMS.&BUFINCRNUM"'                         01351500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01351600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01351700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01351800
.ZG356R               ANOP  ,                                           01351900
.*-------------------------------------------------------------------   01352000
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           01352100
.ZG358ZY  AIF    ('&XDATAREA' NE 'BUFFER').ZG370ZY                      01352200
.*-------------------------------------------------------------------   01352300
.***AG.KMEKY14 NAME, OPT INPUT, ME KEYS -DISALLOWED KEYS                01352400
&ZCVAL                SETC ''           ERROR KEY FIELD                 01352500
.ZG358I0              AIF   (K'&BUFADDRTYPE LE 0).ZG358I1               01352600
&ZCVAL                SETC '&ZCVAL BUFADDRTYPE'  DISALLOWED KEY         01352700
.ZG358I1              AIF   (K'&BUFALET LE 0).ZG358I2                   01352800
&ZCVAL                SETC '&ZCVAL BUFALET'     DISALLOWED KEY          01352900
.ZG358I2              AIF   (K'&BUFADDRSIZE LE 0).ZG358I3               01353000
&ZCVAL                SETC '&ZCVAL BUFADDRSIZE'  DISALLOWED KEY         01353100
.ZG358I3              AIF   (K'&BUFNUM LE 0).ZG358I4                    01353200
&ZCVAL                SETC '&ZCVAL BUFNUM'      DISALLOWED KEY          01353300
.ZG358I4              AIF   (K'&BUFINCRNUM LE 0).ZG358I5                01353400
&ZCVAL                SETC '&ZCVAL BUFINCRNUM'  DISALLOWED KEY          01353500
.ZG358I5              AIF   (K'&ZCVAL LE 0).ZG358J  KEY                 01353600
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01353700
&ZMS                  SETC  '"BUFFER'                                   01353800
&ZMS                  SETC  '&ZMS.=&BUFFER"'                            01353900
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01354000
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01354100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01354200
.ZG358J               ANOP  ,                                           01354300
.*-------------------------------------------------------------------   01354400
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 01354500
                      AIF   (K'&ZXBUFFER LE 0).ZG358R  NOT I/O          01354600
                      AIF   ('&XBUFFER'(1,1) NE '(').ZG358R             01354700
&ZCGPR                SETC  '&XBUFFER'(2,K'&XBUFFER-2)                  01354800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG358P               01354900
                      AIF   (K'&ZCGPR GT 2).ZG358Q                      01355000
                      AIF   ('&ZCGPR' EQ '0').ZG358Q                    01355100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01355200
                      AIF   (T'&ZCGPR NE 'N').ZG358Q  INVALID REG NAME  01355300
.ZG358P               ANOP  ,                                           01355400
                      AIF   (T'&ZCGPR NE 'N').ZG358R  NON NUMERIC       01355500
                      AIF   ('&ZCGPR' LT '2').ZG358Q                    01355600
                      AIF   ('&ZCGPR' LE '12').ZG358R                   01355700
.ZG358Q               ANOP  ,                                           01355800
&ZMS                  SETC  '"BUFFER='                                  01355900
&ZMS                  SETC  '&ZMS.&BUFFER"'                             01356000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01356100
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01356200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01356300
.ZG358R               ANOP  ,                                           01356400
.*------------------------------------------------------------------    01356500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01356600
&XPAGEABLE            SETC  ''          INITIALIZE XVARIABLE            01356700
.*-------------------------------------------------------------------   01356800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01356900
.ZG361                ANOP  ,                                           01357000
                      AIF   (K'&PAGEABLE(1) LE 0).ZG361A                01357100
&ZTLC                 SETC 'YES'                                        01357200
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG365           01357300
&XPAGEABLE            SETC  'YES'       SET KEYWORD                     01357400
                      AIF   (N'&PAGEABLE LE 1).ZG361A  CK NUM           01357500
&ZMS                  SETC  '"PAGEABLE='                                01357600
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           01357700
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           01357800
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01357900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01358000
.ZG361A               ANOP  ,                                           01358100
.*----------------------------------------------------------------***   01358200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01358300
                      AIF   (N'&BUFSTGKEY LE 1).ZG363A  CK NUM          01358400
&ZMS                  SETC  '"BUFSTGKEY='                               01358500
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          01358600
&ZMS                  SETC  '&ZMS "BUFSTGKEY"'                          01358700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01358800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01358900
.ZG363A               ANOP  ,                                           01359000
.*-------------------------------------------------------------------   01359100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01359200
&ZXBUFSTGKEY          SETC  'INPUT'     SET IN/OUTPUT                   01359300
&XBUFSTGKEY           SETC  'CALLERS_KEY'                               01359400
                      AIF   (K'&BUFSTGKEY(1) LE 0).ZG363B  PARM         01359500
&XBUFSTGKEY           SETC  '&BUFSTGKEY(1)'     SET XVARIABLE           01359600
                      AIF   (N'&BUFSTGKEY GT 1).ZG363B  MULTI           01359700
&XBUFSTGKEY           SETC  '&BUFSTGKEY'        SET XVARIABLE           01359800
.ZG363B               ANOP  ,                                           01359900
.*-------------------------------------------------------------------   01360000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01360100
                      AIF   (K'&ZXBUFSTGKEY LE 0).ZG363R  NOT I/O       01360200
         AIF   ('&XBUFSTGKEY' EQ 'CALLERS_KEY').ZG363R                  01360300
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZG363R          01360400
&ZCGPR                SETC  '&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2)            01360500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG363P               01360600
                      AIF   (K'&ZCGPR GT 2).ZG363Q                      01360700
                      AIF   ('&ZCGPR' EQ '0').ZG363Q                    01360800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01360900
                      AIF   (T'&ZCGPR NE 'N').ZG363Q  INVALID REG NAME  01361000
.ZG363P               ANOP  ,                                           01361100
                      AIF   (T'&ZCGPR NE 'N').ZG363R  NON NUMERIC       01361200
                      AIF   ('&ZCGPR' LT '2').ZG363Q                    01361300
                      AIF   ('&ZCGPR' LE '12').ZG363R                   01361400
.ZG363Q               ANOP  ,                                           01361500
&ZMS                  SETC  '"BUFSTGKEY='                               01361600
&ZMS                  SETC  '&ZMS.&BUFSTGKEY"'                          01361700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01361800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01361900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01362000
.ZG363R               ANOP  ,                                           01362100
.*-------------------------------------------------------------------   01362200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01362300
.ZG365                ANOP  ,                                           01362400
&ZTLC                 SETC 'NO'                                         01362500
                      AIF   ('&PAGEABLE(1)' NE '&ZTLC').ZG366           01362600
&XPAGEABLE            SETC  'NO'        SET KEYWORD                     01362700
                      AIF   (N'&PAGEABLE LE 1).ZG365A  CK NUM           01362800
&ZMS                  SETC  '"PAGEABLE='                                01362900
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           01363000
&ZMS                  SETC  '&ZMS "PAGEABLE"'                           01363100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01363200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01363300
.ZG365A               ANOP  ,                                           01363400
.*------------------------------------------------------------------    01363500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01363600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01363700
.ZG365A0              AIF   (K'&BUFSTGKEY LE 0).ZG365A1  OK             01363800
&ZCVAL                SETC '&ZCVAL BUFSTGKEY'   INCORRECT KEY USED      01363900
.ZG365A1              AIF   (K'&ZCVAL LE 0).ZG365A2  OK                 01364000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01364100
&ZMS                  SETC  '"PAGEABLE'                                 01364200
&ZMS                  SETC  '&ZMS.=&PAGEABLE"'                          01364300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01364400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01364500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01364600
.ZG365A2              ANOP  ,                                           01364700
.*------------------------------------------------------------------    01364800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01364900
.ZG366                ANOP  ,                                           01365000
&ZXPAGEABLE           SETC  'INPUT'     SET IN/OUTPUT                   01365100
                      AIF   (K'&XPAGEABLE GT 0).ZG366E  VALID ARG       01365200
                      AIF   (T'&PAGEABLE EQ 'O').ZG366D  OMITTED        01365300
&ZASYSLNDX            SETA  0                                           01365400
.ZG366A               ANOP  ,           POSITIONAL MACRO KEY            01365500
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01365600
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG366C           01365700
&ZTLC                 SETC 'PAGEABLE'                                   01365800
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG366A  01365900
.ZG366B               ANOP  ,                                           01366000
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 01366100
&ZMS                  SETC  'THE "PAGEABLE" KEY'                        01366200
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01366300
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01366400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01366500
                      AGO   .ZG366E                                     01366600
.ZG366C               ANOP  ,                                           01366700
&ZXPAGEABLE           SETC  ''          RESET IN/OUTPUT                 01366800
&ZMS                  SETC  '"PAGEABLE='                                01366900
&ZMS                  SETC  '&ZMS.&PAGEABLE"'                           01367000
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01367100
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01367200
&ZMS                  SETC  '&ZMS "YES"'                                01367300
&ZMS                  SETC  '&ZMS OR "NO".'                             01367400
                      MNOTE 8,' &ZMS '                                  01367500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01367600
                      AGO   .ZG366E                                     01367700
.ZG366D               ANOP  ,                                           01367800
&XPAGEABLE            SETC  'YES'       SET DEFAULT KEYWORD             01367900
.ZG366E               ANOP  ,                                           01368000
.*----------------------------------------------------------------***   01368100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01368200
                      AIF   (N'&BUFSIZE LE 1).ZG368A  CK NUM            01368300
&ZMS                  SETC  '"BUFSIZE='                                 01368400
&ZMS                  SETC  '&ZMS.&BUFSIZE"'                            01368500
&ZMS                  SETC  '&ZMS "BUFSIZE"'                            01368600
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01368700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01368800
.ZG368A               ANOP  ,                                           01368900
.*-------------------------------------------------------------------   01369000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01369100
&ZXBUFSIZE            SETC  'INPUT'     SET IN/OUTPUT                   01369200
&XBUFSIZE             SETC  '&BUFSIZE(1)'       SET XVARIABLE           01369300
                      AIF   (N'&BUFSIZE GT 1).ZG368B  MULTI             01369400
&XBUFSIZE             SETC  '&BUFSIZE'  SET XVARIABLE                   01369500
.ZG368B               AIF   (K'&BUFSIZE(1) GT 0).ZG368C                 01369600
&ZXBUFSIZE            SETC  ''          RESET IN/OUTPUT                 01369700
&ZMS                  SETC  'WHEN "BUFFER" IS SPECIFIED'                01369800
&ZMS                  SETC  '&ZMS , "BUFSIZE" KEY AND ITS'              01369900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01370000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01370100
.ZG368C               ANOP  ,                                           01370200
.*-------------------------------------------------------------------   01370300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01370400
                      AIF   (K'&ZXBUFSIZE LE 0).ZG368R  NOT I/O         01370500
                      AIF   ('&XBUFSIZE'(1,1) NE '(').ZG368R            01370600
&ZCGPR                SETC  '&XBUFSIZE'(2,K'&XBUFSIZE-2)                01370700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG368P               01370800
                      AIF   (K'&ZCGPR GT 2).ZG368Q                      01370900
                      AIF   ('&ZCGPR' EQ '0').ZG368Q                    01371000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01371100
                      AIF   (T'&ZCGPR NE 'N').ZG368Q  INVALID REG NAME  01371200
.ZG368P               ANOP  ,                                           01371300
                      AIF   (T'&ZCGPR NE 'N').ZG368R  NON NUMERIC       01371400
                      AIF   ('&ZCGPR' LT '2').ZG368Q                    01371500
                      AIF   ('&ZCGPR' LE '12').ZG368R                   01371600
.ZG368Q               ANOP  ,                                           01371700
&ZMS                  SETC  '"BUFSIZE='                                 01371800
&ZMS                  SETC  '&ZMS.&BUFSIZE"'                            01371900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01372000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01372100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01372200
.ZG368R               ANOP  ,                                           01372300
.*-------------------------------------------------------------------   01372400
.***AG.KMEKY15 NAME, OPT INPUT, ME KEYS -END                            01372500
.ZG370ZY              ANOP ,            END MUTUALLY EXCLUSIVE KEYS     01372600
.*----------------------------------------------------------------***   01372700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01372800
                      AIF   (N'&ADJAREA LE 1).ZG372A  CK NUM            01372900
&ZMS                  SETC  '"ADJAREA='                                 01373000
&ZMS                  SETC  '&ZMS.&ADJAREA"'                            01373100
&ZMS                  SETC  '&ZMS "ADJAREA"'                            01373200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01373300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01373400
.ZG372A               ANOP  ,                                           01373500
.*-------------------------------------------------------------------   01373600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01373700
&ZXADJAREA            SETC  'INPUT'     SET IN/OUTPUT                   01373800
&XADJAREA             SETC  'NO_ADJAREA'                                01373900
                      AIF   (K'&ADJAREA(1) LE 0).ZG372B  PARM           01374000
&XADJAREA             SETC  '&ADJAREA(1)'       SET XVARIABLE           01374100
                      AIF   (N'&ADJAREA GT 1).ZG372B  MULTI             01374200
&XADJAREA             SETC  '&ADJAREA'  SET XVARIABLE                   01374300
.ZG372B               ANOP  ,                                           01374400
.*-------------------------------------------------------------------   01374500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01374600
                      AIF   (K'&ZXADJAREA LE 0).ZG372R  NOT I/O         01374700
         AIF   ('&XADJAREA' EQ 'NO_ADJAREA').ZG372R                     01374800
                      AIF   ('&XADJAREA'(1,1) NE '(').ZG372R            01374900
&ZCGPR                SETC  '&XADJAREA'(2,K'&XADJAREA-2)                01375000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG372P               01375100
                      AIF   (K'&ZCGPR GT 2).ZG372Q                      01375200
                      AIF   ('&ZCGPR' EQ '0').ZG372Q                    01375300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01375400
                      AIF   (T'&ZCGPR NE 'N').ZG372Q  INVALID REG NAME  01375500
.ZG372P               ANOP  ,                                           01375600
                      AIF   (T'&ZCGPR NE 'N').ZG372R  NON NUMERIC       01375700
                      AIF   ('&ZCGPR' LT '2').ZG372Q                    01375800
                      AIF   ('&ZCGPR' LE '12').ZG372R                   01375900
.ZG372Q               ANOP  ,                                           01376000
&ZMS                  SETC  '"ADJAREA='                                 01376100
&ZMS                  SETC  '&ZMS.&ADJAREA"'                            01376200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01376300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01376400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01376500
.ZG372R               ANOP  ,                                           01376600
.*----------------------------------------------------------------***   01376700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01376800
                      AIF   (N'&STGCLASS LE 1).ZG375A  CK NUM           01376900
&ZMS                  SETC  '"STGCLASS='                                01377000
&ZMS                  SETC  '&ZMS.&STGCLASS"'                           01377100
&ZMS                  SETC  '&ZMS "STGCLASS"'                           01377200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01377300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01377400
.ZG375A               ANOP  ,                                           01377500
.*-------------------------------------------------------------------   01377600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01377700
&ZXSTGCLASS           SETC  'INPUT'     SET IN/OUTPUT                   01377800
&XSTGCLASS            SETC  'NO_STGCLASS'                               01377900
                      AIF   (K'&STGCLASS(1) LE 0).ZG375B  PARM          01378000
&XSTGCLASS            SETC  '&STGCLASS(1)'      SET XVARIABLE           01378100
                      AIF   (N'&STGCLASS GT 1).ZG375B  MULTI            01378200
&XSTGCLASS            SETC  '&STGCLASS'         SET XVARIABLE           01378300
.ZG375B               ANOP  ,                                           01378400
.*-------------------------------------------------------------------   01378500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01378600
                      AIF   (K'&ZXSTGCLASS LE 0).ZG375R  NOT I/O        01378700
         AIF   ('&XSTGCLASS' EQ 'NO_STGCLASS').ZG375R                   01378800
                      AIF   ('&XSTGCLASS'(1,1) NE '(').ZG375R           01378900
&ZCGPR                SETC  '&XSTGCLASS'(2,K'&XSTGCLASS-2)              01379000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG375P               01379100
                      AIF   (K'&ZCGPR GT 2).ZG375Q                      01379200
                      AIF   ('&ZCGPR' EQ '0').ZG375Q                    01379300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01379400
                      AIF   (T'&ZCGPR NE 'N').ZG375Q  INVALID REG NAME  01379500
.ZG375P               ANOP  ,                                           01379600
                      AIF   (T'&ZCGPR NE 'N').ZG375R  NON NUMERIC       01379700
                      AIF   ('&ZCGPR' LT '2').ZG375Q                    01379800
                      AIF   ('&ZCGPR' LE '12').ZG375R                   01379900
.ZG375Q               ANOP  ,                                           01380000
&ZMS                  SETC  '"STGCLASS='                                01380100
&ZMS                  SETC  '&ZMS.&STGCLASS"'                           01380200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01380300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01380400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01380500
.ZG375R               ANOP  ,                                           01380600
.*----------------------------------------------------------------***   01380700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01380800
                      AIF   (N'&COCLASS LE 1).ZG378A  CK NUM            01380900
&ZMS                  SETC  '"COCLASS='                                 01381000
&ZMS                  SETC  '&ZMS.&COCLASS"'                            01381100
&ZMS                  SETC  '&ZMS "COCLASS"'                            01381200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01381300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01381400
.ZG378A               ANOP  ,                                           01381500
.*-------------------------------------------------------------------   01381600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01381700
&ZXCOCLASS            SETC  'INPUT'     SET IN/OUTPUT                   01381800
&XCOCLASS             SETC  'NO_COCLASS'                                01381900
                      AIF   (K'&COCLASS(1) LE 0).ZG378B  PARM           01382000
&XCOCLASS             SETC  '&COCLASS(1)'       SET XVARIABLE           01382100
                      AIF   (N'&COCLASS GT 1).ZG378B  MULTI             01382200
&XCOCLASS             SETC  '&COCLASS'  SET XVARIABLE                   01382300
.ZG378B               ANOP  ,                                           01382400
.*-------------------------------------------------------------------   01382500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01382600
                      AIF   (K'&ZXCOCLASS LE 0).ZG378R  NOT I/O         01382700
         AIF   ('&XCOCLASS' EQ 'NO_COCLASS').ZG378R                     01382800
                      AIF   ('&XCOCLASS'(1,1) NE '(').ZG378R            01382900
&ZCGPR                SETC  '&XCOCLASS'(2,K'&XCOCLASS-2)                01383000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG378P               01383100
                      AIF   (K'&ZCGPR GT 2).ZG378Q                      01383200
                      AIF   ('&ZCGPR' EQ '0').ZG378Q                    01383300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01383400
                      AIF   (T'&ZCGPR NE 'N').ZG378Q  INVALID REG NAME  01383500
.ZG378P               ANOP  ,                                           01383600
                      AIF   (T'&ZCGPR NE 'N').ZG378R  NON NUMERIC       01383700
                      AIF   ('&ZCGPR' LT '2').ZG378Q                    01383800
                      AIF   ('&ZCGPR' LE '12').ZG378R                   01383900
.ZG378Q               ANOP  ,                                           01384000
&ZMS                  SETC  '"COCLASS='                                 01384100
&ZMS                  SETC  '&ZMS.&COCLASS"'                            01384200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01384300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01384400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01384500
.ZG378R               ANOP  ,                                           01384600
.*----------------------------------------------------------------***   01384700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01384800
                      AIF   (N'&VECTORINDEX LE 1).ZG381A  CK NUM        01384900
&ZMS                  SETC  '"VECTORINDEX='                             01385000
&ZMS                  SETC  '&ZMS.&VECTORINDEX"'                        01385100
&ZMS                  SETC  '&ZMS "VECTORINDEX"'                        01385200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01385300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01385400
.ZG381A               ANOP  ,                                           01385500
.*-------------------------------------------------------------------   01385600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01385700
&ZXVECTORINDEX        SETC  'INPUT'     SET IN/OUTPUT                   01385800
&XVECTORINDEX         SETC  'NO_VECTORINDEX'                            01385900
                      AIF   (K'&VECTORINDEX(1) LE 0).ZG381B  PARM       01386000
&XVECTORINDEX         SETC  '&VECTORINDEX(1)'   SET XVARIABLE           01386100
                      AIF   (N'&VECTORINDEX GT 1).ZG381B  MULTI         01386200
&XVECTORINDEX         SETC  '&VECTORINDEX'      SET XVARIABLE           01386300
.ZG381B               ANOP  ,                                           01386400
.*-------------------------------------------------------------------   01386500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01386600
                      AIF   (K'&ZXVECTORINDEX LE 0).ZG381R  NOT I/O     01386700
         AIF   ('&XVECTORINDEX' EQ 'NO_VECTORINDEX').ZG381R             01386800
                      AIF   ('&XVECTORINDEX'(1,1) NE '(').ZG381R        01386900
&ZCGPR                SETC  '&XVECTORINDEX'(2,K'&XVECTORINDEX-2)        01387000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG381P               01387100
                      AIF   (K'&ZCGPR GT 2).ZG381Q                      01387200
                      AIF   ('&ZCGPR' EQ '0').ZG381Q                    01387300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01387400
                      AIF   (T'&ZCGPR NE 'N').ZG381Q  INVALID REG NAME  01387500
.ZG381P               ANOP  ,                                           01387600
                      AIF   (T'&ZCGPR NE 'N').ZG381R  NON NUMERIC       01387700
                      AIF   ('&ZCGPR' LT '2').ZG381Q                    01387800
                      AIF   ('&ZCGPR' LE '12').ZG381R                   01387900
.ZG381Q               ANOP  ,                                           01388000
&ZMS                  SETC  '"VECTORINDEX='                             01388100
&ZMS                  SETC  '&ZMS.&VECTORINDEX"'                        01388200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01388300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01388400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01388500
.ZG381R               ANOP  ,                                           01388600
.*----------------------------------------------------------------***   01388700
.***AG.KMEKY01 NAME, OPT INPUT, ME KEYS -XVARIABLE                      01388800
&XRSTTKN              SETC  ''          INITIALIZE XVARIABLE            01388900
                      AIF   (K'&RESTOKEN LE 0).ZG384C                   01389000
&ZXRSTTKN             SETC  'INPUT'     SET IN/OUTPUT                   01389100
&XRSTTKN              SETC  'RESTOKEN'  SET XVARIABLE                   01389200
&ZXRESTOKEN           SETC  'INPUT'     SET IN/OUTPUT                   01389300
&XRESTOKEN            SETC  '&RESTOKEN(1)'      SET XVARIABLE PARM      01389400
                      AIF   (N'&RESTOKEN GT 1).ZG384A                   01389500
&XRESTOKEN            SETC  '&RESTOKEN'         SET XVARIABLE PARM      01389600
.ZG384A               AIF   (N'&RESTOKEN LE 1).ZG384B  CK NUM           01389700
&ZMS                  SETC  '"RESTOKEN='                                01389800
&ZMS                  SETC  '&ZMS.&RESTOKEN"'                           01389900
&ZMS                  SETC  '&ZMS "RESTOKEN"'                           01390000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01390100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01390200
.ZG384B               AIF   (K'&XRESTOKEN GT 0).ZG384C  ONE PARM        01390300
&ZXRSTTKN             SETC  ''          RESET IN/OUTPUT                 01390400
&ZXRESTOKEN           SETC  ''          RESET IN/OUTPUT                 01390500
&ZMS                  SETC  ' '                                         01390600
&ZMS                  SETC  '&ZMS "RESTOKEN" KEY AND ITS'               01390700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01390800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01390900
.ZG384C               ANOP  ,                                           01391000
.*----------------------------------------------------------------***   01391100
.***AG.KMEKY02 NAME, OPT INPUT, ME KEYS -XVARIABLE                      01391200
                      AIF   (K'&EXTRESTOKEN LE 0).ZG385D  NO ME KEY     01391300
                      AIF   (N'&EXTRESTOKEN LE 1).ZG385A  CK NUM        01391400
&ZMS                  SETC  '"EXTRESTOKEN='                             01391500
&ZMS                  SETC  '&ZMS.&EXTRESTOKEN"'                        01391600
&ZMS                  SETC  '&ZMS "EXTRESTOKEN"'                        01391700
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01391800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01391900
.ZG385A               AIF   (K'&XRSTTKN LE 0).ZG385B                    01392000
&ZMS                  SETC  '"EXTRESTOKEN'                              01392100
&ZMS                  SETC  '&ZMS.=&EXTRESTOKEN"'                       01392200
&ZMS                  SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'       01392300
&ZMS                  SETC  '&ZMS "&XRSTTKN"'                           01392400
                      MNOTE 8,' &ZMS KEY.'                              01392500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01392600
                      AGO   .ZG385D                                     01392700
.*                                                                      01392800
.ZG385B               ANOP  ,                                           01392900
&ZXRSTTKN             SETC  'INPUT'     SET IN/OUTPUT                   01393000
&XRSTTKN              SETC  'EXTRESTOKEN'       SET XVARIABLE           01393100
&ZXEXTRESTOKEN        SETC  'INPUT'     SET IN/OUTPUT                   01393200
&XEXTRESTOKEN         SETC  '&EXTRESTOKEN(1)'   SET XVARIABLE PARM      01393300
                      AIF   (N'&EXTRESTOKEN GT 1).ZG385C                01393400
&XEXTRESTOKEN         SETC  '&EXTRESTOKEN'      SET XVARIABLE PARM      01393500
.ZG385C               AIF   (K'&XEXTRESTOKEN GT 0).ZG385D  ONE PARM     01393600
&ZXRSTTKN             SETC  ''          RESET IN/OUTPUT                 01393700
&ZXEXTRESTOKEN        SETC  ''          RESET IN/OUTPUT                 01393800
&ZMS                  SETC  ' '                                         01393900
&ZMS                  SETC  '&ZMS "EXTRESTOKEN" KEY AND ITS'            01394000
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01394100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01394200
.ZG385D               ANOP  ,                                           01394300
.*------------------------------------------------------------------    01394400
.***AG.KMEKY07 NAME, OPT INPUT, ME KEYS -CHECK IF KEY ENTERED           01394500
                      AIF   (K'&XRSTTKN GT 0).ZG386B                    01394600
&ZXRSTTKN             SETC  'INPUT'     SET IN/OUTPUT                   01394700
&XRSTTKN              SETC  'RESTOKEN'  SET DEFAULT                     01394800
&ZXRESTOKEN           SETC  'INPUT'     SET IN/OUTPUT                   01394900
&XRESTOKEN            SETC  'NO_RESTOKEN'       SET DEFAULT PARM        01395000
.ZG386B               ANOP  ,                                           01395100
.*-------------------------------------------------------------------   01395200
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 01395300
                      AIF   (K'&ZXEXTRESTOKEN LE 0).ZG386R  NOT I/O     01395400
         AIF   ('&XEXTRESTOKEN' EQ 'NO_RESTOKEN').ZG386R                01395500
                      AIF   ('&XEXTRESTOKEN'(1,1) NE '(').ZG386R        01395600
&ZCGPR                SETC  '&XEXTRESTOKEN'(2,K'&XEXTRESTOKEN-2)        01395700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG386P               01395800
                      AIF   (K'&ZCGPR GT 2).ZG386Q                      01395900
                      AIF   ('&ZCGPR' EQ '0').ZG386Q                    01396000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01396100
                      AIF   (T'&ZCGPR NE 'N').ZG386Q  INVALID REG NAME  01396200
.ZG386P               ANOP  ,                                           01396300
                      AIF   (T'&ZCGPR NE 'N').ZG386R  NON NUMERIC       01396400
                      AIF   ('&ZCGPR' LT '2').ZG386Q                    01396500
                      AIF   ('&ZCGPR' LE '12').ZG386R                   01396600
.ZG386Q               ANOP  ,                                           01396700
&ZMS                  SETC  '"EXTRESTOKEN='                             01396800
&ZMS                  SETC  '&ZMS.&EXTRESTOKEN"'                        01396900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01397000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01397100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01397200
.ZG386R               ANOP  ,                                           01397300
.*-------------------------------------------------------------------   01397400
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           01397500
.ZG384ZY  AIF    ('&XRSTTKN' NE 'RESTOKEN').ZG385ZY                     01397600
.*-------------------------------------------------------------------   01397700
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 01397800
                      AIF   (K'&ZXRESTOKEN LE 0).ZG384R  NOT I/O        01397900
         AIF   ('&XRESTOKEN' EQ 'NO_RESTOKEN').ZG384R                   01398000
                      AIF   ('&XRESTOKEN'(1,1) NE '(').ZG384R           01398100
&ZCGPR                SETC  '&XRESTOKEN'(2,K'&XRESTOKEN-2)              01398200
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG384P               01398300
                      AIF   (K'&ZCGPR GT 2).ZG384Q                      01398400
                      AIF   ('&ZCGPR' EQ '0').ZG384Q                    01398500
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01398600
                      AIF   (T'&ZCGPR NE 'N').ZG384Q  INVALID REG NAME  01398700
.ZG384P               ANOP  ,                                           01398800
                      AIF   (T'&ZCGPR NE 'N').ZG384R  NON NUMERIC       01398900
                      AIF   ('&ZCGPR' LT '2').ZG384Q                    01399000
                      AIF   ('&ZCGPR' LE '12').ZG384R                   01399100
.ZG384Q               ANOP  ,                                           01399200
&ZMS                  SETC  '"RESTOKEN='                                01399300
&ZMS                  SETC  '&ZMS.&RESTOKEN"'                           01399400
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01399500
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01399600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01399700
.ZG384R               ANOP  ,                                           01399800
.*-------------------------------------------------------------------   01399900
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           01400000
.ZG385ZY  AIF    ('&XRSTTKN' NE 'EXTRESTOKEN').ZG386ZY                  01400100
.*-------------------------------------------------------------------   01400200
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 01400300
                      AIF   (K'&ZXEXTRESTOKEN LE 0).ZG385R  NOT I/O     01400400
         AIF   ('&XEXTRESTOKEN' EQ 'NO_EXTRESTOKEN').ZG385R             01400500
                      AIF   ('&XEXTRESTOKEN'(1,1) NE '(').ZG385R        01400600
&ZCGPR                SETC  '&XEXTRESTOKEN'(2,K'&XEXTRESTOKEN-2)        01400700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG385P               01400800
                      AIF   (K'&ZCGPR GT 2).ZG385Q                      01400900
                      AIF   ('&ZCGPR' EQ '0').ZG385Q                    01401000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01401100
                      AIF   (T'&ZCGPR NE 'N').ZG385Q  INVALID REG NAME  01401200
.ZG385P               ANOP  ,                                           01401300
                      AIF   (T'&ZCGPR NE 'N').ZG385R  NON NUMERIC       01401400
                      AIF   ('&ZCGPR' LT '2').ZG385Q                    01401500
                      AIF   ('&ZCGPR' LE '12').ZG385R                   01401600
.ZG385Q               ANOP  ,                                           01401700
&ZMS                  SETC  '"EXTRESTOKEN='                             01401800
&ZMS                  SETC  '&ZMS.&EXTRESTOKEN"'                        01401900
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01402000
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01402100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01402200
.ZG385R               ANOP  ,                                           01402300
.*-------------------------------------------------------------------   01402400
.***AG.KMEKY15 NAME, OPT INPUT, ME KEYS -END                            01402500
.ZG386ZY              ANOP ,            END MUTUALLY EXCLUSIVE KEYS     01402600
.*------------------------------------------------------------------    01402700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01402800
&XMODE                SETC  ''          INITIALIZE XVARIABLE            01402900
.*-------------------------------------------------------------------   01403000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01403100
.ZG389                ANOP  ,                                           01403200
                      AIF   (K'&MODE(1) LE 0).ZG389A                    01403300
&ZTLC                 SETC 'SYNCSUSPEND'                                01403400
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG390               01403500
&XMODE                SETC  'SYNCSUSPEND'       SET KEYWORD             01403600
                      AIF   (N'&MODE LE 1).ZG389A  CK NUM               01403700
&ZMS                  SETC  '"MODE='                                    01403800
&ZMS                  SETC  '&ZMS.&MODE"'                               01403900
&ZMS                  SETC  '&ZMS "MODE"'                               01404000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01404100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01404200
.ZG389A               ANOP  ,                                           01404300
.*------------------------------------------------------------------    01404400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01404500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01404600
.ZG389A0              AIF   (K'&REQECB LE 0).ZG389A1  OK                01404700
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      01404800
.ZG389A1              AIF   (K'&REQDATA LE 0).ZG389A2  OK               01404900
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      01405000
.ZG389A2              AIF   (K'&REQTOKEN LE 0).ZG389A3  OK              01405100
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      01405200
.ZG389A3              AIF   (K'&ZCVAL LE 0).ZG389A4  OK                 01405300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01405400
&ZMS                  SETC  '"MODE'                                     01405500
&ZMS                  SETC  '&ZMS.=&MODE"'                              01405600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01405700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01405800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01405900
.ZG389A4              ANOP  ,                                           01406000
.*-------------------------------------------------------------------   01406100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01406200
.ZG390                ANOP  ,                                           01406300
&ZTLC                 SETC 'SYNCECB'                                    01406400
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG394               01406500
&XMODE                SETC  'SYNCECB'   SET KEYWORD                     01406600
                      AIF   (N'&MODE LE 1).ZG390A  CK NUM               01406700
&ZMS                  SETC  '"MODE='                                    01406800
&ZMS                  SETC  '&ZMS.&MODE"'                               01406900
&ZMS                  SETC  '&ZMS "MODE"'                               01407000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01407100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01407200
.ZG390A               ANOP  ,                                           01407300
.*------------------------------------------------------------------    01407400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01407500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01407600
.ZG390A0              AIF   (K'&REQDATA LE 0).ZG390A1  OK               01407700
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      01407800
.ZG390A1              AIF   (K'&REQTOKEN LE 0).ZG390A2  OK              01407900
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      01408000
.ZG390A2              AIF   (K'&ZCVAL LE 0).ZG390A3  OK                 01408100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01408200
&ZMS                  SETC  '"MODE'                                     01408300
&ZMS                  SETC  '&ZMS.=&MODE"'                              01408400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01408500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01408600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01408700
.ZG390A3              ANOP  ,                                           01408800
.*----------------------------------------------------------------***   01408900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01409000
                      AIF   (N'&REQECB LE 1).ZG392A  CK NUM             01409100
&ZMS                  SETC  '"REQECB='                                  01409200
&ZMS                  SETC  '&ZMS.&REQECB"'                             01409300
&ZMS                  SETC  '&ZMS "REQECB"'                             01409400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01409500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01409600
.ZG392A               ANOP  ,                                           01409700
.*-------------------------------------------------------------------   01409800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01409900
&ZXREQECB             SETC  'INPUT'     SET IN/OUTPUT                   01410000
&XREQECB              SETC  '&REQECB(1)'        SET XVARIABLE           01410100
                      AIF   (N'&REQECB GT 1).ZG392B  MULTI              01410200
&XREQECB              SETC  '&REQECB'   SET XVARIABLE                   01410300
.ZG392B               AIF   (K'&REQECB(1) GT 0).ZG392C                  01410400
&ZXREQECB             SETC  ''          RESET IN/OUTPUT                 01410500
&ZMS                  SETC  'WHEN "SYNCECB" IS SPECIFIED'               01410600
&ZMS                  SETC  '&ZMS , "REQECB" KEY AND ITS'               01410700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01410800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01410900
.ZG392C               ANOP  ,                                           01411000
.*-------------------------------------------------------------------   01411100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01411200
                      AIF   (K'&ZXREQECB LE 0).ZG392R  NOT I/O          01411300
                      AIF   ('&XREQECB'(1,1) NE '(').ZG392R             01411400
&ZCGPR                SETC  '&XREQECB'(2,K'&XREQECB-2)                  01411500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG392P               01411600
                      AIF   (K'&ZCGPR GT 2).ZG392Q                      01411700
                      AIF   ('&ZCGPR' EQ '0').ZG392Q                    01411800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01411900
                      AIF   (T'&ZCGPR NE 'N').ZG392Q  INVALID REG NAME  01412000
.ZG392P               ANOP  ,                                           01412100
                      AIF   (T'&ZCGPR NE 'N').ZG392R  NON NUMERIC       01412200
                      AIF   ('&ZCGPR' LT '2').ZG392Q                    01412300
                      AIF   ('&ZCGPR' LE '12').ZG392R                   01412400
.ZG392Q               ANOP  ,                                           01412500
&ZMS                  SETC  '"REQECB='                                  01412600
&ZMS                  SETC  '&ZMS.&REQECB"'                             01412700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01412800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01412900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01413000
.ZG392R               ANOP  ,                                           01413100
.*-------------------------------------------------------------------   01413200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01413300
.ZG394                ANOP  ,                                           01413400
&ZTLC                 SETC 'SYNCEXIT'                                   01413500
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG398               01413600
&XMODE                SETC  'SYNCEXIT'  SET KEYWORD                     01413700
                      AIF   (N'&MODE LE 1).ZG394A  CK NUM               01413800
&ZMS                  SETC  '"MODE='                                    01413900
&ZMS                  SETC  '&ZMS.&MODE"'                               01414000
&ZMS                  SETC  '&ZMS "MODE"'                               01414100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01414200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01414300
.ZG394A               ANOP  ,                                           01414400
.*------------------------------------------------------------------    01414500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01414600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01414700
.ZG394A0              AIF   (K'&REQECB LE 0).ZG394A1  OK                01414800
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      01414900
.ZG394A1              AIF   (K'&REQTOKEN LE 0).ZG394A2  OK              01415000
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      01415100
.ZG394A2              AIF   (K'&ZCVAL LE 0).ZG394A3  OK                 01415200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01415300
&ZMS                  SETC  '"MODE'                                     01415400
&ZMS                  SETC  '&ZMS.=&MODE"'                              01415500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01415600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01415700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01415800
.ZG394A3              ANOP  ,                                           01415900
.*----------------------------------------------------------------***   01416000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01416100
                      AIF   (N'&REQDATA LE 1).ZG396A  CK NUM            01416200
&ZMS                  SETC  '"REQDATA='                                 01416300
&ZMS                  SETC  '&ZMS.&REQDATA"'                            01416400
&ZMS                  SETC  '&ZMS "REQDATA"'                            01416500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01416600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01416700
.ZG396A               ANOP  ,                                           01416800
.*-------------------------------------------------------------------   01416900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01417000
&ZXREQDATA            SETC  'INPUT'     SET IN/OUTPUT                   01417100
&XREQDATA             SETC  'NO_REQDATA'                                01417200
                      AIF   (K'&REQDATA(1) LE 0).ZG396B  PARM           01417300
&XREQDATA             SETC  '&REQDATA(1)'       SET XVARIABLE           01417400
                      AIF   (N'&REQDATA GT 1).ZG396B  MULTI             01417500
&XREQDATA             SETC  '&REQDATA'  SET XVARIABLE                   01417600
.ZG396B               ANOP  ,                                           01417700
.*-------------------------------------------------------------------   01417800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01417900
                      AIF   (K'&ZXREQDATA LE 0).ZG396R  NOT I/O         01418000
         AIF   ('&XREQDATA' EQ 'NO_REQDATA').ZG396R                     01418100
                      AIF   ('&XREQDATA'(1,1) NE '(').ZG396R            01418200
&ZCGPR                SETC  '&XREQDATA'(2,K'&XREQDATA-2)                01418300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG396P               01418400
                      AIF   (K'&ZCGPR GT 2).ZG396Q                      01418500
                      AIF   ('&ZCGPR' EQ '0').ZG396Q                    01418600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01418700
                      AIF   (T'&ZCGPR NE 'N').ZG396Q  INVALID REG NAME  01418800
.ZG396P               ANOP  ,                                           01418900
                      AIF   (T'&ZCGPR NE 'N').ZG396R  NON NUMERIC       01419000
                      AIF   ('&ZCGPR' LT '2').ZG396Q                    01419100
                      AIF   ('&ZCGPR' LE '12').ZG396R                   01419200
.ZG396Q               ANOP  ,                                           01419300
&ZMS                  SETC  '"REQDATA='                                 01419400
&ZMS                  SETC  '&ZMS.&REQDATA"'                            01419500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01419600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01419700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01419800
.ZG396R               ANOP  ,                                           01419900
.*-------------------------------------------------------------------   01420000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01420100
.ZG398                ANOP  ,                                           01420200
&ZTLC                 SETC 'SYNCTOKEN'                                  01420300
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG402               01420400
&XMODE                SETC  'SYNCTOKEN'         SET KEYWORD             01420500
                      AIF   (N'&MODE LE 1).ZG398A  CK NUM               01420600
&ZMS                  SETC  '"MODE='                                    01420700
&ZMS                  SETC  '&ZMS.&MODE"'                               01420800
&ZMS                  SETC  '&ZMS "MODE"'                               01420900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01421000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01421100
.ZG398A               ANOP  ,                                           01421200
.*------------------------------------------------------------------    01421300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01421400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01421500
.ZG398A0              AIF   (K'&REQECB LE 0).ZG398A1  OK                01421600
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      01421700
.ZG398A1              AIF   (K'&REQDATA LE 0).ZG398A2  OK               01421800
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      01421900
.ZG398A2              AIF   (K'&ZCVAL LE 0).ZG398A3  OK                 01422000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01422100
&ZMS                  SETC  '"MODE'                                     01422200
&ZMS                  SETC  '&ZMS.=&MODE"'                              01422300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01422400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01422500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01422600
.ZG398A3              ANOP  ,                                           01422700
.*----------------------------------------------------------------***   01422800
.***AG.KXVAR05 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE KEY                01422900
                      AIF   (N'&REQTOKEN LE 1).ZG400A  CK NUM           01423000
&ZMS                  SETC  '"REQTOKEN='                                01423100
&ZMS                  SETC  '&ZMS.&REQTOKEN"'                           01423200
&ZMS                  SETC  '&ZMS "REQTOKEN"'                           01423300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01423400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01423500
.ZG400A               ANOP  ,                                           01423600
.*-------------------------------------------------------------------   01423700
.***AG.KXVAR06 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE                    01423800
&ZXREQTOKEN           SETC  'OUTPUT'    SET IN/OUTPUT                   01423900
&XREQTOKEN            SETC  '&REQTOKEN(1)'      SET XVARIABLE           01424000
                      AIF   (N'&REQTOKEN GT 1).ZG400B  MULTI            01424100
&XREQTOKEN            SETC  '&REQTOKEN'         SET XVARIABLE           01424200
.ZG400B               AIF   (K'&REQTOKEN(1) GT 0).ZG400C                01424300
&ZXREQTOKEN           SETC  ''          RESET IN/OUTPUT                 01424400
&ZMS                  SETC  'WHEN "SYNCTOKEN" IS SPECIFIED'             01424500
&ZMS                  SETC  '&ZMS , "REQTOKEN" KEY AND ITS'             01424600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01424700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01424800
.ZG400C               ANOP  ,                                           01424900
.*-------------------------------------------------------------------   01425000
.***AG.KCK02 NAME, OPT RQD OUTPUT, KEYS -GPR OUT OF RANGE               01425100
                      AIF   (K'&ZXREQTOKEN LE 0).ZG400R  NOT I/O        01425200
                      AIF   ('&XREQTOKEN'(1,1) NE '(').ZG400R           01425300
&ZCGPR                SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)              01425400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG400P               01425500
                      AIF   (K'&ZCGPR GT 2).ZG400Q                      01425600
                      AIF   ('&ZCGPR' EQ '0').ZG400Q                    01425700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01425800
                      AIF   (T'&ZCGPR NE 'N').ZG400Q  INVALID REG NAME  01425900
.ZG400P               ANOP  ,                                           01426000
                      AIF   (T'&ZCGPR NE 'N').ZG400R  NON NUMERIC       01426100
                      AIF   ('&ZCGPR' LT '2').ZG400Q                    01426200
                      AIF   ('&ZCGPR' LE '12').ZG400R                   01426300
.ZG400Q               ANOP  ,                                           01426400
&ZMS                  SETC  '"REQTOKEN='                                01426500
&ZMS                  SETC  '&ZMS.&REQTOKEN"'                           01426600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01426700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01426800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01426900
.ZG400R               ANOP  ,                                           01427000
.*-------------------------------------------------------------------   01427100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01427200
.ZG402                ANOP  ,                                           01427300
&ZTLC                 SETC 'ASYNCECB'                                   01427400
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG406               01427500
&XMODE                SETC  'ASYNCECB'  SET KEYWORD                     01427600
                      AIF   (N'&MODE LE 1).ZG402A  CK NUM               01427700
&ZMS                  SETC  '"MODE='                                    01427800
&ZMS                  SETC  '&ZMS.&MODE"'                               01427900
&ZMS                  SETC  '&ZMS "MODE"'                               01428000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01428100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01428200
.ZG402A               ANOP  ,                                           01428300
.*------------------------------------------------------------------    01428400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01428500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01428600
.ZG402A0              AIF   (K'&REQDATA LE 0).ZG402A1  OK               01428700
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      01428800
.ZG402A1              AIF   (K'&REQTOKEN LE 0).ZG402A2  OK              01428900
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      01429000
.ZG402A2              AIF   (K'&ZCVAL LE 0).ZG402A3  OK                 01429100
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01429200
&ZMS                  SETC  '"MODE'                                     01429300
&ZMS                  SETC  '&ZMS.=&MODE"'                              01429400
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01429500
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01429600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01429700
.ZG402A3              ANOP  ,                                           01429800
.*----------------------------------------------------------------***   01429900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01430000
                      AIF   (N'&REQECB LE 1).ZG404A  CK NUM             01430100
&ZMS                  SETC  '"REQECB='                                  01430200
&ZMS                  SETC  '&ZMS.&REQECB"'                             01430300
&ZMS                  SETC  '&ZMS "REQECB"'                             01430400
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01430500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01430600
.ZG404A               ANOP  ,                                           01430700
.*-------------------------------------------------------------------   01430800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01430900
&ZXREQECB             SETC  'INPUT'     SET IN/OUTPUT                   01431000
&XREQECB              SETC  '&REQECB(1)'        SET XVARIABLE           01431100
                      AIF   (N'&REQECB GT 1).ZG404B  MULTI              01431200
&XREQECB              SETC  '&REQECB'   SET XVARIABLE                   01431300
.ZG404B               AIF   (K'&REQECB(1) GT 0).ZG404C                  01431400
&ZXREQECB             SETC  ''          RESET IN/OUTPUT                 01431500
&ZMS                  SETC  'WHEN "ASYNCECB" IS SPECIFIED'              01431600
&ZMS                  SETC  '&ZMS , "REQECB" KEY AND ITS'               01431700
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01431800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01431900
.ZG404C               ANOP  ,                                           01432000
.*-------------------------------------------------------------------   01432100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01432200
                      AIF   (K'&ZXREQECB LE 0).ZG404R  NOT I/O          01432300
                      AIF   ('&XREQECB'(1,1) NE '(').ZG404R             01432400
&ZCGPR                SETC  '&XREQECB'(2,K'&XREQECB-2)                  01432500
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG404P               01432600
                      AIF   (K'&ZCGPR GT 2).ZG404Q                      01432700
                      AIF   ('&ZCGPR' EQ '0').ZG404Q                    01432800
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01432900
                      AIF   (T'&ZCGPR NE 'N').ZG404Q  INVALID REG NAME  01433000
.ZG404P               ANOP  ,                                           01433100
                      AIF   (T'&ZCGPR NE 'N').ZG404R  NON NUMERIC       01433200
                      AIF   ('&ZCGPR' LT '2').ZG404Q                    01433300
                      AIF   ('&ZCGPR' LE '12').ZG404R                   01433400
.ZG404Q               ANOP  ,                                           01433500
&ZMS                  SETC  '"REQECB='                                  01433600
&ZMS                  SETC  '&ZMS.&REQECB"'                             01433700
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01433800
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01433900
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01434000
.ZG404R               ANOP  ,                                           01434100
.*-------------------------------------------------------------------   01434200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01434300
.ZG406                ANOP  ,                                           01434400
&ZTLC                 SETC 'ASYNCEXIT'                                  01434500
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG410               01434600
&XMODE                SETC  'ASYNCEXIT'         SET KEYWORD             01434700
                      AIF   (N'&MODE LE 1).ZG406A  CK NUM               01434800
&ZMS                  SETC  '"MODE='                                    01434900
&ZMS                  SETC  '&ZMS.&MODE"'                               01435000
&ZMS                  SETC  '&ZMS "MODE"'                               01435100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01435200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01435300
.ZG406A               ANOP  ,                                           01435400
.*------------------------------------------------------------------    01435500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01435600
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01435700
.ZG406A0              AIF   (K'&REQECB LE 0).ZG406A1  OK                01435800
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      01435900
.ZG406A1              AIF   (K'&REQTOKEN LE 0).ZG406A2  OK              01436000
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      01436100
.ZG406A2              AIF   (K'&ZCVAL LE 0).ZG406A3  OK                 01436200
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01436300
&ZMS                  SETC  '"MODE'                                     01436400
&ZMS                  SETC  '&ZMS.=&MODE"'                              01436500
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01436600
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01436700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01436800
.ZG406A3              ANOP  ,                                           01436900
.*----------------------------------------------------------------***   01437000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01437100
                      AIF   (N'&REQDATA LE 1).ZG408A  CK NUM            01437200
&ZMS                  SETC  '"REQDATA='                                 01437300
&ZMS                  SETC  '&ZMS.&REQDATA"'                            01437400
&ZMS                  SETC  '&ZMS "REQDATA"'                            01437500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01437600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01437700
.ZG408A               ANOP  ,                                           01437800
.*-------------------------------------------------------------------   01437900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01438000
&ZXREQDATA            SETC  'INPUT'     SET IN/OUTPUT                   01438100
&XREQDATA             SETC  'NO_REQDATA'                                01438200
                      AIF   (K'&REQDATA(1) LE 0).ZG408B  PARM           01438300
&XREQDATA             SETC  '&REQDATA(1)'       SET XVARIABLE           01438400
                      AIF   (N'&REQDATA GT 1).ZG408B  MULTI             01438500
&XREQDATA             SETC  '&REQDATA'  SET XVARIABLE                   01438600
.ZG408B               ANOP  ,                                           01438700
.*-------------------------------------------------------------------   01438800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01438900
                      AIF   (K'&ZXREQDATA LE 0).ZG408R  NOT I/O         01439000
         AIF   ('&XREQDATA' EQ 'NO_REQDATA').ZG408R                     01439100
                      AIF   ('&XREQDATA'(1,1) NE '(').ZG408R            01439200
&ZCGPR                SETC  '&XREQDATA'(2,K'&XREQDATA-2)                01439300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG408P               01439400
                      AIF   (K'&ZCGPR GT 2).ZG408Q                      01439500
                      AIF   ('&ZCGPR' EQ '0').ZG408Q                    01439600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01439700
                      AIF   (T'&ZCGPR NE 'N').ZG408Q  INVALID REG NAME  01439800
.ZG408P               ANOP  ,                                           01439900
                      AIF   (T'&ZCGPR NE 'N').ZG408R  NON NUMERIC       01440000
                      AIF   ('&ZCGPR' LT '2').ZG408Q                    01440100
                      AIF   ('&ZCGPR' LE '12').ZG408R                   01440200
.ZG408Q               ANOP  ,                                           01440300
&ZMS                  SETC  '"REQDATA='                                 01440400
&ZMS                  SETC  '&ZMS.&REQDATA"'                            01440500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01440600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01440700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01440800
.ZG408R               ANOP  ,                                           01440900
.*-------------------------------------------------------------------   01441000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01441100
.ZG410                ANOP  ,                                           01441200
&ZTLC                 SETC 'ASYNCTOKEN'                                 01441300
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG414               01441400
&XMODE                SETC  'ASYNCTOKEN'        SET KEYWORD             01441500
                      AIF   (N'&MODE LE 1).ZG410A  CK NUM               01441600
&ZMS                  SETC  '"MODE='                                    01441700
&ZMS                  SETC  '&ZMS.&MODE"'                               01441800
&ZMS                  SETC  '&ZMS "MODE"'                               01441900
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01442000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01442100
.ZG410A               ANOP  ,                                           01442200
.*------------------------------------------------------------------    01442300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01442400
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01442500
.ZG410A0              AIF   (K'&REQECB LE 0).ZG410A1  OK                01442600
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      01442700
.ZG410A1              AIF   (K'&REQDATA LE 0).ZG410A2  OK               01442800
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      01442900
.ZG410A2              AIF   (K'&ZCVAL LE 0).ZG410A3  OK                 01443000
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01443100
&ZMS                  SETC  '"MODE'                                     01443200
&ZMS                  SETC  '&ZMS.=&MODE"'                              01443300
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01443400
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01443500
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01443600
.ZG410A3              ANOP  ,                                           01443700
.*----------------------------------------------------------------***   01443800
.***AG.KXVAR05 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE KEY                01443900
                      AIF   (N'&REQTOKEN LE 1).ZG412A  CK NUM           01444000
&ZMS                  SETC  '"REQTOKEN='                                01444100
&ZMS                  SETC  '&ZMS.&REQTOKEN"'                           01444200
&ZMS                  SETC  '&ZMS "REQTOKEN"'                           01444300
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01444400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01444500
.ZG412A               ANOP  ,                                           01444600
.*-------------------------------------------------------------------   01444700
.***AG.KXVAR06 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE                    01444800
&ZXREQTOKEN           SETC  'OUTPUT'    SET IN/OUTPUT                   01444900
&XREQTOKEN            SETC  '&REQTOKEN(1)'      SET XVARIABLE           01445000
                      AIF   (N'&REQTOKEN GT 1).ZG412B  MULTI            01445100
&XREQTOKEN            SETC  '&REQTOKEN'         SET XVARIABLE           01445200
.ZG412B               AIF   (K'&REQTOKEN(1) GT 0).ZG412C                01445300
&ZXREQTOKEN           SETC  ''          RESET IN/OUTPUT                 01445400
&ZMS                  SETC  'WHEN "ASYNCTOKEN" IS SPECIFIED'            01445500
&ZMS                  SETC  '&ZMS , "REQTOKEN" KEY AND ITS'             01445600
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01445700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01445800
.ZG412C               ANOP  ,                                           01445900
.*-------------------------------------------------------------------   01446000
.***AG.KCK02 NAME, OPT RQD OUTPUT, KEYS -GPR OUT OF RANGE               01446100
                      AIF   (K'&ZXREQTOKEN LE 0).ZG412R  NOT I/O        01446200
                      AIF   ('&XREQTOKEN'(1,1) NE '(').ZG412R           01446300
&ZCGPR                SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)              01446400
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG412P               01446500
                      AIF   (K'&ZCGPR GT 2).ZG412Q                      01446600
                      AIF   ('&ZCGPR' EQ '0').ZG412Q                    01446700
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01446800
                      AIF   (T'&ZCGPR NE 'N').ZG412Q  INVALID REG NAME  01446900
.ZG412P               ANOP  ,                                           01447000
                      AIF   (T'&ZCGPR NE 'N').ZG412R  NON NUMERIC       01447100
                      AIF   ('&ZCGPR' LT '2').ZG412Q                    01447200
                      AIF   ('&ZCGPR' LE '12').ZG412R                   01447300
.ZG412Q               ANOP  ,                                           01447400
&ZMS                  SETC  '"REQTOKEN='                                01447500
&ZMS                  SETC  '&ZMS.&REQTOKEN"'                           01447600
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01447700
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01447800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01447900
.ZG412R               ANOP  ,                                           01448000
.*-------------------------------------------------------------------   01448100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01448200
.ZG414                ANOP  ,                                           01448300
&ZTLC                 SETC 'ASYNCNORESPONSE'                            01448400
                      AIF   ('&MODE(1)' NE '&ZTLC').ZG415               01448500
&XMODE                SETC  'ASYNCNORESPONSE'   SET KEYWORD             01448600
                      AIF   (N'&MODE LE 1).ZG414A  CK NUM               01448700
&ZMS                  SETC  '"MODE='                                    01448800
&ZMS                  SETC  '&ZMS.&MODE"'                               01448900
&ZMS                  SETC  '&ZMS "MODE"'                               01449000
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01449100
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01449200
.ZG414A               ANOP  ,                                           01449300
.*------------------------------------------------------------------    01449400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01449500
&ZCVAL                SETC ''           CLEAR ERROR KEY ACCUMULATOR     01449600
.ZG414A0              AIF   (K'&REQECB LE 0).ZG414A1  OK                01449700
&ZCVAL                SETC '&ZCVAL REQECB'      INCORRECT KEY USED      01449800
.ZG414A1              AIF   (K'&REQDATA LE 0).ZG414A2  OK               01449900
&ZCVAL                SETC '&ZCVAL REQDATA'     INCORRECT KEY USED      01450000
.ZG414A2              AIF   (K'&REQTOKEN LE 0).ZG414A3  OK              01450100
&ZCVAL                SETC '&ZCVAL REQTOKEN'    INCORRECT KEY USED      01450200
.ZG414A3              AIF   (K'&ZCVAL LE 0).ZG414A4  OK                 01450300
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)                       01450400
&ZMS                  SETC  '"MODE'                                     01450500
&ZMS                  SETC  '&ZMS.=&MODE"'                              01450600
&ZMS                  SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'        01450700
                      MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'        01450800
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01450900
.ZG414A4              ANOP  ,                                           01451000
.*------------------------------------------------------------------    01451100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01451200
.ZG415                ANOP  ,                                           01451300
&ZXMODE               SETC  'INPUT'     SET IN/OUTPUT                   01451400
                      AIF   (K'&XMODE GT 0).ZG415E  VALID ARG           01451500
                      AIF   (T'&MODE EQ 'O').ZG415D  OMITTED            01451600
&ZASYSLNDX            SETA  0                                           01451700
.ZG415A               ANOP  ,           POSITIONAL MACRO KEY            01451800
&ZASYSLNDX            SETA  &ZASYSLNDX+1                                01451900
                      AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG415C           01452000
&ZTLC                 SETC 'MODE'                                       01452100
                      AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG415A  01452200
.ZG415B               ANOP  ,                                           01452300
&ZXMODE               SETC  ''          RESET IN/OUTPUT                 01452400
&ZMS                  SETC  'THE "MODE" KEY'                            01452500
&ZMS                  SETC  '&ZMS MUST CONTAIN ONE'                     01452600
                      MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'            01452700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01452800
                      AGO   .ZG415E                                     01452900
.ZG415C               ANOP  ,                                           01453000
&ZXMODE               SETC  ''          RESET IN/OUTPUT                 01453100
&ZMS                  SETC  '"MODE='                                    01453200
&ZMS                  SETC  '&ZMS.&MODE"'                               01453300
&ZMS                  SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '   01453400
&ZMS                  SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'         01453500
&ZMS                  SETC  '&ZMS "SYNCSUSPEND",'                       01453600
&ZMS                  SETC  '&ZMS "SYNCECB",'                           01453700
&ZMS                  SETC  '&ZMS "SYNCEXIT",'                          01453800
&ZMS                  SETC  '&ZMS "SYNCTOKEN",'                         01453900
&ZMS                  SETC  '&ZMS "ASYNCECB",'                          01454000
&ZMS                  SETC  '&ZMS "ASYNCEXIT",'                         01454100
&ZMS                  SETC  '&ZMS "ASYNCTOKEN",'                        01454200
&ZMS                  SETC  '&ZMS OR "ASYNCNORESPONSE".'                01454300
                      MNOTE 8,' &ZMS '                                  01454400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01454500
                      AGO   .ZG415E                                     01454600
.ZG415D               ANOP  ,                                           01454700
&XMODE                SETC  'SYNCSUSPEND'       SET DEFAULT KEYWORD     01454800
.ZG415E               ANOP  ,                                           01454900
.*----------------------------------------------------------------***   01455000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01455100
                      AIF   (N'&ANSAREA LE 1).ZG417A  CK NUM            01455200
&ZMS                  SETC  '"ANSAREA='                                 01455300
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            01455400
&ZMS                  SETC  '&ZMS "ANSAREA"'                            01455500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01455600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01455700
.ZG417A               ANOP  ,                                           01455800
.*-------------------------------------------------------------------   01455900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01456000
&ZXANSAREA            SETC  'INPUT'     SET IN/OUTPUT                   01456100
&XANSAREA             SETC  'NO_ANSAREA'                                01456200
                      AIF   (K'&ANSAREA(1) LE 0).ZG417B  PARM           01456300
&XANSAREA             SETC  '&ANSAREA(1)'       SET XVARIABLE           01456400
                      AIF   (N'&ANSAREA GT 1).ZG417B  MULTI             01456500
&XANSAREA             SETC  '&ANSAREA'  SET XVARIABLE                   01456600
.ZG417B               ANOP  ,                                           01456700
.*-------------------------------------------------------------------   01456800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01456900
                      AIF   (K'&ZXANSAREA LE 0).ZG417R  NOT I/O         01457000
         AIF   ('&XANSAREA' EQ 'NO_ANSAREA').ZG417R                     01457100
                      AIF   ('&XANSAREA'(1,1) NE '(').ZG417R            01457200
&ZCGPR                SETC  '&XANSAREA'(2,K'&XANSAREA-2)                01457300
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG417P               01457400
                      AIF   (K'&ZCGPR GT 2).ZG417Q                      01457500
                      AIF   ('&ZCGPR' EQ '0').ZG417Q                    01457600
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01457700
                      AIF   (T'&ZCGPR NE 'N').ZG417Q  INVALID REG NAME  01457800
.ZG417P               ANOP  ,                                           01457900
                      AIF   (T'&ZCGPR NE 'N').ZG417R  NON NUMERIC       01458000
                      AIF   ('&ZCGPR' LT '2').ZG417Q                    01458100
                      AIF   ('&ZCGPR' LE '12').ZG417R                   01458200
.ZG417Q               ANOP  ,                                           01458300
&ZMS                  SETC  '"ANSAREA='                                 01458400
&ZMS                  SETC  '&ZMS.&ANSAREA"'                            01458500
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01458600
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01458700
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01458800
.ZG417R               ANOP  ,                                           01458900
.*----------------------------------------------------------------***   01459000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01459100
                      AIF   (N'&ANSLEN LE 1).ZG419A  CK NUM             01459200
&ZMS                  SETC  '"ANSLEN='                                  01459300
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             01459400
&ZMS                  SETC  '&ZMS "ANSLEN"'                             01459500
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01459600
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01459700
.ZG419A               ANOP  ,                                           01459800
.*-------------------------------------------------------------------   01459900
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01460000
&ZXANSLEN             SETC  'INPUT'     SET IN/OUTPUT                   01460100
&XANSLEN              SETC  '&ANSLEN(1)'        SET XVARIABLE           01460200
                      AIF   (N'&ANSLEN GT 1).ZG419B  MULTI              01460300
&XANSLEN              SETC  '&ANSLEN'   SET XVARIABLE                   01460400
.ZG419B               AIF   (K'&ANSAREA(1) GT 0).ZG419C  KEY            01460500
                      AIF   (K'&ANSLEN(1) LE 0).ZG419D  PARM            01460600
&ZMS                  SETC  '"ANSLEN'                                   01460700
&ZMS                  SETC  '&ZMS.=&ANSLEN"'                            01460800
&ZMS                  SETC  '&ZMS CAN ONLY BE SPECIFIED IF'             01460900
&ZMS                  SETC  '&ZMS '                                     01461000
&ZMS                  SETC  '&ZMS "ANSAREA"'                            01461100
                      MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                01461200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01461300
                      AGO   .ZG419E                                     01461400
.*                                                                      01461500
.ZG419C               AIF   (K'&ANSLEN(1) GT 0).ZG419E  PARM            01461600
&ZXANSLEN             SETC  ''          RESET IN/OUTPUT                 01461700
&ZMS                  SETC  'WHEN "ANSAREA" IS SPECIFIED'               01461800
&ZMS                  SETC  '&ZMS , "ANSLEN" KEY AND ITS'               01461900
                      MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'            01462000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01462100
.ZG419D               ANOP  ,                                           01462200
&XANSLEN              SETC  'NO_ANSLEN'         SET DEFAULT             01462300
.ZG419E               ANOP  ,                                           01462400
.*-------------------------------------------------------------------   01462500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01462600
                      AIF   (K'&ZXANSLEN LE 0).ZG419R  NOT I/O          01462700
         AIF   ('&XANSLEN' EQ 'NO_ANSLEN').ZG419R                       01462800
                      AIF   ('&XANSLEN'(1,1) NE '(').ZG419R             01462900
&ZCGPR                SETC  '&XANSLEN'(2,K'&XANSLEN-2)                  01463000
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG419P               01463100
                      AIF   (K'&ZCGPR GT 2).ZG419Q                      01463200
                      AIF   ('&ZCGPR' EQ '0').ZG419Q                    01463300
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01463400
                      AIF   (T'&ZCGPR NE 'N').ZG419Q  INVALID REG NAME  01463500
.ZG419P               ANOP  ,                                           01463600
                      AIF   (T'&ZCGPR NE 'N').ZG419R  NON NUMERIC       01463700
                      AIF   ('&ZCGPR' LT '2').ZG419Q                    01463800
                      AIF   ('&ZCGPR' LE '12').ZG419R                   01463900
.ZG419Q               ANOP  ,                                           01464000
&ZMS                  SETC  '"ANSLEN='                                  01464100
&ZMS                  SETC  '&ZMS.&ANSLEN"'                             01464200
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01464300
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'            01464400
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01464500
.ZG419R               ANOP  ,                                           01464600
.*----------------------------------------------------------------***   01464700
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    01464800
                      AIF   (N'&RETCODE LE 1).ZG423A  CK NUM            01464900
&ZMS                  SETC  '"RETCODE='                                 01465000
&ZMS                  SETC  '&ZMS.&RETCODE"'                            01465100
&ZMS                  SETC  '&ZMS "RETCODE"'                            01465200
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01465300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01465400
.ZG423A               ANOP  ,                                           01465500
.*-------------------------------------------------------------------   01465600
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        01465700
                      AIF   (K'&RETCODE(1) LE 0).ZG423C  NO PARM        01465800
&ZXRETCODE            SETC  'OUTPUT'    SET OUTPUT                      01465900
&XRETCODE             SETC  '&RETCODE(1)'       SET XVARIABLE           01466000
                      AIF   (N'&RETCODE GT 1).ZG423C                    01466100
&XRETCODE             SETC  '&RETCODE'  SET XVARIABLE                   01466200
.ZG423C               ANOP  ,                                           01466300
.*-------------------------------------------------------------------   01466400
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   01466500
                      AIF   (K'&ZXRETCODE LE 0).ZG423R  NOT I/O         01466600
                      AIF   ('&XRETCODE'(1,1) NE '(').ZG423R            01466700
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                01466800
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG423P               01466900
                      AIF   (K'&ZCGPR GT 2).ZG423Q                      01467000
                      AIF   ('&ZCGPR' EQ '0').ZG423Q                    01467100
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01467200
                      AIF   (T'&ZCGPR NE 'N').ZG423Q  INVALID REG NAME  01467300
.ZG423P               ANOP  ,                                           01467400
                      AIF   (T'&ZCGPR NE 'N').ZG423R  NON NUMERIC       01467500
                      AIF   ('&ZCGPR' EQ '15').ZG423R                   01467600
                      AIF   ('&ZCGPR' LT '2').ZG423Q                    01467700
                      AIF   ('&ZCGPR' LE '12').ZG423R                   01467800
.ZG423Q               ANOP  ,                                           01467900
&ZMS                  SETC  '"RETCODE='                                 01468000
&ZMS                  SETC  '&ZMS.&RETCODE"'                            01468100
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01468200
                      MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'    01468300
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01468400
.ZG423R               ANOP  ,                                           01468500
.*----------------------------------------------------------------***   01468600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    01468700
                      AIF   (N'&RSNCODE LE 1).ZG426A  CK NUM            01468800
&ZMS                  SETC  '"RSNCODE='                                 01468900
&ZMS                  SETC  '&ZMS.&RSNCODE"'                            01469000
&ZMS                  SETC  '&ZMS "RSNCODE"'                            01469100
                      MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'         01469200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01469300
.ZG426A               ANOP  ,                                           01469400
.*-------------------------------------------------------------------   01469500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        01469600
                      AIF   (K'&RSNCODE(1) LE 0).ZG426C  NO PARM        01469700
&ZXRSNCODE            SETC  'OUTPUT'    SET OUTPUT                      01469800
&XRSNCODE             SETC  '&RSNCODE(1)'       SET XVARIABLE           01469900
                      AIF   (N'&RSNCODE GT 1).ZG426C                    01470000
&XRSNCODE             SETC  '&RSNCODE'  SET XVARIABLE                   01470100
.ZG426C               ANOP  ,                                           01470200
.*-------------------------------------------------------------------   01470300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   01470400
                      AIF   (K'&ZXRSNCODE LE 0).ZG426R  NOT I/O         01470500
                      AIF   ('&XRSNCODE'(1,1) NE '(').ZG426R            01470600
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                01470700
                      AIF   ('&ZCGPR'(1,1) NE '0').ZG426P               01470800
                      AIF   (K'&ZCGPR GT 2).ZG426Q                      01470900
                      AIF   ('&ZCGPR' EQ '0').ZG426R                    01471000
&ZCGPR                SETC  '&ZCGPR'(2,1)                               01471100
                      AIF   (T'&ZCGPR NE 'N').ZG426Q  INVALID REG NAME  01471200
.ZG426P               ANOP  ,                                           01471300
                      AIF   (T'&ZCGPR NE 'N').ZG426R  NON NUMERIC       01471400
                      AIF   ('&ZCGPR' EQ '0').ZG426R                    01471500
                      AIF   ('&ZCGPR' LT '2').ZG426Q                    01471600
                      AIF   ('&ZCGPR' LE '12').ZG426R                   01471700
.ZG426Q               ANOP  ,                                           01471800
&ZMS                  SETC  '"RSNCODE='                                 01471900
&ZMS                  SETC  '&ZMS.&RSNCODE"'                            01472000
&ZMS                  SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'   01472100
                      MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'     01472200
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01472300
.ZG426R               ANOP  ,                                           01472400
.******************************************************************     01472500
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        01472600
.******************************************************************     01472700
                      ACTR  10000                                       01472800
.*----------------------------------------------------------------***   01472900
.***AH.P02 EXTRA POSITIONALS                                            01473000
                      AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS        01473100
                      AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL        01473200
                      AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL    01473300
                      AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL     01473400
.ZGLISTX1             ANOP  ,                                           01473500
&ZCVAL                SETC  ''          ERROR FIELD                     01473600
&ZAWRK                SETA  0           POSITIONAL NUMBER               01473700
.ZGLIST2              ANOP  ,                                           01473800
&ZAWRK                SETA  &ZAWRK+1    NEXT POSITIONAL                 01473900
                      AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE        01474000
&ZCVAL                SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA             01474100
                      AGO   .ZGLIST2                                    01474200
.*                                                                      01474300
.ZGLIST3              ANOP  ,                                           01474400
&ZCVAL                SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA          01474500
&ZMS                  SETC  'POSITIONAL ARGUMENT(S),'                   01474600
&ZMS                  SETC  '&ZMS "&ZCVAL"'                             01474700
&ZMS                  SETC  '&ZMS CANNOT BE USED.'                      01474800
&ZMS                  SETC  '&ZMS NO POSITIONAL ARGUMENTS'              01474900
                      MNOTE 8,' &ZMS ARE ALLOWED.'                      01475000
&ZMACRET              SETA  8           SET MACRO ERROR RETURN CODE     01475100
.ZGLISTX              ANOP  ,                                           01475200
&ZASYSLNDX            SETA  0                                           01475300
.*-------------------------------------------------------------------   01475400
.***AG.MF04 MF=(SLE)                                                    01475500
.ZGMFX                ANOP  ,           END OF FULL SYNTAX CHECK        01475600
.*******************************************************************    01475700
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       01475800
.*******************************************************************    01475900
                      AIF   (&ZMACRET NE 0).ZLX2  ERROR DETECTED        01476000
.*******************************************************************    01476100
.***AE.01  START OF IXLCACHE MACRO CODE                                 01476200
.*******************************************************************    01476300
                      LCLC  &M0M0001                 NAME               01476400
&M0M0001              SETC  '&XLABEL'                SET NAME           01476500
                      AIF   (K'&XLABEL NE 0).XLAB2                      01476600
&M0M0001              SETC  'M00M&SYSNDX'            DEFAULT NAME       01476700
.*                                                                      01476800
.XLAB2                ANOP  ,                                           01476900
                      AIF   ('&XMF' EQ 'L').XLAB3                       01477000
&M0M0001 DS    0H                             IXLCACHE-8                01477100
.XLAB3                ANOP  ,                                           01477200
.*******************************************************************    01477300
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              01477400
.*******************************************************************    01477500
              PUSH  PRINT                                               01477600
                      AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON  01477700
                      PRINT OFF         ++ PR01                         01477800
                      AGO   .ZPRNTXX                                    01477900
.ZPRINTX              PRINT ON                                          01478000
.ZPRNTXX              ANOP  ,                                           01478100
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  01478200
.**------------------------------------------------------------------** 01478300
.**  Start of user macasm code                                       ** 01478400
.**------------------------------------------------------------------** 01478500
.*                                                                      01478600
.**------------------------------------------------------------------** 01478700
.**  Start of code to set macro version number                   @05A** 01478800
.**                                                                  ** 01478900
.**  This code sets the macro version number for those keywords      ** 01479000
.**  which already existed in earlier macro versions but are used    ** 01479100
.**  for additional request types in later macro versions.           ** 01479200
.**                                                                  ** 01479300
.**------------------------------------------------------------------** 01479400
.*                                                                      01479500
         LCLA  &CACHEPLVERS                                       @05A  01479600
.*                                                                      01479700
.* Initialize CachePlVers to whatever AMG thinks PLISTVER should be     01479800
.*                                                                @POA  01479900
&CACHEPLVERS SETA &XPLISTVER                                      @POA  01480000
.*                                                                      01480100
.* If CachePlVers already >= 3, no need to look at version 3 requests   01480200
         AIF  (&CACHEPLVERS GE 3).NOTPLVER3                       @POA  01480300
.*                                                                      01480400
.* Determine whether request requires PLISTVER of 3               @POA  01480500
.*                                                                      01480600
         AIF   ('&XREQUEST'   NE 'DELETE_NAMELIST').NOTPLVERS3INL @05A  01480700
&CACHEPLVERS     SETA  3                                          @05A  01480800
               AGO   .SETPLVERS3DONE                              @05A  01480900
.NOTPLVERS3INL   ANOP ,                                           @05A  01481000
         AIF   ('&XREQUEST'   NE 'READ_DATA'      AND                  *01481100
                '&XREQUEST'   NE 'WRITE_DATA').NOTPLVERS3RW       @05A  01481200
         AIF   ('&REGUSER(1)'   EQ '').NOTPLVERS3RW               @05A  01481300
&CACHEPLVERS     SETA  3                                          @05A  01481400
               AGO   .SETPLVERS3DONE                              @05A  01481500
.NOTPLVERS3RW    ANOP ,                                           @05A  01481600
         AIF   ('&XREQUEST'   NE 'READ_COCLASS').NOTPLVERS3RCC    @05A  01481700
         AIF   ('&DIRINFOFMT(1)' EQ '').NOTPLVERS3RCC             @05A  01481800
&CACHEPLVERS     SETA  3                                          @05A  01481900
               AGO   .SETPLVERS3DONE                              @05A  01482000
.NOTPLVERS3RCC   ANOP ,                                           @05A  01482100
.*                                                                @POD  01482200
.*                                                                @POD  01482300
.SETPLVERS3DONE  ANOP ,                                           @05A  01482400
.NOTPLVER3       ANOP ,                                           @POA  01482500
.*                                                                @POA  01482600
.* If CachePlVers already >= 5, no need to look at version 5 requests   01482700
         AIF  (&CACHEPLVERS GE 5).NOTPLVER5                       @POA  01482800
.*                                                                      01482900
.* Determine whether request requires PLISTVER of 5               @POA  01483000
.*                                                                      01483100
         AIF   ('&XREQUEST' EQ 'WRITE_DATA' AND                        *01483200
                '&XWHENREG' EQ 'NO' AND                                *01483300
                '&XASSIGN' EQ 'NO').SETPLVER5                     @POA  01483400
               AGO   .NOTPLVER5                                   @POA  01483500
.SETPLVER5       ANOP ,                                           @POA  01483600
&CACHEPLVERS     SETA  5                                          @POA  01483700
.NOTPLVER5       ANOP ,                                           @POA  01483800
.*                                                                @L5A  01483900
.* If CachePlVers already >= 6, no need to look at version 6 requests   01484000
         AIF  (&CACHEPLVERS GE 6).NOTPLVER6                       @L5A  01484100
.*                                                                      01484200
.* Determine whether request requires PLISTVER of 6               @L5A  01484300
.*                                                                      01484400
         AIF   ('&XREQUEST' EQ 'CROSS_INVALLIST').SETPLVER6       @L5A  01484500
               AGO   .NOTPLVER6                                   @L5A  01484600
.SETPLVER6       ANOP ,                                           @L5A  01484700
&CACHEPLVERS     SETA  6                                          @L5A  01484800
.NOTPLVER6       ANOP ,                                           @L5A  01484900
.*                                                                @POA  01485000
.* if the user specified a plist version less than the version    @POA  01485100
.* that was determined based on the specified keywords then       @POA  01485200
.* issue an MNOTE                                                 @POA  01485300
.*                                                                      01485400
         AIF   ('&PLISTVER(1)' EQ ''                     OR            *01485500
                '&PLISTVER(1)' EQ 'IMPLIED_VERSION'      OR            *01485600
                &XPLISTVER     GE &CACHEPLVERS).SETPLVERSUPDATE   @05A  01485700
         MNOTE 8,' PLISTVER=&PLISTVER(1), BUT PLISTVER OF &CACHEPLVERS *01485800
               IS REQUIRED.'                                      @05A  01485900
&ZMACRET SETA  8                                                  @05A  01486000
         AGO    .SETPLVERSEND                                     @05A  01486100
.SETPLVERSUPDATE ANOP ,                                           @05A  01486200
&XPLISTVER       SETA  &CACHEPLVERS                               @05A  01486300
.*                                                                      01486400
.SETPLVERSEND    ANOP ,                                           @05A  01486500
.*                                                                      01486600
.**------------------------------------------------------------------** 01486700
.**  Start of code to remove "*" defaults                        @P5A** 01486800
.**                                                                  ** 01486900
.**  This code removes "NO_keyname" values.  Keywords with these     ** 01487000
.**  default values should be treated as if they were not specified. ** 01487100
.**  Removing the values makes it look as if they were not specified ** 01487200
.**  and avoids failure of mutual exclusivity checks.                ** 01487300
.**                                                                  ** 01487400
.**  Some other default values also need to be removed.  These       ** 01487500
.**  values are removed to make the invocation look consistent       ** 01487600
.**  to the checking code.                                           ** 01487700
.**                                                                  ** 01487800
.**------------------------------------------------------------------** 01487900
.*                                                                      01488000
         AIF   ('&XANSLEN'    NE 'NO_ANSLEN').DELDEFANSLEN              01488100
&XANSLEN       SETC ''                                                  01488200
&ZXANSLEN      SETC ''                                                  01488300
.DELDEFANSLEN  ANOP ,                                                   01488400
.*                                                                      01488500
         AIF   ('&XBUFALET'   NE 'NO_BUFALET').DELDEFBUFALET            01488600
&XBUFALET      SETC ''                                                  01488700
&ZXBUFALET     SETC ''                                                  01488800
.DELDEFBUFALET ANOP ,                                                   01488900
.*                                                                      01489000
         AIF   ('&BUFFER(1)'  NE '').DELDEFBUFFER                       01489100
&XBUFFER       SETC ''                                                  01489200
&ZXBUFFER      SETC ''                                                  01489300
.DELDEFBUFFER  ANOP ,                                                   01489400
.*                                                                      01489500
         AIF   ('&XBUFINCRNUM' NE 'NO_BUFINCRNUM').DELDEFBUFINCRNUM     01489600
&XBUFINCRNUM   SETC ''                                                  01489700
&ZXBUFINCRNUM  SETC ''                                                  01489800
.DELDEFBUFINCRNUM ANOP ,                                                01489900
.*                                                                      01490000
         AIF   ('&BUFLIST(1)' NE '').DELDEFBUFLIST                      01490100
&XBUFLIST      SETC ''                                                  01490200
&ZXBUFLIST     SETC ''                                                  01490300
.DELDEFBUFLIST ANOP ,                                                   01490400
.*                                                                      01490500
         AIF   ('&XBUFNUM'    NE 'NO_BUFNUM').DELDEFBUFNUM              01490600
&XBUFNUM       SETC ''                                                  01490700
&ZXBUFNUM      SETC ''                                                  01490800
.DELDEFBUFNUM  ANOP ,                                                   01490900
.*                                                                      01491000
         AIF   ('&XCOCLASS'   NE 'NO_COCLASS').DELDEFCOCLASS       @P5A 01491100
&XCOCLASS      SETC ''                                             @P5A 01491200
&ZXCOCLASS     SETC ''                                             @P5A 01491300
.DELDEFCOCLASS ANOP ,                                              @P5A 01491400
.*                                                                      01491500
         AIF   ('&XNAME'      NE 'NO_NAME').DELDEFNAME             @P5A 01491600
&XNAME         SETC ''                                             @P5A 01491700
&ZXNAME        SETC ''                                             @P5A 01491800
.DELDEFNAME    ANOP ,                                              @P5A 01491900
.*                                                                      01492000
         AIF   ('&XOLDNAME'   NE 'NO_OLDNAME').DELDEFOLDNAME       @P5A 01492100
&XOLDNAME      SETC ''                                             @P5A 01492200
&ZXOLDNAME     SETC ''                                             @P5A 01492300
.DELDEFOLDNAME ANOP ,                                              @P5A 01492400
.*                                                                      01492500
         AIF   ('&XPROCESSID' NE 'NO_PROCESSID').DELDEFPROCESSID        01492600
&XPROCESSID    SETC ''                                                  01492700
&ZXPROCESSID   SETC ''                                                  01492800
.DELDEFPROCESSID ANOP ,                                                 01492900
.*                                                                      01493000
         AIF   ('&XRECLVCTR'  NE 'NO_RECLVCTR').DELDEFRECLVCTR     @P5A 01493100
&XRECLVCTR     SETC ''                                             @P5A 01493200
&ZXRECLVCTR    SETC ''                                             @P5A 01493300
.DELDEFRECLVCTR ANOP ,                                             @P5A 01493400
.*                                                                      01493500
         AIF   ('&XREQDATA'   NE 'NO_REQDATA').DELDEFREQDATA            01493600
&XREQDATA      SETC ''                                                  01493700
&ZXREQDATA     SETC ''                                                  01493800
.DELDEFREQDATA ANOP ,                                                   01493900
.*                                                                      01494000
         AIF   ('&XRESTOKEN'  NE 'NO_RESTOKEN').DELDEFRESTOKEN     @P5A 01494100
&XRESTOKEN     SETC ''                                             @P5A 01494200
&ZXRESTOKEN    SETC ''                                             @P5A 01494300
.DELDEFRESTOKEN ANOP ,                                             @P5A 01494400
.*                                                                      01494500
         AIF   ('&XEXTRESTOKEN'  NE 'NO_EXTRESTOKEN').DELDEFEXTRESTOKEN 01494600
.*                                                                 @L1A 01494700
&XEXTRESTOKEN     SETC ''                                          @L1A 01494800
&ZXEXTRESTOKEN    SETC ''                                          @L1A 01494900
.DELDEFEXTRESTOKEN ANOP ,                                               01495000
.*                                                                      01495100
         AIF   ('&XSTGCLASS'  NE 'NO_STGCLASS').DELDEFSTGCLASS     @P5A 01495200
&XSTGCLASS     SETC ''                                             @P5A 01495300
&ZXSTGCLASS    SETC ''                                             @P5A 01495400
.DELDEFSTGCLASS ANOP ,                                             @P5A 01495500
.*                                                                      01495600
         AIF   ('&XUSERDATA'  NE 'NO_USERDATA').DELDEFUSERDATA          01495700
&XUSERDATA     SETC ''                                                  01495800
&ZXUSERDATA    SETC ''                                                  01495900
.DELDEFUSERDATA ANOP ,                                                  01496000
.*                                                                      01496100
         AIF   ('&XVERSCOMP'  NE 'NO_VERSCOMP').DELDEFVERSCOMP     @05A 01496200
&XVERSCOMP     SETC ''                                             @05A 01496300
&ZXVERSCOMP    SETC ''                                             @05A 01496400
.DELDEFVERSCOMP ANOP ,                                             @05A 01496500
.*                                                                      01496600
         AIF   ('&XNEWVERS'  NE 'NO_NEWVERS').DELDEFNEWVERS        @05A 01496700
&XNEWVERS      SETC ''                                             @05A 01496800
&ZXNEWVERS     SETC ''                                             @05A 01496900
.DELDEFNEWVERS  ANOP ,                                             @05A 01497000
.*                                                                      01497100
.*                                                                      01497200
.**------------------------------------------------------------------** 01497300
.**  Start of code to remove default values when the key cannot      ** 01497400
.**  be specified on the request.                                    ** 01497500
.**                                                                  ** 01497600
.**  Default values need to be removed for keys corresponding to     ** 01497700
.**  maca.xvariable.value statements when the key is not applicable  ** 01497800
.**  to the current request.                                         ** 01497900
.**                                                                  ** 01498000
.**------------------------------------------------------------------** 01498100
.**------------------------------------------------------------------** 01498200
.**  Remove defaults for BufAddrType                                 ** 01498300
.**------------------------------------------------------------------** 01498400
.*                                                                      01498500
         AIF   ('&BUFADDRTYPE(1)' NE '').DEFBUFADDRTYPESPEC             01498600
.*                                                                      01498700
         AIF   ('&XBUFLIST' NE '').DEFBUFADDRTYPESKIPREMOVE             01498800
&XBUFADDRTYPE  SETC ''                                                  01498900
&ZXBUFADDRTYPE SETC ''                                                  01499000
.DEFBUFADDRTYPESKIPREMOVE ANOP ,                                        01499100
.DEFBUFADDRTYPESPEC ANOP ,                                              01499200
.*                                                                      01499300
.**------------------------------------------------------------------** 01499400
.**  Remove defaults for Pageable                                    ** 01499500
.**------------------------------------------------------------------** 01499600
.*                                                                      01499700
         AIF   ('&PAGEABLE(1)' NE '').DEFPAGEABLESPEC                   01499800
.*                                                                      01499900
         AIF   ('&XBUFFER'  NE ''  OR                                  *01500000
                '&XBUFLIST' NE '').DEFPAGEABLESKIPREMOVE                01500100
&XPAGEABLE     SETC ''                                                  01500200
&ZXPAGEABLE    SETC ''                                                  01500300
.DEFPAGEABLESKIPREMOVE ANOP ,                                           01500400
.DEFPAGEABLESPEC ANOP ,                                                 01500500
.*                                                                      01500600
.**------------------------------------------------------------------** 01500700
.**  Remove defaults for NameMask                                    ** 01500800
.**                                                                  ** 01500900
.**  NameMask should default to null for request types that do not   ** 01501000
.**  support NameMask -  Read_DirInfo, Read_CoClass, Reset_RefBit,   ** 01501100
.**  Cross_Inval, and Delete_Name are requests that allow it.        ** 01501200
.**------------------------------------------------------------------** 01501300
.*                                                                      01501400
         AIF   ('&NAMEMASK(1)' NE '').DEFNAMEMASKSPEC                   01501500
.*                                                                      01501600
         AIF   ('&XREQUEST'    EQ 'READ_DIRINFO'   OR                  *01501700
                '&XREQUEST'    EQ 'READ_COCLASS'   OR                  *01501800
                '&XREQUEST'    EQ 'RESET_REFBIT'   OR                  *01501900
                '&XREQUEST'    EQ 'DELETE_NAME'    OR                  *01502000
                '&XREQUEST'    EQ 'CROSS_INVAL').DEFNAMEMASKSKIPREM1    01502100
.*                                                                      01502200
&XNAMEMASK  SETC ''                                                     01502300
&ZXNAMEMASK SETC ''                                                     01502400
.DEFNAMEMASKSKIPREM1 ANOP ,                                             01502500
.*                                                                      01502600
         AIF   ('&XNAME'      NE ''               OR                   *01502700
                ('&XREQUEST'  NE 'READ_DIRINFO'   AND                  *01502800
                 '&XREQUEST'  NE 'READ_COCLASS'   AND                  *01502900
                 '&XREQUEST'  NE 'RESET_REFBIT')).DEFNAMEMASKSKIPREM2   01503000
.*                                                                      01503100
&XNAMEMASK  SETC ''                                                     01503200
&ZXNAMEMASK SETC ''                                                     01503300
.DEFNAMEMASKSKIPREM2 ANOP ,                                             01503400
.*                                                                      01503500
.DEFNAMEMASKSPEC ANOP ,                                                 01503600
.*                                                                      01503700
.**------------------------------------------------------------------** 01503800
.**  Remove defaults for Mode                                        ** 01503900
.**  -- Mode(SyncSuspend) may always be specified                    ** 01504000
.**------------------------------------------------------------------** 01504100
.**  Remove defaults for BufAddrSize                                 ** 01504200
.**------------------------------------------------------------------** 01504300
.*                                                                      01504400
         AIF   ('&BUFADDRSIZE(1)' NE '').DEFBUFADDRSIZESPEC        @L3A 01504500
.*                                                                      01504600
         AIF   ('&XBUFLIST' NE '').DEFBUFADDRSIZESKIPREMOVE             01504700
&XBUFADDRSIZE  SETC ''                                             @L3A 01504800
&ZXBUFADDRSIZE SETC ''                                             @L3A 01504900
.DEFBUFADDRSIZESKIPREMOVE ANOP ,                                   @L3A 01505000
.DEFBUFADDRSIZESPEC ANOP ,                                         @L3A 01505100
.*                                                                      01505200
.**------------------------------------------------------------------** 01505300
.**------------------------------------------------------------------** 01505400
.**  End of code to remove default values when the key cannot        ** 01505500
.**  be specified on the request                                     ** 01505600
.**------------------------------------------------------------------** 01505700
.*                                                                      01505800
.*                                                                      01505900
.**------------------------------------------------------------------** 01506000
.**  Start of code to validity check parameters                      ** 01506100
.**                                                                  ** 01506200
.**  This code is needed in addition to the checks which AMG         ** 01506300
.**  produces because we did not repeat keys in all places where     ** 01506400
.**  they could be used.                                             ** 01506500
.**                                                                  ** 01506600
.**  Validity checking for mutually exclusive keys, required keys,   ** 01506700
.**  and dependent keys is performed for the standard and execute    ** 01506800
.**  forms.                                                          ** 01506900
.**                                                                  ** 01507000
.**  Skip all checking if MF(L) or MF(x,y,NOCHECK) was specified.    ** 01507100
.**                                                                  ** 01507200
.**------------------------------------------------------------------** 01507300
.* Skip all validity checking if MF=L or MF specifies NOCHECK           01507400
        AIF   ('&MF(1)' EQ 'L'   OR                                    *01507500
               '&MF(3)' EQ 'NOCHECK').ENDPARMVALIDATION                 01507600
.**------------------------------------------------------------------** 01507700
.**  Validity checking for AnsArea                                   ** 01507800
.**                                                                  ** 01507900
.** AnsArea is required when Mode(SyncToken!AsyncToken) is           ** 01508000
.**   specified.  In all other cases it is optional.                 ** 01508100
.**                                                                  ** 01508200
         AIF   ('&XANSAREA' NE '' AND                                  *01508300
                '&XANSAREA' NE 'NO_ANSAREA').ANSAREASPEC                01508400
.*                                                                      01508500
.*                                                                      01508600
         AIF   ('&XMODE' NE 'SYNCTOKEN'    AND                         *01508700
                '&XMODE' NE 'ASYNCTOKEN').NOANSNOTTOKEN                 01508800
         MNOTE  8,'IXLCACHE ---> The ANSAREA key is required when MODE=*01508900
               &XMODE is specified'                                     01509000
&ZMACRET SETA  8                                                        01509100
.NOANSNOTTOKEN ANOP ,                                                   01509200
.*                                                                      01509300
.*                                                                      01509400
.ANSAREASPEC ANOP ,                                                     01509500
.**                                                                  ** 01509600
.**  End of validity checking for AnsArea                            ** 01509700
.**------------------------------------------------------------------** 01509800
.**------------------------------------------------------------------** 01509900
.**  Validity checking for Buffer and BufList                        ** 01510000
.**                                                                  ** 01510100
.**  For Cross_Inval, Delete_Name, Reset_RefBit, Read_StgStats,      ** 01510200
.**    Set_ReclVctr, and Unlock_CO_Name                              ** 01510300
.**    Buffer and BufList cannot be specified                        ** 01510400
.**                                                                  ** 01510500
.**  For Castout_Data, Unlock_Castout, Read_CoClass,                 ** 01510600
.**    Read_DirInfo, Read_CoStats, Process_RefList,                  ** 01510700
.**    Delete_NameList, Castout_Datalist, Write_Datalist,            ** 01510800
.**    and Cross_Invallist                                           ** 01510900
.**    Buffer or BufList is required                                 ** 01511000
.**                                                                  ** 01511100
.**  For Reg_NameList, Buffer is required.                           ** 01511200
.**  Buflist cannot be specified                                     ** 01511300
.**                                                                  ** 01511400
.**  For Read_Data                                                   ** 01511500
.**    Buffer or BufList may optionally be specified                 ** 01511600
.**                                                                  ** 01511700
.**  For Write_Data Buffer or Buflist is required when CHANGED=YES   ** 01511800
.**    and optional when CHANGED=NO                                  ** 01511900
.**                                                                  ** 01512000
.**                                                                  ** 01512100
         AIF   ('&XREQUEST' NE 'REG_NAMELIST').NOTREGNAMELIST      @D7C 01512200
         AIF   ('&XBUFFER'  NE '').BUFFERSPEC                      @02A 01512300
         MNOTE 8,'IXLCACHE ---> BUFFER is required when REQUEST=&XREQUE*01512400
               ST is specified'                                         01512500
&ZMACRET SETA  8                                                   @02A 01512600
.BUFFERSPEC ANOP ,                                                 @02A 01512700
         AIF   ('&XBUFLIST' EQ '').ENDREGNAMELIST                  @02A 01512800
         MNOTE 8,'IXLCACHE ---> The &XDATAREA key is mutually exclusive*01512900
                with REQUEST=&XREQUEST'                                 01513000
&ZMACRET SETA  8                                                        01513100
.NOTREGNAMELIST ANOP ,                                             @02A 01513200
.ENDREGNAMELIST ANOP ,                                             @02A 01513300
.*                                                                      01513400
         AIF   ('&XBUFFER'  EQ '' AND                                  *01513500
                '&XBUFLIST' EQ '').BUFFERNOTSPEC                        01513600
.*                                                                      01513700
         AIF   ('&XREQUEST' NE 'CROSS_INVAL'      AND                  *01513800
                '&XREQUEST' NE 'DELETE_NAME'      AND                  *01513900
                '&XREQUEST' NE 'RESET_REFBIT'     AND                  *01514000
                '&XREQUEST' NE 'READ_STGGSTATS'   AND                  *01514100
                '&XREQUEST' NE 'UNLOCK_CO_NAME'   AND                  *01514200
                '&XREQUEST' NE 'SET_RECLVCTR').NOBUFFERERROR001    @04C 01514300
         MNOTE 8,'IXLCACHE ---> The &XDATAREA key is mutually exclusive*01514400
                with REQUEST=&XREQUEST'                                 01514500
&ZMACRET SETA  8                                                        01514600
.NOBUFFERERROR001 ANOP ,                                                01514700
.BUFFERNOTSPEC ANOP ,                                                   01514800
.*                                                                      01514900
         AIF   ('&XBUFFER'  NE ''  OR                                  *01515000
                '&XBUFLIST' NE '').BUFORBUFLISTSPEC                     01515100
.*                                                                      01515200
         AIF   ('&XREQUEST' NE 'CASTOUT_DATA'     AND                  *01515300
                '&XREQUEST' NE 'UNLOCK_CASTOUT'   AND                  *01515400
                '&XREQUEST' NE 'READ_COCLASS'     AND                  *01515500
                '&XREQUEST' NE 'READ_DIRINFO'     AND                  *01515600
                '&XREQUEST' NE 'READ_COSTATS'     AND                  *01515700
                '&XREQUEST' NE 'DELETE_NAMELIST'  AND                  *01515800
                '&XREQUEST' NE 'CASTOUT_DATALIST' AND                  *01515900
                '&XREQUEST' NE 'CROSS_INVALLIST'  AND                  *01516000
                '&XREQUEST' NE 'WRITE_DATALIST'   AND                  *01516100
                '&XREQUEST' NE 'PROCESS_REFLIST').NOBUFLISTNOTERROR     01516200
.*                                                                @D7C  01516300
         MNOTE 8,'IXLCACHE ---> BUFFER or BUFLIST is required when REQU*01516400
               EST=&XREQUEST is specified'                        @L5C  01516500
&ZMACRET SETA  8                                                        01516600
.NOBUFLISTNOTERROR ANOP ,                                               01516700
.*                                                                      01516800
         AIF   ('&XREQUEST' NE 'WRITE_DATA'       OR                   *01516900
                '&XCHANGED' NE 'YES').NOWRTDATANOTERROR           @04A  01517000
         MNOTE 8,'IXLCACHE ---> BUFFER or BUFLIST is required when REQU*01517100
               EST=&XREQUEST and CHANGED=YES is specified'        @04A  01517200
&ZMACRET SETA  8                                                  @04A  01517300
.NOWRTDATANOTERROR ANOP ,                                         @04A  01517400
.BUFORBUFLISTSPEC ANOP ,                                                01517500
.**                                                                  ** 01517600
.**  End of validity checking for Buffer and BufList                 ** 01517700
.**------------------------------------------------------------------** 01517800
.**------------------------------------------------------------------** 01517900
.**  Validity checking for BufNum                                    ** 01518000
.**                                                                  ** 01518100
.**  BufNum is required if BufList is specified                      ** 01518200
.**                                                                  ** 01518300
         AIF   ('&XBUFNUM' NE '').BUFNUMSPEC                            01518400
.*                                                                      01518500
         AIF   ('&XBUFLIST' EQ '').BUFNUMERROR001                       01518600
         MNOTE 8,'IXLCACHE ---> The BUFNUM key is required when BUFLIST*01518700
                is specified'                                           01518800
&ZMACRET SETA  8                                                        01518900
.BUFNUMERROR001 ANOP ,                                                  01519000
.BUFNUMSPEC ANOP ,                                                      01519100
.**                                                                  ** 01519200
.**  End of validity checking for BufNum                             ** 01519300
.**------------------------------------------------------------------** 01519400
.**------------------------------------------------------------------** 01519500
.**  Validity checking for BufIncrNum                                ** 01519600
.**                                                                  ** 01519700
.**  For Unlock_Castout, Read_CoClass, Read_DirInfo, Read_CoStats,   ** 01519800
.**    Process_RefList, Castout_Datalist, Write_Datalist             ** 01519900
.**    BufIncrNum cannot be specified                                ** 01520000
.**                                                                  ** 01520100
.**  For Read_Data, Write_Data, Castout_Data, Delete_NameList,       ** 01520200
.**    Cross_Invallist                                               ** 01520300
.**    BufIncrNum is required if BufList is specified                ** 01520400
.**                                                                  ** 01520500
         AIF   ('&XBUFINCRNUM' EQ '').BUFINCRNUMNOTSPEC                 01520600
.*                                                                      01520700
         AIF   ('&XREQUEST' NE 'UNLOCK_CASTOUT'    AND                 *01520800
                '&XREQUEST' NE 'READ_COCLASS'      AND                 *01520900
                '&XREQUEST' NE 'READ_DIRINFO'      AND                 *01521000
                '&XREQUEST' NE 'READ_COSTATS'      AND                 *01521100
                '&XREQUEST' NE 'CASTOUT_DATALIST'  AND                 *01521200
                '&XREQUEST' NE 'WRITE_DATALIST'    AND                 *01521300
                '&XREQUEST' NE 'PROCESS_REFLIST').BUFINCRNUMERROR001    01521400
.*                                                                @D7C  01521500
         MNOTE 8,'IXLCACHE ---> The BUFINCRNUM key is mutually exclusiv*01521600
               e with REQUEST=&XREQUEST'                          @L5C  01521700
&ZMACRET SETA  8                                                        01521800
.BUFINCRNUMERROR001 ANOP ,                                              01521900
.BUFINCRNUMNOTSPEC ANOP ,                                               01522000
.*                                                                      01522100
         AIF   ('&XBUFINCRNUM' NE '').BUFINCRNUMSPEC                    01522200
.*                                                                      01522300
         AIF   (('&XREQUEST' NE 'READ_DATA'        AND                 *01522400
                 '&XREQUEST' NE 'WRITE_DATA'       AND                 *01522500
                 '&XREQUEST' NE 'DELETE_NAMELIST'  AND                 *01522600
                 '&XREQUEST' NE 'CROSS_INVALLIST'  AND                 *01522700
                 '&XREQUEST' NE 'CASTOUT_DATA')    OR                  *01522800
                '&XBUFLIST' EQ '').BUFINCRNUMERROR002                   01522900
         MNOTE 8,'IXLCACHE ---> The BUFINCRNUM key is required with REQ*01523000
               UEST=&XREQUEST when BUFLIST is specified'          @L5C  01523100
&ZMACRET SETA  8                                                        01523200
.BUFINCRNUMERROR002 ANOP ,                                              01523300
.BUFINCRNUMSPEC ANOP ,                                                  01523400
.**                                                                  ** 01523500
.**  End of validity checking for BufIncrNum                         ** 01523600
.**------------------------------------------------------------------** 01523700
.*                                                              10@L8D  01523800
.**------------------------------------------------------------------** 01523900
.**  Validity checking for AdjArea                                   ** 01524000
.**                                                                  ** 01524100
.**  For Read_Data, Write_Data, Castout_Data, Castout_Datalist       ** 01524200
.**    AdjArea is optional                                           ** 01524300
.**                                                                  ** 01524400
.**  AdjArea is mutually exclusive with all other requests           ** 01524500
.**                                                                  ** 01524600
         AIF   ('&XADJAREA' EQ 'NO_ADJAREA'       OR                   *01524700
                '&XADJAREA' EQ '').ADJAREANOTSPEC                  @P7C 01524800
.*                                                                      01524900
         AIF   ('&XREQUEST' EQ 'READ_DATA'        OR                   *01525000
                '&XREQUEST' EQ 'WRITE_DATA'       OR                   *01525100
                '&XREQUEST' EQ 'CASTOUT_DATALIST' OR                   *01525200
                '&XREQUEST' EQ 'CASTOUT_DATA').ADJAREAERROR001     @L5C 01525300
         MNOTE 8,'IXLCACHE ---> The ADJAREA key is mutually exclusive w*01525400
               ith REQUEST=&XREQUEST'                                   01525500
&ZMACRET SETA  8                                                        01525600
.ADJAREAERROR001 ANOP ,                                                 01525700
.ADJAREANOTSPEC ANOP ,                                                  01525800
.**                                                                  ** 01525900
.**  End of validity checking for AdjArea                            ** 01526000
.**------------------------------------------------------------------** 01526100
.**------------------------------------------------------------------** 01526200
.**  Validity checking for StgClass                                  ** 01526300
.**                                                                  ** 01526400
.**  For Read_Data, Write_Data, Read_StgStats, Process_RefList,      ** 01526500
.**    Set_ReclVctr                                                  ** 01526600
.**    StgClass is required                                          ** 01526700
.**                                                                  ** 01526800
.**  StgClass is mutually exclusive with all other requests          ** 01526900
.**                                                                  ** 01527000
         AIF   ('&XSTGCLASS' EQ '').STGCLASSNOTSPEC                     01527100
.*                                                                      01527200
         AIF   ('&XREQUEST' EQ 'READ_DATA'        OR                   *01527300
                '&XREQUEST' EQ 'WRITE_DATA'       OR                   *01527400
                '&XREQUEST' EQ 'READ_STGSTATS'    OR                   *01527500
                '&XREQUEST' EQ 'PROCESS_REFLIST'  OR                   *01527600
                '&XREQUEST' EQ 'SET_RECLVCTR').STGCLASSERROR001         01527700
         MNOTE 8,'IXLCACHE ---> The STGCLASS key is mutually exclusive *01527800
               with REQUEST=&XREQUEST'                                  01527900
&ZMACRET SETA  8                                                        01528000
.STGCLASSERROR001 ANOP ,                                                01528100
.STGCLASSNOTSPEC ANOP ,                                                 01528200
.*                                                                      01528300
         AIF   ('&XSTGCLASS' NE '').STGCLASSSPEC                        01528400
.*                                                                      01528500
         AIF   ('&XREQUEST' NE 'READ_DATA'        AND                  *01528600
                '&XREQUEST' NE 'WRITE_DATA'       AND                  *01528700
                '&XREQUEST' NE 'READ_STGSTATS'    AND                  *01528800
                '&XREQUEST' NE 'PROCESS_REFLIST'  AND                  *01528900
                '&XREQUEST' NE 'SET_RECLVCTR').STGCLASSERROR002         01529000
         MNOTE 8,'IXLCACHE ---> The STGCLASS key is required with REQUE*01529100
               ST=&XREQUEST'                                            01529200
&ZMACRET SETA  8                                                        01529300
.STGCLASSERROR002 ANOP ,                                                01529400
.STGCLASSSPEC ANOP ,                                                    01529500
.**                                                                  ** 01529600
.**  End of validity checking for StgClass                           ** 01529700
.**------------------------------------------------------------------** 01529800
.**------------------------------------------------------------------** 01529900
.**  Validity checking for CoClass                                   ** 01530000
.**                                                                  ** 01530100
.**  For Write_Data Changed(Yes), Read_CoClass                       ** 01530200
.**    CoClass is required                                           ** 01530300
.**                                                                  ** 01530400
.**  CoClass is mutually exclusive with all other requests           ** 01530500
.**                                                                  ** 01530600
         AIF   ('&XCOCLASS' EQ '').COCLASSNOTSPEC                       01530700
.*                                                                      01530800
         AIF   ('&XREQUEST' EQ 'WRITE_DATA'       OR                   *01530900
                '&XREQUEST' EQ 'READ_COCLASS').COCLASSERROR001          01531000
         MNOTE 8,'IXLCACHE ---> The COCLASS key is mutually exclusive w*01531100
               ith REQUEST=&XREQUEST'                                   01531200
&ZMACRET SETA  8                                                        01531300
.COCLASSERROR001 ANOP ,                                                 01531400
.*                                                                      01531500
         AIF   ('&XREQUEST' NE 'WRITE_DATA'       OR                   *01531600
                '&XCHANGED' EQ 'YES').COCLASSERROR002                   01531700
         MNOTE 8,'IXLCACHE ---> The COCLASS key is mutually exclusive w*01531800
               ith REQUEST=WRITE_DATA when CHANGED=YES is not specified*01531900
               '                                                        01532000
&ZMACRET SETA  8                                                        01532100
.COCLASSERROR002 ANOP ,                                                 01532200
.COCLASSNOTSPEC ANOP ,                                                  01532300
.*                                                                      01532400
         AIF   ('&XCOCLASS' NE '').COCLASSSPEC                          01532500
.*                                                                      01532600
         AIF   ('&XREQUEST' NE 'READ_COCLASS').COCLASSERROR003          01532700
         MNOTE 8,'IXLCACHE ---> The COCLASS key is required with REQUES*01532800
               T=&XREQUEST'                                             01532900
&ZMACRET SETA  8                                                        01533000
.COCLASSERROR003 ANOP ,                                                 01533100
.*                                                                      01533200
         AIF   ('&XREQUEST' NE 'WRITE_DATA'       OR                   *01533300
                '&XCHANGED' NE 'YES').COCLASSERROR004                   01533400
         MNOTE 8,'IXLCACHE ---> The COCLASS key is required with REQUES*01533500
               T=WRITE_DATA when CHANGED=YES is specified'              01533600
&ZMACRET SETA  8                                                        01533700
.COCLASSERROR004 ANOP ,                                                 01533800
.COCLASSSPEC ANOP ,                                                     01533900
.**                                                                  ** 01534000
.**  End of validity checking for CoClass                            ** 01534100
.**------------------------------------------------------------------** 01534200
.**------------------------------------------------------------------** 01534300
.**  Validity checking for VectorIndex                               ** 01534400
.**                                                                  ** 01534500
.**  For Read_Data, Write_Data WhenReg(No), or Castout_Data          ** 01534600
.**    when either RegUser(YES) or OldName is specified              ** 01534700
.**    VectorIndex is required.                                      ** 01534800
.**                                                                  ** 01534900
.**  For Write_Data WhenReg(Yes),                                    ** 01535000
.**    VectorIndex is optional                                       ** 01535100
.**                                                                  ** 01535200
.**  VectorIndex is mutually exclusive with all other requests       ** 01535300
.**                                                                  ** 01535400
         AIF   ('&XVECTORINDEX' EQ 'NO_VECTORINDEX' OR                 *01535500
                '&XVECTORINDEX' EQ '').VECTORINDEXNOTSPEC               01535600
.*                                                                      01535700
         AIF   ('&XREQUEST' EQ 'READ_DATA'        OR                   *01535800
                '&XREQUEST' EQ 'WRITE_DATA'       OR                   *01535900
                '&XREQUEST' EQ 'CASTOUT_DATA').VECTORINDEXERROR002 @02C 01536000
         MNOTE 8,'IXLCACHE ---> The VECTORINDEX key is mutually exclusi*01536100
               ve with REQUEST=&XREQUEST'                               01536200
&ZMACRET SETA  8                                                        01536300
.*                                                                4@02D 01536400
.VECTORINDEXERROR002 ANOP ,                                             01536500
.VECTORINDEXNOTSPEC ANOP ,                                        8@05D 01536600
.*                                                                      01536700
         AIF   ('&XVECTORINDEX' NE 'NO_VECTORINDEX' AND                *01536800
                '&XVECTORINDEX' NE '').VECTORINDEXSPEC                  01536900
.*                                                                      01537000
         AIF   ('&XREQUEST' NE 'READ_DATA').VECTORINDEXERROR003         01537100
         AIF   ('&XREGUSER' NE 'YES'              AND                  *01537200
                '&XOLDNAME' EQ '').VECTORINDEXERROR003             @PKC 01537300
         MNOTE 8,'IXLCACHE ---> The VECTORINDEX key is required with RE*01537400
               QUEST=&XREQUEST when either REGUSER=YES or OLDNAME is sp*01537500
               ecified'                                            @05C 01537600
&ZMACRET SETA  8                                                        01537700
.*                                                                6@05D 01537800
.VECTORINDEXERROR003 ANOP ,                                             01537900
.*                                                                      01538000
         AIF   ('&XREQUEST' NE 'WRITE_DATA'       OR                   *01538100
                '&XWHENREG' NE 'NO').VECTORINDEXERROR004                01538200
         AIF   ('&XREGUSER' NE 'YES'              AND                  *01538300
                '&XOLDNAME' EQ '').VECTORINDEXERROR004             @PKC 01538400
         MNOTE 8,'IXLCACHE ---> The VECTORINDEX key is required with RE*01538500
               QUEST=WRITE_DATA when WHENREG=NO is specified and either*01538600
                REGUSER=YES or OLDNAME is specified'               @PKC 01538700
&ZMACRET SETA  8                                                        01538800
.VECTORINDEXERROR004 ANOP ,                                             01538900
.*                                                                      01539000
         AIF   ('&XREQUEST' NE 'CASTOUT_DATA').VECTORINDEXERROR005      01539100
         AIF   ('&XREGUSER' NE 'YES'              AND                  *01539200
                '&XOLDNAME' EQ '').VECTORINDEXERROR005             @05C 01539300
         MNOTE 8,'IXLCACHE ---> The VECTORINDEX key is required with RE*01539400
               QUEST=&XREQUEST when either REGUSER=YES or OLDNAME is sp*01539500
               ecified.'                                           @05C 01539600
&ZMACRET SETA  8                                                        01539700
.VECTORINDEXERROR005 ANOP ,                                             01539800
.VECTORINDEXSPEC ANOP ,                                                 01539900
.**                                                                  ** 01540000
.**  End of validity checking for VectorIndex                        ** 01540100
.**------------------------------------------------------------------** 01540200
.**------------------------------------------------------------------** 01540300
.**  Validity checking for ResToken                                  ** 01540400
.**                                                                  ** 01540500
.**  For Cross_Inval, Delete_Name, Read_CoClass, Read_DirInfo,       ** 01540600
.**    Reset_RefBit                                                  ** 01540700
.**    ResToken is optional                                          ** 01540800
.**                                                                  ** 01540900
.**  ResToken is mutually exclusive with all other requests          ** 01541000
.**                                                                  ** 01541100
         AIF   ('&XRESTOKEN' EQ '').RESTOKENNOTSPEC                     01541200
.*                                                                      01541300
         AIF   ('&XREQUEST' EQ 'CROSS_INVAL'      OR                   *01541400
                '&XREQUEST' EQ 'DELETE_NAME'      OR                   *01541500
                '&XREQUEST' EQ 'READ_COCLASS'     OR                   *01541600
                '&XREQUEST' EQ 'READ_DIRINFO'     OR                   *01541700
                '&XREQUEST' EQ 'RESET_REFBIT').RESTOKENERROR001         01541800
         MNOTE 8,'IXLCACHE ---> The RESTOKEN key is mutually exclusive *01541900
               with REQUEST=&XREQUEST'                                  01542000
&ZMACRET SETA  8                                                        01542100
.RESTOKENERROR001 ANOP ,                                                01542200
.RESTOKENNOTSPEC ANOP ,                                                 01542300
.**                                                                  ** 01542400
.**  End of validity checking for ResToken                           ** 01542500
.**------------------------------------------------------------------** 01542600
.**------------------------------------------------------------------** 01542700
.**  Validity checking for ExtResToken                               ** 01542800
.**                                                                  ** 01542900
.**  For Cross_Inval, Delete_Name, Read_CoClass, Read_DirInfo,       ** 01543000
.**    Reset_RefBit                                                  ** 01543100
.**    ExtResToken is optional                                       ** 01543200
.**                                                                  ** 01543300
.**  ExtResToken is mutually exclusive with all other requests       ** 01543400
.**                                                                  ** 01543500
         AIF   ('&XEXTRESTOKEN' EQ '').EXTRESTOKENNOTSPEC               01543600
.*                                                                      01543700
         AIF   ('&XREQUEST' EQ 'CROSS_INVAL'      OR                   *01543800
                '&XREQUEST' EQ 'DELETE_NAME'      OR                   *01543900
                '&XREQUEST' EQ 'READ_COCLASS'     OR                   *01544000
                '&XREQUEST' EQ 'READ_DIRINFO'     OR                   *01544100
                '&XREQUEST' EQ 'RESET_REFBIT').EXTRESTOKENERROR001      01544200
         MNOTE 8,'IXLCACHE ---> The RESTOKEN key is mutually exclusive *01544300
               with REQUEST=&XREQUEST'                                  01544400
&ZMACRET SETA  8                                                        01544500
.EXTRESTOKENERROR001 ANOP ,                                             01544600
.EXTRESTOKENNOTSPEC ANOP ,                                              01544700
.**                                                                  ** 01544800
.**  End of validity checking for ResToken                           ** 01544900
.**------------------------------------------------------------------** 01545000
.**------------------------------------------------------------------** 01545100
.**  Validity checking for Name                                      ** 01545200
.**                                                                  ** 01545300
.**  For Read_Data, Write_Data, Castout_Data, Cross_Inval,           ** 01545400
.**    Delete_Name                                                   ** 01545500
.**    Name is required                                              ** 01545600
.**                                                                  ** 01545700
.**  For Read_CoClass, Read_DirInfo, Reset_RefBit                    ** 01545800
.**    Name is optional                                              ** 01545900
.**                                                                  ** 01546000
.**  For Unlock_Castout, Read_CoStats, Read_StgStats,                ** 01546100
.**    Process_RefList, Set_ReclVctr, Reg_NameList,                  ** 01546200
.**    Unlock_CO_Name, Delete_NameList,Castout_datalist,             ** 01546300
.**    Write_datalist, Cross_Invallist                               ** 01546400
.**    Name is mutually exclusive                                    ** 01546500
.**                                                                  ** 01546600
         AIF   ('&XNAME' EQ '').NAMENOTSPEC                             01546700
.*                                                                      01546800
         AIF   ('&XREQUEST' NE 'UNLOCK_CASTOUT'   AND                  *01546900
                '&XREQUEST' NE 'READ_COSTATS'     AND                  *01547000
                '&XREQUEST' NE 'READ_STGSTATS'    AND                  *01547100
                '&XREQUEST' NE 'PROCESS_REFLIST'  AND                  *01547200
                '&XREQUEST' NE 'SET_RECLVCTR'     AND                  *01547300
                '&XREQUEST' NE 'UNLOCK_CO_NAME'   AND                  *01547400
                '&XREQUEST' NE 'DELETE_NAMELIST'  AND                  *01547500
                '&XREQUEST' NE 'CASTOUT_DATALIST' AND                  *01547600
                '&XREQUEST' NE 'CROSS_INVALLIST'  AND                  *01547700
                '&XREQUEST' NE 'WRITE_DATALIST'  AND                   *01547800
                '&XREQUEST' NE 'REG_NAMELIST').NAMEERROR001        @L5C 01547900
         MNOTE 8,'IXLCACHE ---> The NAME key is mutually exclusive with*01548000
                REQUEST=&XREQUEST'                                      01548100
&ZMACRET SETA  8                                                        01548200
.NAMEERROR001 ANOP ,                                                    01548300
.NAMENOTSPEC ANOP ,                                                     01548400
.*                                                                      01548500
         AIF   ('&XNAME' NE '').NAMESPEC                                01548600
.*                                                                      01548700
         AIF   ('&XREQUEST' NE 'READ_DATA'        AND                  *01548800
                '&XREQUEST' NE 'WRITE_DATA'       AND                  *01548900
                '&XREQUEST' NE 'CASTOUT_DATA'     AND                  *01549000
                '&XREQUEST' NE 'CROSS_INVAL'      AND                  *01549100
                '&XREQUEST' NE 'DELETE_NAME').NAMEERROR002              01549200
         MNOTE  8,'IXLCACHE ---> The NAME key is required with REQUEST=*01549300
               &XREQUEST'                                               01549400
&ZMACRET SETA  8                                                        01549500
.NAMEERROR002 ANOP ,                                                    01549600
.NAMESPEC ANOP ,                                                        01549700
.**                                                                  ** 01549800
.**  End of validity checking for Name                               ** 01549900
.**------------------------------------------------------------------** 01550000
.**------------------------------------------------------------------** 01550100
.**  Validity checking for NameMask                                  ** 01550200
.**                                                                  ** 01550300
.**  For Cross_Inval, Delete_Name, Read_CoClass, Read_DirInfo,       ** 01550400
.**    Reset_RefBit                                                  ** 01550500
.**    NameMask is optional                                          ** 01550600
.**                                                                  ** 01550700
.**  NameMask is mutually exclusive with all other requests          ** 01550800
.**                                                                  ** 01550900
         AIF   ('&XNAMEMASK' EQ '').NAMEMASKNOTSPEC                     01551000
.*                                                                      01551100
         AIF   ('&XREQUEST' EQ 'CROSS_INVAL'      OR                   *01551200
                '&XREQUEST' EQ 'DELETE_NAME'      OR                   *01551300
                '&XREQUEST' EQ 'READ_COCLASS'     OR                   *01551400
                '&XREQUEST' EQ 'READ_DIRINFO'     OR                   *01551500
                '&XREQUEST' EQ 'RESET_REFBIT').NAMEMASKERROR001         01551600
         MNOTE 8,'IXLCACHE ---> The NAMEMASK key is mutually exclusive *01551700
               with REQUEST=&XREQUEST'                                  01551800
&ZMACRET SETA  8                                                        01551900
.NAMEMASKERROR001 ANOP ,                                                01552000
.NAMEMASKNOTSPEC ANOP ,                                                 01552100
.**                                                                  ** 01552200
.**  End of validity checking for NameMask                           ** 01552300
.**------------------------------------------------------------------** 01552400
.**------------------------------------------------------------------** 01552500
.**  Validity checking for OldName                                   ** 01552600
.**                                                                  ** 01552700
.**  For Read_Data, Write_Data WhenReg(No),                          ** 01552800
.**    Castout_Data                                                  ** 01552900
.**    OldName is optional                                           ** 01553000
.**                                                                  ** 01553100
.**  OldName is mutually exclusive with all other requests           ** 01553200
.**                                                                  ** 01553300
         AIF   ('&XOLDNAME' EQ '').OLDNAMENOTSPEC                       01553400
.*                                                                      01553500
         AIF   ('&XREQUEST' EQ 'READ_DATA'        OR                   *01553600
                '&XREQUEST' EQ 'WRITE_DATA'       OR                   *01553700
                '&XREQUEST' EQ 'CASTOUT_DATA').OLDNAMEERROR001          01553800
         MNOTE 8,'IXLCACHE ---> The OLDNAME key is mutually exclusive w*01553900
               ith REQUEST=&XREQUEST'                                   01554000
&ZMACRET SETA  8                                                        01554100
.OLDNAMEERROR001 ANOP ,                                                 01554200
.*                                                                      01554300
         AIF   ('&XREQUEST' NE 'WRITE_DATA'       OR                   *01554400
                '&XWHENREG' EQ 'NO').OLDNAMEERROR002                    01554500
         MNOTE 8,'IXLCACHE ---> The OLDNAME key is mutually exclusive w*01554600
               ith REQUEST=WRITE_DATA when WHENREG=NO is not specified' 01554700
&ZMACRET SETA  8                                                        01554800
.OLDNAMEERROR002 ANOP ,                                                 01554900
.*                                                                6@05D 01555000
.OLDNAMENOTSPEC ANOP ,                                                  01555100
.**                                                                  ** 01555200
.**  End of validity checking for OldName                            ** 01555300
.**------------------------------------------------------------------** 01555400
.**------------------------------------------------------------------** 01555500
.**  Validity checking for Mode                                      ** 01555600
.**                                                                  ** 01555700
.** a) Mode(AsyncNoResponse) is may only be specified with           ** 01555800
.**    Set_ReclVctr requests                                         ** 01555900
.**                                                                  ** 01556000
         AIF   ('&XMODE' NE 'ASYNCNORESPONSE').ASYNCNORESPONSENOTSPEC   01556100
.*                                                                      01556200
         AIF   ('&XREQUEST' EQ 'SET_RECLVCTR').MODEERROR001             01556300
         MNOTE 8,'IXLCACHE ---> MODE=&XMODE is mutually exclusive with *01556400
               REQUEST=&XREQUEST'                                       01556500
&ZMACRET SETA  8                                                        01556600
.MODEERROR001 ANOP ,                                                    01556700
.ASYNCNORESPONSENOTSPEC ANOP ,                                          01556800
.**                                                                  ** 01556900
.**  End of validity checking for Mode                               ** 01557000
.**------------------------------------------------------------------** 01557100
.*                                                                      01557200
.ENDPARMVALIDATION ANOP ,                                               01557300
.*                                                                      01557400
.**------------------------------------------------------------------** 01557500
.**  End of code to validity check parameters                        ** 01557600
.**------------------------------------------------------------------** 01557700
.**------------------------------------------------------------------** 01557800
.**  End of user macasm code                                         ** 01557900
.**------------------------------------------------------------------** 01558000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  01558100
.********************************************************************   01558200
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     01558300
.********************************************************************   01558400
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       01558500
                      LCLA  &ZOPN1         INVOCATION INDEX             01558600
                      LCLC  &ZOPL(4095)    LABEL                        01558700
                      LCLC  &ZOPO(4095)    OPERATION                    01558800
                      LCLC  &ZOPV(4095)    VALUE                        01558900
                      LCLC  &ZOPD(4095)    DESCRIPTION                  01559000
.*                                                                      01559100
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     01559200
.******************************************************************     01559300
.***AL.L10 IXLCACHE FMT=LIST MF=S!L PARAMETERS                          01559400
.******************************************************************     01559500
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     01559600
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     01559700
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          01559800
&XMFATTR              SETC  '0D'                                        01559900
.*                                                                      01560000
&ZOPN                 SETA  &ZOPN+1                                     01560100
&ZOPL(&ZOPN)          SETC  ' '                                         01560200
                      AIF   (&SYSALVL NE 0).ZALVL6A                     01560300
&ZOPO(&ZOPN)          SETC  'B'                                         01560400
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                01560500
                      AGO   .ZALVL6B                                    01560600
.ZALVL6A              ANOP                                              01560700
&ZOPO(&ZOPN)          SETC  'CNOP'                                      01560800
&ZOPV(&ZOPN)          SETC  '4,8'                                       01560900
&ZOPN                 SETA  &ZOPN+1                                     01561000
&ZOPL(&ZOPN)          SETC  ' '                                         01561100
&ZOPO(&ZOPN)          SETC  'BRAS'                                      01561200
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              01561300
.ZALVL6B              ANOP                                              01561400
&ZOPD(&ZOPN)          SETC  '++ IXLCACHE ARG PARMS'                     01561500
.*                                                                      01561600
&ZOPN                 SETA  &ZOPN+1                                     01561700
&ZOPL(&ZOPN)          SETC  ' '                                         01561800
&ZOPO(&ZOPN)          SETC  'SPACE'                                     01561900
&ZOPV(&ZOPN)          SETC  '1'                                         01562000
&ZOPD(&ZOPN)          SETC  ' '                                         01562100
.*                                                                      01562200
.ZLMFSL2              ANOP  ,                                           01562300
.*-------------------------------------------------------------------   01562400
.***AM.L00  IXLCACHE FMT=LIST name                                      01562500
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    01562600
&ZOPN                 SETA &ZOPN+1                                      01562700
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   01562800
&ZOPO(&ZOPN)          SETC 'EQU'                                        01562900
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   01563000
&ZOPD(&ZOPN)          SETC '++ IXLCACHE NAME'                           01563100
.ZLMFSL2M             ANOP  ,                                           01563200
.*-------------------------------------------------------------------   01563300
.***AM.L01  IXLCACHE FMT=LIST PARAMETERS                                01563400
&ZOPN                 SETA &ZOPN+1                                      01563500
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   01563600
&ZOPO(&ZOPN)          SETC 'DS'                                         01563700
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   01563800
&ZOPD(&ZOPN)          SETC '++ IXLCACHE PARM LIST'                      01563900
.*-------------------------------------------------------------------   01564000
.***AM.L09  XSHL_DATA CL96                                              01564100
&ZOPN                 SETA &ZOPN+1                                      01564200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHL_DATA'                        01564300
&ZOPO(&ZOPN)          SETC 'DS'                                         01564400
&ZOPV(&ZOPN)          SETC 'CL96'                                       01564500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01564600
.*-------------------------------------------------------------------   01564700
.***AM.L09  XMOB_DATA CL4                                               01564800
&ZOPN                 SETA &ZOPN+1                                      01564900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMOB_DATA'                        01565000
&ZOPO(&ZOPN)          SETC 'DS'                                         01565100
&ZOPV(&ZOPN)          SETC 'CL4'                                        01565200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01565300
.*-------------------------------------------------------------------   01565400
.***AM.L09  XMCB_DATA CL68                                              01565500
&ZOPN                 SETA &ZOPN+1                                      01565600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMCB_DATA'                        01565700
&ZOPO(&ZOPN)          SETC 'DS'                                         01565800
&ZOPV(&ZOPN)          SETC 'CL68'                                       01565900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01566000
.*-------------------------------------------------------------------   01566100
.***AM.MLM2 SAVED LOCATION COUNTER                                      01566200
                      AIF  (&XPLISTVER GE 3).ZL4LA                      01566300
                      AIF  ('&ZENDBASEPL' NE '').ZL4LA                  01566400
&ZENDBASEPL           SETC 'YES'                                        01566500
&ZOPN                 SETA &ZOPN+1                                      01566600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           01566700
&ZOPO(&ZOPN)          SETC 'EQU'                                        01566800
&ZOPV(&ZOPN)          SETC '*'                                          01566900
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       01567000
.ZL4LA                ANOP  ,                                           01567100
.*-------------------------------------------------------------------   01567200
.***AM.LVER1                                                            01567300
                      AIF  (&XPLISTVER LT 3).ZL4L                       01567400
.*-------------------------------------------------------------------   01567500
.*-------------------------------------------------------------------   01567600
.***AM.L09  XMCB_DATA1 CL24                                             01567700
&ZOPN                 SETA &ZOPN+1                                      01567800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMCB_DATA1'                       01567900
&ZOPO(&ZOPN)          SETC 'DS'                                         01568000
&ZOPV(&ZOPN)          SETC 'CL24'                                       01568100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01568200
.*-------------------------------------------------------------------   01568300
.***AM.LVER2                                                            01568400
.ZL4L                 ANOP  ,                                           01568500
.*-------------------------------------------------------------------   01568600
.*-------------------------------------------------------------------   01568700
.***AM.MLM2 SAVED LOCATION COUNTER                                      01568800
                      AIF  (&XPLISTVER GE 6).ZL5LA                      01568900
                      AIF  ('&ZENDBASEPL' NE '').ZL5LA                  01569000
&ZENDBASEPL           SETC 'YES'                                        01569100
&ZOPN                 SETA &ZOPN+1                                      01569200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           01569300
&ZOPO(&ZOPN)          SETC 'EQU'                                        01569400
&ZOPV(&ZOPN)          SETC '*'                                          01569500
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       01569600
.ZL5LA                ANOP  ,                                           01569700
.*-------------------------------------------------------------------   01569800
.***AM.LVER1                                                            01569900
                      AIF  (&XPLISTVER LT 6).ZL5L                       01570000
.*-------------------------------------------------------------------   01570100
.*-------------------------------------------------------------------   01570200
.***AM.L09  XMCB_DATA2 CL148                                            01570300
&ZOPN                 SETA &ZOPN+1                                      01570400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMCB_DATA2'                       01570500
&ZOPO(&ZOPN)          SETC 'DS'                                         01570600
&ZOPV(&ZOPN)          SETC 'CL148'                                      01570700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01570800
.*-------------------------------------------------------------------   01570900
.***AM.LVER2                                                            01571000
.ZL5L                 ANOP  ,                                           01571100
.*-------------------------------------------------------------------   01571200
.*-------------------------------------------------------------------   01571300
.***AM.MLM1 SAVED LOCATION COUNTER                                      01571400
                      AIF  ('&ZENDBASEPL' NE '').ZL6LB                  01571500
&ZENDBASEPL           SETC 'YES'                                        01571600
&ZOPN                 SETA &ZOPN+1                                      01571700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           01571800
&ZOPO(&ZOPN)          SETC 'EQU'                                        01571900
&ZOPV(&ZOPN)          SETC '*'                                          01572000
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       01572100
.ZL6LB                ANOP  ,                                           01572200
.*-------------------------------------------------------------------   01572300
.***AM.PJR1 DEFINED ON XSHL_DATA                                        01572400
&ZOPN                 SETA &ZOPN+1                                      01572500
&ZOPL(&ZOPN)          SETC ' '                                          01572600
&ZOPO(&ZOPN)          SETC 'ORG'                                        01572700
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+0'                                01572800
&ZOPD(&ZOPN)          SETC ' '                                          01572900
.*-------------------------------------------------------------------   01573000
.***AM.L02 XVERSION XL1                                                 01573100
&ZOPN                 SETA &ZOPN+1                                      01573200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         01573300
&ZOPO(&ZOPN)          SETC 'DS'                                         01573400
&ZOPV(&ZOPN)          SETC 'XL1'                                        01573500
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          01573600
.*-------------------------------------------------------------------   01573700
.***AM.L09  XCMDCODE XL1                                                01573800
&ZOPN                 SETA &ZOPN+1                                      01573900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDCODE'                         01574000
&ZOPO(&ZOPN)          SETC 'DS'                                         01574100
&ZOPV(&ZOPN)          SETC 'XL1'                                        01574200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01574300
.*-------------------------------------------------------------------   01574400
.***AM.L09  XSHLFLGS CL4                                                01574500
&ZOPN                 SETA &ZOPN+1                                      01574600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS'                         01574700
&ZOPO(&ZOPN)          SETC 'DS'                                         01574800
&ZOPV(&ZOPN)          SETC 'CL4'                                        01574900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01575000
.*-------------------------------------------------------------------   01575100
.***AM.L09  XAXIOVERRIDE XL1                                            01575200
&ZOPN                 SETA &ZOPN+1                                      01575300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XAXIOVERRIDE'                     01575400
&ZOPO(&ZOPN)          SETC 'DS'                                         01575500
&ZOPV(&ZOPN)          SETC 'XL1'                                        01575600
&ZOPD(&ZOPN)          SETC '++ &ZXAXIOVERRIDE '                         01575700
.*-------------------------------------------------------------------   01575800
.***AM.L09  XRSV0101 CL2                                                01575900
&ZOPN                 SETA &ZOPN+1                                      01576000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0101'                         01576100
&ZOPO(&ZOPN)          SETC 'DS'                                         01576200
&ZOPV(&ZOPN)          SETC 'CL2'                                        01576300
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01576400
.*-------------------------------------------------------------------   01576500
.***AM.L09  XBUFSTGKEY BL.8                                             01576600
&ZOPN                 SETA &ZOPN+1                                      01576700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFSTGKEY'                       01576800
&ZOPO(&ZOPN)          SETC 'DS'                                         01576900
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01577000
&ZOPD(&ZOPN)          SETC '++ &ZXBUFSTGKEY '                           01577100
.*-------------------------------------------------------------------   01577200
.***AM.L09  XANSLEN XL2                                                 01577300
&ZOPN                 SETA &ZOPN+1                                      01577400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSLEN'                          01577500
&ZOPO(&ZOPN)          SETC 'DS'                                         01577600
&ZOPV(&ZOPN)          SETC 'XL2'                                        01577700
&ZOPD(&ZOPN)          SETC '++ &ZXANSLEN '                              01577800
.*-------------------------------------------------------------------   01577900
.***AM.L09  XCONTOKEN CL16                                              01578000
&ZOPN                 SETA &ZOPN+1                                      01578100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONTOKEN'                        01578200
&ZOPO(&ZOPN)          SETC 'DS'                                         01578300
&ZOPV(&ZOPN)          SETC 'CL16'                                       01578400
&ZOPD(&ZOPN)          SETC '++ &ZXCONTOKEN '                            01578500
.*-------------------------------------------------------------------   01578600
.***AM.L09  XDATADDR CL12                                               01578700
&ZOPN                 SETA &ZOPN+1                                      01578800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATADDR'                         01578900
&ZOPO(&ZOPN)          SETC 'DS'                                         01579000
&ZOPV(&ZOPN)          SETC 'CL12'                                       01579100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01579200
.*-------------------------------------------------------------------   01579300
.***AM.L09  XADJADDR CL8                                                01579400
&ZOPN                 SETA &ZOPN+1                                      01579500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XADJADDR'                         01579600
&ZOPO(&ZOPN)          SETC 'DS'                                         01579700
&ZOPV(&ZOPN)          SETC 'CL8'                                        01579800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01579900
.*-------------------------------------------------------------------   01580000
.***AM.L09  XANSADDR CL8                                                01580100
&ZOPN                 SETA &ZOPN+1                                      01580200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSADDR'                         01580300
&ZOPO(&ZOPN)          SETC 'DS'                                         01580400
&ZOPV(&ZOPN)          SETC 'CL8'                                        01580500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01580600
.*-------------------------------------------------------------------   01580700
.***AM.L09  XREQDATA CL8                                                01580800
&ZOPN                 SETA &ZOPN+1                                      01580900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQDATA'                         01581000
&ZOPO(&ZOPN)          SETC 'DS'                                         01581100
&ZOPV(&ZOPN)          SETC 'CL8'                                        01581200
&ZOPD(&ZOPN)          SETC '++ &ZXREQDATA '                             01581300
.*-------------------------------------------------------------------   01581400
.***AM.L09  XREQID CL8                                                  01581500
&ZOPN                 SETA &ZOPN+1                                      01581600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQID'                           01581700
&ZOPO(&ZOPN)          SETC 'DS'                                         01581800
&ZOPV(&ZOPN)          SETC 'CL8'                                        01581900
&ZOPD(&ZOPN)          SETC '++ &ZXREQID '                               01582000
.*-------------------------------------------------------------------   01582100
.***AM.L09  XEXTRESTOKEN CL16                                           01582200
&ZOPN                 SETA &ZOPN+1                                      01582300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEXTRESTOKEN'                     01582400
&ZOPO(&ZOPN)          SETC 'DS'                                         01582500
&ZOPV(&ZOPN)          SETC 'CL16'                                       01582600
&ZOPD(&ZOPN)          SETC '++ &ZXEXTRESTOKEN '                         01582700
.*-------------------------------------------------------------------   01582800
.***AM.L09  XDEIBADDR CL8                                               01582900
&ZOPN                 SETA &ZOPN+1                                      01583000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDEIBADDR'                        01583100
&ZOPO(&ZOPN)          SETC 'DS'                                         01583200
&ZOPV(&ZOPN)          SETC 'CL8'                                        01583300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01583400
.*-------------------------------------------------------------------   01583500
.***AM.PJR1 DEFINED ON XSHLFLGS                                         01583600
&ZOPN                 SETA &ZOPN+1                                      01583700
&ZOPL(&ZOPN)          SETC ' '                                          01583800
&ZOPO(&ZOPN)          SETC 'ORG'                                        01583900
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+2'                                01584000
&ZOPD(&ZOPN)          SETC ' '                                          01584100
.*-------------------------------------------------------------------   01584200
.***AM.L03 XSHLFLGS1 BL.8                                               01584300
&ZOPN                 SETA &ZOPN+1                                      01584400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS1'                        01584500
&ZOPO(&ZOPN)          SETC 'DS'                                         01584600
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01584700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01584800
.*                                                                      01584900
&ZOPN                 SETA  &ZOPN+1                                     01585000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_BUFFER'                  01585100
&ZOPO(&ZOPN)          SETC  'EQU'                                       01585200
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             01585300
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01585400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BUFFER'                       01585500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01585600
.*                                                                      01585700
&ZOPN                 SETA  &ZOPN+1                                     01585800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_BUFLIST'                 01585900
&ZOPO(&ZOPN)          SETC  'EQU'                                       01586000
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             01586100
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01586200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BUFLIST'                      01586300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01586400
.*                                                                      01586500
&ZOPN                 SETA  &ZOPN+1                                     01586600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_ADJAREA'                 01586700
&ZOPO(&ZOPN)          SETC  'EQU'                                       01586800
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             01586900
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01587000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ADJAREA'                      01587100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01587200
.*                                                                      01587300
&ZOPN                 SETA  &ZOPN+1                                     01587400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_ANSAREA'                 01587500
&ZOPO(&ZOPN)          SETC  'EQU'                                       01587600
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             01587700
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01587800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ANSAREA'                      01587900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01588000
.*                                                                      01588100
&ZOPN                 SETA  &ZOPN+1                                     01588200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPAGEABLE_NO'                    01588300
&ZOPO(&ZOPN)          SETC  'EQU'                                       01588400
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             01588500
&ZOPD(&ZOPN)          SETC  '++ XPAGEABLE.'                             01588600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           01588700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01588800
.*                                                                      01588900
&ZOPN                 SETA  &ZOPN+1                                     01589000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_BUFSTGKEY'               01589100
&ZOPO(&ZOPN)          SETC  'EQU'                                       01589200
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             01589300
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01589400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BUFSTGKEY'                    01589500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01589600
.*                                                                      01589700
&ZOPN                 SETA  &ZOPN+1                                     01589800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XBUFADDRTYPE_REAL'               01589900
&ZOPO(&ZOPN)          SETC  'EQU'                                       01590000
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             01590100
&ZOPD(&ZOPN)          SETC  '++ XBUFADDRTYPE.'                          01590200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).REAL'                         01590300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01590400
.*-------------------------------------------------------------------   01590500
.***AM.L03 XSHLFLGS2 BL.8                                               01590600
&ZOPN                 SETA &ZOPN+1                                      01590700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS2'                        01590800
&ZOPO(&ZOPN)          SETC 'DS'                                         01590900
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01591000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01591100
.*                                                                      01591200
&ZOPN                 SETA  &ZOPN+1                                     01591300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_SYNCECB'                   01591400
&ZOPO(&ZOPN)          SETC  'EQU'                                       01591500
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             01591600
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01591700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYNCECB'                      01591800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01591900
.*                                                                      01592000
&ZOPN                 SETA  &ZOPN+1                                     01592100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_SYNCEXIT'                  01592200
&ZOPO(&ZOPN)          SETC  'EQU'                                       01592300
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             01592400
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01592500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYNCEXIT'                     01592600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01592700
.*                                                                      01592800
&ZOPN                 SETA  &ZOPN+1                                     01592900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_SYNCTOKEN'                 01593000
&ZOPO(&ZOPN)          SETC  'EQU'                                       01593100
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             01593200
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01593300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYNCTOKEN'                    01593400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01593500
.*                                                                      01593600
&ZOPN                 SETA  &ZOPN+1                                     01593700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_ASYNCECB'                  01593800
&ZOPO(&ZOPN)          SETC  'EQU'                                       01593900
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             01594000
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01594100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ASYNCECB'                     01594200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01594300
.*                                                                      01594400
&ZOPN                 SETA  &ZOPN+1                                     01594500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_ASYNCEXIT'                 01594600
&ZOPO(&ZOPN)          SETC  'EQU'                                       01594700
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             01594800
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01594900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ASYNCEXIT'                    01595000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01595100
.*                                                                      01595200
&ZOPN                 SETA  &ZOPN+1                                     01595300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_ASYNCTOKEN'                01595400
&ZOPO(&ZOPN)          SETC  'EQU'                                       01595500
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             01595600
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01595700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ASYNCTOKEN'                   01595800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01595900
.*                                                                      01596000
&ZOPN                 SETA  &ZOPN+1                                     01596100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_ASYNCNORESPONSE'           01596200
&ZOPO(&ZOPN)          SETC  'EQU'                                       01596300
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             01596400
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01596500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ASYNCNORESPONSE'              01596600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01596700
.*-------------------------------------------------------------------   01596800
.***AM.L03 XSHLFLGS3 BL.8                                               01596900
&ZOPN                 SETA &ZOPN+1                                      01597000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS3'                        01597100
&ZOPO(&ZOPN)          SETC 'DS'                                         01597200
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01597300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01597400
.*                                                                      01597500
&ZOPN                 SETA  &ZOPN+1                                     01597600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREGUSER_YES'                    01597700
&ZOPO(&ZOPN)          SETC  'EQU'                                       01597800
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             01597900
&ZOPD(&ZOPN)          SETC  '++ XREGUSER.'                              01598000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          01598100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01598200
.*                                                                      01598300
&ZOPN                 SETA  &ZOPN+1                                     01598400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_VECTORINDEX'             01598500
&ZOPO(&ZOPN)          SETC  'EQU'                                       01598600
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             01598700
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01598800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).VECTORINDEX'                  01598900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01599000
.*                                                                      01599100
&ZOPN                 SETA  &ZOPN+1                                     01599200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_OLDNAME'                 01599300
&ZOPO(&ZOPN)          SETC  'EQU'                                       01599400
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             01599500
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01599600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).OLDNAME'                      01599700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01599800
.*-------------------------------------------------------------------   01599900
.***AM.L03 XSHLFLGS4 BL.8                                               01600000
&ZOPN                 SETA &ZOPN+1                                      01600100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSHLFLGS4'                        01600200
&ZOPO(&ZOPN)          SETC 'DS'                                         01600300
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01600400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01600500
.*                                                                      01600600
&ZOPN                 SETA  &ZOPN+1                                     01600700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_EXTRESTOKEN'             01600800
&ZOPO(&ZOPN)          SETC  'EQU'                                       01600900
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             01601000
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               01601100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).EXTRESTOKEN'                  01601200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01601300
.*                                                                      01601400
&ZOPN                 SETA  &ZOPN+1                                     01601500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XBUFADDRSIZE_64'                 01601600
&ZOPO(&ZOPN)          SETC  'EQU'                                       01601700
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             01601800
&ZOPD(&ZOPN)          SETC  '++ XBUFADDRSIZE.'                          01601900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).64'                           01602000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01602100
.*                                                                      01602200
&ZOPN                 SETA  &ZOPN+1                                     01602300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._RCVRYREQASYNC'                   01602400
&ZOPO(&ZOPN)          SETC  'EQU'                                       01602500
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             01602600
&ZOPD(&ZOPN)          SETC  '++ MACUSED.'                               01602700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CACHE'                        01602800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01602900
.*-------------------------------------------------------------------   01603000
.***AM.PJR1 DEFINED ON XCONTOKEN                                        01603100
&ZOPN                 SETA &ZOPN+1                                      01603200
&ZOPL(&ZOPN)          SETC ' '                                          01603300
&ZOPO(&ZOPN)          SETC 'ORG'                                        01603400
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+12'                               01603500
&ZOPD(&ZOPN)          SETC ' '                                          01603600
.*-------------------------------------------------------------------   01603700
.***AM.L09  XRSV0201 CL13                                               01603800
&ZOPN                 SETA &ZOPN+1                                      01603900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0201'                         01604000
&ZOPO(&ZOPN)          SETC 'DS'                                         01604100
&ZOPV(&ZOPN)          SETC 'CL13'                                       01604200
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01604300
.*-------------------------------------------------------------------   01604400
.***AM.L09  XCONID XL1                                                  01604500
&ZOPN                 SETA &ZOPN+1                                      01604600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONID'                           01604700
&ZOPO(&ZOPN)          SETC 'DS'                                         01604800
&ZOPV(&ZOPN)          SETC 'XL1'                                        01604900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01605000
.*-------------------------------------------------------------------   01605100
.***AM.L09  XRSV0202 CL2                                                01605200
&ZOPN                 SETA &ZOPN+1                                      01605300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0202'                         01605400
&ZOPO(&ZOPN)          SETC 'DS'                                         01605500
&ZOPV(&ZOPN)          SETC 'CL2'                                        01605600
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01605700
.*-------------------------------------------------------------------   01605800
.***AM.PJR1 DEFINED ON XDATADDR                                         01605900
&ZOPN                 SETA &ZOPN+1                                      01606000
&ZOPL(&ZOPN)          SETC ' '                                          01606100
&ZOPO(&ZOPN)          SETC 'ORG'                                        01606200
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+28'                               01606300
&ZOPD(&ZOPN)          SETC ' '                                          01606400
.*-------------------------------------------------------------------   01606500
.***AM.L09 ALET XBUFFER F                                               01606600
&ZOPN                 SETA &ZOPN+1                                      01606700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFFER_ALET'                     01606800
&ZOPO(&ZOPN)          SETC 'DS'                                         01606900
&ZOPV(&ZOPN)          SETC 'F'                                          01607000
&ZOPD(&ZOPN)          SETC '++ &ZXBUFFER ALET'                          01607100
.*-------------------------------------------------------------------   01607200
.***AM.L09  XBUFSIZE F                                                  01607300
&ZOPN                 SETA &ZOPN+1                                      01607400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFSIZE'                         01607500
&ZOPO(&ZOPN)          SETC 'DS'                                         01607600
&ZOPV(&ZOPN)          SETC 'F'                                          01607700
&ZOPD(&ZOPN)          SETC '++ &ZXBUFSIZE '                             01607800
.*-------------------------------------------------------------------   01607900
.***AM.L09  XBUFFER A                                                   01608000
&ZOPN                 SETA &ZOPN+1                                      01608100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFFER'                          01608200
&ZOPO(&ZOPN)          SETC 'DS'                                         01608300
&ZOPV(&ZOPN)          SETC 'A'                                          01608400
&ZOPD(&ZOPN)          SETC '++ &ZXBUFFER '                              01608500
.*-------------------------------------------------------------------   01608600
.***AM.PJR1 DEFINED ON XDATADDR                                         01608700
&ZOPN                 SETA &ZOPN+1                                      01608800
&ZOPL(&ZOPN)          SETC ' '                                          01608900
&ZOPO(&ZOPN)          SETC 'ORG'                                        01609000
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+28'                               01609100
&ZOPD(&ZOPN)          SETC ' '                                          01609200
.*-------------------------------------------------------------------   01609300
.***AM.L09  XBUFALET F                                                  01609400
&ZOPN                 SETA &ZOPN+1                                      01609500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFALET'                         01609600
&ZOPO(&ZOPN)          SETC 'DS'                                         01609700
&ZOPV(&ZOPN)          SETC 'F'                                          01609800
&ZOPD(&ZOPN)          SETC '++ &ZXBUFALET '                             01609900
.*-------------------------------------------------------------------   01610000
.***AM.L09 ALET XBUFLIST F                                              01610100
&ZOPN                 SETA &ZOPN+1                                      01610200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFLIST_ALET'                    01610300
&ZOPO(&ZOPN)          SETC 'DS'                                         01610400
&ZOPV(&ZOPN)          SETC 'F'                                          01610500
&ZOPD(&ZOPN)          SETC '++ &ZXBUFLIST ALET'                         01610600
.*-------------------------------------------------------------------   01610700
.***AM.L09  XBUFLIST A                                                  01610800
&ZOPN                 SETA &ZOPN+1                                      01610900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFLIST'                         01611000
&ZOPO(&ZOPN)          SETC 'DS'                                         01611100
&ZOPV(&ZOPN)          SETC 'A'                                          01611200
&ZOPD(&ZOPN)          SETC '++ &ZXBUFLIST '                             01611300
.*-------------------------------------------------------------------   01611400
.***AM.PJR1 DEFINED ON XADJADDR                                         01611500
&ZOPN                 SETA &ZOPN+1                                      01611600
&ZOPL(&ZOPN)          SETC ' '                                          01611700
&ZOPO(&ZOPN)          SETC 'ORG'                                        01611800
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+40'                               01611900
&ZOPD(&ZOPN)          SETC ' '                                          01612000
.*-------------------------------------------------------------------   01612100
.***AM.L09 ALET XADJAREA F                                              01612200
&ZOPN                 SETA &ZOPN+1                                      01612300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XADJAREA_ALET'                    01612400
&ZOPO(&ZOPN)          SETC 'DS'                                         01612500
&ZOPV(&ZOPN)          SETC 'F'                                          01612600
&ZOPD(&ZOPN)          SETC '++ &ZXADJAREA ALET'                         01612700
.*-------------------------------------------------------------------   01612800
.***AM.L09  XADJAREA A                                                  01612900
&ZOPN                 SETA &ZOPN+1                                      01613000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XADJAREA'                         01613100
&ZOPO(&ZOPN)          SETC 'DS'                                         01613200
&ZOPV(&ZOPN)          SETC 'A'                                          01613300
&ZOPD(&ZOPN)          SETC '++ &ZXADJAREA '                             01613400
.*-------------------------------------------------------------------   01613500
.***AM.PJR1 DEFINED ON XADJADDR                                         01613600
&ZOPN                 SETA &ZOPN+1                                      01613700
&ZOPL(&ZOPN)          SETC ' '                                          01613800
&ZOPO(&ZOPN)          SETC 'ORG'                                        01613900
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+40'                               01614000
&ZOPD(&ZOPN)          SETC ' '                                          01614100
.*-------------------------------------------------------------------   01614200
.***AM.L09 ALET XRECLVCTR F                                             01614300
&ZOPN                 SETA &ZOPN+1                                      01614400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRECLVCTR_ALET'                   01614500
&ZOPO(&ZOPN)          SETC 'DS'                                         01614600
&ZOPV(&ZOPN)          SETC 'F'                                          01614700
&ZOPD(&ZOPN)          SETC '++ &ZXRECLVCTR ALET'                        01614800
.*-------------------------------------------------------------------   01614900
.***AM.L09  XRECLVCTR A                                                 01615000
&ZOPN                 SETA &ZOPN+1                                      01615100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRECLVCTR'                        01615200
&ZOPO(&ZOPN)          SETC 'DS'                                         01615300
&ZOPV(&ZOPN)          SETC 'A'                                          01615400
&ZOPD(&ZOPN)          SETC '++ &ZXRECLVCTR '                            01615500
.*-------------------------------------------------------------------   01615600
.***AM.PJR1 DEFINED ON XADJADDR                                         01615700
&ZOPN                 SETA &ZOPN+1                                      01615800
&ZOPL(&ZOPN)          SETC ' '                                          01615900
&ZOPO(&ZOPN)          SETC 'ORG'                                        01616000
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+40'                               01616100
&ZOPD(&ZOPN)          SETC ' '                                          01616200
.*-------------------------------------------------------------------   01616300
.***AM.L09 ALET XSTGSTATS F                                             01616400
&ZOPN                 SETA &ZOPN+1                                      01616500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTGSTATS_ALET'                   01616600
&ZOPO(&ZOPN)          SETC 'DS'                                         01616700
&ZOPV(&ZOPN)          SETC 'F'                                          01616800
&ZOPD(&ZOPN)          SETC '++ &ZXSTGSTATS ALET'                        01616900
.*-------------------------------------------------------------------   01617000
.***AM.L09  XSTGSTATS A                                                 01617100
&ZOPN                 SETA &ZOPN+1                                      01617200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTGSTATS'                        01617300
&ZOPO(&ZOPN)          SETC 'DS'                                         01617400
&ZOPV(&ZOPN)          SETC 'A'                                          01617500
&ZOPD(&ZOPN)          SETC '++ &ZXSTGSTATS '                            01617600
.*-------------------------------------------------------------------   01617700
.***AM.PJR1 DEFINED ON XADJADDR                                         01617800
&ZOPN                 SETA &ZOPN+1                                      01617900
&ZOPL(&ZOPN)          SETC ' '                                          01618000
&ZOPO(&ZOPN)          SETC 'ORG'                                        01618100
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+40'                               01618200
&ZOPD(&ZOPN)          SETC ' '                                          01618300
.*-------------------------------------------------------------------   01618400
.***AM.L09 ALET XNSBAREA F                                              01618500
&ZOPN                 SETA &ZOPN+1                                      01618600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNSBAREA_ALET'                    01618700
&ZOPO(&ZOPN)          SETC 'DS'                                         01618800
&ZOPV(&ZOPN)          SETC 'F'                                          01618900
&ZOPD(&ZOPN)          SETC '++ &ZXNSBAREA ALET'                         01619000
.*-------------------------------------------------------------------   01619100
.***AM.L09  XNSBAREA A                                                  01619200
&ZOPN                 SETA &ZOPN+1                                      01619300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNSBAREA'                         01619400
&ZOPO(&ZOPN)          SETC 'DS'                                         01619500
&ZOPV(&ZOPN)          SETC 'A'                                          01619600
&ZOPD(&ZOPN)          SETC '++ &ZXNSBAREA '                             01619700
.*-------------------------------------------------------------------   01619800
.***AM.PJR1 DEFINED ON XADJADDR                                         01619900
&ZOPN                 SETA &ZOPN+1                                      01620000
&ZOPL(&ZOPN)          SETC ' '                                          01620100
&ZOPO(&ZOPN)          SETC 'ORG'                                        01620200
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+40'                               01620300
&ZOPD(&ZOPN)          SETC ' '                                          01620400
.*-------------------------------------------------------------------   01620500
.***AM.L09 ALET XWORBAREA F                                             01620600
&ZOPN                 SETA &ZOPN+1                                      01620700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XWORBAREA_ALET'                   01620800
&ZOPO(&ZOPN)          SETC 'DS'                                         01620900
&ZOPV(&ZOPN)          SETC 'F'                                          01621000
&ZOPD(&ZOPN)          SETC '++ &ZXWORBAREA ALET'                        01621100
.*-------------------------------------------------------------------   01621200
.***AM.L09  XWORBAREA A                                                 01621300
&ZOPN                 SETA &ZOPN+1                                      01621400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XWORBAREA'                        01621500
&ZOPO(&ZOPN)          SETC 'DS'                                         01621600
&ZOPV(&ZOPN)          SETC 'A'                                          01621700
&ZOPD(&ZOPN)          SETC '++ &ZXWORBAREA '                            01621800
.*-------------------------------------------------------------------   01621900
.***AM.PJR1 DEFINED ON XANSADDR                                         01622000
&ZOPN                 SETA &ZOPN+1                                      01622100
&ZOPL(&ZOPN)          SETC ' '                                          01622200
&ZOPO(&ZOPN)          SETC 'ORG'                                        01622300
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+48'                               01622400
&ZOPD(&ZOPN)          SETC ' '                                          01622500
.*-------------------------------------------------------------------   01622600
.***AM.L09 ALET XANSAREA F                                              01622700
&ZOPN                 SETA &ZOPN+1                                      01622800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSAREA_ALET'                    01622900
&ZOPO(&ZOPN)          SETC 'DS'                                         01623000
&ZOPV(&ZOPN)          SETC 'F'                                          01623100
&ZOPD(&ZOPN)          SETC '++ &ZXANSAREA ALET'                         01623200
.*-------------------------------------------------------------------   01623300
.***AM.L09  XANSAREA A                                                  01623400
&ZOPN                 SETA &ZOPN+1                                      01623500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSAREA'                         01623600
&ZOPO(&ZOPN)          SETC 'DS'                                         01623700
&ZOPV(&ZOPN)          SETC 'A'                                          01623800
&ZOPD(&ZOPN)          SETC '++ &ZXANSAREA '                             01623900
.*-------------------------------------------------------------------   01624000
.***AM.PJR1 DEFINED ON XREQDATA                                         01624100
&ZOPN                 SETA &ZOPN+1                                      01624200
&ZOPL(&ZOPN)          SETC ' '                                          01624300
&ZOPO(&ZOPN)          SETC 'ORG'                                        01624400
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+56'                               01624500
&ZOPD(&ZOPN)          SETC ' '                                          01624600
.*-------------------------------------------------------------------   01624700
.***AM.L09  XREQECB A                                                   01624800
&ZOPN                 SETA &ZOPN+1                                      01624900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQECB'                          01625000
&ZOPO(&ZOPN)          SETC 'DS'                                         01625100
&ZOPV(&ZOPN)          SETC 'A'                                          01625200
&ZOPD(&ZOPN)          SETC '++ &ZXREQECB '                              01625300
.*-------------------------------------------------------------------   01625400
.***AM.L09  XRSV0203 CL4                                                01625500
&ZOPN                 SETA &ZOPN+1                                      01625600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0203'                         01625700
&ZOPO(&ZOPN)          SETC 'DS'                                         01625800
&ZOPV(&ZOPN)          SETC 'CL4'                                        01625900
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01626000
.*-------------------------------------------------------------------   01626100
.***AM.PJR1 DEFINED ON XREQDATA                                         01626200
&ZOPN                 SETA &ZOPN+1                                      01626300
&ZOPL(&ZOPN)          SETC ' '                                          01626400
&ZOPO(&ZOPN)          SETC 'ORG'                                        01626500
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+56'                               01626600
&ZOPD(&ZOPN)          SETC ' '                                          01626700
.*-------------------------------------------------------------------   01626800
.***AM.L09 ALET XREQTOKEN F                                             01626900
&ZOPN                 SETA &ZOPN+1                                      01627000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQTOKEN_ALET'                   01627100
&ZOPO(&ZOPN)          SETC 'DS'                                         01627200
&ZOPV(&ZOPN)          SETC 'F'                                          01627300
&ZOPD(&ZOPN)          SETC '++ &ZXREQTOKEN ALET'                        01627400
.*-------------------------------------------------------------------   01627500
.***AM.L09  XREQTOKEN A                                                 01627600
&ZOPN                 SETA &ZOPN+1                                      01627700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQTOKEN'                        01627800
&ZOPO(&ZOPN)          SETC 'DS'                                         01627900
&ZOPV(&ZOPN)          SETC 'A'                                          01628000
&ZOPD(&ZOPN)          SETC '++ &ZXREQTOKEN '                            01628100
.*-------------------------------------------------------------------   01628200
.***AM.PJR1 DEFINED ON XEXTRESTOKEN                                     01628300
&ZOPN                 SETA &ZOPN+1                                      01628400
&ZOPL(&ZOPN)          SETC ' '                                          01628500
&ZOPO(&ZOPN)          SETC 'ORG'                                        01628600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+72'                               01628700
&ZOPD(&ZOPN)          SETC ' '                                          01628800
.*-------------------------------------------------------------------   01628900
.***AM.L09  XEXTRESTOKENTKN CL8                                         01629000
&ZOPN                 SETA &ZOPN+1                                      01629100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEXTRESTOKENTKN'                  01629200
&ZOPO(&ZOPN)          SETC 'DS'                                         01629300
&ZOPV(&ZOPN)          SETC 'CL8'                                        01629400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01629500
.*-------------------------------------------------------------------   01629600
.***AM.L09  XEXTRESTOKENPSVN CL8                                        01629700
&ZOPN                 SETA &ZOPN+1                                      01629800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEXTRESTOKENPSVN'                 01629900
&ZOPO(&ZOPN)          SETC 'DS'                                         01630000
&ZOPV(&ZOPN)          SETC 'CL8'                                        01630100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01630200
.*-------------------------------------------------------------------   01630300
.***AM.PJR1 DEFINED ON XDEIBADDR                                        01630400
&ZOPN                 SETA &ZOPN+1                                      01630500
&ZOPL(&ZOPN)          SETC ' '                                          01630600
&ZOPO(&ZOPN)          SETC 'ORG'                                        01630700
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+88'                               01630800
&ZOPD(&ZOPN)          SETC ' '                                          01630900
.*-------------------------------------------------------------------   01631000
.***AM.L09 ALET XDEIBAREA F                                             01631100
&ZOPN                 SETA &ZOPN+1                                      01631200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDEIBAREA_ALET'                   01631300
&ZOPO(&ZOPN)          SETC 'DS'                                         01631400
&ZOPV(&ZOPN)          SETC 'F'                                          01631500
&ZOPD(&ZOPN)          SETC '++ &ZXDEIBAREA ALET'                        01631600
.*-------------------------------------------------------------------   01631700
.***AM.L09  XDEIBAREA A                                                 01631800
&ZOPN                 SETA &ZOPN+1                                      01631900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDEIBAREA'                        01632000
&ZOPO(&ZOPN)          SETC 'DS'                                         01632100
&ZOPV(&ZOPN)          SETC 'A'                                          01632200
&ZOPD(&ZOPN)          SETC '++ &ZXDEIBAREA '                            01632300
.*-------------------------------------------------------------------   01632400
.***AM.PJR1 DEFINED ON XMOB_DATA                                        01632500
&ZOPN                 SETA &ZOPN+1                                      01632600
&ZOPL(&ZOPN)          SETC ' '                                          01632700
&ZOPO(&ZOPN)          SETC 'ORG'                                        01632800
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+96'                               01632900
&ZOPD(&ZOPN)          SETC ' '                                          01633000
.*-------------------------------------------------------------------   01633100
.***AM.L09  XCMDLEN XL2                                                 01633200
&ZOPN                 SETA &ZOPN+1                                      01633300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDLEN'                          01633400
&ZOPO(&ZOPN)          SETC 'DS'                                         01633500
&ZOPV(&ZOPN)          SETC 'XL2'                                        01633600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01633700
.*-------------------------------------------------------------------   01633800
.***AM.L09  XBUFNUM XL1                                                 01633900
&ZOPN                 SETA &ZOPN+1                                      01634000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFNUM'                          01634100
&ZOPO(&ZOPN)          SETC 'DS'                                         01634200
&ZOPV(&ZOPN)          SETC 'XL1'                                        01634300
&ZOPD(&ZOPN)          SETC '++ &ZXBUFNUM '                              01634400
.*-------------------------------------------------------------------   01634500
.***AM.L09  XBUFINCRNUM XL1                                             01634600
&ZOPN                 SETA &ZOPN+1                                      01634700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFINCRNUM'                      01634800
&ZOPO(&ZOPN)          SETC 'DS'                                         01634900
&ZOPV(&ZOPN)          SETC 'XL1'                                        01635000
&ZOPD(&ZOPN)          SETC '++ &ZXBUFINCRNUM '                          01635100
.*-------------------------------------------------------------------   01635200
.***AM.PJR1 DEFINED ON XMCB_DATA                                        01635300
&ZOPN                 SETA &ZOPN+1                                      01635400
&ZOPL(&ZOPN)          SETC ' '                                          01635500
&ZOPO(&ZOPN)          SETC 'ORG'                                        01635600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+100'                              01635700
&ZOPD(&ZOPN)          SETC ' '                                          01635800
.*-------------------------------------------------------------------   01635900
.***AM.L09  XCCA CL1                                                    01636000
&ZOPN                 SETA &ZOPN+1                                      01636100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCCA'                             01636200
&ZOPO(&ZOPN)          SETC 'DS'                                         01636300
&ZOPV(&ZOPN)          SETC 'CL1'                                        01636400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01636500
.*-------------------------------------------------------------------   01636600
.***AM.L09  XCCB CL1                                                    01636700
&ZOPN                 SETA &ZOPN+1                                      01636800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCCB'                             01636900
&ZOPO(&ZOPN)          SETC 'DS'                                         01637000
&ZOPV(&ZOPN)          SETC 'CL1'                                        01637100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01637200
.*-------------------------------------------------------------------   01637300
.***AM.L09  XRSV0501 CL2                                                01637400
&ZOPN                 SETA &ZOPN+1                                      01637500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0501'                         01637600
&ZOPO(&ZOPN)          SETC 'DS'                                         01637700
&ZOPV(&ZOPN)          SETC 'CL2'                                        01637800
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01637900
.*-------------------------------------------------------------------   01638000
.***AM.L09  XOFF4 CL2                                                   01638100
&ZOPN                 SETA &ZOPN+1                                      01638200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOFF4'                            01638300
&ZOPO(&ZOPN)          SETC 'DS'                                         01638400
&ZOPV(&ZOPN)          SETC 'CL2'                                        01638500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01638600
.*-------------------------------------------------------------------   01638700
.***AM.L09  XOFF6 CL2                                                   01638800
&ZOPN                 SETA &ZOPN+1                                      01638900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOFF6'                            01639000
&ZOPO(&ZOPN)          SETC 'DS'                                         01639100
&ZOPV(&ZOPN)          SETC 'CL2'                                        01639200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01639300
.*-------------------------------------------------------------------   01639400
.***AM.L09  XOFF8 CL8                                                   01639500
&ZOPN                 SETA &ZOPN+1                                      01639600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOFF8'                            01639700
&ZOPO(&ZOPN)          SETC 'DS'                                         01639800
&ZOPV(&ZOPN)          SETC 'CL8'                                        01639900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01640000
.*-------------------------------------------------------------------   01640100
.***AM.L09  XCUNBAREA CL32                                              01640200
&ZOPN                 SETA &ZOPN+1                                      01640300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCUNBAREA'                        01640400
&ZOPO(&ZOPN)          SETC 'DS'                                         01640500
&ZOPV(&ZOPN)          SETC 'CL32'                                       01640600
&ZOPD(&ZOPN)          SETC '++ &ZXCUNBAREA '                            01640700
.*-------------------------------------------------------------------   01640800
.***AM.L09  XOFF48 CL48                                                 01640900
&ZOPN                 SETA &ZOPN+1                                      01641000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOFF48'                           01641100
&ZOPO(&ZOPN)          SETC 'DS'                                         01641200
&ZOPV(&ZOPN)          SETC 'CL48'                                       01641300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01641400
.*-------------------------------------------------------------------   01641500
.***AM.PJR1 DEFINED ON XOFF4                                            01641600
&ZOPN                 SETA &ZOPN+1                                      01641700
&ZOPL(&ZOPN)          SETC ' '                                          01641800
&ZOPO(&ZOPN)          SETC 'ORG'                                        01641900
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+104'                              01642000
&ZOPD(&ZOPN)          SETC ' '                                          01642100
.*-------------------------------------------------------------------   01642200
.***AM.L09  XNAMEMASK BL.16                                             01642300
&ZOPN                 SETA &ZOPN+1                                      01642400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNAMEMASK'                        01642500
&ZOPO(&ZOPN)          SETC 'DS'                                         01642600
&ZOPV(&ZOPN)          SETC 'BL.16'                                      01642700
&ZOPD(&ZOPN)          SETC '++ &ZXNAMEMASK '                            01642800
.*-------------------------------------------------------------------   01642900
.***AM.PJR1 DEFINED ON XOFF4                                            01643000
&ZOPN                 SETA &ZOPN+1                                      01643100
&ZOPL(&ZOPN)          SETC ' '                                          01643200
&ZOPO(&ZOPN)          SETC 'ORG'                                        01643300
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+104'                              01643400
&ZOPD(&ZOPN)          SETC ' '                                          01643500
.*-------------------------------------------------------------------   01643600
.***AM.L09  XCOCLASSB XL2                                               01643700
&ZOPN                 SETA &ZOPN+1                                      01643800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCOCLASSB'                        01643900
&ZOPO(&ZOPN)          SETC 'DS'                                         01644000
&ZOPV(&ZOPN)          SETC 'XL2'                                        01644100
&ZOPD(&ZOPN)          SETC '++ &ZXCOCLASSB '                            01644200
.*-------------------------------------------------------------------   01644300
.***AM.PJR1 DEFINED ON XOFF4                                            01644400
&ZOPN                 SETA &ZOPN+1                                      01644500
&ZOPL(&ZOPN)          SETC ' '                                          01644600
&ZOPO(&ZOPN)          SETC 'ORG'                                        01644700
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+104'                              01644800
&ZOPD(&ZOPN)          SETC ' '                                          01644900
.*-------------------------------------------------------------------   01645000
.***AM.L09  XLCID1 CL1                                                  01645100
&ZOPN                 SETA &ZOPN+1                                      01645200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLCID1'                           01645300
&ZOPO(&ZOPN)          SETC 'DS'                                         01645400
&ZOPV(&ZOPN)          SETC 'CL1'                                        01645500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01645600
.*-------------------------------------------------------------------   01645700
.***AM.L09  XSTGCLASS XL1                                               01645800
&ZOPN                 SETA &ZOPN+1                                      01645900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTGCLASS'                        01646000
&ZOPO(&ZOPN)          SETC 'DS'                                         01646100
&ZOPV(&ZOPN)          SETC 'XL1'                                        01646200
&ZOPD(&ZOPN)          SETC '++ &ZXSTGCLASS '                            01646300
.*-------------------------------------------------------------------   01646400
.***AM.PJR1 DEFINED ON XOFF4                                            01646500
&ZOPN                 SETA &ZOPN+1                                      01646600
&ZOPL(&ZOPN)          SETC ' '                                          01646700
&ZOPO(&ZOPN)          SETC 'ORG'                                        01646800
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+104'                              01646900
&ZOPD(&ZOPN)          SETC ' '                                          01647000
.*-------------------------------------------------------------------   01647100
.***AM.L09  XRSV0611 CL1                                                01647200
&ZOPN                 SETA &ZOPN+1                                      01647300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0611'                         01647400
&ZOPO(&ZOPN)          SETC 'DS'                                         01647500
&ZOPV(&ZOPN)          SETC 'CL1'                                        01647600
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01647700
.*-------------------------------------------------------------------   01647800
.***AM.L09  XPROCESSID1 CL1                                             01647900
&ZOPN                 SETA &ZOPN+1                                      01648000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPROCESSID1'                      01648100
&ZOPO(&ZOPN)          SETC 'DS'                                         01648200
&ZOPV(&ZOPN)          SETC 'CL1'                                        01648300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01648400
.*-------------------------------------------------------------------   01648500
.***AM.PJR1 DEFINED ON XOFF4                                            01648600
&ZOPN                 SETA &ZOPN+1                                      01648700
&ZOPL(&ZOPN)          SETC ' '                                          01648800
&ZOPO(&ZOPN)          SETC 'ORG'                                        01648900
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+104'                              01649000
&ZOPD(&ZOPN)          SETC ' '                                          01649100
.*-------------------------------------------------------------------   01649200
.***AM.L09  XSTARTINDEX1 CL2                                            01649300
&ZOPN                 SETA &ZOPN+1                                      01649400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTARTINDEX1'                     01649500
&ZOPO(&ZOPN)          SETC 'DS'                                         01649600
&ZOPV(&ZOPN)          SETC 'CL2'                                        01649700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01649800
.*-------------------------------------------------------------------   01649900
.***AM.PJR1 DEFINED ON XOFF4                                            01650000
&ZOPN                 SETA &ZOPN+1                                      01650100
&ZOPL(&ZOPN)          SETC ' '                                          01650200
&ZOPO(&ZOPN)          SETC 'ORG'                                        01650300
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+104'                              01650400
&ZOPD(&ZOPN)          SETC ' '                                          01650500
.*-------------------------------------------------------------------   01650600
.***AM.L09  XCMDFLAG12 BL.8                                             01650700
&ZOPN                 SETA &ZOPN+1                                      01650800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLAG12'                       01650900
&ZOPO(&ZOPN)          SETC 'DS'                                         01651000
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01651100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01651200
.*-------------------------------------------------------------------   01651300
.***AM.L09  XCMDFLAG13 BL.8                                             01651400
&ZOPN                 SETA &ZOPN+1                                      01651500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLAG13'                       01651600
&ZOPO(&ZOPN)          SETC 'DS'                                         01651700
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01651800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01651900
.*-------------------------------------------------------------------   01652000
.***AM.PJR1 DEFINED ON XOFF6                                            01652100
&ZOPN                 SETA &ZOPN+1                                      01652200
&ZOPL(&ZOPN)          SETC ' '                                          01652300
&ZOPO(&ZOPN)          SETC 'ORG'                                        01652400
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+106'                              01652500
&ZOPD(&ZOPN)          SETC ' '                                          01652600
.*-------------------------------------------------------------------   01652700
.***AM.L09  XCOCLASS XL2                                                01652800
&ZOPN                 SETA &ZOPN+1                                      01652900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCOCLASS'                         01653000
&ZOPO(&ZOPN)          SETC 'DS'                                         01653100
&ZOPV(&ZOPN)          SETC 'XL2'                                        01653200
&ZOPD(&ZOPN)          SETC '++ &ZXCOCLASS '                             01653300
.*-------------------------------------------------------------------   01653400
.***AM.PJR1 DEFINED ON XOFF6                                            01653500
&ZOPN                 SETA &ZOPN+1                                      01653600
&ZOPL(&ZOPN)          SETC ' '                                          01653700
&ZOPO(&ZOPN)          SETC 'ORG'                                        01653800
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+106'                              01653900
&ZOPD(&ZOPN)          SETC ' '                                          01654000
.*-------------------------------------------------------------------   01654100
.***AM.L09  XCOCLASSE XL2                                               01654200
&ZOPN                 SETA &ZOPN+1                                      01654300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCOCLASSE'                        01654400
&ZOPO(&ZOPN)          SETC 'DS'                                         01654500
&ZOPV(&ZOPN)          SETC 'XL2'                                        01654600
&ZOPD(&ZOPN)          SETC '++ &ZXCOCLASSE '                            01654700
.*-------------------------------------------------------------------   01654800
.***AM.PJR1 DEFINED ON XOFF6                                            01654900
&ZOPN                 SETA &ZOPN+1                                      01655000
&ZOPL(&ZOPN)          SETC ' '                                          01655100
&ZOPO(&ZOPN)          SETC 'ORG'                                        01655200
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+106'                              01655300
&ZOPD(&ZOPN)          SETC ' '                                          01655400
.*-------------------------------------------------------------------   01655500
.***AM.L09  XNUMNAMES XL2                                               01655600
&ZOPN                 SETA &ZOPN+1                                      01655700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNUMNAMES'                        01655800
&ZOPO(&ZOPN)          SETC 'DS'                                         01655900
&ZOPV(&ZOPN)          SETC 'XL2'                                        01656000
&ZOPD(&ZOPN)          SETC '++ &ZXNUMNAMES '                            01656100
.*-------------------------------------------------------------------   01656200
.***AM.PJR1 DEFINED ON XOFF6                                            01656300
&ZOPN                 SETA &ZOPN+1                                      01656400
&ZOPL(&ZOPN)          SETC ' '                                          01656500
&ZOPO(&ZOPN)          SETC 'ORG'                                        01656600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+106'                              01656700
&ZOPD(&ZOPN)          SETC ' '                                          01656800
.*-------------------------------------------------------------------   01656900
.***AM.L09  XREPEAT XL2                                                 01657000
&ZOPN                 SETA &ZOPN+1                                      01657100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREPEAT'                          01657200
&ZOPO(&ZOPN)          SETC 'DS'                                         01657300
&ZOPV(&ZOPN)          SETC 'XL2'                                        01657400
&ZOPD(&ZOPN)          SETC '++ &ZXREPEAT '                              01657500
.*-------------------------------------------------------------------   01657600
.***AM.PJR1 DEFINED ON XOFF6                                            01657700
&ZOPN                 SETA &ZOPN+1                                      01657800
&ZOPL(&ZOPN)          SETC ' '                                          01657900
&ZOPO(&ZOPN)          SETC 'ORG'                                        01658000
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+106'                              01658100
&ZOPD(&ZOPN)          SETC ' '                                          01658200
.*-------------------------------------------------------------------   01658300
.***AM.L09  XLCID2 CL1                                                  01658400
&ZOPN                 SETA &ZOPN+1                                      01658500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLCID2'                           01658600
&ZOPO(&ZOPN)          SETC 'DS'                                         01658700
&ZOPV(&ZOPN)          SETC 'CL1'                                        01658800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01658900
.*-------------------------------------------------------------------   01659000
.***AM.L09  XDBS1 CL1                                                   01659100
&ZOPN                 SETA &ZOPN+1                                      01659200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDBS1'                            01659300
&ZOPO(&ZOPN)          SETC 'DS'                                         01659400
&ZOPV(&ZOPN)          SETC 'CL1'                                        01659500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01659600
.*-------------------------------------------------------------------   01659700
.***AM.PJR1 DEFINED ON XOFF6                                            01659800
&ZOPN                 SETA &ZOPN+1                                      01659900
&ZOPL(&ZOPN)          SETC ' '                                          01660000
&ZOPO(&ZOPN)          SETC 'ORG'                                        01660100
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+106'                              01660200
&ZOPD(&ZOPN)          SETC ' '                                          01660300
.*-------------------------------------------------------------------   01660400
.***AM.L09  XCMDFLAG1 BL.8                                              01660500
&ZOPN                 SETA &ZOPN+1                                      01660600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLAG1'                        01660700
&ZOPO(&ZOPN)          SETC 'DS'                                         01660800
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01660900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01661000
.*-------------------------------------------------------------------   01661100
.***AM.L09  XRSV0621 CL1                                                01661200
&ZOPN                 SETA &ZOPN+1                                      01661300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0621'                         01661400
&ZOPO(&ZOPN)          SETC 'DS'                                         01661500
&ZOPV(&ZOPN)          SETC 'CL1'                                        01661600
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01661700
.*-------------------------------------------------------------------   01661800
.***AM.PJR1 DEFINED ON XOFF6                                            01661900
&ZOPN                 SETA &ZOPN+1                                      01662000
&ZOPL(&ZOPN)          SETC ' '                                          01662100
&ZOPO(&ZOPN)          SETC 'ORG'                                        01662200
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+106'                              01662300
&ZOPD(&ZOPN)          SETC ' '                                          01662400
.*-------------------------------------------------------------------   01662500
.***AM.L09  XENDINDEX1 CL2                                              01662600
&ZOPN                 SETA &ZOPN+1                                      01662700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENDINDEX1'                       01662800
&ZOPO(&ZOPN)          SETC 'DS'                                         01662900
&ZOPV(&ZOPN)          SETC 'CL2'                                        01663000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01663100
.*-------------------------------------------------------------------   01663200
.***AM.PJR1 DEFINED ON XOFF6                                            01663300
&ZOPN                 SETA &ZOPN+1                                      01663400
&ZOPL(&ZOPN)          SETC ' '                                          01663500
&ZOPO(&ZOPN)          SETC 'ORG'                                        01663600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+106'                              01663700
&ZOPD(&ZOPN)          SETC ' '                                          01663800
.*-------------------------------------------------------------------   01663900
.***AM.L09  XRSV0622 CL1                                                01664000
&ZOPN                 SETA &ZOPN+1                                      01664100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0622'                         01664200
&ZOPO(&ZOPN)          SETC 'DS'                                         01664300
&ZOPV(&ZOPN)          SETC 'CL1'                                        01664400
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01664500
.*-------------------------------------------------------------------   01664600
.***AM.L09  XCMDFLAG4 BL.8                                              01664700
&ZOPN                 SETA &ZOPN+1                                      01664800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLAG4'                        01664900
&ZOPO(&ZOPN)          SETC 'DS'                                         01665000
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01665100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01665200
.*-------------------------------------------------------------------   01665300
.***AM.PJR1 DEFINED ON XOFF8                                            01665400
&ZOPN                 SETA &ZOPN+1                                      01665500
&ZOPL(&ZOPN)          SETC ' '                                          01665600
&ZOPO(&ZOPN)          SETC 'ORG'                                        01665700
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+108'                              01665800
&ZOPD(&ZOPN)          SETC ' '                                          01665900
.*-------------------------------------------------------------------   01666000
.***AM.L09  XRESTOKEN CL8                                               01666100
&ZOPN                 SETA &ZOPN+1                                      01666200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRESTOKEN'                        01666300
&ZOPO(&ZOPN)          SETC 'DS'                                         01666400
&ZOPV(&ZOPN)          SETC 'CL8'                                        01666500
&ZOPD(&ZOPN)          SETC '++ &ZXRESTOKEN '                            01666600
.*-------------------------------------------------------------------   01666700
.***AM.PJR1 DEFINED ON XOFF8                                            01666800
&ZOPN                 SETA &ZOPN+1                                      01666900
&ZOPL(&ZOPN)          SETC ' '                                          01667000
&ZOPO(&ZOPN)          SETC 'ORG'                                        01667100
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+108'                              01667200
&ZOPD(&ZOPN)          SETC ' '                                          01667300
.*-------------------------------------------------------------------   01667400
.***AM.L09  XUSERDATA1 CL8                                              01667500
&ZOPN                 SETA &ZOPN+1                                      01667600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUSERDATA1'                       01667700
&ZOPO(&ZOPN)          SETC 'DS'                                         01667800
&ZOPV(&ZOPN)          SETC 'CL8'                                        01667900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01668000
.*-------------------------------------------------------------------   01668100
.***AM.PJR1 DEFINED ON XOFF8                                            01668200
&ZOPN                 SETA &ZOPN+1                                      01668300
&ZOPL(&ZOPN)          SETC ' '                                          01668400
&ZOPO(&ZOPN)          SETC 'ORG'                                        01668500
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+108'                              01668600
&ZOPD(&ZOPN)          SETC ' '                                          01668700
.*-------------------------------------------------------------------   01668800
.***AM.L09  XFIRSTNAME XL2                                              01668900
&ZOPN                 SETA &ZOPN+1                                      01669000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFIRSTNAME'                       01669100
&ZOPO(&ZOPN)          SETC 'DS'                                         01669200
&ZOPV(&ZOPN)          SETC 'XL2'                                        01669300
&ZOPD(&ZOPN)          SETC '++ &ZXFIRSTNAME '                           01669400
.*-------------------------------------------------------------------   01669500
.***AM.L09  XLASTNAME XL2                                               01669600
&ZOPN                 SETA &ZOPN+1                                      01669700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLASTNAME'                        01669800
&ZOPO(&ZOPN)          SETC 'DS'                                         01669900
&ZOPV(&ZOPN)          SETC 'XL2'                                        01670000
&ZOPD(&ZOPN)          SETC '++ &ZXLASTNAME '                            01670100
.*-------------------------------------------------------------------   01670200
.***AM.L09  XRSV0631 CL4                                                01670300
&ZOPN                 SETA &ZOPN+1                                      01670400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0631'                         01670500
&ZOPO(&ZOPN)          SETC 'DS'                                         01670600
&ZOPV(&ZOPN)          SETC 'CL4'                                        01670700
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01670800
.*-------------------------------------------------------------------   01670900
.***AM.PJR1 DEFINED ON XOFF8                                            01671000
&ZOPN                 SETA &ZOPN+1                                      01671100
&ZOPL(&ZOPN)          SETC ' '                                          01671200
&ZOPO(&ZOPN)          SETC 'ORG'                                        01671300
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+108'                              01671400
&ZOPD(&ZOPN)          SETC ' '                                          01671500
.*-------------------------------------------------------------------   01671600
.***AM.L09  XRSV0632 CL1                                                01671700
&ZOPN                 SETA &ZOPN+1                                      01671800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0632'                         01671900
&ZOPO(&ZOPN)          SETC 'DS'                                         01672000
&ZOPV(&ZOPN)          SETC 'CL1'                                        01672100
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01672200
.*-------------------------------------------------------------------   01672300
.***AM.L09  XDBS2 CL1                                                   01672400
&ZOPN                 SETA &ZOPN+1                                      01672500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDBS2'                            01672600
&ZOPO(&ZOPN)          SETC 'DS'                                         01672700
&ZOPV(&ZOPN)          SETC 'CL1'                                        01672800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01672900
.*-------------------------------------------------------------------   01673000
.***AM.L09  XRSV0633 CL6                                                01673100
&ZOPN                 SETA &ZOPN+1                                      01673200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0633'                         01673300
&ZOPO(&ZOPN)          SETC 'DS'                                         01673400
&ZOPV(&ZOPN)          SETC 'CL6'                                        01673500
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01673600
.*-------------------------------------------------------------------   01673700
.***AM.PJR1 DEFINED ON XOFF8                                            01673800
&ZOPN                 SETA &ZOPN+1                                      01673900
&ZOPL(&ZOPN)          SETC ' '                                          01674000
&ZOPO(&ZOPN)          SETC 'ORG'                                        01674100
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+108'                              01674200
&ZOPD(&ZOPN)          SETC ' '                                          01674300
.*-------------------------------------------------------------------   01674400
.***AM.L09  XLCID3 CL1                                                  01674500
&ZOPN                 SETA &ZOPN+1                                      01674600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLCID3'                           01674700
&ZOPO(&ZOPN)          SETC 'DS'                                         01674800
&ZOPV(&ZOPN)          SETC 'CL1'                                        01674900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01675000
.*-------------------------------------------------------------------   01675100
.***AM.PJR1 DEFINED ON XOFF8                                            01675200
&ZOPN                 SETA &ZOPN+1                                      01675300
&ZOPL(&ZOPN)          SETC ' '                                          01675400
&ZOPO(&ZOPN)          SETC 'ORG'                                        01675500
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+108'                              01675600
&ZOPD(&ZOPN)          SETC ' '                                          01675700
.*-------------------------------------------------------------------   01675800
.***AM.L09  XRSV0634 CL2                                                01675900
&ZOPN                 SETA &ZOPN+1                                      01676000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0634'                         01676100
&ZOPO(&ZOPN)          SETC 'DS'                                         01676200
&ZOPV(&ZOPN)          SETC 'CL2'                                        01676300
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01676400
.*-------------------------------------------------------------------   01676500
.***AM.L09  XCMDFLAG5 BL.8                                              01676600
&ZOPN                 SETA &ZOPN+1                                      01676700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLAG5'                        01676800
&ZOPO(&ZOPN)          SETC 'DS'                                         01676900
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01677000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01677100
.*-------------------------------------------------------------------   01677200
.***AM.L09  XRSV0635 CL1                                                01677300
&ZOPN                 SETA &ZOPN+1                                      01677400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0635'                         01677500
&ZOPO(&ZOPN)          SETC 'DS'                                         01677600
&ZOPV(&ZOPN)          SETC 'CL1'                                        01677700
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01677800
.*-------------------------------------------------------------------   01677900
.***AM.L09  XCMDFLAG6 BL.8                                              01678000
&ZOPN                 SETA &ZOPN+1                                      01678100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLAG6'                        01678200
&ZOPO(&ZOPN)          SETC 'DS'                                         01678300
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01678400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01678500
.*-------------------------------------------------------------------   01678600
.***AM.L09  XCMDFLAG8 BL.8                                              01678700
&ZOPN                 SETA &ZOPN+1                                      01678800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLAG8'                        01678900
&ZOPO(&ZOPN)          SETC 'DS'                                         01679000
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01679100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01679200
.*-------------------------------------------------------------------   01679300
.***AM.L09  XRSV0636 CL3                                                01679400
&ZOPN                 SETA &ZOPN+1                                      01679500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0636'                         01679600
&ZOPO(&ZOPN)          SETC 'DS'                                         01679700
&ZOPV(&ZOPN)          SETC 'CL3'                                        01679800
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01679900
.*-------------------------------------------------------------------   01680000
.***AM.PJR1 DEFINED ON XOFF8                                            01680100
&ZOPN                 SETA &ZOPN+1                                      01680200
&ZOPL(&ZOPN)          SETC ' '                                          01680300
&ZOPO(&ZOPN)          SETC 'ORG'                                        01680400
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+108'                              01680500
&ZOPD(&ZOPN)          SETC ' '                                          01680600
.*-------------------------------------------------------------------   01680700
.***AM.L09  XSTARTINDEX2 CL2                                            01680800
&ZOPN                 SETA &ZOPN+1                                      01680900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTARTINDEX2'                     01681000
&ZOPO(&ZOPN)          SETC 'DS'                                         01681100
&ZOPV(&ZOPN)          SETC 'CL2'                                        01681200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01681300
.*-------------------------------------------------------------------   01681400
.***AM.L09  XENDINDEX2 CL2                                              01681500
&ZOPN                 SETA &ZOPN+1                                      01681600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENDINDEX2'                       01681700
&ZOPO(&ZOPN)          SETC 'DS'                                         01681800
&ZOPV(&ZOPN)          SETC 'CL2'                                        01681900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01682000
.*-------------------------------------------------------------------   01682100
.***AM.L09  XRSV0637 CL4                                                01682200
&ZOPN                 SETA &ZOPN+1                                      01682300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0637'                         01682400
&ZOPO(&ZOPN)          SETC 'DS'                                         01682500
&ZOPV(&ZOPN)          SETC 'CL4'                                        01682600
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01682700
.*-------------------------------------------------------------------   01682800
.***AM.PJR1 DEFINED ON XOFF8                                            01682900
&ZOPN                 SETA &ZOPN+1                                      01683000
&ZOPL(&ZOPN)          SETC ' '                                          01683100
&ZOPO(&ZOPN)          SETC 'ORG'                                        01683200
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+108'                              01683300
&ZOPD(&ZOPN)          SETC ' '                                          01683400
.*-------------------------------------------------------------------   01683500
.***AM.L09  XRSV0638 CL4                                                01683600
&ZOPN                 SETA &ZOPN+1                                      01683700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0638'                         01683800
&ZOPO(&ZOPN)          SETC 'DS'                                         01683900
&ZOPV(&ZOPN)          SETC 'CL4'                                        01684000
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01684100
.*-------------------------------------------------------------------   01684200
.***AM.L09  XDATAOFFSET XL2                                             01684300
&ZOPN                 SETA &ZOPN+1                                      01684400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATAOFFSET'                      01684500
&ZOPO(&ZOPN)          SETC 'DS'                                         01684600
&ZOPV(&ZOPN)          SETC 'XL2'                                        01684700
&ZOPD(&ZOPN)          SETC '++ &ZXDATAOFFSET '                          01684800
.*-------------------------------------------------------------------   01684900
.***AM.PJR1 DEFINED ON XCUNBAREA                                        01685000
&ZOPN                 SETA &ZOPN+1                                      01685100
&ZOPL(&ZOPN)          SETC ' '                                          01685200
&ZOPO(&ZOPN)          SETC 'ORG'                                        01685300
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+116'                              01685400
&ZOPD(&ZOPN)          SETC ' '                                          01685500
.*-------------------------------------------------------------------   01685600
.***AM.L09  XNAME CL16                                                  01685700
&ZOPN                 SETA &ZOPN+1                                      01685800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNAME'                            01685900
&ZOPO(&ZOPN)          SETC 'DS'                                         01686000
&ZOPV(&ZOPN)          SETC 'CL16'                                       01686100
&ZOPD(&ZOPN)          SETC '++ &ZXNAME '                                01686200
.*-------------------------------------------------------------------   01686300
.***AM.L09  XOFF32 CL16                                                 01686400
&ZOPN                 SETA &ZOPN+1                                      01686500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOFF32'                           01686600
&ZOPO(&ZOPN)          SETC 'DS'                                         01686700
&ZOPV(&ZOPN)          SETC 'CL16'                                       01686800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01686900
.*-------------------------------------------------------------------   01687000
.***AM.PJR1 DEFINED ON XOFF32                                           01687100
&ZOPN                 SETA &ZOPN+1                                      01687200
&ZOPL(&ZOPN)          SETC ' '                                          01687300
&ZOPO(&ZOPN)          SETC 'ORG'                                        01687400
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+132'                              01687500
&ZOPD(&ZOPN)          SETC ' '                                          01687600
.*-------------------------------------------------------------------   01687700
.***AM.L09  XOLDNAME CL16                                               01687800
&ZOPN                 SETA &ZOPN+1                                      01687900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOLDNAME'                         01688000
&ZOPO(&ZOPN)          SETC 'DS'                                         01688100
&ZOPV(&ZOPN)          SETC 'CL16'                                       01688200
&ZOPD(&ZOPN)          SETC '++ &ZXOLDNAME '                             01688300
.*-------------------------------------------------------------------   01688400
.***AM.PJR1 DEFINED ON XOFF32                                           01688500
&ZOPN                 SETA &ZOPN+1                                      01688600
&ZOPL(&ZOPN)          SETC ' '                                          01688700
&ZOPO(&ZOPN)          SETC 'ORG'                                        01688800
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+132'                              01688900
&ZOPD(&ZOPN)          SETC ' '                                          01689000
.*-------------------------------------------------------------------   01689100
.***AM.L09  XCMDFLAG2 BL.8                                              01689200
&ZOPN                 SETA &ZOPN+1                                      01689300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLAG2'                        01689400
&ZOPO(&ZOPN)          SETC 'DS'                                         01689500
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01689600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01689700
.*-------------------------------------------------------------------   01689800
.***AM.L09  XPROCESSID2 CL1                                             01689900
&ZOPN                 SETA &ZOPN+1                                      01690000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPROCESSID2'                      01690100
&ZOPO(&ZOPN)          SETC 'DS'                                         01690200
&ZOPV(&ZOPN)          SETC 'CL1'                                        01690300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01690400
.*-------------------------------------------------------------------   01690500
.***AM.L09  XRSV0641 CL1                                                01690600
&ZOPN                 SETA &ZOPN+1                                      01690700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0641'                         01690800
&ZOPO(&ZOPN)          SETC 'DS'                                         01690900
&ZOPV(&ZOPN)          SETC 'CL1'                                        01691000
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01691100
.*-------------------------------------------------------------------   01691200
.***AM.L09  XDAS1 CL1                                                   01691300
&ZOPN                 SETA &ZOPN+1                                      01691400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDAS1'                            01691500
&ZOPO(&ZOPN)          SETC 'DS'                                         01691600
&ZOPV(&ZOPN)          SETC 'CL1'                                        01691700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01691800
.*-------------------------------------------------------------------   01691900
.***AM.L09  XRSV0642 CL12                                               01692000
&ZOPN                 SETA &ZOPN+1                                      01692100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0642'                         01692200
&ZOPO(&ZOPN)          SETC 'DS'                                         01692300
&ZOPV(&ZOPN)          SETC 'CL12'                                       01692400
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01692500
.*-------------------------------------------------------------------   01692600
.***AM.PJR1 DEFINED ON XOFF32                                           01692700
&ZOPN                 SETA &ZOPN+1                                      01692800
&ZOPL(&ZOPN)          SETC ' '                                          01692900
&ZOPO(&ZOPN)          SETC 'ORG'                                        01693000
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+132'                              01693100
&ZOPD(&ZOPN)          SETC ' '                                          01693200
.*-------------------------------------------------------------------   01693300
.***AM.L09  XRSV0643 CL3                                                01693400
&ZOPN                 SETA &ZOPN+1                                      01693500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0643'                         01693600
&ZOPO(&ZOPN)          SETC 'DS'                                         01693700
&ZOPV(&ZOPN)          SETC 'CL3'                                        01693800
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01693900
.*-------------------------------------------------------------------   01694000
.***AM.L09  XDBS3 CL1                                                   01694100
&ZOPN                 SETA &ZOPN+1                                      01694200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDBS3'                            01694300
&ZOPO(&ZOPN)          SETC 'DS'                                         01694400
&ZOPV(&ZOPN)          SETC 'CL1'                                        01694500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01694600
.*-------------------------------------------------------------------   01694700
.***AM.L09  XRSV0644 CL12                                               01694800
&ZOPN                 SETA &ZOPN+1                                      01694900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0644'                         01695000
&ZOPO(&ZOPN)          SETC 'DS'                                         01695100
&ZOPV(&ZOPN)          SETC 'CL12'                                       01695200
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01695300
.*-------------------------------------------------------------------   01695400
.***AM.PJR1 DEFINED ON XOFF32                                           01695500
&ZOPN                 SETA &ZOPN+1                                      01695600
&ZOPL(&ZOPN)          SETC ' '                                          01695700
&ZOPO(&ZOPN)          SETC 'ORG'                                        01695800
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+132'                              01695900
&ZOPD(&ZOPN)          SETC ' '                                          01696000
.*-------------------------------------------------------------------   01696100
.***AM.L09  XRSV0645 CL4                                                01696200
&ZOPN                 SETA &ZOPN+1                                      01696300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0645'                         01696400
&ZOPO(&ZOPN)          SETC 'DS'                                         01696500
&ZOPV(&ZOPN)          SETC 'CL4'                                        01696600
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01696700
.*-------------------------------------------------------------------   01696800
.***AM.L09  XCMDFLAG7 BL.8                                              01696900
&ZOPN                 SETA &ZOPN+1                                      01697000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLAG7'                        01697100
&ZOPO(&ZOPN)          SETC 'DS'                                         01697200
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01697300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01697400
.*-------------------------------------------------------------------   01697500
.***AM.L09  XRSV0646 CL11                                               01697600
&ZOPN                 SETA &ZOPN+1                                      01697700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0646'                         01697800
&ZOPO(&ZOPN)          SETC 'DS'                                         01697900
&ZOPV(&ZOPN)          SETC 'CL11'                                       01698000
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01698100
.*-------------------------------------------------------------------   01698200
.***AM.PJR1 DEFINED ON XOFF32                                           01698300
&ZOPN                 SETA &ZOPN+1                                      01698400
&ZOPL(&ZOPN)          SETC ' '                                          01698500
&ZOPO(&ZOPN)          SETC 'ORG'                                        01698600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+132'                              01698700
&ZOPD(&ZOPN)          SETC ' '                                          01698800
.*-------------------------------------------------------------------   01698900
.***AM.L09  XVERSCOMP3 CL8                                              01699000
&ZOPN                 SETA &ZOPN+1                                      01699100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSCOMP3'                       01699200
&ZOPO(&ZOPN)          SETC 'DS'                                         01699300
&ZOPV(&ZOPN)          SETC 'CL8'                                        01699400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01699500
.*-------------------------------------------------------------------   01699600
.***AM.PJR1 DEFINED ON XOFF48                                           01699700
&ZOPN                 SETA &ZOPN+1                                      01699800
&ZOPL(&ZOPN)          SETC ' '                                          01699900
&ZOPO(&ZOPN)          SETC 'ORG'                                        01700000
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+148'                              01700100
&ZOPD(&ZOPN)          SETC ' '                                          01700200
.*-------------------------------------------------------------------   01700300
.***AM.L09  XVECTORINDEX F                                              01700400
&ZOPN                 SETA &ZOPN+1                                      01700500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVECTORINDEX'                     01700600
&ZOPO(&ZOPN)          SETC 'DS'                                         01700700
&ZOPV(&ZOPN)          SETC 'F'                                          01700800
&ZOPD(&ZOPN)          SETC '++ &ZXVECTORINDEX '                         01700900
.*-------------------------------------------------------------------   01701000
.***AM.L09  XRSV0502 CL4                                                01701100
&ZOPN                 SETA &ZOPN+1                                      01701200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0502'                         01701300
&ZOPO(&ZOPN)          SETC 'DS'                                         01701400
&ZOPV(&ZOPN)          SETC 'CL4'                                        01701500
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01701600
.*-------------------------------------------------------------------   01701700
.***AM.L09  XUSERDATA2 CL8                                              01701800
&ZOPN                 SETA &ZOPN+1                                      01701900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUSERDATA2'                       01702000
&ZOPO(&ZOPN)          SETC 'DS'                                         01702100
&ZOPV(&ZOPN)          SETC 'CL8'                                        01702200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01702300
.*-------------------------------------------------------------------   01702400
.***AM.L09  XNEWVERS1 CL8                                               01702500
&ZOPN                 SETA &ZOPN+1                                      01702600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNEWVERS1'                        01702700
&ZOPO(&ZOPN)          SETC 'DS'                                         01702800
&ZOPV(&ZOPN)          SETC 'CL8'                                        01702900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01703000
.*-------------------------------------------------------------------   01703100
.***AM.L09  XVERSCOMP2 CL8                                              01703200
&ZOPN                 SETA &ZOPN+1                                      01703300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSCOMP2'                       01703400
&ZOPO(&ZOPN)          SETC 'DS'                                         01703500
&ZOPV(&ZOPN)          SETC 'CL8'                                        01703600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01703700
.*-------------------------------------------------------------------   01703800
.***AM.L09  XNEWVERS2 CL8                                               01703900
&ZOPN                 SETA &ZOPN+1                                      01704000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNEWVERS2'                        01704100
&ZOPO(&ZOPN)          SETC 'DS'                                         01704200
&ZOPV(&ZOPN)          SETC 'CL8'                                        01704300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01704400
.*-------------------------------------------------------------------   01704500
.***AM.L09  XCMDFLAG9 BL.8                                              01704600
&ZOPN                 SETA &ZOPN+1                                      01704700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLAG9'                        01704800
&ZOPO(&ZOPN)          SETC 'DS'                                         01704900
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01705000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01705100
.*-------------------------------------------------------------------   01705200
.***AM.L09  XRSV0503 CL7                                                01705300
&ZOPN                 SETA &ZOPN+1                                      01705400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0503'                         01705500
&ZOPO(&ZOPN)          SETC 'DS'                                         01705600
&ZOPV(&ZOPN)          SETC 'CL7'                                        01705700
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01705800
.*-------------------------------------------------------------------   01705900
.***AM.PJR1 DEFINED ON XCMDFLAG9                                        01706000
&ZOPN                 SETA &ZOPN+1                                      01706100
&ZOPL(&ZOPN)          SETC ' '                                          01706200
&ZOPO(&ZOPN)          SETC 'ORG'                                        01706300
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+188'                              01706400
&ZOPD(&ZOPN)          SETC ' '                                          01706500
.*-------------------------------------------------------------------   01706600
.***AM.L09  XCMDFLAG9A BL.8                                             01706700
&ZOPN                 SETA &ZOPN+1                                      01706800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLAG9A'                       01706900
&ZOPO(&ZOPN)          SETC 'DS'                                         01707000
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01707100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01707200
.*-------------------------------------------------------------------   01707300
.***AM.PJR1 DEFINED ON XUSERDATA2                                       01707400
&ZOPN                 SETA &ZOPN+1                                      01707500
&ZOPL(&ZOPN)          SETC ' '                                          01707600
&ZOPO(&ZOPN)          SETC 'ORG'                                        01707700
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+156'                              01707800
&ZOPD(&ZOPN)          SETC ' '                                          01707900
.*-------------------------------------------------------------------   01708000
.***AM.L09  XVERSCOMP1 CL8                                              01708100
&ZOPN                 SETA &ZOPN+1                                      01708200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSCOMP1'                       01708300
&ZOPO(&ZOPN)          SETC 'DS'                                         01708400
&ZOPV(&ZOPN)          SETC 'CL8'                                        01708500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01708600
.*-------------------------------------------------------------------   01708700
.***AM.L09  XCMDFLAG3 BL.8                                              01708800
&ZOPN                 SETA &ZOPN+1                                      01708900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLAG3'                        01709000
&ZOPO(&ZOPN)          SETC 'DS'                                         01709100
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01709200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01709300
.*-------------------------------------------------------------------   01709400
.***AM.L09  XPROCESSID3 CL1                                             01709500
&ZOPN                 SETA &ZOPN+1                                      01709600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPROCESSID3'                      01709700
&ZOPO(&ZOPN)          SETC 'DS'                                         01709800
&ZOPV(&ZOPN)          SETC 'CL1'                                        01709900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01710000
.*-------------------------------------------------------------------   01710100
.***AM.L09  XRSV0649 CL1                                                01710200
&ZOPN                 SETA &ZOPN+1                                      01710300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0649'                         01710400
&ZOPO(&ZOPN)          SETC 'DS'                                         01710500
&ZOPV(&ZOPN)          SETC 'CL1'                                        01710600
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01710700
.*-------------------------------------------------------------------   01710800
.***AM.L09  XDAS2 CL1                                                   01710900
&ZOPN                 SETA &ZOPN+1                                      01711000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDAS2'                            01711100
&ZOPO(&ZOPN)          SETC 'DS'                                         01711200
&ZOPV(&ZOPN)          SETC 'CL1'                                        01711300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01711400
.*-------------------------------------------------------------------   01711500
.***AM.L09  XRSV0647 CL4                                                01711600
&ZOPN                 SETA &ZOPN+1                                      01711700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0647'                         01711800
&ZOPO(&ZOPN)          SETC 'DS'                                         01711900
&ZOPV(&ZOPN)          SETC 'CL4'                                        01712000
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01712100
.*-------------------------------------------------------------------   01712200
.***AM.PJR1 DEFINED ON XVERSCOMP2                                       01712300
&ZOPN                 SETA &ZOPN+1                                      01712400
&ZOPL(&ZOPN)          SETC ' '                                          01712500
&ZOPO(&ZOPN)          SETC 'ORG'                                        01712600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+172'                              01712700
&ZOPD(&ZOPN)          SETC ' '                                          01712800
.*-------------------------------------------------------------------   01712900
.***AM.L09  XCMDFLAG10 BL.8                                             01713000
&ZOPN                 SETA &ZOPN+1                                      01713100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLAG10'                       01713200
&ZOPO(&ZOPN)          SETC 'DS'                                         01713300
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01713400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01713500
.*-------------------------------------------------------------------   01713600
.***AM.L09  XRSV0648 CL7                                                01713700
&ZOPN                 SETA &ZOPN+1                                      01713800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0648'                         01713900
&ZOPO(&ZOPN)          SETC 'DS'                                         01714000
&ZOPV(&ZOPN)          SETC 'CL7'                                        01714100
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01714200
.*-------------------------------------------------------------------   01714300
.***AM.PJR1 DEFINED ON XOFF48                                           01714400
&ZOPN                 SETA &ZOPN+1                                      01714500
&ZOPL(&ZOPN)          SETC ' '                                          01714600
&ZOPO(&ZOPN)          SETC 'ORG'                                        01714700
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+148'                              01714800
&ZOPD(&ZOPN)          SETC ' '                                          01714900
.*-------------------------------------------------------------------   01715000
.***AM.L09  XCMDFLAG11 BL.8                                             01715100
&ZOPN                 SETA &ZOPN+1                                      01715200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDFLAG11'                       01715300
&ZOPO(&ZOPN)          SETC 'DS'                                         01715400
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01715500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            01715600
.*-------------------------------------------------------------------   01715700
.***AM.PJR1 DEFINED ON XOFF48                                           01715800
&ZOPN                 SETA &ZOPN+1                                      01715900
&ZOPL(&ZOPN)          SETC ' '                                          01716000
&ZOPO(&ZOPN)          SETC 'ORG'                                        01716100
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+148'                              01716200
&ZOPD(&ZOPN)          SETC ' '                                          01716300
.*-------------------------------------------------------------------   01716400
.***AM.L09  XRSV0650 CL64                                               01716500
&ZOPN                 SETA &ZOPN+1                                      01716600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0650'                         01716700
&ZOPO(&ZOPN)          SETC 'DS'                                         01716800
&ZOPV(&ZOPN)          SETC 'CL64'                                       01716900
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               01717000
.*-------------------------------------------------------------------   01717100
.***AM.L09  XCASTOUTLIST CL128                                          01717200
&ZOPN                 SETA &ZOPN+1                                      01717300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCASTOUTLIST'                     01717400
&ZOPO(&ZOPN)          SETC 'DS'                                         01717500
&ZOPV(&ZOPN)          SETC 'CL128'                                      01717600
&ZOPD(&ZOPN)          SETC '++ &ZXCASTOUTLIST '                         01717700
&ZOPN                 SETA &ZOPN+1                                      01717800
&ZOPL(&ZOPN)          SETC ' '                                          01717900
&ZOPO(&ZOPN)          SETC 'ORG'                                        01718000
&ZOPV(&ZOPN)          SETC '&XMFCTRL._PL_END'                           01718100
&ZOPD(&ZOPN)          SETC 'RESET LOCATION COUNTER'                     01718200
.*-------------------------------------------------------------------   01718300
.***AM.L10 END OF IXLCACHE LIST PARAMETERS                              01718400
&ZOPN                 SETA &ZOPN+1                                      01718500
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 01718600
&ZOPO(&ZOPN)          SETC 'EQU'                                        01718700
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 01718800
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         01718900
.*                                                                      01719000
&ZOPN                 SETA &ZOPN+1                                      01719100
&ZOPL(&ZOPN)          SETC ' '                                          01719200
&ZOPO(&ZOPN)          SETC 'SPACE'                                      01719300
&ZOPV(&ZOPN)          SETC '1'                                          01719400
&ZOPD(&ZOPN)          SETC ' '                                          01719500
.*-------------------------------------------------------------------   01719600
.***AL.L12 IXLCACHE FMT=LIST MF=S!L PARAMETERS                          01719700
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         01719800
.*                                                                      01719900
&ZOPN                 SETA  &ZOPN+1                                     01720000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                01720100
&ZOPO(&ZOPN)          SETC  'DC'                                        01720200
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   01720300
&ZOPD(&ZOPN)          SETC  '++ IXLCACHE ARG PARMS'                     01720400
.*                                                                      01720500
.ZLMFSLX              ANOP  ,                                           01720600
.*-------------------------------------------------------------------   01720700
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          01720800
&ZPLLEN               SETA 168                                          01720900
.*                                                                      01721000
                      AIF  (&XPLISTVER LT 3).ZLLEN2Z                    01721100
&ZPLLEN               SETA 192                                          01721200
.ZLLEN2Z              ANOP  ,                                           01721300
.*                                                                      01721400
                      AIF  (&XPLISTVER LT 6).ZLLEN3Z                    01721500
&ZPLLEN               SETA 340                                          01721600
.ZLLEN3Z              ANOP  ,                                           01721700
.*                                                                      01721800
.******************************************************************     01721900
.***AI.L01 IXLCACHE FMT=LIST FILL IN PARAMETER AREA                     01722000
.******************************************************************     01722100
                      ACTR  10000                                       01722200
&ZCVAL                SETC  'LA'           ASSUME XA MODE               01722300
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    01722400
&ZCVAL                SETC  'LAE'          XAX MODE                     01722500
.ZIMFXA               ANOP ,                                            01722600
.*                                                                      01722700
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    01722800
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         01722900
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 01723000
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                01723100
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 01723200
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                01723300
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   01723400
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    01723500
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   01723600
&ZOPN                 SETA  &ZOPN+1                                     01723700
&ZOPL(&ZOPN)          SETC  ' '                                         01723800
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01723900
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              01724000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       01724100
                      AGO   .ZIMFNX                                     01724200
.*                                                                      01724300
.ZIMFN2               ANOP ,                                            01724400
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     01724500
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     01724600
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  01724700
&ZOPN                 SETA  &ZOPN+1                                     01724800
&ZOPL(&ZOPN)          SETC  ' '                                         01724900
&ZOPO(&ZOPN)          SETC  'LAE'                                       01725000
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  01725100
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       01725200
                      AGO   .ZIMFNX                                     01725300
.ZIMFNX1              ANOP ,                                            01725400
&ZOPN                 SETA  &ZOPN+1                                     01725500
&ZOPL(&ZOPN)          SETC  ' '                                         01725600
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01725700
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                01725800
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       01725900
.ZIMFNX               ANOP ,                                            01726000
.********************************************************************   01726100
.***AI.L02 IXLCACHE FMT=LIST INITIALIZE PARAMETER AREA                  01726200
.********************************************************************   01726300
.***AI.L03 MF=(SLE)                                                     01726400
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      01726500
&ZAWRK                SETA  0                                           01726600
&ZN                   SETA  &ZPLLEN                                     01726700
.ZCLRCONT             AIF   (&ZN LE 256).ZCLRX                          01726800
.*                                                                      01726900
&ZOPN                 SETA  &ZOPN+1                                     01727000
&ZOPL(&ZOPN)          SETC  ' '                                         01727100
&ZOPO(&ZOPN)          SETC  'XC'                                        01727200
&ZOPV(&ZOPN)          SETC  '&ZAWRK.(256,1),&ZAWRK.(1)'                 01727300
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             01727400
.*                                                                      01727500
&ZAWRK                SETA &ZAWRK+256                                   01727600
&ZN                   SETA  &ZN-256                                     01727700
                      AGO   .ZCLRCONT                                   01727800
.*                                                                      01727900
.ZCLRX                ANOP  ,                                           01728000
.*                                                                      01728100
&ZOPN                 SETA  &ZOPN+1                                     01728200
&ZOPL(&ZOPN)          SETC  ' '                                         01728300
&ZOPO(&ZOPN)          SETC  'XC'                                        01728400
&ZOPV(&ZOPN)          SETC  '&ZAWRK.(&ZN,1),&ZAWRK.(1)'                 01728500
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             01728600
.ZIMFLX               ANOP  ,                                           01728700
.*-------------------------------------------------------------------   01728800
.***AI.LVER01                                                           01728900
                      AIF  (&XPLISTVER LT 3).ZI4Z                       01729000
.*-------------------------------------------------------------------   01729100
.***AI.LVER02                                                           01729200
.ZI4Z                 ANOP  ,                                           01729300
.*-------------------------------------------------------------------   01729400
.***AI.LVER01                                                           01729500
                      AIF  (&XPLISTVER LT 6).ZI5Z                       01729600
.*-------------------------------------------------------------------   01729700
.***AI.LVER02                                                           01729800
.ZI5Z                 ANOP  ,                                           01729900
.*-------------------------------------------------------------------   01730000
.***AI.L04B XVERSION XL1                                                01730100
                      AIF   (&XPLISTVER EQ 0).ZIMFVZ                    01730200
&ZOPN                 SETA  &ZOPN+1                                     01730300
&ZOPL(&ZOPN)          SETC  ' '                                         01730400
&ZOPO(&ZOPN)          SETC  'MVI'                                       01730500
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           01730600
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     01730700
.ZIMFVZ               ANOP  ,                                           01730800
.*-------------------------------------------------------------------   01730900
.***AI.L18  XAXIOVERRIDE XL1                                            01731000
         AIF   ('&XAXIOVERRIDE' NE '0').ZI10                            01731100
&ZXAXIOVERRIDE        SETC  ''             RESET INPUT/OUTPUT           01731200
.ZI10                 ANOP  ,                                           01731300
.*-------------------------------------------------------------------   01731400
.***AI.L25  XAXIOVERRIDE XL1                                            01731500
                      AIF   ('&ZXAXIOVERRIDE' EQ '').ZI10E              01731600
                      AIF   ('&ZXAXIOVERRIDE' EQ 'OUTPUT').ZI10E        01731700
&ZCGPR                SETC  '&XAXIOVERRIDE'                             01731800
.*                                                                      01731900
                      AIF   ('&XAXIOVERRIDE'(1,1) NE '(').ZI10B         01732000
&ZCGPR   SETC  '0('.'&XAXIOVERRIDE'(2,K'&XAXIOVERRIDE-2).')'            01732100
                      AGO   .ZI10D                                      01732200
.ZI10B                ANOP  ,                                           01732300
.*                                                                      01732400
&ZC                   SETC  '&XAXIOVERRIDE'(1,1)                        01732500
                      AIF   (T'&ZC NE 'N').ZI10D                        01732600
&ZC                   SETC  '&XAXIOVERRIDE'                             01732700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI10D               01732800
&ZCGPR                SETC  '=AL1(&XAXIOVERRIDE)'                       01732900
.*                                                                      01733000
.ZI10D                ANOP  ,                                           01733100
.*                                                                      01733200
&ZOPN                 SETA  &ZOPN+1                                     01733300
&ZOPL(&ZOPN)          SETC  ' '                                         01733400
&ZOPO(&ZOPN)          SETC  'MVC'                                       01733500
&ZOPV(&ZOPN)          SETC  '6(1,1),&ZCGPR'                             01733600
&ZOPD(&ZOPN)          SETC  '++ &ZXAXIOVERRIDE XAXIOVERRIDE'            01733700
.*                                                                      01733800
.ZI10E                ANOP  ,                                           01733900
.*-------------------------------------------------------------------   01734000
.***AI.L18  XBUFSTGKEY XL1                                              01734100
         AIF   ('&XBUFSTGKEY' NE 'CALLERS_KEY').ZI12                    01734200
&ZXBUFSTGKEY          SETC  ''             RESET INPUT/OUTPUT           01734300
.ZI12                 ANOP  ,                                           01734400
.*-------------------------------------------------------------------   01734500
.***AI.L25  XBUFSTGKEY XL1                                              01734600
                      AIF   ('&ZXBUFSTGKEY' EQ '').ZI12E                01734700
                      AIF   ('&ZXBUFSTGKEY' EQ 'OUTPUT').ZI12E          01734800
&ZCGPR                SETC  '&XBUFSTGKEY'                               01734900
.*                                                                      01735000
                      AIF   ('&XBUFSTGKEY'(1,1) NE '(').ZI12B           01735100
&ZCGPR   SETC  '0('.'&XBUFSTGKEY'(2,K'&XBUFSTGKEY-2).')'                01735200
                      AGO   .ZI12D                                      01735300
.ZI12B                ANOP  ,                                           01735400
.*                                                                      01735500
&ZC                   SETC  '&XBUFSTGKEY'(1,1)                          01735600
                      AIF   (T'&ZC NE 'N').ZI12D                        01735700
&ZC                   SETC  '&XBUFSTGKEY'                               01735800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI12D               01735900
&ZCGPR                SETC  '=BL1''&XBUFSTGKEY'''                       01736000
.*                                                                      01736100
.ZI12D                ANOP  ,                                           01736200
.*                                                                      01736300
&ZOPN                 SETA  &ZOPN+1                                     01736400
&ZOPL(&ZOPN)          SETC  ' '                                         01736500
&ZOPO(&ZOPN)          SETC  'MVC'                                       01736600
&ZOPV(&ZOPN)          SETC  '9(1,1),&ZCGPR'                             01736700
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFSTGKEY XBUFSTGKEY'                01736800
.*                                                                      01736900
.ZI12E                ANOP  ,                                           01737000
.*-------------------------------------------------------------------   01737100
.***AI.L18  XANSLEN XL2                                                 01737200
         AIF   ('&XANSLEN' NE 'NO_ANSLEN').ZI13                         01737300
&ZXANSLEN             SETC  ''             RESET INPUT/OUTPUT           01737400
.ZI13                 ANOP  ,                                           01737500
.*-------------------------------------------------------------------   01737600
.***AI.L25  XANSLEN XL2                                                 01737700
                      AIF   ('&ZXANSLEN' EQ '').ZI13E                   01737800
                      AIF   ('&ZXANSLEN' EQ 'OUTPUT').ZI13E             01737900
&ZCGPR                SETC  '&XANSLEN'                                  01738000
.*                                                                      01738100
                      AIF   ('&XANSLEN'(1,1) NE '(').ZI13B              01738200
&ZCGPR   SETC  '0('.'&XANSLEN'(2,K'&XANSLEN-2).')'                      01738300
                      AGO   .ZI13D                                      01738400
.ZI13B                ANOP  ,                                           01738500
.*                                                                      01738600
&ZC                   SETC  '&XANSLEN'(1,1)                             01738700
                      AIF   (T'&ZC NE 'N').ZI13D                        01738800
&ZC                   SETC  '&XANSLEN'                                  01738900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI13D               01739000
&ZCGPR                SETC  '=AL2(&XANSLEN)'                            01739100
.*                                                                      01739200
.ZI13D                ANOP  ,                                           01739300
.*                                                                      01739400
&ZOPN                 SETA  &ZOPN+1                                     01739500
&ZOPL(&ZOPN)          SETC  ' '                                         01739600
&ZOPO(&ZOPN)          SETC  'MVC'                                       01739700
&ZOPV(&ZOPN)          SETC  '10(2,1),&ZCGPR'                            01739800
&ZOPD(&ZOPN)          SETC  '++ &ZXANSLEN XANSLEN'                      01739900
.*                                                                      01740000
.ZI13E                ANOP  ,                                           01740100
.*-------------------------------------------------------------------   01740200
.***AI.L25  XCONTOKEN CL16                                              01740300
                      AIF   ('&ZXCONTOKEN' EQ '').ZI14E                 01740400
                      AIF   ('&ZXCONTOKEN' EQ 'OUTPUT').ZI14E           01740500
&ZCGPR                SETC  '&XCONTOKEN'                                01740600
.*                                                                      01740700
                      AIF   ('&XCONTOKEN'(1,1) NE '(').ZI14B            01740800
&ZCGPR   SETC  '0('.'&XCONTOKEN'(2,K'&XCONTOKEN-2).')'                  01740900
.ZI14B                ANOP  ,                                           01741000
.*                                                                      01741100
&ZOPN                 SETA  &ZOPN+1                                     01741200
&ZOPL(&ZOPN)          SETC  ' '                                         01741300
&ZOPO(&ZOPN)          SETC  'MVC'                                       01741400
&ZOPV(&ZOPN)          SETC  '12(16,1),&ZCGPR'                           01741500
&ZOPD(&ZOPN)          SETC  '++ &ZXCONTOKEN XCONTOKEN'                  01741600
.*                                                                      01741700
.ZI14E                ANOP  ,                                           01741800
.*-------------------------------------------------------------------   01741900
.***AI.L18  XREQDATA CL8                                                01742000
         AIF   ('&XREQDATA' NE 'NO_REQDATA').ZI18                       01742100
&ZXREQDATA            SETC  ''             RESET INPUT/OUTPUT           01742200
.ZI18                 ANOP  ,                                           01742300
.*-------------------------------------------------------------------   01742400
.***AI.L25  XREQDATA CL8                                                01742500
                      AIF   ('&ZXREQDATA' EQ '').ZI18E                  01742600
                      AIF   ('&ZXREQDATA' EQ 'OUTPUT').ZI18E            01742700
&ZCGPR                SETC  '&XREQDATA'                                 01742800
.*                                                                      01742900
                      AIF   ('&XREQDATA'(1,1) NE '(').ZI18B             01743000
&ZCGPR   SETC  '0('.'&XREQDATA'(2,K'&XREQDATA-2).')'                    01743100
.ZI18B                ANOP  ,                                           01743200
.*                                                                      01743300
&ZOPN                 SETA  &ZOPN+1                                     01743400
&ZOPL(&ZOPN)          SETC  ' '                                         01743500
&ZOPO(&ZOPN)          SETC  'MVC'                                       01743600
&ZOPV(&ZOPN)          SETC  '56(8,1),&ZCGPR'                            01743700
&ZOPD(&ZOPN)          SETC  '++ &ZXREQDATA XREQDATA'                    01743800
.*                                                                      01743900
.ZI18E                ANOP  ,                                           01744000
.*-------------------------------------------------------------------   01744100
.***AI.L18  XREQID CL8                                                  01744200
         AIF   ('&XREQID' NE 'NO_REQID').ZI19                           01744300
&ZXREQID              SETC  ''             RESET INPUT/OUTPUT           01744400
.ZI19                 ANOP  ,                                           01744500
.*-------------------------------------------------------------------   01744600
.***AI.L25  XREQID CL8                                                  01744700
                      AIF   ('&ZXREQID' EQ '').ZI19E                    01744800
                      AIF   ('&ZXREQID' EQ 'OUTPUT').ZI19E              01744900
&ZCGPR                SETC  '&XREQID'                                   01745000
.*                                                                      01745100
                      AIF   ('&XREQID'(1,1) NE '(').ZI19B               01745200
&ZCGPR   SETC  '0('.'&XREQID'(2,K'&XREQID-2).')'                        01745300
.ZI19B                ANOP  ,                                           01745400
.*                                                                      01745500
&ZOPN                 SETA  &ZOPN+1                                     01745600
&ZOPL(&ZOPN)          SETC  ' '                                         01745700
&ZOPO(&ZOPN)          SETC  'MVC'                                       01745800
&ZOPV(&ZOPN)          SETC  '64(8,1),&ZCGPR'                            01745900
&ZOPD(&ZOPN)          SETC  '++ &ZXREQID XREQID'                        01746000
.*                                                                      01746100
.ZI19E                ANOP  ,                                           01746200
.*-------------------------------------------------------------------   01746300
.***AI.L18  XEXTRESTOKEN CL16                                           01746400
         AIF   ('&XEXTRESTOKEN' NE 'NO_EXTRESTOKEN').ZI20               01746500
&ZXEXTRESTOKEN        SETC  ''             RESET INPUT/OUTPUT           01746600
.ZI20                 ANOP  ,                                           01746700
.*-------------------------------------------------------------------   01746800
.***AI.L25  XEXTRESTOKEN CL16                                           01746900
                      AIF   ('&ZXEXTRESTOKEN' EQ '').ZI20E              01747000
                      AIF   ('&ZXEXTRESTOKEN' EQ 'OUTPUT').ZI20E        01747100
&ZCGPR                SETC  '&XEXTRESTOKEN'                             01747200
.*                                                                      01747300
                      AIF   ('&XEXTRESTOKEN'(1,1) NE '(').ZI20B         01747400
&ZCGPR   SETC  '0('.'&XEXTRESTOKEN'(2,K'&XEXTRESTOKEN-2).')'            01747500
.ZI20B                ANOP  ,                                           01747600
.*                                                                      01747700
&ZOPN                 SETA  &ZOPN+1                                     01747800
&ZOPL(&ZOPN)          SETC  ' '                                         01747900
&ZOPO(&ZOPN)          SETC  'MVC'                                       01748000
&ZOPV(&ZOPN)          SETC  '72(16,1),&ZCGPR'                           01748100
&ZOPD(&ZOPN)          SETC  '++ &ZXEXTRESTOKEN XEXTRESTOKEN'            01748200
.*                                                                      01748300
.ZI20E                ANOP  ,                                           01748400
.*-------------------------------------------------------------------   01748500
.***AI.L05 XSHLFLGS1 BL1                                                01748600
&ZW                   SETC  ''                                          01748700
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01748800
.*-------------------------------------------------------------------   01748900
.***AI.L08 XSHLFLGS1 "BUFFER"                                           01749000
.***      BL1'1XXXXXXX'                                                 01749100
         AIF   ('&BUFFER' EQ '').ZI24A                                  01749200
&ZW                   SETC  '&ZW.1'                                     01749300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01749400
                      AGO   .ZI24C                                      01749500
.*                                                                      01749600
.ZI24A                ANOP  ,                                           01749700
&ZW                   SETC  '&ZW.0'                                     01749800
.ZI24C                ANOP  ,                                           01749900
.*-------------------------------------------------------------------   01750000
.***AI.L08 XSHLFLGS1 "BUFLIST"                                          01750100
.***      BL1'X1XXXXXX'                                                 01750200
         AIF   ('&BUFLIST' EQ '').ZI25A                                 01750300
&ZW                   SETC  '&ZW.1'                                     01750400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01750500
                      AGO   .ZI25C                                      01750600
.*                                                                      01750700
.ZI25A                ANOP  ,                                           01750800
&ZW                   SETC  '&ZW.0'                                     01750900
.ZI25C                ANOP  ,                                           01751000
.*-------------------------------------------------------------------   01751100
.***AI.L08 XSHLFLGS1 "ADJAREA"                                          01751200
.***      BL1'XX1XXXXX'                                                 01751300
         AIF   ('&ADJAREA' EQ '').ZI26A                                 01751400
         AIF   ('&ADJAREA' EQ 'NO_ADJAREA').ZI26A                       01751500
&ZW                   SETC  '&ZW.1'                                     01751600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01751700
                      AGO   .ZI26C                                      01751800
.*                                                                      01751900
.ZI26A                ANOP  ,                                           01752000
&ZW                   SETC  '&ZW.0'                                     01752100
.ZI26C                ANOP  ,                                           01752200
.*-------------------------------------------------------------------   01752300
.***AI.L08 XSHLFLGS1 "ANSAREA"                                          01752400
.***      BL1'XXX1XXXX'                                                 01752500
         AIF   ('&ANSAREA' EQ '').ZI27A                                 01752600
         AIF   ('&ANSAREA' EQ 'NO_ANSAREA').ZI27A                       01752700
&ZW                   SETC  '&ZW.1'                                     01752800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01752900
                      AGO   .ZI27C                                      01753000
.*                                                                      01753100
.ZI27A                ANOP  ,                                           01753200
&ZW                   SETC  '&ZW.0'                                     01753300
.ZI27C                ANOP  ,                                           01753400
.*-------------------------------------------------------------------   01753500
.***AI.L08 XSHLFLGS1 "NO"                                               01753600
.***      BL1'XXXX1XXX'                                                 01753700
         AIF   ('&XPAGEABLE' NE 'NO').ZI28A                             01753800
&ZW                   SETC  '&ZW.1'                                     01753900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01754000
                      AGO   .ZI28C                                      01754100
.*                                                                      01754200
.ZI28A                ANOP  ,                                           01754300
&ZW                   SETC  '&ZW.0'                                     01754400
.ZI28C                ANOP  ,                                           01754500
.*-------------------------------------------------------------------   01754600
.***AI.L08 XSHLFLGS1 "BUFSTGKEY"                                        01754700
.***      BL1'XXXXX1XX'                                                 01754800
         AIF   ('&BUFSTGKEY' EQ '').ZI29A                               01754900
         AIF   ('&BUFSTGKEY' EQ 'CALLERS_KEY').ZI29A                    01755000
         AIF   ('&BUFSTGKEY' EQ 'CALLERS_KEY').ZI29A                    01755100
&ZW                   SETC  '&ZW.1'                                     01755200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01755300
                      AGO   .ZI29C                                      01755400
.*                                                                      01755500
.ZI29A                ANOP  ,                                           01755600
&ZW                   SETC  '&ZW.0'                                     01755700
.ZI29C                ANOP  ,                                           01755800
.*-------------------------------------------------------------------   01755900
.***AI.L08 XSHLFLGS1 "REAL"                                             01756000
.***      BL1'XXXXXX1X'                                                 01756100
         AIF   ('&XBUFADDRTYPE' NE 'REAL').ZI30A                        01756200
&ZW                   SETC  '&ZW.10'                                    01756300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01756400
                      AGO   .ZI30C                                      01756500
.*                                                                      01756600
.ZI30A                ANOP  ,                                           01756700
&ZW                   SETC  '&ZW.00'                                    01756800
.ZI30C                ANOP  ,                                           01756900
.*-------------------------------------------------------------------   01757000
.***AI.L11 XSHLFLGS1 BL1                                                01757100
                      AIF   ('&ZCLNG' NE 'YES').ZI30E  ALL ZERO BITS    01757200
&ZOPN                 SETA  &ZOPN+1                                     01757300
&ZOPL(&ZOPN)          SETC  ' '                                         01757400
&ZOPO(&ZOPN)          SETC  'OI'                                        01757500
&ZOPV(&ZOPN)          SETC  '2(1),B''&ZW'''                             01757600
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              01757700
.ZI30E                ANOP  ,                                           01757800
.*-------------------------------------------------------------------   01757900
.***AI.L05 XSHLFLGS2 BL1                                                01758000
&ZW                   SETC  ''                                          01758100
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01758200
.*-------------------------------------------------------------------   01758300
.***AI.L08 XSHLFLGS2 "SYNCECB"                                          01758400
.***      BL1'1XXXXXXX'                                                 01758500
         AIF   ('&XMODE' NE 'SYNCECB').ZI32A                            01758600
&ZW                   SETC  '&ZW.1'                                     01758700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01758800
                      AGO   .ZI32C                                      01758900
.*                                                                      01759000
.ZI32A                ANOP  ,                                           01759100
&ZW                   SETC  '&ZW.0'                                     01759200
.ZI32C                ANOP  ,                                           01759300
.*-------------------------------------------------------------------   01759400
.***AI.L08 XSHLFLGS2 "SYNCEXIT"                                         01759500
.***      BL1'X1XXXXXX'                                                 01759600
         AIF   ('&XMODE' NE 'SYNCEXIT').ZI33A                           01759700
&ZW                   SETC  '&ZW.1'                                     01759800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01759900
                      AGO   .ZI33C                                      01760000
.*                                                                      01760100
.ZI33A                ANOP  ,                                           01760200
&ZW                   SETC  '&ZW.0'                                     01760300
.ZI33C                ANOP  ,                                           01760400
.*-------------------------------------------------------------------   01760500
.***AI.L08 XSHLFLGS2 "SYNCTOKEN"                                        01760600
.***      BL1'XX1XXXXX'                                                 01760700
         AIF   ('&XMODE' NE 'SYNCTOKEN').ZI34A                          01760800
&ZW                   SETC  '&ZW.1'                                     01760900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01761000
                      AGO   .ZI34C                                      01761100
.*                                                                      01761200
.ZI34A                ANOP  ,                                           01761300
&ZW                   SETC  '&ZW.0'                                     01761400
.ZI34C                ANOP  ,                                           01761500
.*-------------------------------------------------------------------   01761600
.***AI.L08 XSHLFLGS2 "ASYNCECB"                                         01761700
.***      BL1'XXX1XXXX'                                                 01761800
         AIF   ('&XMODE' NE 'ASYNCECB').ZI35A                           01761900
&ZW                   SETC  '&ZW.1'                                     01762000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01762100
                      AGO   .ZI35C                                      01762200
.*                                                                      01762300
.ZI35A                ANOP  ,                                           01762400
&ZW                   SETC  '&ZW.0'                                     01762500
.ZI35C                ANOP  ,                                           01762600
.*-------------------------------------------------------------------   01762700
.***AI.L08 XSHLFLGS2 "ASYNCEXIT"                                        01762800
.***      BL1'XXXX1XXX'                                                 01762900
         AIF   ('&XMODE' NE 'ASYNCEXIT').ZI36A                          01763000
&ZW                   SETC  '&ZW.1'                                     01763100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01763200
                      AGO   .ZI36C                                      01763300
.*                                                                      01763400
.ZI36A                ANOP  ,                                           01763500
&ZW                   SETC  '&ZW.0'                                     01763600
.ZI36C                ANOP  ,                                           01763700
.*-------------------------------------------------------------------   01763800
.***AI.L08 XSHLFLGS2 "ASYNCTOKEN"                                       01763900
.***      BL1'XXXXX1XX'                                                 01764000
         AIF   ('&XMODE' NE 'ASYNCTOKEN').ZI37A                         01764100
&ZW                   SETC  '&ZW.1'                                     01764200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01764300
                      AGO   .ZI37C                                      01764400
.*                                                                      01764500
.ZI37A                ANOP  ,                                           01764600
&ZW                   SETC  '&ZW.0'                                     01764700
.ZI37C                ANOP  ,                                           01764800
.*-------------------------------------------------------------------   01764900
.***AI.L08 XSHLFLGS2 "ASYNCNORESPONSE"                                  01765000
.***      BL1'XXXXXX1X'                                                 01765100
         AIF   ('&XMODE' NE 'ASYNCNORESPONSE').ZI38A                    01765200
&ZW                   SETC  '&ZW.10'                                    01765300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01765400
                      AGO   .ZI38C                                      01765500
.*                                                                      01765600
.ZI38A                ANOP  ,                                           01765700
&ZW                   SETC  '&ZW.00'                                    01765800
.ZI38C                ANOP  ,                                           01765900
.*-------------------------------------------------------------------   01766000
.***AI.L11 XSHLFLGS2 BL1                                                01766100
                      AIF   ('&ZCLNG' NE 'YES').ZI38E  ALL ZERO BITS    01766200
&ZOPN                 SETA  &ZOPN+1                                     01766300
&ZOPL(&ZOPN)          SETC  ' '                                         01766400
&ZOPO(&ZOPN)          SETC  'OI'                                        01766500
&ZOPV(&ZOPN)          SETC  '3(1),B''&ZW'''                             01766600
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              01766700
.ZI38E                ANOP  ,                                           01766800
.*-------------------------------------------------------------------   01766900
.***AI.L05 XSHLFLGS3 BL1                                                01767000
&ZW                   SETC  ''                                          01767100
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01767200
.*-------------------------------------------------------------------   01767300
.***AI.L08 XSHLFLGS3 "YES"                                              01767400
.***      BL1'1XXXXXXX'                                                 01767500
         AIF   ('&XREGUSER' NE 'YES').ZI40A                             01767600
&ZW                   SETC  '&ZW.1'                                     01767700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01767800
                      AGO   .ZI40C                                      01767900
.*                                                                      01768000
.ZI40A                ANOP  ,                                           01768100
&ZW                   SETC  '&ZW.0'                                     01768200
.ZI40C                ANOP  ,                                           01768300
.*-------------------------------------------------------------------   01768400
.***AI.L08 XSHLFLGS3 "VECTORINDEX"                                      01768500
.***      BL1'X1XXXXXX'                                                 01768600
         AIF   ('&VECTORINDEX' EQ '').ZI41A                             01768700
         AIF   ('&VECTORINDEX' EQ 'NO_VECTORINDEX').ZI41A               01768800
&ZW                   SETC  '&ZW.1'                                     01768900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01769000
                      AGO   .ZI41C                                      01769100
.*                                                                      01769200
.ZI41A                ANOP  ,                                           01769300
&ZW                   SETC  '&ZW.0'                                     01769400
.ZI41C                ANOP  ,                                           01769500
.*-------------------------------------------------------------------   01769600
.***AI.L08 XSHLFLGS3 "OLDNAME"                                          01769700
.***      BL1'XX1XXXXX'                                                 01769800
         AIF   ('&OLDNAME' EQ '').ZI42A                                 01769900
&ZW                   SETC  '&ZW.100000'                                01770000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01770100
                      AGO   .ZI42C                                      01770200
.*                                                                      01770300
.ZI42A                ANOP  ,                                           01770400
&ZW                   SETC  '&ZW.000000'                                01770500
.ZI42C                ANOP  ,                                           01770600
.*-------------------------------------------------------------------   01770700
.***AI.L11 XSHLFLGS3 BL1                                                01770800
                      AIF   ('&ZCLNG' NE 'YES').ZI42E  ALL ZERO BITS    01770900
&ZOPN                 SETA  &ZOPN+1                                     01771000
&ZOPL(&ZOPN)          SETC  ' '                                         01771100
&ZOPO(&ZOPN)          SETC  'OI'                                        01771200
&ZOPV(&ZOPN)          SETC  '4(1),B''&ZW'''                             01771300
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              01771400
.ZI42E                ANOP  ,                                           01771500
.*-------------------------------------------------------------------   01771600
.***AI.L05 XSHLFLGS4 BL1                                                01771700
&ZW                   SETC  ''                                          01771800
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01771900
.*-------------------------------------------------------------------   01772000
.***AI.L08 XSHLFLGS4 "EXTRESTOKEN"                                      01772100
.***      BL1'XX1XXXXX'                                                 01772200
         AIF   ('&EXTRESTOKEN' EQ '').ZI44A                             01772300
&ZW                   SETC  '&ZW.001'                                   01772400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01772500
                      AGO   .ZI44C                                      01772600
.*                                                                      01772700
.ZI44A                ANOP  ,                                           01772800
&ZW                   SETC  '&ZW.000'                                   01772900
.ZI44C                ANOP  ,                                           01773000
.*-------------------------------------------------------------------   01773100
.***AI.L08 XSHLFLGS4 "64"                                               01773200
.***      BL1'XXX1XXXX'                                                 01773300
         AIF   ('&XBUFADDRSIZE' NE '64').ZI45A                          01773400
&ZW                   SETC  '&ZW.1'                                     01773500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01773600
                      AGO   .ZI45C                                      01773700
.*                                                                      01773800
.ZI45A                ANOP  ,                                           01773900
&ZW                   SETC  '&ZW.0'                                     01774000
.ZI45C                ANOP  ,                                           01774100
.*-------------------------------------------------------------------   01774200
.***AI.L08 XSHLFLGS4 "CACHE"                                            01774300
.***      BL1'XXXXXXX1'                                                 01774400
&ZW                   SETC  '&ZW.0000'                                  01774500
.*-------------------------------------------------------------------   01774600
.***AI.L11 XSHLFLGS4 BL1                                                01774700
                      AIF   ('&ZCLNG' NE 'YES').ZI46E  ALL ZERO BITS    01774800
&ZOPN                 SETA  &ZOPN+1                                     01774900
&ZOPL(&ZOPN)          SETC  ' '                                         01775000
&ZOPO(&ZOPN)          SETC  'OI'                                        01775100
&ZOPV(&ZOPN)          SETC  '5(1),B''&ZW'''                             01775200
&ZOPD(&ZOPN)          SETC  '++ 449 BL1'                                01775300
.ZI46E                ANOP  ,                                           01775400
.*-------------------------------------------------------------------   01775500
.***AI.L23 ALET XBUFFER F                                               01775600
         AIF   ('&ZXBUFFER' EQ '').ZI52G                                01775700
         AIF   ('&SYSASCE' EQ 'P').ZI52G   SYSSTATE PRIMARY             01775800
&ZCLNG                SETC  '&XBUFFER'                                  01775900
         AIF   ('&XBUFFER'(1,1) EQ '(').ZI52E  IN AR                    01776000
.*                                                                      01776100
&ZCGPR                SETC  '14'                                        01776200
&ZOPN                 SETA  &ZOPN+1                                     01776300
&ZOPL(&ZOPN)          SETC  ' '                                         01776400
&ZOPO(&ZOPN)          SETC  'LAE'                                       01776500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01776600
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFFER XBUFFER'                      01776700
                      AGO   .ZI52F                                      01776800
.*                                                                      01776900
.ZI52E                ANOP  ,                                           01777000
&ZCGPR   SETC  '&XBUFFER'(2,K'&XBUFFER-2)                               01777100
.*                                                                      01777200
.ZI52F                ANOP  ,                                           01777300
.*                                                                      01777400
&ZOPN                 SETA  &ZOPN+1                                     01777500
&ZOPL(&ZOPN)          SETC  ' '                                         01777600
&ZOPO(&ZOPN)          SETC  'STAM'                                      01777700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,28(1)'                       01777800
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFFER XBUFFER'                      01777900
.*                                                                      01778000
.ZI52G                ANOP  ,                                           01778100
.*-------------------------------------------------------------------   01778200
.***AI.L25  XBUFSIZE F                                                  01778300
                      AIF   ('&ZXBUFSIZE' EQ '').ZI53E                  01778400
                      AIF   ('&ZXBUFSIZE' EQ 'OUTPUT').ZI53E            01778500
&ZCGPR                SETC  '&XBUFSIZE'                                 01778600
.*                                                                      01778700
                      AIF   ('&XBUFSIZE'(1,1) NE '(').ZI53B             01778800
&ZCGPR   SETC  '0('.'&XBUFSIZE'(2,K'&XBUFSIZE-2).')'                    01778900
                      AGO   .ZI53D                                      01779000
.ZI53B                ANOP  ,                                           01779100
.*                                                                      01779200
&ZC                   SETC  '&XBUFSIZE'(1,1)                            01779300
                      AIF   (T'&ZC NE 'N').ZI53D                        01779400
&ZC                   SETC  '&XBUFSIZE'                                 01779500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI53D               01779600
&ZCGPR                SETC  '=AL4(&XBUFSIZE)'                           01779700
.*                                                                      01779800
.ZI53D                ANOP  ,                                           01779900
.*                                                                      01780000
&ZOPN                 SETA  &ZOPN+1                                     01780100
&ZOPL(&ZOPN)          SETC  ' '                                         01780200
&ZOPO(&ZOPN)          SETC  'MVC'                                       01780300
&ZOPV(&ZOPN)          SETC  '32(4,1),&ZCGPR'                            01780400
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFSIZE XBUFSIZE'                    01780500
.*                                                                      01780600
.ZI53E                ANOP  ,                                           01780700
.*-------------------------------------------------------------------   01780800
.***AI.L19  XBUFFER A                                                   01780900
                      AIF   ('&ZXBUFFER' EQ '').ZI54H                   01781000
&ZCLNG                SETC  '&XBUFFER'                                  01781100
&ZCGPR                SETC  '14'                                        01781200
         AIF   ('&XBUFFER'(1,1) EQ '(').ZI54F  IN GPR                   01781300
.*                                                                      01781400
&ZOPN                 SETA  &ZOPN+1                                     01781500
&ZOPL(&ZOPN)          SETC  ' '                                         01781600
&ZOPO(&ZOPN)          SETC  'LA'                                        01781700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01781800
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFFER XBUFFER'                      01781900
.*                                                                      01782000
                      AGO   .ZI54G                                      01782100
.*                                                                      01782200
.ZI54F                ANOP  ,                                           01782300
&ZCGPR   SETC  '&XBUFFER'(2,K'&XBUFFER-2)                               01782400
.*                                                                      01782500
.ZI54G                ANOP  ,                                           01782600
.*                                                                      01782700
&ZOPN                 SETA  &ZOPN+1                                     01782800
&ZOPL(&ZOPN)          SETC  ' '                                         01782900
&ZOPO(&ZOPN)          SETC  'ST'                                        01783000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,36(,1)'                             01783100
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFFER XBUFFER'                      01783200
.*                                                                      01783300
.ZI54H                ANOP  ,                                           01783400
.*-------------------------------------------------------------------   01783500
.***AI.L18  XBUFALET F                                                  01783600
         AIF   ('&XBUFALET' NE 'NO_BUFALET').ZI56                       01783700
&ZXBUFALET            SETC  ''             RESET INPUT/OUTPUT           01783800
.ZI56                 ANOP  ,                                           01783900
.*-------------------------------------------------------------------   01784000
.***AI.L25  XBUFALET F                                                  01784100
                      AIF   ('&ZXBUFALET' EQ '').ZI56E                  01784200
                      AIF   ('&ZXBUFALET' EQ 'OUTPUT').ZI56E            01784300
&ZCGPR                SETC  '&XBUFALET'                                 01784400
.*                                                                      01784500
                      AIF   ('&XBUFALET'(1,1) NE '(').ZI56B             01784600
&ZCGPR   SETC  '0('.'&XBUFALET'(2,K'&XBUFALET-2).')'                    01784700
                      AGO   .ZI56D                                      01784800
.ZI56B                ANOP  ,                                           01784900
.*                                                                      01785000
&ZC                   SETC  '&XBUFALET'(1,1)                            01785100
                      AIF   (T'&ZC NE 'N').ZI56D                        01785200
&ZC                   SETC  '&XBUFALET'                                 01785300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI56D               01785400
&ZCGPR                SETC  '=AL4(&XBUFALET)'                           01785500
.*                                                                      01785600
.ZI56D                ANOP  ,                                           01785700
.*                                                                      01785800
&ZOPN                 SETA  &ZOPN+1                                     01785900
&ZOPL(&ZOPN)          SETC  ' '                                         01786000
&ZOPO(&ZOPN)          SETC  'MVC'                                       01786100
&ZOPV(&ZOPN)          SETC  '28(4,1),&ZCGPR'                            01786200
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFALET XBUFALET'                    01786300
.*                                                                      01786400
.ZI56E                ANOP  ,                                           01786500
.*-------------------------------------------------------------------   01786600
.***AI.L23 ALET XBUFLIST F                                              01786700
         AIF   ('&ZXBUFLIST' EQ '').ZI57G                               01786800
         AIF   ('&SYSASCE' EQ 'P').ZI57G   SYSSTATE PRIMARY             01786900
&ZCLNG                SETC  '&XBUFLIST'                                 01787000
         AIF   ('&XBUFLIST'(1,1) EQ '(').ZI57E  IN AR                   01787100
.*                                                                      01787200
&ZCGPR                SETC  '14'                                        01787300
&ZOPN                 SETA  &ZOPN+1                                     01787400
&ZOPL(&ZOPN)          SETC  ' '                                         01787500
&ZOPO(&ZOPN)          SETC  'LAE'                                       01787600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01787700
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFLIST XBUFLIST'                    01787800
                      AGO   .ZI57F                                      01787900
.*                                                                      01788000
.ZI57E                ANOP  ,                                           01788100
&ZCGPR   SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                             01788200
.*                                                                      01788300
.ZI57F                ANOP  ,                                           01788400
.*                                                                      01788500
&ZOPN                 SETA  &ZOPN+1                                     01788600
&ZOPL(&ZOPN)          SETC  ' '                                         01788700
&ZOPO(&ZOPN)          SETC  'STAM'                                      01788800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,32(1)'                       01788900
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFLIST XBUFLIST'                    01789000
.*                                                                      01789100
.ZI57G                ANOP  ,                                           01789200
.*-------------------------------------------------------------------   01789300
.***AI.L19  XBUFLIST A                                                  01789400
                      AIF   ('&ZXBUFLIST' EQ '').ZI58H                  01789500
&ZCLNG                SETC  '&XBUFLIST'                                 01789600
&ZCGPR                SETC  '14'                                        01789700
         AIF   ('&XBUFLIST'(1,1) EQ '(').ZI58F  IN GPR                  01789800
         AIF   ('&SYSASCE' NE 'P').ZI58G   SYSSTATE PRIMARY             01789900
.*                                                                      01790000
&ZOPN                 SETA  &ZOPN+1                                     01790100
&ZOPL(&ZOPN)          SETC  ' '                                         01790200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01790300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01790400
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFLIST XBUFLIST'                    01790500
.*                                                                      01790600
                      AGO   .ZI58G                                      01790700
.*                                                                      01790800
.ZI58F                ANOP  ,                                           01790900
&ZCGPR   SETC  '&XBUFLIST'(2,K'&XBUFLIST-2)                             01791000
.*                                                                      01791100
.ZI58G                ANOP  ,                                           01791200
.*                                                                      01791300
&ZOPN                 SETA  &ZOPN+1                                     01791400
&ZOPL(&ZOPN)          SETC  ' '                                         01791500
&ZOPO(&ZOPN)          SETC  'ST'                                        01791600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,36(,1)'                             01791700
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFLIST XBUFLIST'                    01791800
.*                                                                      01791900
.ZI58H                ANOP  ,                                           01792000
.*-------------------------------------------------------------------   01792100
.***AI.L18 ALET XADJAREA F                                              01792200
         AIF   ('&XADJAREA' NE 'NO_ADJAREA').ZI60                       01792300
&ZXADJAREA            SETC  ''             RESET INPUT/OUTPUT           01792400
.ZI60                 ANOP  ,                                           01792500
.*-------------------------------------------------------------------   01792600
.***AI.L23 ALET XADJAREA F                                              01792700
         AIF   ('&ZXADJAREA' EQ '').ZI60G                               01792800
         AIF   ('&SYSASCE' EQ 'P').ZI60G   SYSSTATE PRIMARY             01792900
&ZCLNG                SETC  '&XADJAREA'                                 01793000
         AIF   ('&XADJAREA'(1,1) EQ '(').ZI60E  IN AR                   01793100
.*                                                                      01793200
&ZCGPR                SETC  '14'                                        01793300
&ZOPN                 SETA  &ZOPN+1                                     01793400
&ZOPL(&ZOPN)          SETC  ' '                                         01793500
&ZOPO(&ZOPN)          SETC  'LAE'                                       01793600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01793700
&ZOPD(&ZOPN)          SETC  '++ &ZXADJAREA XADJAREA'                    01793800
                      AGO   .ZI60F                                      01793900
.*                                                                      01794000
.ZI60E                ANOP  ,                                           01794100
&ZCGPR   SETC  '&XADJAREA'(2,K'&XADJAREA-2)                             01794200
.*                                                                      01794300
.ZI60F                ANOP  ,                                           01794400
.*                                                                      01794500
&ZOPN                 SETA  &ZOPN+1                                     01794600
&ZOPL(&ZOPN)          SETC  ' '                                         01794700
&ZOPO(&ZOPN)          SETC  'STAM'                                      01794800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,40(1)'                       01794900
&ZOPD(&ZOPN)          SETC  '++ &ZXADJAREA XADJAREA'                    01795000
.*                                                                      01795100
.ZI60G                ANOP  ,                                           01795200
.*-------------------------------------------------------------------   01795300
.***AI.L18  XADJAREA A                                                  01795400
         AIF   ('&XADJAREA' NE 'NO_ADJAREA').ZI61                       01795500
&ZXADJAREA            SETC  ''             RESET INPUT/OUTPUT           01795600
.ZI61                 ANOP  ,                                           01795700
.*-------------------------------------------------------------------   01795800
.***AI.L19  XADJAREA A                                                  01795900
                      AIF   ('&ZXADJAREA' EQ '').ZI61H                  01796000
&ZCLNG                SETC  '&XADJAREA'                                 01796100
&ZCGPR                SETC  '14'                                        01796200
         AIF   ('&XADJAREA'(1,1) EQ '(').ZI61F  IN GPR                  01796300
         AIF   ('&SYSASCE' NE 'P').ZI61G   SYSSTATE PRIMARY             01796400
.*                                                                      01796500
&ZOPN                 SETA  &ZOPN+1                                     01796600
&ZOPL(&ZOPN)          SETC  ' '                                         01796700
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01796800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01796900
&ZOPD(&ZOPN)          SETC  '++ &ZXADJAREA XADJAREA'                    01797000
.*                                                                      01797100
                      AGO   .ZI61G                                      01797200
.*                                                                      01797300
.ZI61F                ANOP  ,                                           01797400
&ZCGPR   SETC  '&XADJAREA'(2,K'&XADJAREA-2)                             01797500
.*                                                                      01797600
.ZI61G                ANOP  ,                                           01797700
.*                                                                      01797800
&ZOPN                 SETA  &ZOPN+1                                     01797900
&ZOPL(&ZOPN)          SETC  ' '                                         01798000
&ZOPO(&ZOPN)          SETC  'ST'                                        01798100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,44(,1)'                             01798200
&ZOPD(&ZOPN)          SETC  '++ &ZXADJAREA XADJAREA'                    01798300
.*                                                                      01798400
.ZI61H                ANOP  ,                                           01798500
.*-------------------------------------------------------------------   01798600
.***AI.L18 ALET XRECLVCTR F                                             01798700
         AIF   ('&XRECLVCTR' NE 'NO_RECLVCTR').ZI63                     01798800
&ZXRECLVCTR           SETC  ''             RESET INPUT/OUTPUT           01798900
.ZI63                 ANOP  ,                                           01799000
.*-------------------------------------------------------------------   01799100
.***AI.L23 ALET XRECLVCTR F                                             01799200
         AIF   ('&ZXRECLVCTR' EQ '').ZI63G                              01799300
         AIF   ('&SYSASCE' EQ 'P').ZI63G   SYSSTATE PRIMARY             01799400
&ZCLNG                SETC  '&XRECLVCTR'                                01799500
         AIF   ('&XRECLVCTR'(1,1) EQ '(').ZI63E  IN AR                  01799600
.*                                                                      01799700
&ZCGPR                SETC  '14'                                        01799800
&ZOPN                 SETA  &ZOPN+1                                     01799900
&ZOPL(&ZOPN)          SETC  ' '                                         01800000
&ZOPO(&ZOPN)          SETC  'LAE'                                       01800100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01800200
&ZOPD(&ZOPN)          SETC  '++ &ZXRECLVCTR XRECLVCTR'                  01800300
                      AGO   .ZI63F                                      01800400
.*                                                                      01800500
.ZI63E                ANOP  ,                                           01800600
&ZCGPR   SETC  '&XRECLVCTR'(2,K'&XRECLVCTR-2)                           01800700
.*                                                                      01800800
.ZI63F                ANOP  ,                                           01800900
.*                                                                      01801000
&ZOPN                 SETA  &ZOPN+1                                     01801100
&ZOPL(&ZOPN)          SETC  ' '                                         01801200
&ZOPO(&ZOPN)          SETC  'STAM'                                      01801300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,40(1)'                       01801400
&ZOPD(&ZOPN)          SETC  '++ &ZXRECLVCTR XRECLVCTR'                  01801500
.*                                                                      01801600
.ZI63G                ANOP  ,                                           01801700
.*-------------------------------------------------------------------   01801800
.***AI.L18  XRECLVCTR A                                                 01801900
         AIF   ('&XRECLVCTR' NE 'NO_RECLVCTR').ZI64                     01802000
&ZXRECLVCTR           SETC  ''             RESET INPUT/OUTPUT           01802100
.ZI64                 ANOP  ,                                           01802200
.*-------------------------------------------------------------------   01802300
.***AI.L19  XRECLVCTR A                                                 01802400
                      AIF   ('&ZXRECLVCTR' EQ '').ZI64H                 01802500
&ZCLNG                SETC  '&XRECLVCTR'                                01802600
&ZCGPR                SETC  '14'                                        01802700
         AIF   ('&XRECLVCTR'(1,1) EQ '(').ZI64F  IN GPR                 01802800
         AIF   ('&SYSASCE' NE 'P').ZI64G   SYSSTATE PRIMARY             01802900
.*                                                                      01803000
&ZOPN                 SETA  &ZOPN+1                                     01803100
&ZOPL(&ZOPN)          SETC  ' '                                         01803200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01803300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01803400
&ZOPD(&ZOPN)          SETC  '++ &ZXRECLVCTR XRECLVCTR'                  01803500
.*                                                                      01803600
                      AGO   .ZI64G                                      01803700
.*                                                                      01803800
.ZI64F                ANOP  ,                                           01803900
&ZCGPR   SETC  '&XRECLVCTR'(2,K'&XRECLVCTR-2)                           01804000
.*                                                                      01804100
.ZI64G                ANOP  ,                                           01804200
.*                                                                      01804300
&ZOPN                 SETA  &ZOPN+1                                     01804400
&ZOPL(&ZOPN)          SETC  ' '                                         01804500
&ZOPO(&ZOPN)          SETC  'ST'                                        01804600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,44(,1)'                             01804700
&ZOPD(&ZOPN)          SETC  '++ &ZXRECLVCTR XRECLVCTR'                  01804800
.*                                                                      01804900
.ZI64H                ANOP  ,                                           01805000
.*-------------------------------------------------------------------   01805100
.***AI.L23 ALET XSTGSTATS F                                             01805200
         AIF   ('&ZXSTGSTATS' EQ '').ZI66G                              01805300
         AIF   ('&SYSASCE' EQ 'P').ZI66G   SYSSTATE PRIMARY             01805400
&ZCLNG                SETC  '&XSTGSTATS'                                01805500
         AIF   ('&XSTGSTATS'(1,1) EQ '(').ZI66E  IN AR                  01805600
.*                                                                      01805700
&ZCGPR                SETC  '14'                                        01805800
&ZOPN                 SETA  &ZOPN+1                                     01805900
&ZOPL(&ZOPN)          SETC  ' '                                         01806000
&ZOPO(&ZOPN)          SETC  'LAE'                                       01806100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01806200
&ZOPD(&ZOPN)          SETC  '++ &ZXSTGSTATS XSTGSTATS'                  01806300
                      AGO   .ZI66F                                      01806400
.*                                                                      01806500
.ZI66E                ANOP  ,                                           01806600
&ZCGPR   SETC  '&XSTGSTATS'(2,K'&XSTGSTATS-2)                           01806700
.*                                                                      01806800
.ZI66F                ANOP  ,                                           01806900
.*                                                                      01807000
&ZOPN                 SETA  &ZOPN+1                                     01807100
&ZOPL(&ZOPN)          SETC  ' '                                         01807200
&ZOPO(&ZOPN)          SETC  'STAM'                                      01807300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,40(1)'                       01807400
&ZOPD(&ZOPN)          SETC  '++ &ZXSTGSTATS XSTGSTATS'                  01807500
.*                                                                      01807600
.ZI66G                ANOP  ,                                           01807700
.*-------------------------------------------------------------------   01807800
.***AI.L19  XSTGSTATS A                                                 01807900
                      AIF   ('&ZXSTGSTATS' EQ '').ZI67H                 01808000
&ZCLNG                SETC  '&XSTGSTATS'                                01808100
&ZCGPR                SETC  '14'                                        01808200
         AIF   ('&XSTGSTATS'(1,1) EQ '(').ZI67F  IN GPR                 01808300
         AIF   ('&SYSASCE' NE 'P').ZI67G   SYSSTATE PRIMARY             01808400
.*                                                                      01808500
&ZOPN                 SETA  &ZOPN+1                                     01808600
&ZOPL(&ZOPN)          SETC  ' '                                         01808700
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01808800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01808900
&ZOPD(&ZOPN)          SETC  '++ &ZXSTGSTATS XSTGSTATS'                  01809000
.*                                                                      01809100
                      AGO   .ZI67G                                      01809200
.*                                                                      01809300
.ZI67F                ANOP  ,                                           01809400
&ZCGPR   SETC  '&XSTGSTATS'(2,K'&XSTGSTATS-2)                           01809500
.*                                                                      01809600
.ZI67G                ANOP  ,                                           01809700
.*                                                                      01809800
&ZOPN                 SETA  &ZOPN+1                                     01809900
&ZOPL(&ZOPN)          SETC  ' '                                         01810000
&ZOPO(&ZOPN)          SETC  'ST'                                        01810100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,44(,1)'                             01810200
&ZOPD(&ZOPN)          SETC  '++ &ZXSTGSTATS XSTGSTATS'                  01810300
.*                                                                      01810400
.ZI67H                ANOP  ,                                           01810500
.*-------------------------------------------------------------------   01810600
.***AI.L23 ALET XNSBAREA F                                              01810700
         AIF   ('&ZXNSBAREA' EQ '').ZI69G                               01810800
         AIF   ('&SYSASCE' EQ 'P').ZI69G   SYSSTATE PRIMARY             01810900
&ZCLNG                SETC  '&XNSBAREA'                                 01811000
         AIF   ('&XNSBAREA'(1,1) EQ '(').ZI69E  IN AR                   01811100
.*                                                                      01811200
&ZCGPR                SETC  '14'                                        01811300
&ZOPN                 SETA  &ZOPN+1                                     01811400
&ZOPL(&ZOPN)          SETC  ' '                                         01811500
&ZOPO(&ZOPN)          SETC  'LAE'                                       01811600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01811700
&ZOPD(&ZOPN)          SETC  '++ &ZXNSBAREA XNSBAREA'                    01811800
                      AGO   .ZI69F                                      01811900
.*                                                                      01812000
.ZI69E                ANOP  ,                                           01812100
&ZCGPR   SETC  '&XNSBAREA'(2,K'&XNSBAREA-2)                             01812200
.*                                                                      01812300
.ZI69F                ANOP  ,                                           01812400
.*                                                                      01812500
&ZOPN                 SETA  &ZOPN+1                                     01812600
&ZOPL(&ZOPN)          SETC  ' '                                         01812700
&ZOPO(&ZOPN)          SETC  'STAM'                                      01812800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,40(1)'                       01812900
&ZOPD(&ZOPN)          SETC  '++ &ZXNSBAREA XNSBAREA'                    01813000
.*                                                                      01813100
.ZI69G                ANOP  ,                                           01813200
.*-------------------------------------------------------------------   01813300
.***AI.L19  XNSBAREA A                                                  01813400
                      AIF   ('&ZXNSBAREA' EQ '').ZI70H                  01813500
&ZCLNG                SETC  '&XNSBAREA'                                 01813600
&ZCGPR                SETC  '14'                                        01813700
         AIF   ('&XNSBAREA'(1,1) EQ '(').ZI70F  IN GPR                  01813800
         AIF   ('&SYSASCE' NE 'P').ZI70G   SYSSTATE PRIMARY             01813900
.*                                                                      01814000
&ZOPN                 SETA  &ZOPN+1                                     01814100
&ZOPL(&ZOPN)          SETC  ' '                                         01814200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01814300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01814400
&ZOPD(&ZOPN)          SETC  '++ &ZXNSBAREA XNSBAREA'                    01814500
.*                                                                      01814600
                      AGO   .ZI70G                                      01814700
.*                                                                      01814800
.ZI70F                ANOP  ,                                           01814900
&ZCGPR   SETC  '&XNSBAREA'(2,K'&XNSBAREA-2)                             01815000
.*                                                                      01815100
.ZI70G                ANOP  ,                                           01815200
.*                                                                      01815300
&ZOPN                 SETA  &ZOPN+1                                     01815400
&ZOPL(&ZOPN)          SETC  ' '                                         01815500
&ZOPO(&ZOPN)          SETC  'ST'                                        01815600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,44(,1)'                             01815700
&ZOPD(&ZOPN)          SETC  '++ &ZXNSBAREA XNSBAREA'                    01815800
.*                                                                      01815900
.ZI70H                ANOP  ,                                           01816000
.*-------------------------------------------------------------------   01816100
.***AI.L23 ALET XWORBAREA F                                             01816200
         AIF   ('&ZXWORBAREA' EQ '').ZI72G                              01816300
         AIF   ('&SYSASCE' EQ 'P').ZI72G   SYSSTATE PRIMARY             01816400
&ZCLNG                SETC  '&XWORBAREA'                                01816500
         AIF   ('&XWORBAREA'(1,1) EQ '(').ZI72E  IN AR                  01816600
.*                                                                      01816700
&ZCGPR                SETC  '14'                                        01816800
&ZOPN                 SETA  &ZOPN+1                                     01816900
&ZOPL(&ZOPN)          SETC  ' '                                         01817000
&ZOPO(&ZOPN)          SETC  'LAE'                                       01817100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01817200
&ZOPD(&ZOPN)          SETC  '++ &ZXWORBAREA XWORBAREA'                  01817300
                      AGO   .ZI72F                                      01817400
.*                                                                      01817500
.ZI72E                ANOP  ,                                           01817600
&ZCGPR   SETC  '&XWORBAREA'(2,K'&XWORBAREA-2)                           01817700
.*                                                                      01817800
.ZI72F                ANOP  ,                                           01817900
.*                                                                      01818000
&ZOPN                 SETA  &ZOPN+1                                     01818100
&ZOPL(&ZOPN)          SETC  ' '                                         01818200
&ZOPO(&ZOPN)          SETC  'STAM'                                      01818300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,40(1)'                       01818400
&ZOPD(&ZOPN)          SETC  '++ &ZXWORBAREA XWORBAREA'                  01818500
.*                                                                      01818600
.ZI72G                ANOP  ,                                           01818700
.*-------------------------------------------------------------------   01818800
.***AI.L19  XWORBAREA A                                                 01818900
                      AIF   ('&ZXWORBAREA' EQ '').ZI73H                 01819000
&ZCLNG                SETC  '&XWORBAREA'                                01819100
&ZCGPR                SETC  '14'                                        01819200
         AIF   ('&XWORBAREA'(1,1) EQ '(').ZI73F  IN GPR                 01819300
         AIF   ('&SYSASCE' NE 'P').ZI73G   SYSSTATE PRIMARY             01819400
.*                                                                      01819500
&ZOPN                 SETA  &ZOPN+1                                     01819600
&ZOPL(&ZOPN)          SETC  ' '                                         01819700
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01819800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01819900
&ZOPD(&ZOPN)          SETC  '++ &ZXWORBAREA XWORBAREA'                  01820000
.*                                                                      01820100
                      AGO   .ZI73G                                      01820200
.*                                                                      01820300
.ZI73F                ANOP  ,                                           01820400
&ZCGPR   SETC  '&XWORBAREA'(2,K'&XWORBAREA-2)                           01820500
.*                                                                      01820600
.ZI73G                ANOP  ,                                           01820700
.*                                                                      01820800
&ZOPN                 SETA  &ZOPN+1                                     01820900
&ZOPL(&ZOPN)          SETC  ' '                                         01821000
&ZOPO(&ZOPN)          SETC  'ST'                                        01821100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,44(,1)'                             01821200
&ZOPD(&ZOPN)          SETC  '++ &ZXWORBAREA XWORBAREA'                  01821300
.*                                                                      01821400
.ZI73H                ANOP  ,                                           01821500
.*-------------------------------------------------------------------   01821600
.***AI.L18 ALET XANSAREA F                                              01821700
         AIF   ('&XANSAREA' NE 'NO_ANSAREA').ZI75                       01821800
&ZXANSAREA            SETC  ''             RESET INPUT/OUTPUT           01821900
.ZI75                 ANOP  ,                                           01822000
.*-------------------------------------------------------------------   01822100
.***AI.L23 ALET XANSAREA F                                              01822200
         AIF   ('&ZXANSAREA' EQ '').ZI75G                               01822300
         AIF   ('&SYSASCE' EQ 'P').ZI75G   SYSSTATE PRIMARY             01822400
&ZCLNG                SETC  '&XANSAREA'                                 01822500
         AIF   ('&XANSAREA'(1,1) EQ '(').ZI75E  IN AR                   01822600
.*                                                                      01822700
&ZCGPR                SETC  '14'                                        01822800
&ZOPN                 SETA  &ZOPN+1                                     01822900
&ZOPL(&ZOPN)          SETC  ' '                                         01823000
&ZOPO(&ZOPN)          SETC  'LAE'                                       01823100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01823200
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    01823300
                      AGO   .ZI75F                                      01823400
.*                                                                      01823500
.ZI75E                ANOP  ,                                           01823600
&ZCGPR   SETC  '&XANSAREA'(2,K'&XANSAREA-2)                             01823700
.*                                                                      01823800
.ZI75F                ANOP  ,                                           01823900
.*                                                                      01824000
&ZOPN                 SETA  &ZOPN+1                                     01824100
&ZOPL(&ZOPN)          SETC  ' '                                         01824200
&ZOPO(&ZOPN)          SETC  'STAM'                                      01824300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,48(1)'                       01824400
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    01824500
.*                                                                      01824600
.ZI75G                ANOP  ,                                           01824700
.*-------------------------------------------------------------------   01824800
.***AI.L18  XANSAREA A                                                  01824900
         AIF   ('&XANSAREA' NE 'NO_ANSAREA').ZI76                       01825000
&ZXANSAREA            SETC  ''             RESET INPUT/OUTPUT           01825100
.ZI76                 ANOP  ,                                           01825200
.*-------------------------------------------------------------------   01825300
.***AI.L19  XANSAREA A                                                  01825400
                      AIF   ('&ZXANSAREA' EQ '').ZI76H                  01825500
&ZCLNG                SETC  '&XANSAREA'                                 01825600
&ZCGPR                SETC  '14'                                        01825700
         AIF   ('&XANSAREA'(1,1) EQ '(').ZI76F  IN GPR                  01825800
         AIF   ('&SYSASCE' NE 'P').ZI76G   SYSSTATE PRIMARY             01825900
.*                                                                      01826000
&ZOPN                 SETA  &ZOPN+1                                     01826100
&ZOPL(&ZOPN)          SETC  ' '                                         01826200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01826300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01826400
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    01826500
.*                                                                      01826600
                      AGO   .ZI76G                                      01826700
.*                                                                      01826800
.ZI76F                ANOP  ,                                           01826900
&ZCGPR   SETC  '&XANSAREA'(2,K'&XANSAREA-2)                             01827000
.*                                                                      01827100
.ZI76G                ANOP  ,                                           01827200
.*                                                                      01827300
&ZOPN                 SETA  &ZOPN+1                                     01827400
&ZOPL(&ZOPN)          SETC  ' '                                         01827500
&ZOPO(&ZOPN)          SETC  'ST'                                        01827600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,52(,1)'                             01827700
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    01827800
.*                                                                      01827900
.ZI76H                ANOP  ,                                           01828000
.*-------------------------------------------------------------------   01828100
.***AI.L25  XREQECB AL4                                                 01828200
                      AIF   ('&ZXREQECB' EQ '').ZI78E                   01828300
                      AIF   ('&ZXREQECB' EQ 'OUTPUT').ZI78E             01828400
&ZCGPR                SETC  '&XREQECB'                                  01828500
.*                                                                      01828600
                      AIF   ('&XREQECB'(1,1) NE '(').ZI78B              01828700
&ZCGPR   SETC  '0('.'&XREQECB'(2,K'&XREQECB-2).')'                      01828800
                      AGO   .ZI78D                                      01828900
.ZI78B                ANOP  ,                                           01829000
.*                                                                      01829100
&ZC                   SETC  '&XREQECB'(1,1)                             01829200
                      AIF   (T'&ZC NE 'N').ZI78D                        01829300
&ZC                   SETC  '&XREQECB'                                  01829400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI78D               01829500
&ZCGPR                SETC  '=AL4(&XREQECB)'                            01829600
.*                                                                      01829700
.ZI78D                ANOP  ,                                           01829800
.*                                                                      01829900
&ZOPN                 SETA  &ZOPN+1                                     01830000
&ZOPL(&ZOPN)          SETC  ' '                                         01830100
&ZOPO(&ZOPN)          SETC  'MVC'                                       01830200
&ZOPV(&ZOPN)          SETC  '56(4,1),&ZCGPR'                            01830300
&ZOPD(&ZOPN)          SETC  '++ &ZXREQECB XREQECB'                      01830400
.*                                                                      01830500
.ZI78E                ANOP  ,                                           01830600
.*-------------------------------------------------------------------   01830700
.***AI.L23 ALET XREQTOKEN F                                             01830800
         AIF   ('&ZXREQTOKEN' EQ '').ZI81G                              01830900
         AIF   ('&SYSASCE' EQ 'P').ZI81G   SYSSTATE PRIMARY             01831000
&ZCLNG                SETC  '&XREQTOKEN'                                01831100
         AIF   ('&XREQTOKEN'(1,1) EQ '(').ZI81E  IN AR                  01831200
.*                                                                      01831300
&ZCGPR                SETC  '14'                                        01831400
&ZOPN                 SETA  &ZOPN+1                                     01831500
&ZOPL(&ZOPN)          SETC  ' '                                         01831600
&ZOPO(&ZOPN)          SETC  'LAE'                                       01831700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01831800
&ZOPD(&ZOPN)          SETC  '++ &ZXREQTOKEN XREQTOKEN'                  01831900
                      AGO   .ZI81F                                      01832000
.*                                                                      01832100
.ZI81E                ANOP  ,                                           01832200
&ZCGPR   SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)                           01832300
.*                                                                      01832400
.ZI81F                ANOP  ,                                           01832500
.*                                                                      01832600
&ZOPN                 SETA  &ZOPN+1                                     01832700
&ZOPL(&ZOPN)          SETC  ' '                                         01832800
&ZOPO(&ZOPN)          SETC  'STAM'                                      01832900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,56(1)'                       01833000
&ZOPD(&ZOPN)          SETC  '++ &ZXREQTOKEN XREQTOKEN'                  01833100
.*                                                                      01833200
.ZI81G                ANOP  ,                                           01833300
.*-------------------------------------------------------------------   01833400
.***AI.L19  XREQTOKEN A                                                 01833500
                      AIF   ('&ZXREQTOKEN' EQ '').ZI82H                 01833600
&ZCLNG                SETC  '&XREQTOKEN'                                01833700
&ZCGPR                SETC  '14'                                        01833800
         AIF   ('&XREQTOKEN'(1,1) EQ '(').ZI82F  IN GPR                 01833900
         AIF   ('&SYSASCE' NE 'P').ZI82G   SYSSTATE PRIMARY             01834000
.*                                                                      01834100
&ZOPN                 SETA  &ZOPN+1                                     01834200
&ZOPL(&ZOPN)          SETC  ' '                                         01834300
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01834400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01834500
&ZOPD(&ZOPN)          SETC  '++ &ZXREQTOKEN XREQTOKEN'                  01834600
.*                                                                      01834700
                      AGO   .ZI82G                                      01834800
.*                                                                      01834900
.ZI82F                ANOP  ,                                           01835000
&ZCGPR   SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)                           01835100
.*                                                                      01835200
.ZI82G                ANOP  ,                                           01835300
.*                                                                      01835400
&ZOPN                 SETA  &ZOPN+1                                     01835500
&ZOPL(&ZOPN)          SETC  ' '                                         01835600
&ZOPO(&ZOPN)          SETC  'ST'                                        01835700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,60(,1)'                             01835800
&ZOPD(&ZOPN)          SETC  '++ &ZXREQTOKEN XREQTOKEN'                  01835900
.*                                                                      01836000
.ZI82H                ANOP  ,                                           01836100
.*-------------------------------------------------------------------   01836200
.***AI.L23 ALET XDEIBAREA F                                             01836300
         AIF   ('&ZXDEIBAREA' EQ '').ZI87G                              01836400
         AIF   ('&SYSASCE' EQ 'P').ZI87G   SYSSTATE PRIMARY             01836500
&ZCLNG                SETC  '&XDEIBAREA'                                01836600
         AIF   ('&XDEIBAREA'(1,1) EQ '(').ZI87E  IN AR                  01836700
.*                                                                      01836800
&ZCGPR                SETC  '14'                                        01836900
&ZOPN                 SETA  &ZOPN+1                                     01837000
&ZOPL(&ZOPN)          SETC  ' '                                         01837100
&ZOPO(&ZOPN)          SETC  'LAE'                                       01837200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01837300
&ZOPD(&ZOPN)          SETC  '++ &ZXDEIBAREA XDEIBAREA'                  01837400
                      AGO   .ZI87F                                      01837500
.*                                                                      01837600
.ZI87E                ANOP  ,                                           01837700
&ZCGPR   SETC  '&XDEIBAREA'(2,K'&XDEIBAREA-2)                           01837800
.*                                                                      01837900
.ZI87F                ANOP  ,                                           01838000
.*                                                                      01838100
&ZOPN                 SETA  &ZOPN+1                                     01838200
&ZOPL(&ZOPN)          SETC  ' '                                         01838300
&ZOPO(&ZOPN)          SETC  'STAM'                                      01838400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,88(1)'                       01838500
&ZOPD(&ZOPN)          SETC  '++ &ZXDEIBAREA XDEIBAREA'                  01838600
.*                                                                      01838700
.ZI87G                ANOP  ,                                           01838800
.*-------------------------------------------------------------------   01838900
.***AI.L19  XDEIBAREA A                                                 01839000
                      AIF   ('&ZXDEIBAREA' EQ '').ZI88H                 01839100
&ZCLNG                SETC  '&XDEIBAREA'                                01839200
&ZCGPR                SETC  '14'                                        01839300
         AIF   ('&XDEIBAREA'(1,1) EQ '(').ZI88F  IN GPR                 01839400
         AIF   ('&SYSASCE' NE 'P').ZI88G   SYSSTATE PRIMARY             01839500
.*                                                                      01839600
&ZOPN                 SETA  &ZOPN+1                                     01839700
&ZOPL(&ZOPN)          SETC  ' '                                         01839800
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01839900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01840000
&ZOPD(&ZOPN)          SETC  '++ &ZXDEIBAREA XDEIBAREA'                  01840100
.*                                                                      01840200
                      AGO   .ZI88G                                      01840300
.*                                                                      01840400
.ZI88F                ANOP  ,                                           01840500
&ZCGPR   SETC  '&XDEIBAREA'(2,K'&XDEIBAREA-2)                           01840600
.*                                                                      01840700
.ZI88G                ANOP  ,                                           01840800
.*                                                                      01840900
&ZOPN                 SETA  &ZOPN+1                                     01841000
&ZOPL(&ZOPN)          SETC  ' '                                         01841100
&ZOPO(&ZOPN)          SETC  'ST'                                        01841200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,92(,1)'                             01841300
&ZOPD(&ZOPN)          SETC  '++ &ZXDEIBAREA XDEIBAREA'                  01841400
.*                                                                      01841500
.ZI88H                ANOP  ,                                           01841600
.*-------------------------------------------------------------------   01841700
.***AI.L18  XBUFNUM XL1                                                 01841800
         AIF   ('&XBUFNUM' NE 'NO_BUFNUM').ZI91                         01841900
&ZXBUFNUM             SETC  ''             RESET INPUT/OUTPUT           01842000
.ZI91                 ANOP  ,                                           01842100
.*-------------------------------------------------------------------   01842200
.***AI.L25  XBUFNUM XL1                                                 01842300
                      AIF   ('&ZXBUFNUM' EQ '').ZI91E                   01842400
                      AIF   ('&ZXBUFNUM' EQ 'OUTPUT').ZI91E             01842500
&ZCGPR                SETC  '&XBUFNUM'                                  01842600
.*                                                                      01842700
                      AIF   ('&XBUFNUM'(1,1) NE '(').ZI91B              01842800
&ZCGPR   SETC  '0('.'&XBUFNUM'(2,K'&XBUFNUM-2).')'                      01842900
                      AGO   .ZI91D                                      01843000
.ZI91B                ANOP  ,                                           01843100
.*                                                                      01843200
&ZC                   SETC  '&XBUFNUM'(1,1)                             01843300
                      AIF   (T'&ZC NE 'N').ZI91D                        01843400
&ZC                   SETC  '&XBUFNUM'                                  01843500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI91D               01843600
&ZCGPR                SETC  '=AL1(&XBUFNUM)'                            01843700
.*                                                                      01843800
.ZI91D                ANOP  ,                                           01843900
.*                                                                      01844000
&ZOPN                 SETA  &ZOPN+1                                     01844100
&ZOPL(&ZOPN)          SETC  ' '                                         01844200
&ZOPO(&ZOPN)          SETC  'MVC'                                       01844300
&ZOPV(&ZOPN)          SETC  '98(1,1),&ZCGPR'                            01844400
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFNUM XBUFNUM'                      01844500
.*                                                                      01844600
.ZI91E                ANOP  ,                                           01844700
.*-------------------------------------------------------------------   01844800
.***AI.L18  XBUFINCRNUM XL1                                             01844900
         AIF   ('&XBUFINCRNUM' NE 'NO_BUFINCRNUM').ZI92                 01845000
&ZXBUFINCRNUM         SETC  ''             RESET INPUT/OUTPUT           01845100
.ZI92                 ANOP  ,                                           01845200
.*-------------------------------------------------------------------   01845300
.***AI.L25  XBUFINCRNUM XL1                                             01845400
                      AIF   ('&ZXBUFINCRNUM' EQ '').ZI92E               01845500
                      AIF   ('&ZXBUFINCRNUM' EQ 'OUTPUT').ZI92E         01845600
&ZCGPR                SETC  '&XBUFINCRNUM'                              01845700
.*                                                                      01845800
                      AIF   ('&XBUFINCRNUM'(1,1) NE '(').ZI92B          01845900
&ZCGPR   SETC  '0('.'&XBUFINCRNUM'(2,K'&XBUFINCRNUM-2).')'              01846000
                      AGO   .ZI92D                                      01846100
.ZI92B                ANOP  ,                                           01846200
.*                                                                      01846300
&ZC                   SETC  '&XBUFINCRNUM'(1,1)                         01846400
                      AIF   (T'&ZC NE 'N').ZI92D                        01846500
&ZC                   SETC  '&XBUFINCRNUM'                              01846600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI92D               01846700
&ZCGPR                SETC  '=AL1(&XBUFINCRNUM)'                        01846800
.*                                                                      01846900
.ZI92D                ANOP  ,                                           01847000
.*                                                                      01847100
&ZOPN                 SETA  &ZOPN+1                                     01847200
&ZOPL(&ZOPN)          SETC  ' '                                         01847300
&ZOPO(&ZOPN)          SETC  'MVC'                                       01847400
&ZOPV(&ZOPN)          SETC  '99(1,1),&ZCGPR'                            01847500
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFINCRNUM XBUFINCRNUM'              01847600
.*                                                                      01847700
.ZI92E                ANOP  ,                                           01847800
.*-------------------------------------------------------------------   01847900
.***AI.L25  XCUNBAREA CL32                                              01848000
                      AIF   ('&ZXCUNBAREA' EQ '').ZI100E                01848100
                      AIF   ('&ZXCUNBAREA' EQ 'OUTPUT').ZI100E          01848200
&ZCGPR                SETC  '&XCUNBAREA'                                01848300
.*                                                                      01848400
                      AIF   ('&XCUNBAREA'(1,1) NE '(').ZI100B           01848500
&ZCGPR   SETC  '0('.'&XCUNBAREA'(2,K'&XCUNBAREA-2).')'                  01848600
.ZI100B               ANOP  ,                                           01848700
.*                                                                      01848800
&ZOPN                 SETA  &ZOPN+1                                     01848900
&ZOPL(&ZOPN)          SETC  ' '                                         01849000
&ZOPO(&ZOPN)          SETC  'MVC'                                       01849100
&ZOPV(&ZOPN)          SETC  '116(32,1),&ZCGPR'                          01849200
&ZOPD(&ZOPN)          SETC  '++ &ZXCUNBAREA XCUNBAREA'                  01849300
.*                                                                      01849400
.ZI100E               ANOP  ,                                           01849500
.*-------------------------------------------------------------------   01849600
.***AI.L25  XNAMEMASK XL2                                               01849700
                      AIF   ('&ZXNAMEMASK' EQ '').ZI103E                01849800
                      AIF   ('&ZXNAMEMASK' EQ 'OUTPUT').ZI103E          01849900
&ZCGPR                SETC  '&XNAMEMASK'                                01850000
.*                                                                      01850100
                      AIF   ('&XNAMEMASK'(1,1) NE '(').ZI103B           01850200
&ZCGPR   SETC  '0('.'&XNAMEMASK'(2,K'&XNAMEMASK-2).')'                  01850300
                      AGO   .ZI103D                                     01850400
.ZI103B               ANOP  ,                                           01850500
.*                                                                      01850600
&ZC                   SETC  '&XNAMEMASK'(1,1)                           01850700
                      AIF   (T'&ZC NE 'N').ZI103D                       01850800
&ZC                   SETC  '&XNAMEMASK'                                01850900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI103D              01851000
&ZCGPR                SETC  '=BL2''&XNAMEMASK'''                        01851100
.*                                                                      01851200
.ZI103D               ANOP  ,                                           01851300
.*                                                                      01851400
&ZOPN                 SETA  &ZOPN+1                                     01851500
&ZOPL(&ZOPN)          SETC  ' '                                         01851600
&ZOPO(&ZOPN)          SETC  'MVC'                                       01851700
&ZOPV(&ZOPN)          SETC  '104(2,1),&ZCGPR'                           01851800
&ZOPD(&ZOPN)          SETC  '++ &ZXNAMEMASK XNAMEMASK'                  01851900
.*                                                                      01852000
.ZI103E               ANOP  ,                                           01852100
.*-------------------------------------------------------------------   01852200
.***AI.L25  XCOCLASSB XL2                                               01852300
                      AIF   ('&ZXCOCLASSB' EQ '').ZI105E                01852400
                      AIF   ('&ZXCOCLASSB' EQ 'OUTPUT').ZI105E          01852500
&ZCGPR                SETC  '&XCOCLASSB'                                01852600
.*                                                                      01852700
                      AIF   ('&XCOCLASSB'(1,1) NE '(').ZI105B           01852800
&ZCGPR   SETC  '0('.'&XCOCLASSB'(2,K'&XCOCLASSB-2).')'                  01852900
                      AGO   .ZI105D                                     01853000
.ZI105B               ANOP  ,                                           01853100
.*                                                                      01853200
&ZC                   SETC  '&XCOCLASSB'(1,1)                           01853300
                      AIF   (T'&ZC NE 'N').ZI105D                       01853400
&ZC                   SETC  '&XCOCLASSB'                                01853500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI105D              01853600
&ZCGPR                SETC  '=AL2(&XCOCLASSB)'                          01853700
.*                                                                      01853800
.ZI105D               ANOP  ,                                           01853900
.*                                                                      01854000
&ZOPN                 SETA  &ZOPN+1                                     01854100
&ZOPL(&ZOPN)          SETC  ' '                                         01854200
&ZOPO(&ZOPN)          SETC  'MVC'                                       01854300
&ZOPV(&ZOPN)          SETC  '104(2,1),&ZCGPR'                           01854400
&ZOPD(&ZOPN)          SETC  '++ &ZXCOCLASSB XCOCLASSB'                  01854500
.*                                                                      01854600
.ZI105E               ANOP  ,                                           01854700
.*-------------------------------------------------------------------   01854800
.***AI.L18  XSTGCLASS XL1                                               01854900
         AIF   ('&XSTGCLASS' NE 'NO_STGCLASS').ZI108                    01855000
&ZXSTGCLASS           SETC  ''             RESET INPUT/OUTPUT           01855100
.ZI108                ANOP  ,                                           01855200
.*-------------------------------------------------------------------   01855300
.***AI.L25  XSTGCLASS XL1                                               01855400
                      AIF   ('&ZXSTGCLASS' EQ '').ZI108E                01855500
                      AIF   ('&ZXSTGCLASS' EQ 'OUTPUT').ZI108E          01855600
&ZCGPR                SETC  '&XSTGCLASS'                                01855700
.*                                                                      01855800
                      AIF   ('&XSTGCLASS'(1,1) NE '(').ZI108B           01855900
&ZCGPR   SETC  '0('.'&XSTGCLASS'(2,K'&XSTGCLASS-2).')'                  01856000
                      AGO   .ZI108D                                     01856100
.ZI108B               ANOP  ,                                           01856200
.*                                                                      01856300
&ZC                   SETC  '&XSTGCLASS'(1,1)                           01856400
                      AIF   (T'&ZC NE 'N').ZI108D                       01856500
&ZC                   SETC  '&XSTGCLASS'                                01856600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI108D              01856700
&ZCGPR                SETC  '=AL1(&XSTGCLASS)'                          01856800
.*                                                                      01856900
.ZI108D               ANOP  ,                                           01857000
.*                                                                      01857100
&ZOPN                 SETA  &ZOPN+1                                     01857200
&ZOPL(&ZOPN)          SETC  ' '                                         01857300
&ZOPO(&ZOPN)          SETC  'MVC'                                       01857400
&ZOPV(&ZOPN)          SETC  '105(1,1),&ZCGPR'                           01857500
&ZOPD(&ZOPN)          SETC  '++ &ZXSTGCLASS XSTGCLASS'                  01857600
.*                                                                      01857700
.ZI108E               ANOP  ,                                           01857800
.*-------------------------------------------------------------------   01857900
.***AI.L18  XCOCLASS XL2                                                01858000
         AIF   ('&XCOCLASS' NE 'NO_COCLASS').ZI118                      01858100
&ZXCOCLASS            SETC  ''             RESET INPUT/OUTPUT           01858200
.ZI118                ANOP  ,                                           01858300
.*-------------------------------------------------------------------   01858400
.***AI.L25  XCOCLASS XL2                                                01858500
                      AIF   ('&ZXCOCLASS' EQ '').ZI118E                 01858600
                      AIF   ('&ZXCOCLASS' EQ 'OUTPUT').ZI118E           01858700
&ZCGPR                SETC  '&XCOCLASS'                                 01858800
.*                                                                      01858900
                      AIF   ('&XCOCLASS'(1,1) NE '(').ZI118B            01859000
&ZCGPR   SETC  '0('.'&XCOCLASS'(2,K'&XCOCLASS-2).')'                    01859100
                      AGO   .ZI118D                                     01859200
.ZI118B               ANOP  ,                                           01859300
.*                                                                      01859400
&ZC                   SETC  '&XCOCLASS'(1,1)                            01859500
                      AIF   (T'&ZC NE 'N').ZI118D                       01859600
&ZC                   SETC  '&XCOCLASS'                                 01859700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI118D              01859800
&ZCGPR                SETC  '=AL2(&XCOCLASS)'                           01859900
.*                                                                      01860000
.ZI118D               ANOP  ,                                           01860100
.*                                                                      01860200
&ZOPN                 SETA  &ZOPN+1                                     01860300
&ZOPL(&ZOPN)          SETC  ' '                                         01860400
&ZOPO(&ZOPN)          SETC  'MVC'                                       01860500
&ZOPV(&ZOPN)          SETC  '106(2,1),&ZCGPR'                           01860600
&ZOPD(&ZOPN)          SETC  '++ &ZXCOCLASS XCOCLASS'                    01860700
.*                                                                      01860800
.ZI118E               ANOP  ,                                           01860900
.*-------------------------------------------------------------------   01861000
.***AI.L25  XCOCLASSE XL2                                               01861100
                      AIF   ('&ZXCOCLASSE' EQ '').ZI120E                01861200
                      AIF   ('&ZXCOCLASSE' EQ 'OUTPUT').ZI120E          01861300
&ZCGPR                SETC  '&XCOCLASSE'                                01861400
.*                                                                      01861500
                      AIF   ('&XCOCLASSE'(1,1) NE '(').ZI120B           01861600
&ZCGPR   SETC  '0('.'&XCOCLASSE'(2,K'&XCOCLASSE-2).')'                  01861700
                      AGO   .ZI120D                                     01861800
.ZI120B               ANOP  ,                                           01861900
.*                                                                      01862000
&ZC                   SETC  '&XCOCLASSE'(1,1)                           01862100
                      AIF   (T'&ZC NE 'N').ZI120D                       01862200
&ZC                   SETC  '&XCOCLASSE'                                01862300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI120D              01862400
&ZCGPR                SETC  '=AL2(&XCOCLASSE)'                          01862500
.*                                                                      01862600
.ZI120D               ANOP  ,                                           01862700
.*                                                                      01862800
&ZOPN                 SETA  &ZOPN+1                                     01862900
&ZOPL(&ZOPN)          SETC  ' '                                         01863000
&ZOPO(&ZOPN)          SETC  'MVC'                                       01863100
&ZOPV(&ZOPN)          SETC  '106(2,1),&ZCGPR'                           01863200
&ZOPD(&ZOPN)          SETC  '++ &ZXCOCLASSE XCOCLASSE'                  01863300
.*                                                                      01863400
.ZI120E               ANOP  ,                                           01863500
.*-------------------------------------------------------------------   01863600
.***AI.L25  XNUMNAMES XL2                                               01863700
                      AIF   ('&ZXNUMNAMES' EQ '').ZI122E                01863800
                      AIF   ('&ZXNUMNAMES' EQ 'OUTPUT').ZI122E          01863900
&ZCGPR                SETC  '&XNUMNAMES'                                01864000
.*                                                                      01864100
                      AIF   ('&XNUMNAMES'(1,1) NE '(').ZI122B           01864200
&ZCGPR   SETC  '0('.'&XNUMNAMES'(2,K'&XNUMNAMES-2).')'                  01864300
                      AGO   .ZI122D                                     01864400
.ZI122B               ANOP  ,                                           01864500
.*                                                                      01864600
&ZC                   SETC  '&XNUMNAMES'(1,1)                           01864700
                      AIF   (T'&ZC NE 'N').ZI122D                       01864800
&ZC                   SETC  '&XNUMNAMES'                                01864900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI122D              01865000
&ZCGPR                SETC  '=AL2(&XNUMNAMES)'                          01865100
.*                                                                      01865200
.ZI122D               ANOP  ,                                           01865300
.*                                                                      01865400
&ZOPN                 SETA  &ZOPN+1                                     01865500
&ZOPL(&ZOPN)          SETC  ' '                                         01865600
&ZOPO(&ZOPN)          SETC  'MVC'                                       01865700
&ZOPV(&ZOPN)          SETC  '106(2,1),&ZCGPR'                           01865800
&ZOPD(&ZOPN)          SETC  '++ &ZXNUMNAMES XNUMNAMES'                  01865900
.*                                                                      01866000
.ZI122E               ANOP  ,                                           01866100
.*-------------------------------------------------------------------   01866200
.***AI.L25  XREPEAT XL2                                                 01866300
                      AIF   ('&ZXREPEAT' EQ '').ZI124E                  01866400
                      AIF   ('&ZXREPEAT' EQ 'OUTPUT').ZI124E            01866500
&ZCGPR                SETC  '&XREPEAT'                                  01866600
.*                                                                      01866700
                      AIF   ('&XREPEAT'(1,1) NE '(').ZI124B             01866800
&ZCGPR   SETC  '0('.'&XREPEAT'(2,K'&XREPEAT-2).')'                      01866900
                      AGO   .ZI124D                                     01867000
.ZI124B               ANOP  ,                                           01867100
.*                                                                      01867200
&ZC                   SETC  '&XREPEAT'(1,1)                             01867300
                      AIF   (T'&ZC NE 'N').ZI124D                       01867400
&ZC                   SETC  '&XREPEAT'                                  01867500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI124D              01867600
&ZCGPR                SETC  '=AL2(&XREPEAT)'                            01867700
.*                                                                      01867800
.ZI124D               ANOP  ,                                           01867900
.*                                                                      01868000
&ZOPN                 SETA  &ZOPN+1                                     01868100
&ZOPL(&ZOPN)          SETC  ' '                                         01868200
&ZOPO(&ZOPN)          SETC  'MVC'                                       01868300
&ZOPV(&ZOPN)          SETC  '106(2,1),&ZCGPR'                           01868400
&ZOPD(&ZOPN)          SETC  '++ &ZXREPEAT XREPEAT'                      01868500
.*                                                                      01868600
.ZI124E               ANOP  ,                                           01868700
.*-------------------------------------------------------------------   01868800
.***AI.L18  XRESTOKEN CL8                                               01868900
         AIF   ('&XRESTOKEN' NE 'NO_RESTOKEN').ZI137                    01869000
&ZXRESTOKEN           SETC  ''             RESET INPUT/OUTPUT           01869100
.ZI137                ANOP  ,                                           01869200
.*-------------------------------------------------------------------   01869300
.***AI.L25  XRESTOKEN CL8                                               01869400
                      AIF   ('&ZXRESTOKEN' EQ '').ZI137E                01869500
                      AIF   ('&ZXRESTOKEN' EQ 'OUTPUT').ZI137E          01869600
&ZCGPR                SETC  '&XRESTOKEN'                                01869700
.*                                                                      01869800
                      AIF   ('&XRESTOKEN'(1,1) NE '(').ZI137B           01869900
&ZCGPR   SETC  '0('.'&XRESTOKEN'(2,K'&XRESTOKEN-2).')'                  01870000
.ZI137B               ANOP  ,                                           01870100
.*                                                                      01870200
&ZOPN                 SETA  &ZOPN+1                                     01870300
&ZOPL(&ZOPN)          SETC  ' '                                         01870400
&ZOPO(&ZOPN)          SETC  'MVC'                                       01870500
&ZOPV(&ZOPN)          SETC  '108(8,1),&ZCGPR'                           01870600
&ZOPD(&ZOPN)          SETC  '++ &ZXRESTOKEN XRESTOKEN'                  01870700
.*                                                                      01870800
.ZI137E               ANOP  ,                                           01870900
.*-------------------------------------------------------------------   01871000
.***AI.L25  XFIRSTNAME XL2                                              01871100
                      AIF   ('&ZXFIRSTNAME' EQ '').ZI141E               01871200
                      AIF   ('&ZXFIRSTNAME' EQ 'OUTPUT').ZI141E         01871300
&ZCGPR                SETC  '&XFIRSTNAME'                               01871400
.*                                                                      01871500
                      AIF   ('&XFIRSTNAME'(1,1) NE '(').ZI141B          01871600
&ZCGPR   SETC  '0('.'&XFIRSTNAME'(2,K'&XFIRSTNAME-2).')'                01871700
                      AGO   .ZI141D                                     01871800
.ZI141B               ANOP  ,                                           01871900
.*                                                                      01872000
&ZC                   SETC  '&XFIRSTNAME'(1,1)                          01872100
                      AIF   (T'&ZC NE 'N').ZI141D                       01872200
&ZC                   SETC  '&XFIRSTNAME'                               01872300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI141D              01872400
&ZCGPR                SETC  '=AL2(&XFIRSTNAME)'                         01872500
.*                                                                      01872600
.ZI141D               ANOP  ,                                           01872700
.*                                                                      01872800
&ZOPN                 SETA  &ZOPN+1                                     01872900
&ZOPL(&ZOPN)          SETC  ' '                                         01873000
&ZOPO(&ZOPN)          SETC  'MVC'                                       01873100
&ZOPV(&ZOPN)          SETC  '108(2,1),&ZCGPR'                           01873200
&ZOPD(&ZOPN)          SETC  '++ &ZXFIRSTNAME XFIRSTNAME'                01873300
.*                                                                      01873400
.ZI141E               ANOP  ,                                           01873500
.*-------------------------------------------------------------------   01873600
.***AI.L25  XLASTNAME XL2                                               01873700
                      AIF   ('&ZXLASTNAME' EQ '').ZI142E                01873800
                      AIF   ('&ZXLASTNAME' EQ 'OUTPUT').ZI142E          01873900
&ZCGPR                SETC  '&XLASTNAME'                                01874000
.*                                                                      01874100
                      AIF   ('&XLASTNAME'(1,1) NE '(').ZI142B           01874200
&ZCGPR   SETC  '0('.'&XLASTNAME'(2,K'&XLASTNAME-2).')'                  01874300
                      AGO   .ZI142D                                     01874400
.ZI142B               ANOP  ,                                           01874500
.*                                                                      01874600
&ZC                   SETC  '&XLASTNAME'(1,1)                           01874700
                      AIF   (T'&ZC NE 'N').ZI142D                       01874800
&ZC                   SETC  '&XLASTNAME'                                01874900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI142D              01875000
&ZCGPR                SETC  '=AL2(&XLASTNAME)'                          01875100
.*                                                                      01875200
.ZI142D               ANOP  ,                                           01875300
.*                                                                      01875400
&ZOPN                 SETA  &ZOPN+1                                     01875500
&ZOPL(&ZOPN)          SETC  ' '                                         01875600
&ZOPO(&ZOPN)          SETC  'MVC'                                       01875700
&ZOPV(&ZOPN)          SETC  '110(2,1),&ZCGPR'                           01875800
&ZOPD(&ZOPN)          SETC  '++ &ZXLASTNAME XLASTNAME'                  01875900
.*                                                                      01876000
.ZI142E               ANOP  ,                                           01876100
.*-------------------------------------------------------------------   01876200
.***AI.L25  XDATAOFFSET XL2                                             01876300
                      AIF   ('&ZXDATAOFFSET' EQ '').ZI163E              01876400
                      AIF   ('&ZXDATAOFFSET' EQ 'OUTPUT').ZI163E        01876500
&ZCGPR                SETC  '&XDATAOFFSET'                              01876600
.*                                                                      01876700
                      AIF   ('&XDATAOFFSET'(1,1) NE '(').ZI163B         01876800
&ZCGPR   SETC  '0('.'&XDATAOFFSET'(2,K'&XDATAOFFSET-2).')'              01876900
                      AGO   .ZI163D                                     01877000
.ZI163B               ANOP  ,                                           01877100
.*                                                                      01877200
&ZC                   SETC  '&XDATAOFFSET'(1,1)                         01877300
                      AIF   (T'&ZC NE 'N').ZI163D                       01877400
&ZC                   SETC  '&XDATAOFFSET'                              01877500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI163D              01877600
&ZCGPR                SETC  '=AL2(&XDATAOFFSET)'                        01877700
.*                                                                      01877800
.ZI163D               ANOP  ,                                           01877900
.*                                                                      01878000
&ZOPN                 SETA  &ZOPN+1                                     01878100
&ZOPL(&ZOPN)          SETC  ' '                                         01878200
&ZOPO(&ZOPN)          SETC  'MVC'                                       01878300
&ZOPV(&ZOPN)          SETC  '112(2,1),&ZCGPR'                           01878400
&ZOPD(&ZOPN)          SETC  '++ &ZXDATAOFFSET XDATAOFFSET'              01878500
.*                                                                      01878600
.ZI163E               ANOP  ,                                           01878700
.*-------------------------------------------------------------------   01878800
.***AI.L18  XNAME CL16                                                  01878900
         AIF   ('&XNAME' NE 'NO_NAME').ZI165                            01879000
&ZXNAME               SETC  ''             RESET INPUT/OUTPUT           01879100
.ZI165                ANOP  ,                                           01879200
.*-------------------------------------------------------------------   01879300
.***AI.L25  XNAME CL16                                                  01879400
                      AIF   ('&ZXNAME' EQ '').ZI165E                    01879500
                      AIF   ('&ZXNAME' EQ 'OUTPUT').ZI165E              01879600
&ZCGPR                SETC  '&XNAME'                                    01879700
.*                                                                      01879800
                      AIF   ('&XNAME'(1,1) NE '(').ZI165B               01879900
&ZCGPR   SETC  '0('.'&XNAME'(2,K'&XNAME-2).')'                          01880000
.ZI165B               ANOP  ,                                           01880100
.*                                                                      01880200
&ZOPN                 SETA  &ZOPN+1                                     01880300
&ZOPL(&ZOPN)          SETC  ' '                                         01880400
&ZOPO(&ZOPN)          SETC  'MVC'                                       01880500
&ZOPV(&ZOPN)          SETC  '116(16,1),&ZCGPR'                          01880600
&ZOPD(&ZOPN)          SETC  '++ &ZXNAME XNAME'                          01880700
.*                                                                      01880800
.ZI165E               ANOP  ,                                           01880900
.*-------------------------------------------------------------------   01881000
.***AI.L18  XOLDNAME CL16                                               01881100
         AIF   ('&XOLDNAME' NE 'NO_OLDNAME').ZI168                      01881200
&ZXOLDNAME            SETC  ''             RESET INPUT/OUTPUT           01881300
.ZI168                ANOP  ,                                           01881400
.*-------------------------------------------------------------------   01881500
.***AI.L25  XOLDNAME CL16                                               01881600
                      AIF   ('&ZXOLDNAME' EQ '').ZI168E                 01881700
                      AIF   ('&ZXOLDNAME' EQ 'OUTPUT').ZI168E           01881800
&ZCGPR                SETC  '&XOLDNAME'                                 01881900
.*                                                                      01882000
                      AIF   ('&XOLDNAME'(1,1) NE '(').ZI168B            01882100
&ZCGPR   SETC  '0('.'&XOLDNAME'(2,K'&XOLDNAME-2).')'                    01882200
.ZI168B               ANOP  ,                                           01882300
.*                                                                      01882400
&ZOPN                 SETA  &ZOPN+1                                     01882500
&ZOPL(&ZOPN)          SETC  ' '                                         01882600
&ZOPO(&ZOPN)          SETC  'MVC'                                       01882700
&ZOPV(&ZOPN)          SETC  '132(16,1),&ZCGPR'                          01882800
&ZOPD(&ZOPN)          SETC  '++ &ZXOLDNAME XOLDNAME'                    01882900
.*                                                                      01883000
.ZI168E               ANOP  ,                                           01883100
.*-------------------------------------------------------------------   01883200
.***AI.L18  XVECTORINDEX F                                              01883300
         AIF   ('&XVECTORINDEX' NE 'NO_VECTORINDEX').ZI186              01883400
&ZXVECTORINDEX        SETC  ''             RESET INPUT/OUTPUT           01883500
.ZI186                ANOP  ,                                           01883600
.*-------------------------------------------------------------------   01883700
.***AI.L25  XVECTORINDEX F                                              01883800
                      AIF   ('&ZXVECTORINDEX' EQ '').ZI186E             01883900
                      AIF   ('&ZXVECTORINDEX' EQ 'OUTPUT').ZI186E       01884000
&ZCGPR                SETC  '&XVECTORINDEX'                             01884100
.*                                                                      01884200
                      AIF   ('&XVECTORINDEX'(1,1) NE '(').ZI186B        01884300
&ZCGPR   SETC  '0('.'&XVECTORINDEX'(2,K'&XVECTORINDEX-2).')'            01884400
                      AGO   .ZI186D                                     01884500
.ZI186B               ANOP  ,                                           01884600
.*                                                                      01884700
&ZC                   SETC  '&XVECTORINDEX'(1,1)                        01884800
                      AIF   (T'&ZC NE 'N').ZI186D                       01884900
&ZC                   SETC  '&XVECTORINDEX'                             01885000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI186D              01885100
&ZCGPR                SETC  '=AL4(&XVECTORINDEX)'                       01885200
.*                                                                      01885300
.ZI186D               ANOP  ,                                           01885400
.*                                                                      01885500
&ZOPN                 SETA  &ZOPN+1                                     01885600
&ZOPL(&ZOPN)          SETC  ' '                                         01885700
&ZOPO(&ZOPN)          SETC  'MVC'                                       01885800
&ZOPV(&ZOPN)          SETC  '148(4,1),&ZCGPR'                           01885900
&ZOPD(&ZOPN)          SETC  '++ &ZXVECTORINDEX XVECTORINDEX'            01886000
.*                                                                      01886100
.ZI186E               ANOP  ,                                           01886200
.*-------------------------------------------------------------------   01886300
.***AI.L25  XCASTOUTLIST CL128                                          01886400
                      AIF   ('&ZXCASTOUTLIST' EQ '').ZI210E             01886500
                      AIF   ('&ZXCASTOUTLIST' EQ 'OUTPUT').ZI210E       01886600
&ZCGPR                SETC  '&XCASTOUTLIST'                             01886700
.*                                                                      01886800
                      AIF   ('&XCASTOUTLIST'(1,1) NE '(').ZI210B        01886900
&ZCGPR   SETC  '0('.'&XCASTOUTLIST'(2,K'&XCASTOUTLIST-2).')'            01887000
.ZI210B               ANOP  ,                                           01887100
.*                                                                      01887200
&ZOPN                 SETA  &ZOPN+1                                     01887300
&ZOPL(&ZOPN)          SETC  ' '                                         01887400
&ZOPO(&ZOPN)          SETC  'MVC'                                       01887500
&ZOPV(&ZOPN)          SETC  '212(128,1),&ZCGPR'                         01887600
&ZOPD(&ZOPN)          SETC  '++ &ZXCASTOUTLIST XCASTOUTLIST'            01887700
.*                                                                      01887800
.ZI210E               ANOP  ,                                           01887900
.*-------------------------------------------------------------------   01888000
&ZOPN1                SETA &ZOPN                                        01888100
.*******************************************************************    01888200
.***  PROCESS IXLCACHE OUTPUT PARAMETERS                                01888300
.*******************************************************************    01888400
                      ACTR  10000                                       01888500
.*******************************************************************    01888600
.***AO.X02  RETURN CODE PROCESSING                                      01888700
.*******************************************************************    01888800
                      AIF   (N'&RETCODE LE 0).ZMRETX                    01888900
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            01889000
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             01889100
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             01889200
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               01889300
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                01889400
&ZOPN                 SETA  &ZOPN+1                                     01889500
&ZOPL(&ZOPN)          SETC  ' '                                         01889600
&ZOPO(&ZOPN)          SETC  'ST'                                        01889700
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              01889800
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        01889900
                      AGO   .ZMRETX                                     01890000
.*                                                                      01890100
.ZMRET2               ANOP  ,                                           01890200
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                01890300
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                01890400
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                01890500
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  01890600
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   01890700
&ZOPN                 SETA  &ZOPN+1                                     01890800
&ZOPL(&ZOPN)          SETC  ' '                                         01890900
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  01891000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 01891100
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        01891200
.ZMRETX               ANOP  ,                                           01891300
.*******************************************************************    01891400
.***AO.X03  REASON CODE PROCESSING                                      01891500
.*******************************************************************    01891600
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    01891700
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            01891800
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              01891900
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             01892000
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              01892100
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             01892200
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                01892300
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 01892400
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                01892500
&ZOPN                 SETA  &ZOPN+1                                     01892600
&ZOPL(&ZOPN)          SETC  ' '                                         01892700
&ZOPO(&ZOPN)          SETC  'ST'                                        01892800
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               01892900
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        01893000
                      AGO   .ZMRSNX                                     01893100
.*                                                                      01893200
.ZMRSN2               ANOP  ,                                           01893300
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                01893400
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 01893500
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                01893600
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 01893700
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                01893800
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   01893900
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    01894000
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   01894100
&ZOPN                 SETA  &ZOPN+1                                     01894200
&ZOPL(&ZOPN)          SETC  ' '                                         01894300
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  01894400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  01894500
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        01894600
.ZMRSNX               ANOP  ,                                           01894700
.*******************************************************************    01894800
.***AO.X04  LABEL FOR MF=L PROCESSING                                   01894900
.*******************************************************************    01895000
.ZMFLX                ANOP  ,              MF=L PROCESSING              01895100
.*******************************************************************    01895200
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               01895300
.*******************************************************************    01895400
                      ACTR  10000                                       01895500
.*                                                                      01895600
                      LCLA  &ZLC           COLUMN POSITION              01895700
                      LCLA  &ZOPX          LIST TABLE INDEX             01895800
                      LCLC  &ZLL           LABEL                        01895900
                      LCLC  &ZLOP          OPERATION                    01896000
                      LCLC  &ZLV           VALUE                        01896100
                      LCLC  &ZLD           DESCRIPTION                  01896200
.*                                                                      01896300
&ZOPX                 SETA  1                                           01896400
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            01896500
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              01896600
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              01896700
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              01896800
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              01896900
                      AIF   (K'&ZLD LE 0).ZL5                           01897000
&ZLC                  SETA  35             COMMENT COLUMN               01897100
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    01897200
&ZLC                  SETA  33             COMMMENT COLUMN              01897300
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   01897400
&ZLV                  SETC  '&ZLV'.' '                                  01897500
                      AGO   .ZL3                                        01897600
.*                                                                      01897700
.ZL4                  ANOP  ,                                           01897800
&ZLV                  SETC  '&ZLV'.' '                                  01897900
.ZL5                  ANOP  ,                                           01898000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               01898100
.*                                                                      01898200
&ZLL     &ZLOP &ZLV                                                     01898300
.*                                                                      01898400
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               01898500
                      AGO   .ZL2           CONTINUE LOOPING             01898600
.*                                                                      01898700
.ZLX                  ANOP  ,                                           01898800
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                01898900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  01899000
.**------------------------------------------------------------------** 01899100
.**  Start of user maclasm code                                      ** 01899200
.**------------------------------------------------------------------** 01899300
.*                                                                      01899400
.**  Only generate code if no errors have been found                 ** 01899500
.*                                                                      01899600
         AIF   (&ZMACRET NE 0).ENDGENLINKAGE                            01899700
.*                                                                      01899800
.**------------------------------------------------------------------** 01899900
.**  Declares for macro constants                                    ** 01900000
.**------------------------------------------------------------------** 01900100
.*                                                                      01900200
.**  Command codes                                                   ** 01900300
.*                                                                      01900400
               LCLC  &KCACHECMDRAR                                      01900500
               LCLC  &KCACHECMDRFCO                                     01900600
               LCLC  &KCACHECMDRD                                       01900700
               LCLC  &KCACHECMDRCC                                      01900800
               LCLC  &KCACHECMDRCCI                                     01900900
               LCLC  &KCACHECMDWWR                                      01901000
               LCLC  &KCACHECMDWAR                                      01901100
               LCLC  &KCACHECMDPRL                                      01901200
               LCLC  &KCACHECMDUCL                                      01901300
               LCLC  &KCACHECMDIN                                       01901400
               LCLC  &KCACHECMDICC                                      01901500
               LCLC  &KCACHECMDSRV                                      01901600
               LCLC  &KCACHECMDRSCI                                     01901700
               LCLC  &KCACHECMDRNL                                 @02A 01901800
               LCLC  &KCACHECMDUCLE                                @04A 01901900
               LCLC  &KCACHECMDINL                                 @05A 01902000
               LCLC  &KCACHECMDICCL                                @L5A 01902100
               LCLC  &KCACHECMDRFCOM                               @L5A 01902200
               LCLC  &KCACHECMDWARM                                @L5A 01902300
.*                                                                      01902400
&KCACHECMDRAR  SETC  '0'                                                01902500
&KCACHECMDRFCO SETC  '4'                                                01902600
&KCACHECMDRD   SETC  '8'                                                01902700
&KCACHECMDRCC  SETC  '12'                                               01902800
&KCACHECMDRCCI SETC  '16'                                               01902900
&KCACHECMDWWR  SETC  '20'                                               01903000
&KCACHECMDWAR  SETC  '24'                                               01903100
&KCACHECMDPRL  SETC  '28'                                               01903200
&KCACHECMDUCL  SETC  '32'                                               01903300
&KCACHECMDIN   SETC  '36'                                               01903400
&KCACHECMDICC  SETC  '40'                                               01903500
&KCACHECMDSRV  SETC  '44'                                               01903600
&KCACHECMDRSCI SETC  '48'                                               01903700
&KCACHECMDRNL  SETC  '52'                                          @02A 01903800
&KCACHECMDUCLE SETC  '56'                                          @04A 01903900
&KCACHECMDINL  SETC  '60'                                          @05A 01904000
&KCACHECMDICCL SETC  '64'                                          @L5A 01904100
&KCACHECMDRFCOM SETC '68'                                          @L5A 01904200
&KCACHECMDWARM SETC  '72'                                          @L5A 01904300
.*                                                                      01904400
.*                                                                      01904500
.**  Cache command type                                              ** 01904600
.*                                                                      01904700
               LCLC  &KCACHECMDTYPE                                     01904800
&KCACHECMDTYPE SETC  'X''04'''                                          01904900
.*                                                                      01905000
.*                                                                      01905100
.**  Command opcodes                                                 ** 01905200
.*                                                                      01905300
               LCLC  &KCACHEOPRAR                                       01905400
               LCLC  &KCACHEOPRFCO                                      01905500
               LCLC  &KCACHEOPRD                                        01905600
               LCLC  &KCACHEOPRCC                                       01905700
               LCLC  &KCACHEOPRCCI                                      01905800
               LCLC  &KCACHEOPWWR                                       01905900
               LCLC  &KCACHEOPWAR                                       01906000
               LCLC  &KCACHEOPPRL                                       01906100
               LCLC  &KCACHEOPUCL                                       01906200
               LCLC  &KCACHEOPIN                                        01906300
               LCLC  &KCACHEOPICC                                       01906400
               LCLC  &KCACHEOPSRV                                       01906500
               LCLC  &KCACHEOPRSCI                                      01906600
               LCLC  &KCACHEOPRNL                                  @02A 01906700
               LCLC  &KCACHEOPUCLE                                 @04A 01906800
               LCLC  &KCACHEOPINL                                  @05A 01906900
               LCLC  &KCACHEOPICCL                                 @L5A 01907000
               LCLC  &KCACHEOPRFCOM                                @L5A 01907100
               LCLC  &KCACHEOPWARM                                 @L5A 01907200
.*                                                                      01907300
&KCACHEOPRAR   SETC  'X''00'''                                          01907400
&KCACHEOPRFCO  SETC  'X''01'''                                          01907500
&KCACHEOPRD    SETC  'X''02'''                                          01907600
&KCACHEOPRCC   SETC  'X''03'''                                          01907700
&KCACHEOPRCCI  SETC  'X''04'''                                          01907800
&KCACHEOPWWR   SETC  'X''85'''                                          01907900
&KCACHEOPWAR   SETC  'X''86'''                                          01908000
&KCACHEOPPRL   SETC  'X''87'''                                          01908100
&KCACHEOPUCL   SETC  'X''88'''                                          01908200
&KCACHEOPIN    SETC  'X''09'''                                          01908300
&KCACHEOPICC   SETC  'X''0A'''                                          01908400
&KCACHEOPSRV   SETC  'X''0B'''                                          01908500
&KCACHEOPRSCI  SETC  'X''0C'''                                          01908600
&KCACHEOPRNL   SETC  'X''93'''                                     @02A 01908700
&KCACHEOPUCLE  SETC  'X''14'''                                     @04A 01908800
&KCACHEOPINL   SETC  'X''95'''                                     @05A 01908900
&KCACHEOPICCL  SETC  'X''9B'''                                     @L5A 01909000
&KCACHEOPRFCOM SETC  'X''1C'''                                     @L5A 01909100
&KCACHEOPWARM  SETC  'X''9D'''                                     @L5A 01909200
.*                                                                      01909300
.*                                                                      01909400
.**  Command lengths                                                 ** 01909500
.*                                                                      01909600
               LCLC  &KCACHERARLEN                                      01909700
               LCLC  &KCACHERFCOLEN                                     01909800
               LCLC  &KCACHERDLEN                                       01909900
               LCLC  &KCACHERCCLEN                                      01910000
               LCLC  &KCACHERCCILEN                                     01910100
               LCLC  &KCACHEWWRLEN                                      01910200
               LCLC  &KCACHEWARLEN                                      01910300
               LCLC  &KCACHEWRITEALEN                                   01910400
               LCLC  &KCACHEPRLLEN                                      01910500
               LCLC  &KCACHEUCLLEN                                      01910600
               LCLC  &KCACHEINLEN                                       01910700
               LCLC  &KCACHEICCLEN                                      01910800
               LCLC  &KCACHESRVLEN                                      01910900
               LCLC  &KCACHERSCILEN                                     01911000
               LCLC  &KCACHERNLLEN                                 @02A 01911100
               LCLC  &KCACHEUCLELEN                                @04A 01911200
               LCLC  &KCACHEINLLEN                                 @05A 01911300
               LCLC  &KCACHEICCLLEN                                @L5A 01911400
               LCLC  &KCACHERFCOMLEN                               @L5A 01911500
               LCLC  &KCACHEWARMLEN                                @L5A 01911600
.*                                                                      01911700
&KCACHERARLEN        SETC  '88'                                    @L7C 01911800
&KCACHERFCOLEN       SETC  '88'                                    @L7C 01911900
&KCACHERDLEN         SETC  '48'                                         01912000
&KCACHERCCLEN        SETC  '56'                                    @05C 01912100
&KCACHERCCILEN       SETC  '28'                                         01912200
&KCACHEWWRLEN        SETC  '108'                                   @L9C 01912300
&KCACHEWARLEN        SETC  '136'                                   @L7C 01912400
&KCACHEWRITEALEN     SETC  '256'                                        01912500
&KCACHEPRLLEN        SETC  '24'                                         01912600
&KCACHEUCLLEN        SETC  '28'                                         01912700
&KCACHEINLEN         SETC  '68'                                    @05C 01912800
&KCACHEICCLEN        SETC  '48'                                         01912900
&KCACHESRVLEN        SETC  '152'                                        01913000
&KCACHERSCILEN       SETC  '24'                                         01913100
&KCACHERNLLEN        SETC  '88'                                    @L7C 01913200
&KCACHEUCLELEN       SETC  '64'                                    @04A 01913300
&KCACHEINLLEN        SETC  '32'                                    @05A 01913400
&KCACHEICCLLEN       SETC  '32'                                    @L5A 01913500
&KCACHERFCOMLEN      SETC  '256'                                   @L5A 01913600
&KCACHEWARMLEN       SETC  '108'                                   @L6C 01913700
.*                                                                      01913800
.*                                                                      01913900
.**  Parameter list offsets                                          ** 01914000
.*                                                                      01914100
.*  Offsets of parameter list sections                                  01914200
.*                                                                      01914300
                   LCLA  &PLOFF_XSHL_DATA                               01914400
                   LCLA  &PLOFF_XMOB_DATA                               01914500
                   LCLA  &PLOFF_XMCB_DATA                               01914600
.*                                                                      01914700
&PLOFF_XSHL_DATA   SETA  0                                              01914800
&PLOFF_XMOB_DATA   SETA  96                                             01914900
&PLOFF_XMCB_DATA   SETA  100                                            01915000
.*                                                                      01915100
.*  Offsets within the shell data section                               01915200
.*                                                                      01915300
                     LCLA  &PLOFF_XCMDCODE                              01915400
                     LCLA  &PLOFF_XSHLFLGS2                             01915500
                     LCLA  &PLOFF_XCONID                                01915600
                     LCLA  &PLOFF_XBUFSIZE                              01915700
                     LCLA  &PLOFF_XANSAREA_ALET                         01915800
                     LCLA  &PLOFF_XANSAREA                              01915900
                     LCLA  &PLOFF_XEXTRESTOKENTKN                  @L1A 01916000
.*                                                                      01916100
&PLOFF_XCMDCODE      SETA  &PLOFF_XSHL_DATA+1                           01916200
&PLOFF_XSHLFLGS2     SETA  &PLOFF_XSHL_DATA+3                           01916300
&PLOFF_XCONID        SETA  &PLOFF_XSHL_DATA+25                          01916400
&PLOFF_XBUFSIZE      SETA  &PLOFF_XSHL_DATA+32                     @PBC 01916500
&PLOFF_XANSAREA_ALET SETA  &PLOFF_XSHL_DATA+48                          01916600
&PLOFF_XANSAREA      SETA  &PLOFF_XSHL_DATA+52                          01916700
&PLOFF_XEXTRESTOKENTKN  SETA  &PLOFF_XSHL_DATA+72                  @L1A 01916800
.*                                                                      01916900
.*  Offsets within the MOB section                                      01917000
.*                                                                      01917100
                   LCLA  &PLOFF_XCMDLEN                                 01917200
                   LCLA  &PLOFF_XBUFNUM                                 01917300
                   LCLA  &PLOFF_XBUFINCRNUM                             01917400
.*                                                                      01917500
&PLOFF_XCMDLEN     SETA  &PLOFF_XMOB_DATA+0                             01917600
&PLOFF_XBUFNUM     SETA  &PLOFF_XMOB_DATA+2                             01917700
&PLOFF_XBUFINCRNUM SETA  &PLOFF_XMOB_DATA+3                             01917800
.*                                                                      01917900
.*  Offsets within the MCB section                                      01918000
.*                                                                      01918100
                   LCLA  &PLOFF_XCCA                                    01918200
                   LCLA  &PLOFF_XCCB                                    01918300
                   LCLA  &PLOFF_XLCID1                                  01918400
                   LCLA  &PLOFF_XPROCESSID1                             01918500
                   LCLA  &PLOFF_XCMDFLAG1                               01918600
                   LCLA  &PLOFF_XLCID2                                  01918700
                   LCLA  &PLOFF_XDBS1                                   01918800
                   LCLA  &PLOFF_XUSERDATA1                              01918900
                   LCLA  &PLOFF_XDBS2                                   01919000
                   LCLA  &PLOFF_XCMDFLAG2                               01919100
                   LCLA  &PLOFF_XPROCESSID2                             01919200
                   LCLA  &PLOFF_XDAS1                                   01919300
                   LCLA  &PLOFF_XDBS3                                   01919400
                   LCLA  &PLOFF_XUSERDATA2                              01919500
                   LCLA  &PLOFF_XCMDFLAG3                               01919600
                   LCLA  &PLOFF_XPROCESSID3                             01919700
                   LCLA  &PLOFF_XRESTOKEN                          @L1A 01919800
                   LCLA  &PLOFF_XDAS2                                   01919900
                   LCLA  &PLOFF_XLCID3                             @02A 01920000
                   LCLA  &PLOFF_XVERSCOMP1                         @05A 01920100
                   LCLA  &PLOFF_XVERSCOMP2                         @05A 01920200
                   LCLA  &PLOFF_XVERSCOMP3                         @05A 01920300
                   LCLA  &PLOFF_XNEWVERS1                          @05A 01920400
                   LCLA  &PLOFF_XNEWVERS2                          @05A 01920500
                   LCLA  &PLOFF_XSTARTINDEX1                       @05A 01920600
                   LCLA  &PLOFF_XSTARTINDEX2                       @05A 01920700
                   LCLA  &PLOFF_XENDINDEX1                         @05A 01920800
                   LCLA  &PLOFF_XENDINDEX2                         @05A 01920900
                   LCLA  &PLOFF_XCMDFLAG4                          @05A 01921000
                   LCLA  &PLOFF_XCMDFLAG5                          @05A 01921100
                   LCLA  &PLOFF_XCMDFLAG6                          @05A 01921200
                   LCLA  &PLOFF_XCMDFLAG7                          @05A 01921300
                   LCLA  &PLOFF_XCMDFLAG8                          @05A 01921400
                   LCLA  &PLOFF_XCMDFLAG9                          @05A 01921500
                   LCLA  &PLOFF_XCMDFLAG10                         @05A 01921600
                   LCLA  &PLOFF_XCMDFLAG11                         @05A 01921700
                   LCLA  &PLOFF_XCMDFLAG12                         @L5A 01921800
                   LCLA  &PLOFF_XCMDFLAG13                         @L5A 01921900
.*                                                                      01922000
&PLOFF_XCCA        SETA  &PLOFF_XMCB_DATA+0                             01922100
&PLOFF_XCCB        SETA  &PLOFF_XMCB_DATA+1                             01922200
&PLOFF_XLCID1      SETA  &PLOFF_XMCB_DATA+4                             01922300
&PLOFF_XCMDFLAG12  SETA  &PLOFF_XMCB_DATA+4                        @L5A 01922400
&PLOFF_XCMDFLAG13  SETA  &PLOFF_XMCB_DATA+5                        @L5A 01922500
&PLOFF_XPROCESSID1 SETA  &PLOFF_XMCB_DATA+5                             01922600
&PLOFF_XCMDFLAG1   SETA  &PLOFF_XMCB_DATA+6                             01922700
&PLOFF_XLCID2      SETA  &PLOFF_XMCB_DATA+6                             01922800
&PLOFF_XDBS1       SETA  &PLOFF_XMCB_DATA+7                             01922900
&PLOFF_XUSERDATA1  SETA  &PLOFF_XMCB_DATA+8                             01923000
&PLOFF_XLCID3      SETA  &PLOFF_XMCB_DATA+8                        @02A 01923100
&PLOFF_XDBS2       SETA  &PLOFF_XMCB_DATA+9                             01923200
&PLOFF_XCMDFLAG2   SETA  &PLOFF_XMCB_DATA+32                            01923300
&PLOFF_XPROCESSID2 SETA  &PLOFF_XMCB_DATA+33                            01923400
&PLOFF_XDAS1       SETA  &PLOFF_XMCB_DATA+35                            01923500
&PLOFF_XDBS3       SETA  &PLOFF_XMCB_DATA+35                            01923600
&PLOFF_XUSERDATA2  SETA  &PLOFF_XMCB_DATA+56                            01923700
&PLOFF_XCMDFLAG3   SETA  &PLOFF_XMCB_DATA+64                            01923800
&PLOFF_XPROCESSID3 SETA  &PLOFF_XMCB_DATA+64                            01923900
&PLOFF_XRESTOKEN   SETA  &PLOFF_XMCB_DATA+8                        @08C 01924000
&PLOFF_XDAS2       SETA  &PLOFF_XMCB_DATA+67                            01924100
&PLOFF_XVERSCOMP1  SETA  &PLOFF_XMCB_DATA+56                       @05A 01924200
&PLOFF_XVERSCOMP2  SETA  &PLOFF_XMCB_DATA+72                       @05A 01924300
&PLOFF_XVERSCOMP3  SETA  &PLOFF_XMCB_DATA+32                       @05A 01924400
&PLOFF_XNEWVERS1   SETA  &PLOFF_XMCB_DATA+64                       @05A 01924500
&PLOFF_XNEWVERS2   SETA  &PLOFF_XMCB_DATA+80                       @05A 01924600
&PLOFF_XSTARTINDEX1 SETA  &PLOFF_XMCB_DATA+4                       @05A 01924700
&PLOFF_XSTARTINDEX2 SETA  &PLOFF_XMCB_DATA+8                       @05A 01924800
&PLOFF_XENDINDEX1  SETA  &PLOFF_XMCB_DATA+6                        @05A 01924900
&PLOFF_XENDINDEX2  SETA  &PLOFF_XMCB_DATA+10                       @05A 01925000
&PLOFF_XCMDFLAG4   SETA  &PLOFF_XMCB_DATA+7                        @05A 01925100
&PLOFF_XCMDFLAG5   SETA  &PLOFF_XMCB_DATA+10                       @05A 01925200
&PLOFF_XCMDFLAG6   SETA  &PLOFF_XMCB_DATA+12                       @05A 01925300
&PLOFF_XCMDFLAG7   SETA  &PLOFF_XMCB_DATA+36                       @05A 01925400
&PLOFF_XCMDFLAG8   SETA  &PLOFF_XMCB_DATA+13                       @05A 01925500
&PLOFF_XCMDFLAG9   SETA  &PLOFF_XMCB_DATA+88                       @PMC 01925600
&PLOFF_XCMDFLAG10  SETA  &PLOFF_XMCB_DATA+72                       @05A 01925700
&PLOFF_XCMDFLAG11  SETA  &PLOFF_XMCB_DATA+48                       @05A 01925800
.*                                                                      01925900
.**  Answer area offsets                                             ** 01926000
.*                                                                      01926100
                   LCLC  &AAOFF_LEVEL                                   01926200
                   LCLC  &AAOFF_OFFSET                                  01926300
                   LCLC  &AAOFF_LENGTH                                  01926400
                   LCLC  &AAOFF_RETCODE                                 01926500
                   LCLC  &AAOFF_RSNCODE                                 01926600
.*                                                                      01926700
&AAOFF_LEVEL       SETC  '0'                                            01926800
&AAOFF_OFFSET      SETC  '4'                                            01926900
&AAOFF_LENGTH      SETC  '8'                                            01927000
&AAOFF_RETCODE     SETC  '12'                                           01927100
&AAOFF_RSNCODE     SETC  '16'                                           01927200
.*                                                                      01927300
.**  Answer area values                                              ** 01927400
.*                                                                      01927500
                   LCLC  &AAVAL_LEVEL                                   01927600
                   LCLC  &AAVAL_OFFSET                                  01927700
                   LCLC  &AAVAL_LENGTH                                  01927800
                   LCLC  &AAVAL_RETCODE                                 01927900
                   LCLC  &AAVAL_RSNCODE                                 01928000
.*                                                                      01928100
&AAVAL_LEVEL       SETC  '0'                                            01928200
&AAVAL_OFFSET      SETC  '12'                                           01928300
&AAVAL_LENGTH      SETC  '8'                                            01928400
&AAVAL_RETCODE     SETC  '12'                                           01928500
&AAVAL_RSNCODE     SETC  'X''0C13'''                                    01928600
.*                                                                      01928700
.*                                                                      01928800
.**------------------------------------------------------------------** 01928900
.**  Declares for macro variables                                    ** 01929000
.**                                                                  ** 01929100
.**  The following AMG-declared variables are also used in this      ** 01929200
.**  section:                                                        ** 01929300
.**                                                                  ** 01929400
.**    AMG "x" and "zx" variables corresponding to interface keys    ** 01929500
.**    ZCGPR                                                         ** 01929600
.**    ZCLNG                                                         ** 01929700
.**    ZCVAL                                                         ** 01929800
.**    ZMACRET                                                       ** 01929900
.**    ZNDX                                                          ** 01930000
.**    ZPLLEN                                                        ** 01930100
.**    ZPRM                                                          ** 01930200
.**    ZPRMLINE                                                      ** 01930300
.**    ZPRMNUM                                                       ** 01930400
.**    ZW                                                            ** 01930500
.**                                                                  ** 01930600
.**------------------------------------------------------------------** 01930700
.*                                                                      01930800
               LCLC  &CACHECMD                                          01930900
               LCLC  &CACHEOPCODE                                       01931000
               LCLC  &CACHECMDLEN                                       01931100
.*                                                                      01931200
.*                                                                      01931300
.**------------------------------------------------------------------** 01931400
.**  Start of code to fill in the parameter list                     ** 01931500
.**------------------------------------------------------------------** 01931600
.*                                                                      01931700
.**------------------------------------------------------------------** 01931800
.**  Initialize the answer area                                      ** 01931900
.**------------------------------------------------------------------** 01932000
.*                                                                      01932100
               AIF   ('&XANSAREA' EQ 'NO_ANSAREA'     OR               *01932200
                      '&XANSAREA' EQ '').SKIPINITANSAREA                01932300
               AIF   ('&SYSASCE'  EQ 'P').SKIPINITANSALET               01932400
         L     14,&PLOFF_XANSAREA_ALET.(,1)                             01932500
         SAR   14,14                                                    01932600
.SKIPINITANSALET ANOP ,                                                 01932700
         L     14,&PLOFF_XANSAREA.(,1)                                  01932800
         LA    15,&AAVAL_LEVEL.                                         01932900
         ST    15,&AAOFF_LEVEL.(,14)                                    01933000
         LA    15,&AAVAL_OFFSET.                                        01933100
         ST    15,&AAOFF_OFFSET.(,14)                                   01933200
         LA    15,&AAVAL_LENGTH.                                        01933300
         ST    15,&AAOFF_LENGTH.(,14)                                   01933400
         LA    15,&AAVAL_RETCODE.                                       01933500
         ST    15,&AAOFF_RETCODE.(,14)                                  01933600
         LA    15,&AAVAL_RSNCODE.                                       01933700
         ST    15,&AAOFF_RSNCODE.(,14)                                  01933800
.SKIPINITANSAREA ANOP ,                                                 01933900
.*                                                                3@02D 01934000
.*                                                                      01934100
.**------------------------------------------------------------------** 01934200
.**  Find the command code, opcode, and length                       ** 01934300
.**                                                                  ** 01934400
.**  The length is set to the maximum length required for the        ** 01934500
.**  specified command.  The command code and opcode are set from    ** 01934600
.**  the combination of keys specified on the invocation.            ** 01934700
.**                                                                  ** 01934800
.**------------------------------------------------------------------** 01934900
.*                                                                      01935000
               AIF   ('&XREQUEST' NE 'READ_DATA').CMDNOTRAR             01935100
.*                                                                      01935200
&CACHECMD      SETC  '&KCACHECMDRAR'                                    01935300
&CACHEOPCODE   SETC  '&KCACHEOPRAR'                                     01935400
&CACHECMDLEN   SETC  '&KCACHERARLEN'                                    01935500
               AGO   .CMDENDSELECT                                      01935600
.*                                                                      01935700
.CMDNOTRAR ANOP ,                                                       01935800
.*                                                                      01935900
               AIF   ('&XREQUEST' NE 'CASTOUT_DATA').CMDNOTRFCO         01936000
.*                                                                      01936100
&CACHECMD      SETC  '&KCACHECMDRFCO'                                   01936200
&CACHEOPCODE   SETC  '&KCACHEOPRFCO'                                    01936300
&CACHECMDLEN   SETC  '&KCACHERFCOLEN'                                   01936400
               AGO   .CMDENDSELECT                                      01936500
.*                                                                      01936600
.CMDNOTRFCO ANOP ,                                                      01936700
.*                                                                      01936800
               AIF   ('&XREQUEST' NE 'READ_DIRINFO'  AND               *01936900
                      '&XREQUEST' NE 'RESET_REFBIT').CMDNOTRD           01937000
.*                                                                      01937100
&CACHECMD      SETC  '&KCACHECMDRD'                                     01937200
&CACHEOPCODE   SETC  '&KCACHEOPRD'                                      01937300
&CACHECMDLEN   SETC  '&KCACHERDLEN'                                     01937400
               AGO   .CMDENDSELECT                                      01937500
.*                                                                      01937600
.CMDNOTRD ANOP ,                                                        01937700
.*                                                                      01937800
               AIF   ('&XREQUEST' NE 'READ_COCLASS').CMDNOTRCC          01937900
.*                                                                      01938000
&CACHECMD      SETC  '&KCACHECMDRCC'                                    01938100
&CACHEOPCODE   SETC  '&KCACHEOPRCC'                                     01938200
&CACHECMDLEN   SETC  '&KCACHERCCLEN'                                    01938300
               AGO   .CMDENDSELECT                                      01938400
.*                                                                      01938500
.CMDNOTRCC ANOP ,                                                       01938600
.*                                                                      01938700
               AIF   ('&XREQUEST' NE 'READ_COSTATS').CMDNOTRCCI         01938800
.*                                                                      01938900
&CACHECMD      SETC  '&KCACHECMDRCCI'                                   01939000
&CACHEOPCODE   SETC  '&KCACHEOPRCCI'                                    01939100
&CACHECMDLEN   SETC  '&KCACHERCCILEN'                                   01939200
               AGO   .CMDENDSELECT                                      01939300
.*                                                                      01939400
.CMDNOTRCCI ANOP ,                                                      01939500
.*                                                                      01939600
               AIF   ('&XREQUEST' NE 'WRITE_DATA').CMDNOTWRITE          01939700
.*                                                                      01939800
               AIF   ('&XWHENREG' NE 'YES').CMDWRITEWAR                 01939900
.*                                                                      01940000
&CACHECMD      SETC  '&KCACHECMDWWR'                                    01940100
&CACHEOPCODE   SETC  '&KCACHEOPWWR'                                     01940200
&CACHECMDLEN   SETC  '&KCACHEWWRLEN'                                    01940300
               AGO   .CMDWRITEADJCHK                                    01940400
.*                                                                      01940500
.CMDWRITEWAR ANOP ,                                                     01940600
.*                                                                      01940700
&CACHECMD      SETC  '&KCACHECMDWAR'                                    01940800
&CACHEOPCODE   SETC  '&KCACHEOPWAR'                                     01940900
&CACHECMDLEN   SETC  '&KCACHEWARLEN'                                    01941000
.*                                                                      01941100
.CMDWRITEADJCHK ANOP ,                                                  01941200
.*                                                                      01941300
               AIF   ('&XADJAREA' EQ 'NO_ADJAREA'    OR                *01941400
                      '&XADJAREA' EQ '').CMDWRITEEND               @P7C 01941500
.*                                                                      01941600
&CACHECMDLEN   SETC  '&KCACHEWRITEALEN'                                 01941700
.*                                                                      01941800
.CMDWRITEEND ANOP ,                                                     01941900
.*                                                                      01942000
               AGO   .CMDENDSELECT                                      01942100
.*                                                                      01942200
.CMDNOTWRITE ANOP ,                                                     01942300
.*                                                                      01942400
               AIF   ('&XREQUEST' NE 'PROCESS_REFLIST').CMDNOTPRL       01942500
.*                                                                      01942600
&CACHECMD      SETC  '&KCACHECMDPRL'                                    01942700
&CACHEOPCODE   SETC  '&KCACHEOPPRL'                                     01942800
&CACHECMDLEN   SETC  '&KCACHEPRLLEN'                                    01942900
               AGO   .CMDENDSELECT                                      01943000
.*                                                                      01943100
.CMDNOTPRL ANOP ,                                                       01943200
.*                                                                      01943300
               AIF   ('&XREQUEST' NE 'UNLOCK_CASTOUT').CMDNOTUCL        01943400
.*                                                                      01943500
&CACHECMD      SETC  '&KCACHECMDUCL'                                    01943600
&CACHEOPCODE   SETC  '&KCACHEOPUCL'                                     01943700
&CACHECMDLEN   SETC  '&KCACHEUCLLEN'                                    01943800
               AGO   .CMDENDSELECT                                      01943900
.*                                                                      01944000
.CMDNOTUCL ANOP ,                                                       01944100
.*                                                                      01944200
               AIF   ('&XREQUEST' NE 'DELETE_NAME').CMDNOTIN            01944300
.*                                                                      01944400
&CACHECMD      SETC  '&KCACHECMDIN'                                     01944500
&CACHEOPCODE   SETC  '&KCACHEOPIN'                                      01944600
&CACHECMDLEN   SETC  '&KCACHEINLEN'                                     01944700
               AGO   .CMDENDSELECT                                      01944800
.*                                                                      01944900
.CMDNOTIN ANOP ,                                                        01945000
.*                                                                      01945100
               AIF   ('&XREQUEST' NE 'CROSS_INVAL').CMDNOTICC           01945200
.*                                                                      01945300
&CACHECMD      SETC  '&KCACHECMDICC'                                    01945400
&CACHEOPCODE   SETC  '&KCACHEOPICC'                                     01945500
&CACHECMDLEN   SETC  '&KCACHEICCLEN'                                    01945600
               AGO   .CMDENDSELECT                                      01945700
.*                                                                      01945800
.CMDNOTICC ANOP ,                                                       01945900
.*                                                                      01946000
               AIF   ('&XREQUEST' NE 'SET_RECLVCTR').CMDNOTSRV          01946100
.*                                                                      01946200
&CACHECMD      SETC  '&KCACHECMDSRV'                                    01946300
&CACHEOPCODE   SETC  '&KCACHEOPSRV'                                     01946400
&CACHECMDLEN   SETC  '&KCACHESRVLEN'                                    01946500
               AGO   .CMDENDSELECT                                      01946600
.*                                                                      01946700
.CMDNOTSRV ANOP ,                                                       01946800
.*                                                                      01946900
               AIF   ('&XREQUEST' NE 'READ_STGSTATS').CMDNOTRSCI        01947000
.*                                                                      01947100
&CACHECMD      SETC  '&KCACHECMDRSCI'                                   01947200
&CACHEOPCODE   SETC  '&KCACHEOPRSCI'                                    01947300
&CACHECMDLEN   SETC  '&KCACHERSCILEN'                                   01947400
               AGO   .CMDENDSELECT                                      01947500
.*                                                                      01947600
.CMDNOTRSCI ANOP ,                                                      01947700
.*                                                                      01947800
               AIF   ('&XREQUEST' NE 'REG_NAMELIST').CMDNOTRNL     @02A 01947900
.*                                                                      01948000
&CACHECMD      SETC  '&KCACHECMDRNL'                               @02A 01948100
&CACHEOPCODE   SETC  '&KCACHEOPRNL'                                @02A 01948200
&CACHECMDLEN   SETC  '&KCACHERNLLEN'                               @02A 01948300
               AGO   .CMDENDSELECT                                 @02A 01948400
.*                                                                      01948500
.CMDNOTRNL ANOP ,                                                  @02A 01948600
.*                                                                      01948700
     AIF   ('&XREQUEST' NE 'UNLOCK_CO_NAME').CMDNOTUCLE            @04A 01948800
.*                                                                      01948900
&CACHECMD      SETC  '&KCACHECMDUCLE'                              @04A 01949000
&CACHEOPCODE   SETC  '&KCACHEOPUCLE'                               @04A 01949100
&CACHECMDLEN   SETC  '&KCACHEUCLELEN'                              @04A 01949200
               AGO   .CMDENDSELECT                                 @04A 01949300
.*                                                                      01949400
.CMDNOTUCLE ANOP ,                                                 @04A 01949500
.*                                                                      01949600
     AIF   ('&XREQUEST' NE 'DELETE_NAMELIST').CMDNOTINL            @05A 01949700
.*                                                                      01949800
&CACHECMD      SETC  '&KCACHECMDINL'                               @05A 01949900
&CACHEOPCODE   SETC  '&KCACHEOPINL'                                @05A 01950000
&CACHECMDLEN   SETC  '&KCACHEINLLEN'                               @05A 01950100
               AGO   .CMDENDSELECT                                 @05A 01950200
.*                                                                      01950300
.CMDNOTINL  ANOP ,                                                 @05A 01950400
.*                                                                      01950500
     AIF   ('&XREQUEST' NE 'CROSS_INVALLIST').CMDNOTICCL           @L5A 01950600
.*                                                                      01950700
&CACHECMD      SETC  '&KCACHECMDICCL'                              @L5A 01950800
&CACHEOPCODE   SETC  '&KCACHEOPICCL'                               @L5A 01950900
&CACHECMDLEN   SETC  '&KCACHEICCLLEN'                              @L5A 01951000
               AGO   .CMDENDSELECT                                 @L5A 01951100
.*                                                                      01951200
.CMDNOTICCL  ANOP ,                                                @L5A 01951300
.*                                                                      01951400
     AIF   ('&XREQUEST' NE 'CASTOUT_DATALIST').CMDNOTRFCOM         @L5A 01951500
.*                                                                      01951600
&CACHECMD      SETC  '&KCACHECMDRFCOM'                             @L5A 01951700
&CACHEOPCODE   SETC  '&KCACHEOPRFCOM'                              @L5A 01951800
&CACHECMDLEN   SETC  '&KCACHERFCOMLEN'                             @L5A 01951900
               AGO   .CMDENDSELECT                                 @L5A 01952000
.*                                                                      01952100
.CMDNOTRFCOM  ANOP ,                                               @L5A 01952200
.*                                                                      01952300
     AIF   ('&XREQUEST' NE 'WRITE_DATALIST').CMDNOTWARM            @L5A 01952400
.*                                                                      01952500
&CACHECMD      SETC  '&KCACHECMDWARM'                              @L5A 01952600
&CACHEOPCODE   SETC  '&KCACHEOPWARM'                               @L5A 01952700
&CACHECMDLEN   SETC  '&KCACHEWARMLEN'                              @L5A 01952800
               AGO   .CMDENDSELECT                                 @L5A 01952900
.*                                                                      01953000
.CMDNOTWARM  ANOP ,                                                @L5A 01953100
.*                                                                      01953200
.CMDENDSELECT ANOP ,                                                    01953300
.*                                                                      01953400
.*                                                                      01953500
.**------------------------------------------------------------------** 01953600
.**  Fill in shell layer parameter fields                            ** 01953700
.**------------------------------------------------------------------** 01953800
.*                                                                      01953900
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01954000
.**  Set the command code                                            ** 01954100
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01954200
.*                                                                      01954300
.*   _xCmdCode                                                          01954400
         MVI   &PLOFF_XCMDCODE.(1),&CACHECMD                            01954500
.*                                                                      01954600
.*                                                                      01954700
.**------------------------------------------------------------------** 01954800
.**  Fill in MOB parameter fields                                    ** 01954900
.**------------------------------------------------------------------** 01955000
.*                                                                      01955100
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01955200
.**  Set the command data length                                     ** 01955300
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01955400
.*                                                                      01955500
         LA    14,&CACHECMDLEN                                          01955600
.*                                                                      01955700
.*   _xCmdLen                                                           01955800
         STH   14,&PLOFF_XCMDLEN.(,1)                                   01955900
.*                                                                      01956000
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01956100
.**  Set the BufNum value                                            ** 01956200
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01956300
.*                                                                      01956400
         AIF   ('&XBUFFER' EQ '').SKIPSETBUFNUM1                   @P9A 01956500
.*                                                                      01956600
         AIF   ('&XREQUEST' NE 'UNLOCK_CASTOUT'   AND                  *01956700
                '&XREQUEST' NE 'READ_COCLASS'     AND                  *01956800
                '&XREQUEST' NE 'READ_DIRINFO'     AND                  *01956900
                '&XREQUEST' NE 'READ_COSTATS'     AND                  *01957000
                '&XREQUEST' NE 'CASTOUT_DATALIST' AND                  *01957100
                '&XREQUEST' NE 'PROCESS_REFLIST').SKIPSETBUFNUM2   @L5C 01957200
.*                                                                      01957300
.*   _xBufNum                                                           01957400
         L     14,&PLOFF_XBUFSIZE.(0,1)                            @P9A 01957500
         SRL   14,12                                               @P9A 01957600
         STC   14,&PLOFF_XBUFNUM.(0,1)                             @P9A 01957700
.*                                                                      01957800
.SKIPSETBUFNUM2 ANOP ,                                             @P9A 01957900
.SKIPSETBUFNUM1 ANOP ,                                             @P9A 01958000
.*                                                                      01958100
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01958200
.**  Set the BufIncrNum value                                        ** 01958300
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01958400
.*                                                                      01958500
         AIF   ('&XREQUEST' NE 'UNLOCK_CASTOUT'   AND                  *01958600
                '&XREQUEST' NE 'READ_COCLASS'     AND                  *01958700
                '&XREQUEST' NE 'READ_DIRINFO'     AND                  *01958800
                '&XREQUEST' NE 'READ_COSTATS'     AND                  *01958900
                '&XREQUEST' NE 'CASTOUT_DATALIST' AND                  *01959000
                '&XREQUEST' NE 'WRITE_DATALIST'   AND                  *01959100
                '&XREQUEST' NE 'PROCESS_REFLIST').SKIPSETBUFINUM   @D7C 01959200
.*                                                                      01959300
.*   _xBufIncrNum                                                       01959400
         MVI   &PLOFF_XBUFINCRNUM.(1),16                                01959500
.*                                                                      01959600
.SKIPSETBUFINUM ANOP ,                                             @P9C 01959700
.*                                                                      01959800
.*                                                                      01959900
.**------------------------------------------------------------------** 01960000
.**  Fill in MCB parameter fields                                    ** 01960100
.**------------------------------------------------------------------** 01960200
.*                                                                      01960300
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01960400
.**  Set the command opcode                                          ** 01960500
.**  - The command opcode is stored in two pieces to allow the       ** 01960600
.**    MVI instruction to be used for efficiency.                    ** 01960700
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01960800
.*                                                                      01960900
.*   _xCcA                                                              01961000
         MVI   &PLOFF_XCCA.(1),&KCACHECMDTYPE                           01961100
.*                                                                      01961200
.*   _xCcB                                                              01961300
         MVI   &PLOFF_XCCB.(1),&CACHEOPCODE                             01961400
.*                                                                      01961500
.*                                                                      01961600
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01961700
.**  Set DAS values                                                  ** 01961800
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01961900
         AIF   ('&XREQUEST' NE 'WRITE_DATA').SKIPSETDAS                 01962000
.*                                                                      01962100
.* Handle the ElemNum specification.                                    01962200
.* There are four ways it can be specified:                             01962300
.*  1) ELEMNUM=(reg)       --> "reg" contains the address of the value  01962400
.*  2) ELEMNUM=offset(reg) --> explicit basing specification            01962500
.*  3) ELEMNUM=name        --> variable name                            01962600
.*  4) ELEMNUM=value       --> hard-coded value                         01962700
.*                                                                      01962800
&ZLOP    SETC  'MVC'                                               @PHA 01962900
&ZLV     SETC  '(1,1)'                                             @PHA 01963000
         AIF   ('&XELEMNUM'(1,1) NE '(').PLELEMNUMNOTREG           @PHA 01963100
&ZCGPR   SETC  '0('.'&XELEMNUM'(2,K'&XELEMNUM-2).')'               @PHA 01963200
         AGO   .PLENDELEMNUMSETUP                                  @PHA 01963300
.PLELEMNUMNOTREG ANOP ,                                            @PHA 01963400
&ZCGPR   SETC  '&XELEMNUM'                                         @PHA 01963500
&ZC      SETC  '&XELEMNUM'(1,1)                                    @PHA 01963600
         AIF   (T'&ZC NE 'N').PLENDELEMNUMSETUP                    @PHA 01963700
&ZC      SETC  '&XELEMNUM'                                         @PHA 01963800
         AIF   ('&ZC'(K'&ZC,1) EQ ')').PLENDELEMNUMSETUP           @PHA 01963900
&ZLOP    SETC  'MVI'                                               @PHA 01964000
&ZLV     SETC  '(1)'                                               @PHA 01964100
.PLENDELEMNUMSETUP ANOP ,                                          @PHA 01964200
.*                                                                      01964300
         AIF   ('&XWHENREG' NE 'YES').SETDASWAR                         01964400
         &ZLOP   &PLOFF_XDAS1.&ZLV.,&ZCGPR                         @PHC 01964500
         AGO   .ENDSETDAS                                               01964600
.SETDASWAR  ANOP ,                                                      01964700
         &ZLOP   &PLOFF_XDAS2.&ZLV.,&ZCGPR                         @PHC 01964800
.ENDSETDAS  ANOP ,                                                      01964900
.SKIPSETDAS ANOP ,                                                      01965000
.*                                                                      01965100
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01965200
.**  Set DBS values                                                  ** 01965300
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01965400
         AIF   ('&XREQUEST' NE 'READ_DIRINFO'  AND                     *01965500
                '&XREQUEST' NE 'CASTOUT_DATALIST').SKIPSETDBS1    @L5C  01965600
         MVC   &PLOFF_XDBS1.(1,1),&PLOFF_XBUFNUM.(1)                    01965700
.SKIPSETDBS1   ANOP ,                                                   01965800
         AIF   ('&XREQUEST' NE 'READ_COSTATS').SKIPSETDBS2              01965900
         MVC   &PLOFF_XDBS2.(1,1),&PLOFF_XBUFNUM.(1)                    01966000
.SKIPSETDBS2   ANOP ,                                                   01966100
         AIF   ('&XREQUEST' NE 'READ_COCLASS').SKIPSETDBS3              01966200
         MVC   &PLOFF_XDBS3.(1,1),&PLOFF_XBUFNUM.(1)                    01966300
.SKIPSETDBS3   ANOP ,                                                   01966400
.*                                                                      01966500
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01966600
.**  Set LCID values                                                 ** 01966700
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01966800
         AIF   ('&XREQUEST' NE 'READ_DATA'        AND                  *01966900
                '&XREQUEST' NE 'CASTOUT_DATA'     AND                  *01967000
                '&XREQUEST' NE 'WRITE_DATA'       AND                  *01967100
                '&XREQUEST' NE 'PROCESS_REFLIST'  AND                  *01967200
                '&XREQUEST' NE 'UNLOCK_CO_NAME'   AND                  *01967300
                '&XREQUEST' NE 'CASTOUT_DATALIST' AND                  *01967400
                '&XREQUEST' NE 'UNLOCK_CASTOUT').SKIPSETLCID1      @L5C 01967500
         MVC   &PLOFF_XLCID1.(1,1),&PLOFF_XCONID.(1)                    01967600
.SKIPSETLCID1  ANOP ,                                                   01967700
         AIF   ('&XREQUEST' NE 'CROSS_INVAL'     AND                   *01967800
                '&XREQUEST' NE 'CROSS_INVALLIST').SKIPSETLCID2     @L5C 01967900
         MVC   &PLOFF_XLCID2.(1,1),&PLOFF_XCONID.(1)                    01968000
.SKIPSETLCID2  ANOP ,                                                   01968100
         AIF   ('&XREQUEST' NE 'REG_NAMELIST').SKIPSETLCID3        @02A 01968200
         MVC   &PLOFF_XLCID3.(1,1),&PLOFF_XCONID.(1)               @02A 01968300
.SKIPSETLCID3  ANOP ,                                              @02A 01968400
.*                                                                      01968500
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01968600
.**  Set restart token from extended restart token                @L1A* 01968700
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01968800
         AIF   ('&XREQUEST' NE 'READ_DIRINFO'    AND                   *01968900
                '&XREQUEST' NE 'READ_COCLASS'    AND                   *01969000
                '&XREQUEST' NE 'CROSS_INVAL'     AND                   *01969100
                '&XREQUEST' NE 'DELETE_NAME'     AND                   *01969200
                '&XREQUEST' NE 'RESET_REFBIT').SKIPSETEXTRES1      @L1A 01969300
         AIF   ('&XEXTRESTOKEN' EQ '').SKIPSETEXTRES1              @L1A 01969400
.*   _xRestoken, _xExtRestokenTkn                                       01969500
         MVC   &PLOFF_XRESTOKEN.(8,1),&PLOFF_XEXTRESTOKENTKN.(1)   @L1A 01969600
.SKIPSETEXTRES1 ANOP ,                                             @L1A 01969700
.*                                                                      01969800
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01969900
.**  Set user data values                                            ** 01970000
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01970100
         AIF   ('&XUSERDATA' EQ '').SKIPSETUSERDATA                     01970200
         AIF   ('&XWHENREG'  NE 'YES').SKIPSETUSERDATA1            @PSC 01970300
         AIF   ('&XUSERDATA'(1,1) EQ '(').USERDATA1REG             @PQA 01970400
         MVC   &PLOFF_XUSERDATA1.(8,1),&XUSERDATA                       01970500
         AGO   .ENDSETUSERDATA                                          01970600
.USERDATA1REG     ANOP ,                                           @PRA 01970700
         MVC   &PLOFF_XUSERDATA1.(8,1),0&XUSERDATA                 @PRC 01970800
         AGO   .ENDSETUSERDATA                                     @PQA 01970900
.SKIPSETUSERDATA1 ANOP ,                                                01971000
         AIF   ('&XUSERDATA'(1,1) EQ '(').USERDATA2REG             @PQA 01971100
         MVC   &PLOFF_XUSERDATA2.(8,1),&XUSERDATA                       01971200
         AGO   .ENDSETUSERDATA                                     @PQA 01971300
.USERDATA2REG     ANOP ,                                           @PRA 01971400
         MVC   &PLOFF_XUSERDATA2.(8,1),0&XUSERDATA                 @PRC 01971500
.ENDSETUSERDATA   ANOP ,                                                01971600
.SKIPSETUSERDATA  ANOP ,                                                01971700
.*                                                                      01971800
.*                                                                      01971900
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01972000
.**  Set CmdFlag1 values                                             ** 01972100
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01972200
.*                                                                      01972300
&ZW      SETC  ''                                                       01972400
&ZCLNG   SETC  ''                                                       01972500
.*                                                                      01972600
         AIF   ('&XREQUEST' NE 'READ_DATA').SKIPCF1AREAD                01972700
         AIF   ('&XASSIGN' NE 'YES').SETCF1AREADASSIGNNO                01972800
&ZW      SETC  '&ZW.1'                                                  01972900
&ZCLNG   SETC  'YES'                                                    01973000
         AGO   .ENDSETCF1AREAD                                          01973100
.SETCF1AREADASSIGNNO ANOP ,                                             01973200
&ZW      SETC  '&ZW.0'                                                  01973300
.ENDSETCF1AREAD ANOP ,                                                  01973400
         AGO   .ENDSETCMDFLAG1A                                         01973500
.*                                                                      01973600
.SKIPCF1AREAD ANOP ,                                                    01973700
         AIF   ('&XREQUEST' NE 'CASTOUT_DATA').SKIPCF1ACASTOUT          01973800
         AIF   ('&XREGUSER' NE 'YES').SETCF1ACOREGUSERNO                01973900
&ZW      SETC  '&ZW.1'                                                  01974000
&ZCLNG   SETC  'YES'                                                    01974100
         AGO   .ENDSETCF1ACASTOUT                                       01974200
.SETCF1ACOREGUSERNO ANOP ,                                              01974300
&ZW      SETC  '&ZW.0'                                                  01974400
.ENDSETCF1ACASTOUT ANOP ,                                               01974500
         AGO   .ENDSETCMDFLAG1A                                         01974600
.*                                                                      01974700
.SKIPCF1ACASTOUT ANOP ,                                            @P7C 01974800
         AIF   ('&XREQUEST' NE 'READ_DIRINFO'     AND                  *01974900
                '&XREQUEST' NE 'RESET_REFBIT').SKIPCF1ARD               01975000
         AIF   ('&XCRITERIA' NE 'CHANGED').SETCF1ARDUNCHANGED           01975100
&ZW      SETC  '&ZW.1'                                                  01975200
&ZCLNG   SETC  'YES'                                                    01975300
         AGO   .ENDSETCF1ARD                                            01975400
.SETCF1ARDUNCHANGED ANOP ,                                              01975500
&ZW      SETC  '&ZW.0'                                                  01975600
.ENDSETCF1ARD ANOP ,                                                    01975700
         AGO   .ENDSETCMDFLAG1A                                         01975800
.*                                                                      01975900
.SKIPCF1ARD ANOP ,                                                      01976000
&ZW      SETC  '&ZW.0'                                                  01976100
.ENDSETCMDFLAG1A ANOP ,                                                 01976200
.*                                                                      01976300
         AIF   ('&XREQUEST' NE 'READ_DATA'        AND                  *01976400
                '&XREQUEST' NE 'CASTOUT_DATA').SKIPCF1BREAD             01976500
         AIF   ('&XOLDNAME' EQ '').SETCF1BREADOLDNM                     01976600
&ZW      SETC  '&ZW.1'                                                  01976700
&ZCLNG   SETC  'YES'                                                    01976800
         AGO   .ENDSETCF1BREAD                                          01976900
.SETCF1BREADOLDNM ANOP ,                                                01977000
&ZW      SETC  '&ZW.0'                                                  01977100
.ENDSETCF1BREAD ANOP ,                                                  01977200
.*                                                                @04D  01977300
         AIF   ('&XREQUEST' NE 'READ_DATA').SKIPCF1CREAD          @04A  01977400
         AIF   ('&XRETURNDATA' NE 'NO').SETCF1CRETURNDATA         @04A  01977500
&ZW      SETC  '&ZW.1'                                            @04A  01977600
&ZCLNG   SETC  'YES'                                              @04A  01977700
         AGO   .ENDSETCMDFLAG1C                                   @04A  01977800
.SETCF1CRETURNDATA ANOP ,                                         @04A  01977900
&ZW      SETC  '&ZW.0'                                            @04A  01978000
         AGO   .ENDSETCMDFLAG1C                                   @04A  01978100
.*                                                                      01978200
.SKIPCF1CREAD ANOP ,                                              @04A  01978300
&ZW      SETC  '&ZW.0'                                                  01978400
         AGO   .ENDSETCMDFLAG1C                                   @05C  01978500
.SKIPCF1BREAD ANOP ,                                                    01978600
         AIF   ('&XREQUEST' NE 'READ_DIRINFO').SKIPCF1BRD               01978700
         AIF   ('&XDIRINFOFMT' EQ 'NAMELIST').SETCF1BRDDIR              01978800
&ZW      SETC  '&ZW.01'                                           @01C  01978900
&ZCLNG   SETC  'YES'                                                    01979000
         AGO   .ENDSETCF1BRD                                            01979100
.SETCF1BRDDIR ANOP ,                                                    01979200
&ZW      SETC  '&ZW.10'                                           @01C  01979300
&ZCLNG   SETC  'YES'                                                    01979400
.ENDSETCF1BRD ANOP ,                                                    01979500
         AGO   .ENDSETCMDFLAG1B                                         01979600
.*                                                                      01979700
.SKIPCF1BRD ANOP ,                                                      01979800
         AIF   ('&XREQUEST' NE 'RESET_REFBIT').SKIPCF1BRESET            01979900
&ZW      SETC  '&ZW.11'                                                 01980000
&ZCLNG   SETC  'YES'                                                    01980100
         AGO   .ENDSETCMDFLAG1B                                         01980200
.*                                                                      01980300
.SKIPCF1BRESET ANOP ,                                                   01980400
&ZW      SETC  '&ZW.00'                                                 01980500
.ENDSETCMDFLAG1B ANOP ,                                                 01980600
.ENDSETCMDFLAG1C ANOP ,                                           @04A  01980700
.*                                                                      01980800
         AIF   ('&XREQUEST' NE 'READ_DATA').SKIPCF1DREAD          @05A  01980900
         AIF   ('&XREGUSER' NE 'NO').SKIPCF1DSREG                 @05A  01981000
&ZW      SETC  '&ZW.1'                                            @05A  01981100
&ZCLNG   SETC  'YES'                                              @05A  01981200
         AGO   .ENDSETCMDFLAG1D                                   @05A  01981300
.SKIPCF1DSREG ANOP ,                                              @05A  01981400
.SKIPCF1DREAD ANOP ,                                              @05A  01981500
&ZW      SETC  '&ZW.0'                                            @05A  01981600
.*                                                                      01981700
.ENDSETCMDFLAG1D ANOP ,                                           @05A  01981800
&ZW      SETC  '&ZW.0000'                                         @PKC  01981900
&ZW      SETC  'B''&ZW.'''                                              01982000
         AIF   ('&ZCLNG' NE 'YES').PLNOCMDFLGS1                         01982100
.*   _xCmdFlag1                                                         01982200
         OI    &PLOFF_XCMDFLAG1.(1),&ZW                                 01982300
.PLNOCMDFLGS1 ANOP ,                                                    01982400
.*                                                                      01982500
.*                                                                      01982600
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01982700
.**  Set parity value when the default was not taken                 ** 01982800
.**                                                                  ** 01982900
.**  Note that the parity is in the same byte as the                 ** 01983000
.**  CmdFlag2/3.  Because of this the parity bits should be stored   ** 01983100
.**  before the other bits in the flag byte are set.                 ** 01983200
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01983300
.*                                                                      01983400
         AIF   ('&XCHANGED' NE 'YES'            OR                     *01983500
                '&XPARITY' EQ '00110000'        OR                     *01983600
                '&XPARITY' EQ '00010000'        OR                     *01983700
                '&XPARITY' EQ '00000000').SKIPSETPARITY            @PHC 01983800
.*                                                                      01983900
.* Handle the Parity specification.                                     01984000
.* There are five ways it can be specified:                             01984100
.*  1) PARITY=(reg)       --> "reg" contains the address of the value   01984200
.*  2) PARITY=offset(reg) --> explicit basing specification             01984300
.*  3) PARITY=name        --> variable name                             01984400
.*  4) PARITY=value       --> hard-coded (assumed decimal) value        01984500
.*  5) PARITY=value       --> hard-coded binary value (handled lower)   01984600
.*                                                                      01984700
&ZLOP    SETC  'MVC'                                               @PHA 01984800
&ZLV     SETC  '(1,1)'                                             @PHA 01984900
         AIF   ('&XPARITY'(1,1) NE '(').PLPARITYNOTREG             @PHA 01985000
&ZCGPR   SETC  '0('.'&XPARITY'(2,K'&XPARITY-2).')'                 @PHA 01985100
         AGO   .PLENDPARITYSETUP                                   @PHA 01985200
.PLPARITYNOTREG ANOP ,                                             @PHA 01985300
&ZCGPR   SETC  '&XPARITY'                                          @PHA 01985400
&ZC      SETC  '&XPARITY'(1,1)                                     @PHA 01985500
         AIF   (T'&ZC NE 'N').PLENDPARITYSETUP                     @PHA 01985600
&ZC      SETC  '&XPARITY'                                          @PHA 01985700
         AIF   ('&ZC'(K'&ZC,1) EQ ')').PLENDPARITYSETUP            @PHA 01985800
&ZLOP    SETC  'MVI'                                               @PHA 01985900
&ZLV     SETC  '(1)'                                               @PHA 01986000
.PLENDPARITYSETUP ANOP ,                                           @PHA 01986100
.*                                                                      01986200
         AIF   ('&XWHENREG' NE 'YES').SETPARITY3                        01986300
         &ZLOP.   &PLOFF_XCMDFLAG2.&ZLV.,&ZCGPR                    @PHC 01986400
         NI    &PLOFF_XCMDFLAG2.(1),B'00110000'                         01986500
         AGO   .ENDSETPARITY                                            01986600
.SETPARITY3 ANOP ,                                                      01986700
         &ZLOP.   &PLOFF_XCMDFLAG3.&ZLV.,&ZCGPR                    @PHC 01986800
         NI    &PLOFF_XCMDFLAG3.(1),B'00110000'                         01986900
.ENDSETPARITY ANOP ,                                                    01987000
.SKIPSETPARITY ANOP ,                                                   01987100
.*                                                                      01987200
.*                                                                      01987300
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01987400
.**  Set CmdFlag2/3 values                                           ** 01987500
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01987600
.*                                                                      01987700
&ZW      SETC  ''                                                       01987800
&ZCLNG   SETC  ''                                                       01987900
.*                                                                      01988000
         AIF   ('&XREQUEST' NE 'WRITE_DATA').SKIPCF23WRITE              01988100
.*                                                                      01988200
         AIF   ('&XCHANGED' NE 'YES').CF23CHANGEDNO                     01988300
&ZW      SETC  '&ZW.1'                                                  01988400
&ZCLNG   SETC  'YES'                                                    01988500
         AGO   .CF23ENDCHANGED                                          01988600
.CF23CHANGEDNO ANOP ,                                                   01988700
&ZW      SETC  '&ZW.0'                                                  01988800
.CF23ENDCHANGED ANOP ,                                                  01988900
.*                                                                      01989000
         AIF   ('&XWHENREG' NE 'YES').CF23WHENREGNO                @02A 01989100
         AIF   ('&XVECTORINDEX' EQ '' OR                               *01989200
                '&XVECTORINDEX' EQ 'NO_VECTORINDEX').CF23NOVECTORINDEX  01989300
.*                                                                 @02A 01989400
&ZW      SETC  '&ZW.1'                                             @02A 01989500
&ZCLNG   SETC  'YES'                                               @02A 01989600
         AGO   .CF23ENDVECTORINDEX                                 @02A 01989700
.CF23NOVECTORINDEX ANOP ,                                          @02A 01989800
&ZW      SETC  '&ZW.0'                                             @02A 01989900
         AGO   .CF23ENDVECTORINDEX                                 @02A 01990000
.*                                                                 @02A 01990100
.CF23WHENREGNO ANOP ,                                              @02A 01990200
         AIF   ('&XOLDNAME' EQ '').CF23NOOLDNAME                        01990300
&ZW      SETC  '&ZW.1'                                                  01990400
&ZCLNG   SETC  'YES'                                                    01990500
         AGO   .CF23ENDOLDNAME                                          01990600
.CF23NOOLDNAME ANOP ,                                                   01990700
&ZW      SETC  '&ZW.0'                                                  01990800
.CF23ENDOLDNAME ANOP ,                                                  01990900
.*                                                                      01991000
.CF23ENDVECTORINDEX ANOP ,                                         @02A 01991100
.*                                                                      01991200
         AIF   ('&XCHANGED' NE 'YES').CF23SKIPPARITY               @PHC 01991300
         AIF    ('&XPARITY' NE '00110000').CF23SKIPPARITY11        @PHA 01991400
&ZW      SETC  '&ZW.11'                                                 01991500
&ZCLNG   SETC  'YES'                                                    01991600
         AGO   .CF23ENDPARITY                                           01991700
.CF23SKIPPARITY11 ANOP ,                                           @PHA 01991800
         AIF    ('&XPARITY' NE '00010000').CF23SKIPPARITY          @PHA 01991900
&ZW      SETC  '&ZW.01'                                            @PHA 01992000
&ZCLNG   SETC  'YES'                                               @PHA 01992100
         AGO   .CF23ENDPARITY                                      @PHA 01992200
.CF23SKIPPARITY ANOP ,                                                  01992300
&ZW      SETC  '&ZW.00'                                                 01992400
.CF23ENDPARITY ANOP ,                                                   01992500
.*                                                                      01992600
         AIF   ('&XGETCOLOCK' NE 'YES').CF23NOGETCOLCK             @D3A 01992700
&ZW      SETC  '&ZW.1'                                             @D3A 01992800
&ZCLNG   SETC  'YES'                                               @D3A 01992900
         AGO   .CF23ENDGETCOLCK                                    @D3A 01993000
.CF23NOGETCOLCK ANOP ,                                             @D3A 01993100
&ZW      SETC  '&ZW.0'                                             @D3A 01993200
.CF23ENDGETCOLCK ANOP ,                                            @D3A 01993300
.*                                                                      01993400
         AIF   ('&XCROSSINVAL' NE 'YES').CF23NOCROSSINVAL          @D3A 01993500
&ZW      SETC  '&ZW.1'                                             @D3A 01993600
&ZCLNG   SETC  'YES'                                               @D3A 01993700
         AGO   .CF23ENDCROSSINVAL                                  @D3A 01993800
.CF23NOCROSSINVAL ANOP ,                                           @D3A 01993900
&ZW      SETC  '&ZW.0'                                             @D3A 01994000
.CF23ENDCROSSINVAL ANOP ,                                          @D3A 01994100
.*                                                                      01994200
         AGO   .ENDCF23REQ                                              01994300
.SKIPCF23WRITE ANOP ,                                                   01994400
&ZW      SETC  '&ZW.000000'                                        @D3C 01994500
.ENDCF23REQ ANOP ,                                                      01994600
.*                                                                      01994700
&ZW      SETC  '&ZW.00'                                            @D3C 01994800
&ZW      SETC  'B''&ZW.'''                                              01994900
         AIF   ('&ZCLNG' NE 'YES').PLNOCMDFLGS23                        01995000
         AIF   ('&XWHENREG' NE 'YES').STORECF23WAR                      01995100
.*   _xCmdFlag2                                                         01995200
         OI    &PLOFF_XCMDFLAG2.(1),&ZW                                 01995300
         AGO   .ENDSTORECF23                                            01995400
.STORECF23WAR   ANOP ,                                                  01995500
.*   _xCmdFlag3                                                         01995600
         OI    &PLOFF_XCMDFLAG3.(1),&ZW                                 01995700
.ENDSTORECF23  ANOP ,                                                   01995800
.PLNOCMDFLGS23 ANOP ,                                                   01995900
.*                                                                      01996000
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01996100
.**  Set CmdFlag4/6 values                                      @05A ** 01996200
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 01996300
.*                                                                      01996400
&ZW      SETC  ''                                                  @05A 01996500
&ZCLNG   SETC  ''                                                  @05A 01996600
.*                                                                      01996700
         AIF   ('&XREQUEST' NE 'DELETE_NAME'     AND                   *01996800
                '&XREQUEST' NE 'DELETE_NAMELIST').PLNOTDELNAME     @05A 01996900
         AIF   ('&XDELETETYPE' NE 'ANYDATA').CF46NOTANYDATA        @05A 01997000
&ZW      SETC  '&ZW.11'                                            @05A 01997100
&ZCLNG   SETC  'YES'                                               @05A 01997200
         AGO   .CF46ITYPDONE                                       @05A 01997300
.CF46NOTANYDATA   ANOP ,                                           @05A 01997400
         AIF   ('&XDELETETYPE' NE 'CHDATA').CF46NOTCHDATA          @05A 01997500
&ZW      SETC  '&ZW.10'                                            @05A 01997600
&ZCLNG   SETC  'YES'                                               @05A 01997700
         AGO   .CF46ITYPDONE                                       @05A 01997800
.CF46NOTCHDATA    ANOP ,                                           @05A 01997900
         AIF   ('&XDELETETYPE' NE 'UNCHDATA').CF46NOTUNCHDATA      @05A 01998000
&ZW      SETC  '&ZW.01'                                            @05A 01998100
&ZCLNG   SETC  'YES'                                               @05A 01998200
         AGO   .CF46ITYPDONE                                       @05A 01998300
.CF46NOTUNCHDATA  ANOP ,                                           @05A 01998400
&ZW      SETC  '&ZW.00'                                            @05A 01998500
.CF46ITYPDONE     ANOP ,                                           @05A 01998600
         AIF   ('&XREQUEST' NE 'DELETE_NAMELIST' OR                    *01998700
                '&XERRORACTION' NE 'TERMINATE').CF46NOTTERM        @05A 01998800
&ZW      SETC  '&ZW.1'                                             @05A 01998900
&ZCLNG   SETC  'YES'                                               @05A 01999000
         AGO   .CF46HICDONE                                        @05A 01999100
.CF46NOTTERM      ANOP ,                                           @05A 01999200
&ZW      SETC  '&ZW.0'                                             @05A 01999300
.CF46HICDONE      ANOP ,                                           @05A 01999400
.*                                                                      01999500
         AIF   ('&XDELETETYPE' NE 'DIRANDDATA').CF46NOTDIRANDDATA  @0BA 01999600
         AIF   ('&XHALTONCHANGED' NE 'YES').CF46NOHCSC             @0BA 01999700
&ZW      SETC  '&ZW.1'                                             @0BA 01999800
&ZCLNG   SETC  'YES'                                               @0BA 01999900
         AGO   .CF46HCSCDONE                                       @0BA 02000000
.CF46NOHCSC       ANOP ,                                           @0BA 02000100
&ZW      SETC  '&ZW.0'                                             @0BA 02000200
.CF46HCSCDONE     ANOP ,                                           @0BA 02000300
         AIF   ('&XSUPPCROSSINVAL' NE 'YES').CF46NOSXIC            @0BA 02000400
&ZW      SETC  '&ZW.1'                                             @0BA 02000500
&ZCLNG   SETC  'YES'                                               @0BA 02000600
         AGO   .CF46DONE                                           @0BA 02000700
.CF46NOSXIC       ANOP ,                                           @0BA 02000800
&ZW      SETC  '&ZW.0'                                             @0BA 02000900
         AGO   .CF46DONE                                           @0BA 02001000
.*                                                                      02001100
.CF46NOTDIRANDDATA  ANOP ,                                         @0BA 02001200
&ZW      SETC  '&ZW.00'                                            @0BA 02001300
.*                                                                      02001400
.CF46DONE         ANOP ,                                           @0BA 02001500
&ZW      SETC  '&ZW.000'                                           @0BC 02001600
&ZW      SETC  'B''&ZW.'''                                         @05A 02001700
         AIF   ('&ZCLNG' NE 'YES').PLNOTDELNAME                    @L5C 02001800
         AIF   ('&XREQUEST' NE 'DELETE_NAME').CF46WRITEINL         @05A 02001900
.*   _xCmdFlag4                                                    @05A 02002000
         OI    &PLOFF_XCMDFLAG4.(1),&ZW                            @05A 02002100
         AGO   .CF46WRITTEN                                        @05A 02002200
.CF46WRITEINL     ANOP ,                                           @05A 02002300
.*   _xCmdFlag6                                                    @05A 02002400
         OI    &PLOFF_XCMDFLAG6.(1),&ZW                            @05A 02002500
.CF46WRITTEN   ANOP ,                                              @05A 02002600
.PLNOTDELNAME  ANOP ,                                              @L5A 02002700
.*                                                                      02002800
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 02002900
.**  Set CmdFlag6 values for CROSS_INVALLIST                    @L5A ** 02003000
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 02003100
.*                                                                      02003200
&ZW      SETC  ''                                                  @L5A 02003300
&ZCLNG   SETC  ''                                                  @L5A 02003400
.*                                                                      02003500
         AIF   ('&XREQUEST' NE 'CROSS_INVALLIST').PLNOTICCL        @L5A 02003600
         AIF   ('&XERRORACTION' NE 'TERMINATE').PLNOCMDFLGS46      @L5A 02003700
&ZW      SETC  '&ZW.1'                                             @L5A 02003800
&ZW      SETC  '&ZW.0000000'                                       @L5A 02003900
&ZW      SETC  'B''&ZW.'''                                         @L5A 02004000
.*   _xCmdFlag6                                                    @L5A 02004100
         OI    &PLOFF_XCMDFLAG6.(1),&ZW                            @L5A 02004200
.PLNOTICCL     ANOP ,                                              @L5A 02004300
.PLNOCMDFLGS46 ANOP ,                                              @L5A 02004400
.*                                                                      02004500
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 02004600
.**  Set CmdFlag5 values                                        @05A ** 02004700
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 02004800
.*                                                                      02004900
&ZW      SETC  ''                                                  @05A 02005000
&ZCLNG   SETC  ''                                                  @05A 02005100
.*                                                                      02005200
         AIF   ('&XREQUEST' NE 'READ_COSTATS').PLNOCMDFLG5         @05A 02005300
         AIF   ('&XCOSTATSFMT' NE 'COSTATSLIST').CF5NOSTATS        @05A 02005400
&ZW      SETC  '&ZW.1'                                             @05A 02005500
&ZCLNG   SETC  'YES'                                               @05A 02005600
         AGO   .CF5FMTDONE                                         @05A 02005700
.CF5NOSTATS      ANOP ,                                            @05A 02005800
&ZW      SETC  '&ZW.0'                                             @05A 02005900
.CF5FMTDONE       ANOP ,                                           @05A 02006000
&ZW      SETC  '&ZW.0000000'                                       @05A 02006100
&ZW      SETC  'B''&ZW.'''                                         @05A 02006200
         AIF   ('&ZCLNG' NE 'YES').PLNOCMDFLG5                     @05A 02006300
.*   _xCmdFlag5                                                    @05A 02006400
         OI    &PLOFF_XCMDFLAG5.(1),&ZW                            @05A 02006500
.PLNOCMDFLG5   ANOP ,                                              @05A 02006600
.*                                                                      02006700
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 02006800
.**  Set CmdFlag7 values                                        @05A ** 02006900
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 02007000
.*                                                                      02007100
&ZW      SETC  ''                                                  @05A 02007200
&ZCLNG   SETC  ''                                                  @05A 02007300
.*                                                                      02007400
         AIF   ('&XREQUEST' NE 'READ_COCLASS').PLNOCMDFLG7         @05A 02007500
         AIF   ('&XDIRINFOFMT' NE 'DIRENTRYLIST').CF7NODEIB        @05A 02007600
&ZW      SETC  '&ZW.1'                                             @05A 02007700
&ZCLNG   SETC  'YES'                                               @05A 02007800
         AGO   .CF7FMTDONE                                         @05A 02007900
.CF7NODEIB        ANOP ,                                           @05A 02008000
&ZW      SETC  '&ZW.0'                                             @05A 02008100
.CF7FMTDONE       ANOP ,                                           @05A 02008200
         AIF   ('&XRTATYPE' NE 'ENHANCED').CF7NOENH                @09A 02008300
&ZW      SETC  '&ZW.1'                                             @09A 02008400
&ZCLNG   SETC  'YES'                                               @09A 02008500
         AGO   .CF7RTTDONE                                         @09A 02008600
.CF7NOENH         ANOP ,                                           @09A 02008700
&ZW      SETC  '&ZW.0'                                             @09A 02008800
.CF7RTTDONE       ANOP ,                                           @09A 02008900
&ZW      SETC  '&ZW.000000'                                        @09C 02009000
&ZW      SETC  'B''&ZW.'''                                         @05A 02009100
         AIF   ('&ZCLNG' NE 'YES').PLNOCMDFLG7                     @05A 02009200
.*   _xCmdFlag7                                                    @05A 02009300
         OI    &PLOFF_XCMDFLAG7.(1),&ZW                            @05A 02009400
.PLNOCMDFLG7   ANOP ,                                              @05A 02009500
.*                                                                      02009600
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 02009700
.**  Set CmdFlag8/9/10/11 values                                @05A ** 02009800
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 02009900
.*                                                                      02010000
&ZW      SETC  ''                                                  @05A 02010100
&ZCLNG   SETC  ''                                                  @05A 02010200
.*                                                                      02010300
         AIF   ('&XREQUEST' NE 'DELETE_NAME'          AND              *02010400
                '&XREQUEST' NE 'DELETE_NAMELIST'      AND              *02010500
                '&XREQUEST' NE 'WRITE_DATALIST'       AND              *02010600
                '&XREQUEST' NE 'WRITE_DATA').PLNOCMDFLG8           @L6C 02010700
.*                                                                 @POA 02010800
         AIF   ('&XREQUEST' EQ 'WRITE_DATA' AND                        *02010900
                '&XWHENREG' EQ 'NO' AND                                *02011000
                '&XASSIGN' EQ 'NO').CF9ASSIGNNO                    @POA 02011100
&ZW      SETC  '&ZW.0'                                             @05A 02011200
         AGO   .CF9ENDASSIGN                                       @POA 02011300
.CF9ASSIGNNO ANOP ,                                                @POA 02011400
&ZW      SETC  '&ZW.1'                                             @POA 02011500
&ZCLNG   SETC  'YES'                                               @POA 02011600
.CF9ENDASSIGN ANOP ,                                               @POA 02011700
.*                                                                 @POA 02011800
         AIF   ('&XREQUEST' NE 'WRITE_DATA'           OR               *02011900
                '&XWHENREG' NE 'NO').CF8NOSREG                     @PLC 02012000
         AIF   ('&REGUSER' NE 'NO').CF8NOSREG                      @05A 02012100
&ZW      SETC  '&ZW.1'                                             @05A 02012200
&ZCLNG   SETC  'YES'                                               @05A 02012300
         AGO   .CF8YESSREG                                         @05A 02012400
.CF8NOSREG        ANOP ,                                           @05A 02012500
&ZW      SETC  '&ZW.0'                                             @05A 02012600
.CF8YESSREG       ANOP ,                                           @05A 02012700
.*                                                                 @POA 02012800
&ZW      SETC  '&ZW.0'              WRTCI                          @L6C 02012900
.*                                                                 @POA 02013000
.* Set SWWLRC based on LOCALREGCNTL                                @L6A 02013100
.*                                                                 @L6A 02013200
         AIF   ('&XREQUEST' EQ 'WRITE_DATALIST').CF9SETSWWLRC      @L6A 02013300
         AIF   ('&XREQUEST' EQ 'WRITE_DATA' AND                        *02013400
                '&XWHENREG' EQ 'NO' AND                                *02013500
                '&XASSIGN' EQ 'NO').CF9SETSWWLRC                   @L6A 02013600
&ZW      SETC  '&ZW.0'                                             @L6A 02013700
         AGO   .CF9ENDSETSWWLRC                                    @L6A 02013800
.CF9SETSWWLRC ANOP ,                                               @L6A 02013900
         AIF   ('&XLOCALREGCNTL' EQ 'YES').CF9SWWLRCYES            @L6A 02014000
&ZW      SETC  '&ZW.0'                                             @L6A 02014100
         AGO   .CF9ENDSETSWWLRC                                    @L6A 02014200
.CF9SWWLRCYES ANOP ,                                               @L6A 02014300
         AIF   ('&XREQUEST' EQ 'WRITE_DATALIST').SETSWWLRCYES      @L6A 02014400
.**                                                                  ** 02014500
.**  Validity checking for LocalRegCntl                              ** 02014600
.**                                                                  ** 02014700
.**  For Write_Data WhenReg(No), Assign(No), LocalRegCntl(Yes)       ** 02014800
.**    Changed(Yes) is required                                      ** 02014900
.**                                                                  ** 02015000
         AIF   ('&XCHANGED' NE 'YES').SETSUPPRESSERROR             @L6A 02015100
.SETSWWLRCYES ANOP ,                                               @L6A 02015200
&ZW      SETC  '&ZW.1'                                             @L6A 02015300
&ZCLNG   SETC  'YES'                                               @L6A 02015400
         AGO   .CF9ENDSETSWWLRC                                    @L6A 02015500
.SETSUPPRESSERROR ANOP ,                                                02015600
         MNOTE 8,'IXLCACHE ---> CHANGED(YES) must be specified when REQ*02015700
               UEST(WRITE_DATA) specifies LOCALREGCNTL(YES)'       @L6A 02015800
&ZMACRET SETA  8                                                   @L6A 02015900
.*                                                                      02016000
.CF9ENDSETSWWLRC ANOP ,                                            @L6A 02016100
.*                                                                 @L6A 02016200
         AIF   ('&XVERSCOMPTYPE' NE 'LESSOREQUAL').CF8NOVERSCOMTP  @05A 02016300
&ZW      SETC  '&ZW.1'                                             @05A 02016400
&ZCLNG   SETC  'YES'                                               @05A 02016500
         AGO   .CF8YESVERSCOMTP                                    @05A 02016600
.CF8NOVERSCOMTP   ANOP ,                                           @05A 02016700
&ZW      SETC  '&ZW.0'                                             @05A 02016800
.CF8YESVERSCOMTP  ANOP ,                                           @05A 02016900
         AIF   ('&XREQUEST' NE 'DELETE_NAMELIST').CF8NOINLVERSCOMP @05A 02017000
         AIF   ('&XVERSCOMPTYPE' NE 'NONE').CF8SETINLVERSCOMP      @05A 02017100
&ZW      SETC  '&ZW.0'                                             @05A 02017200
         AGO   .CF8NOVERSCOMP                                      @05A 02017300
.CF8SETINLVERSCOMP  ANOP ,                                         @05A 02017400
&ZW      SETC  '&ZW.1'                                             @05A 02017500
&ZCLNG   SETC  'YES'                                               @05A 02017600
         AGO   .CF8NOVERSCOMP                                      @05A 02017700
.CF8NOINLVERSCOMP   ANOP ,                                         @05A 02017800
         AIF   ('&XVERSCOMP' EQ '').CF8YESVERSCOMP                 @05A 02017900
&ZW      SETC  '&ZW.1'                                             @05A 02018000
&ZCLNG   SETC  'YES'                                               @05A 02018100
         AGO   .CF8NOVERSCOMP                                      @05A 02018200
.CF8YESVERSCOMP    ANOP ,                                          @05A 02018300
&ZW      SETC  '&ZW.0'                                             @05A 02018400
.CF8NOVERSCOMP    ANOP ,                                           @05A 02018500
         AIF   ('&XVERSUPDATE' NE 'SET').CF8NOTSET                 @05A 02018600
&ZW      SETC  '&ZW.11'                                            @05A 02018700
&ZCLNG   SETC  'YES'                                               @05A 02018800
         AGO   .CF8UPDTDONE                                        @05A 02018900
.CF8NOTSET        ANOP ,                                           @05A 02019000
         AIF   ('&XVERSUPDATE' NE 'DEC').CF8NOTDEC                 @05A 02019100
&ZW      SETC  '&ZW.01'                                            @05A 02019200
&ZCLNG   SETC  'YES'                                               @05A 02019300
         AGO   .CF8UPDTDONE                                        @05A 02019400
.CF8NOTDEC        ANOP ,                                           @05A 02019500
         AIF   ('&XVERSUPDATE' NE 'INC').CF8NOTINC                 @05A 02019600
&ZW      SETC  '&ZW.10'                                            @05A 02019700
&ZCLNG   SETC  'YES'                                               @05A 02019800
         AGO   .CF8UPDTDONE                                        @05A 02019900
.CF8NOTINC        ANOP ,                                           @05A 02020000
&ZW      SETC  '&ZW.00'                                            @05A 02020100
.CF8UPDTDONE      ANOP ,                                           @05A 02020200
&ZW      SETC  'B''&ZW.'''                                         @05A 02020300
         AIF   ('&ZCLNG' NE 'YES').PLNOCMDFLG8                     @05A 02020400
         AIF   ('&XREQUEST' NE 'DELETE_NAME').CF8NOTIN             @05A 02020500
.*   _xCmdFlag11                                                   @05A 02020600
         OI    &PLOFF_XCMDFLAG11.(1),&ZW                           @05A 02020700
         AGO   .CF8FINISH                                          @05A 02020800
.CF8NOTIN      ANOP ,                                              @05A 02020900
         AIF   ('&XREQUEST' NE 'DELETE_NAMELIST').CF8NOTINL        @05A 02021000
.*   _xCmdFlag8                                                    @05A 02021100
         OI    &PLOFF_XCMDFLAG8.(1),&ZW                            @05A 02021200
         AGO   .CF8FINISH                                          @05A 02021300
.CF8NOTINL     ANOP ,                                              @05A 02021400
         AIF   ('&XWHENREG' NE 'YES').CF8NOTWWR                    @05A 02021500
.*   _xCmdFlag10                                                   @05A 02021600
         OI    &PLOFF_XCMDFLAG10.(1),&ZW                           @05A 02021700
         AGO   .CF8FINISH                                          @05A 02021800
.CF8NOTWWR     ANOP ,                                              @05A 02021900
.*   _xCmdFlag9                                                    @05A 02022000
         OI    &PLOFF_XCMDFLAG9.(1),&ZW                            @05A 02022100
.CF8FINISH     ANOP ,                                              @05A 02022200
.PLNOCMDFLG8   ANOP ,                                              @05A 02022300
.*                                                                      02022400
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 02022500
.**  Set CmdFlag12/13 values                                    @L5A ** 02022600
.**   CmdFlag13 is not set by this macro. The flag byte represents   ** 02022700
.**   duplexing indicators which are set internally.                 ** 02022800
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 02022900
.*                                                                      02023000
&ZW      SETC  ''                                                  @L5A 02023100
&ZCLNG   SETC  ''                                                  @L5A 02023200
.*                                                                      02023300
         AIF   ('&XREQUEST' NE 'WRITE_DATALIST').PLNOCMDFLG12      @L5A 02023400
.*                                                                      02023500
&ZW      SETC  '&ZW.11110000'                                      @L5A 02023600
&ZW      SETC  'B''&ZW.'''                                         @L5A 02023700
         OI    &PLOFF_XCMDFLAG12.(1),&ZW                           @L5A 02023800
.PLNOCMDFLG12  ANOP ,                                              @L5A 02023900
.*                                                                      02024000
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 02024100
.**  Set VersComp  values                                       @05A ** 02024200
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 02024300
         AIF   ('&XVERSCOMP' EQ '').SKIPSETVERSCOMP                @05A 02024400
         AIF   ('&XREQUEST'   NE 'WRITE_DATA').SKIPSETVERSCOMP2    @05A 02024500
         AIF   ('&XWHENREG'   NE 'YES').SKIPSETVERSCOMP1           @05A 02024600
         AIF   ('&XVERSCOMP'(1,1) EQ '(').VERSCOMP1REG             @PQA 02024700
         MVC   &PLOFF_XVERSCOMP1.(8,1),&XVERSCOMP                  @05A 02024800
         AGO   .ENDSETVERSCOMP                                     @05A 02024900
.VERSCOMP1REG     ANOP ,                                           @PRA 02025000
         MVC   &PLOFF_XVERSCOMP1.(8,1),0&XVERSCOMP                 @PRC 02025100
         AGO   .ENDSETVERSCOMP                                     @PQA 02025200
.SKIPSETVERSCOMP1 ANOP ,                                           @05A 02025300
         AIF   ('&XVERSCOMP'(1,1) EQ '(').VERSCOMP2REG             @PQA 02025400
         MVC   &PLOFF_XVERSCOMP2.(8,1),&XVERSCOMP                  @05A 02025500
         AGO   .ENDSETVERSCOMP                                     @05A 02025600
.VERSCOMP2REG     ANOP ,                                           @PRA 02025700
         MVC   &PLOFF_XVERSCOMP2.(8,1),0&XVERSCOMP                 @PRC 02025800
         AGO   .ENDSETVERSCOMP                                     @PQA 02025900
.SKIPSETVERSCOMP2 ANOP ,                                           @05A 02026000
         AIF   ('&XREQUEST'   NE 'DELETE_NAME').SKIPSETVERSCOMP    @05A 02026100
         MVC   &PLOFF_XVERSCOMP3.(8,1),&XVERSCOMP                  @05A 02026200
.ENDSETVERSCOMP   ANOP ,                                           @05A 02026300
.SKIPSETVERSCOMP  ANOP ,                                           @05A 02026400
.*                                                                      02026500
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 02026600
.**  NewVers       values                                       @05A ** 02026700
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 02026800
         AIF   ('&XNEWVERS' EQ '').SKIPSETNEWVERS                  @05A 02026900
         AIF   ('&XREQUEST'   NE 'WRITE_DATA').SKIPSETNEWVERS      @05A 02027000
         AIF   ('&XWHENREG'   NE 'YES').SKIPSETNEWVERS1            @05A 02027100
         AIF   ('&XNEWVERS'(1,1) EQ '(').NEWVERS1REG               @PQA 02027200
         MVC   &PLOFF_XNEWVERS1.(2,1),&XNEWVERS                    @05A 02027300
         AGO   .ENDSETNEWVERS                                      @05A 02027400
.NEWVERS1REG      ANOP ,                                           @PRA 02027500
         MVC   &PLOFF_XNEWVERS1.(8,1),0&XNEWVERS                   @PRC 02027600
         AGO   .ENDSETNEWVERS                                      @PQA 02027700
.SKIPSETNEWVERS1  ANOP ,                                           @05A 02027800
         AIF   ('&XNEWVERS'(1,1) EQ '(').NEWVERS2REG               @PQA 02027900
         MVC   &PLOFF_XNEWVERS2.(8,1),&XNEWVERS                    @05A 02028000
         AGO   .ENDSETNEWVERS                                      @PQA 02028100
.NEWVERS2REG      ANOP ,                                           @PRA 02028200
         MVC   &PLOFF_XNEWVERS2.(8,1),0&XNEWVERS                   @PRC 02028300
.ENDSETNEWVERS    ANOP ,                                           @05A 02028400
.SKIPSETNEWVERS   ANOP ,                                           @05A 02028500
.*                                                                      02028600
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 02028700
.**  StartIndex values                                          @05A ** 02028800
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 02028900
         AIF   ('&XSTARTINDEX' EQ '').SKIPSETSTARTINDEX            @PKC 02029000
         AIF   ('&XREQUEST'   NE 'REG_NAMELIST').SKIPSETSTARTINDEX1     02029100
         AIF   ('&XSTARTINDEX'(1,1) EQ '(').STARTINDEX1Z           @PLA 02029200
         MVC   &PLOFF_XSTARTINDEX1.(2,1),&XSTARTINDEX              @05A 02029300
         AGO   .ENDSETSTARTINDEX                                   @05A 02029400
.STARTINDEX1Z        ANOP ,                                        @PLA 02029500
         MVC   &PLOFF_XSTARTINDEX1.(2,1),0&XSTARTINDEX             @PLA 02029600
         AGO   .ENDSETSTARTINDEX                                   @PLA 02029700
.SKIPSETSTARTINDEX1  ANOP ,                                        @05A 02029800
         AIF   ('&XREQUEST'   NE 'CROSS_INVALLIST'  AND                *02029900
                '&XREQUEST'   NE 'CASTOUT_DATALIST' AND                *02030000
                '&XREQUEST'   NE 'WRITE_DATALIST'   AND                *02030100
                '&XREQUEST'   NE 'DELETE_NAMELIST').SKIPSETSTARTINDEX   02030200
                                                                        02030300
.*                                                                 @L5C 02030400
         AIF   ('&XSTARTINDEX'(1,1) EQ '(').STARTINDEX2Z           @PLA 02030500
         MVC   &PLOFF_XSTARTINDEX2.(2,1),&XSTARTINDEX              @05A 02030600
         AGO   .ENDSETSTARTINDEX                                   @PLA 02030700
.STARTINDEX2Z        ANOP ,                                        @PLA 02030800
         MVC   &PLOFF_XSTARTINDEX2.(2,1),0&XSTARTINDEX             @PLA 02030900
.ENDSETSTARTINDEX    ANOP ,                                        @05A 02031000
.SKIPSETSTARTINDEX   ANOP ,                                        @05A 02031100
.*                                                                      02031200
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 02031300
.**  EndIndex   values                                          @05A ** 02031400
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 02031500
         AIF   ('&XENDINDEX' EQ '').SKIPSETENDINDEX                @PKC 02031600
         AIF   ('&XREQUEST'   NE 'REG_NAMELIST').SKIPSETENDINDEX1  @05A 02031700
         AIF   ('&XENDINDEX'(1,1) EQ '(').ENDINDEX1Z               @PLA 02031800
         MVC   &PLOFF_XENDINDEX1.(2,1),&XENDINDEX                  @05A 02031900
         AGO   .ENDSETENDINDEX                                     @05A 02032000
.ENDINDEX1Z          ANOP ,                                        @PLA 02032100
         MVC   &PLOFF_XENDINDEX1.(2,1),0&XENDINDEX                 @PLA 02032200
         AGO   .ENDSETENDINDEX                                     @PLA 02032300
.SKIPSETENDINDEX1  ANOP ,                                          @05A 02032400
         AIF   ('&XREQUEST'   NE 'CROSS_INVALLIST'  AND                *02032500
                '&XREQUEST'   NE 'CASTOUT_DATALIST' AND                *02032600
                '&XREQUEST'   NE 'WRITE_DATALIST'   AND                *02032700
                '&XREQUEST'   NE 'DELETE_NAMELIST').SKIPSETENDINDEX     02032800
.*                                                                 @L5C 02032900
         AIF   ('&XENDINDEX'(1,1) EQ '(').ENDINDEX2Z               @PLA 02033000
         MVC   &PLOFF_XENDINDEX2.(2,1),&XENDINDEX                  @05A 02033100
         AGO   .ENDSETENDINDEX                                     @06C 02033200
.ENDINDEX2Z          ANOP ,                                        @PLA 02033300
         MVC   &PLOFF_XENDINDEX2.(2,1),0&XENDINDEX                 @PLA 02033400
.ENDSETENDINDEX    ANOP ,                                          @05A 02033500
.SKIPSETENDINDEX   ANOP ,                                          @05A 02033600
.*                                                                      02033700
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 02033800
.**  Set process ID values                                           ** 02033900
.**--  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  --** 02034000
.*                                                                      02034100
         AIF   ('&XPROCESSID' EQ ''              OR                    *02034200
                '&XPROCESSID' EQ 'NO_PROCESSID').PLNOPROCESSID     @D3A 02034300
.*                                                                      02034400
.* Handle the ProcessId specification.                                  02034500
.* There are four ways it can be specified:                             02034600
.*  1) PROCESSID=(reg)       --> "reg" contains the addr of the value   02034700
.*  2) PROCESSID=offset(reg) --> explicit basing specification          02034800
.*  3) PROCESSID=name        --> variable name                          02034900
.*  4) PROCESSID=value       --> hard-coded value                       02035000
.*                                                                      02035100
         AIF   ('&XPROCESSID'(1,1) NE '(').PLPROCIDNOTREG          @D3A 02035200
&ZCGPR   SETC  '0('.'&XPROCESSID'(2,K'&XPROCESSID-2).')'           @D3A 02035300
         AGO   .PLENDPROCIDSETUP                                   @D3A 02035400
.PLPROCIDNOTREG ANOP ,                                             @D3A 02035500
&ZCGPR   SETC  '&XPROCESSID'                                       @D3A 02035600
&ZC      SETC  '&XPROCESSID'(1,1)                                  @D3A 02035700
         AIF   (T'&ZC NE 'N').PLENDPROCIDSETUP                     @D3A 02035800
&ZC      SETC  '&XPROCESSID'                                       @D3A 02035900
         AIF   ('&ZC'(K'&ZC,1) EQ ')').PLENDPROCIDSETUP            @D3A 02036000
&ZCGPR   SETC  '=FL1''&XPROCESSID'''                               @D3A 02036100
.PLENDPROCIDSETUP ANOP ,                                           @D3A 02036200
.*                                                                      02036300
         AIF   ('&XREQUEST' NE 'CASTOUT_DATA'    AND                   *02036400
                '&XREQUEST' NE 'UNLOCK_CASTOUT'  AND                   *02036500
                '&XREQUEST' NE 'CASTOUT_DATALIST' AND                  *02036600
                '&XREQUEST' NE 'UNLOCK_CO_NAME').PLPROCIDNOTCD     @L5C 02036700
         MVC   &PLOFF_XPROCESSID1.(1,1),&ZCGPR                     @D3A 02036800
         AGO   .ENDSTOREPROCID                                     @D3A 02036900
.*                                                                      02037000
.PLPROCIDNOTCD ANOP ,                                              @D3A 02037100
         AIF   ('&XREQUEST' NE 'WRITE_DATA'      OR                    *02037200
                '&XWHENREG' NE 'YES').PLPROCIDWRN                  @D3A 02037300
         MVC   &PLOFF_XPROCESSID2.(1,1),&ZCGPR                     @D3A 02037400
         AGO   .ENDSTOREPROCID                                     @D3A 02037500
.*                                                                      02037600
.PLPROCIDWRN   ANOP ,                                              @D3A 02037700
         MVC   &PLOFF_XPROCESSID3.(1,1),&ZCGPR                     @D3A 02037800
.*                                                                      02037900
.ENDSTOREPROCID ANOP ,                                             @D3A 02038000
.PLNOPROCESSID ANOP ,                                              @D3A 02038100
.*                                                                      02038200
.*                                                                      02038300
.**------------------------------------------------------------------** 02038400
.**  End of code to fill in the parameter list                       ** 02038500
.**------------------------------------------------------------------** 02038600
.*                                                                      02038700
.*                                                                      02038800
.**------------------------------------------------------------------** 02038900
.**  Ensure AR1 is 0 for primary callers                             ** 02039000
.**------------------------------------------------------------------** 02039100
.*                                                                      02039200
.**  This code is necessary because the entry linkage of the called  ** 02039300
.**  routine needs to reference fields in the parameter list while   ** 02039400
.**  executing in AR mode without knowing the mode of the caller.    ** 02039500
.*                                                                      02039600
         AIF   ('&SYSASCE' NE 'P').CALLSKIPSETAR1  Check for AR mode    02039700
         LAE   1,0(1,0)                 Make sure AR1 is cleared        02039800
.CALLSKIPSETAR1 ANOP ,                                                  02039900
.*                                                                      02040000
.*                                                                      02040100
.**------------------------------------------------------------------** 02040200
.**  Generate the linkage to the cache routine                       ** 02040300
.**------------------------------------------------------------------** 02040400
.*                                                                      02040500
.**  Note that in the following instructions the index register is   ** 02040600
.**  used instead of the base register so that ALET translation is   ** 02040700
.**  not performed and the code works the same in both primary and   ** 02040800
.**  AR mode.                                                        ** 02040900
.*                                                                      02041000
         L     15,16(0,0)               Get CVT address            @D1C 02041100
         L     15,140(15,0)             Get ECVT address           @D1C 02041200
         L     15,256(15,0)             Get XRAT address           @D1C 02041300
         L     15,44(15,0)              Cache mainline routine     @D1C 02041400
         BALR  14,15                    Branch to routine          @D1C 02041500
.*                                                                      02041600
.*                                                                      02041700
.ENDGENLINKAGE ANOP ,                                                   02041800
.*                                                                      02041900
.**------------------------------------------------------------------** 02042000
.**  End of user maclasm code                                        ** 02042100
.**------------------------------------------------------------------** 02042200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  02042300
.ZLINKX               ANOP  ,                                           02042400
.*******************************************************************    02042500
.***AP.X01  FORMAT GENERATED CODE                                       02042600
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            02042700
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              02042800
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              02042900
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              02043000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              02043100
                      AIF   (K'&ZLD LE 0).ZL51                          02043200
&ZLC                  SETA  35             COMMENT COLUMN               02043300
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   02043400
&ZLC                  SETA  33             COMMENT COLUMN               02043500
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  02043600
&ZLV                  SETC  '&ZLV'.' '                                  02043700
                      AGO   .ZL31                                       02043800
.*                                                                      02043900
.ZL41                 ANOP  ,                                           02044000
&ZLV                  SETC  '&ZLV'.' '                                  02044100
.ZL51                 ANOP  ,                                           02044200
&ZLV                  SETC  '&ZLV'.'&ZLD'                               02044300
.*                                                                      02044400
&ZLL     &ZLOP &ZLV                                                     02044500
.*                                                                      02044600
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               02044700
                      AGO   .ZL21          CONTINUE LOOPING             02044800
.*                                                                      02044900
.ZLX1                 ANOP  ,                                           02045000
.*******************************************************************    02045100
.***AP.X02  END OF IXLCACHE MACRO                                       02045200
&ZIXLCACHE            SETC  'YES'          SET IXLCACHE USED            02045300
         POP   PRINT                                                    02045400
*                                            IXLCACHE-8                 02045500
         SPACE 1                                                        02045600
.ZLX2                 ANOP  ,                                           02045700
         MEND                                                           02045800
**********************************************************************/ 02045900
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  02046000
*%IXLCACHE: MACRO KEYS(REQUEST,ASSIGN,REGUSER,RETURNDATA,AXIOVERRIDE,   02046100
*                 WHENREG,LOCALREGCNTL,VERSCOMP,VERSCOMPTYPE,           02046200
*                 VERSUPDATE,NEWVERS,CHANGED,CROSSINVAL,GETCOLOCK,      02046300
*                 PROCESSID,PARITY,USERDATA,ELEMNUM,STARTINDEX,         02046400
*                 ENDINDEX,DATAOFFSET,WORBAREA,NSBAREA,DEIBAREA,        02046500
*                 CASTOUTLIST,FIRSTNAME,LASTNAME,CUNBAREA,ERRORACTION,  02046600
*                 DELETETYPE,HALTONCHANGED,SUPPCROSSINVAL,DIRINFOFMT,   02046700
*                 RTATYPE,CRITERIA,COCLASSB,COCLASSE,COSTATSFMT,        02046800
*                 STGSTATS,NUMNAMES,REPEAT,RECLVCTR,CONTOKEN,REQID,     02046900
*                 NAME,NAMEMASK,OLDNAME,BUFLIST,BUFADDRTYPE,PAGEABLE,   02047000
*                 BUFSTGKEY,BUFALET,BUFADDRSIZE,BUFNUM,BUFINCRNUM,      02047100
*                 BUFFER,BUFSIZE,ADJAREA,STGCLASS,COCLASS,VECTORINDEX,  02047200
*                 RESTOKEN,EXTRESTOKEN,MODE,REQECB,REQDATA,REQTOKEN,    02047300
*                 ANSAREA,ANSLEN,RETCODE,RSNCODE,PLISTVER,MF);          02047400
*  ANS('?'!!MACLABEL!!' '!!'IXLCACHP '!!MACLIST!!                       02047500
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              02047600
*%END IXLCACHE;                                                         02047700
