*/* START OF SPECIFICATIONS ******************************************/ 00050000
*  **PROPRIETARY_STATEMENT********************************************  00100000
* *01* PROPRIETARY STATEMENT=                                        *  00150000
*                                                                    *  00200000
*                                                                    *  00250000
*   LICENSED MATERIALS - PROPERTY OF IBM                             *  00300000
*   THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      *  00350000
*   5685-025 (C) COPYRIGHT IBM CORP. 1987, 1989                      *  00400000
*   SEE COPYRIGHT INSTRUCTIONS                                       *  00450000
*                                                                    *  00500000
*   STATUS= JTE21X2                                                  *  00550000
*                                                                    *  00600000
*  **END_OF_PROPRIETARY_STATEMENT*************************************  00650000
*/*                                                                  */ 00700000
*/* 01*  MACRO-NAME: IKJIFRIF                                        */ 00750000
*/*                                                                  */ 00800000
*/* 01*  DESCRIPTIVE-NAME: Broadcast Data Set Interface Macro        */ 00850000
*/*                                                                  */ 00900000
*/*                                                                  */ 00950000
*/* 01*  FUNCTION: IKJIFRIF is used to set up a parameter list and   */ 01000000
*/*                invoke the broadcast data set interface routine.  */ 01050000
*/*                                                                  */ 01100000
*/* 01*  OPERATION: IKJIFRIF operates as follows:                    */ 01150000
*/*                                                                  */ 01200000
*/*                 List form:                                       */ 01250000
*/*                 1) Defines storage for the parameter list needed */ 01300000
*/*                    to be passed to the interface routine         */ 01350000
*/*                    IKJIFR00.                                     */ 01400000
*/*                                                                  */ 01450000
*/*                 Execute form:                                    */ 01500000
*/*                 1) Validates all the keywords coded on the macro */ 01550000
*/*                    invocation.                                   */ 01600000
*/*                 2) Generates code to initialize the parameter    */ 01650000
*/*                    list needed by the interface routine          */ 01700000
*/*                 3) Generates code to branch to the interface     */ 01750000
*/*                    routine.                                      */ 01800000
*/*                 4) If the RETCODE keyword was coded on the macro */ 01850000
*/*                    invocation, generates code to place the       */ 01900000
*/*                    interface routine return code in the variable */ 01950000
*/*                    specified.                                    */ 02000000
*/*                                                                  */ 02050000
*/* 02*    RECOVERY-OPERATION: N/A                                   */ 02100000
*/*                                                                  */ 02150000
*/* 01*  NOTES: None                                                 */ 02200000
*/*                                                                  */ 02250000
*/* 02*    DEPENDENCIES: IKJIFRIF has the following dependencies:    */ 02300000
*/*                                                                  */ 02350000
*/*                      1) Register 13 must point to an 18 word     */ 02400000
*/*                         savearea.                                */ 02450000
*/*                      2) The user must include the Communications */ 02500000
*/*                         Vector Table (CVT) and the TSO Vector    */ 02550000
*/*                         Table (TSVT).                            */ 02600000
*/*                      3) In PL/AS (or PL/S) the EPILOG macro must */ 02650000
*/*                         also be coded.                           */ 02700000
*/*                                                                  */ 02750000
*/* 02*    CHARACTER-CODE-DEPENDENCIES: EBCDIC                       */ 02800000
*/*                                                                  */ 02850000
*/* 02*    RESTRICTIONS: None                                        */ 02900000
*/*                                                                  */ 02950000
*/* 02*    REGISTER-CONVENTIONS: Registers 0, 1, 14, and 15 will be  */ 03000000
*/*                              altered by IKJIFRIF.                */ 03050000
*/*                                                                  */ 03100000
*/* 03*      REGISTERS-SAVED: None                                   */ 03150000
*/*                                                                  */ 03200000
*/* 03*      REGISTERS-RESTORED: None                                */ 03250000
*/*                                                                  */ 03300000
*/* 02*    PATCH-LABEL: N/A                                          */ 03350000
*/*                                                                  */ 03400000
*/* 01*  MACRO-TYPE: Executable Macro                                */ 03450000
*/*                                                                  */ 03500000
*/* 02*    PROCESSOR: PL/AS, PL/S, or Assembler                      */ 03550000
*/*                                                                  */ 03600000
*/* 02*    MACRO-SIZE: N/A                                           */ 03650000
*/*                                                                  */ 03700000
*/* 02*    ATTRIBUTES: N/A                                           */ 03750000
*/*                                                                  */ 03800000
*/* 01*  INPUT:  Register 13 points to an 18 word savearea.          */ 03850000
*/*                                                                  */ 03900000
*/*              Arguments contained within the keywords coded on    */ 03950000
*/*              the macro invocation.                               */ 04000000
*/*                                                                  */ 04050000
*/* 01*  INVOCATION:                                                 */ 04100000
*/*                                                                  */ 04150000
*/*                        PL/AS format                              */ 04200000
*/*                                                                  */ 04250000
*/*               ? IKJIFRIF MF(L,parmlist name);                    */ 04300000
*/*                                                                  */ 04350000
*/*               ? IKJIFRIF UPT(xupt)                               */ 04400000
*/*                          PSCB(xpscb)                             */ 04450000
*/*                          ECT(xect)                               */ 04500000
*/*                          ADD(xadd) ! DEL(xdel) ! ALT(xalt)       */ 04550000
*/*                          { RETCODE(xretcode) }                   */ 04600000
*/*                          MF(E,parmlist name);                    */ 04650000
*/*                                                                  */ 04700000
*/*                                                                  */ 04750000
*/*                     Assembler format                             */ 04800000
*/*                                                                  */ 04850000
*/*     label      IKJIFRIF MF=L                                     */ 04900000
*/*                                                                  */ 04950000
*/*     label      IKJIFRIF UPT=xupt,                                */ 05000000
*/*                         PSCB=xpscb,                              */ 05050000
*/*                         ECT=xect,                                */ 05100000
*/*                         ADD=xadd, ! DEL=xdel, ! ALT=xalt,        */ 05150000
*/*                         { RETCODE=xretcode, }                    */ 05200000
*/*                         MF=(E,parmlist name)                     */ 05250000
*/*                                                                  */ 05300000
*/*  Where:                                                          */ 05350000
*/*                                                                  */ 05400000
*/*  UPT(xupt) or UPT=xupt                                           */ 05450000
*/*    Is the name (RX-type or address in register (2)-(12) Assembler*/ 05500000
*/*    only) of a required PTR(31) input that contains the address   */ 05550000
*/*    of the UPT.                                                   */ 05600000
*/*                                                                  */ 05650000
*/*  PSCB(xpscb) or PSCB=xpscb                                       */ 05700000
*/*    Is the name (RX-type or address in register (2)-(12) Assembler*/ 05750000
*/*    only) of a required PTR(31) input that contains the address   */ 05800000
*/*    of the PSCB.                                                  */ 05850000
*/*                                                                  */ 05900000
*/*  ECT(xect) or ECT=xect                                           */ 05950000
*/*    Is the name (RX-type or address in register (2)-(12) Assembler*/ 06000000
*/*    only) of a required PTR(31) input that contains the address   */ 06050000
*/*    of the ECT.                                                   */ 06100000
*/*                                                                  */ 06150000
*/*  ADD(xadd) or ADD=xadd                                           */ 06200000
*/*    Is the name (RX-type or address in register (2)-(12) Assembler*/ 06250000
*/*    only) of a required structured input that contains the user ID*/ 06300000
*/*    that is to be added to the SYS1.BRODCAST data set and a       */ 06350000
*/*    pointer to the next structure.                                */ 06400000
*/*                                                                  */ 06450000
*/*  DEL(xdel) or DEL=xdel                                           */ 06500000
*/*    Is the name (RX-type or address in register (2)-(12) Assembler*/ 06550000
*/*    only) of a required structured input that contains the user ID*/ 06600000
*/*    that is to be deleted from the SYS1.BRODCAST data set and a   */ 06650000
*/*    pointer to the next structure.                                */ 06700000
*/*                                                                  */ 06750000
*/*  ALT(xalt) or ALT=xalt                                           */ 06800000
*/*    Is the name (RX-type or address in register (2)-(12) Assembler*/ 06850000
*/*    only) of a required structured input that contains the user ID*/ 06900000
*/*    that is to be changed, the new user ID that it is to be       */ 06950000
*/*    to in the SYS1.BRODCAST data set and a pointer to the next    */ 07000000
*/*    structure.                                                    */ 07050000
*/*                                                                  */ 07100000
*/*  RETCODE(xretcode) or RETCODE=xretcode                           */ 07150000
*/*    Is  the  name  (RX-type) of an optional output that contains  */ 07200000
*/*    the return code from the interface routine.                   */ 07250000
*/*                                                                  */ 07300000
*/*  MF(E,parmlist name) or MF=(E,parmlist name)                     */ 07350000
*/*    Specifies the execute form of the macro. The execute form     */ 07400000
*/*    generates code to put the parameters into the parameter list  */ 07450000
*/*    specified by "parmlist name" and invoke the desired service.  */ 07500000
*/*    "Parmlist name" is a required input. It is the name (RX-type  */ 07550000
*/*    or address in register (2)-(12) Assembler only) of a storage  */ 07600000
*/*    area for the parameter list.                                  */ 07650000
*/*                                                                  */ 07700000
*/*  MF(L,parmlist name) or MF=L                                     */ 07750000
*/*      Specifies the list form of the macro. The list form defines */ 07800000
*/*      an area to be used for the parameter list. The name of the  */ 07850000
*/*      parameter list is specified by "parmlist name" in PL/AS or  */ 07900000
*/*      by the label used with the macro in Assembler.              */ 07950000
*/*                                                                  */ 08000000
*/* 01*  PROCESSING: The IKJIFRIF macro expands to generate the      */ 08050000
*/*                  following:                                      */ 08100000
*/*                                                                  */ 08150000
*/*                List form:                                        */ 08200000
*/*                  Generates the 12 full words of storage for the  */ 08250000
*/*                  parameter list needed by the interface routine. */ 08300000
*/*                                                                  */ 08350000
*/*                Execute form:                                     */ 08400000
*/*                  Generates executable code to:                   */ 08450000
*/*                  1) Check for the existence of the interface     */ 08500000
*/*                     routine.                                     */ 08550000
*/*                                                                  */ 08600000
*/*                  2) Initialize the following areas in the        */ 08650000
*/*                     parameter list based upon the keywords       */ 08700000
*/*                     coded:                                       */ 08750000
*/*                                                                  */ 08800000
*/*                       Parameter 1 is set to the address of the   */ 08850000
*/*                       UPT.                                       */ 08900000
*/*                                                                  */ 08950000
*/*                       Parameter 2 is set to the address of the   */ 09000000
*/*                       PSCB.                                      */ 09050000
*/*                                                                  */ 09100000
*/*                       Parameter 3 is set to the address of the   */ 09150000
*/*                       ECT.                                       */ 09200000
*/*                                                                  */ 09250000
*/*                       Parameter 4 is set to the address of the   */ 09300000
*/*                       argument supplied in the ADD, DEL, or ALT  */ 09350000
*/*                       keyword.                                   */ 09400000
*/*                                                                  */ 09450000
*/*                       Parameter 5 is set to the character repre- */ 09500000
*/*                       sentation of the function requested: ADD,  */ 09550000
*/*                       DEL, or ALT.                               */ 09600000
*/*                                                                  */ 09650000
*/*                       Parameters 6-9 are set to 0.               */ 09700000
*/*                                                                  */ 09750000
*/*                  3) Invoke the interface routine based upon the  */ 09800000
*/*                     address located in the TSVT.                 */ 09850000
*/*                                                                  */ 09900000
*/*                  4) Place the interface routine return code in   */ 09950000
*/*                     the specified variable if the RETCODE        */ 10000000
*/*                     word was coded.                              */ 10050000
*/*                                                                  */ 10100000
*/* 01*  OUTPUT: If the RETCODE keyword was coded in the macro       */ 10150000
*/*              invocation, the interface routine return code will  */ 10200000
*/*              be placed in the specified variable, otherwise the  */ 10250000
*/*              return code will be in register 15.                 */ 10300000
*/*                                                                  */ 10350000
*/*              The parameter list that was created by the macro    */ 10400000
*/*              will contain information upon return. The parameter */ 10450000
*/*              list that is created by this macro is as follows:   */ 10500000
*/*                                                                  */ 10550000
*/*    +0 - Address of the UPT                   (input)             */ 10600000
*/*    +4 - Address of the PSCB                  (input)             */ 10650000
*/*    +8 - Address of the ECT                   (input)             */ 10700000
*/*    +C - Address of the argument structure    (input)             */ 10750000
*/*   +10 - Character representation of function (input)             */ 10800000
*/*   +14 - ABEND field                          (output)            */ 10850000
*/*   +18 - ABEND reason code                    (output)            */ 10900000
*/*   +1C - Service return code                  (output)            */ 10950000
*/*   +20 - Service reason code                  (output)            */ 11000000
*/*   +24 - Reserved                                                 */ 11050000
*/*   +28 - Reserved                                                 */ 11100000
*/*   +2C - Reserved                                                 */ 11150000
*/*                                                                  */ 11200000
*/* 01*    RETURN-CODES: Return Code is contained in register 15     */ 11250000
*/*                      or the variable specified in the RETCODE    */ 11300000
*/*                      keyword.                                    */ 11350000
*/*                                                                  */ 11400000
*/*                      0 - Processing completed successfully.      */ 11450000
*/*                      4 - Processing completed unsuccessfully,    */ 11500000
*/*                          the recovery environment could not be   */ 11550000
*/*                          established.                            */ 11600000
*/*                      8 - Processing completed unsuccessfully,    */ 11650000
*/*                          caller is in 24-bit addressing mode,    */ 11700000
*/*                          but the argument address(es) were not   */ 11750000
*/*                          valid 24-bit addresses.                 */ 11800000
*/*                     12 - Processing completed unsuccessfully,    */ 11850000
*/*                          invalid interface function specified.   */ 11900000
*/*                     16 - Processing completed unsuccessfully,    */ 11950000
*/*                          user parameters are invalid.            */ 12000000
*/*                     20 - Processing completed unsuccessfully,    */ 12050000
*/*                          ATTACH of module IKJEES40 failed.       */ 12100000
*/*                          Check the SERVICE RETURN CODE field of  */ 12150000
*/*                          the IKJIFR00 parameter list for the     */ 12200000
*/*                          return code returned by the ATTACH      */ 12250000
*/*                          macro.                                  */ 12300000
*/*                     24 - Processing completed unsuccessfully,    */ 12350000
*/*                          an ABEND occurred, check the ABEND and  */ 12400000
*/*                          reason code fields of the macro         */ 12450000
*/*                          generated parameter list.               */ 12500000
*/*                          Check the SERVICE RETURN CODE field and */ 12550000
*/*                          the SERVICE REASON CODE field for       */ 12600000
*/*                          possible return codes from the dynamic  */ 12650000
*/*                          allocation routine.                     */ 12700000
*/*                     28 - Deallocation failed for data sets       */ 12750000
*/*                          allocated to module IKJEES40. Check the */ 12800000
*/*                          broadcast data set to see if the        */ 12850000
*/*                          function has been successfully performed*/ 12900000
*/*                          to the userid(s).                       */ 12950000
*/*                          Check the SERVICE RETURN CODE field and */ 13000000
*/*                          the SERVICE REASON CODE field for       */ 13050000
*/*                          return codes from the dynamic allocation*/ 13100000
*/*                          routine.                                */ 13150000
*/*                     32 - Processing completed unsuccessfully,    */ 13200000
*/*                          TSO/E Release 4 or higher is not        */ 13250000
*/*                          installed.                              */ 13300000
*/*                     36 - Processing completed unsuccessfully,    */ 13350000
*/*                          too many arguments for the function     */ 13400000
*/*                          requested were passed to the interface  */ 13450000
*/*                          routine causing the amount of storage   */ 13500000
*/*                          to be GETMAINed to become a negative    */ 13550000
*/*                          amount.                                 */ 13600000
*/*                                                                  */ 13650000
*/* 01*  MACROS-EXECUTABLE: ? CALLTSSR                               */ 13700000
*/*                                                                  */ 13750000
*/* 01*  CHANGE-ACTIVITY:                                            */ 13800000
*/*                                                                  */ 13850000
*/* A00000000-99999999 TSO/E Release 4 for MVS/XA            @E1402V7*/ 13900000
*/*                                                                  */ 13950000
*/* END OF SPECIFICATIONS ********************************************/ 14000000
*/********** -Start of IKJIFRIF - ASSEMBLER MACRO ****************      14050000
         MACRO                                                          14100000
&LABEL   IKJIFRIF &UPT=,&PSCB=,&ECT=,&ADD=,&DEL=,&ALT=,&RETCODE=,&MF=   14150000
.*                                                                      14200000
.********************************************************************   14250000
.*                    ASSEMBLER GENERATION                              14300000
.********************************************************************   14350000
.*                                                                      14400000
.* ******************************************************************   14450000
.*   Define Local Variables                                             14500000
.* ******************************************************************   14550000
.*                                                                      14600000
         LCLA  &MUTFUNC                  Holds the mutual exclusive     14650000
.*                                       count                          14700000
         LCLB  &MACRET                   Set if errors are found        14750000
         LCLB  &REGFORM                  Set if argument is in register 14800000
         LCLC  &REG,&FUNC,&FN            Hold character representations 14850000
.*                                       of registers and functions     14900000
.*                                                                      14950000
.* ******************************************************************   15000000
.*                                                                      15050000
.*   Validate the MF keyword                                            15100000
.*                                                                      15150000
.* ******************************************************************   15200000
.*                                                                      15250000
         AIF   (N'&MF GT 2).BADMF1       Can't have more than 2         15300000
.*                                       parameters                     15350000
         AIF   (N'&MF EQ 0).BADMF2       MF parameter must be supplied  15400000
         AIF   ('&MF(1)' EQ 'E').EXFORM  Execute form of the macro is   15450000
.*                                       requested                      15500000
.*                                                                      15550000
.* ******************************************************************   15600000
.*                                                                      15650000
.*   List Form                                                          15700000
.*                                                                      15750000
.* ******************************************************************   15800000
.*                                                                      15850000
         AIF   ('&MF(1)' NE 'L').BADMF1  Invalid MF parameter           15900000
         AIF   (K'&LABEL EQ 0).BADLABL   Must supply a label            15950000
&LABEL   DS    0D               Start parameter list on a double word   16000000
         DS    12F              Broadcast Interface Parameter List      16050000
         AGO   .END                                                     16100000
.BADMF1  ANOP                                                           16150000
         MNOTE 8,'IFRIF01 The MF keyword is invalid.'                   16200000
         AGO   .END                                                     16250000
.BADMF2  ANOP                                                           16300000
         MNOTE 8,'IFRIF02 The MF keyword is required.'                  16350000
         AGO   .END                                                     16400000
.BADLABL ANOP                                                           16450000
         MNOTE 8,'IFRIF03 A label is required when using MF=L.'         16500000
         AGO   .END                                                     16550000
.*                                                                      16600000
.* ******************************************************************   16650000
.*                                                                      16700000
.*   Execute Form                                                       16750000
.*                                                                      16800000
.* ******************************************************************   16850000
.*                                                                      16900000
.EXFORM  ANOP                                                           16950000
         AIF   (N'&MF EQ 2).VALUPT       Must supply the parameter list 17000000
.*                                       or the parameter list address  17050000
         MNOTE 8,'IFRIF04 The parameter list field is required for MF=E*17100000
               .'                                                       17150000
&MACRET  SETB  1                         Indicate an error              17200000
.*                                                                      17250000
.* ******************************************************************   17300000
.*                                                                      17350000
.*   Validate the UPT keyword                                           17400000
.*                                                                      17450000
.* ******************************************************************   17500000
.*                                                                      17550000
.VALUPT  ANOP                                                           17600000
         AIF   (N'&UPT EQ 0).BADUPT      Must supply the UPT keyword    17650000
         AIF   (N'&UPT EQ 1).VALPSCB     Only 1 parameter allowed       17700000
         MNOTE 8,'IFRIF05 The UPT keyword is invalid.'                  17750000
&MACRET  SETB  1                         Indicate an error              17800000
         AGO   .VALPSCB                                                 17850000
.BADUPT  ANOP                                                           17900000
         MNOTE 8,'IFRIF06 The UPT keyword is required.'                 17950000
&MACRET  SETB  1                         Indicate an error              18000000
.*                                                                      18050000
.* ******************************************************************   18100000
.*                                                                      18150000
.*   Validate the PSCB keyword                                          18200000
.*                                                                      18250000
.* ******************************************************************   18300000
.*                                                                      18350000
.VALPSCB ANOP                                                           18400000
         AIF   (N'&PSCB EQ 0).BADPSCB    Must supply the PSCB keyword   18450000
         AIF   (N'&PSCB EQ 1).VALECT     Only 1 parameter allowed       18500000
         MNOTE 8,'IFRIF07 The PSCB keyword is invalid.'                 18550000
&MACRET  SETB  1                         Indicate an error              18600000
         AGO   .VALECT                                                  18650000
.BADPSCB ANOP                                                           18700000
         MNOTE 8,'IFRIF08 The PSCB keyword is required.'                18750000
&MACRET  SETB  1                         Indicate an error              18800000
.*                                                                      18850000
.* ******************************************************************   18900000
.*                                                                      18950000
.*   Validate the ECT keyword                                           19000000
.*                                                                      19050000
.* ******************************************************************   19100000
.*                                                                      19150000
.VALECT  ANOP                                                           19200000
         AIF   (N'&ECT EQ 0).BADECT      Must supply the ECT keyword    19250000
         AIF   (N'&ECT EQ 1).CHKADD      Only 1 parameter allowed       19300000
         MNOTE 8,'IFRIF09 The ECT keyword is invalid.'                  19350000
&MACRET  SETB  1                         Indicate an error              19400000
         AGO   .CHKADD                                                  19450000
.BADECT  ANOP                                                           19500000
         MNOTE 8,'IFRIF10 The ECT keyword is required.'                 19550000
&MACRET  SETB  1                         Indicate an error              19600000
.*                                                                      19650000
.* ******************************************************************   19700000
.*                                                                      19750000
.*   Validate the ADD keyword                                           19800000
.*                                                                      19850000
.* ******************************************************************   19900000
.*                                                                      19950000
.CHKADD  ANOP                                                           20000000
         AIF   (N'&ADD EQ 1).GOODADD     Only 1 parameter allowed       20050000
         AIF   (N'&ADD EQ 0).CHKDEL      ADD keyword not coded          20100000
         MNOTE 8,'IFRIF11 The ADD keyword is invalid.'                  20150000
&MACRET  SETB  1                         Indicate an error              20200000
.GOODADD ANOP                                                           20250000
         AIF   ('&ADD'(1,1) EQ '(').RADD ADD keyword in register form   20300000
&FUNC    SETC  '&ADD'                    Set the ADD function           20350000
         AGO   .ADDCHAR                                                 20400000
.RADD    ANOP                                                           20450000
&FUNC    SETC  '&ADD(1)'                 Set the ADD function           20500000
&REGFORM SETB  1                         Indicate register form         20550000
.ADDCHAR ANOP                                                           20600000
&FN      SETC  'ADD '                    Set the ADD function           20650000
&MUTFUNC SETA  &MUTFUNC+1                Indicate ADD keyword coded     20700000
.*                                                                      20750000
.* ******************************************************************   20800000
.*                                                                      20850000
.*   Validate the DEL keyword                                           20900000
.*                                                                      20950000
.* ******************************************************************   21000000
.*                                                                      21050000
.CHKDEL  ANOP                                                           21100000
         AIF   (N'&DEL EQ 1).GOODDEL     Only 1 parameter allowed       21150000
         AIF   (N'&DEL EQ 0).CHKALT      DEL keyword not coded          21200000
         MNOTE 8,'IFRIF12 The DEL keyword is invalid.'                  21250000
&MACRET  SETB  1                         Indicate an error              21300000
.GOODDEL ANOP                                                           21350000
         AIF   ('&DEL'(1,1) EQ '(').RDEL DEL keyword in register form   21400000
&FUNC    SETC  '&DEL'                    Set the DEL function           21450000
         AGO   .DELCHAR                                                 21500000
.RDEL    ANOP                                                           21550000
&FUNC    SETC  '&DEL(1)'                 Set the DEL function           21600000
&REGFORM SETB  1                         Indicate register form         21650000
.DELCHAR ANOP                                                           21700000
&FN      SETC  'DEL '                    Set the DEL function           21750000
&MUTFUNC SETA  &MUTFUNC+1                Indicate DEL keyword coded     21800000
.*                                                                      21850000
.* ******************************************************************   21900000
.*                                                                      21950000
.*   Validate the ALT keyword                                           22000000
.*                                                                      22050000
.* ******************************************************************   22100000
.*                                                                      22150000
.CHKALT  ANOP                                                           22200000
         AIF   (N'&ALT EQ 1).GOODALT     Only 1 parameter allowed       22250000
         AIF   (N'&ALT EQ 0).CHKFUNC     ALT keyword not coded          22300000
         MNOTE 8,'IFRIF13 The ALT keyword is invalid.'                  22350000
&MACRET  SETB  1                         Indicate an error              22400000
.GOODALT ANOP                                                           22450000
         AIF   ('&ALT'(1,1) EQ '(').RALT ALT keyword in register form   22500000
&FUNC    SETC  '&ALT'                    Set the ALT function           22550000
         AGO   .ALTCHAR                                                 22600000
.RALT    ANOP                                                           22650000
&FUNC    SETC  '&ALT(1)'                 Set the ALT function           22700000
&REGFORM SETB  1                         Indicate register form         22750000
.ALTCHAR ANOP                                                           22800000
&FN      SETC  'ALT '                    Set the ALT function           22850000
&MUTFUNC SETA  &MUTFUNC+1                Indicate ALT keyword coded     22900000
.*                                                                      22950000
.* ******************************************************************   23000000
.*                                                                      23050000
.*   Check to be sure that one of the functions was coded               23100000
.*                                                                      23150000
.* ******************************************************************   23200000
.*                                                                      23250000
.CHKFUNC ANOP                                                           23300000
         AIF   (&MUTFUNC).CHKMUT         If this variable is set, then  23350000
.*                                       a function was selected        23400000
         MNOTE 8,'IFRIF14 The ADD, DEL, or ALT keyword is required.'    23450000
&MACRET  SETB  1                         Indicate an error              23500000
.*                                                                      23550000
.* ******************************************************************   23600000
.*                                                                      23650000
.*   Check to be sure that not more than one function was coded         23700000
.*                                                                      23750000
.* ******************************************************************   23800000
.*                                                                      23850000
.CHKMUT  ANOP                                                           23900000
         AIF   (&MUTFUNC LE 1).VALRET    Function was coded mutually    23950000
.*                                       exclusive                      24000000
         MNOTE 8,'IFRIF15 The ADD, DEL, and ALT keywords are mutually e*24050000
               xclusive, code only one of them.'                        24100000
&MACRET  SETB  1                                                        24150000
.*                                                                      24200000
.* ******************************************************************   24250000
.*                                                                      24300000
.*   Validate the RETCODE keyword                                       24350000
.*                                                                      24400000
.* ******************************************************************   24450000
.*                                                                      24500000
.VALRET  ANOP                                                           24550000
         AIF   (N'&RETCODE LE 1).BUILD   RETCODE keyword is optional    24600000
.*                                       with only 1 parameter allowed  24650000
         MNOTE 8,'IFRIF16 The RETCODE keyword is invalid.'              24700000
&MACRET  SETB  1                                                        24750000
.*                                                                      24800000
.* ******************************************************************   24850000
.*                                                                      24900000
.*   Build the parameter list and invoke the interface routine          24950000
.*                                                                      25000000
.* ******************************************************************   25050000
.*                                                                      25100000
.BUILD   ANOP                                                           25150000
         AIF   (&MACRET).END             Leave if there are errors      25200000
         AIF   (K'&LABEL EQ 0).NOLAB     Check for a label              25250000
&LABEL   DS    0H                                                       25300000
.NOLAB   ANOP                                                           25350000
.*                                                                      25400000
* ******************************************************************    25450000
*   Check for proper release of TSO/E (Release 4 or higher)             25500000
* ******************************************************************    25550000
.*                                                                      25600000
         L     15,CVTPTR        Load the CVT pointer                    25650000
         USING CVTMAP,15        Establish addressability to the CVT     25700000
         L     14,CVTTVT        Load the TSVT pointer                   25750000
         DROP  15               DROP Addressability                     25800000
         LA    15,32            Initialize return code to no interface  25850000
         LTR   14,14            Check to see if the TSVT exists         25900000
         BZ    NOIF&SYSNDX      Zero, no TSVT - no interface routine    25950000
         USING TSVT,14          Establish addressability to the TSVT    26000000
         CLI   TSVTLEV,X'04'    Check for TSO/E Release 4 or higher     26050000
         BL    NOIF&SYSNDX      Less than 4, no interface routine       26100000
         DROP  14               DROP addressability                     26150000
.*                                                                      26200000
.* ******************************************************************   26250000
.*   Obtain the parameter list address                                  26300000
.* ******************************************************************   26350000
.*                                                                      26400000
         AIF   ('&MF(2)'(1,1) EQ '(').RMF MF parmlist in register form  26450000
         LA    1,&MF(2)         Load the parmlist address               26500000
         AGO   .STOUPT                                                  26550000
.RMF     ANOP                                                           26600000
&REG     SETC  '&MF(2)'(2,K'&MF(2)-2)    Obtain parmlist register       26650000
         AIF   ('&REG' EQ '1').STOUPT    Skip the load register step    26700000
         LR    1,&REG           Load the parmlist address               26750000
.*                                                                      26800000
.* ******************************************************************   26850000
.*   Store the UPT address in the parameter list                        26900000
.* ******************************************************************   26950000
.*                                                                      27000000
.STOUPT  ANOP                                                           27050000
         AIF   ('&UPT'(1,1) EQ '(').RUPT UPT keyword in register form   27100000
         L     15,&UPT(1)       Load the UPT address                    27150000
         ST    15,0(,1)         Store the UPT address in the parmlist   27200000
         AGO   .STOPSCB                                                 27250000
.RUPT    ANOP                                                           27300000
         ST    &UPT(1),0(,1)    Store the UPT address in the parmlist   27350000
.*                                                                      27400000
.* ******************************************************************   27450000
.*   Store the PSCB address in the parameter list                       27500000
.* ******************************************************************   27550000
.*                                                                      27600000
.STOPSCB ANOP                                                           27650000
         AIF   ('&PSCB'(1,1) EQ '(').RPSCB PSCB keyword in register     27700000
.*                                         form                         27750000
         L     15,&PSCB(1)      Load the PSCB address                   27800000
         ST    15,4(,1)         Store the PSCB address in the parmlist  27850000
         AGO   .STOECT                                                  27900000
.RPSCB   ANOP                                                           27950000
         ST    &PSCB(1),4(,1)   Store the PSCB address in the parmlist  28000000
.*                                                                      28050000
.* ******************************************************************   28100000
.*   Store the ECT address in the parameter list                        28150000
.* ******************************************************************   28200000
.*                                                                      28250000
.STOECT  ANOP                                                           28300000
         AIF   ('&ECT'(1,1) EQ '(').RECT ECT keyword in register form   28350000
         L     15,&ECT(1)       Load the ECT address                    28400000
         ST    15,8(,1)         Store the ECT address in the parmlist   28450000
         AGO   .STOFUNC                                                 28500000
.RECT    ANOP                                                           28550000
         ST    &ECT(1),8(,1)    Store the ECT address in the parmlist   28600000
.*                                                                      28650000
.* ******************************************************************   28700000
.*   Store the argument address in the parameter list                   28750000
.* ******************************************************************   28800000
.*                                                                      28850000
.STOFUNC ANOP                                                           28900000
         AIF   (&REGFORM).RFUNC Argument in register form               28950000
         LA    15,&FUNC         Load the address of the argument        29000000
         ST    15,12(,1)        Store the address in the parmlist       29050000
         AGO   .STORE                                                   29100000
.RFUNC   ANOP                                                           29150000
         ST    &FUNC,12(,1)     Load the address of the argument        29200000
.*                                                                      29250000
.* ******************************************************************   29300000
.*   Store the function in the parameter list                           29350000
.* ******************************************************************   29400000
.*                                                                      29450000
.STORE   ANOP                                                           29500000
         MVC   16(4,1),=C'&FN'  Store the function in the parmlist      29550000
.*                                                                      29600000
.* ******************************************************************   29650000
.*   Zero out the ABEND and REASON CODE and the SERVICE RETURN CODE     29700000
.*   and SERVICE REASON CODE fields.                                    29750000
.* ******************************************************************   29800000
.*                                                                      29850000
         LA    15,0                                                     29900000
         ST    15,20(,1)        Initialize the ABEND code to zero       29950000
         ST    15,24(,1)        Initialize the reason code to zero      30000000
         ST    15,28(,1)        Initialize the service return code      30050000
         ST    15,32(,1)        Initialize the service reason code      30100000
.*                                                                      30150000
.* ******************************************************************   30200000
.*   Call the interface routine using CALLTSSR                          30250000
.* ******************************************************************   30300000
.*                                                                      30350000
         CALLTSSR EP=IKJIFRIF   Call the interface routine              30400000
.*                                                                      30450000
.* ******************************************************************   30500000
.*   Check for RETCODE option                                           30550000
.* ******************************************************************   30600000
.*                                                                      30650000
NOIF&SYSNDX DS    0H                                                    30700000
         AIF   (N'&RETCODE EQ 0).END     No return code variable        30750000
         ST    15,&RETCODE      Save the return code value.             30800000
.*                                                                      30850000
.* ******************************************************************   30900000
.* ******************************************************************   30950000
.*                                                                      31000000
.END     ANOP                                                           31050000
         MEND                                                           31100000
.*****************  END OF IKJIFRIR ASSEMBLER MACRO                  */ 31150000
*/*****************************************************************     31200000
* **************** -Start of IKJIFRIF - PL/AS MACRO ***************  */ 31250000
*                                                                       31300000
*%IKJIFRIF: MACRO KEYS(UPT,PSCB,ECT,ADD,DEL,ALT,RETCODE,MF);            31350000
*                                                                       31400000
*/********************************************************************/ 31450000
*/*                       PL/AS GENERATION                           */ 31500000
*/********************************************************************/ 31550000
*                                                                       31600000
*/********************************************************************/ 31650000
*/* Declare macro variables                                          */ 31700000
*/********************************************************************/ 31750000
*                                                                       31800000
*  DCL RC    FIXED,             /* Macro compile return code         */ 31850000
*      TEXT  CHAR,              /* Used to print error messages      */ 31900000
*      COM   CHAR,              /* Used to print comments            */ 31950000
*      TITLE CHAR,              /* IKJIFRIF head/tail comment field  */ 32000000
*      MUTFUNC FIXED,           /* Used to check mutual exclusiveness*/ 32050000
*      FUNC  CHAR,              /* Used to hold the function         */ 32100000
*      ARG   CHAR;              /* Used to hold the argument         */ 32150000
*                                                                       32200000
*/********************************************************************/ 32250000
*/*                                                                  */ 32300000
*/* Set up IKJIFRIF head/tail comment field                          */ 32350000
*/*                                                                  */ 32400000
*/********************************************************************/ 32450000
*                                                                       32500000
*  TITLE = MACNAME !! ' ' !! MACLIST !! ' ' !! MACKEYS;                 32550000
*                                                                       32600000
*/********************************************************************/ 32650000
*/*                                                                  */ 32700000
*/*   Validate the MF keyword                                        */ 32750000
*/*                                                                  */ 32800000
*/********************************************************************/ 32850000
*                                                                       32900000
*  IF NUMBER(MF) > 2 THEN                                               32950000
*     DO;                            /* Can't have more than 2          33000000
*                                       parameters                   */ 33050000
*     TEXT = 'IFRIF01 The MF keyword is invalid.';                      33100000
*     ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN;             33150000
*     RC = 8;                                                           33200000
*     END;                                                              33250000
*                                                                       33300000
*  ELSE                                                                 33350000
*     IF NUMBER(MF) <= 1 THEN                                           33400000
*        IF NUMBER(MF) = 1 THEN                                         33450000
*           DO;                      /* Must supply a parameter list    33500000
*                                       name                         */ 33550000
*           TEXT = 'IFRIF04 The parameter list field is ' !!            33600000
*                  'required with the MF keyword.';                     33650000
*           ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN;       33700000
*           RC = 8;                                                     33750000
*           END;                                                        33800000
*        ELSE                                                           33850000
*           DO;                      /* MF keyword must be supplied  */ 33900000
*           TEXT = 'IFRIF02 The MF keyword is required.';               33950000
*           ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN;       34000000
*           RC = 8;                                                     34050000
*           END;                                                        34100000
*     ELSE                                                              34150000
*                                                                       34200000
*/********************************************************************/ 34250000
*/*                                                                  */ 34300000
*/*   List Form                                                      */ 34350000
*/*                                                                  */ 34400000
*/********************************************************************/ 34450000
*                                                                       34500000
*        IF MF(1) = 'L' THEN                                            34550000
*           DO;                      /* Generate the list form       */ 34600000
*           ANS (COMMENT(TITLE))                                        34650000
*              COL(MACCOL+2) NORESCAN;                                  34700000
*                                                                       34750000
*           ANS ('DECLARE  1 ' !! MF(2) !! ' BDY(DWORD),')              34800000
*              COL(MACCOL);                                             34850000
*                                                                       34900000
*           ANS ('3 IFR0001 PTR(31),' !!                                34950000
*              COMMENT('UPT address'))                                  35000000
*              COL(MACCOL);                                             35050000
*                                                                       35100000
*           ANS ('3 IFR0002 PTR(31),' !!                                35150000
*              COMMENT('PSCB address'))                                 35200000
*              COL(MACCOL);                                             35250000
*                                                                       35300000
*           ANS ('3 IFR0003 PTR(31),' !!                                35350000
*              COMMENT('ECT address'))                                  35400000
*              COL(MACCOL);                                             35450000
*                                                                       35500000
*           ANS ('3 IFR0004 PTR(31),' !!                                35550000
*              COMMENT('Argument address'))                             35600000
*              COL(MACCOL);                                             35650000
*                                                                       35700000
*           ANS ('3 IFR0005 CHAR(4),' !!                                35750000
*              COMMENT('Function'))                                     35800000
*              COL(MACCOL);                                             35850000
*                                                                       35900000
*           ANS ('3 IFRABEND CHAR(4),' !!                               35950000
*              COMMENT('ABEND code field'))                             36000000
*              COL(MACCOL);                                             36050000
*                                                                       36100000
*           ANS ('3 IFRABRSN FIXED(32),' !!                             36150000
*              COMMENT('ABEND reason code'))                            36200000
*              COL(MACCOL);                                             36250000
*                                                                       36300000
*           ANS ('3 IFRSVCRC FIXED(32),' !!                             36350000
*              COMMENT('Service return code from interface processing'))36400000
*              COL(MACCOL);                                             36450000
*                                                                       36500000
*           ANS ('3 IFRSVCRN FIXED(32),' !!                             36550000
*              COMMENT('Service reason code'))                          36600000
*              COL(MACCOL);                                             36650000
*                                                                       36700000
*           ANS ('3 IFRRSVD1 CHAR(12),' !!                              36750000
*              COMMENT('Reserved'))                                     36800000
*              COL(MACCOL);                                             36850000
*                                                                       36900000
*           ANS ('3 * BDY(DWORD);' !!                                   36950000
*              COMMENT('End on a double word'))                         37000000
*              COL(MACCOL);                                             37050000
*                                                                       37100000
*           END;                                                        37150000
*        ELSE                                                           37200000
*                                                                       37250000
*/********************************************************************/ 37300000
*/*                                                                  */ 37350000
*/*   Execute Form                                                   */ 37400000
*/*                                                                  */ 37450000
*/********************************************************************/ 37500000
*                                                                       37550000
*           IF MF(1) = 'E' THEN                                         37600000
*              DO;                   /* Generate the execute form    */ 37650000
*                                                                       37700000
*/********************************************************************/ 37750000
*/*                                                                  */ 37800000
*/*   Validate the UPT keyword                                       */ 37850000
*/*                                                                  */ 37900000
*/********************************************************************/ 37950000
*                                                                       38000000
*              IF NUMBER(UPT) = 0 THEN                                  38050000
*                 DO;                /* The UPT keyword is required  */ 38100000
*                 TEXT = 'IFRIF06 The UPT keyword is required.';        38150000
*                 ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN; 38200000
*                 RC = 8;                                               38250000
*                 END;                                                  38300000
*                                                                       38350000
*              IF NUMBER(UPT) > 1 THEN                                  38400000
*                 DO;                /* Only 1 parameter is allowed  */ 38450000
*                 TEXT = 'IFRIF05 The UPT keyword is invalid.';         38500000
*                 ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN; 38550000
*                 RC = 8;                                               38600000
*                 END;                                                  38650000
*                                                                       38700000
*/********************************************************************/ 38750000
*/*                                                                  */ 38800000
*/*   Validate the PSCB keyword                                      */ 38850000
*/*                                                                  */ 38900000
*/********************************************************************/ 38950000
*                                                                       39000000
*              IF NUMBER(PSCB) = 0 THEN                                 39050000
*                 DO;                /* The PSCB keyword is required */ 39100000
*                 TEXT = 'IFRIF08 The PSCB keyword is required.';       39150000
*                 ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN; 39200000
*                 RC = 8;                                               39250000
*                 END;                                                  39300000
*                                                                       39350000
*              IF NUMBER(PSCB) > 1 THEN                                 39400000
*                 DO;                /* Only 1 parameter is allowed  */ 39450000
*                 TEXT = 'IFRIF07 The PSCB keyword is invalid.';        39500000
*                 ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN; 39550000
*                 RC = 8;                                               39600000
*                 END;                                                  39650000
*                                                                       39700000
*/********************************************************************/ 39750000
*/*                                                                  */ 39800000
*/*   Validate the ECT keyword                                       */ 39850000
*/*                                                                  */ 39900000
*/********************************************************************/ 39950000
*                                                                       40000000
*              IF NUMBER(ECT) = 0 THEN                                  40050000
*                 DO;                /* The ECT keyword is required  */ 40100000
*                 TEXT = 'IFRIF10 The ECT keyword is required.';        40150000
*                 ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN; 40200000
*                 RC = 8;                                               40250000
*                 END;                                                  40300000
*                                                                       40350000
*              IF NUMBER(ECT) > 1 THEN                                  40400000
*                 DO;                /* Only 1 parameter is allowed  */ 40450000
*                 TEXT = 'IFRIF09 The ECT keyword is invalid.';         40500000
*                 ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN; 40550000
*                 RC = 8;                                               40600000
*                 END;                                                  40650000
*                                                                       40700000
*/********************************************************************/ 40750000
*/*                                                                  */ 40800000
*/*   Validate the ADD keyword                                       */ 40850000
*/*                                                                  */ 40900000
*/********************************************************************/ 40950000
*                                                                       41000000
*              IF NUMBER(ADD) = 1 THEN                                  41050000
*                 DO;                /* Only 1 parameter is allowed  */ 41100000
*                 MUTFUNC = MUTFUNC + 1;                                41150000
*                 FUNC = 'ADD ';                                        41200000
*                 ARG = ADD(1);                                         41250000
*                 END;                                                  41300000
*                                                                       41350000
*              IF NUMBER(ADD) > 1 THEN                                  41400000
*                 DO;                /* Only 1 parameter is allowed  */ 41450000
*                 MUTFUNC = MUTFUNC + 1;                                41500000
*                 TEXT = 'IFRIF11 The ADD keyword is invalid.';         41550000
*                 ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN; 41600000
*                 RC = 8;                                               41650000
*                 END;                                                  41700000
*                                                                       41750000
*/********************************************************************/ 41800000
*/*                                                                  */ 41850000
*/*   Validate the DEL keyword                                       */ 41900000
*/*                                                                  */ 41950000
*/********************************************************************/ 42000000
*                                                                       42050000
*              IF NUMBER(DEL) = 1 THEN                                  42100000
*                 DO;                /* Only 1 parameter is allowed  */ 42150000
*                 MUTFUNC = MUTFUNC + 1;                                42200000
*                 FUNC = 'DEL ';                                        42250000
*                 ARG = DEL(1);                                         42300000
*                 END;                                                  42350000
*                                                                       42400000
*              IF NUMBER(DEL) > 1 THEN                                  42450000
*                 DO;                /* Only 1 parameter is allowed  */ 42500000
*                 MUTFUNC = MUTFUNC + 1;                                42550000
*                 TEXT = 'IFRIF12 The DEL keyword is invalid.';         42600000
*                 ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN; 42650000
*                 RC = 8;                                               42700000
*                 END;                                                  42750000
*                                                                       42800000
*/********************************************************************/ 42850000
*/*                                                                  */ 42900000
*/*   Validate the ALT keyword                                       */ 42950000
*/*                                                                  */ 43000000
*/********************************************************************/ 43050000
*                                                                       43100000
*              IF NUMBER(ALT) = 1 THEN                                  43150000
*                 DO;                /* Only 1 parameter is allowed  */ 43200000
*                 MUTFUNC = MUTFUNC + 1;                                43250000
*                 FUNC = 'ALT ';                                        43300000
*                 ARG = ALT(1);                                         43350000
*                 END;                                                  43400000
*                                                                       43450000
*              IF NUMBER(ALT) > 1 THEN                                  43500000
*                 DO;                /* Only 1 parameter is allowed  */ 43550000
*                 MUTFUNC = MUTFUNC + 1;                                43600000
*                 TEXT = 'IFRIF13 The ALT keyword is invalid.';         43650000
*                 ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN; 43700000
*                 RC = 8;                                               43750000
*                 END;                                                  43800000
*                                                                       43850000
*/********************************************************************/ 43900000
*/*                                                                  */ 43950000
*/*   Check to be sure that one of the functions was coded           */ 44000000
*/*                                                                  */ 44050000
*/********************************************************************/ 44100000
*                                                                       44150000
*              IF MUTFUNC = 0 THEN                                      44200000
*                 DO;                /* No function selected         */ 44250000
*                 TEXT = 'IFRIF14 The ADD, DEL, or ALT keyword ' !!     44300000
*                        'is required.';                                44350000
*                 ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN; 44400000
*                 RC = 8;                                               44450000
*                 END;                                                  44500000
*                                                                       44550000
*/********************************************************************/ 44600000
*/*                                                                  */ 44650000
*/*   Check to be sure that not more than one function was code      */ 44700000
*/*                                                                  */ 44750000
*/********************************************************************/ 44800000
*                                                                       44850000
*              IF MUTFUNC > 1 THEN                                      44900000
*                 DO;                /* Function wasn't coded mutually  44950000
*                                       exclusive                    */ 45000000
*                 TEXT = 'IFRIF15 The ADD, DEL, and ALT keywords ' !!   45050000
*                        'are mutually exclusive, code only one ' !!    45100000
*                        'of them.';                                    45150000
*                 ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN; 45200000
*                 RC = 8;                                               45250000
*                 END;                                                  45300000
*                                                                       45350000
*/********************************************************************/ 45400000
*/*                                                                  */ 45450000
*/*   Validate the RETCODE keyword                                   */ 45500000
*/*                                                                  */ 45550000
*/********************************************************************/ 45600000
*                                                                       45650000
*              IF NUMBER(RETCODE) > 1 THEN                              45700000
*                 DO;                /* RETCODE keyword is optional,    45750000
*                                       with only 1 parameter allowed*/ 45800000
*                 TEXT = 'IFRIF16 The RETCODE keyword is invalid.';     45850000
*                 ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN; 45900000
*                 RC = 8;                                               45950000
*                 END;                                                  46000000
*                                                                       46050000
*/********************************************************************/ 46100000
*/*                                                                  */ 46150000
*/*   Build the parameter list and invoke the interface routine      */ 46200000
*/*                                                                  */ 46250000
*/********************************************************************/ 46300000
*                                                                       46350000
*              IF RC = 0 THEN                                           46400000
*                 DO;                /* No errors, then continue     */ 46450000
*                 IF MACLABEL ^= '' THEN                                46500000
*                    ANS (MACLABEL) COL(2);                             46550000
*                                                                       46600000
*                 ANS ('DO;' !!                                         46650000
*                    COMMENT(TITLE)) COL(MACCOL);                       46700000
*                                                                       46750000
*/********************************************************************/ 46800000
*/*   Check for proper release of TSO/E (Release 4 or higher)        */ 46850000
*/********************************************************************/ 46900000
*                                                                       46950000
*                 ANS ('RFY GPR15P RSTD;')                              47000000
*                    COL(MACCOL);                                       47050000
*                                                                       47100000
*                 COM = 'Check for proper release of TSO/E ' !!         47150000
*                       '(Release 4 or higher)';                        47200000
*                 ANS (COMMENT(COM)) COL(MACCOL+3);                     47250000
*                                                                       47300000
*                 ANS ('IF CVTTVT = 0 THEN')                            47350000
*                    COL(MACCOL);                                       47400000
*                                                                       47450000
*                 ANS ('GPR15P = 32;' !!                                47500000
*                    COMMENT('No TSVT, no interface routine'))          47550000
*                    COL(MACCOL+3);                                     47600000
*                                                                       47650000
*                 ANS ('ELSE')                                          47700000
*                    COL(MACCOL);                                       47750000
*                                                                       47800000
*                 ANS ('IF TSVTLEV < ''04''X THEN')                     47850000
*                    COL(MACCOL+3);                                     47900000
*                                                                       47950000
*                 COM = 'Not TSO/E Release 4 or higher, ' !!            48000000
*                       'no interface routine';                         48050000
*                 ANS ('GPR15P = 32;' !!                                48100000
*                    COMMENT(COM)) COL(MACCOL+6);                       48150000
*                                                                       48200000
*                 ANS ('ELSE')                                          48250000
*                    COL(MACCOL+3);                                     48300000
*                                                                       48350000
*                 ANS ('DO;' !!                                         48400000
*                    COMMENT('We have TSO/E Release 4 or higher'))      48450000
*                    COL(MACCOL+6);                                     48500000
*                                                                       48550000
*/********************************************************************/ 48600000
*/*   Store the UPT address in the parameter list                    */ 48650000
*/********************************************************************/ 48700000
*                                                                       48750000
*                 ANS ('IFR0001 = ' !! UPT(1) !! ';' !!                 48800000
*                    COMMENT('Place the UPT address in the parmlist'))  48850000
*                    COL(MACCOL+6);                                     48900000
*                                                                       48950000
*/********************************************************************/ 49000000
*/*   Store the PSCB address in the parameter list                   */ 49050000
*/********************************************************************/ 49100000
*                                                                       49150000
*                 ANS ('IFR0002 = ' !! PSCB(1) !! ';' !!                49200000
*                    COMMENT('Place the PSCB address in the parmlist')) 49250000
*                    COL(MACCOL+6);                                     49300000
*                                                                       49350000
*/********************************************************************/ 49400000
*/*   Store the ECT address in the parameter list                    */ 49450000
*/********************************************************************/ 49500000
*                                                                       49550000
*                 ANS ('IFR0003 = ' !! ECT(1) !! ';' !!                 49600000
*                    COMMENT('Place the ECT address in the parmlist'))  49650000
*                    COL(MACCOL+6);                                     49700000
*                                                                       49750000
*/********************************************************************/ 49800000
*/*   Store the argument address in the parameter list               */ 49850000
*/********************************************************************/ 49900000
*                                                                       49950000
*                 ANS ('IFR0004 = ADDR(' !! ARG !! ');' !!              50000000
*                 COMMENT('Place the argument address in the parmlist'))50050000
*                    COL(MACCOL+6);                                     50100000
*                                                                       50150000
*/********************************************************************/ 50200000
*/*   Store the function in the parameter list                       */ 50250000
*/********************************************************************/ 50300000
*                                                                       50350000
*                 ANS ('IFR0005 = ''' !! FUNC !! ''';' !!               50400000
*                    COMMENT('Place the function in the parmlist'))     50450000
*                    COL(MACCOL+6);                                     50500000
*                                                                       50550000
*/********************************************************************/ 50600000
*/*   Zero out the ABEND and REASON CODE and the SERVICE RETURN CODE */ 50650000
*/*   and SERVICE REASON CODE fields.                                */ 50700000
*/********************************************************************/ 50750000
*                                                                       50800000
*                 ANS ('IFRABEND = ''00000000''X;' !!                   50850000
*                    COMMENT('Initialize ABEND code to zero'))          50900000
*                    COL(MACCOL+6);                                     50950000
*                                                                       51000000
*                 ANS ('IFRABRSN = 0;' !!                               51050000
*                    COMMENT('Initialize ABEND reason code to zero'))   51100000
*                    COL(MACCOL+6);                                     51150000
*                                                                       51200000
*                 ANS ('IFRSVCRC = 0;' !!                               51250000
*                    COMMENT('Initialize service return code to zero')) 51300000
*                    COL(MACCOL+6);                                     51350000
*                                                                       51400000
*                 ANS ('IFRSVCRN = 0;' !!                               51450000
*                    COMMENT('Initialize service reason code to zero')) 51500000
*                    COL(MACCOL+6);                                     51550000
*                                                                       51600000
*/********************************************************************/ 51650000
*/*   Obtain the parameter list address                              */ 51700000
*/********************************************************************/ 51750000
*                                                                       51800000
*                 ANS ('RFY GPR01P RSTD;')                              51850000
*                    COL(MACCOL+6);                                     51900000
*                                                                       51950000
*                 ANS ('GPR01P = ADDR(' !! MF(2) !! ');' !!             52000000
*                    COMMENT('Obtain the parmlist address'))            52050000
*                    COL(MACCOL+6);                                     52100000
*                                                                       52150000
*/********************************************************************/ 52200000
*/*   Call the interface routine using ?CALLTSSR                     */ 52250000
*/********************************************************************/ 52300000
*                                                                       52350000
*                 ANS ('? CALLTSSR EP(IKJIFRIF);' !!                    52400000
*                    COMMENT('Call the interface routine'))             52450000
*                    COL(MACCOL+6);                                     52500000
*                                                                       52550000
*                 ANS ('RFY GPR01P UNRSTD;')                            52600000
*                    COL(MACCOL+6);                                     52650000
*                                                                       52700000
*                 ANS ('END;')                                          52750000
*                    COL(MACCOL+6);                                     52800000
*                                                                       52850000
*/********************************************************************/ 52900000
*/*   Check for RETCODE option                                       */ 52950000
*/********************************************************************/ 53000000
*                                                                       53050000
*                 IF NUMBER(RETCODE) = 1 THEN                           53100000
*                    ANS (RETCODE(1) !! ' = GPR15P;' !!                 53150000
*                       COMMENT('Save the return code')) COL(MACCOL);   53200000
*                                                                       53250000
*                 ANS ('RFY GPR15P UNRSTD;')                            53300000
*                    COL(MACCOL);                                       53350000
*                                                                       53400000
*                 ANS ('END; ' !! COMMENT(TITLE)) COL(MACCOL);          53450000
*                 END;                                                  53500000
*              END;                                                     53550000
*           ELSE                                                        53600000
*              DO;                   /* Invalid MF parameter         */ 53650000
*              TEXT = 'IFRIF01 The MF keyword is invalid.';             53700000
*              ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN;    53750000
*              RC = 8;                                                  53800000
*              END;                                                     53850000
*                                                                       53900000
*  RETURN CODE(RC);                                                     53950000
*                                                                       54000000
*% END IKJIFRIF;                                                        54050000
