 #ifndef _mtst_chain_                                                   00010000
 #define _mtst_chain_  /*                                               00010500
         AGO  .MTST                                                     00011200
*//****** START OF SPECIFICATIONS ****************************          00011900
.***PROPRIETARY_STATEMENT*************************************          00012600
.*01* PROPRIETARY STATEMENT:                                 *          00013300
.*                                                           *          00014000
.*    Licensed Materials-Property of IBM                     *          00014700
.*    5650-ZOS Copyright IBM Corp. 2005, 2017                *          00015400
.*                                                           *          00016100
.*    Status= HBB77B0                                        *          00016800
.*                                                           *          00017500
.***END_OF_PROPRIETARY_STATEMENT******************************          00018200
*                                                            *          00020000
*01* DESCRIPTIVE NAME:  IAZ task communication area          *          00030000
*                                                            *          00040000
*02*  ACRONYM:  IAZCMTST                                     *          00050000
*                                                            *          00060000
*01* MACRO NAME:  IAZCMTST                                   *          00070000
*                                                            *          00080000
*01* STRUCT NAME:  mtst                                      *          00090000
*                                                            *          00100000
*01* LABEL PREFIX:  mtst                                     *          00110000
*                                                            *          00120000
*01* COMPONENT ID:  JES Common (SC141)                       *          00130000
*                                                            *          00140000
*01* FUNCTION:                                               *          00260000
*                                                            *          00270000
*     Maps the data area shared between the IAZNJTCP         *          00280000
*     main task on the NJETCP server and the subtask         *          00290000
*     attached by the IAZNJTCP main task.                    *          00300000
*                                                            *          00310000
*     Each subtask represents a single TCPIP socket          *          00320000
*     connection between this NJETCP server address          *          00330000
*     space and other NJETCP server address spaces           *          00340000
*     or with other component nodes.                         *          00350000
*                                                            *          00360000
*01* NOTES:                                                  *          00370000
*                                                            *          00380000
*     The NJETCP main task (IAZNJTCP) of the server          *          00390000
*     address space would allocate the IAZCMTST data         *          00400000
*     area before attaching a subtask for each TCPIP         *          00410000
*     connection. This data area would be shared by          *          00420000
*     both the main task and the subtask.                    *          00430000
*                                                            *          00440000
*     The TCPIP connection may be initiated by the local     *          00450000
*     node or by a remote node.                              *          00460000
*     For eg:                                                *          00470000
*                                                            *          00480000
*     *  JES on the local node may want to send jobs/        *          00490000
*        sysout to remote nodes. This is the                 *          00500000
*        outbound work for the server.                       *          00510000
*                                                            *          00520000
*     *  The remote node may want to connect to the JES      *          00530000
*        on the local node to destine some jobs/sysout       *          00540000
*        to the local node. This is the inbound work         *          00550000
*        for the server.                                     *          00560000
*                                                            *          00570000
*     In either case, the name Outbound/Inbound have         *          00580000
*     significance only till the connection is established.  *          00590000
*     Later, jobs can be transmitted/received from either    *          00600000
*     ends of the connection. The TCP/IP connection is       *          00610000
*     more like a peer-peer connection in this respect.      *          00620000
*                                                            *          00630000
*                                                            *          00640000
*01* EXTERNAL CLASSIFICATION: None                           *          00650000
*01* END OF EXTERNAL CLASSIFICATION:                         *          00660000
*                                                            *          00670000
*01* EYE-CATCHER: MTST                                       *          00680000
*02*  OFFSET:      mtst_id - mtst                            *          00690000
*02*  LENGTH:      L'mtst_id                                 *          00700000
*                                                            *          00710000
*01* STORAGE ATTRIBUTES:                                     *          00720000
*02*  SUBPOOL:  0                                            *          00730000
*02*  KEY:  Key 0                                            *          00740000
*02*  RESIDENCY:  Any                                        *          00750000
*                                                            *          00760000
*01* SIZE:                                                   *          00770000
*                                                            *          00780000
*     Size of mtst structure.                                *          00790000
*                                                            *          00800000
*01* CREATED BY:                                             *          00810000
*                                                            *          00820000
*    The IAZNJTCP main task before attaching a subtask       *          00830000
*    for each TCP connection.                                *          00840000
*                                                            *          00850000
*01* POINTED TO BY:                                          *          00860000
*                                                            *          00870000
*    sock_mtstp in SOCK_CHN element                          *          00880000
*                                                            *          00890000
*01* SERIALIZATION:                                          *          00900000
*                                                            *          00910000
*     None required                                          *          00920000
*                                                            *          00930000
*                                                            *          00940000
*01* METHOD OF ACCESS:                                       *          00950000
*                                                            *          00960000
*02*  C:                                                     *          00970000
*      Header file #include <iazcmtst.h>                     *          00980000
*                                                            *          00990000
*01* DELETED BY:                                             *          01000000
*                                                            *          01010000
*     Deleted by the creator of this data area.              *          01020000
*                                                            *          01030000
*01* FREQUENCY:                                              *          01040000
*                                                            *          01050000
*     One per each subtask ATTACH by the IAZNJTCP task      *@Z07LTCP*  01060000
*                                                            *          01070000
*01* RESTRICTIONS:                                           *          01080000
*                                                            *          01090000
*     None                                                   *          01100000
*                                                            *          01110000
**************************************************************          01120000
*01* CHANGE ACTIVITY:                                        *          01130000
*                                                            *          01140000
*  $R07LTCP=NJETCP   HBB7720 030431 ID1RS:    IAZCMTST       *          01150000
*  $Z07LTCP=NJETCP   HBB7720 040909 ID1RS:  Code review chgs *          01160000
*  $Z07LTCP=NJETCP   HBB7720 041103 ID1RS:  Recovery changes *          01170000
* $ME05913=NJETCP   HBB7720 060224 CLW:  Fileid of 0 not clo *          01173000
*                                        ME05913             *          01176000
* $ME05964=NJETCP   HBB7720 060305 CLW:  Various signon seri *          01177000
*                                        ME05964             *          01178000
* $ME06005=NJETCP   HBB7720 060320 CLW:  Denial of service   *          01178400
*                                        ME06005             *          01179000
*                                                            *          01180000
*  01* A000000-999999    Created for z/OS Release 7          *          01190000
****** END OF SPECIFICATIONS *********************************/         01200000
                                                                        01210000
#pragma pack(1)                                            /*@OA49163*/ 01220000
struct mtst {                                                           01250000
  unsigned char  mtst_idÝ6¨;                                            01260000
                 /* Eye catcher 'MTST  '                     */         01270000
  unsigned char  mtst_version;                                          01280000
                 /* Version of mapping                       */         01290000
  unsigned char  mtst_flg1;                                             01300000
                 /* Flag byte 1                              */         01310000
  unsigned char  mtst_flg2;                                             01320000
                 /* Flag byte 2                              */         01330000
  unsigned char  filler1Ý3¨;                                            01340000
                 /* Reserved for more flags                  */         01350000
  void           *mtst_schnp;                                           01360000
                 /* Address of socket chain element          */         01370000
  void           *mtst_tctp;                                            01380000
                 /* Address of IAZHTCT control block         */         01390000
  void           *mtst_tsctp;                                           01400000
                 /* Address of IAZHTSCT control block        */         01410000
  struct addrinfo *mtst_resptr;                                         01420000
                 /* Pointer to a linked list                            01430000
                    of one or more addrinfo                             01440000
                    structures returned by                              01450000
                    getaddrinfo()                            */         01460000
  struct clientid mtst_tcp_clid;                                        01470000
                 /* Client id of the TCP main task           */         01480000
  struct clientid mtst_stk_clid;                                        01490000
                 /* Client id of the sub task                */         01500000
  int            mtst_stk_tcb;                                          01510000
                 /* TCB address of the subtask               */         01520000
  unsigned char  mtst_tcbtokenÝ16¨;                                     01530000
                 /* TCB token of the socket subtask          @Z07LTCP*/ 01540000
  int            mtst_mtk_gsck_ecb;                                     01550000
                 /* ECB that main task posts after givesocket*/         01560000
  int            mtstclsk;                                              01570000
                 /* Client socket for inbound requests       */         01580000
  int            mtststkn;                                              01590000
                 /* SockToken returned by givesocket() call  */         01600000
  int            mtst_stk_atch_ecb;                                     01610000
                 /* ECB to be posted when the subtask                   01620000
                    terminates                                */        01630000
  int            mtst_connect_ecb;                                      01640000
                 /* ECB to be posted after Asynchronous I/O             01650000
                    processed the connect() request           */        01660000
  int            mtst_send_ecb;                                         01670000
                 /* ECB to be posted after Asynchronous I/O             01680000
                    processed the send() request              */        01690000
  int            mtst_recv_ecb;                                         01700000
                 /* ECB to be posted after Asynchronous I/O             01710000
                    processed the recv() request              */        01720000
  int            mtst_dup_conn_ecb;                                     01730000
                 /* ECB to be posted when this subtask is a             01740000
                    duplicate of another outbound connection            01750000
                    subtask and this subtask needs to prove             01760000
                    otherwise to survive                      */        01770000
  int            mtst_stsk_goaway_ecb;                                  01780000
                 /* ECB to be posted when this subtask needs            01790000
                    to be terminated                          */        01800000
  int            mtst_sck_area_len;                                     01810000
                 /* Len of Sockaddr area for inbound requests */        01820000
  struct sockaddr_in6   mtst_sck_area;                                  01830000
                 /* Sockaddr area for inbound requests        */        01840000
  int            mtst_init_stimer_id;                      /*@Z23D090*/ 01842000
                 /* STIMER id for socket initialization     *@Z23D090*/ 01845000
};                                                                      01850000
                                                                        01860000
/* Values for field "mtst_version"                            */        01870000
#define mtst_vone 0x01         /* Version 1                   */        01880000
#define mtst_cver mtst_vone    /* Current version             */        01890000
                                                                        01900000
/* Values for field "mtst_flg1" - All flags are maintained  *@Z23D088*/ 01910000
/*   by the main task                                       *@Z23D088*/ 01920000
                                                                        01940000
#define mtst_res_flg1_80 0x80  /* Reserved for IBM          *@Z23D088*/ 01950000
#define mtst_res_flg1_40 0x40  /* Reserved for IBM          *@Z23D088*/ 01960000
#define mtst_stsk_term   0x20  /* Subtask terminated          */        02040000
#define mtst_haltconn    0x10  /* Halt connection issued for            02050000
                                  the subtask                 */        02060000
                                                                        02070000
#define mtst_gvsck_issued 0x08 /* Main task issued                      02080000
                                  givesocket()                */        02090000
#define mtst_stsk_goaway 0x04  /* Subtask can be terminated   */        02100000
#define mtst_stsk_atched 0x02  /* Subtask attached for work   */        02110000
#define mtst_gvsck_ready 0x01  /* Main task ready to        *@Z23D088*  02120000
                                  givesocket()              *@Z23D088*/ 02125000
                                                                        02130000
/* Values for field "mtst_flg2" - All flags are maintained  *@Z23D088*/ 02140000
/*   by the subtask                                         *@Z23D088*/ 02150000
                                                                        02170000
#define mtst_pst_cleanup 0x80  /* Post main task for cleanup            02180000
                                  of SC and MTST data areas   */        02190000
#define mtst_pclt_xmtrcv 0x40  /* Indicate that percolation *@Z07LTCP*  02200000
                                  is from xmitrecv routine  *@Z07LTCP*/ 02210000
#define mtst_sck_passed  0x20  /* The socket has been passed            02220000
                                  successfully from the main            02223000
                                  task to the subtask       *@Z23D086*/ 02226000
#define mtst_stsk_error  0x10  /* Subtask error - Subtask               02227000
                                  sets this flag before it              02228000
                                  exits. The main task cleans           02229000
                                  up the control blocks and             02230000
                                  lets know either JES or the           02231000
                                  client that it could not              02232000
                                  process the request.      *@Z23D088*/ 02233000
#define mtst_tksck_ready 0x08  /* Subtask ready to                      02234000
                                  takesocket()              *@Z23D088*/ 02235000
                                                                        02240000
#define mtst_no_retry    0x04  /* An error occurred and no retry        02260000
                                  is possible.                       */ 02262000
#define mtst_res_flg2_02 0x02  /* Reserved for IBM            */        02270000
#define mtst_res_flg2_01 0x01  /* Reserved for IBM            */        02280000
                                                                        02290000
#pragma pack(reset)                                        /*@OA49163*/ 02295000
#endif                           /*                              @Z23ED 02300000
.MTST                ANOP                                               02310000
MTST                 DSECT ,                                            02320000
mtst_id              DS    CL6     Eye catcher 'MTST  '                 02330000
mtst_version         DS    X       Version of mapping                   02340000
mtst_flg1            DS    B       Flag byte 1                          02350000
mtst_flg2            DS    B       Flag byte 2                          02360000
                     DS    XL3     Reserved                             02370000
mtst_schnp           DS    A       Socket chain element addr            02380000
mtst_tctp            DS    A       IAZHTCT control block addr           02390000
mtst_tsctp           DS    A       IAZHTSCT control block addr          02400000
mtst_resptr          DS    A       Pointer to a linked list of one or  C02410000
                                   more addrinfo structures returned   C02420000
                                   by getaddrinfo()                     02430000
mtst_tcp_clid        DS    XL40    Client id of the TCP main task       02440000
mtst_stk_clid        DS    XL40    Client id of the sub task            02450000
mtst_stk_tcb         DS    A       TCB address of the subtask           02460000
mtst_tcbtoken        DS    XL16    TCB token of the socket subtask      02470000
mtst_mtk_gsck_ecb    DS    F       ECB that main task posts after      C02480000
                                   givesocke                            02490000
mtstclsk             DS    F       Client socket for inbound requests   02500000
mtststkn             DS    F       SockToken returned by givesocket()  C02510000
                                   call                                 02520000
mtst_stk_atch_ecb    DS    F       ECB to be posted when the subtask   C02530000
                                   terminates                           02540000
mtst_connect_ecb     DS    F       ECB to be posted after Asynchronous C02550000
                                   I/O processed the connect() request  02560000
mtst_send_ecb        DS    F       ECB to be posted after Asynchronous C02570000
                                   I/O processed the send() request     02580000
mtst_recv_ecb        DS    F       ECB to be posted after Asynchronous C02590000
                                   I/O processed the recv() request     02600000
mtst_dup_conn_ecb    DS    F       ECB to be posted when this subtask  C02610000
                                   is a duplicate of another outbound  C02620000
                                   connection subtask and this         C02630000
                                   subtask needs to prove otherwise    C02640000
                                   to survive                           02650000
mtst_stsk_goaway_ecb DS    F       ECB to be posted when this subtask  C02660000
                                   needs to be terminated               02670000
mtst_sck_area_len    DS    F       Len of Sockaddr area for inbound    C02680000
                                   requests                             02690000
mtst_sck_area        DS    XL28    Sockaddr area for inbound requests   02700000
mtst_init_stimer_id  DS    F       STIMER id for socket initialization  02710000
MTSTLEN              EQU    *-MTST                           @OA49163*/ 99999999
