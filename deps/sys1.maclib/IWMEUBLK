*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWMEUBLK                              -05/06/14-<1> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Work Request Unblock                          * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5694-A01 (C) COPYRIGHT IBM CORP. 2003, 2006                     * 00001200
*                                                                     * 00001300
* STATUS= HBB7730                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The IWMEUBLK service allows work managers that participate in  * 00002100
*      cross platform Enterprise Workload Management (EWLM) to        * 00002200
*      indicate that processing of a work request is no longer        * 00002300
*      blocked.                                                       * 00002400
*                                                                     * 00002500
*      The counterpart of this service to indicate that the           * 00002600
*      processing of a work request is blocked while waiting for a    * 00002700
*      work request in another application to complete is IWMEBLK.    * 00002800
*                                                                     * 00002900
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00003000
*                                                                     * 00003100
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00003200
*                                                                     * 00003300
*01* ENVIRONMENT:                                                     * 00003400
*                                                                     * 00003500
*                                                                     * 00003600
*      Minimum authorization: Supervisor state or program key mask    * 00003700
*                        (PKM) allowing keys 0-7.                     * 00003800
*                                                                     * 00003900
*      Dispatchable unit mode: Task or SRB mode.                      * 00004000
*                                                                     * 00004100
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00004200
*                                                                     * 00004300
*      AMODE:            31- or 64-bit.  If in 64-Bit addressing      * 00004400
*                        mode, code SYSSTATE AMODE64=YES before       * 00004500
*                        invoking this macro.                         * 00004600
*                                                                     * 00004700
*      ASC mode:         Primary or Access Register.                  * 00004800
*                                                                     * 00004900
*      Interrupt status: Enabled for I/O and external interrupts.     * 00005000
*                                                                     * 00005100
*      Locks:            No locks held.                               * 00005200
*                                                                     * 00005300
*      Control parameters: Control parameters must be in the primary  * 00005400
*                        address space.                               * 00005500
*                                                                     * 00005600
*                                                                     * 00005700
*                                                                     * 00005800
*01* PROGRAMMING REQUIREMENTS:                                        * 00005900
*                                                                     * 00006000
*                                                                     * 00006100
*    1.  The macro CVT must be included to use this macro.            * 00006200
*                                                                     * 00006300
*    2.  The macro IWMYCON must be included to use this macro.        * 00006400
*                                                                     * 00006500
*    3.  The macro IWMPB must be in the library concatenation, since  * 00006600
*        it is included by IWMYCON.                                   * 00006700
*                                                                     * 00006800
*    4.  Note that the high order halfword of 31-BIT register 0, and  * 00006900
*        the reason code variable when specified, may be non-zero and * 00007000
*        represents diagnostic data which is NOT part of the external * 00007100
*        interface.  The high order halfword should thus be excluded  * 00007200
*        from comparison with the reason code values described above. * 00007300
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00007400
*        be used for this purpose.                                    * 00007500
*                                                                     * 00007600
*    5.  All character data, unless otherwise specified, is assumed   * 00007700
*        to be left justified and padded with blanks on the right, as * 00007800
*        needed, to occupy the specified number of bytes.             * 00007900
*                                                                     * 00008000
*    6.  Since this service may only be used by system-like code,     * 00008100
*        some validity checking on the parameter list is not          * 00008200
*        performed. These checks would only be needed if the macro    * 00008300
*        were not used to invoke the service routine.                 * 00008400
*                                                                     * 00008500
*    7.  If the parameter EWLMMODE=EXPLICIT_SINGLE is specified, some * 00008600
*        restrictions apply:                                          * 00008700
*                                                                     * 00008800
*                                                                     * 00008900
*        o   No other task or SRB is allowed to issue other enclave   * 00009000
*            services for the SAME ENCLAVE concurrently.              * 00009100
*                                                                     * 00009200
*        o   The caller must be in primary ASC mode before            * 00009300
*            invocation.                                              * 00009400
*                                                                     * 00009500
*        o   The parameter list, the classification parameters and    * 00009600
*            the savearea pointed to by GPR13 must be addressable in  * 00009700
*            AMODE 31 and primary ASC mode.                           * 00009800
*                                                                     * 00009900
*        o   No recovery environment is set up by the service. The    * 00010000
*            caller is responsible to provide an appropriate error    * 00010100
*            recovery environment to handle abnormal terminations.    * 00010200
*                                                                     * 00010300
*        o   The enclave must have been created with option           * 00010400
*            ESTRT=EXPLICIT_SINGLE on the IWM4ECRE (or IWMECREA)      * 00010500
*            invocation.                                              * 00010600
*                                                                     * 00010700
*        o   The caller must provide the ETOKEN parameter.            * 00010800
*                                                                     * 00010900
*                                                                     * 00011000
*                                                                     * 00011100
*                                                                     * 00011200
*                                                                     * 00011300
*01* RESTRICTIONS:                                                    * 00011400
*                                                                     * 00011500
*                                                                     * 00011600
*    1.  This macro may not be used prior to the completion of WLM    * 00011700
*        address space initialization.                                * 00011800
*                                                                     * 00011900
*    2.  This macro may only be used on MVS/ESA HBB7708 or higher.    * 00012000
*                                                                     * 00012100
*                                                                     * 00012200
*                                                                     * 00012300
*01* INPUT REGISTER INFORMATION:                                      * 00012400
*                                                                     * 00012500
*    If the EWLMMODE=EXPLICIT_SINGLE is specified, the caller must    * 00012600
*    provide a standard 72-Byte savearea pointed to by R13.           * 00012700
*                                                                     * 00012800
*    For all other cases the caller does not have to place any        * 00012900
*    information into any register unless using it in register        * 00013000
*    notation for a particular parameter, or using it as a base       * 00013100
*    register.                                                        * 00013200
*                                                                     * 00013300
*01* OUTPUT REGISTER INFORMATION:                                     * 00013400
*                                                                     * 00013500
*    When control returns to the caller, the GPRs contain:            * 00013600
*                                                                     * 00013700
*                                                                     * 00013800
*    REGISTER  CONTENTS                                               * 00013900
*                                                                     * 00014000
*    0         Reason code if GR15 return code is non-zero            * 00014100
*                                                                     * 00014200
*    1         Used as work registers by the system                   * 00014300
*                                                                     * 00014400
*    2-13      Unchanged                                              * 00014500
*                                                                     * 00014600
*    14        Used as work registers by the system                   * 00014700
*                                                                     * 00014800
*    15        Return code                                            * 00014900
*                                                                     * 00015000
*                                                                     * 00015100
*                                                                     * 00015200
*    When control returns to the caller, the ARs contain:             * 00015300
*                                                                     * 00015400
*                                                                     * 00015500
*    REGISTER  CONTENTS                                               * 00015600
*                                                                     * 00015700
*    0-1       Used as work registers by the system                   * 00015800
*                                                                     * 00015900
*    2-13      Unchanged                                              * 00016000
*                                                                     * 00016100
*    14-15     Used as work registers by the system                   * 00016200
*                                                                     * 00016300
*                                                                     * 00016400
*                                                                     * 00016500
*    Some callers depend on register contents remaining the same      * 00016600
*    before and after issuing a service.  If the system changes the   * 00016700
*    contents of registers on which the caller depends, the caller    * 00016800
*    must save them before issuing the service, and restore them      * 00016900
*    after the system returns control.                                * 00017000
*                                                                     * 00017100
*01* PERFORMANCE IMPLICATIONS:                                        * 00017200
*                                                                     * 00017300
*    None                                                             * 00017400
*                                                                     * 00017500
*01* SYNTAX:                                                          * 00017600
*                                                                     * 00017700
*Ýxlabel¨  IWMEUBLK     WORKREQ_HDL=xworkreq_hdl                      * 00017800
*                      ,BLOCK_HDL=xblock_hdl                          * 00017900
*                     Ý,EWLMMODE=»NORMAL!EXPLICIT_SINGLEº¨            * 00018000
*                     Ý,ETOKEN=»xetoken!NO_ETOKENº¨                   * 00018100
*                     Ý,RETCODE=xretcode¨                             * 00018200
*                     Ý,RSNCODE=xrsncode¨                             * 00018300
*                     Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨         * 00018400
*                    ÐÝ,MF=S¨                                         * 00018500
*                    ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                  * 00018600
*                    ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                    * 00018700
*                                                                     * 00018800
*                                                                     * 00018900
*      Where:                                                         * 00019000
*                                                                     * 00019100
*                                                                     * 00019200
*      Ýxlabel¨                                                       * 00019300
*          is an optional symbol, starting in column 1, that is the   * 00019400
*          name on the IWMEUBLK macro invocation.  The name must      * 00019500
*          conform to the rules for an ordinary assembler language    * 00019600
*          symbol.                                                    * 00019700
*          DEFAULT: No name.                                          * 00019800
*                                                                     * 00019900
*                                                                     * 00020000
*                                                                     * 00020100
*                                                                     * 00020200
*      WORKREQ_HDL=xworkreq_hdl                                       * 00020300
*          is the name (RS-type), or address in register (2)-(12), of * 00020400
*          a required 8 character input that contains the handle      * 00020500
*          which represents the work request. This handle was         * 00020600
*          returned from a previous call to IWMESTRT or IWMECREA.     * 00020700
*                                                                     * 00020800
*                                                                     * 00020900
*                                                                     * 00021000
*                                                                     * 00021100
*      BLOCK_HDL=xblock_hdl                                           * 00021200
*          is the name (RS-type), or address in register (2)-(12), of * 00021300
*          a required 8 character input that contains the handle      * 00021400
*          identifying the blocked work request. This handle was      * 00021500
*          returned from a previous call to IWMEBLK.                  * 00021600
*                                                                     * 00021700
*                                                                     * 00021800
*                                                                     * 00021900
*                                                                     * 00022000
*      ÝEWLMMODE=»NORMAL!EXPLICIT_SINGLEº¨                            * 00022100
*          is an optional keyword input that indicates, if the        * 00022200
*          parameter EXPLICIT_SINGLE has been specified on the        * 00022300
*          IWM4ECRE(or IWMECREA) call. The EWLMMODE parameter has to  * 00022400
*          be omitted (or the default value NORMAL must be            * 00022500
*          specified), if the enclave was not created with the        * 00022600
*          ESTRT=EXPLICIT_SINGLE option and vice versa. Otherwise the * 00022700
*          results may be unpredictable.                              * 00022800
*          DEFAULT: NORMAL                                            * 00022900
*                                                                     * 00023000
*                                                                     * 00023100
*          EWLMMODE=NORMAL                                            * 00023200
*              indicates that the enclave was created with the        * 00023300
*              ESTRT=EXPLICIT or ESTRT=IMPLIED option.                * 00023400
*                                                                     * 00023500
*          EWLMMODE=EXPLICIT_SINGLE                                   * 00023600
*              indicates that the enclave was created with the        * 00023700
*              ESTRT=EXPLICIT_SINGLE option which can only be used    * 00023800
*              for a restricted environment.  The caller must also    * 00023900
*              provide a standard 72-Byte savearea (addressable in    * 00024000
*              AMODE 31) pointed to by GPR13. Moreover the parameter  * 00024100
*              list and the classification parameters must also be    * 00024200
*              adressable in AMODE 31.                                * 00024300
*                                                                     * 00024400
*                                                                     * 00024500
*                                                                     * 00024600
*                                                                     * 00024700
*                                                                     * 00024800
*                                                                     * 00024900
*      ÝETOKEN=»xetoken!NO_ETOKENº¨                                   * 00025000
*          is the name (RS-type), or address in register (2)-(12), of * 00025100
*          an optional 8 character input that contains the enclave    * 00025200
*          token of the enclave under which the work request is       * 00025300
*          processed.  The parameter ETOKEN is required, when option  * 00025400
*          EWLMMODE=EXPLICIT_SINGLE is specified.                     * 00025500
*          DEFAULT: NO_ETOKEN indicates that no ETOKEN is passed.     * 00025600
*                                                                     * 00025700
*                                                                     * 00025800
*                                                                     * 00025900
*                                                                     * 00026000
*      ÝRETCODE=xretcode¨                                             * 00026100
*          is the name (RS-type) of an optional fullword output       * 00026200
*          variable, or register (2)-(12), into which the return code * 00026300
*          is to be copied from GPR 15.                               * 00026400
*                                                                     * 00026500
*                                                                     * 00026600
*                                                                     * 00026700
*                                                                     * 00026800
*      ÝRSNCODE=xrsncode¨                                             * 00026900
*          is the name (RS-type) of an optional fullword output       * 00027000
*          variable, or register (2)-(12), into which the reason code * 00027100
*          is to be copied from GPR 0.                                * 00027200
*                                                                     * 00027300
*                                                                     * 00027400
*                                                                     * 00027500
*                                                                     * 00027600
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00027700
*          is an optional byte input decimal value in the "0-1" range * 00027800
*          that specifies the macro version.  PLISTVER is the only    * 00027900
*          key allowed on the list form of MF and determines which    * 00028000
*          parameter list is generated.  The macro keys associated    * 00028100
*          with each supported version of the macro are listed in     * 00028200
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 00028300
*          instead of a number, and the parameter list will be of the * 00028400
*          largest size currently supported. This size may grow from  * 00028500
*          release to release (thus possibly affecting the amount of  * 00028600
*          storage needed by your program).  If your program can      * 00028700
*          tolerate this, IBM recommends that you always specify MAX  * 00028800
*          when creating the list form parameter list as that will    * 00028900
*          ensure that the list form parameter list is always long    * 00029000
*          enough to hold whatever parameters might be specified on   * 00029100
*          the execute form.                                          * 00029200
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00029300
*          default is the lowest version which allows all of the      * 00029400
*          parameters specified on the invocation to be processed.    * 00029500
*                                                                     * 00029600
*                                                                     * 00029700
*                                                                     * 00029800
*                                                                     * 00029900
*      ÝMF=»S!L!Eº¨                                                   * 00030000
*          is an optional keyword input which specifies the macro     * 00030100
*          form.                                                      * 00030200
*          DEFAULT: S                                                 * 00030300
*                                                                     * 00030400
*                                                                     * 00030500
*          ÝMF=S¨                                                     * 00030600
*              specifies the standard form of the macro.  The "S"     * 00030700
*              form generates code to put the parameters into an      * 00030800
*              in-line parameter list and invoke the desired service. * 00030900
*              Full checking for required macro keys is done along    * 00031000
*              with supplying defaults for omitted optional           * 00031100
*              parameters.                                            * 00031200
*                                                                     * 00031300
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00031400
*              specifies the list form of the macro.  The "L" form    * 00031500
*              defines an area to be used for the parameter list.     * 00031600
*              Only the PLISTVER key may be specified on the          * 00031700
*              invocation.  All other macro parameters are flagged as * 00031800
*              errors.  If PLISTVER is not specified, the original    * 00031900
*              parameter list definition is used.                     * 00032000
*                                                                     * 00032100
*            ,xmfctrl                                                 * 00032200
*              is a required input.  It is the name of a storage area * 00032300
*              for the parameter list.                                * 00032400
*                                                                     * 00032500
*            »,xmfattr!0Dº                                            * 00032600
*              is an optional 60 character input string that varies   * 00032700
*              from 1 to 60 characters. Use it to force boundary      * 00032800
*              alignment of the parameter list. Use only 0F or 0D.    * 00032900
*              DEFAULT: 0D which forces the parameter list to a       * 00033000
*              doubleword boundary.                                   * 00033100
*                                                                     * 00033200
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00033300
*              specifies the execute form of the macro.  The "E" form * 00033400
*              generates code to put the parameters into the          * 00033500
*              parameter list specified by xmfctrl and provides full  * 00033600
*              syntax checking with default setting.                  * 00033700
*                                                                     * 00033800
*            ,xmfctrl                                                 * 00033900
*              is a required input.  It is the name (RS-type), or     * 00034000
*              address in register (1)-(12), of a storage area for    * 00034100
*              the parameter list.                                    * 00034200
*                                                                     * 00034300
*            »,COMPLETEº                                              * 00034400
*              is an optional keyword input which specifies the       * 00034500
*              degree of macro parameter syntax checking.             * 00034600
*              DEFAULT: COMPLETE                                      * 00034700
*                                                                     * 00034800
*                                                                     * 00034900
*              COMPLETE                                               * 00035000
*                  Checking for required macro keys is done and       * 00035100
*                  defaults are supplied for omitted optional         * 00035200
*                  parameters.                                        * 00035300
*                                                                     * 00035400
*                                                                     * 00035500
*                                                                     * 00035600
*                                                                     * 00035700
*                                                                     * 00035800
*                                                                     * 00035900
*                                                                     * 00036000
*01* ABEND CODES:  None.                                              * 00036100
*                                                                     * 00036200
*01* RETURN CODES:                                                    * 00036300
*                                                                     * 00036400
*                                                                     * 00036500
*            0    Name: IwmRetCodeOk                                  * 00036600
*                                                                     * 00036700
*                 Meaning: Successful completion.                     * 00036800
*                                                                     * 00036900
*                 Action: None required.                              * 00037000
*                                                                     * 00037100
*                                                                     * 00037200
*            8    Name: IwmRetCodeInvocError                          * 00037300
*                                                                     * 00037400
*                 Meaning: Invalid invocation environment or          * 00037500
*                 parameters.                                         * 00037600
*                                                                     * 00037700
*                                                                     * 00037800
*                                                                     * 00037900
*                 HEX REASON  MEANING/ACTION                          * 00038000
*                 CODE                                                * 00038100
*                                                                     * 00038200
*                 xxxx0803    Name: IwmRsnCodeDisabled                * 00038300
*                                                                     * 00038400
*                             Meaning: Caller is disabled.            * 00038500
*                                                                     * 00038600
*                             Action: Avoid requesting this function  * 00038700
*                             while disabled.                         * 00038800
*                                                                     * 00038900
*                 xxxx0804    Name: IwmRsnCodeLocked                  * 00039000
*                                                                     * 00039100
*                             Meaning: Caller is locked.              * 00039200
*                                                                     * 00039300
*                             Action: Avoid requesting this function  * 00039400
*                             while locked.                           * 00039500
*                                                                     * 00039600
*                 xxxx080B    Name: IwmRsnCodeBadPl                   * 00039700
*                                                                     * 00039800
*                             Meaning: Error accessing parameter      * 00039900
*                             list.                                   * 00040000
*                                                                     * 00040100
*                             Action: Check for possible storage      * 00040200
*                             overlay.                                * 00040300
*                                                                     * 00040400
*                 xxxx0824    Name: IwmRsnCodeAmode24                 * 00040500
*                                                                     * 00040600
*                             Meaning: Caller invoked service but was * 00040700
*                             in 24 bit addressing mode.              * 00040800
*                                                                     * 00040900
*                             Action: Request this function only when * 00041000
*                             you are in 31 bit addressing mode.      * 00041100
*                                                                     * 00041200
*                 xxxx0828    Name: IwmRsnCodeBadVersion              * 00041300
*                                                                     * 00041400
*                             Meaning: Version number in parameter    * 00041500
*                             list is not valid.                      * 00041600
*                                                                     * 00041700
*                             Action: Check for possible storage      * 00041800
*                             overlay of the parameter list.          * 00041900
*                                                                     * 00042000
*                 xxxx083A    Name: IwmRsnCodeBadEnclave              * 00042100
*                                                                     * 00042200
*                             Meaning: EWLMMODE=EXPLICIT_SINGLE was   * 00042300
*                             specified and the required Enclave      * 00042400
*                             token did not pass verification.        * 00042500
*                                                                     * 00042600
*                             Action: Check for possible storage      * 00042700
*                             overlay of the enclave token, or        * 00042800
*                             asynchronous events which may have      * 00042900
*                             deleted the enclave.                    * 00043000
*                                                                     * 00043100
*                 xxxx0895    Name: IwmRsnCodeEWLMServNotEnabled      * 00043200
*                                                                     * 00043300
*                             Meaning: Service is not enabled because * 00043400
*                             caller invoked the IWMCONN service with * 00043500
*                             EWLM=NO.                                * 00043600
*                                                                     * 00043700
*                             Action: Ensure that EWLM=YES is         * 00043800
*                             specified on the IWMCONN request to     * 00043900
*                             enable this service.                    * 00044000
*                                                                     * 00044100
*                 xxxx0896    Name: IwmRsnCodeBadWorkReqHandle        * 00044200
*                                                                     * 00044300
*                             Meaning: Work request handle is         * 00044400
*                             invalid.                                * 00044500
*                                                                     * 00044600
*                             Action: Check the specification of the  * 00044700
*                             WORKREQ_HDL parameter.                  * 00044800
*                                                                     * 00044900
*                 xxxx0898    Name: IwmRsnCodeBadBlockHandle          * 00045000
*                                                                     * 00045100
*                             Meaning: Block handle is invalid.       * 00045200
*                                                                     * 00045300
*                             Action: Check the specification of the  * 00045400
*                             BLOCK_HDL parameter.                    * 00045500
*                                                                     * 00045600
*                 xxxx08A0    Name: IwmRsnCodeNotExplicitSingle       * 00045700
*                                                                     * 00045800
*                             Meaning: The service has been invoked   * 00045900
*                             with option EWLMMODE=EXPLICIT_SINGLE,   * 00046000
*                             but the enclave has not been created    * 00046100
*                             with the ESTRT=EXPLICIT_SINGLE option   * 00046200
*                             or vice versa.                          * 00046300
*                                                                     * 00046400
*                             Action: If ESTRT=EXPLICIT_SINGLE was    * 00046500
*                             coded on the IWM4ECRE or IWMECREA call, * 00046600
*                             EWLMMODE=EXPLICIT_SINGLE must also      * 00046700
*                             specified on the IWMEUBLK call.         * 00046800
*                             If ESTRT=EXPLICIT OR ESTRT=IMPLIED was  * 00046900
*                             coded on the IWM4ECRE or IWMECREA call, * 00047000
*                             EWLMMODE=NORMAL must be specified on    * 00047100
*                             the IWMEUBLK call (or the EWLMMODE      * 00047200
*                             parameter can be omitted).              * 00047300
*                                                                     * 00047400
*                                                                     * 00047500
*                                                                     * 00047600
*                                                                     * 00047700
*            10   Name: IwmRetCodeCompError                           * 00047800
*                                                                     * 00047900
*                 Meaning: Component error.                           * 00048000
*                                                                     * 00048100
*                 Action: No action required. The function may be     * 00048200
*                 successful if invoked again.                        * 00048300
*                                                                     * 00048400
*                                                                     * 00048500
*                                                                     * 00048600
*                                                                     * 00048700
*01* REASON CODES:                                                    * 00048800
*                                                                     * 00048900
*       A unique reason code will be returned whenever the return     * 00049000
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00049100
*       under their corresponding return code.  Reason code and       * 00049200
*       return code constants are defined within IWMYCON.  Note that  * 00049300
*       the high order halfword of 31-BIT register 0, and the reason  * 00049400
*       code variable when specified, may be non-zero and represents  * 00049500
*       diagnostic data which is NOT part of the external interface.  * 00049600
*       The high order halfword should thus be excluded from          * 00049700
*       comparison with the reason code values described above.  The  * 00049800
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00049900
*       used for this purpose.                                        * 00050000
*                                                                     * 00050100
*01* MODULE TYPE:  ASSEM MACRO                                        * 00050200
*                                                                     * 00050300
*02*   PROCESSOR:  ASSEM                                              * 00050400
*                                                                     * 00050500
*01* COMPONENT:  SCWLM                                                * 00050600
*                                                                     * 00050700
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00050800
*                                                                     * 00050900
*01* EXAMPLES:                                                        * 00051000
*                                                                     * 00051100
*               IWMEUBLK WORKREQ_HDL=WRHANDLE,                        * 00051200
*                        BLOCK_HDL=BKHANDLE                           * 00051300
*      *                                                              * 00051400
*      * Storage areas                                                * 00051500
*      *                                                              * 00051600
*      WRHANDLE DS    CL8             Work Request Handle             * 00051700
*      BKHANDLE DS    CL8             Work Request Block Handle       * 00051800
*                                                                     * 00051900
*                                                                     * 00052000
*01* MACRO USAGE NOTES:                                               * 00052100
*                                                                     * 00052200
*                                                                     * 00052300
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00052400
*        global macro variable.  Any value other than 'NO' will       * 00052500
*        result in the macro expansion being printed.  The default is * 00052600
*        'YES'.  The following examples illustrate how the ZPRINT     * 00052700
*        variable should be set.                                      * 00052800
*                                                                     * 00052900
*                    GBLC &ZPRINT                                     * 00053000
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00053100
*                                                                     * 00053200
*                                                                     * 00053300
*    2.  The IWMEUBLK macro supports multiple versions. The macro key * 00053400
*        list  below  contains the version level in which the key was * 00053500
*        first  introduced.  Positionals  are  identified by the word * 00053600
*        'Positional'  followed by the numeric value of its position. * 00053700
*        Nested  positionals  are  preceded  by their outer key.  The * 00053800
*        lowest value represents the original version and the highest * 00053900
*        value  represents  the  most  recent version of the IWMEUBLK * 00054000
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00054100
*        least  as high as the highest version number of all the keys * 00054200
*        being used.                                                  * 00054300
*                                                                     * 00054400
*        VERSION   KEY                                                * 00054500
*                                                                     * 00054600
*              0      BLOCK_HDL                                       * 00054700
*                     WORKREQ_HDL                                     * 00054800
*              1      ETOKEN                                          * 00054900
*                     EWLMMODE                                        * 00055000
*                                                                     * 00055100
*                                                                     * 00055200
*                                                                     * 00055300
*01* CHANGE ACTIVITY:                                                 * 00055400
*                                                                     * 00055500
*   Flag LineItem  FMID    Date   ID    Comment                       * 00055600
*                                                                     * 00055700
*    $L0=WLMPELM  HBB7708 020909 3241SW:  Enterprise Workload         * 00055800
*                                         Management (EWLM) support   * 00055900
*    $L1=PYN0804  HBB7708 021210 3241SW:  Corrected description       * 00056000
*    $L2=ME01430  HBB7709 040923 3241SW:  Added reason codes to       * 00056100
*                                         replace xxxRRRR reason code * 00056200
*    $L3=WLMPERS  HBB7709 041220 3241MB:  64-Bit Support.             * 00056300
*    $L4=WLMPEFP  HBB7709 050614 3241GB:  EWLM Enclave Services       * 00056400
*                                         Fastpath (EWLMMODE).        * 00056500
*    $P1=BLDCHKE  HBB7730 050919 3241BH:  No code change. ToolReq     * 00056600
*                                         5983 -                      * 00056700
*                                         B390.HBB7730.DRIVER5A.OC    * 00056800
*                                         OCHKE fixes.                * 00056900
*    $P1=ME04992  HBB7730 051102 3241GB:  Correct CVTH7709 check in   * 00057000
*                                         ASM code                    * 00057100
****** END OF SPECIFICATIONS *****************************************/ 00057200
*/********************************************************************* 00057300
         MACRO                                                          00057400
&XLABEL  IWMEUBLK &WORKREQ_HDL=,&BLOCK_HDL=,&EWLMMODE=,&ETOKEN=,       *00057500
               &RETCODE=,&RSNCODE=,&PLISTVER=,&MF=                      00057600
.*                                                                      00057700
*                     MACDATE -05/06/14-<1>                             00057800
.*                                                                      00057900
.*******************************************************************    00058000
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00058100
.*******************************************************************    00058200
                     GBLC  &ZPRINT     YES=PRINT NO=NO PRINT            00058300
                     GBLC  &ZTEST      YES=TEST NO=NO TEST              00058400
                     GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX      00058500
.*                                                                      00058600
                     GBLC  &ZIWMEUBLK  YES=MACRO USED AT LEAST ONCE     00058700
.*******************************************************************    00058800
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00058900
.*******************************************************************    00059000
                     LCLC  &ZMS        ERROR MESSAGE WORK AREA          00059100
                     LCLC  &ZCNDX      SYSNDX CHARACTERS                00059200
                     LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED       00059300
                     LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR      00059400
                     LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE      00059500
                     LCLA  &ZAWRK      USED AS A WORK AREA              00059600
                     LCLA  &ZASIZ      USED FOR SIZE OF VALUE           00059700
                     LCLA  &ZN         NUMERIC WORK VARIABLE            00059800
                     LCLC  &ZC         CHARACTER WORK VARIABLE          00059900
                     LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE      00060000
                     LCLA  &ZTLA       VALUE TOO LONG VARIABLE          00060100
                     LCLC  &ZMAC_G     "G" or null                      00060200
&ZMAC_G              SETC  ''                                           00060300
                     LCLC  &ZMAC_LR                                     00060400
&ZMAC_LR             SETC  'LR'                                         00060500
                     LCLC  &ZMAC_L                                      00060600
&ZMAC_L              SETC  'L'                                          00060700
                     LCLC  &ZMAC_ST                                     00060800
&ZMAC_ST             SETC  'ST'                                         00060900
                     LCLA  &ZMACRET    MACRO RETURN CODE                00061000
&ZMACRET             SETA  0           ASSUME NO ERRORS                 00061100
.*                                                                      00061200
                     LCLC  &ZCSYSLIST(255)      NONXKEY, POS ARRAY      00061300
                     LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()       00061400
                     LCLA  &ZPLLEN     PARAMETER LIST LENGTH            00061500
                     LCLC  &ZENDBASEPL          End of base PL          00061600
                     LCLA  &ZPLWORKA   PARAMETER LIST LENGTH            00061700
.*******************************************************************    00061800
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00061900
.*******************************************************************    00062000
                     LCLA  &ZI         INDEX FOR ARRAY                  00062100
                     LCLA  &ZJ         INDEX FOR PARMS                  00062200
                     LCLA  &ZK         INDEX FOR PARSE                  00062300
                     LCLA  &ZLO        LOW RANGE VALUE                  00062400
                     LCLA  &ZHI        HIGH RANGE VALUE                 00062500
                     LCLC  &ZW         WORK AREA FOR PARM               00062600
.********************************************************************   00062700
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00062800
.********************************************************************   00062900
                     GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL          00063000
                     GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE   00063100
                     GBLA  &SYSALVL    SYSSTATE ARCHLVL                 00063200
                     GBLC  &SYSAM64    SYSSTATE AMODE64                 00063300
.*                                                                      00063400
                     AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED   00063500
                     AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED    00063600
                     SPLEVEL  TEST                                      00063700
.ZSYS2               ANOP  ,                                            00063800
                     AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1        00063900
                     AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1        00064000
                     SYSSTATE TEST                                      00064100
                     AIF   (&SYSALVL LE 1).ZSYS4                        00064200
&ZMAC_G              SETC 'G'                                           00064300
&ZMAC_LR             SETC 'LGR'                                         00064400
&ZMAC_L              SETC 'LG'                                          00064500
&ZMAC_ST             SETC 'STG'                                         00064600
                     AGO   .ZSYS4                                       00064700
.ZSYS3               ANOP  ,                                            00064800
&SYSASCE             SETC  'P'         ASSUME SYSSTATE PRIMARY          00064900
.ZSYS4               ANOP  ,                                            00065000
.*******************************************************************    00065100
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00065200
.*******************************************************************    00065300
                     LCLC  &XWORKREQ_HDL        ++ NAME                 00065400
                     LCLC  &XBLOCK_HDL          ++ NAME                 00065500
                     LCLC  &XEWLMMODE  ++ VALUE                         00065600
                     LCLC  &XETOKEN    ++ NAME                          00065700
                     LCLC  &XRETCODE   ++ NAME                          00065800
                     LCLC  &XRSNCODE   ++ NAME                          00065900
                     LCLA  &XPLISTVER  ++ VALUE                         00066000
                     LCLC  &XMF        ++ VALUE                         00066100
                     LCLC  &XMFCTRL    ++ NAME                          00066200
                     LCLC  &XMFATTR    ++ VALUE                         00066300
                     LCLC  &XMFSCK     ++ VALUE                         00066400
.*******************************************************************    00066500
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00066600
.*******************************************************************    00066700
                     LCLC  &ZXWORKREQ_HDL       ++ INPUT NAME           00066800
                     LCLC  &ZXBLOCK_HDL         ++ INPUT NAME           00066900
                     LCLC  &ZXEWLMMODE          ++ INPUT VALUE          00067000
                     LCLC  &ZXETOKEN   ++ INPUT NAME                    00067100
                     LCLC  &ZXRETCODE  ++ OUTPUT NAME                   00067200
                     LCLC  &ZXRSNCODE  ++ OUTPUT NAME                   00067300
                     LCLC  &ZXPLISTVER          ++ INPUT VALUE          00067400
                     LCLC  &ZXMF       ++ INPUT VALUE                   00067500
                     LCLC  &ZXMFCTRL   ++ INPUT NAME                    00067600
                     LCLC  &ZXMFATTR   ++ INPUT VALUE                   00067700
                     LCLC  &ZXMFSCK    ++ INPUT VALUE                   00067800
.********************************************************************   00067900
.***AC.PLV01  PROCESS PLISTVER                                      *   00068000
.********************************************************************   00068100
&XPLISTVER      SETA  0                                                 00068200
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00068300
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00068400
&XPLISTVER      SETA  1                                                 00068500
.ZPLV0          ANOP  ,                                                 00068600
.*                                                                      00068700
                AIF   ('&EWLMMODE' EQ '').ZPLV1E                        00068800
                AIF   (&XPLISTVER GE 1).ZPLV1E                          00068900
&XPLISTVER      SETA  1                                                 00069000
.ZPLV1E         ANOP  ,                                                 00069100
.*                                                                      00069200
                AIF   ('&ETOKEN' EQ '').ZPLV2E                          00069300
                AIF   (&XPLISTVER GE 1).ZPLV2E                          00069400
&XPLISTVER      SETA  1                                                 00069500
.ZPLV2E         ANOP  ,                                                 00069600
.*                                                                      00069700
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00069800
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00069900
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00070000
.*-------------------------------------------------------------------   00070100
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00070200
&ZMS            SETC  '"PLISTVER='                                      00070300
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00070400
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00070500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00070600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00070700
                AGO   .ZPVCK2                                           00070800
.ZPVCK3         ANOP  ,                                                 00070900
.*-------------------------------------------------------------------   00071000
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00071100
&ZMS            SETC  '"PLISTVER='                                      00071200
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00071300
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00071400
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00071500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00071600
                AGO   .ZPVCKE                                           00071700
.ZPVCK2         ANOP  ,                                                 00071800
.*-------------------------------------------------------------------   00071900
&ZCVAL          SETC  '&PLISTVER(1)'                                    00072000
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00072100
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00072200
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00072300
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00072400
                AIF   (&ZN LE 1).ZPVCK4A   NOT HIGH                     00072500
.ZPVCK6         ANOP  ,                                                 00072600
&ZMS            SETC  '"PLISTVER='                                      00072700
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00072800
&ZMS            SETC  '&ZMS THE RANGE IS "0-1"'                         00072900
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00073000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00073100
&XPLISTVER      SETA  1                                                 00073200
                AGO   .ZPVCKE                                           00073300
.*-------------------------------------------------------------------   00073400
.ZPVCK4A        ANOP  ,                                                 00073500
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00073600
&ZMS            SETC  'PLISTVER='                                       00073700
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00073800
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00073900
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00074000
                MNOTE 8,' &ZMS IS REQUIRED.'                            00074100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00074200
                AGO   .ZPVCK5                                           00074300
.ZPVCK4         ANOP  ,                                                 00074400
&XPLISTVER      SETA  &PLISTVER(1)                                      00074500
.ZPVCK5         ANOP  ,                                                 00074600
.ZPVCKE         ANOP  ,                                                 00074700
.********************************************************************   00074800
.***AG.MF01 PROCESS MF MACRO FORMS                                      00074900
.********************************************************************   00075000
                     ACTR  10000                                        00075100
.*------------------------------------------------------------------    00075200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00075300
&XMF                 SETC  ''          INITIALIZE XVARIABLE             00075400
.*-------------------------------------------------------------------   00075500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00075600
.ZG26                ANOP  ,                                            00075700
&ZTLC                SETC 'S'                                           00075800
                     AIF   ('&MF(1)' NE '&ZTLC').ZG27                   00075900
&XMF                 SETC  'S'         SET KEYWORD                      00076000
                     AIF   (N'&MF LE 1).ZG26A   CK NUM                  00076100
&ZMS                 SETC  '"MF='                                       00076200
&ZMS                 SETC  '&ZMS.&MF"'                                  00076300
&ZMS                 SETC  '&ZMS "MF"'                                  00076400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00076500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00076600
.ZG26A               ANOP  ,                                            00076700
.*-------------------------------------------------------------------   00076800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00076900
.ZG27                ANOP  ,                                            00077000
&ZTLC                SETC 'L'                                           00077100
                     AIF   ('&MF(1)' NE '&ZTLC').ZG34                   00077200
&XMF                 SETC  'L'         SET KEYWORD                      00077300
                     AIF   (N'&MF LE 3).ZG27A   CK NUM                  00077400
&ZMS                 SETC  '"MF='                                       00077500
&ZMS                 SETC  '&ZMS.&MF"'                                  00077600
&ZMS                 SETC  '&ZMS "MF"'                                  00077700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'         00077800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00077900
.ZG27A               ANOP  ,                                            00078000
.*-------------------------------------------------------------------   00078100
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00078200
                     AIF   (N'&SYSLIST NE 0).ZG27B  POSITIONALS?        00078300
                     AIF   ('&WORKREQ_HDL' NE '').ZG27B  KEYS?          00078400
                     AIF   ('&BLOCK_HDL' NE '').ZG27B  KEYS?            00078500
                     AIF   ('&EWLMMODE' NE '').ZG27B  KEYS?             00078600
                     AIF   ('&ETOKEN' NE '').ZG27B  KEYS?               00078700
                     AIF   ('&RETCODE' NE '').ZG27B  KEYS?              00078800
                     AIF   ('&RSNCODE' NE '').ZG27B  KEYS?              00078900
                     AGO    .ZG27C     INVOCATION OKAY                  00079000
.ZG27B               ANOP  ,                                            00079100
&ZMS                 SETC  'THE "L" FORM OF "MF"'                       00079200
&ZMS                 SETC  '&ZMS CAN ONLY HAVE'                         00079300
&ZMS                 SETC  '&ZMS THE "PLISTVER" KEY'                    00079400
                     MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'       00079500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00079600
.ZG27C               ANOP  ,                                            00079700
.*-------------------------------------------------------------------   00079800
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00079900
&ZXMFCTRL            SETC  'INPUT'     SET IN/OUTPUT                    00080000
&XMFCTRL             SETC  '&MF(2,1)'  SET XVARIABLE                    00080100
                     AIF   (N'&MF(2) GT 1).ZG29B  MULTI PARMS           00080200
&XMFCTRL             SETC  '&MF(2)'    SET XVARIABLE                    00080300
.ZG29B               AIF   (K'&MF(2) GT 0).ZG29C                        00080400
&ZXMFCTRL            SETC  ''          RESET IN/OUTPUT                  00080500
&ZMS                 SETC  'WHEN "L" IS SPECIFIED'                      00080600
&ZMS                 SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'          00080700
                     MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                 00080800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00080900
.ZG29C               ANOP  ,                                            00081000
.*-------------------------------------------------------------------   00081100
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00081200
                     AIF   (K'&ZXMFCTRL LE 0).ZG29P  NOT I/O            00081300
                     AIF   ('&XMFCTRL'(1,1) NE '(').ZG29P               00081400
&ZXMFCTRL            SETC  ''          RESET IN/OUTPUT                  00081500
&ZMS                 SETC  '"MF='                                       00081600
&ZMS                 SETC  '&ZMS.&MF"'                                  00081700
&ZMS                 SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'    00081800
                     MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'            00081900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00082000
.ZG29P               ANOP  ,                                            00082100
.*-------------------------------------------------------------------   00082200
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00082300
&ZXMFATTR            SETC  'INPUT'     SET IN/OUTPUT                    00082400
&XMFATTR             SETC  '0D'                                         00082500
                     AIF   (K'&MF(3) LE 0).ZG32B  PARM                  00082600
&XMFATTR             SETC  '&MF(3,1)'  SET XVARIABLE                    00082700
                     AIF   (N'&MF(3) GT 1).ZG32B  MULTI                 00082800
&XMFATTR             SETC  '&MF(3)'    SET XVARIABLE                    00082900
.ZG32B               ANOP  ,                                            00083000
.*-------------------------------------------------------------------   00083100
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00083200
                     AIF   (K'&ZXMFATTR LE 0).ZG32P  NOT I/O            00083300
                     AIF   ('&XMFATTR'(1,1) NE '(').ZG32P               00083400
&ZXMFATTR            SETC  ''          RESET IN/OUTPUT                  00083500
&ZMS                 SETC  '"MF='                                       00083600
&ZMS                 SETC  '&ZMS.&MF"'                                  00083700
&ZMS                 SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'    00083800
                     MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'            00083900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00084000
.ZG32P               ANOP  ,                                            00084100
.*-------------------------------------------------------------------   00084200
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00084300
                     AIF   (K'&ZXMFATTR LE 0).ZG32S  NOT I/O            00084400
                     AIF   (K'&XMFATTR LE 60).ZG32S  LNG OK             00084500
&ZXMFATTR            SETC  ''          RESET IN/OUTPUT                  00084600
&ZMS                 SETC  '"MF='                                       00084700
&ZMS                 SETC  '&ZMS.&MF"'                                  00084800
&ZMS                 SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'        00084900
                     MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'           00085000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00085100
.ZG32S               ANOP  ,                                            00085200
.*-------------------------------------------------------------------   00085300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00085400
.ZG34                ANOP  ,                                            00085500
&ZTLC                SETC 'E'                                           00085600
                     AIF   ('&MF(1)' NE '&ZTLC').ZG42                   00085700
&XMF                 SETC  'E'         SET KEYWORD                      00085800
                     AIF   (N'&MF LE 3).ZG34A   CK NUM                  00085900
&ZMS                 SETC  '"MF='                                       00086000
&ZMS                 SETC  '&ZMS.&MF"'                                  00086100
&ZMS                 SETC  '&ZMS "MF"'                                  00086200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'         00086300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00086400
.ZG34A               ANOP  ,                                            00086500
.*-------------------------------------------------------------------   00086600
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00086700
&ZXMFCTRL            SETC  'INPUT'     SET IN/OUTPUT                    00086800
&XMFCTRL             SETC  '&MF(2,1)'  SET XVARIABLE                    00086900
                     AIF   (N'&MF(2) GT 1).ZG36B  MULTI PARMS           00087000
&XMFCTRL             SETC  '&MF(2)'    SET XVARIABLE                    00087100
.ZG36B               AIF   (K'&MF(2) GT 0).ZG36C                        00087200
&ZXMFCTRL            SETC  ''          RESET IN/OUTPUT                  00087300
&ZMS                 SETC  'WHEN "E" IS SPECIFIED'                      00087400
&ZMS                 SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'          00087500
                     MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                 00087600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00087700
.ZG36C               ANOP  ,                                            00087800
.*-------------------------------------------------------------------   00087900
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00088000
                     AIF   (K'&ZXMFCTRL LE 0).ZG36R  NOT I/O            00088100
                     AIF   ('&XMFCTRL'(1,1) NE '(').ZG36R               00088200
&ZCGPR               SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                   00088300
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG36P                 00088400
                     AIF   (K'&ZCGPR GT 2).ZG36Q                        00088500
                     AIF   ('&ZCGPR' EQ '0').ZG36Q                      00088600
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00088700
                     AIF   (T'&ZCGPR NE 'N').ZG36Q  INVALID REG NAME    00088800
.ZG36P               ANOP  ,                                            00088900
                     AIF   (T'&ZCGPR NE 'N').ZG36R  NON NUMERIC         00089000
                     AIF   ('&ZCGPR' LT '1').ZG36Q                      00089100
                     AIF   ('&ZCGPR' LE '12').ZG36R                     00089200
.ZG36Q               ANOP  ,                                            00089300
&ZMS                 SETC  '"MF='                                       00089400
&ZMS                 SETC  '&ZMS.&MF"'                                  00089500
&ZMS                 SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'    00089600
                     MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'             00089700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00089800
.ZG36R               ANOP  ,                                            00089900
.*-------------------------------------------------------------------   00090000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00090100
&XMFSCK              SETC  ''          INITIALIZE XVARIABLE             00090200
.ZG40A   AIF   ('&MF(3)' NE 'COMPLETE').ZG41A                           00090300
&XMFSCK              SETC  'COMPLETE'  SET KEYWORD                      00090400
.*-------------------------------------------------------------------   00090500
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00090600
.ZG41A               AIF   (K'&XMFSCK GT 0).ZG41C  KEYWORD              00090700
                     AIF   (K'&MF(3) LE 0).ZG41B                        00090800
&ZMS                 SETC  '"MF='                                       00090900
&ZMS                 SETC  '&ZMS.&MF"'                                  00091000
&ZMS                 SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '    00091100
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00091200
&ZMS                 SETC  '&ZMS "COMPLETE".'                           00091300
                     MNOTE 8,' &ZMS '                                   00091400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00091500
.ZG41B               ANOP  ,                                            00091600
&XMFSCK              SETC  'COMPLETE'  SET DEFAULT KEYWORD              00091700
.ZG41C               ANOP  ,                                            00091800
&ZXMFSCK             SETC  'INPUT'     SET IN/OUTPUT                    00091900
.*------------------------------------------------------------------    00092000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00092100
.ZG42                ANOP  ,                                            00092200
&ZXMF                SETC  'INPUT'     SET IN/OUTPUT                    00092300
                     AIF   (K'&XMF GT 0).ZG42E  VALID ARG               00092400
                     AIF   (T'&MF EQ 'O').ZG42D  OMITTED                00092500
&ZASYSLNDX           SETA  0                                            00092600
.ZG42A               ANOP  ,           POSITIONAL MACRO KEY             00092700
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00092800
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG42C             00092900
&ZTLC                SETC 'MF'                                          00093000
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG42A    00093100
.ZG42B               ANOP  ,                                            00093200
&ZXMF                SETC  ''          RESET IN/OUTPUT                  00093300
&ZMS                 SETC  'THE "MF" KEY'                               00093400
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00093500
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00093600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00093700
                     AGO   .ZG42E                                       00093800
.ZG42C               ANOP  ,                                            00093900
&ZXMF                SETC  ''          RESET IN/OUTPUT                  00094000
&ZMS                 SETC  '"MF='                                       00094100
&ZMS                 SETC  '&ZMS.&MF"'                                  00094200
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00094300
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00094400
&ZMS                 SETC  '&ZMS "S",'                                  00094500
&ZMS                 SETC  '&ZMS "L",'                                  00094600
&ZMS                 SETC  '&ZMS OR "E".'                               00094700
                     MNOTE 8,' &ZMS '                                   00094800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00094900
                     AGO   .ZG42E                                       00095000
.ZG42D               ANOP  ,                                            00095100
&XMF                 SETC  'S'         SET DEFAULT KEYWORD              00095200
&XMFSCK              SETC  'COMPLETE'  COMPLETE CHECKING                00095300
.ZG42E               ANOP  ,                                            00095400
.********************************************************************   00095500
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00095600
.********************************************************************   00095700
                     ACTR  10000                                        00095800
.*-------------------------------------------------------------------   00095900
.***AG.MF03 MF=(SLE)                                                    00096000
                     AIF   ('&XMF' EQ 'L').ZGMFX                        00096100
.*----------------------------------------------------------------***   00096200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00096300
                     AIF   (N'&WORKREQ_HDL LE 1).ZG2A  CK NUM           00096400
&ZMS                 SETC  '"WORKREQ_HDL='                              00096500
&ZMS                 SETC  '&ZMS.&WORKREQ_HDL"'                         00096600
&ZMS                 SETC  '&ZMS "WORKREQ_HDL"'                         00096700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00096800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00096900
.ZG2A                ANOP  ,                                            00097000
.*-------------------------------------------------------------------   00097100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00097200
&ZXWORKREQ_HDL       SETC  'INPUT'     SET IN/OUTPUT                    00097300
&XWORKREQ_HDL        SETC  '&WORKREQ_HDL(1)'    SET XVARIABLE           00097400
                     AIF   (N'&WORKREQ_HDL GT 1).ZG2B  MULTI PARMS      00097500
&XWORKREQ_HDL        SETC  '&WORKREQ_HDL'       SET XVARIABLE           00097600
.ZG2B                AIF   (K'&WORKREQ_HDL(1) GT 0).ZG2C                00097700
&ZXWORKREQ_HDL       SETC  ''          RESET IN/OUTPUT                  00097800
&ZMS                 SETC  ' '                                          00097900
&ZMS                 SETC  '&ZMS "WORKREQ_HDL" KEY AND ITS'             00098000
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00098100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00098200
.ZG2C                ANOP  ,                                            00098300
.*-------------------------------------------------------------------   00098400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00098500
                     AIF   (K'&ZXWORKREQ_HDL LE 0).ZG2R  NOT I/O        00098600
                     AIF   ('&XWORKREQ_HDL'(1,1) NE '(').ZG2R           00098700
&ZCGPR               SETC  '&XWORKREQ_HDL'(2,K'&XWORKREQ_HDL-2)         00098800
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                  00098900
                     AIF   (K'&ZCGPR GT 2).ZG2Q                         00099000
                     AIF   ('&ZCGPR' EQ '0').ZG2Q                       00099100
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00099200
                     AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME     00099300
.ZG2P                ANOP  ,                                            00099400
                     AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC          00099500
                     AIF   ('&ZCGPR' LT '2').ZG2Q                       00099600
                     AIF   ('&ZCGPR' LE '12').ZG2R                      00099700
.ZG2Q                ANOP  ,                                            00099800
&ZMS                 SETC  '"WORKREQ_HDL='                              00099900
&ZMS                 SETC  '&ZMS.&WORKREQ_HDL"'                         00100000
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00100100
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00100200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00100300
.ZG2R                ANOP  ,                                            00100400
.*----------------------------------------------------------------***   00100500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00100600
                     AIF   (N'&BLOCK_HDL LE 1).ZG5A  CK NUM             00100700
&ZMS                 SETC  '"BLOCK_HDL='                                00100800
&ZMS                 SETC  '&ZMS.&BLOCK_HDL"'                           00100900
&ZMS                 SETC  '&ZMS "BLOCK_HDL"'                           00101000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00101100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00101200
.ZG5A                ANOP  ,                                            00101300
.*-------------------------------------------------------------------   00101400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00101500
&ZXBLOCK_HDL         SETC  'INPUT'     SET IN/OUTPUT                    00101600
&XBLOCK_HDL          SETC  '&BLOCK_HDL(1)'      SET XVARIABLE           00101700
                     AIF   (N'&BLOCK_HDL GT 1).ZG5B  MULTI PARMS        00101800
&XBLOCK_HDL          SETC  '&BLOCK_HDL'         SET XVARIABLE           00101900
.ZG5B                AIF   (K'&BLOCK_HDL(1) GT 0).ZG5C                  00102000
&ZXBLOCK_HDL         SETC  ''          RESET IN/OUTPUT                  00102100
&ZMS                 SETC  ' '                                          00102200
&ZMS                 SETC  '&ZMS "BLOCK_HDL" KEY AND ITS'               00102300
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00102400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00102500
.ZG5C                ANOP  ,                                            00102600
.*-------------------------------------------------------------------   00102700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00102800
                     AIF   (K'&ZXBLOCK_HDL LE 0).ZG5R  NOT I/O          00102900
                     AIF   ('&XBLOCK_HDL'(1,1) NE '(').ZG5R             00103000
&ZCGPR               SETC  '&XBLOCK_HDL'(2,K'&XBLOCK_HDL-2)             00103100
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                  00103200
                     AIF   (K'&ZCGPR GT 2).ZG5Q                         00103300
                     AIF   ('&ZCGPR' EQ '0').ZG5Q                       00103400
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00103500
                     AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME     00103600
.ZG5P                ANOP  ,                                            00103700
                     AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC          00103800
                     AIF   ('&ZCGPR' LT '2').ZG5Q                       00103900
                     AIF   ('&ZCGPR' LE '12').ZG5R                      00104000
.ZG5Q                ANOP  ,                                            00104100
&ZMS                 SETC  '"BLOCK_HDL='                                00104200
&ZMS                 SETC  '&ZMS.&BLOCK_HDL"'                           00104300
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00104400
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00104500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00104600
.ZG5R                ANOP  ,                                            00104700
.*----------------------------------------------------------------***   00104800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00104900
                     AIF   (N'&EWLMMODE LE 1).ZG8A  CK NUM              00105000
&ZMS                 SETC  '"EWLMMODE='                                 00105100
&ZMS                 SETC  '&ZMS.&EWLMMODE"'                            00105200
&ZMS                 SETC  '&ZMS "EWLMMODE"'                            00105300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00105400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00105500
.ZG8A                ANOP  ,                                            00105600
.*-------------------------------------------------------------------   00105700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00105800
&XEWLMMODE           SETC  ''          INITIALIZE XVARIABLE             00105900
.ZG9A   AIF   ('&EWLMMODE(1)' NE 'NORMAL').ZG10A                        00106000
&XEWLMMODE           SETC  'NORMAL'    SET KEYWORD                      00106100
.*-------------------------------------------------------------------   00106200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00106300
.ZG10A   AIF   ('&EWLMMODE(1)' NE 'EXPLICIT_SINGLE').ZG11A              00106400
&XEWLMMODE           SETC  'EXPLICIT_SINGLE'    SET KEYWORD             00106500
.*-------------------------------------------------------------------   00106600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00106700
.ZG11A               AIF   (K'&XEWLMMODE GT 0).ZG11C  KEYWORD           00106800
                     AIF   (K'&EWLMMODE(1) LE 0).ZG11B                  00106900
&ZMS                 SETC  '"EWLMMODE='                                 00107000
&ZMS                 SETC  '&ZMS.&EWLMMODE"'                            00107100
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00107200
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00107300
&ZMS                 SETC  '&ZMS "NORMAL"'                              00107400
&ZMS                 SETC  '&ZMS OR "EXPLICIT_SINGLE".'                 00107500
                     MNOTE 8,' &ZMS '                                   00107600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00107700
.ZG11B               ANOP  ,                                            00107800
&XEWLMMODE           SETC  'NORMAL'    SET DEFAULT KEYWORD              00107900
.ZG11C               ANOP  ,                                            00108000
&ZXEWLMMODE          SETC  'INPUT'     SET IN/OUTPUT                    00108100
.*----------------------------------------------------------------***   00108200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00108300
                     AIF   (N'&ETOKEN LE 1).ZG13A  CK NUM               00108400
&ZMS                 SETC  '"ETOKEN='                                   00108500
&ZMS                 SETC  '&ZMS.&ETOKEN"'                              00108600
&ZMS                 SETC  '&ZMS "ETOKEN"'                              00108700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00108800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00108900
.ZG13A               ANOP  ,                                            00109000
.*-------------------------------------------------------------------   00109100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00109200
&ZXETOKEN            SETC  'INPUT'     SET IN/OUTPUT                    00109300
&XETOKEN             SETC  'NO_ETOKEN'                                  00109400
                     AIF   (K'&ETOKEN(1) LE 0).ZG13B  PARM              00109500
&XETOKEN             SETC  '&ETOKEN(1)'         SET XVARIABLE           00109600
                     AIF   (N'&ETOKEN GT 1).ZG13B  MULTI                00109700
&XETOKEN             SETC  '&ETOKEN'   SET XVARIABLE                    00109800
.ZG13B               ANOP  ,                                            00109900
.*-------------------------------------------------------------------   00110000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00110100
                     AIF   (K'&ZXETOKEN LE 0).ZG13R  NOT I/O            00110200
         AIF   ('&XETOKEN' EQ 'NO_ETOKEN').ZG13R                        00110300
                     AIF   ('&XETOKEN'(1,1) NE '(').ZG13R               00110400
&ZCGPR               SETC  '&XETOKEN'(2,K'&XETOKEN-2)                   00110500
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG13P                 00110600
                     AIF   (K'&ZCGPR GT 2).ZG13Q                        00110700
                     AIF   ('&ZCGPR' EQ '0').ZG13Q                      00110800
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00110900
                     AIF   (T'&ZCGPR NE 'N').ZG13Q  INVALID REG NAME    00111000
.ZG13P               ANOP  ,                                            00111100
                     AIF   (T'&ZCGPR NE 'N').ZG13R  NON NUMERIC         00111200
                     AIF   ('&ZCGPR' LT '2').ZG13Q                      00111300
                     AIF   ('&ZCGPR' LE '12').ZG13R                     00111400
.ZG13Q               ANOP  ,                                            00111500
&ZMS                 SETC  '"ETOKEN='                                   00111600
&ZMS                 SETC  '&ZMS.&ETOKEN"'                              00111700
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00111800
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00111900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00112000
.ZG13R               ANOP  ,                                            00112100
.*----------------------------------------------------------------***   00112200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00112300
                     AIF   (N'&RETCODE LE 1).ZG16A  CK NUM              00112400
&ZMS                 SETC  '"RETCODE='                                  00112500
&ZMS                 SETC  '&ZMS.&RETCODE"'                             00112600
&ZMS                 SETC  '&ZMS "RETCODE"'                             00112700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00112800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00112900
.ZG16A               ANOP  ,                                            00113000
.*-------------------------------------------------------------------   00113100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00113200
                     AIF   (K'&RETCODE(1) LE 0).ZG16C  NO PARM          00113300
&ZXRETCODE           SETC  'OUTPUT'    SET OUTPUT                       00113400
&XRETCODE            SETC  '&RETCODE(1)'        SET XVARIABLE           00113500
                     AIF   (N'&RETCODE GT 1).ZG16C                      00113600
&XRETCODE            SETC  '&RETCODE'  SET XVARIABLE                    00113700
.ZG16C               ANOP  ,                                            00113800
.*-------------------------------------------------------------------   00113900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00114000
                     AIF   (K'&ZXRETCODE LE 0).ZG16R  NOT I/O           00114100
                     AIF   ('&XRETCODE'(1,1) NE '(').ZG16R              00114200
&ZCGPR               SETC  '&XRETCODE'(2,K'&XRETCODE-2)                 00114300
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG16P                 00114400
                     AIF   (K'&ZCGPR GT 2).ZG16Q                        00114500
                     AIF   ('&ZCGPR' EQ '0').ZG16Q                      00114600
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00114700
                     AIF   (T'&ZCGPR NE 'N').ZG16Q  INVALID REG NAME    00114800
.ZG16P               ANOP  ,                                            00114900
                     AIF   (T'&ZCGPR NE 'N').ZG16R  NON NUMERIC         00115000
                     AIF   ('&ZCGPR' LT '2').ZG16Q                      00115100
                     AIF   ('&ZCGPR' LE '12').ZG16R                     00115200
.ZG16Q               ANOP  ,                                            00115300
&ZMS                 SETC  '"RETCODE='                                  00115400
&ZMS                 SETC  '&ZMS.&RETCODE"'                             00115500
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00115600
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00115700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00115800
.ZG16R               ANOP  ,                                            00115900
.*----------------------------------------------------------------***   00116000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00116100
                     AIF   (N'&RSNCODE LE 1).ZG19A  CK NUM              00116200
&ZMS                 SETC  '"RSNCODE='                                  00116300
&ZMS                 SETC  '&ZMS.&RSNCODE"'                             00116400
&ZMS                 SETC  '&ZMS "RSNCODE"'                             00116500
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00116600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00116700
.ZG19A               ANOP  ,                                            00116800
.*-------------------------------------------------------------------   00116900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00117000
                     AIF   (K'&RSNCODE(1) LE 0).ZG19C  NO PARM          00117100
&ZXRSNCODE           SETC  'OUTPUT'    SET OUTPUT                       00117200
&XRSNCODE            SETC  '&RSNCODE(1)'        SET XVARIABLE           00117300
                     AIF   (N'&RSNCODE GT 1).ZG19C                      00117400
&XRSNCODE            SETC  '&RSNCODE'  SET XVARIABLE                    00117500
.ZG19C               ANOP  ,                                            00117600
.*-------------------------------------------------------------------   00117700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00117800
                     AIF   (K'&ZXRSNCODE LE 0).ZG19R  NOT I/O           00117900
                     AIF   ('&XRSNCODE'(1,1) NE '(').ZG19R              00118000
&ZCGPR               SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                 00118100
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG19P                 00118200
                     AIF   (K'&ZCGPR GT 2).ZG19Q                        00118300
                     AIF   ('&ZCGPR' EQ '0').ZG19Q                      00118400
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00118500
                     AIF   (T'&ZCGPR NE 'N').ZG19Q  INVALID REG NAME    00118600
.ZG19P               ANOP  ,                                            00118700
                     AIF   (T'&ZCGPR NE 'N').ZG19R  NON NUMERIC         00118800
                     AIF   ('&ZCGPR' LT '2').ZG19Q                      00118900
                     AIF   ('&ZCGPR' LE '12').ZG19R                     00119000
.ZG19Q               ANOP  ,                                            00119100
&ZMS                 SETC  '"RSNCODE='                                  00119200
&ZMS                 SETC  '&ZMS.&RSNCODE"'                             00119300
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00119400
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00119500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00119600
.ZG19R               ANOP  ,                                            00119700
.******************************************************************     00119800
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00119900
.******************************************************************     00120000
                     ACTR  10000                                        00120100
.*----------------------------------------------------------------***   00120200
.***AH.P02 EXTRA POSITIONALS                                            00120300
                     AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS         00120400
                     AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL         00120500
                     AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL     00120600
                     AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL      00120700
.ZGLISTX1            ANOP  ,                                            00120800
&ZCVAL               SETC  ''          ERROR FIELD                      00120900
&ZAWRK               SETA  0           POSITIONAL NUMBER                00121000
.ZGLIST2             ANOP  ,                                            00121100
&ZAWRK               SETA  &ZAWRK+1    NEXT POSITIONAL                  00121200
                     AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE         00121300
&ZCVAL               SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA              00121400
                     AGO   .ZGLIST2                                     00121500
.*                                                                      00121600
.ZGLIST3             ANOP  ,                                            00121700
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA           00121800
&ZMS                 SETC  'POSITIONAL ARGUMENT(S),'                    00121900
&ZMS                 SETC  '&ZMS "&ZCVAL"'                              00122000
&ZMS                 SETC  '&ZMS CANNOT BE USED.'                       00122100
&ZMS                 SETC  '&ZMS NO POSITIONAL ARGUMENTS'               00122200
                     MNOTE 8,' &ZMS ARE ALLOWED.'                       00122300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00122400
.ZGLISTX             ANOP  ,                                            00122500
&ZASYSLNDX           SETA  0                                            00122600
.*-------------------------------------------------------------------   00122700
.***AG.MF04 MF=(SLE)                                                    00122800
.ZGMFX               ANOP  ,           END OF FULL SYNTAX CHECK         00122900
.*******************************************************************    00123000
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00123100
.*******************************************************************    00123200
                     AIF   (&ZMACRET NE 0).ZLX2  ERROR DETECTED         00123300
.*******************************************************************    00123400
.***AE.01  START OF IWMEUBLK MACRO CODE                                 00123500
.*******************************************************************    00123600
                     LCLC  &M0M0001                 NAME                00123700
&M0M0001             SETC  '&XLABEL'                SET NAME            00123800
                     AIF   (K'&XLABEL NE 0).XLAB2                       00123900
&M0M0001             SETC  'M00M&SYSNDX'            DEFAULT NAME        00124000
.*                                                                      00124100
.XLAB2               ANOP  ,                                            00124200
                     AIF   ('&XMF' EQ 'L').XLAB3                        00124300
&M0M0001 DS    0H                             IWMEUBLK-1                00124400
.XLAB3               ANOP  ,                                            00124500
.*******************************************************************    00124600
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00124700
.*******************************************************************    00124800
              PUSH  PRINT                                               00124900
                     AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON   00125000
                     PRINT OFF         ++ PR01                          00125100
                     AGO   .ZPRNTXX                                     00125200
.ZPRINTX             PRINT ON                                           00125300
.ZPRNTXX             ANOP  ,                                            00125400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00125500
         LCLC  &T1                                                  @L4 00125600
         LCLA  &E1                                                  @L4 00125700
&E1      SETA  0                                                    @L4 00125800
         AIF   ('&XEWLMMODE' NE 'EXPLICIT_SINGLE').NOSING           @L4 00125900
         AIF   ('&XETOKEN' EQ 'NO_ETOKEN').SING                     @L4 00126000
         AIF   ('&XETOKEN' NE '').NOSING                            @L4 00126100
.SING    ANOP  ,                                                    @L4 00126200
&T1      SETC  'IWMEUBLK: "ETOKEN" IS REQUIRED WITH '               @L4 00126300
&T1      SETC  '&T1."EWLMMODE=EXPLICIT_SINGLE"'                     @L4 00126400
&E1      SETA  8                                                    @L4 00126500
         MNOTE &E1,'&T1'                                            @L4 00126600
.NOSING  ANOP  ,                                                    @L4 00126700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00126800
.********************************************************************   00126900
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00127000
.********************************************************************   00127100
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00127200
                      LCLA  &ZOPN1         INVOCATION INDEX             00127300
                      LCLC  &ZOPL(4095)    LABEL                        00127400
                      LCLC  &ZOPO(4095)    OPERATION                    00127500
                      LCLC  &ZOPV(4095)    VALUE                        00127600
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00127700
.*                                                                      00127800
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00127900
.******************************************************************     00128000
.***AL.L10 IWMEUBLK FMT=LIST MF=S!L PARAMETERS                          00128100
.******************************************************************     00128200
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00128300
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00128400
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00128500
&XMFATTR              SETC  '0D'                                        00128600
.*                                                                      00128700
&ZOPN                 SETA  &ZOPN+1                                     00128800
&ZOPL(&ZOPN)          SETC  ' '                                         00128900
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00129000
&ZOPV(&ZOPN)          SETC  '4,8'                                       00129100
&ZOPN                 SETA  &ZOPN+1                                     00129200
&ZOPL(&ZOPN)          SETC  ' '                                         00129300
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00129400
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00129500
&ZOPD(&ZOPN)          SETC  '++ IWMEUBLK ARG PARMS'                     00129600
.*                                                                      00129700
&ZOPN                 SETA  &ZOPN+1                                     00129800
&ZOPL(&ZOPN)          SETC  ' '                                         00129900
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00130000
&ZOPV(&ZOPN)          SETC  '1'                                         00130100
&ZOPD(&ZOPN)          SETC  ' '                                         00130200
.*                                                                      00130300
.ZLMFSL2              ANOP  ,                                           00130400
.*-------------------------------------------------------------------   00130500
.***AM.L00  IWMEUBLK FMT=LIST name                                      00130600
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00130700
&ZOPN                 SETA &ZOPN+1                                      00130800
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00130900
&ZOPO(&ZOPN)          SETC 'EQU'                                        00131000
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00131100
&ZOPD(&ZOPN)          SETC '++ IWMEUBLK NAME'                           00131200
.ZLMFSL2M             ANOP  ,                                           00131300
.*-------------------------------------------------------------------   00131400
.***AM.L01  IWMEUBLK FMT=LIST PARAMETERS                                00131500
&ZOPN                 SETA &ZOPN+1                                      00131600
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00131700
&ZOPO(&ZOPN)          SETC 'DS'                                         00131800
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00131900
&ZOPD(&ZOPN)          SETC '++ IWMEUBLK PARM LIST'                      00132000
.*-------------------------------------------------------------------   00132100
.***AM.L02 XVERSION XL1                                                 00132200
&ZOPN                 SETA &ZOPN+1                                      00132300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00132400
&ZOPO(&ZOPN)          SETC 'DS'                                         00132500
&ZOPV(&ZOPN)          SETC 'XL1'                                        00132600
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00132700
.*-------------------------------------------------------------------   00132800
.***AM.L09  XRSV0002 CL1                                                00132900
&ZOPN                 SETA &ZOPN+1                                      00133000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0002'                         00133100
&ZOPO(&ZOPN)          SETC 'DS'                                         00133200
&ZOPV(&ZOPN)          SETC 'CL1'                                        00133300
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00133400
.*-------------------------------------------------------------------   00133500
.***AM.L09  XPLISTLEN XL2                                               00133600
&ZOPN                 SETA &ZOPN+1                                      00133700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        00133800
&ZOPO(&ZOPN)          SETC 'DS'                                         00133900
&ZOPV(&ZOPN)          SETC 'XL2'                                        00134000
&ZOPD(&ZOPN)          SETC '++ INPUT '                                  00134100
.*-------------------------------------------------------------------   00134200
.***AM.L09  XWORKREQ_HDL CL8                                            00134300
&ZOPN                 SETA &ZOPN+1                                      00134400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XWORKREQ_HDL'                     00134500
&ZOPO(&ZOPN)          SETC 'DS'                                         00134600
&ZOPV(&ZOPN)          SETC 'CL8'                                        00134700
&ZOPD(&ZOPN)          SETC '++ &ZXWORKREQ_HDL '                         00134800
.*-------------------------------------------------------------------   00134900
.***AM.L09  XBLOCK_HDL CL8                                              00135000
&ZOPN                 SETA &ZOPN+1                                      00135100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBLOCK_HDL'                       00135200
&ZOPO(&ZOPN)          SETC 'DS'                                         00135300
&ZOPV(&ZOPN)          SETC 'CL8'                                        00135400
&ZOPD(&ZOPN)          SETC '++ &ZXBLOCK_HDL '                           00135500
.*-------------------------------------------------------------------   00135600
.***AM.L09  XETOKEN CL8                                                 00135700
&ZOPN                 SETA &ZOPN+1                                      00135800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XETOKEN'                          00135900
&ZOPO(&ZOPN)          SETC 'DS'                                         00136000
&ZOPV(&ZOPN)          SETC 'CL8'                                        00136100
&ZOPD(&ZOPN)          SETC '++ &ZXETOKEN '                              00136200
.*-------------------------------------------------------------------   00136300
.***AM.L10 END OF IWMEUBLK LIST PARAMETERS                              00136400
&ZOPN                 SETA &ZOPN+1                                      00136500
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00136600
&ZOPO(&ZOPN)          SETC 'EQU'                                        00136700
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00136800
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00136900
.*                                                                      00137000
&ZOPN                 SETA &ZOPN+1                                      00137100
&ZOPL(&ZOPN)          SETC ' '                                          00137200
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00137300
&ZOPV(&ZOPN)          SETC '1'                                          00137400
&ZOPD(&ZOPN)          SETC ' '                                          00137500
.*-------------------------------------------------------------------   00137600
.***AL.L12 IWMEUBLK FMT=LIST MF=S!L PARAMETERS                          00137700
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00137800
.*                                                                      00137900
&ZOPN                 SETA  &ZOPN+1                                     00138000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00138100
&ZOPO(&ZOPN)          SETC  'DC'                                        00138200
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00138300
&ZOPD(&ZOPN)          SETC  '++ IWMEUBLK ARG PARMS'                     00138400
.*                                                                      00138500
.ZLMFSLX              ANOP  ,                                           00138600
.*-------------------------------------------------------------------   00138700
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00138800
&ZPLLEN               SETA 28                                           00138900
.*                                                                      00139000
.******************************************************************     00139100
.***AI.L01 IWMEUBLK FMT=LIST FILL IN PARAMETER AREA                     00139200
.******************************************************************     00139300
                      ACTR  10000                                       00139400
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00139500
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00139600
&ZCVAL                SETC  'LAE'          XAX MODE                     00139700
.ZIMFXA               ANOP ,                                            00139800
.*                                                                      00139900
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00140000
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00140100
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00140200
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00140300
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00140400
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00140500
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00140600
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00140700
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00140800
&ZOPN                 SETA  &ZOPN+1                                     00140900
&ZOPL(&ZOPN)          SETC  ' '                                         00141000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00141100
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00141200
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00141300
                      AGO   .ZIMFNX                                     00141400
.*                                                                      00141500
.ZIMFN2               ANOP ,                                            00141600
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00141700
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00141800
&ZOPN                 SETA  &ZOPN+1                                     00141900
&ZOPL(&ZOPN)          SETC  ' '                                         00142000
&ZOPO(&ZOPN)          SETC  'LAE'                                       00142100
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00142200
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00142300
                      AGO   .ZIMFNX                                     00142400
.ZIMFNX1              ANOP ,                                            00142500
&ZOPN                 SETA  &ZOPN+1                                     00142600
&ZOPL(&ZOPN)          SETC  ' '                                         00142700
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00142800
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00142900
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00143000
.ZIMFNX               ANOP ,                                            00143100
.********************************************************************   00143200
.***AI.L02 IWMEUBLK FMT=LIST INITIALIZE PARAMETER AREA                  00143300
.********************************************************************   00143400
.***AI.L03 MF=(SLE)                                                     00143500
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00143600
.*                                                                      00143700
&ZOPN                 SETA  &ZOPN+1                                     00143800
&ZOPL(&ZOPN)          SETC  ' '                                         00143900
&ZOPO(&ZOPN)          SETC  'XC'                                        00144000
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00144100
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00144200
.ZIMFLX               ANOP  ,                                           00144300
.*-------------------------------------------------------------------   00144400
.***AI.L04B XVERSION XL1                                                00144500
                      AIF   (&XPLISTVER EQ 0).ZIMFVZ                    00144600
&ZOPN                 SETA  &ZOPN+1                                     00144700
&ZOPL(&ZOPN)          SETC  ' '                                         00144800
&ZOPO(&ZOPN)          SETC  'MVI'                                       00144900
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00145000
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00145100
.ZIMFVZ               ANOP  ,                                           00145200
.*-------------------------------------------------------------------   00145300
.***AI.L04 XPLISTLEN XL2                                                00145400
&ZOPN                 SETA  &ZOPN+1                                     00145500
&ZOPL(&ZOPN)          SETC  ' '                                         00145600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00145700
&ZOPV(&ZOPN)          SETC  '2(2,1),=AL2(&ZPLLEN)'                      00145800
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    00145900
.*-------------------------------------------------------------------   00146000
.***AI.L25  XWORKREQ_HDL CL8                                            00146100
                      AIF   ('&ZXWORKREQ_HDL' EQ '').ZI4E               00146200
                      AIF   ('&ZXWORKREQ_HDL' EQ 'OUTPUT').ZI4E         00146300
&ZCGPR                SETC  '&XWORKREQ_HDL'                             00146400
.*                                                                      00146500
                      AIF   ('&XWORKREQ_HDL'(1,1) NE '(').ZI4B          00146600
&ZCGPR   SETC  '0('.'&XWORKREQ_HDL'(2,K'&XWORKREQ_HDL-2).')'            00146700
.ZI4B                 ANOP  ,                                           00146800
.*                                                                      00146900
&ZOPN                 SETA  &ZOPN+1                                     00147000
&ZOPL(&ZOPN)          SETC  ' '                                         00147100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00147200
&ZOPV(&ZOPN)          SETC  '4(8,1),&ZCGPR'                             00147300
&ZOPD(&ZOPN)          SETC  '++ &ZXWORKREQ_HDL XWORKREQ_HDL'            00147400
.*                                                                      00147500
.ZI4E                 ANOP  ,                                           00147600
.*-------------------------------------------------------------------   00147700
.***AI.L25  XBLOCK_HDL CL8                                              00147800
                      AIF   ('&ZXBLOCK_HDL' EQ '').ZI5E                 00147900
                      AIF   ('&ZXBLOCK_HDL' EQ 'OUTPUT').ZI5E           00148000
&ZCGPR                SETC  '&XBLOCK_HDL'                               00148100
.*                                                                      00148200
                      AIF   ('&XBLOCK_HDL'(1,1) NE '(').ZI5B            00148300
&ZCGPR   SETC  '0('.'&XBLOCK_HDL'(2,K'&XBLOCK_HDL-2).')'                00148400
.ZI5B                 ANOP  ,                                           00148500
.*                                                                      00148600
&ZOPN                 SETA  &ZOPN+1                                     00148700
&ZOPL(&ZOPN)          SETC  ' '                                         00148800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00148900
&ZOPV(&ZOPN)          SETC  '12(8,1),&ZCGPR'                            00149000
&ZOPD(&ZOPN)          SETC  '++ &ZXBLOCK_HDL XBLOCK_HDL'                00149100
.*                                                                      00149200
.ZI5E                 ANOP  ,                                           00149300
.*-------------------------------------------------------------------   00149400
.***AI.L18  XETOKEN CL8                                                 00149500
         AIF   ('&XETOKEN' NE 'NO_ETOKEN').ZI6                          00149600
&ZXETOKEN             SETC  ''             RESET INPUT/OUTPUT           00149700
.ZI6                  ANOP  ,                                           00149800
.*-------------------------------------------------------------------   00149900
.***AI.L25  XETOKEN CL8                                                 00150000
                      AIF   ('&ZXETOKEN' EQ '').ZI6E                    00150100
                      AIF   ('&ZXETOKEN' EQ 'OUTPUT').ZI6E              00150200
&ZCGPR                SETC  '&XETOKEN'                                  00150300
.*                                                                      00150400
                      AIF   ('&XETOKEN'(1,1) NE '(').ZI6B               00150500
&ZCGPR   SETC  '0('.'&XETOKEN'(2,K'&XETOKEN-2).')'                      00150600
.ZI6B                 ANOP  ,                                           00150700
.*                                                                      00150800
&ZOPN                 SETA  &ZOPN+1                                     00150900
&ZOPL(&ZOPN)          SETC  ' '                                         00151000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00151100
&ZOPV(&ZOPN)          SETC  '20(8,1),&ZCGPR'                            00151200
&ZOPD(&ZOPN)          SETC  '++ &ZXETOKEN XETOKEN'                      00151300
.*                                                                      00151400
.ZI6E                 ANOP  ,                                           00151500
.*-------------------------------------------------------------------   00151600
&ZOPN1                SETA &ZOPN                                        00151700
.*******************************************************************    00151800
.***  PROCESS IWMEUBLK OUTPUT PARAMETERS                                00151900
.*******************************************************************    00152000
                      ACTR  10000                                       00152100
.*******************************************************************    00152200
.***AO.X02  RETURN CODE PROCESSING                                      00152300
.*******************************************************************    00152400
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00152500
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00152600
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00152700
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00152800
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00152900
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00153000
&ZOPN                 SETA  &ZOPN+1                                     00153100
&ZOPL(&ZOPN)          SETC  ' '                                         00153200
&ZOPO(&ZOPN)          SETC  'ST'                                        00153300
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00153400
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00153500
                      AGO   .ZMRETX                                     00153600
.*                                                                      00153700
.ZMRET2               ANOP  ,                                           00153800
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00153900
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00154000
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00154100
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00154200
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00154300
&ZOPN                 SETA  &ZOPN+1                                     00154400
&ZOPL(&ZOPN)          SETC  ' '                                         00154500
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00154600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00154700
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00154800
.ZMRETX               ANOP  ,                                           00154900
.*******************************************************************    00155000
.***AO.X03  REASON CODE PROCESSING                                      00155100
.*******************************************************************    00155200
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00155300
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00155400
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00155500
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00155600
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00155700
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00155800
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00155900
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00156000
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00156100
&ZOPN                 SETA  &ZOPN+1                                     00156200
&ZOPL(&ZOPN)          SETC  ' '                                         00156300
&ZOPO(&ZOPN)          SETC  'ST'                                        00156400
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00156500
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00156600
                      AGO   .ZMRSNX                                     00156700
.*                                                                      00156800
.ZMRSN2               ANOP  ,                                           00156900
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00157000
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00157100
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00157200
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00157300
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00157400
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00157500
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00157600
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00157700
&ZOPN                 SETA  &ZOPN+1                                     00157800
&ZOPL(&ZOPN)          SETC  ' '                                         00157900
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00158000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00158100
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00158200
.ZMRSNX               ANOP  ,                                           00158300
.*******************************************************************    00158400
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00158500
.*******************************************************************    00158600
.ZMFLX                ANOP  ,              MF=L PROCESSING              00158700
.*******************************************************************    00158800
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00158900
.*******************************************************************    00159000
                      ACTR  10000                                       00159100
.*                                                                      00159200
                      LCLA  &ZLC           COLUMN POSITION              00159300
                      LCLA  &ZOPX          LIST TABLE INDEX             00159400
                      LCLC  &ZLL           LABEL                        00159500
                      LCLC  &ZLOP          OPERATION                    00159600
                      LCLC  &ZLV           VALUE                        00159700
                      LCLC  &ZLD           DESCRIPTION                  00159800
.*                                                                      00159900
&ZOPX                 SETA  1                                           00160000
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00160100
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00160200
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00160300
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00160400
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00160500
                      AIF   (K'&ZLD LE 0).ZL5                           00160600
&ZLC                  SETA  35             COMMENT COLUMN               00160700
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00160800
&ZLC                  SETA  33             COMMMENT COLUMN              00160900
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00161000
&ZLV                  SETC  '&ZLV'.' '                                  00161100
                      AGO   .ZL3                                        00161200
.*                                                                      00161300
.ZL4                  ANOP  ,                                           00161400
&ZLV                  SETC  '&ZLV'.' '                                  00161500
.ZL5                  ANOP  ,                                           00161600
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00161700
.*                                                                      00161800
&ZLL     &ZLOP &ZLV                                                     00161900
.*                                                                      00162000
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00162100
                      AGO   .ZL2           CONTINUE LOOPING             00162200
.*                                                                      00162300
.ZLX                  ANOP  ,                                           00162400
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00162500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00162600
         L     14,16(0,0)              GET CVT ADDRESS                  00162700
         AIF   ('&SYSAM64' NE 'YES').AMODE31                        @L3 00162800
         LLGTR 14,14                   Clear high half in 64bit mode@L3 00162900
         TM    CVTOSLV3-CVT(14),CVTH7709 Test for HBB7709      @ME04992 00163000
         BNZ   VEROK&SYSNDX              ...Running on HBB7709      @L3 00163100
         LA    0,IWMRSNCODEBADVERSION    HBB7709 is required        @L3 00163200
         LA    15,IWMRETCODEINVOCERROR   Set return code            @L3 00163300
         B     END&SYSNDX                Skip service invocation    @L3 00163400
VEROK&SYSNDX  DS  0H                     Version check sussessfull  @L3 00163500
.AMODE31 ANOP  ,                                                    @L3 00163600
         AIF   ('&XEWLMMODE' NE 'EXPLICIT_SINGLE').PCCALL           @L4 00163700
         L     15,X'10'                ADDRESS THE CVT              @L4 00163800
         L     15,X'8C'(15,0)          ADDRESS THE ECVT             @L4 00163900
         L     15,X'C4'(15,0)          ADDRESS THE WMVT             @L4 00164000
         L     15,X'144'(15,0)         GET SERVICE ROUTINE ADDR     @L4 00164100
         AIF   ('&SYSAM64' NE 'YES').AMOD131                        @L4 00164200
         SAM   31                      SWITCH TO AMODE 31           @L4 00164300
.AMOD131 ANOP  ,                                                    @L4 00164400
         LHI   0,112                   FUNCTION CODE=IWMEUBLK       @L4 00164500
         BASR  14,15                   INVOKE SERVICE ROUTINE       @L4 00164600
         AIF   ('&SYSAM64' NE 'YES').AMOD231                        @L4 00164700
         SAM   64                      SWITCH TO AMODE 64           @L4 00164800
.AMOD231 ANOP  ,                                                    @L4 00164900
         CHI   15,256                  TEST IF INSTALLED ?          @L4 00165000
         BL    PC&SYSNDX               NO, FALLBACK TO PC           @L4 00165100
         AHI   15,-256                 CORRECT RC                   @L4 00165200
         B     END&SYSNDX              BRANCH AROUND PC             @L4 00165300
PC&SYSNDX DS   0H                                                   @L4 00165400
         L     14,16(0,0)              RELOAD CVT ADDRESS           @L4 00165500
.PCCALL  ANOP  ,                                                    @L4 00165600
         L     14,772(14,0)            GET SFT ADDRESS                  00165700
         L     14,380(14,0)            GET LX FOR SERVICE ROUTINE       00165800
         LA    15,112                  GET EX FOR SERVICE ROUTINE       00165900
         OR    14,15                   GET PC NUMBER                    00166000
         PC    0(14)                                                    00166100
END&SYSNDX DS    0H                    END LABEL                        00166200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00166300
.ZLINKX               ANOP  ,                                           00166400
.*******************************************************************    00166500
.***AP.X01  FORMAT GENERATED CODE                                       00166600
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00166700
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00166800
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00166900
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00167000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00167100
                      AIF   (K'&ZLD LE 0).ZL51                          00167200
&ZLC                  SETA  35             COMMENT COLUMN               00167300
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00167400
&ZLC                  SETA  33             COMMENT COLUMN               00167500
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00167600
&ZLV                  SETC  '&ZLV'.' '                                  00167700
                      AGO   .ZL31                                       00167800
.*                                                                      00167900
.ZL41                 ANOP  ,                                           00168000
&ZLV                  SETC  '&ZLV'.' '                                  00168100
.ZL51                 ANOP  ,                                           00168200
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00168300
.*                                                                      00168400
&ZLL     &ZLOP &ZLV                                                     00168500
.*                                                                      00168600
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00168700
                      AGO   .ZL21          CONTINUE LOOPING             00168800
.*                                                                      00168900
.ZLX1                 ANOP  ,                                           00169000
.*******************************************************************    00169100
.***AP.X02  END OF IWMEUBLK MACRO                                       00169200
&ZIWMEUBLK            SETC  'YES'          SET IWMEUBLK USED            00169300
         POP   PRINT                                                    00169400
*                                            IWMEUBLK-1                 00169500
         SPACE 1                                                        00169600
.ZLX2                 ANOP  ,                                           00169700
         MEND                                                           00169800
**********************************************************************/ 00169900
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00170000
*%IWMEUBLK: MACRO KEYS(WORKREQ_HDL,BLOCK_HDL,EWLMMODE,ETOKEN,RETCODE,   00170100
*                 RSNCODE,PLISTVER,MF);                                 00170200
*  ANS('?'!!MACLABEL!!' '!!'IWMEUBLP '!!MACLIST!!                       00170300
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00170400
*%END IWMEUBLK;                                                         00170500
