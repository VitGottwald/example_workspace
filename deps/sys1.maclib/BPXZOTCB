*                                                                       00001000
* %DCL BPXZOTCB_INCLUDED CHAR EXT;                                      00002000
* %DEACTIVATE BPXZOTCB_INCLUDED;                                        00003000
* %IF BPXZOTCB_INCLUDED = '' %THEN                                      00004000
* %DO;                                                                  00005000
*/* Macro made bi-lingual on 18260. CBGEN compile date 15295         */ 00006000
*% /*                                                                   00007000
         MACRO                                                          00008000
         BPXZOTCB &DSECT=YES,&LIST=YES,&TITLE=YES,&OTCB=YES,           *00009000
               &OTCBCOPYONFORK=COND,&OTCBRACGIDS=COND,                 *00010000
               &OTCBFLAGS3WORD=COND                                     00011000
         GBLC  &BPXZOTCB_INCLUDED                                       00012000
         GBLC  &ZCBPRINT                                                00013000
&BPXZOTCB_INCLUDED SETC 'YES'                                           00014000
         AIF   ('&LIST' EQ 'NONE').P0                                   00015000
         AIF   ('&TITLE' EQ 'NO').P5                                    00016000
 TITLE   'BPXZOTCB  - OpenMVS extension of the TCB                    '*00017000
                                                                        00018000
.P5      ANOP                                                           00019000
**/ BPXZOTCB_1:;                                                        00020000
*/****START OF SPECIFICATIONS****************************************** 00021000
*    $MAC (BPXZOTCB) COMP(SCPX1) PROD(BPX):                             00022000
*01* MACRO NAME: BPXZOTCB                                               00023000
*01* DSECT NAME: N/A                                                    00024000
*01* DESCRIPTIVE NAME: OpenMVS extension of the TCB                     00025000
*02*   ACRONYM: OTCB                                                    00026000
**/                                                                     00027000
*/*01* PROPRIETARY STATEMENT=                                        */ 00028000
*/***PROPRIETARY_STATEMENT********************************************/ 00029000
*/*                                                                  */ 00030000
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */ 00031000
*/* 5650-ZOS COPYRIGHT IBM CORP. 1997, 2019                          */ 00032000
*/*                                                                  */ 00033000
*/* STATUS= HBB77C0                                                  */ 00034000
*/*                                                                  */ 00035000
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 00036000
*/*                                                                     00037000
*01* EXTERNAL CLASSIFICATION:                                           00038000
*02*         DMTI:BASE                                                  00039000
*02*         GUPI:FIELDS                                                00040000
*                  OtcbThli                                             00041000
*                  OtcbWLMEToken                                        00042000
*                  OtcbSigPending                                       00043000
*01* END OF EXTERNAL CLASSIFICATION:                                    00044000
*                                                                       00045000
*01* FUNCTION:                                                          00046000
*                                                                       00047000
*    This maps the OpenMVS extension to the TCB.                        00048000
*                                                                       00049000
*01* METHOD OF ACCESS:                                                  00050000
*                                                                       00051000
*02*   PL/X:                                                            00052000
*        %INCLUDE SYSLIB(BPXZOTCB)                                      00053000
*        By default, the OTCB is based on STCBOTCB. If                  00054000
*        other basing is desired, use %OTCBBASE='BASED(XXXXXX)'.        00055000
*        If %OTCBBASE='BASED(OTCBPTR)' is coded, a Declare for          00056000
*        OTCBPTR is also generated.                                     00057000
*                                                                       00058000
*02*   ASM:                                                             00059000
*        BPXZOTCB  ...parms...                                          00060000
*                                                                       00061000
*01* SIZE: Release dependent.  Refer to the mapping.                    00062000
*            OTCBFLAGS3WORD -- X'0004' bytes                            00063000
*            OTCBRACGIDS    -- X'000C' bytes                            00064000
*            OTCB           -- X'0230' bytes                            00065000
*            OTCBCOPYONFORK -- X'00B8' bytes                            00066000
*                                                                       00067000
*01* POINTED TO BY:                                                     00068000
*      1) STCBOTCB                                                      00069000
*      1) STCBOTCA - alternate anchor point used during thread          00070000
*                    termination and re-dub to get at task related      00071000
*                    data that persists after undub                     00072000
*                                                                       00073000
*01* CREATED BY: OpenMVS Thread Initialization                          00074000
*                                                                       00075000
*01* DELETED BY: The OTCB is not explicitly freed.                      00076000
*                It is in SP230, task related storage, and is freed     00077000
*                at task termination.                                   00078000
*                                                                       00079000
*01* STORAGE ATTRIBUTES:                                                00080000
*02*   SUBPOOL: 230                                                     00081000
*02*   KEY: 0, non fetch protected                                      00082000
*02*   RESIDENCY: EPA                                                   00083000
*                                                                       00084000
*01* FREQUENCY: 1 per OpenMVS thread                                    00085000
*                                                                       00086000
*01* SERIALIZATION: N/A                                                 00087000
*                                                                       00088000
*01* DEPENDENCIES: None                                                 00089000
*                                                                       00090000
*01* NOTES:     This is a bilingual macro.  use CBGEN to create         00091000
*               the ASSEMBLER version of the PLX mapping.               00092000
*01* HINTS:     1) Stay out of column 72.                               00093000
*               2) Do not place a structure under an unnamed field      00094000
*                  Example of what NOT to do:   2    *            ,     00095000
*                                                3   OtcbFldName  Ptr   00096000
*                                                                       00097000
*01* COMPONENT: OpenMVS (SCPX1)                                         00098000
*                                                                       00099000
*01* DISTRIBUTION LIBRARY:  AINTLIB                                     00100000
*                                                                       00101000
*01* EYE-CATCHER: OTCB                                                  00102000
*02*   OFFSET:  0                                                       00103000
*02*   LENGTH:  4                                                       00104000
*01* CHANGE-ACTIVITY:                                                   00105000
*                                                                       00106000
*    $L0=POSIXXP  HOM1110 921201 PDF4: OpenMVS Initial Release          00107000
*    $P1=PL70352  HOM1110 921201 PDJJ: Bypass RACF check for kill()     00108000
*    $P2=PL70382  HOM1110 921201 PDJD: Continue with stopping signal    00109000
*    $P3=PL70391  HOM1110 921201 PDHA: Don't clear waiting flags        00110000
*    $D4=DL70010  HOM1110,921201,PDJM: Thread Support                   00111000
*    $D5=DL70014  HOM1110,921201,PDJC: Thread Support                   00112000
*    $P4=PL70576  HOM1110,921218,PDJQ: CancelPending changes            00113000
*    $D6=DL70034  HOM1120,930114,PDPB: Change Proprietary statement     00114000
*                                      for IPCS format models           00115000
*    $D7=DL70042  HOM1120,930317,PDI6: Add flags for quiesce support    00116000
*    $L1=DOAA006  HOM1120 930503 PDJM: Multi-Process support.           00117000
*    $D8=DOAA003  HOM1120 930511 PDPE: Ptrace Thread Support            00118000
*    $P4=POA0020  HOM1120 930615 PDJI: Remove OtcbNoReset flags         00119000
*    $D9=DOAA002  HOM1120 930825 PDEA: (Dcr A002.09) KernPost with      00120000
*                                      token support                    00121000
*    $DA=DOAA038  HOM1120 931005 PDLH: MVSpause support                 00122000
*    $P5=PL70822  HOM1120,930924,PDI6: Change OTCB Subpool to 230       00123000
*    $DB=DOAA002  HOM1120 931101 PDLH: (DCR A002.13) Kernel Support     00124000
*                                      for Selectex                     00125000
*    $P6=POA0220  HOM1120,940119,PDJQ: Add PtExitOnly flag              00126000
*    $P7=POA0381  HOM1120,940310,PDI6: Multi-thread abnormal cleanup    00127000
*    $P8=POA0367  HOM1120,940307,PDJI: Add OtcbForkSTIMER flags         00128000
*    $P9=POA0417  HOM1120,940321,PDI6: Add OtcbInProcessTerm flag       00129000
*    $DC=DFPA088  HOM1130 940425 PDJM: (DCR A088.00) Fast Kern Post     00130000
*    $DD=DPFA065  HOM1130 940503 PDAX: A065.05 Rlimits/Rusage           00131000
*    $PA=PPF0017  HOM1130,940531,PDI6: Remove OtcbStackSw               00132000
*    $DE=DPFA065  HOM1130 940614 PDPE: DCR A065.09 User/group database  00133000
*                                      search                           00134000
*    $DF=DPFA051  HOM1130 940624 PDJJ: A051.07 Fork Daemon              00135000
*    $PB=PPF0098  HOM1130,940910,PDPE: CopyOnFork emancipation          00136000
*    $DG=DPFA065  HOM1130 940824 PDJM: A065.01 U U Interval timers      00137000
*    $DH=DPFA094  HOM1130 940921 PDJD: A094.02 Expanded SU function     00138000
*    $PC=PPF0177  HOM1130 950106 PDJI: BPXJCSS performance change       00139000
*    $PD=PPF0183  HOM1130 950116 PDJC: Flag pseudo-dub tasks (OW10835)  00140000
*    $DI=DPFA124  HOM1130 950421 PDJI: querydub support (A124.00)       00141000
*    $DJ=DPFA111  HOM1130 950612 PDJG: Task level security (A111.00)    00142000
*    $PE=PRG0017  HOM1140 950622 PDKG: Rollup Rel3 DCRs A130.00 and     00143000
*                                      A111.00                          00144000
*    $DK=DRGA153  HOM1140 951112 PDPY: A153.03 - Performance            00145000
*    $DL=DRGA153  HOM1140 951212 PDJQ: A153.01 - ACEE Caching           00146000
*    $DM=DRGA153  HOM1150 960218 PDPY: A153.07 - Performance            00147000
*    $DN=DSPA164  HOM1150 960215 PDI6: OE WLM Server Support A164.02    00148000
*    $DM=DSPA164  HOM1150 960315 PDPY: OE WLM Server Support A164.02    00149000
*    $DO=DSPA158  HOM1150 960124 PDJJ: DCR A158.00 ESCON Sockets        00150000
*    $DP=DRGA153  HOM1150 960504 PDKJ: DCR A153.11 Med Weight Processes 00151000
*    $PF=PSP0054  HOM1150 960409 PDJJ: Prop daemoninfo rollup prg0125   00152000
*    $PG=PSP0090  HOM1150 960520 PDPY: Pass APPL data/SDFL on fork      00153000
*    $01=OW22143  HOM1130 960815 PDI6: HSM Task Level ACEE InitUsp Fix  00154000
*    $DQ=DSYA196  JBB6604 960828 PDJC: A196.01 - SMF syscall            00155000
*    $DR=DSYA211  JBB6604 970128 PDI6: A211.01 - Fastpath Syscalls      00156000
*    $DS=DSYA197  JBB6604 961220 PDPY: A197.00 APPC Elimination         00157000
*    $PH=PSY0553  JBB6604 970310 PDJQ: RACF managed ACEEs (OW26085)     00158000
*    $01=OW26661  JBB6604 970507 PDJJ: Avoid multiple CallRTMs          00159000
*    $PI=PUX0201  HBB6605 970529 PDJJ: Support setgid on SU             00160000
*    $DT=DWAA217  JBB6607 971215 PDI6: A217.25 SAF Fastpath Support     00161000
*    $DU=DWAA274  JBB6607 980311 PDJQ: A274.02 FastCGI Support          00162000
*    $02=OW34533  HBB6605 980810 PDI6: ACEE Propagation on Pt_Create    00163000
*    $PJ=PWA0404  JBB6607 980818 PDJJ: Support initgroups after pw      00164000
*    $DV=DWKA320  HBB6608 980715 PDJI: A320.00 Java thread security     00165000
*    $DW=DWYA254  JBB6609 981124 PDJJ: A254.01 - HP Link support        00166000
*    $DX=DWYA315  JBB6609 981015 PDZJ: A315.00 Shared Library           00167000
*    $PK=PWK0799  HBB6608 990303 PDJJ: Avoid IRB during ptatt           00168000
*    $DY=PWYA352  JBB6609 990323 PDJC: (DCR A352.00) JobLog To STDERR   00169000
*    $PL=PWY0221  JBB6609 990714 PDJM: BILINGUAL, ASM part broke (R7)   00170000
*                                      Change  C00 to CL0 (4 times)     00171000
*    $PM=DXDA378  HBB7703 990728 PDJM: PWY0221 missed R10               00172000
*    $PN=PXD0518  HBB7703 991007 PDJM: Add OtcbLukwKey0 (for BPXSRSTQ)  00173000
*    $DZ=DXDA389  HBB7703 990817 PD2S: (DCR A389.00) Surrogate Cache    00174000
*    $PO=PXD0734  HBB7703 991125 PDQR: Closed the kser waiting window   00175000
*    $E1=DXD0765  HBB7703 991209 PDQR: Added some trace info for PRIN2  00176000
*    $PQ=PXD1007  HBB7703 000107 PDJC: No joblogging while running an   00177000
*                                      IPT/thread affinity program      00178000
*    $PR=PXV0127  HBB7704 000329 PDJC: Support POST w/TOKEN from IRB    00179000
*                                      while RB is doing POST w/TOKEN   00180000
*    $E2=DXVA409  HBB7704 000407 PDI6: A409.01 Fast pthread quiesce     00181000
*    $03=OW44183  HBB7704 000628 PDJJ: LM signal support                00182000
*    $04=OW42628  HBB7703 000504 PDI6: Double Syscall Stack Free Fix    00183000
*    $PS=PX01399  HBB7705 010206 PDSZ: Update GUPI comment              00184000
*    $E3=DYMA511  HBB7706 010305 PDI6: OMVS Restart Support             00185000
*    $PT=PX01720  HBB7705 010408 PDJJ: Serialize LSE update SPB/IR1     00186000
*    $E4=DX0A534  HBB7705 001218 PDAE: thread level posix identity      00187000
*    $E5=DYVA568  HBB7707 010725 PDAE: DCR A568 Process start/end exit  00188000
*    $E6=DYNA613  HBB7708 020801 PDSZ: Dynamic CBS                      00189000
*    $E7=DYNA568  HBB7708 020215 PDJQ: DCR A567 MLS Support rollup      00190000
*    $E8=DYNA612  HBB7709 021219 PDJJ: SuperKill                        00191000
*    $E9=DJKA613  HBB7709 030105 PDI6: Latch Contention Detection       00192000
*    $05=OA04618  HBB7706 031006 PDKG: Flags for local attach/spawn     00193000
*    $PU=ME01616  HBB7720 040902 PDI6: Pthread Fork Child Fix           00194000
*    $EA=ME02888  HBB7730 050105 PDJJ: Handle user owned USP            00195000
*    $PV=ME03024  HBB7730 050112 PDKG: OTCB remains after undub         00196000
*                                      delete med-weight process        00197000
*    $06=OA14670  HBB7720 060120 PDI6: Thread Workarea Release Fix      00198000
*    $EB=DCRA888  HBB7740 060324 PDHA: SUSv3 alarm behavior             00199000
*    $EC=DCRB112  HBB7740 060704 PDMX: Latch contention 3               00200000
*    $ED=DCRA955  HBB7740 060724 PDHA: Force cancel support             00201000
*    $PW=ME07288  HBB7740 060724 PDJT: OtcbFlags3Word base not right    00202000
*    $EF=DYNB009  HBB7740 060612 PDDE: Added pd to ppsq                 00203000
*    $07=OA16566  HBB7709 060921 PDKG: target uid procusermax           00204000
*    $08=OA18016  HBB7709 061109 PDKG: Audit required for SU surrogate  00205000
*    $09=OA14670  HBB7730 061020 PDKG: ignore auth level on open        00206000
*    $EG=DCRA231  HBB7750 061107 PDJC: Extended LoadHFS                 00207000
*    $EH=ME10013  HBB7750 070417 PDKG: DCR B337 - applid support        00208000
*    $EI=DCRB799  HBB7770 090130 PDJQ: DCR B799.00 __poe r/w support    00209000
*    $PX=ME15735  HBB7760 090309 PDI6: PtEvent Fix for BlockReq         00210000
*    $EJ=DCRB804  HBB7770 090330 PDJQ: DCR B804.00 RACF ICR support     00211000
*    $0A=OA29566  HBB7750 090707 PDJJ: Don't schedule multiple stimers  00212000
*    $0B=OA31639  HBB7750 100218 PDJQ: Removed OtcbUsePtEventID         00213000
*    $PY=ME20041  HBB7770 090330 PDJJ: NSIR1 RAS                        00214000
*    $0C=OA38388  HBB7790 120229 PDJQ: Add OtcbSPMUseCallersBlkMask     00215000
*    $PZ=ME23970  HBB7790 120430 PDJQ: Trust MRCSI caller for FastCGI   00216000
*    $EK=DCRC509  HBB7790 120505 PDMX: Unicode                          00217000
*    $Q1=ME23832  HBB7790 120618 PDI6: Avoid A03 from Pthreads          00218000
*    $EL=DCRC503  HBB7790 120612 PDJC: Recovery on own stack            00219000
*    $0D=OA42040  HBB7770 130731 PDKG: Save microseconds from times()   00220000
*    $0C=OA42093  HBB7770 130728 PDJQ: Priv Program Checking            00221000
*    $0E=OA43550  HBB7770 131008 PDJQ: Setuid REXX Exec Fix             00222000
*    $0F=OA43650  HBB7770 140228 PDJQ: Symlinks w/APF or must stay cln  00223000
*    $EM=DCRC625  HBB77A0 130423 PDJC: AM64 - Stacks above              00224000
*    $EN=DCRC625  HBB77A0 150201 PDMX: AM64 - OSI Stacks above ME28824  00225000
*    $Q2=ME28757  HBB77A0 150217 PDGY: Saved OBTAINed ctrace stack ptr  00226000
*    $0G=OA47667  HBB77A0 150427 PDJJ: Add ptrace stack                 00227000
*    $EO=DCRC893  HBB77B0 160701 PDJQ: DCR C893.00 - Syscall Exits      00228000
*    $0H=OA51922  HBB7790 170401 PDJQ: Ptrace PPSD integrity fix        00229000
*    $Q3=234915   HBB77C0 180209 PDJJ: additional NSIR1 RAS data        00230000
*    $Q3=WI93935  HBB77C0 180131 PDKG: Task term cleanup                00231000
*    $0I=OA55592  HBB77A0 180625 PDKG: Add RB addr to RB Seqn checks    00232000
****END OF SPECIFICATIONS*********************************************/ 00233000
*% /*                                                                   00234000
.P0      ANOP                                                           00235000
         AIF   ('&ZCBPRINT' EQ 'NO').P1                                 00236000
         AIF   ('&LIST' EQ 'YES').P2                                    00237000
.P1      ANOP                                                           00238000
         PUSH  PRINT                                                    00239000
         PRINT OFF                                                      00240000
.P2      ANOP                                                           00241000
         AIF   ('&OTCB' EQ 'NO').L0002                                  00242000
         AIF   ('&DSECT' EQ 'YES').L0003                                00243000
         AIF   ('&OTCB' NE 'YES').L0002                                 00244000
OTCB     DS    0D                                                       00245000
         AGO   .L0004                                                   00246000
.L0003   ANOP                                                           00247000
OTCB     DSECT                                                          00248000
.L0004   ANOP                                                           00249000
OTCBID   DS    CL4       EBCDIC ID - OTCB                               00250000
OTCBSP   DS    X         Subpool number of this OTCB                    00251000
OTCBLEN  DS    FL3       Length of this OTCB                            00252000
OTCBPTXL DS    A         -> pthread parameters                          00253000
OTCBKSER DS    A         -> KSER                                        00254000
OTCBFLAGS DS   0BL4      Compare and swap flg                           00255000
OTCBFLAGSB1 DS 0B                                                       00256000
OTCBINITIALTHREAD EQU X'80' Initial thread of a process                 00257000
OTCBINKERNELCALL EQU X'40' moved to PPRT                                00258000
OTCBSLEEP EQU  X'20'     Signal sleep() flag which is checked by       *00259000
                         pause().                                       00260000
OTCBCALLEDKERNEL EQU X'10' At sometime in its life, this thread has    *00261000
                         made a system call /CS                         00262000
OTCBNOPTLSIR EQU X'08'   Signal is being sent from the ptrace PtlSir   *00263000
                         (Ptrace Signal Interface Routine), so signal  *00264000
                         delivery should not deliver the signal to the *00265000
                         PtlSir if ptrace mode is on (we're already    *00266000
                         there)                                         00267000
OTCBPROCESSCLEANUP EQU X'04' Process being torn down. /CS               00268000
OTCBINTASKTERM EQU X'02' Thread is in the process of task termination. *00269000
                         Set by BPXRRTRM during task term               00270000
OTCBBYPASSRACF EQU X'01' Do not do RACF check in kill() routine         00271000
         ORG   OTCBFLAGSB1+1                                            00272000
OTCBFLAGSB2 DS 0B                                                       00273000
OTCBPTEXITONLY EQU X'80' Thread did XAG exitonly                        00274000
OTCBTHREADPTEXITED EQU X'40' Marked Ptexited                            00275000
OTCBF_PWDSURROGATE EQU X'20' Need to audit access to surrogate profile  00276000
OTCBIPT  EQU   X'10'     Indicates this thread is or was the Initial   *00277000
                         Pthread Task, used by BPXPRMPC to check for   *00278000
                         IPT cleanup                                    00279000
OTCBPROCESSCREATOR EQU X'08' 1=>Indicates the dubbing of this thread   *00280000
                         caused the creation of the process             00281000
OTCBCANCELINTR EQU X'04' Cancel interrupt point                         00282000
OTCBQUIESCEPOSTED EQU X'02' This task posted by qut                     00283000
OTCBDUBNEWPROCESS EQU X'01' 0=>Dub as thread, 1=>Dub as process         00284000
         ORG   OTCBFLAGSB2+1                                            00285000
OTCBFLAGSB3 DS 0B                                                       00286000
OTCBATTACHEXEC EQU X'80' attach_exec in progress                        00287000
OTCBMULTIPROCCLP EQU X'40' 1=> Lower level processes are to be cleaned *00288000
                         up by this thread                              00289000
OTCBACTIVEACEEMANAGED EQU X'20' 1=Active ACEE managed by RACF          *00290000
                         (initACEE)                                     00291000
OTCBTOGGLEACEEMANAGED EQU X'10' 1=Toggled ACEE managed by RACF         *00292000
                         (initACEE)                                     00293000
OTCBSAVEDACEEMANAGED EQU X'08' MrPwd saved ACEE managed                 00294000
OTCBINPROCESSTERM EQU X'04' 1=> When PRTRM is terminating a process.   *00295000
                         Used to tell F.S. Termination when PRTRM is   *00296000
                         cleaning up.                                   00297000
OTCBTASKACEEUSP EQU X'02' USP created by TLS_TASK_ACEE#                 00298000
OTCBMRPWDUIDSET EQU X'01' OtcbMrPwdUID field set                        00299000
         ORG   OTCBFLAGSB3+1                                            00300000
OTCBFLAGSB4 DS 0B                                                       00301000
OTCBPSEUDODUBBED EQU X'80' Thread is a pseudo-dubbed kernel task        00302000
OTCBTASKSEC EQU X'40'    Thread called BPX1TLS to build a task level   *00303000
                         Acee                                           00304000
OTCBENCLAVEOWNER EQU X'20' Thread is an owner of a WLM Enclave          00305000
OTCBWLMEMANAGED EQU X'10' Enclave managed by WLM                        00306000
OTCBTASKACEEINIT EQU X'08' InitUsp done for Task Level ACEE             00307000
OTCBDUBTASKACEE EQU X'04' 0=>Don't Dub Task Level ACEE 1=>Dub Task     *00308000
                         Level ACEE                                     00309000
OTCBPTCREACEE EQU X'02'  0=> No ACEE propagated on Ptcre 1=> ACEE was  *00310000
                         propagated                                     00311000
OTCBPROCINITACEE EQU X'01' 0=> No INITACEE done during dub 1=>         *00312000
                         INITACEE done during dub                       00313000
         ORG   OTCBFLAGS+4                                              00314000
OTCBTHID DS    0CL8      Thread ID                                      00315000
OTCBPPRT DS    0A        -> PPRT                                        00316000
OTCBLIGHTWEIGHT EQU X'80' 1 Light weight thread                         00317000
         ORG   OTCBPPRT+4                                               00318000
OTCBSEQNO DS   0F        Sequence number                                00319000
OTCBSEQNOHIGHERHALF DS H higher half of seq num                         00320000
OTCBSEQNOLOWERHALF DS H  lower half of seq num                          00321000
OTCBSIGFLAGS DS 0BL4     Signal Flags1 that are modified by signal     *00322000
                         IRBs. Serialized by Compare & Swap             00323000
OTCBSIGFLAGSB1 DS 0B                                                    00324000
OTCBSIGDISABLE EQU X'80' Signal Delivery is disabled                    00325000
OTCBSIGPENDING EQU X'40' Signal pending flag                            00326000
OTCBTIMERSIGNAL EQU X'20' SIGXCPU or SIGKILL is to be generated by the *00327000
                         syscall layer. Either OtcbSIGXCPU or          *00328000
                         OtcbSIGKILL is on. This flag exists for       *00329000
                         sycall layer performance.                      00330000
OTCBSIGALRM EQU X'10'    generate in SC layer                           00331000
OTCBALRMACTIVE EQU X'08' ALR & setitimer REAL                           00332000
OTCBIGNRBSTATE EQU X'04' Ignore RB state                                00333000
OTCBSIGDUMP EQU X'02'    Dump for terminating signal                    00334000
OTCBRAISETIMERIRB EQU X'01' Raise() function from Timer IRB             00335000
         ORG   OTCBSIGFLAGSB1+1                                         00336000
OTCBSIGFLAGSB2 DS 0B                                                    00337000
OTCBIRBSIGNAL EQU X'80'  Signal Checker routine should recheck signals *00338000
                         because one of the signal IRBs may have       *00339000
                         changed the signals pending                    00340000
OTCBPTDELAYIRB EQU X'40' Delay IRB for PTRACE                           00341000
OTCBSIRDISABLE EQU X'20' Disable invocation of SIR                      00342000
OTCBCANCELASYNC EQU X'10' Cancelation request state 0 = controlled, 1  *00343000
                         = async                                        00344000
OTCBCANCELDISABLED EQU X'08' Cancelation request type 0=enabled,       *00345000
                         1=disabled                                     00346000
OTCBSETSIGDISABLE EQU X'04' Syscall must turn on OtcbSigDisable on     *00347000
                         return                                         00348000
OTCBCTWACTIVE EQU X'02'  cond_timed_wait (BPX1CTW) is active            00349000
OTCBIGNDLVKEY EQU X'01'  Ignore Dlv key                                 00350000
         ORG   OTCBSIGFLAGSB2+1                                         00351000
OTCBSIGFLAGSB3 DS 0B                                                    00352000
OTCBCANCELPENDING EQU X'80' Cancel pending for thrd                     00353000
OTCBPTREGSINUSTA EQU X'40' Ptrace regs/PSW are in the Usta              00354000
OTCBSIGXCPU EQU X'20'    SIGXCPU is to be generated by syscall layer    00355000
OTCBSIGKILL EQU X'10'    SIGKILL is to be generated by syscall layer    00356000
OTCBSIGVTALRM EQU X'08'  generate in SC layer                           00357000
OTCBSIGPROF EQU X'04'    generate in SC layer                           00358000
OTCBALLSIGSBLOCKED EQU X'02' All signals are blocked, the same as if   *00359000
                         all bits were on in PpstSigMask                00360000
OTCBIR1STIMER EQU X'01'  IR1 has pending stimer                         00361000
         ORG   OTCBSIGFLAGSB3+1                                         00362000
OTCBSIGFLAGSB4 DS 0B                                                    00363000
OTCBVTALRMACTIVE EQU X'80' setitimer VIRTUAL                            00364000
OTCBPROFACTIVE EQU X'40' setitimer PROF                                 00365000
OTCBRETURNPPSD EQU X'20'                                                00366000
OTCBCALLRTM EQU X'10'    CallRTM done by IR1                            00367000
OTCBNOIRB EQU  X'08'     Avoid Irb interrupts                           00368000
OTCBREDRIVE EQU X'04'    IRB redrive is in prog                         00369000
OTCBCPUTIMEOUT EQU X'02' A terminating signal is to be generated due   *00370000
                         to the process time limit being exceeded       00371000
OTCBDLVTERM EQU X'01'    This thread is terminating due to a           *00372000
                         terminating signal                             00373000
         ORG   OTCBSIGFLAGS+4                                           00374000
OTCBSIR2ID DS  F         Alarm ID set by STIMERM. Changed by           *00375000
                         incrementing at start of alarm() and sleep()   00376000
OTCBRACGROUP DS A        Pointer to RACF structure to be deleted by    *00377000
                         next getgr* call                               00378000
OTCBRACPASSWD DS A       Pointer to RACF structure to be deleted by    *00379000
                         next getpw* call                               00380000
OTCBCOMMREQ DS 0A        Address of communications resource associated *00381000
                         with this task (only valid when there is an   *00382000
                         active request)                                00383000
OTCBCALLRTMECB DS CL4    Wait for termination by BpxLkLcp               00384000
OTCBPTMULTISTATUS DS B   Ptrace multi process mode status word value - *00385000
                         will be one of the WastStopFlag... values      00386000
OTCBFLAGS2 DS  0CL3      2nd Set of flags                               00387000
OTCBFLAGS2B1 DS 0B                                                      00388000
OTCBSTAXDEFERRED EQU X'80' Stax defer performed                         00389000
OTCBLUKWKEY0 EQU X'40'   User Kernwait caller is KEY 0                  00390000
OTCBKSERWAITINGF EQU X'20' Is Kser waiting?                             00391000
OTCBAFFINPGMRUNNING EQU X'10' An IPT/thread affinity program is        *00392000
                         running on this thread, do no joblogging       00393000
OTCBREGSINPPSD EQU X'08' User regs are in Ppsd at time of              *00394000
                         Freeze_This_Thread                             00395000
OTCBREGSINIRB EQU X'04'  User regs are in IRB at time of               *00396000
                         Freeze_This_Thread                             00397000
OTCBTIMEDKERNWAIT EQU X'02' Task is in Timed Kernwait                   00398000
OTCBSLOWPATHSYSCALL EQU X'01' This is a slow-path syscall. User regs   *00399000
                         are in USTA                                    00400000
         ORG   OTCBFLAGS2B1+1                                           00401000
OTCBFLAGS2B2 DS 0B                                                      00402000
OTCBOSENVACTIVE EQU X'80' Task is active in the osenv                   00403000
OTCBOSENVGET EQU X'40'   Task issued osenv_get                          00404000
OTCBOSENVWLMJOIN EQU X'20' Task is joined to a WLM enclave as a result *00405000
                         of osenv_set                                   00406000
OTCBOSENVSECURITY EQU X'10' Security environment was saved by osenv     00407000
OTCBCHKPTUNSAFE EQU X'08' Task is checkpoint unsafe due to being in    *00408000
                         kernel                                         00409000
OTCBINRSTWAIT EQU X'04'  Task is waiting for OMVS to be restarted       00410000
OTCBDORSTWAIT EQU X'02'  Fastpath syscall requests task be put in      *00411000
                         restart wait                                   00412000
OTCBSPBUPDATE EQU X'01'  Used for SPB/IR1 serialization                 00413000
         ORG   OTCBFLAGS2B2+1                                           00414000
OTCBFLAGS2B3 DS 0B                                                      00415000
OTCBDEFERSIGS EQU X'80'  Defer sigs is in effect                        00416000
OTCBLATCHPROBLEM EQU X'40' Latch Cleanup Problem detected at           *00417000
                         termination time                               00418000
OTCBF2_ATTACHEDTASK EQU X'20' This task has done a localspawn or       *00419000
                         attach                                         00420000
OTCBPTHDFORKCHILD EQU X'10' This child process was created via fork    *00421000
                         from a pthread                                 00422000
OTCBUSERACEEUSP EQU X'08' ACEE/USP belongs to User, not created by     *00423000
                         kernel                                         00424000
OTCBF2_STAYCLEAN EQU X'04' Task must stay clean                         00425000
OTCBF2_STEPCLPDELAYED EQU X'02' Steplib cleanup delayed                 00426000
OTCBF2_OPENUNAUTH EQU X'01' On fsopn, ignore auth                       00427000
         ORG   OTCBFLAGS2+3                                             00428000
OTCBALRMGTYEAR DS F      Alarm time in seconds greater than 365 days   *00429000
                         used by alarm() and sleep() functions          00430000
OTCBCOFPTR DS  A         Address of CopyOnFork area                     00431000
OTCBDLVIRB DS  A         Address of RB that called Signal Delivery      00432000
OTCBDUBRBSQN DS F        Sequence number of RB that was DUBed           00433000
OTCBREGRBSQN DS F        Sequence number of RB that registered for     *00434000
                         signals                                        00435000
OTCBSXIB DS    A         Address of Sxib (may be zero, allocated on    *00436000
                         first use)                                     00437000
OTCBSYSCALLCODE DS F     System call number                             00438000
OTCBLECB DS    A         Ptr to ECB used to wait for a latch to be     *00439000
                         obtained                                       00440000
OTCBPPSDPTR DS 0A        -> PPSD                                        00441000
OTCBPPSD DS    A         -> PPSD                                        00442000
OTCBCTWID DS   F         cond_timed_wait stimerm ID                     00443000
OTCBSTACKNONSW DS A      Dynamic stack for Non-space switched          *00444000
                         syscalls. Only valid when OTCBSYSCALLCODE is  *00445000
                         non-zero. Contains address of 1st #SAMAP area *00446000
                         following RUCA. Addressable in user home      *00447000
                         space.                                         00448000
OTCBOTIM DS    A         -> interval timers                             00449000
OTCBOAPB DS    A         -> OAPB                                        00450000
OTCBPTPICPARMSPTR DS A   Pointer to ptrace recovery environment        *00451000
                         parameters (PIC parms                          00452000
OTCBPTEVENTID DS F       Ptrace event ID, that identifies why this     *00453000
                         thread stopped for ptrace                      00454000
OTCBPTLCLPPSDPTR DS A    Ptrace local Ppsd pointer                      00455000
OTCBMVSPAUSEECBLIST DS A Pointer to the BPXZECBL - System copy of user *00456000
                         ECB addresses passed to MVSpauseInit           00457000
OTCBSAVEDSCB DS A        Saved SCB addr of STAI on entry to Local      *00458000
                         Child Process                                  00459000
OTCBUECBLIST DS A        Pointer to the BPXZECBL - System copy of user *00460000
                         and system ECBs address for the BPXLUKW -     *00461000
                         User KernWait service                          00462000
OTCBUIDS DS    0CL12     User IDs for Thread                            00463000
OTCBRUID DS    F         Real Uid                                       00464000
OTCBEUID DS    F         Effective Uid                                  00465000
OTCBSUID DS    F         Saved Uid                                      00466000
OTCBSAVEDACEE DS A       MRPWD saved Acee                               00467000
OTCBPPRX DS    A         Address of the Pprx, an extension of the Pprt  00468000
OTCBMRPWDUID DS F        Password verified UID                          00469000
OTCBPSWBYT03 DS F        Caller's PSW bytes 0-4 (Used by JCPR to setup *00470000
                         BPXZUSTA)                                      00471000
OTCBMRPWDUSERNAME DS CL8 Password verified userid                       00472000
OTCBSAVEDSECENV DS A     Pointer to ACEE saved by BPX1ENV for a toggle *00473000
                         request                                        00474000
OTCBMVSUSERIDPTR DS A    Pointer to userid of this thread, points to   *00475000
                         either OtcbLoginNInfo or OasbLoginNInfo        00476000
OTCBLOGINNINFO DS 0CL13  Task userid and length                         00477000
OTCBLOGINNLEN DS F       Task userid length                             00478000
OTCBLOGINNAME DS CL9     Tasks userid, must be '00'x (null)            *00479000
                         terminated. Preceding length does not include *00480000
                         ' terminating null                             00481000
OTCBPRIN2FLAGS DS B      This field is modified by BPXPRIN1, and it is *00482000
                         used by BPXPRIN2. See PPSQ for the mapping    *00483000
                         and more details                               00484000
OTCBFLAGS3 DS  0BL2      More flag bits                                 00485000
OTCBF3B1 DS    0B                                                       00486000
OTCBTIMERWAITINTERMINATION EQU X'80' Task cannot exit because it has   *00487000
                         the process level timer for SUSv3 behavior     00488000
OTCBTIMERCANCELSKIPPED EQU X'40' Did not cancel the timer in BPXJCPR   *00489000
                         because it is still needed to generate the    *00490000
                         SIGALRM                                        00491000
OTCBFORCECANCELED EQU X'20' A CALLRTM has been scheduled for this      *00492000
                         thread to force cancel it. BPXPTXAG must not  *00493000
                         allow it to exit so we do not reuse the TCB   *00494000
                         before the cancel is done.                     00495000
OTCBSPMUSECALLERSBLKMASK EQU X'10' BPX1SPM should use the new blocking *00496000
                         mask as specified by the caller                00497000
OTCBFASTCGIACTIVE EQU X'08' A FastCGI operation is in progress          00498000
OTCBALLOWSYSCALLS EQU X'04' Allow Syscalls through JCPR even if the    *00499000
                         thread has PT_Exited                           00500000
OTCBDONOTABENDFOROUTOFSTACK EQU X'02' Do not ABEND x-mem syscall when  *00501000
                         out of stack cells, use STORAGE OBTAIN         00502000
OTCBSETUIDGIDPRIVGAIN EQU X'01' Gained Setuid or Setgid Priv executing *00503000
                         target program                                 00504000
         ORG   OTCBF3B1+1                                               00505000
OTCBF3B2 DS    0B                                                       00506000
OTCBPRGRU2PRTIM EQU X'80' PRGRU calling PRTIM                           00507000
OTCBFREESTACK EQU X'40'  Free stack on exit from syscall layer          00508000
OTCBCLEANUPTASK EQU X'20' This task needs to clean up lower level      *00509000
                         tasks                                          00510000
OTCBPRIVCKSTC EQU X'10'  1=address space is a started task (priv path  *00511000
                         ck)                                            00512000
OTCBPRIVCKMSC EQU X'08'  1=must stay clean priv                         00513000
OTCBPRIVCKAPF EQU X'04'  1=AFP auth priv                                00514000
OTCBF3B2RSVD EQU X'03'   Reserved - see below                           00515000
         ORG   OTCBFLAGS3+2                                             00516000
OTCBTHLI DS    A         -> Thli. This field must never change offsets *00517000
                         within the Otcb since the Thli is an external *00518000
                         control block and the user will have to go    *00519000
                         through the Otcb to get to the Thli            00520000
OTCBACTSCTBNODEPTR DS A  Active Acee SCTB node ptr, zero if ACEE is    *00521000
                         private                                        00522000
OTCBTOGGLEDSCTBNODEPTR DS A Toggled Acee SCTB node ptr, zero if ACEE   *00523000
                         is private                                     00524000
OTCBPAG  DS    F         Process Auth Groups                            00525000
OTCBGIDS DS    0CL12     Group IDs for Thread                           00526000
OTCBRGID DS    F         Real Gid                                       00527000
OTCBEGID DS    F         Effective Gid                                  00528000
OTCBSGID DS    F         Saved Gid                                      00529000
OTCBRACGIDSPTR DS A      Addr of saved group list                       00530000
OTCBWLMETOKEN DS BL8     WLM Enclave token associated with the thread   00531000
OTCBSAVEDGID DS F        Gid set by getpwname, used by setgid           00532000
OTCBALIASNINFO DS 0CL13                                                 00533000
OTCBALIASNLEN DS F       Task alias length                              00534000
OTCBALIASNAME DS CL9     Tasks alias, must be '00'x (null) terminated. *00535000
                         Preceding length does not include '           *00536000
                         terminating null                               00537000
         DS    CL3       Reserved, keep word bdy                        00538000
OTCBOSENVTOKEN DS 0CL8   osenv environment token                        00539000
OTCBOSENVCELLPTR DS A    Ptr to osenv environment cell element          00540000
OTCBOSENVSEQN DS F       seq number associated with the osenv cell      00541000
OTCBREDRIVETIME DS F     Time to delay signal IRB                       00542000
OTCBSHLLOADERINFO DS 0CL48 Shared Library data                          00543000
OTCBSHLLOADER1DSPADDR DS A Shared Library loader data1 addr in data    *00544000
                         space                                          00545000
OTCBSHLLOADER1DSPPAGES DS F Shared Library loader data1 len in data    *00546000
                         space                                          00547000
OTCBSHLLOADER1DSPALET DS F Shared Library loader data1 alet of data    *00548000
                         space                                          00549000
OTCBSHLLOADER1DSPSTOKEN DS CL8 Shared Library loader data1 stkn of     *00550000
                         data space                                     00551000
OTCBSHLLOADER2DSPADDR DS A Shared Library loader data1 addr in data    *00552000
                         space                                          00553000
OTCBSHLLOADER2DSPPAGES DS F Shared Library loader data1 len in data    *00554000
                         space                                          00555000
OTCBSHLLOADER2DSPALET DS F Shared Library loader data1 alet of data    *00556000
                         space                                          00557000
OTCBSHLLOADER2DSPSTOKEN DS CL8 Shared Library loader data1 stkn of     *00558000
                         data space                                     00559000
OTCBSHLLOADERTOK DS CL8  Shared Library loader token len used by       *00560000
                         BPXXSHLB INIT                                  00561000
OTCBSMKLATCHFLAGCOUNT DS F OcvtSMKLatchCount incremented                00562000
OTCBSAVEPPRT DS A        Addr of Pprt saved during task term when      *00563000
                         OtcbPprt is changed so that BPXMIPCE can find *00564000
                         real Pprt of running task                      00565000
OTCBSYSCALLSTART DS BL8  Start Timeused Value for active syscall        00566000
OTCBPECBPTR DS A         Prt to a PECB                                  00567000
OTCBSAVEDOAPB DS A       OAPB addr saved for steplib cleanup during    *00568000
                         task term                                      00569000
OTCBRMTOKTOASB DS BL4    ResManager Token saved for job step task      *00570000
                         reinit                                         00571000
OTCBTHDWKPTR DS A        Ptr to Thread Workarea                         00572000
OTCBSIGNALPD DS 0CL12    Putback Counters:                              00573000
*                                                                       00574000
*      ***************************************************************  00575000
*      *                                                             *  00576000
*      * If PutBackCnt is equal to PutBackDlvCnt then LE owns it. If *  00577000
*      * PutBackCnt is greater than PutBackDlvCnt by 1, then the     *  00578000
*      * Kernel owns it and it should be pending in the kernel. And  *  00579000
*      * otherwise, if not any of those cases, there is a problem.   *  00580000
*      *                                                             *  00581000
*      ***************************************************************  00582000
*                                                                       00583000
*                                                                       00584000
OTCBPUTBACKCNT DS H                                                     00585000
OTCBPUTBACKDLVCNT DS H                                                  00586000
         DS    CL1       Reserved                                       00587000
OTCBPUTBACKSIG DS X      This will be the last signal number that was  *00588000
                         put back                                       00589000
OTCBNSIR1LEAVERS DS BL2  NSIR1 internal reason code                     00590000
OTCBNSIR1FOOTPRINTS DS BL2 Footprints, to keep a                        00591000
OTCBNSIR1FOOTPRINTS2 DS BL2 Copy over BPXNSIR1's static record of the  *00592000
                         last Async interrupt                           00593000
OTCBSUTARGPROCUSER DS F  ProcUser value for target uid of setuid        00594000
         DS    CL4       Reserved for future use                        00595000
OTCBMISCDATA DS 0CL24                                                   00596000
         ORG   OTCBMISCDATA                                             00597000
OTCBADDITIONALPARMS DS 0CL24 This area can be used to return           *00598000
                         additional parameters from a syscall. The     *00599000
                         syscall invoker must make a copy of these     *00600000
                         parameters before making another syscall as   *00601000
                         this area maybe reused by any subsequent      *00602000
                         syscall                                        00603000
OTCBADDITIONALPARM1 DS 0FL8                                             00604000
OTCBADDPARM1H DS F                                                      00605000
OTCBADDPARM1L DS F                                                      00606000
OTCBADDITIONALPARM2 DS 0FL8                                             00607000
OTCBADDPARM2H DS F                                                      00608000
OTCBADDPARM2L DS F                                                      00609000
OTCBADDITIONALPARM3 DS FL8                                              00610000
         ORG   OTCBMISCDATA                                             00611000
OTCBEXECSTATINFO DS 0CL24 Stat Info from Exec                           00612000
OTCBEXECSTATMTIME DS F   File Modification Time                         00613000
OTCBEXECSTATDEV DS F     File Device ID                                 00614000
OTCBEXECSTATFID DS CL8   File FID                                       00615000
         DS    CL8       Reserved                                       00616000
*                                                                       00617000
*   APPLID value specified on __passwd_applid call                      00618000
*                                                                       00619000
*                                                                       00620000
OTCBAPPLID_INFO DS 0CL9                                                 00621000
OTCBAPPLIDLEN DS CL1     Length of APPLID                               00622000
OTCBAPPLID DS  CL8       APPLID - left justified and padded with       *00623000
                         blanks                                         00624000
OTCBMRPWDICR DS 0CL16    ICR saved by __passwd                          00625000
OTCBMRPWDICRU DS CL8     ICR user parameter                             00626000
OTCBMRPWDICRP DS CL8     ICR pass parameter, this is not a password,   *00627000
                         see RACF ICR definition for details            00628000
OTCBFLAGS5 DS  0CL1                                                     00629000
OTCBFLAGS5B1 DS 0B                                                      00630000
OTCBOSI1STACKINUSE EQU X'80' OtcbOSI1Stack64 in use                     00631000
OTCBOSI2STACKINUSE EQU X'40' OtcbOSI2Stack64 in use                     00632000
OTCBPRESCXDONE EQU X'20' 1 = The pre-syscall exits were called for the *00633000
                         current syscall                                00634000
OTCBNOSCXS EQU X'10'     1 = Stop syscalls made from a syscall exit    *00635000
                         from driving exits again to prevent recursion  00636000
OTCBSCXFAILSYSCALL EQU X'08' 1 = A pre-syscall exit returned a         *00637000
                         non-zero return code requesting that the      *00638000
                         syscall should fail                            00639000
         ORG   OTCBFLAGS5+1                                             00640000
OTCBLSEPASN DS H         Pasn of LSE caller                             00641000
OTCBLSETYPE DS F         LSE type NSIR1 interrupt                       00642000
OTCBLSECALLER DS FL8     LSE caller                                     00643000
OTCBDUBRBADDR DS A                                                      00644000
OTCBREGRBADDR DS A                                                      00645000
OTCBSPB@ DS    AD        Ptr to SPB. For BPXJCSS and BPXJCNS calls,    *00646000
                         the ALET for this SPB is PRIMARY. For         *00647000
                         BPXJCSA, the ALET is HOME.                     00648000
OTCBTHREADWORKAREA DS AD Below the bar workarea, 64bit so top half of  *00649000
                         G64R13 gets zero'd                             00650000
OTCBSYSCALLSTACK64 DS AD Syscall stack                                  00651000
OTCBOSI1STACK64 DS AD    OSI 1 stack                                    00652000
OTCBOSI2STACK64 DS AD    OSI 2 stack                                    00653000
OTCBCTRACESTACK64 DS AD  Ctrace stack                                   00654000
OTCBNESTEDSTACK64 DS AD  Nested syscall stack                           00655000
*                                                                       00656000
*   NSDLV1 NSDLV2 and NSSCU Stack fields are set for debug purposes     00657000
*                                                                       00658000
*                                                                       00659000
OTCBNSDLV1STACK DS AD    BPXNSDLV stack                                 00660000
OTCBNSDLV2STACK DS AD    Nested BPXNSDLV stack                          00661000
OTCBNSSCUSTACK DS AD     BPXNSSCU stack                                 00662000
OTCBCTR64STOBSTACK DS AD BPXCTR64 storage OBTAINed stack (debug only)   00663000
OTCBPTRACESTACK64 DS AD  Ptrace stack from IRB                          00664000
OTCBPTRACEFN1PPSD DS A   Address of extra PPSD for FN1 to serialize    *00665000
                         real PPSD                                      00666000
         DS    CL28      reserved                                       00667000
*                                                                       00668000
*                                                                       00669000
*     NOTE: The size of this control block is retrieved dynamically     00670000
*           during runtime by the modules that need it.                 00671000
*           When adding additional fields to this control block,        00672000
*                                                                       00673000
*     ====> THE ONLY MODULE THAT *MUST* BE RECOMPILED IS BPXPRIT        00674000
*                                                                       00675000
*                                                                       00676000
*                                                                       00677000
OTCB_END DS    0C        Make CB end on doubleword                      00678000
OTCB_LEN EQU   *-OTCB                                                   00679000
.L0002   ANOP                                                           00680000
         AIF   ('&OTCBCOPYONFORK' EQ 'NO').L0005                        00681000
         AIF   ('&DSECT' EQ 'YES').L0006                                00682000
         AIF   ('&OTCBCOPYONFORK' NE 'YES').L0005                       00683000
.L0006   ANOP                                                           00684000
*                                                                       00685000
* ********************************************************************  00686000
* *                                                                  *  00687000
* * NOTE: The "OtcbCopyOnFork" is contiguous to the end of the Otcb. *  00688000
* *       IPCS modules respecify its base on the address of Otcb_End *  00689000
* *       because the field OtcbCofPtr does NOT contain an address   *  00690000
* *       that is usable by IPCS without another ?ASAXACC.           *  00691000
* *                                                                  *  00692000
* ********************************************************************  00693000
*                                                                       00694000
*                                                                       00695000
         AIF   ('&DSECT' EQ 'YES').L0007                                00696000
OTCBCOPYONFORK DS 0D     These fields will be copied to the child Otcb *00697000
                         on fork()                                      00698000
         AGO   .L0008                                                   00699000
.L0007   ANOP                                                           00700000
OTCBCOPYONFORK DSECT     These fields will be copied to the child Otcb *00701000
                         on fork()                                      00702000
.L0008   ANOP                                                           00703000
OTCBSYSCALLENTRYSTATUS DS A Ptr to regs and stuff at entry to the      *00704000
                         syscall layer                                  00705000
OTCBUSTAPTR DS A         Pointer to user status area containing the    *00706000
                         syscall issuer's regs and PSW. (Mapped by     *00707000
                         BPXZUSTA. Used by ptrace.)                     00708000
OTCBGROUPDBSEARCH DS CL8 Group name for group data base search         *00709000
                         (getgrent)                                     00710000
OTCBUSERDBSEARCH DS CL8  User name for user data base search           *00711000
                         (getpwent)                                     00712000
OTCBSTORAGEFORCPR DS A   Dynamic area for BPXJCPR                       00713000
OTCBSTORAGEFORCPRKEY DS X Storage key of dynamic area for JCPR          00714000
OTCBSTORAGEFORCPRLEN DS FL3 Length of JCPR dynamic area                 00715000
OTCBSTORAGEFORCPRSP DS X Storage SP of dynamic area                     00716000
OTCBCOPYFLAGS DS 0B      Copy on Fork Flags                             00717000
OTCBSETUIDEXEC EQU X'80' Setuid Exec in progress                        00718000
OTCBMVSAUTHLIB EQU X'40' Pgm loaded from MVS authorized library by     *00719000
                         exec/execmvs                                   00720000
OTCBEXECPROCESS EQU X'20' This process image was created by            *00721000
                         exec/execmvs                                   00722000
OTCBSIGPOSTINPC EQU X'10' Sig IRB will post ThliComECB even when a     *00723000
                         Linkage Stack is detected, signal will be     *00724000
                         rescheduled for future delivery                00725000
OTCBPOEATTRSET EQU X'08' The OtcbPoeAttr have been set by __poe         00726000
OTCBPOEFROMUSERDATA EQU X'04' 1=POE data supplied by was user           00727000
         ORG   OTCBCOPYFLAGS+1                                          00728000
         DS    CL2       Reserved                                       00729000
OTCBDAEMONINFO DS 0CL12  This info will be set and reused to improve   *00730000
                         performance by bypassing multiple RACF calls  *00731000
                         for the same info                              00732000
OTCBSAVEDUID DS F        Remembered UID                                 00733000
OTCBSAVEDUSERNAME DS CL8 Remembered UserID                              00734000
OTCBWLMUSERDATAINFO DS 0CL16 WLM Server information. These fields are  *00735000
                         needed to manage the application data and     *00736000
                         file descriptor list. A single area is        *00737000
                         obtained for both needs. The area is pointed  *00738000
                         to by OtcbWLMUserDataPtr. The application     *00739000
                         data is always first in the area followed by  *00740000
                         the FDL area.                                  00741000
OTCBWLMUSERDATAPTR DS A  Address of user data storage                   00742000
OTCBWLMUSERDATALEN DS F  Length of user data storage -- the entire     *00743000
                         area                                           00744000
OTCBWLMUSERDATAKEY DS X  Key of user data area                          00745000
         DS    CL3       reserved                                       00746000
OTCBWLMAPPLLEN DS F      Length of the application data portion of the *00747000
                         user data area. The file descriptors occupy   *00748000
                         the remainder of the user data area            00749000
OTCBSMFBUFFPTR DS A      Address of key 0 copy of user SMF record       00750000
OTCBSMFBUFFLEN DS F      Length of key 0 copy of user SMF record        00751000
OTCBPOEATTR DS 0CL96     __poe() port of entry info                     00752000
OTCBPOEPEERIPADDR DS 0CL16 Peer IP Address                              00753000
OTCBPOEPEERIPV6PREFIX DS CL12                                           00754000
OTCBPOEPEERIPV4ADDR DS F                                                00755000
OTCBPOETERMID DS CL8     TERMINAL Profile Name                          00756000
OTCBPOELABEL DS CL8      Security Label of poe                          00757000
OTCBPOEPROFILE DS CL64   SERVAUTH Profile Name                          00758000
OTCBUNICODE DS 0CL12     Unicode environment                            00759000
OTCBUNICODETECH DS CL8   _BPXK_UNICODE_TECHNIQUE                        00760000
OTCBUNICODEFLAGS DS 0BL4                                                00761000
OTCBAUTOCVTSET EQU X'80' OtcbAutoCvt/All valid                          00762000
OTCBAUTOCVT EQU X'40'    Enhanced ASCII enabled via BPX1FCT or BPX1ENV  00763000
OTCBAUTOCVTALL EQU X'20' UNICODE enabled via BPX1FCT or BPX1ENV         00764000
OTCBUNICODESUB EQU X'10' _BPXK_UNICODE_SUB=YES,NO                       00765000
OTCBUNICODEMAL EQU X'08' _BPXK_UNICODE_MAL=YES,NO                       00766000
         DS    X                                                        00767000
OTCBPCCSID DS  H         Program CCSID for I/O translation              00768000
*                                                                       00769000
*      ***************************************************************  00770000
*      *                                                             *  00771000
*      * NOTE: The size of this control block is retrieved           *  00772000
*      * dynamically during runtime by the modules that need it. When*  00773000
*      * adding additional fields to this control block, ===> THE    *  00774000
*      * ONLY MODULE THAT *MUST* BE RECOMPILED IS BPXPRIT               00775000
*      *                                                             *  00776000
*      ***************************************************************  00777000
*                                                                       00778000
*                                                                       00779000
         ORG   OTCBUNICODE+12                                           00780000
         DS    CL4                                                      00781000
OTCBCOFEND DS  0C        Make CB end on dword                           00782000
OTCBCOPYONFORK_LEN EQU *-OTCBCOPYONFORK                                 00783000
.L0005   ANOP                                                           00784000
         AIF   ('&OTCBRACGIDS' EQ 'NO').L0009                           00785000
         AIF   ('&DSECT' EQ 'YES').L000A                                00786000
         AIF   ('&OTCBRACGIDS' NE 'YES').L0009                          00787000
.L000A   ANOP                                                           00788000
*                                                                       00789000
*    *****************************************************************  00790000
*    *                                                               *  00791000
*    * **** This is end of "OtcbCopyOnFork" area ****                *  00792000
*    *                                                               *  00793000
*    *****************************************************************  00794000
*                                                                       00795000
*                                                                       00796000
*                                                                       00797000
*    *****************************************************************  00798000
*    *                                                               *  00799000
*    * The following based area is used by BPXPRGUG and BPXPRSGR. A  *  00800000
*    * copy of the last getgroupsbyname will be saved here if done   *  00801000
*    * after a __passwd() with the same name.                           00802000
*    *                                                               *  00803000
*    *****************************************************************  00804000
*                                                                       00805000
*                                                                       00806000
         AIF   ('&DSECT' EQ 'YES').L000B                                00807000
OTCBRACGIDS DS 0F                                                       00808000
         AGO   .L000C                                                   00809000
.L000B   ANOP                                                           00810000
OTCBRACGIDS DSECT                                                       00811000
.L000C   ANOP                                                           00812000
OTCBRACGIDSHEADER DS 0CL8                                               00813000
OTCBRACGIDSTOTNUM DS F                                                  00814000
OTCBRACGIDSCURNUM DS F                                                  00815000
OTCBRACGIDSLIST DS F                                                    00816000
OTCBRACGIDS_LEN EQU *-OTCBRACGIDS                                       00817000
.L0009   ANOP                                                           00818000
         AIF   ('&OTCBFLAGS3WORD' EQ 'NO').L000D                        00819000
         AIF   ('&DSECT' EQ 'YES').L000E                                00820000
         AIF   ('&OTCBFLAGS3WORD' NE 'YES').L000D                       00821000
.L000E   ANOP                                                           00822000
*                                                                       00823000
*    *****************************************************************  00824000
*    *                                                               *  00825000
*    * The following bits are updated using CS, which require a word *  00826000
*    * boundary. Instead of defining a new word, OtcbFlags3 is       *  00827000
*    * remapped here - for Recover=Latches support.                  *  00828000
*    *                                                               *  00829000
*    *****************************************************************  00830000
*                                                                       00831000
*                                                                       00832000
         AIF   ('&DSECT' EQ 'YES').L000F                                00833000
OTCBFLAGS3WORD DS 0F                                                    00834000
         AGO   .L0010                                                   00835000
.L000F   ANOP                                                           00836000
OTCBFLAGS3WORD DSECT                                                    00837000
.L0010   ANOP                                                           00838000
         DS    BL3       Reserved                                       00839000
OTCBFLAGS3F3B2 DS 0B     Flags3 byte 2                                  00840000
OTCBSELECTEDTOTERMINATE EQU X'02' LkLcp will cancel                     00841000
OTCBNOTCRITICALREGION EQU X'01' LkLcp can cancel                        00842000
OTCB#ID  EQU   C'OTCB'   Control Block Acronym                          00843000
OTCB#LEN EQU   744                                                      00844000
*                                                                       00845000
*                                      Length of OTCB                   00846000
*                                                                       00847000
OTCB#ONLYLEN EQU 560     Length of OTCB only                            00848000
OTCB#SP  EQU   230       Subpool for the OTCB                           00849000
         ORG   OTCBFLAGS3WORD+4                                         00850000
OTCBFLAGS3WORD_LEN EQU *-OTCBFLAGS3WORD                                 00851000
.L000D   ANOP                                                           00852000
         AIF   ('&ZCBPRINT' EQ 'NO').P3                                 00853000
         AIF   ('&LIST' EQ 'YES').P4                                    00854000
.P3      ANOP                                                           00855000
         POP   PRINT                                                    00856000
.P4      ANOP                                                           00857000
.P_EXIT  ANOP                                                           00858000
         MEND                                                           00859000
**/ BPXZOTCB_2:;                                                        00860000
* %BPXZOTCB_INCLUDED = 'YES';                                           00861000
* %DCL ZCBPRINT CHAR EXT;                                               00862000
* %DEACTIVATE ZCBPRINT;                                                 00863000
* %DCL BPXZOTCB_LIST CHAR EXT;                                          00864000
* %DEACTIVATE BPXZOTCB_LIST;                                            00865000
* %IF BPXZOTCB_LIST ^= 'NO' &                                           00866000
*    ZCBPRINT ^= 'NO' %THEN                                             00867000
*   %GOTO BPXZOTCB_3;                                                   00868000
*   @LIST PUSH NOECHO;                                                  00869000
*   @LIST NOASSEMBLE NOECHO;                                            00870000
*   @LIST OFF C NOECHO;                                                 00871000
* %BPXZOTCB_3:;                                                         00872000
*/* Start of PL/X Source                                             */ 00873000
*%IF OTCBBASE='' %THEN                                                  00874000
*  %DO;                                                                 00875000
*    %OTCBBASE='BASED(StcbOtcb)';                                       00876000
*  %END;                                                                00877000
* %IF OTCBBASE='BASED(OtcbPtr)' %THEN                                   00878000
*   %DO;                                                                00879000
*     DCL OtcbPtr Ptr(31);           /* Pointer to the OTCB          */ 00880000
*   %END;                                                               00881000
*DCL                                                                    00882000
* 1    Otcb                OTCBBASE   Bdy(DWord),                       00883000
*  3   OtcbID              Char(4),   /* EBCDIC ID - OTCB            */ 00884000
*  3   OtcbSP              Fixed(8),  /* Subpool number of this OTCB */ 00885000
*  3   OtcbLen             Fixed(24), /* Length of this OTCB         */ 00886000
*  3   OtcbPtxl            Ptr(31),   /* -> pthread parameters   @D5C*/ 00887000
*  3   OtcbKser            Ptr(31),   /* -> KSER                     */ 00888000
*  3   OtcbFlags           Bit(32) Bdy(Word), /* Compare and swap flg*/ 00889000
*   4  OtcbFlagsB1         Bit(8),    /*                             */ 00890000
*    7 OtcbInitialThread   Bit(01),   /* Initial thread of a process */ 00891000
*    7 OtcbInKernelCall    Bit(01),   /* moved to PPRT               */ 00892000
*    7 OtcbSleep           Bit(01),   /* Signal sleep() flag which is   00893000
*                                        checked by pause().         */ 00894000
*    7 OtcbCalledKernel    Bit(01),   /* At sometime in its life, this  00895000
*                                        thread has made a system       00896000
*                                        call                     /CS*/ 00897000
*    7 OtcbNoPtlSir        Bit(01),   /* Signal is being sent from the  00898000
*                                        ptrace PtlSir (Ptrace Signal   00899000
*                                        Interface Routine), so signal  00900000
*                                        delivery should not deliver    00901000
*                                        the signal to the PtlSir if    00902000
*                                        ptrace mode is on (we're       00903000
*                                        already there)              */ 00904000
*    7 OtcbProcessCleanup  Bit(01),   /* Process being torn down. /CS*/ 00905000
*    7 OtcbinTaskTerm      Bit(01),   /* Thread is in the process of    00906000
*                                        task termination.  Set by      00907000
*                                        BPXRRTRM during task term   */ 00908000
*    7 OtcbBypassRACF      Bit(01),   /* Do not do RACF check in kill() 00909000
*                                        routine                 @P1A*/ 00910000
*   4  OtcbFlagsB2         Bit(8),    /*                             */ 00911000
*    7 OtcbPtExitOnly      Bit(01),   /* Thread did XAG exitonly @P6C*/ 00912000
*    7 OtcbThreadPtexited  Bit(01),   /* Marked Ptexited         @D5A*/ 00913000
*    7 OtcbF_PwdSurrogate  Bit(01),   /* Need to audit access to        00914000
*                                        surrogate profile       @08A*/ 00915000
*    7 OtcbIPT             Bit(01),   /* Indicates this thread is or    00916000
*                                        was the Initial Pthread Task,  00917000
*                                        used by BPXPRMPC to check for  00918000
*                                        IPT cleanup             @D7A*/ 00919000
*    7 OtcbProcessCreator  Bit(01),   /* 1=>Indicates the dubbing       00920000
*                                        of this thread caused the      00921000
*                                        creation of the process @DIA*/ 00922000
*    7 OtcbCancelIntr      Bit(01),   /* Cancel interrupt point  @D5A*/ 00923000
*    7 OtcbQuiescePosted   Bit(01),   /* This task posted by qut @D7A*/ 00924000
*    7 OtcbDubNewProcess   Bit(01),   /* 0=>Dub as thread,              00925000
*                                        1=>Dub as process       @L1C*/ 00926000
*   4  OtcbFlagsB3         Bit(8),    /*                             */ 00927000
*    7 OtcbAttachExec      Bit(01),   /* attach_exec in progress @L1A*/ 00928000
*    7 OtcbMultiProcClp    Bit(01),   /* 1=> Lower level processes      00929000
*                                        are to be cleaned up by this   00930000
*                                        thread                  @P7A*/ 00931000
*    7 OtcbActiveAceeManaged Bit(1),  /* 1=Active ACEE managed by RACF  00932000
*                                        (initACEE)              @PHA*/ 00933000
*    7 OtcbToggleAceeManaged Bit(1),  /* 1=Toggled ACEE managed by RACF 00934000
*                                        (initACEE)              @PHA*/ 00935000
*    7 OtcbSavedAceeManaged Bit(1),   /* MrPwd saved ACEE managed       00936000
*                                                                @PHA*/ 00937000
*    7 OtcbInProcessTerm   Bit(1),    /* 1=> When PRTRM is terminating  00938000
*                                        a process.  Used to tell F.S.  00939000
*                                        Termination when PRTRM is      00940000
*                                        cleaning up.            @P9A*/ 00941000
*    7 OtcbTaskAceeUsp     Bit(1),    /* USP created by                 00942000
*                                        TLS_TASK_ACEE#          @E4C*/ 00943000
*    7 OtcbMrPwdUIDSet     Bit(1),    /* OtcbMrPwdUID field set  @DHA*/ 00944000
*   4  OtcbFlagsB4         Bit(8),    /*                             */ 00945000
*    7 OtcbPseudoDubbed    Bit(1),    /* Thread is a pseudo-dubbed      00946000
*                                        kernel task             @PDA*/ 00947000
*    7 OtcbTaskSec         Bit(1),    /* Thread called BPX1TLS to build 00948000
*                                        a task level Acee       @PEA*/ 00949000
*    7 OtcbEnclaveOwner    Bit(1),    /* Thread is an owner of a WLM    00950000
*                                        Enclave                 @DNA*/ 00951000
*    7 OtcbWLMEManaged     Bit(1),    /* Enclave managed by WLM  @DMA*/ 00952000
*    7 OtcbTaskAceeInit    Bit(1),    /* InitUsp done for Task Level    00953000
*                                        ACEE                    @01A*/ 00954000
*    7 OtcbDubTaskAcee     Bit(1),    /* 0=>Don't Dub Task Level ACEE   00955000
*                                        1=>Dub Task Level ACEE  @01A*/ 00956000
*    7 OtcbPtcreAcee       Bit(1),   /* 0=> No ACEE propagated on Ptcre 00957000
*                                        1=> ACEE was propagated @02A*/ 00958000
*    7 OtcbProcInitAcee    Bit(1),   /* 0=> No INITACEE done during dub 00959000
*                                        1=> INITACEE done during dub   00960000
*                                                                @02A*/ 00961000
*  3 OtcbTHID     Char(08) Bdy(Word), /* Thread ID               @D4A*/ 00962000
*   5  OtcbPprt            Ptr(31),   /*   -> PPRT               @D4M*/ 00963000
*    7 OtcbLightWeight     Bit(01),   /*   1 Light weight thread @D4A*/ 00964000
*   5  OtcbSeqNo           Fixed(32), /*   Sequence number       @D4A*/ 00965000
*    7 OtcbSeqNoHigherHalf Fixed(16), /* higher half of seq num  @D9A*/ 00966000
*    7 OtcbSeqNoLowerHalf  Fixed(16), /* lower half of seq num   @D9A*/ 00967000
*  3 OtcbSigFlags  Abnormal Bit(32),  /* Signal Flags1 that are      */ 00968000
*                                     /* modified by signal IRBs.    */ 00969000
*                                     /* Serialized by Compare & Swap*/ 00970000
*   4  OtcbSigFlagsB1     Bit(08),                                      00971000
*    7 OtcbSigDisable      Bit(01),   /* Signal Delivery is disabled */ 00972000
*    7 OtcbSigPending      Bit(01),   /* Signal pending flag         */ 00973000
*    7 OtcbTimerSignal     Bit(01),   /* SIGXCPU or SIGKILL is to be    00974000
*                                        generated by the syscall       00975000
*                                        layer.  Either OtcbSIGXCPU     00976000
*                                        or OtcbSIGKILL is on.  This    00977000
*                                        flag exists for sycall layer   00978000
*                                        performance.            @DDC*/ 00979000
*    7 OtcbSIGALRM         Bit(01),   /* generate in SC layer    @DGC*/ 00980000
*                                                                       00981000
*    7 OtcbALRMActive      Bit(01),   /* ALR & setitimer REAL        */ 00982000
*    7 OtcbIgnRBState      Bit(01),   /* Ignore RB state             */ 00983000
*    7 OtcbSigDump         Bit(01),   /* Dump for terminating signal */ 00984000
*    7 OtcbRaiseTimerIRB   Bit(01),   /* Raise() function from          00985000
*                                           Timer IRB                */ 00986000
*   4  OtcbSigFlagsB2     Bit(08),                                      00987000
*    7 OtcbIRBsignal       Bit(01),   /* Signal Checker routine should  00988000
*                                        recheck signals because one of 00989000
*                                        the signal IRBs may have       00990000
*                                        changed the signals pending */ 00991000
*    7 OtcbPTdelayIRB      Bit(01),   /* Delay IRB for PTRACE        */ 00992000
*    7 OtcbSirDisable      Bit(01),   /* Disable invocation of SIR   */ 00993000
*    7 OtcbCancelAsync     Bit(01),   /* Cancelation request state      00994000
*                                        0 = controlled, 1 = async      00995000
*                                                                @D5A*/ 00996000
*                                                                       00997000
*    7 OtcbCancelDisabled  Bit(01),   /* Cancelation request type       00998000
*                                        0=enabled, 1=disabled   @D5A*/ 00999000
*    7 OtcbSetSigDisable   Bit(01),   /* Syscall must turn on           01000000
*                                       OtcbSigDisable on return @D5A*/ 01001000
*    7 OtcbCtwActive       Bit(01),   /* cond_timed_wait (BPX1CTW)      01002000
*                                        is active               @D5A*/ 01003000
*    7 OtcbIgnDlvKey       Bit(01),   /* Ignore Dlv key          @D5A*/ 01004000
*                                                                       01005000
*   4  OtcbSigFlagsB3     Bit(08),                                      01006000
*    7 OtcbCancelPending   Bit(01),   /* Cancel pending for thrd @P4A*/ 01007000
*    7 OtcbPtRegsInUsta    Bit(01),   /* Ptrace regs/PSW are in the     01008000
*                                        Usta                    @D8A*/ 01009000
*    7 OtcbSIGXCPU         Bit(01),   /* SIGXCPU is to be generated by  01010000
*                                        syscall layer           @DDA*/ 01011000
*    7 OtcbSIGKILL         Bit(01),   /* SIGKILL is to be generated by  01012000
*                                        syscall layer           @DDA*/ 01013000
*                                                                       01014000
*    7 OtcbSIGVTALRM       Bit(01),   /* generate in SC layer    @DGA*/ 01015000
*    7 OtcbSIGPROF         Bit(01),   /* generate in SC layer    @DGA*/ 01016000
*    7 OtcbAllSigsBlocked  Bit(01),   /* All signals are blocked, the   01017000
*                                        same as if all bits were on in 01018000
*                                        PpstSigMask             @DMC*/ 01019000
*    7 OtcbIr1Stimer       Bit(01),   /* IR1 has pending stimer  @0AC*/ 01020000
*                                                                       01021000
*   4  OtcbSigFlagsB4     Bit(08),                                      01022000
*    7 OtcbVTALRMActive    Bit(01),   /* setitimer VIRTUAL       @DGA*/ 01023000
*    7 OtcbPROFActive      Bit(01),   /* setitimer PROF          @DGA*/ 01024000
*    7 OtcbReturnPpsd      Bit(01),   /*                         @DGC*/ 01025000
*    7 OtcbCallRTM         Bit(01),   /* CallRTM done by IR1     @01A*/ 01026000
*    7 OtcbNoIrb           Bit(01),   /* Avoid Irb interrupts    @PKA*/ 01027000
*    7 OtcbReDrive         Bit(01),   /* IRB redrive is in prog  @DWA*/ 01028000
*    7 OtcbCPUTimeOut      Bit(01),   /* A terminating signal is to be  01029000
*                                        generated due to the process   01030000
*                                        time limit being exceeded      01031000
*                                                                @DYA*/ 01032000
*    7 OtcbDlvTerm         Bit(01),   /* This thread is terminating due 01033000
*                                        to a terminating signal @DYA*/ 01034000
*                                                                       01035000
*  3 OtcbSir2ID        Fixed(32),     /* Alarm ID set by STIMERM.       01036000
*                                        Changed by incrementing at     01037000
*                                        start of alarm() and sleep()*/ 01038000
*                                                                       01039000
*  3 OtcbRacGroup  Ptr(31),     /* Pointer to RACF structure to be      01040000
*                                  deleted by next getgr* call       */ 01041000
*  3 OtcbRacPasswd Ptr(31),     /* Pointer to RACF structure to be      01042000
*                                  deleted by next getpw* call       */ 01043000
*  3 OtcbCommReq           Ptr(31),   /* Address of communications      01044000
*                                        resource associated with this  01045000
*                                        task (only valid when there    01046000
*                                        is an active request)       */ 01047000
*    5 OtcbCallRtmEcb      Char(4),   /* Wait for termination by     */ 01048000
*                                     /* BpxLkLcp                @ECA*/ 01049000
*  3 OtcbPtMultiStatus      Bit(8),   /* Ptrace multi process mode      01050000
*                                        status word value - will be    01051000
*                                        one of the WastStopFlag...     01052000
*                                        values                  @D8C*/ 01053000
*  3 OtcbFlags2            Char(03),  /* 2nd Set of flags        @DRA*/ 01054000
*   4  OtcbFlags2B1       Bit(08),                                      01055000
*    7 OtcbStaxDeferred    Bit(01),   /* Stax defer performed    @DRA*/ 01056000
*    7 OtcbLukwKey0        Bit(01),   /* User Kernwait caller is KEY 0  01057000
*                                                                @PNA*/ 01058000
*    7 OtcbKserWaitingF    Bit(01),   /* Is Kser waiting?        @POA*/ 01059000
*    7 OtcbAffinPgmRunning Bit(01),   /* An IPT/thread affinity program 01060000
*                                        is running on this thread, do  01061000
*                                        no joblogging           @PQA*/ 01062000
*    7 OtcbRegsInPpsd      Bit(01),   /* User regs are in Ppsd at time  01063000
*                                        of Freeze_This_Thread   @E2A*/ 01064000
*    7 OtcbRegsInIRB       Bit(01),   /* User regs are in IRB at time   01065000
*                                        of Freeze_This_Thread   @E2A*/ 01066000
*    7 OtcbTimedKernWait   Bit(01),   /* Task is in Timed Kernwait      01067000
*                                                                @E2A*/ 01068000
*    7 OtcbSlowPathSyscall Bit(01),   /* This is a slow-path syscall.   01069000
*                                        User regs are in USTA   @E2A*/ 01070000
*   4  OtcbFlags2B2       Bit(08),    /*                         @DRA*/ 01071000
*    7 OtcbOsenvActive     Bit(1),    /* Task is active in the osenv    01072000
*                                                                @DVA*/ 01073000
*    7 OtcbOsenvGet        Bit(1),    /* Task issued osenv_get   @DVA*/ 01074000
*    7 OtcbOsenvWlmJoin    Bit(1),    /* Task is joined to a WLM        01075000
*                                        enclave as a result of         01076000
*                                        osenv_set               @DVA*/ 01077000
*    7 OtcbOsenvSecurity   Bit(1),    /* Security environment was       01078000
*                                        saved by osenv          @DVA*/ 01079000
*    7 OtcbChkPtUnSafe     Bit(1),    /* Task is checkpoint unsafe      01080000
*                                        due to being in kernel  @E3A*/ 01081000
*    7 OtcbInRstWait       Bit(1),    /* Task is waiting for OMVS       01082000
*                                        to be restarted         @E3A*/ 01083000
*    7 OtcbDoRstWait       Bit(1),    /* Fastpath syscall requests task 01084000
*                                        be put in restart wait  @E3A*/ 01085000
*    7 OtcbSpbUpdate       Bit(1),    /* Used for SPB/IR1 serialization 01086000
*                                                                @PTA*/ 01087000
*   4  OtcbFlags2B3       Bit(08),    /*                         @DRA*/ 01088000
*    7 OtcbDeferSigs       Bit(1),    /* Defer sigs is in effect        01089000
*                                                                @E8A*/ 01090000
*    7 OtcbLatchProblem    Bit(1),    /* Latch Cleanup Problem detected 01091000
*                                        at termination time     @E9A*/ 01092000
*    7 OtcbF2_AttachedTask Bit(1),    /* This task has done a    @05A*/ 01093000
*                                     /* localspawn or attach        */ 01094000
*    7 OtcbPthdForkChild   Bit(1),    /* This child process was created 01095000
*                                       via fork from a pthread  @PUA*/ 01096000
*    7 OtcbUserAceeUsp     Bit(1),    /* ACEE/USP belongs to User, not  01097000
*                                        created by kernel       @EAA*/ 01098000
*    7 OtcbF2_StayClean    Bit(1),    /* Task must stay clean    @PVA*/ 01099000
*    7 OtcbF2_StepClpDelayed Bit(1),  /* Steplib cleanup delayed @PVA*/ 01100000
*    7 OtcbF2_OpenUnAuth   Bit(1),    /* On fsopn, ignore auth   @09A*/ 01101000
*  3 OtcbAlrmGtYear        Fixed(32), /* Alarm time in seconds greater  01102000
*                                        than 365 days used by alarm()  01103000
*                                         and sleep() functions      */ 01104000
*  3 OtcbCofPtr            Ptr(31),   /* Address of CopyOnFork area     01105000
*                                                                @PBC*/ 01106000
*  3 OtcbDlvIRB            Ptr(31),   /* Address of RB that called      01107000
*                                        Signal Delivery         @P2A*/ 01108000
*  3 OtcbDubRBSqn          Fixed(32), /* Sequence number of RB that  */ 01109000
*                                     /* was DUBed                   */ 01110000
*  3 OtcbRegRBSqn          Fixed(32), /* Sequence number of RB that     01111000
*                                        registered for signals      */ 01112000
*  3 OtcbSxib              Ptr(31),   /* Address of Sxib (may be zero,  01113000
*                                        allocated on first use) @JHA*/ 01114000
*  3 OtcbSysCallCode       Fixed(32), /* System call number          */ 01115000
*  3 OtcbLecb              Ptr(31),   /* Ptr to ECB used to wait for    01116000
*                                        a latch to be obtained      */ 01117000
*  3 OtcbPpsdPtr           Ptr(31),   /* -> PPSD                     */ 01118000
*  5 OtcbPpsd              Ptr(31),   /* -> PPSD                     */ 01119000
*  3 OtcbCtwID             Fixed(32), /* cond_timed_wait stimerm ID  */ 01120000
*  3 OtcbStackNonSw        Ptr(31),   /* Dynamic stack for Non-space    01121000
*                                        switched syscalls.  Only       01122000
*                                        valid when OTCBSYSCALLCODE     01123000
*                                        is non-zero.  Contains         01124000
*                                        address of 1st #SAMAP area     01125000
*                                        following RUCA.  Addressable   01126000
*                                        in user home space.     @D5A*/ 01127000
*  3 OtcbOtim              Ptr(31),   /* -> interval timers      @DGC*/ 01128000
*  3 OtcbOapb              Ptr(31),   /* -> OAPB                 @PVC*/ 01129000
*  3 OtcbPtPICParmsPtr     Ptr(31),   /* Pointer to ptrace recovery     01130000
*                                        environment parameters (PIC    01131000
*                                        parms                   @D8A*/ 01132000
*  3 OtcbPtEventID         Fixed(32), /* Ptrace event ID, that          01133000
*                                        identifies why this thread     01134000
*                                        stopped for ptrace      @D8A*/ 01135000
*  3 OtcbPtLclPpsdPtr      Ptr(31),   /* Ptrace local Ppsd pointer      01136000
*                                                                @D8A*/ 01137000
*  3 OtcbMVSpauseECBlist   Ptr(31),   /* Pointer to the BPXZECBL -      01138000
*                                        System copy of user ECB        01139000
*                                        addresses passed to            01140000
*                                        MVSpauseInit            @DAA*/ 01141000
*  3 OtcbSavedScb          Ptr(31),   /* Saved SCB addr of STAI on      01142000
*                                        entry to Local Child Process   01143000
*                                                                @L1A*/ 01144000
*  3 OtcbUECBlist   Ptr(31),          /* Pointer to the BPXZECBL -      01145000
*                                        System copy of user and        01146000
*                                        system ECBs address for the    01147000
*                                        BPXLUKW - User KernWait        01148000
*                                        service                 @DBA*/ 01149000
*  3 OtcbUIDs,                         /* User IDs for Thread    @DTA*/ 01150000
*   5 OtcbRUid             Fixed(32),  /*   Real Uid             @DTA*/ 01151000
*   5 OtcbEUid             Fixed(32),  /*   Effective Uid        @DTA*/ 01152000
*   5 OtcbSUid             Fixed(32),  /*   Saved Uid            @DTA*/ 01153000
*  3 OtcbSavedACEE         Ptr(31),   /* MRPWD saved Acee        @PFA*/ 01154000
*  3 OtcbPprx              Ptr(31),   /* Address of the Pprx, an        01155000
*                                        extension of the Pprt   @DSA*/ 01156000
*  3 OtcbMrPwdUID          Fixed(32), /* Password verified UID   @DHA*/ 01157000
*  3 OtcbPswByt03          Fixed(32), /* Caller's PSW bytes 0-4         01158000
*                                        (Used by JCPR to setup         01159000
*                                        BPXZUSTA)               @PCA*/ 01160000
*  3 OtcbMrPwdUserName     Char(8),   /* Password verified userid       01161000
*                                                                @PCA*/ 01162000
*  3 OtcbSavedSecEnv       Ptr(31), /* Pointer to ACEE saved by BPX1ENV 01163000
*                                      for a toggle request      @PEA*/ 01164000
*  3 OtcbMVSUseridPtr      Ptr(31), /* Pointer to userid of this        01165000
*                                      thread, points to either         01166000
*                                      OtcbLoginNInfo or OasbLoginNInfo 01167000
*                                                                @PEA*/ 01168000
*  3 OtcbLoginNInfo        Bdy(Word), /* Task userid and length  @PEA*/ 01169000
*   5 OtcbLoginNLen        Fixed(31), /* Task userid length      @PEA*/ 01170000
*   5 OtcbLoginName        Char(9)    /* Tasks userid, must be '00'x */ 01171000
*                          Bdy(Word), /* (null) terminated. Preceding*/ 01172000
*                                     /* length does not include '   */ 01173000
*                                     /* terminating null        @PEA*/ 01174000
*  3 OtcbPrin2Flags        Bit(8),   /* This field is modified by       01175000
*                                       BPXPRIN1, and it is used by     01176000
*                                       BPXPRIN2. See PPSQ for the      01177000
*                                       mapping and more details @E1A*/ 01178000
*  3 OtcbFlags3            Bit(16), /* More flag bits            @EBC*/ 01179000
*   5 OtcbF3B1             Bit(8),                            /* @EBA*/ 01180000
*    7 OtcbTimerWaitInTermination Bit(1), /* Task cannot exit because   01181000
*              it has the process level timer for SUSv3 behavior @EBA*/ 01182000
*    7 OtcbTimerCancelSkipped     Bit(1), /* Did not cancel the timer   01183000
*                                in BPXJCPR because it is still needed  01184000
*                                to generate the SIGALRM         @EBA*/ 01185000
*    7 OtcbForceCanceled   Bit(1),  /* A CALLRTM has been scheduled for 01186000
*                                      this thread to force cancel it.  01187000
*                                      BPXPTXAG must not allow it to    01188000
*                                      exit so we do not reuse the TCB  01189000
*                                      before the cancel is done.@EDA*/ 01190000
*    7 OtcbSPMUseCallersBlkMask Bit(1), /* BPX1SPM should use the new   01191000
*                                      blocking mask as specified by    01192000
*                                      the caller                @0CA*/ 01193000
*    7 OtcbFastCGIActive   Bit(1),  /* A FastCGI operation is in        01194000
*                                      progress                  @PZA*/ 01195000
*    7 OtcbAllowSyscalls   Bit(1),  /* Allow Syscalls through JCPR even 01196000
*                                      if the thread has PT_Exited      01197000
*                                                                @Q1A*/ 01198000
*    7 OtcbDoNotABENDForOutOfStack Bit(1), /* Do not ABEND x-mem        01199000
*                                      syscall when out of stack cells, 01200000
*                                      use STORAGE OBTAIN        @ELA*/ 01201000
*    7 OtcbSetUidGidPrivGain Bit(1),   /* Gained Setuid or Setgid Priv  01202000
*                                       executing target program @0CA*/ 01203000
*   5 OtcbF3B2             Bit(8),  /*                           @EBA*/ 01204000
*    7 OtcbPrgru2PrTim     Bit(1),  /* PRGRU calling PRTIM       @0DA*/ 01205000
*    7 OtcbFreeStack       Bit(1),  /* Free stack on exit from          01206000
*                                      syscall layer             @EMC*/ 01207000
*    7 OtcbCleanupTask     Bit(1),  /* This task needs to clean  @Q3C*/ 01208000
*                                   /* up lower level tasks          */ 01209000
*    7 OtcbPrivCkSTC       Bit(1),  /* 1=address space is a started     01210000
*                                      task (priv path ck)       @0FA*/ 01211000
*    7 OtcbPrivCkMSC       Bit(1),  /* 1=must stay clean priv    @0FA*/ 01212000
*    7 OtcbPrivCkAPF       Bit(1),  /* 1=AFP auth priv           @0FA*/ 01213000
*    7 OtcbF3B2Rsvd        Bit(2),  /* Reserved - see below      @ECA*/ 01214000
*  3 OtcbThli              Ptr(31),  /* -> Thli.  This field must never 01215000
*                                       change offsets within the Otcb  01216000
*                                       since the Thli is an external   01217000
*                                       control block and the user will 01218000
*                                       have to go through the Otcb to  01219000
*                                       get to the Thli          @DKA*/ 01220000
*  3 OtcbActSctbNodePtr   Ptr(31), /* Active Acee SCTB node ptr, zero   01221000
*                                        if ACEE is private      @DZC*/ 01222000
*  3 OtcbToggledSctbNodePtr  Ptr(31), /* Toggled Acee SCTB node ptr,    01223000
*                                        zero if ACEE is private @DZC*/ 01224000
*  3 OtcbPag               Fixed(32),/* Process Auth Groups          */ 01225000
*  3 OtcbGIDs,                         /* Group IDs for Thread   @DTA*/ 01226000
*   5 OtcbRGid             Fixed(32),  /*   Real Gid             @DTA*/ 01227000
*   5 OtcbEGid             Fixed(32),  /*   Effective Gid        @DTA*/ 01228000
*   5 OtcbSGid             Fixed(32),  /*   Saved Gid            @DTA*/ 01229000
*  3 OtcbRacGidsPtr        Ptr(31),  /* Addr of saved group list @PJA*/ 01230000
*  3 OtcbWLMEToken         Bit(64),  /* WLM Enclave token associated    01231000
*                                       with the thread          @DMA*/ 01232000
*  3 OtcbSavedGid          Fixed(32),/* Gid set by getpwname, used by   01233000
*                                       setgid                   @PIA*/ 01234000
*  3 OtcbAliasNInfo,                                          /* @DUA*/ 01235000
*   5 OtcbAliasNLen        Fixed(31), /* Task alias length       @DUA*/ 01236000
*   5 OtcbAliasName        Char(9),   /* Tasks alias, must be '00'x     01237000
*                                       (null) terminated. Preceding    01238000
*                                       length does not include '       01239000
*                                       terminating null         @DUA*/ 01240000
*  3 *                     Char(3),  /* Reserved, keep word bdy  @DUA*/ 01241000
*  3 OtcbOsenvToken  Char(8) Bdy(Word),  /* osenv environment token     01242000
*                                                                @DVA*/ 01243000
*    5  OtcbOsenvCellPtr   Ptr(31),  /* Ptr to osenv environment        01244000
*                                       cell element             @DVA*/ 01245000
*    5  OtcbOsenvSeqN      Fixed(31),/* seq number associated with      01246000
*                                       the osenv cell           @DVA*/ 01247000
*  3 OtcbReDriveTime       Fixed(32),/* Time to delay signal IRB @DWA*/ 01248000
*  3 OtcbShlLoaderInfo,              /* Shared Library data      @DXA*/ 01249000
*    5 OtcbShlLoader1DspAddr Ptr(31),                                   01250000
*                                   /* Shared Library loader data1 addr 01251000
*                                       in data space            @DXA*/ 01252000
*    5 OtcbShlLoader1DspPages Fixed(32),                                01253000
*                                    /* Shared Library loader data1 len 01254000
*                                       in data space            @DXA*/ 01255000
*    5 OtcbShlLoader1DspAlet Fixed(32),                                 01256000
*                                   /* Shared Library loader data1 alet 01257000
*                                       of data space            @DXA*/ 01258000
*    5 OtcbShlLoader1DspStoken Char(8),                                 01259000
*                                   /* Shared Library loader data1 stkn 01260000
*                                       of data space            @DXA*/ 01261000
*    5 OtcbShlLoader2DspAddr Ptr(31),                                   01262000
*                                   /* Shared Library loader data1 addr 01263000
*                                       in data space            @DXA*/ 01264000
*    5 OtcbShlLoader2DspPages Fixed(32),                                01265000
*                                    /* Shared Library loader data1 len 01266000
*                                       in data space            @DXA*/ 01267000
*    5 OtcbShlLoader2DspAlet Fixed(32),                                 01268000
*                                   /* Shared Library loader data1 alet 01269000
*                                       of data space            @DXA*/ 01270000
*    5 OtcbShlLoader2DspStoken Char(8),                                 01271000
*                                   /* Shared Library loader data1 stkn 01272000
*                                       of data space            @DXA*/ 01273000
*    5 OtcbShlLoaderTok    Char(8),                                     01274000
*                                    /* Shared Library loader token len 01275000
*                                       used by BPXXSHLB INIT    @DXA*/ 01276000
*  3 OtcbSMKLatchFlagCount Fixed(31) ABNORMAL, /* OcvtSMKLatchCount     01277000
*                                      incremented               @PRA*/ 01278000
*  3 OtcbSavePprt          Ptr(31),  /* Addr of Pprt saved during task  01279000
*                                       term when OtcbPprt is changed   01280000
*                                       so that BPXMIPCE can find real  01281000
*                                       Pprt of running task     @04A*/ 01282000
*  3 OtcbSyscallStart      Bit(64),  /* Start Timeused Value for active 01283000
*                                       syscall                  @E3A*/ 01284000
*  3 OtcbPECBPtr           Ptr(31),  /* Prt to a PECB            @E5A*/ 01285000
*  3 OtcbSavedOapb         Ptr(31),  /* OAPB addr saved for steplib     01286000
*                                       cleanup during task term @PVA*/ 01287000
*  3 OtcbRmTokTOasb        Bit(32),  /* ResManager Token saved          01288000
*                                       for job step task reinit @PVA*/ 01289000
*  3 OtcbThdWkPtr          Ptr(31),  /* Ptr to Thread Workarea   @06A*/ 01290000
*  3 OtcbSignalPD,         /* Putback Counters:                  @EFA*/ 01291000
*    /* If PutBackCnt is equal to PutBackDlvCnt then LE owns it. If  */ 01292000
*    /* PutBackCnt is greater than PutBackDlvCnt by 1, then the      */ 01293000
*    /* Kernel owns it and it should be pending in the kernel. And   */ 01294000
*    /* otherwise, if not any of those cases, there is a problem.    */ 01295000
*    5 OtcbPutBackCnt        Fixed(16),   /*                     @EFA*/ 01296000
*    5 OtcbPutBackDlvCnt     Fixed(16),   /*                     @EFA*/ 01297000
*    5 *                     char(1),     /* Reserved            @EFA*/ 01298000
*    5 OtcbPutBackSig        Fixed(8),    /* This will be the    @EFA*/ 01299000
*                                         /* last signal number that */ 01300000
*                                         /* was put back            */ 01301000
*    5 OtcbNSIR1LeaveRS          Bit(16), /* NSIR1 internal reason      01302000
*                                            code                @PYA*/ 01303000
*    5 OtcbNSIR1FootPrints       Bit(16), /* Footprints, to keep a   */ 01304000
*    5 OtcbNSIR1FootPrints2      Bit(16), /* Copy over BPXNSIR1's    */ 01305000
*                                         /* static record of the    */ 01306000
*                                         /* last Async interrupt    */ 01307000
*  3 OtcbSuTargProcUser    Fixed(32), /* ProcUser value for      @07A*/ 01308000
*                                     /* target uid of setuid        */ 01309000
*  3 *                     Char(4),  /* Reserved for future use  @EGA*/ 01310000
*  3 OtcbMiscData Union Char(24) Bdy(Dword), /*                  @0EA*/ 01311000
*  4 OtcbAdditionalParms Bdy(Dword), /* This area can be used to        01312000
*                                       return additional parameters    01313000
*                                       from a syscall. The syscall     01314000
*                                       invoker must make a copy of     01315000
*                                       these parameters before         01316000
*                                       making another syscall as this  01317000
*                                       area maybe reused by any        01318000
*                                       subsequent syscall       @0EC*/ 01319000
*    5 OtcbAdditionalPARM1 Fixed(64), /*                         @EGA*/ 01320000
*      7 OtcbAddParm1H     Fixed(31),                         /* @0DA*/ 01321000
*      7 OtcbAddParm1L     Fixed(31),                         /* @0DA*/ 01322000
*    5 OtcbAdditionalPARM2 Fixed(64), /*                         @EGA*/ 01323000
*      7 OtcbAddParm2H     Fixed(31),                         /* @0DA*/ 01324000
*      7 OtcbAddParm2L     Fixed(31),                         /* @0DA*/ 01325000
*    5 OtcbAdditionALPARM3 Fixed(64), /*                         @EGA*/ 01326000
*  4 OtcbExecStatInfo Bdy(Dword),    /* Stat Info from Exec      @0EA*/ 01327000
*    5 OtcbExecStatMtime   Fixed(32),/* File Modification Time   @0EA*/ 01328000
*    5 OtcbExecStatDev     Fixed(32),/* File Device ID           @0EA*/ 01329000
*    5 OtcbExecStatFid     Char(8),  /* File FID                 @0EA*/ 01330000
*    5 *                   Char(8),  /* Reserved                 @0EA*/ 01331000
*/* APPLID value specified on __passwd_applid call                   */ 01332000
*  3 OtcbApplID_Info       Char(9),                                     01333000
*    5 OtcbApplidLen       Char(1),  /* Length of APPLID             */ 01334000
*    5 OtcbApplid          Char(8),  /* APPLID - left justified      */ 01335000
*                                    /* and padded with blanks   @EHA*/ 01336000
*  3 OtcbMrPwdICR,                   /* ICR saved by __passwd    @EJA*/ 01337000
*    5 OtcbMrPwdICRU       Char(8),  /* ICR user parameter       @EJA*/ 01338000
*    5 OtcbMrPwdICRP       Char(8),  /* ICR pass parameter, this is not 01339000
*                                       a password, see RACF ICR        01340000
*                                       definition for details   @EJA*/ 01341000
*  3 OtcbFlags5            Char(1),  /*                          @ENA*/ 01342000
*    5 OtcbFlags5B1        Bit(8),   /*                          @ENA*/ 01343000
*      7 OtcbOsi1StackInUse Bit(1),  /* OtcbOSI1Stack64 in use   @ENA*/ 01344000
*      7 OtcbOsi2StackInUse Bit(1),  /* OtcbOSI2Stack64 in use   @ENA*/ 01345000
*      7 OtcbPreSCXDone     Bit(1),  /* 1 = The pre-syscall exits       01346000
*                                       were called for the current     01347000
*                                       syscall                  @EOA*/ 01348000
*      7 OtcbNoSCXs         Bit(1),  /* 1 = Stop syscalls made from     01349000
*                                       a syscall exit from driving     01350000
*                                       exits again to prevent          01351000
*                                       recursion                @EOA*/ 01352000
*      7 OtcbSCXFailSyscall Bit(1),  /* 1 = A pre-syscall exit returned 01353000
*                                       a non-zero return code          01354000
*                                       requesting that the syscall     01355000
*                                       should fail              @EOA*/ 01356000
*  3 OtcbLSEpasn          Fixed(16), /* Pasn of LSE caller       @Q3A*/ 01357000
*  3 OtcbLSEtype          Fixed(32), /* LSE type NSIR1 interrupt @Q3A*/ 01358000
*  3 OtcbLSEcaller        Fixed(64), /* LSE caller               @Q3A*/ 01359000
*  3 OtcbDubRBAddr         Ptr(31),                           /* @0IA*/ 01360000
*  3 OtcbRegRBAddr         Ptr(31),                           /* @0IA*/ 01361000
*  3 OtcbSpb@              Ptr(64),  /* Ptr to SPB. For BPXJCSS and     01362000
*                                       BPXJCNS calls, the ALET for     01363000
*                                       this SPB is PRIMARY. For        01364000
*                                       BPXJCSA, the ALET is HOME.      01365000
*                                                                @EMA*/ 01366000
*  3 OtcbThreadWorkArea    Ptr(64),  /* Below the bar workarea, 64bit   01367000
*                                       so top half of G64R13 gets      01368000
*                                       zero'd                   @EMA*/ 01369000
*  3 OtcbSyscallStack64    Ptr(64),  /* Syscall stack            @EMA*/ 01370000
*  3 OtcbOSI1Stack64       Ptr(64),  /* OSI 1 stack              @EMA*/ 01371000
*  3 OtcbOSI2Stack64       Ptr(64),  /* OSI 2 stack              @EMA*/ 01372000
*  3 OtcbCtraceStack64     Ptr(64),  /* Ctrace stack             @EMA*/ 01373000
*  3 OtcbNestedStack64     Ptr(64),  /* Nested syscall stack     @EMA*/ 01374000
*/* NSDLV1 NSDLV2 and NSSCU Stack fields are set for debug purposes  */ 01375000
*  3 OtcbNSDLV1Stack       Ptr(64),  /* BPXNSDLV stack           @EMA*/ 01376000
*  3 OtcbNSDLV2Stack       Ptr(64),  /* Nested BPXNSDLV stack    @EMA*/ 01377000
*  3 OtcbNSSCUStack        Ptr(64),  /* BPXNSSCU stack           @EMA*/ 01378000
*  3 OtcbCTR64StObStack    Ptr(64),  /* BPXCTR64 storage OBTAINed       01379000
*                                       stack (debug only)       @Q2A*/ 01380000
*  3 OtcbPtraceStack64     Ptr(64),  /* Ptrace stack from IRB    @0GA*/ 01381000
*  3 OtcbPtraceFN1Ppsd     Ptr(31),  /* Address of extra PPSD for FN1   01382000
*                                       to serialize real PPSD   @0HA*/ 01383000
*  3 *                    Char(28),  /* reserved                 @0HC*/ 01384000
*  /*                                                                */ 01385000
*  /* NOTE: The size of this control block is retrieved dynamically  */ 01386000
*  /*       during runtime by the modules that need it.              */ 01387000
*  /*       When adding additional fields to this control block,     */ 01388000
*  /*                                                                */ 01389000
*  /* ====> THE ONLY MODULE THAT *MUST* BE RECOMPILED IS BPXPRIT @E6A*/ 01390000
*  /*                                                                */ 01391000
*  3 Otcb_End   Bdy(Dword) Char(0); /* Make CB end on doubleword @PBA*/ 01392000
*                                                                       01393000
*/********************************************************************/ 01394000
*/*                                                                  */ 01395000
*/* NOTE: The "OtcbCopyOnFork" is contiguous to the end of the Otcb. */ 01396000
*/*       IPCS modules respecify its base on the address of Otcb_End */ 01397000
*/*       because the field OtcbCofPtr does NOT contain an address   */ 01398000
*/*       that is usable by IPCS without another ?ASAXACC.           */ 01399000
*/*                                                                  */ 01400000
*/********************************************************************/ 01401000
*DCL                                                                    01402000
* 1 OtcbCopyOnFork Based(OtcbCofPtr) Via(Alet(Otcb)), /* These fields   01403000
*                                       will be copied to the child     01404000
*                                       Otcb on fork()           @PBM*/ 01405000
*   3 OtcbSyscallEntryStatus Ptr(31), /* Ptr to regs and stuff at entry 01406000
*                                        to the syscall layer        */ 01407000
*   3 OtcbUstaPtr          Ptr(31),   /* Pointer to user status area    01408000
*                                        containing the syscall         01409000
*                                        issuer's regs and PSW.         01410000
*                                        (Mapped by BPXZUSTA. Used      01411000
*                                        by ptrace.)                 */ 01412000
*   3 OtcbGroupDbSearch    Char(8),   /* Group name for group data base 01413000
*                                        search (getgrent)       @DEA*/ 01414000
*   3 OtcbUserDbSearch     Char(8),   /* User name for user data base   01415000
*                                        search (getpwent)       @DEA*/ 01416000
*   3 OtcbStorageForCPR    Ptr(31),   /* Dynamic area for BPXJCPR    */ 01417000
*   3 OtcbStorageForCPRKey Fixed(8),  /* Storage key of dynamic area    01418000
*                                        for JCPR                    */ 01419000
*   3 OtcbStorageForCPRLen Fixed(24), /* Length of JCPR dynamic area */ 01420000
*   3 OtcbStorageForCPRSp  Fixed(8),  /* Storage SP of dynamic area  */ 01421000
*   3 OtcbCopyFlags        Bit(8),    /* Copy on Fork Flags      @DFA*/ 01422000
*     5 OtcbSetuidExec     Bit(1),    /* Setuid Exec in progress @DFA*/ 01423000
*     5 OtcbMVSAuthLib     Bit(1),    /* Pgm loaded from MVS authorized 01424000
*                                       library by exec/execmvs  @DFA*/ 01425000
*     5 OtcbExecProcess    Bit(1),    /* This process image was created 01426000
*                                       by exec/execmvs          @DFA*/ 01427000
*     5 OtcbSigPostInPC    Bit(1),    /* Sig IRB will post ThliComECB   01428000
*                                        even when a Linkage Stack is   01429000
*                                        detected, signal will be       01430000
*                                        rescheduled for future         01431000
*                                        delivery                @03A*/ 01432000
*     5 OtcbPoeAttrSet     Bit(1),    /* The OtcbPoeAttr have been set  01433000
*                                       by __poe                 @E7A*/ 01434000
*     5 OtcbPoeFromUserData Bit(1),   /* 1=POE data supplied by was     01435000
*                                          user                  @EIA*/ 01436000
*     5 *                  Bit(2),    /* Reserved                @EIC*/ 01437000
*   3 *                    Char(2),   /* Reserved                @DFC*/ 01438000
*   3 OtcbDaemonInfo,                 /* This info will be set and      01439000
*                                        reused to improve performance  01440000
*                                        by bypassing multiple RACF     01441000
*                                        calls for the same info @PFM*/ 01442000
*     5 OtcbSavedUID       Fixed(32), /* Remembered UID          @PFM*/ 01443000
*     5 OtcbSavedUserName  Char(8),   /* Remembered UserID       @PFM*/ 01444000
*   3 OtcbWLMUserDataInfo,            /* WLM Server information.  These 01445000
*                                        fields are needed to manage    01446000
*                                        the application data and file  01447000
*                                        descriptor list.  A single     01448000
*                                        area is obtained for both      01449000
*                                        needs.  The area is pointed to 01450000
*                                        by OtcbWLMUserDataPtr. The     01451000
*                                        application data is always     01452000
*                                        first in the area followed by  01453000
*                                        the FDL area.           @PGM*/ 01454000
*     5 OtcbWLMUserDataPtr  Ptr(31),  /* Address of user data storage   01455000
*                                                                @PGM*/ 01456000
*     5 OtcbWLMUserDataLen  Fixed(31),/* Length of user data storage -- 01457000
*                                        the entire area         @PGM*/ 01458000
*     5 OtcbWLMUserDataKey  Fixed(8), /* Key of user data area   @PGM*/ 01459000
*     5 *                   Char(3),  /* reserved                @PGM*/ 01460000
*     5 OtcbWLMApplLen      Fixed(31),/* Length of the application data 01461000
*                                        portion of the user data area. 01462000
*                                        The file descriptors occupy    01463000
*                                        the remainder of the user data 01464000
*                                        area                    @PGM*/ 01465000
*   3 OtcbSMFBuffPtr       Ptr(31),   /* Address of key 0 copy of user  01466000
*                                        SMF record              @DQA*/ 01467000
*   3 OtcbSMFBuffLen       Fixed(31), /* Length of key 0 copy of user   01468000
*                                        SMF record              @DQA*/ 01469000
*   3 OtcbPoeAttr,                /* __poe() port of entry info  @E7A*/ 01470000
*    5 OtcbPoePeerIpAddr Char(16) Bdy(Word), /* Peer IP Address  @E7A*/ 01471000
*     7 OtcbPoePeerIPv6Prefix Char(12),                        /*@E7A*/ 01472000
*     7 OtcbPoePeerIPv4Addr Fixed(32),                         /*@E7A*/ 01473000
*    5 OtcbPoeTermid  Char(8),        /* TERMINAL Profile Name   @E7A*/ 01474000
*    5 OtcbPoeLabel   Char(8),        /* Security Label of poe   @E7A*/ 01475000
*    5 OtcbPoeProfile Char(64),       /* SERVAUTH Profile Name   @E7A*/ 01476000
*   3 OtcbUnicode,                    /* Unicode environment   11@EKA*/ 01477000
*    5 OtcbUnicodeTech  Char(8),      /* _BPXK_UNICODE_TECHNIQUE     */ 01478000
*    5 OtcbUnicodeFlags Bit(32) Bdy(Word),                              01479000
*     7 OtcbAutoCvtSet  Bit,          /* OtcbAutoCvt/All valid       */ 01480000
*     7 OtcbAutoCvt     Bit,          /* Enhanced ASCII enabled via  */ 01481000
*                                     /* BPX1FCT or BPX1ENV          */ 01482000
*     7 OtcbAutoCvtAll  Bit,          /* UNICODE enabled via         */ 01483000
*                                     /* BPX1FCT or BPX1ENV          */ 01484000
*     7 OtcbUnicodeSub  Bit,          /* _BPXK_UNICODE_SUB=YES,NO    */ 01485000
*     7 OtcbUnicodeMal  Bit,          /* _BPXK_UNICODE_MAL=YES,NO    */ 01486000
*     7 *               Bit(3),       /*                             */ 01487000
*     7 *               Fixed(8),     /*                             */ 01488000
*     7 OtcbPccsid      Fixed(16),    /* Program CCSID for I/O       */ 01489000
*                                     /* translation                 */ 01490000
*   /*                                                               */ 01491000
*   /* NOTE: The size of this control block is retrieved dynamically */ 01492000
*   /*       during runtime by the modules that need it.             */ 01493000
*   /*       When adding additional fields to this control block,    */ 01494000
*   /*                                                               */ 01495000
*   /* ===> THE ONLY MODULE THAT *MUST* BE RECOMPILED IS BPXPRIT @E6A*/ 01496000
*   /*                                                               */ 01497000
*   3 *                     Char(4),  /*                         @EKA*/ 01498000
*   3 OtcbCofEnd Bdy(Dword) Char(0);  /* Make CB end on dword    @PBA*/ 01499000
*   /*****************************************************************/ 01500000
*   /*  **** This is end of "OtcbCopyOnFork" area ****               */ 01501000
*   /*****************************************************************/ 01502000
*                                                               @SPACE; 01503000
*   /*****************************************************************/ 01504000
*   /* The following based area is used by BPXPRGUG and BPXPRSGR.    */ 01505000
*   /* A copy of the last getgroupsbyname will be saved here if done */ 01506000
*   /* after a __passwd() with the same name.                    @PJA*/ 01507000
*   /*****************************************************************/ 01508000
*DCL                                                                    01509000
*  1 OtcbRacGids Based,                                                 01510000
*    3 OtcbRacGidsHeader,                                               01511000
*      5 OtcbRacGidsTotNum Fixed(32),                                   01512000
*      5 OtcbRacGidsCurNum Fixed(32),                                   01513000
*    3 OtcbRacGidsList (*) Fixed(32);                         /* @PJA*/ 01514000
*                                                                       01515000
*   /*****************************************************************/ 01516000
*   /* The following bits are updated using CS, which require        */ 01517000
*   /* a word boundary.  Instead of defining a new word, OtcbFlags3  */ 01518000
*   /* is remapped here - for Recover=Latches support.               */ 01519000
*   /*****************************************************************/ 01520000
*DCL                                                                    01521000
*  1 OtcbFlags3Word Based(Addr(OtcbLoginName)+8) Bdy(Word)    /* @ECA*/ 01522000
*                                   Via(Alet(Otcb)),           /*@PWA*/ 01523000
*    7 *                   Bit(24),   /* Reserved                @ECA*/ 01524000
*    7 OtcbFlags3F3B2      Bit(8),    /* Flags3 byte 2           @ECA*/ 01525000
*      9 *                 Bit(6),    /* Available - see above   @ECA*/ 01526000
*      9 OtcbSelectedToTerminate Bit, /* LkLcp will cancel       @ECA*/ 01527000
*      9 OtcbNotCriticalRegion Bit;   /* LkLcp can cancel        @ECA*/ 01528000
*                                                                       01529000
*DCL                                                                    01530000
*  Otcb#ID    Char(4)   Constant('OTCB'),  /* Control Block Acronym  */ 01531000
*  Otcb#Len   Fixed(24) Constant(Length(Otcb)+Length(OtcbCopyOnFork)),  01532000
*                                     /* Length of OTCB          @PBC*/ 01533000
*  Otcb#OnlyLen Fixed(24) Constant(Length(Otcb)),                       01534000
*                                     /* Length of OTCB only     @E6A*/ 01535000
*  Otcb#SP    Fixed(8)  Constant(230);  /* Subpool for the OTCB  @P5C*/ 01536000
*/* End of PL/X Source                                               */ 01537000
* %IF BPXZOTCB_LIST ^= 'NO' &                                           01538000
*    ZCBPRINT ^= 'NO' %THEN                                             01539000
*   %GOTO BPXZOTCB_4;                                                   01540000
*   @LIST POP NOECHO;                                                   01541000
* %BPXZOTCB_4:;                                                         01542000
* %END;                                                                 01543000
