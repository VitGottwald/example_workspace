*        %GOTO IOVPRO  ;         /* Bilingual header                    00010000
         MACRO                                                          00020000
         BPXYIOV   &DSECT=YES,&LIST=YES                                 00030000
         GBLB  &IOV411                                                  00040000
         GBLC  &SYSAM64       Variable set by SYSSTATE AMODE64=YES      00050000
         AIF   (&IOV411 EQ 1).E411                                      00060000
&IOV411  SETB  1                                                        00070000
         AIF   ('&LIST' EQ 'YES').A411                                  00080000
         PUSH  PRINT  BPXYIOV: IOV I/O Vectors on Readv and WriteV      00090000
         PRINT OFF                      system calls                    00100000
         AGO   .A411                                                    00110000
*                                  */                                   00120000
*%IOVPRO : ;                                                            00130000
*/****START OF SPECIFICATIONS****************************************** 00140000
*                                                                       00150000
*    $MAC (BPXYIOV) COMP(SCPX1) PROD(BPX):                              00160000
*                                                                       00170000
*01* MACRO NAME: BPXYIOV                                                00180000
*                                                                       00190000
*01* DSECT NAME: IOV                                                    00200000
*                                                                       00210000
*01* DESCRIPTIVE NAME: I/O Vectors                                      00220000
*                                                                       00230000
*02*   ACRONYM: IOV                                                     00240000
**/                                                                     00250000
*/*01* PROPRIETARY STATEMENT=                                        */ 00260000
*/***PROPRIETARY_STATEMENT********************************************/ 00270000
*/*                                                                  */ 00280000
*/*                                                                  */ 00290000
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */ 00300000
*/* 5650-ZOS COPYRIGHT IBM CORP. 1993, 2015                          */ 00320003
*/*                                                                  */ 00330000
*/* STATUS= HBB77A0                                                  */ 00340003
*/*                                                                  */ 00350000
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 00360000
*/*                                                                     00370000
*                                                                       00380000
*01* EXTERNAL CLASSIFICATION:  GUPI                                     00390000
*01* END OF EXTERNAL CLASSIFICATION:                                    00400000
*                                                                       00410000
*01* FUNCTION:                                                          00420000
*                                                                       00430000
*      The IOV defines the I/O vectors  used on the readv, writev       00440000
*      sendMsg and recvMsg socket system calls.                         00450000
*                                                                       00460000
*01* METHOD OF ACCESS:                                                  00470000
*                                                                       00480000
*02*   PL/X:                                                            00490000
*                                                                       00500000
*        %INCLUDE SYSLIB(BPXYIOV)                                       00510000
*        By default, the IOV is based on IOVPTR. If                     00520000
*        other basing is desired, use %IOVBASE='BASED(XXXXXX)'.         00530000
*        If %IOVBASE='BASED(IOVPTR)' is coded, a Declare for            00540000
*        IOVPTR is also generated.                                      00550000
*                                                                       00560000
*      LP64 - To use the 8-byte fields as other than Char(8):      @D2A 00570000
*        Issue 'ASAXMAC SetEsameInfo'to define appropriate 8-byte types 00580000
*        Or define the following to suit your needs:                    00590000
*            %AsaxmacP64 = 'Ptr(64)'  <or>  'Char(8)'                   00600000
*            %AsaxmacF64 = 'Fixed(64)'  <or>  'Char(8)'                 00610000
*                       'Like()' and 'IsA()' may also be used of course 00620000
*                                                                       00630000
*02*   ASM:                                                             00640000
*        SYSSTATE  AMODE64=YES  if you are in AMODE(64)                 00650000
*                                                                       00660000
*        With DSECT=NO, storage is allocated in line                    00670000
*        and addressability is provided thru that DSECT or CSECT.       00680000
*        With DSECT=YES, a DSECT is produced and "USING IOV,reg"        00690000
*        is required for addressability.  Here "reg" contains the       00700000
*        address of IOV#LENGTH bytes of storage.                        00710000
*        The default is DSECT=YES.                                      00720000
*                                                                       00730000
*01* SIZE: IOV#LENGTH                                                   00740000
*                                                                       00750000
*01* POINTED TO BY: IOVPTR                                              00760000
*                                                                       00770000
*01* CREATED BY: Caller of system call                                  00780000
*                                                                       00790000
*01* DELETED BY: Caller of system call                                  00800000
*                                                                       00810000
*01* STORAGE ATTRIBUTES:                                                00820000
*02*   SUBPOOL/DATASPACE:  N/A                                          00830000
*02*   KEY:                N/A                                          00840000
*02*   RESIDENCY:          N/A                                          00850000
*                                                                       00860000
*01* FREQUENCY: Included with compile                                   00870000
*                                                                       00880000
*01* SERIALIZATION: N/A                                                 00890000
*                                                                       00900000
*01* DEPENDENCIES: None                                                 00910000
*                                                                       00920000
*01* NOTES:                                                             00930000
*                                                                       00940000
*    The total number of entries passed in the array may                00950000
*    not exceed Iov_Max, which is 120.                                  00960000
*                                                                       00970000
*    The sum of all the lengths may not exceed 2G.                      00980000
*                                                                       00990000
*    AMODE(64) Usage - - - - - - - - - - - - - - - - - - -       @T0A   01000000
*     1) In ASM: SYSSTATE AMODE64=YES must be used before               01010000
*                including this macro and all field names               01020000
*                remain the same as for 31-bit mode.                    01030000
*                                                                       01040000
*     2) In PL/X --> ALL FIELD NAMES ARE DIFFERENT <--                  01050000
*             You MUST use the IOV64 structure and those names          01060000
*             and field locations when calling BPX4 routines.           01070000
*                                                                       01080000
*             Issue 'ASAXMAC SetEsameInfo' to define the appropriate    01090000
*                8-byte data type for %AsaxmacP64 and %AsaxmacF64,      01100000
*                or define these macro variables yourself.              01110000
*                The Default is Char(8) for Amode(31) usage             01120000
*                where the space is not used.                           01130000
*                                                                       01140000
*             %PTR_64 may be set or %ASABEGIN_AMODE may be detected     01140104
*             to set IovPtr to Ptr(64).                                 01140204
*                                                                       01142100
*                                                                       01143000
*01* COMPONENT: OpenMVS (SCPX1)                                         01150000
*                                                                       01160000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     01170000
*                                                                       01180000
*01* EYE-CATCHER: None                                                  01190000
*                                                                       01200000
*01* CHANGE-ACTIVITY:                                                   01210000
*                                                                       01220000
* $D1=DOAA002 HOM1111 930430 PDNE: Integrated Socket support            01230000
*                                   DCR A002.02                         01240000
* $D2=DxxA505 HBB7704 000314 PDJT: LP64 & 64-Bit addressing             01250000
* $P1=PYN0220 HBB7708 020301 PDFO: Bilingual fixup                      01260000
* $T0=TJK0971 HBB7709 031031 PDJT: 64-Bit cleanup                       01270000
* $P1=ME06114 HBB7730 060310 PDJT: Define IOV_MAX for ASM               01280000
* $D3=DCRC595 HBB77A0 140601 PDMX: Amode64 autodata                     01281000
*                                                                       01290000
****END OF SPECIFICATIONS*********************************************/ 01300000
*        %GOTO IOVPLS  ;         /* Bilingual header                    01310000
.A411    ANOP  ,                                                        01320000
** BPXYIOV: Socket I/O Vectors                                          01330000
**  Used By: FCT OPN                                                    01340000
         AIF   ('&DSECT' EQ 'NO').B411                                  01350000
IOV                  DSECT ,                                            01360000
         AGO   .C411                                                    01370000
.B411    ANOP  ,                                                        01380000
IOV                  DS    0F                                           01390000
.C411    ANOP  ,                                                        01400000
IOV_ENTRY            DS    0F     Array Entry                           01410000
         AIF   ('&SYSAM64' EQ 'YES').AM64A                      @D2A    01420000
*  -------------------------- 31-bit format                             01430000
IOV_BASE             DS    A      Address of buffer                     01440000
IOV_LEN              DS    F      Length of buffer                      01450000
         AGO   .AM64B                                           @D2A    01460000
.AM64A   ANOP  ,                                                @D2A    01470000
*  -------------------------- 64-bit format                             01480000
IOV_BASE             DS    D      64-bit Address of buffer              01490000
IOV_LEN              DS    D      64-bit length of buffer               01500000
*                                                                       01510000
.AM64B   ANOP  ,                                                @D2A    01520000
                     SPACE ,                                            01530000
IOV#LENGTH          EQU   *-IOV_ENTRY Length of this structure          01540000
IOV_MAX             EQU   120     Maximum number of entries     @P1A    01550000
** BPXYIOV End                                                          01560000
         SPACE 3                                                        01570000
         AIF   ('&LIST' EQ 'YES').E411                                  01580000
         POP   PRINT                                                    01590000
.E411    ANOP  ,                                                        01600000
         MEND  ,                  Terminating PL/X comment           */ 01610000
*%IOVPLS : ;                                                            01620000
*%DCL ASABEGIN_AMODE CHAR EXTERNAL;                            /*@D3A*/ 01621002
*%DCL PTR_64 CHAR EXTERNAL;                                    /*@D3A*/ 01622004
*%IF IOVBASE='' %THEN                                                   01630000
*  %DO;                                                                 01640000
*    %IOVBASE='BASED(IOVPTR)';                                          01650000
*  %END;                                                                01660000
* %IF TRANSLATE(IOVBASE)='BASED(IOVPTR)' %THEN                          01670000
*  %DO;                                                                 01680001
*   %IF ASABEGIN_AMODE='64' ! PTR_64='YES' %THEN               /*@D3A*/ 01690004
*    %DO;                                                               01702000
*     DCL IOVPTR Ptr(64);    /* Pointer to the I/O Vector        @D3A*/ 01703000
*    %END;                                                              01704000
*   %ELSE                                                               01705000
*    %DO;                                                               01706000
*     DCL IOVPTR Ptr(31);    /* Pointer to the I/O Vector            */ 01707000
*    %END;                                                              01708000
*  %END;                                                                01709001
*                                                                       01710000
*  Declare                                                              01720000
*    1 Iov Bdy(word)   IOVBASE,                                         01730000
*      3 Iov_Entry(*),             /* Array of vectors               */ 01740000
*        5 Iov_base     Ptr(31),   /* Address of buffer              */ 01750000
*        5 Iov_len      Fixed(31); /* Length of buffer               */ 01760000
*                                                                       01770000
*                                                                       01780000
*                                   /* LP64 Versions ----------- @D2A*/ 01790000
*   %IF AsaxmacP64 = ''                                        /*@D2A*/ 01800000
*      %Then %AsaxmacP64 = 'Char(8)';                          /*@D2A*/ 01810000
*   %IF AsaxmacF64 = ''                                        /*@D2A*/ 01820000
*      %Then %AsaxmacF64 = 'Char(8)';                          /*@D2A*/ 01830000
*                                                              /*@D2A*/ 01840000
*   Declare                                                    /*@D2A*/ 01850000
*     1 Iov64 Bdy(Dword) IOVBASE,        /* LP64 Version         @D2A*/ 01860000
*       3 Iov64_Entry(*),                /*  Array of vectors    @D2A*/ 01870000
*         5 Iov64_base  AsaxmacP64,         /* Address of buffer @D2A*/ 01880000
*         5 Iov64_len   AsaxmacF64;         /* Length of buffer  @D2A*/ 01890000
*                                                              /*@D2A*/ 01900000
*         ] Note: Individual and total lengths limited to 2G     @D2A*/ 01910000
*                                                              /*@D2A*/ 01920000
*   Declare                                                    /*@D2A*/ 01930000
*     IOV64#LENGTH Fixed(32) Constant(Length(Iov64_Entry));    /*@D2A*/ 01940000
*                                   /* End LP64 ---------------- @D2A*/ 01950000
*                                                                       01960000
*Declare                                                                01970000
* IOV#LENGTH    Fixed(24) Constant(Length(Iov_Entry));                  01980000
