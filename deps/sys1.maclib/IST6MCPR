         MACRO                                                                  
         IST6MCPR &CONVID=,&QUALIFY=,&AREA=,&RECLEN=,&CRYPT=,&LOCKS=,  X        
               &ECB=,&EXIT=,&OPTCD=,&BRANCH=,&CONMODE=,&CONXMOD=,      X        
               &INVALP1=,&INVALP2=,&VTRINA=,&VTRINL=,&VTROUTA=,        X        
               &VTROUTL=                                           @D1C         
.*                                                                              
.* /***** START OF SPECIFICATIONS ************************************/         
.* /*                                                                */         
.* /*  MACRO NAME: IST6MCPR                                          */         
.* /*                                                                */         
.* /*  DESCRIPTIVE NAME: CONTROL = PREPRCV PROCESSOR                 */         
.* /*                                                                */         
.* /*  COPYRIGHT: LICENSED MATERIALS - PROPERTY OF IBM               */         
.* /*                                                                */         
.* /*             THIS PRODUCT CONTAINS "RESTRICTED MATERIALS OF IBM"*/         
.* /*                                                                */         
.* /*             5695-117 (C) COPYRIGHT IBM CORP. 1987, 1994.       */         
.* /*             ALL RIGHTS RESERVED.                               */         
.* /*                                                                */         
.* /*             U.S. GOVERNMENT USERS RESTRICTED RIGHTS -          */         
.* /*             USE, DUPLICATION OR DISCLOSURE RESTRICTED BY       */         
.* /*             GSA ADP SCHEDULE CONTRACT WITH IBM CORP.           */         
.* /*                                                                */         
.* /*             SEE COPYRIGHT INSTRUCTIONS.                        */         
.* /*                                                                */         
.* /*                                                                */         
.* /*  FUNCTION:                                                     */         
.* /*      GENERATES IN-LINE CODE FOR PROCESSING THE                 */         
.* /*      CONTROL=PREPRCV PARAMETER ON THE APPCCMD MACRO.           */         
.* /*                                                                */         
.* /*  NOTES:                                                        */         
.* /*                                                                */         
.* /*  PROCESSOR: ASSEMBLER                                          */         
.* /*                                                                */         
.* /*  CREATED BY:                                                   */         
.* /*                                                                */         
.* /*  INTERNAL MACROS:                                              */         
.* /*      IST6MCUA,IST6MCUP,IST6MCUC,IST6MCER                       */         
.* /*                                                                */         
.* /*  EXTERNAL REFERENCES: NONE                                     */         
.* /*                                                                */         
.* /*  CHANGE ACTIVITY:                                              */         
.* /*                                                                */         
.* /* $MAC(IST6MCPR),COMP(API),PROD(VTAM): CONTROL=PREPRCV PROCESSOR */         
.* /*                                                                */         
.* /* FLAG REASON   RELEASE DATE   ORIGIN  FLAG DESCRIPTORS          */         
.* /* ---- -------- ------- ------ ------  ---------------------     */         
.* /* $BA= ACC@@AMS HVT3401 891025 615520: PL/AS CONVERSION          */         
.* /* $B1= AE@@@AMS HVT3401 890707 460025: SELECTIVE DATA ENCRYPTION */         
.* /* $I1= FF@@@MST APPCFDX 911118 879315: APPC Full-Duplex support  */         
.* /* $L1= KA@@@PLD APPCRR  930726 446638: DCE Security Services     */         
.* /* $Y1= P114781  APPCRR  940518 576146: DCE Security Services     */         
.* /* $L2= KA@DR006 APPCRR  940713 576146: Vector Format             */         
.* /* $D1= ID@@@MST FPAPI   950308 143576: Fast Path API for APPC    */         
.* /*                                                                */         
.* /***** END OF SPECIFICATIONS **************************************/         
.*                                                                              
.* A-000000-999999                                             @R495810         
.*                                                                              
         GBLB  &ISTGEN                                                          
         GBLB  &ISTPR                                                           
         AIF   (&ISTPR EQ 1).PRINVKW                                            
*                                                                               
*  COPYRIGHT: LICENSED MATERIALS - PROPERTY OF IBM                              
*                                                                               
*             THIS PRODUCT CONTAINS "RESTRICTED MATERIALS OF IBM"               
*                                                                               
*             5695-117 (C) COPYRIGHT IBM CORP. 1987, 1994.                      
*             ALL RIGHTS RESERVED.                                              
*                                                                               
*             U.S. GOVERNMENT USERS RESTRICTED RIGHTS -                         
*             USE, DUPLICATION OR DISCLOSURE RESTRICTED BY                      
*             GSA ADP SCHEDULE CONTRACT WITH IBM CORP.                          
*                                                                               
*             SEE COPYRIGHT INSTRUCTIONS.                                       
*                                                                               
&ISTPR   SETB  1                                                                
.PRINVKW ANOP                                                                   
         IST6MCUC PREPRCV,CONTROL,INVALKW=&INVALP1                 @I1C         
         IST6MCUC PREPRCV,CONTROL,INVALKW=&INVALP2                 @I1A         
.*                                           CHECK INVALID APPCCMD              
.PRID    ANOP                                                                   
         AIF   ('&CONVID' EQ '').PRQFY                                          
         IST6MCUA KWVAL=&CONVID,LOC=RPL6CNVD-ISTRPL6X,BASEREG=14,      X        
               KW=CONVID                                                        
.*                                           PUT CONVID IN APPC AREA            
.PRQFY   ANOP                                                                   
         AIF   ('&QUALIFY' EQ '').PRLOCK                                        
.PRQFY1  ANOP                                                                   
         AIF   ('&QUALIFY' NE 'FLUSH').PRQFY2                                   
         IST6MCUC FLUSH,QUALIFY,                                       X        
               INVALKW=(AREA=&AREA,RECLEN=&RECLEN,LOCKS=&LOCKS,CRYPT=&CX        
               RYPT)                                               @B1C         
         AIF   (NOT &ISTGEN).PRCMKW2                                            
         MVI   RPL6QUAL-ISTRPL6X(14),RPL6FLSH                                   
*                                       PUT FLUSH CODE IN APPC AREA             
         AGO   .PRCMKW2                                                         
.PRQFY2  ANOP                                                                   
         AIF   ('&QUALIFY' NE 'CONFIRM').PRQFY3                                 
         IST6MCUC CONFIRM,QUALIFY,INVALKW=(AREA=&AREA,RECLEN=&RECLEN,CRX        
               YPT=&CRYPT)                                         @B1C         
         AIF   (NOT &ISTGEN).PRLOCK                                             
         MVI   RPL6QUAL-ISTRPL6X(14),RPL6CFRM                                   
*                                       PUT CONFIRM CODE IN APPC AREA           
         AGO   .PRLOCK                                                          
.PRQFY3  ANOP                                                                   
         AIF   ('&QUALIFY' NE 'DATAFLU').PRQFY4                                 
         IST6MCUC DATAFLU,QUALIFY,INVALKW=(LOCKS=&LOCKS)                        
         AIF   (NOT &ISTGEN).PRCMKW1                                            
         MVI   RPL6QUAL-ISTRPL6X(14),RPL6DFLU                                   
*                                       PUT DATAFLU CODE IN APPC AREA           
         AGO   .PRAREA                                                          
.PRQFY4  ANOP                                                                   
         AIF   ('&QUALIFY' NE 'DATACON').PRQFY5                                 
         AIF   (NOT &ISTGEN).PRLOCK                                             
         MVI   RPL6QUAL-ISTRPL6X(14),RPL6DCON                                   
*                                       PUT DATACON CODE IN APPC AREA           
         AGO   .PRLOCK                                                          
.PRQFY5  ANOP                                                                   
         IST6MCER 5,QUALIFY,&QUALIFY                                            
.PRLOCK  ANOP                                                                   
         AIF   ('&LOCKS' EQ '').PRCKPT                                          
.PRLOCK1 ANOP                                                                   
         AIF   ('&LOCKS' NE 'SHORT').PRLOCK2                                    
         AIF   (NOT &ISTGEN).PRCKPT                                             
         OI    RPL6FLG3-ISTRPL6X(14),RPL6SHRT SET LOCKS TO SHORT                
         AGO   .PRCKPT                                                          
.PRLOCK2 ANOP                                                                   
         AIF   ('&LOCKS' NE 'LONG').PRLOCK3                                     
         AIF   (NOT &ISTGEN).PRCKPT                                             
         NI    RPL6FLG3-ISTRPL6X(14),X'FF'-RPL6SHRT                             
*                                            SET LOCKS TO LONG                  
         AGO   .PRCKPT                                                          
.PRLOCK3 ANOP                                                                   
         IST6MCER 5,LOCKS,&LOCKS                                                
.PRCKPT  ANOP                                                                   
         AIF   ('&QUALIFY' EQ 'CONFIRM').PRCMKW2                                
.PRAREA  ANOP                                                                   
         AIF   ('&AREA' EQ '').PRDLEN                                           
         IST6MCUA KWVAL=&AREA,LOC=RPLAREA-IFGRPL,BASEREG=1,            X        
               KW=DATA_ADDRESS                                                  
.*                                           PUT DATA ADDRESS IN RPL            
.PRDLEN  ANOP                                                                   
         AIF   ('&RECLEN' EQ '').PRCRYPT                                        
         IST6MCUA KWVAL=&RECLEN,LOC=RPLRLEN-IFGRPL,BASEREG=1,          X        
               KW=DATA_LENGTH                                                   
.*                                           PUT DATA LENGTH IN RPL             
.PRCRYPT ANOP                                                    @B1A           
         AIF   ('&CRYPT' EQ '').PRCMKW1 CRYPT PARAMETER?         @B1A           
         AIF   ('&CRYPT'(1,3) EQ 'YES').PRCRYES CRYPT REQUEST?   @B1A           
         AIF   ('&CRYPT'(1,2) EQ 'NO').PRCRYNO CRYPT NON-REQ.?   @B1A           
         MNOTE  4,'CRYPT=&CRYPT INVALID-IGNORED'                 @B1A           
         AGO   .PRCMKW1                                          @B1A           
.PRCRYES ANOP                                                    @B1A           
         OI    RPLEXTD1-IFGRPL(1),X'08'    SET CRYPT REQUEST ON  @B1A           
         AGO   .PRCMKW1                                          @B1A           
.PRCRYNO ANOP                                                    @B1A           
         NI    RPLEXTD1-IFGRPL(1),X'F7'  SET CRYPT OFF           @B1A           
.*   QUALIFY=FLUSH OR CONFIRM BRANCHES TO PRCMKW2, THE REST OF                  
.*   QUALIFIES AND UNSPECIFIED QUALIFY BRANCH TO PRCMKW1                        
.*                                                                              
.PRCMKW1 ANOP                                                                   
         IST6MCUP CONMODE=&CONMODE,OPTCD=&OPTCD,ECB=&ECB,              X        
               EXIT=&EXIT,BRANCH=&BRANCH,CONXMOD=&CONXMOD,             X        
               CKCMODE=YES,        CHECK CONMODE & CONXMOD PARAMETERS  X        
               CKSYN=YES, ASY/SYN IS VALID FOR OPTCD PARAMETER         X        
               CKBUFF=XBUF      XBUFLST/BUFFLST/NBUFFLST IS VALID  @D1C         
.*                              OPCTD PARAMETER                    @D1A         
         AGO   .PRVECT                                             @Y1C         
.PRCMKW2 ANOP                                                                   
         IST6MCUP CONMODE=&CONMODE,OPTCD=&OPTCD,ECB=&ECB,              X        
               EXIT=&EXIT,BRANCH=&BRANCH,CONXMOD=&CONXMOD,             X        
               CKCMODE=YES,        CHECK CONMODE & CONXMOD PARAMETERS  X        
               CKSYN=YES,          ASY/SYN IS VALID FOR OPTCD          X        
               CKBUFF=NO           BUFFLST/NBUFFLST IS INVALID     @I1C         
.*                                 OPTCD PARAMETER                              
.PRVECT  ANOP                      ENSURE BOTH PARMS CODED OR BOTH ARE          
.*                                 NOT CODED                  @L1A @Y1M         
         AIF   (('&VTRINA' EQ '') AND ('&VTRINL' EQ '')).PRVOUT    @D1C         
         AIF   (('&VTRINA' EQ '') OR ('&VTRINL' EQ '')).PRERVI     @D1C         
         IST6MCUA KWVAL=&VTRINA,LOC=RPL6VAIA-ISTRPL6X,BASEREG=14,      X        
               KW=VTAM_TO_APPL_VECTOR_ADDRESS                      @D1C         
.*                                     STORE VECTOR AREA INPUT ADDRESS          
.*                                                                 @L1A         
         IST6MCUA KWVAL=&VTRINL,LOC=RPL6VAIL-ISTRPL6X,BASEREG=14,      X        
               KW=VTAM_TO_APPL_VECTOR_LENGTH,LEN=2                 @D1C         
.*                                     STORE VECTOR AREA INPUT LENGTH           
.*                                                                 @L1A         
         AGO   .PRVOUT                                             @L1A         
.PRERVI  ANOP                                                 @L1A @Y1M         
         IST6MCER 13,VTRINA,VTRINL     ONLY ONE PARM CODED         @D1C         
.PRVOUT  ANOP                      ENSURE BOTH PARMS CODED OR BOTH ARE          
.*                                 NOT CODED                       @D1A         
         AIF   (('&VTROUTA' EQ '') AND ('&VTROUTL' EQ '')).PRREQ   @D1A         
         AIF   (('&VTROUTA' EQ '') OR ('&VTROUTL' EQ '')).PRERVO   @D1A         
         IST6MCUA KWVAL=&VTROUTA,KW=APPL_TO_VTAM_VECTOR_ADDRESS,       X        
               LOC=RPL6VAOA-ISTRPL6X,BASEREG=14                    @D1A         
.*                                     PUT VECTOR AREA INPUT ADDRESS            
.*                                     IN APPC AREA                @D1A         
         IST6MCUA KWVAL=&VTROUTL,KW=APPL_TO_VTAM_VECTOR_LENGTH,LEN=2,  X        
               LOC=RPL6VAOL-ISTRPL6X,BASEREG=14                    @D1A         
.*                                     PUT VECTOR AREA INPUT LENGTH             
         AGO   .PRREQ                                              @D1A         
.PRERVO  ANOP                                                      @D1A         
         IST6MCER 13,VTROUTA,VTROUTL   ONLY ONE PARM CODED         @D1A         
.PRREQ   ANOP                                                                   
         AIF   (NOT &ISTGEN).PREND                                              
         MVI   RPL6REQ-ISTRPL6X(14),RPL6PREC                                    
*                              PUT PREPRCV REQUEST CODE IN APPC AREA            
.PREND   MEND                                                                   
