*/**  Start of Specifications for BLSAPCQE ***************************/ 00010000
*/*                                                                  */ 00020000
*/*  $MAC(BLSAPCQE) COMP(SC132) PROD(HBB7790):                       */ 00030003
*/*                                                                  */ 00040000
*/*  MACRO NAME = BLSAPCQE                                           */ 00050000
*/*                                                                  */ 00060000
*/*  DESCRIPTIVE NAME = Contention Queue Element (CQE) create        */ 00070000
*/*                     service parameter list                       */ 00080000
*/*                                                                  */ 00090000
*/*  PROPRIETARY STATEMENT =                                         */ 00100003
*/*                                                                  */ 00110003
*/*    5650-ZOS COPYRIGHT IBM CORP. 1986, 2013                       */ 00120003
*/*    LICENSED MATERIALS - PROPERTY OF IBM                          */ 00130003
*/*                                                                  */ 00140003
*/*  STATUS = HBB7790                                                */ 00150003
*/*                                                                  */ 00160003
*/*  EXTERNAL CLASSIFICATION: PI                                     */ 00180000
*/*  END OF EXTERNAL CLASSIFICATION:                                 */ 00190000
*/*                                                                  */ 00200000
*/*  FUNCTION = Describe the structure of the contention queue       */ 00210000
*/*             service parameter list used by IPCS dump exits to    */ 00220000
*/*             create contention queue entries in the dump          */ 00230000
*/*             directory.                                           */ 00240000
*/*                                                                  */ 00250000
*/*    OPERATION = Create a mapping for BLSAPCQE                     */ 00260000
*/*                                                                  */ 00270000
*/*     METHOD OF ACCESS:                                            */ 00280000
*/*                                                                  */ 00290000
*/*      PLS = The macro can expand in a LIST or SUBLIST format.     */ 00300000
*/*                                                                  */ 00310000
*/*        Set macro variable EHBENDCHAR to comma or semicolon.      */ 00320000
*/*        Defaults to semicolon for LIST form and must be set       */ 00330000
*/*        for the SUBLIST form.  For example:                       */ 00340000
*/*                                                                  */ 00350000
*/*          %DCL EHBENDCHAR EXTERNAL CHAR                           */ 00360000
*/*          %EHBENDCHAR=','                                         */ 00370000
*/*                                                                  */ 00380000
*/*      LIST FORM    = ?BLSAPCQE MF(LIST,PREFIX,STORCLASS)          */ 00390000
*/*                                                                  */ 00400000
*/*      SUBLIST FORM = ?BLSAPCQE MF(SUBLIST,PREFIX,STORCLASS,LEVEL) */ 00410000
*/*                                                                  */ 00420000
*/*          MF                                                      */ 00430000
*/*         PARM  Meaning                                            */ 00440000
*/*         ----  -------------------------------------------------- */ 00450000
*/*                                                                  */ 00460000
*/*          1    LIST or L for LIST form                            */ 00470000
*/*               SUBLIST or S for SUBLIST form                      */ 00480000
*/*                                                                  */ 00490000
*/*          2    PREFIX is from 1 to 4 alpha-numeric starting with  */ 00500000
*/*               an alpha character. e.g. 'PCQE'                    */ 00510000
*/*                                                                  */ 00520000
*/*          3    STORAGE CLASS and initialization attribute.        */ 00530000
*/*               COMPLETE keyword will cause initial values to      */ 00540000
*/*               be generated.  Default storage class with COMPLETE */ 00550000
*/*               is STATIC LOCAL.  Can specify BASED, DEFINED ...   */ 00560000
*/*                                                                  */ 00570000
*/*          4    Structure level number to start with.  This can    */ 00580000
*/*               only be specified on the SUBLIST form.             */ 00590000
*/*                                                                  */ 00600000
*/*      ASM = The assembler format takes the form                   */ 00610000
*/*                                                                  */ 00620000
*/*            LABEL  BLSAPCQE DSECT=YES                             */ 00630000
*/*                                  NO                              */ 00640000
*/*                                                                  */ 00650000
*/*            The LABEL is used as the prefix for all the           */ 00660000
*/*            field names.  The label cannot exceed 4 characters.   */ 00670000
*/*            For example code 'PCQE   BLSAPCQE DSECT=YES'          */ 00680000
*/*                                                                  */ 00690000
*/*            DSECT=YES will cause a DSECT to be generated.         */ 00700000
*/*                      The initial values will be ignored.         */ 00710000
*/*                                                                  */ 00720000
*/*            DSECT=NO  will cause a set of initialized DCs         */ 00730000
*/*                      to be generated.                            */ 00740000
*/*                                                                  */ 00750000
*/*    CHARACTER CODE DEPENDENCIES = None                            */ 00760000
*/*    RESTRICTIONS = None                                           */ 00770000
*/*    REGISTER CONVENTIONS = None                                   */ 00780000
*/*                                                                  */ 00790000
*/*  DSECT NAME: PCQE                                                */ 00800000
*/*  COMPONENT: IPCS (SC132)                                         */ 00810000
*/*  EYE CATCHER: PCQE                                               */ 00820000
*/*  OFFSET: 0                                                       */ 00830000
*/*  LENGTH: 4                                                       */ 00840000
*/*  STORAGE ATTRIBUTES:                                             */ 00850000
*/*    MAIN STORAGE:                                                 */ 00860000
*/*    VIRTUAL STORAGE:                                              */ 00870000
*/*    AUXILIARY STORAGE:                                            */ 00880000
*/*  SUBPOOL: any key 8                                              */ 00890000
*/*  KEY: 8                                                          */ 00900000
*/*  DATA SPACE: no                                                  */ 00910000
*/*  RESIDENCY: LOC(ANY)                                             */ 00920000
*/*  SIZE: 154                                                       */ 00930000
*/*  CREATED BY: Invoker of CQE create service                       */ 00940000
*/*  POINTED TO BY: CQE create service parameter list                */ 00950000
*/*  SERIALIZATION:  none                                            */ 00960000
*/*                                                                  */ 00970000
*/*  NOTES =                                                         */ 00980000
*/*    DEPENDENCIES = This macro requires external macro variables   */ 00990000
*/*                   be declared in one of the two following ways:  */ 01000000
*/*                                                                  */ 01010000
*/*                   1. Use the BLSRPROC macro to generate the      */ 01020000
*/*                      PROC statement and macro declares.          */ 01030000
*/*                                                                  */ 01040000
*/*                   2. Use the BLSRMAC0 macro to generate only     */ 01050000
*/*                      the declares.                               */ 01060000
*/*                                                                  */ 01070000
*/* ================================================================ */ 01080000
*/*                                                                  */ 01090000
*/*  CHANGE ACTIVITY =                                               */ 01100000
*/*                                                                  */ 01110000
*/*    Products =                                                    */ 01120000
*/* $L0= SRVASADA,JBB2220,84108,PD31: Automatic SADMP analysis       */ 01130000
*/* $L1= SRVASADA,JBB2220,84108,PD31: Same as L0, copied code        */ 01140000
*/* $L2= IPCSENH,HBB3310,86158,PDE1: Suppress assembler macro in     */ 01150000
*/*      PLAS source listing                                         */ 01160000
*/* $L3= GRSCTIMP,HBB7770,09149,PDFY: Add request and grant times    */ 01170000
*/* $L4= ME24482  HBB7790 120723 PDXB: &LABEL                        */ 01171004
*/*                                                                  */ 01180000
*/* ---------------------------------------------------------------- */ 01190000
*/*                                                                  */ 01200000
*/*    Design changes = none                                         */ 01210000
*/*                                                                  */ 01220000
*/* ---------------------------------------------------------------- */ 01230000
*/*                                                                  */ 01240000
*/*    PTMs =                                                        */ 01250000
*/*    = PA20585,JBB2220,85273,PD31: Delete leading blank line       */ 01260000
*/* $P1= PA20624,JBB2220,85283,PD31: Supply a default length for     */ 01270000
*/*      the assembler structure when DSECT=NO is specified.         */ 01280000
*/*    = ME05441,HBB7730,06011,PDE1: Prolog cleanup                  */ 01290000
*/*    = ME18591,HBB7770,100306,RSTLSV: Asset Protection             */ 01290500
*/*                                                                  */ 01300000
*/* ---------------------------------------------------------------- */ 01310000
*/*                                                                  */ 01320000
*/*    Maintenance = none                                            */ 01330000
*/*                                                                  */ 01340000
*/** End of Specifications for BLSAPCQE ******************************/ 01350000
*                                                                       01360000
*   %IF TRUTH ^= TRUTH %THEN        /* Skip assembler macro      @L2P*/ 01370000
*     %DO;                          /* Skip assembler macro      @L2P*/ 01380000
*                                                                       01390000
*/* Treat assembler macro as PLAS full-width remark ******************* 01400000
         MACRO                                                          01410000
&LAB     BLSAPCQE &DSECT=YES                                       @L4C 01420004
         LCLC  &P                                                  @L4A 01421004
&P       SETC  '&LAB'                                              @L4A 01422004
         AIF   ('&P' NE '').HAVELAB                                @L4A 01423004
&P       SETC  'PCQE'                                              @L4A 01424004
.HAVELAB ANOP                                                      @L4A 01425004
         GBLB    &EPCQE           Blurb produced once in assembly       01430000
         IEZBITS ,                Define symbolic bits             @L1P 01440000
         AIF   ('&DSECT' EQ 'NO').L010 No DSECT statement          @L1P 01450000
&P       DSECT ,                  CQE create parameter list             01460000
         AGO   .L020              Define structure of record       @L1P 01470000
.L010    ANOP  ,                  No DSECT statement               @L1P 01480000
         DS    0D                 Align on doubleword boundary     @P1C 01490000
&P       DS    0CL154             CQE create parameter list        @P1A 01500000
.L020    ANOP  ,                  Define structure of record       @L1P 01510000
&P.000   DS    0C                 Begin BLSAPCQE               #MD85283 01520000
         AIF   (&EPCQE).L030      Blurb produced once in assembly       01530000
*-----------------------------------------------------------------      01540000
* A CQE create parameter list (PCQE) defines the owner or waiter        01550000
* for a resource which may be in contention.                            01560000
*-----------------------------------------------------------------      01570000
.L030    ANOP  ,                  Blurb produced once in assembly  @L1P 01580000
&P.ID    DS    0CL5               Control block identifier              01590000
&P.IDC   DC    CL4'PCQE'          Control block acronym                 01600000
&P.IDL   DC    CL1'1'             Control block level indicator         01610000
         DC    XL3'00'            Reserved                              01620000
&P.RSA   DC    A(0)               Address of resource name              01630000
&P.ADA   DC    A(0)               Address of additional data            01640000
         DC    F'0'               Reserved                              01650000
&P.RSL   DC    H'0'               Length of resource name               01660000
&P.ADL   DC    H'0'               Length of additional data             01670000
&P.SYNM  DC    CL8'        '      System name (e.g.CVTSNAME)            01680000
&P.JOBN  DC    CL8'        '      Jobname or component specific id      01690000
&P.OW    DC    CL2'O '            O=Owner W=Waiter                      01700000
         DC    XL2'00'            Reserved                              01710000
&P.AS    BLSRDATS DSECT=NO        Address space identifier         @L1P 01720000
&P.LAD   DC    A(0)               Logical address                  @L1P 01730000
&P.D     BLSRDATC DSECT=NO        Storage characteristics          @L1P 01740000
&P.MODN  DC    CL8'        '      Name of module requesting the        *01750000
                                  service                          @L1P 01760000
&P.REQA  DC    A(0)               Address of time of request (TOD) @L3A 01770000
&P.GRTA  DC    A(0)               Address of time of grant (TOD)   @L3A 01780000
         DC    XL14'00'           Reserved                              01790000
&P.999   DS    0C                 End BLSAPCQE                 #MD85283 01800000
         MEND  ,                  End assembler macro BLSAPCQE       */ 01810000
*                                                                       01820000
*     %END;                         /* Assembler macro skipped   @L2P*/ 01830000
*%BLSAPCQE:                         /* CQE create parameter list     */ 01840000
*   MACRO KEYS(MF);                                                     01850000
*                                                                       01860000
*/*------------------------------------------------------------------*/ 01870000
*/* Define Macro-Variables                                           */ 01880000
*/*------------------------------------------------------------------*/ 01890000
*                                                                       01900000
*   DECLARE                         /* External macro variables      */ 01910000
*     ELSAPCQE CHARACTER EXTERNAL,  /* BLSAPCQE global data          */ 01920000
*     EHBENDCHAR CHARACTER EXTERNAL, /* Final punctuation        @L1P*/ 01930000
*     EHBBLRPENDESS CHARACTER EXTERNAL, /* Deferred macro requests      01940000
*                                                                @L1P*/ 01950000
*     EHBLVL1  CHARACTER EXTERNAL,  /* First level number        @L1P*/ 01960000
*     EHBLVL2  CHARACTER EXTERNAL,  /* Second level number       @L1P*/ 01970000
*     EHBLVL3  CHARACTER EXTERNAL,  /* Third level number        @L1P*/ 01980000
*     EHBLVL4  CHARACTER EXTERNAL,  /* Fourth level number       @L1P*/ 01990000
*     EHBMF1   CHARACTER EXTERNAL,  /* Macro form                @L1P*/ 02000000
*     EHBMF2   CHARACTER EXTERNAL,  /* Prefix characters         @L1P*/ 02010000
*     EHBMF3   CHARACTER EXTERNAL,  /* Scope/storage class       @L1P*/ 02020000
*     EHBMF3A  CHARACTER EXTERNAL,  /* Complete initialization flag     02030000
*                                                                @L1P*/ 02040000
*     BLSRENDDECLARE CHARACTER EXTERNAL, /* Deferred declarations       02050000
*                                                                @L1P*/ 02060000
*     EHBCOL1  FIXED EXTERNAL,      /* First indentation column  @L1P*/ 02070000
*     EHBCOL2  FIXED EXTERNAL,      /* Second indentation column @L1P*/ 02080000
*     EHBCOL3  FIXED EXTERNAL,      /* Third indentation column  @L1P*/ 02090000
*     EHBCOL4  FIXED EXTERNAL,      /* Fourth indentation column @L1P*/ 02100000
*     EHBCSECT CHARACTER EXTERNAL,  /* CSECT name                @L1P*/ 02110000
*     EHBRC    FIXED EXTERNAL;      /* Macro return code         @L1P*/ 02120000
*   DEACTIVATE ELSAPCQE,BLSRENDDECLARE; /* Prevent accidents         */ 02130000
*   DECLARE                         /* Internal macro variables      */ 02140000
*     CENDCHAR CHARACTER INTERNAL,  /* Final punctuation         @L1P*/ 02150000
*     CLVL2    CHARACTER INTERNAL,  /* Second level number       @L1P*/ 02160000
*     CLVL3    CHARACTER INTERNAL,  /* Third level number        @L1P*/ 02170000
*     CLVL4    CHARACTER INTERNAL,  /* Fourth level number       @L1P*/ 02180000
*     CMF1     CHARACTER INTERNAL,  /* Macro form                @L1P*/ 02190000
*     CMF2     CHARACTER INTERNAL,  /* Prefix characters         @L1P*/ 02200000
*     CMF3A    CHARACTER INTERNAL,  /* Complete initialization flag     02210000
*                                                                @L1P*/ 02220000
*     CQCOMPLETE CHARACTER INTERNAL, /* Literal                  @L1P*/ 02230000
*     CQINITIAL CHARACTER INTERNAL, /* Literal                   @L1P*/ 02240000
*     FCOL2    FIXED INTERNAL,      /* Second indentation column @L1P*/ 02250000
*     FCOL3    FIXED INTERNAL,      /* Third indentation column  @L1P*/ 02260000
*     FCOL4    FIXED INTERNAL,      /* Fourth indentation column @L1P*/ 02270000
*     FRC      FIXED INTERNAL,      /* Macro return code         @L1P*/ 02280000
*     F1       FIXED INTERNAL;      /* Utility variable          @L1P*/ 02290000
*   DEACTIVATE CENDCHAR,CLVL2,CLVL3,CLVL4,CMF1,CMF2,CMF3A,CQCOMPLETE,   02300000
*       CQINITIAL,FCOL2,FCOL3,FCOL4,FRC,F1; /* Prevent accidents @L1P*/ 02310000
*   CQINITIAL = ' INITIAL(';        /* Literal                   @L1P*/ 02320000
*   CQCOMPLETE = 'COMPLETE';        /* Literal                   @L1P*/ 02330000
*   ANSWER('?'!!MACLABEL!!'BLRMF('!!MF!!') FORMS(L,S);'); /*     @L1P*/ 02340000
*   CENDCHAR = EHBENDCHAR;          /* Final punctuation         @L1P*/ 02350000
*   EHBENDCHAR = ',';               /* Final punctuation         @L1P*/ 02360000
*   CLVL2 = EHBLVL2;                /* Second level number       @L1P*/ 02370000
*   CLVL3 = EHBLVL3;                /* Third level number        @L1P*/ 02380000
*   CLVL4 = EHBLVL4;                /* Fourth level number       @L1P*/ 02390000
*   CMF1 = EHBMF1;                  /* Macro form                @L1P*/ 02400000
*   CMF2 = EHBMF2;                  /* Prefix characters         @L1P*/ 02410000
*   CMF3A = EHBMF3A;                /* Complete initialization flag     02420000
*                                                                @L1P*/ 02430000
*   FCOL2 = EHBCOL2;                /* Second indentation column @L1P*/ 02440000
*   FCOL3 = EHBCOL3;                /* Third indentation column  @L1P*/ 02450000
*   FCOL4 = EHBCOL4;                /* Fourth indentation column @L1P*/ 02460000
*   FRC = EHBRC;                    /* Macro return code         @L1P*/ 02470000
*   BLSRENDDECLARE = BLSRENDDECLARE !! CMF2 !!                          02480000
*       'PCQE CHAR(5) CONSTANT(''PCQE1''),' !!                          02490000
*       '/*PCQE identifier constant used to fill in PCQEID*/' !! CMF2   02500000
*       !! 'OWN CHAR(2) CONSTANT(''O ''),/*Owner CQE create request*/'  02510000
*       !! CMF2 !!                                                      02520000
*       'WAIT CHAR(2) CONSTANT(''W ''),/*Waiter CQE create request*/';  02530000
*   IF CMF1 = 'LIST' THEN           /* List form                 @L1P*/ 02540000
*     ANSWER('DECLARE/*BLSAPCQE #MD85283*/') COLUMN(5); /*       @P1C*/ 02550000
*   ANSWER(EHBLVL1!!CMF2!!' BOUNDARY(WORD)'!!EHBMF3!!',/*BLSAPCQE'!!    02560000
*       MACLIST!!' '!!MACKEYS!!'*/') COLUMN(EHBCOL1);                   02570000
*   IF CMF1 = 'LIST' THEN           /* List form                 @L1P*/ 02580000
*     IF INDEX(ELSAPCQE,',BLURB') = 0 THEN /* Produce blurb          */ 02590000
*       DO;                         /* produce BLURB once        @L1P*/ 02600000
*         ANSWER('/*****************************************************02610000
****************/ /* Contention Queue Element (CQE) create service param02620000
*eter list.    */ /*                                                    02630000
*              */ /* FUNCTION = A PCQE is used to describe a unit of wor02640000
*k which       */ /*    owns or is waiting for a resource.  The CQE crea02650000
*te service    */ /*    uses this information to create dump directory r02660000
*ecords        */ /*    to describe resources in contention.            02670000
*              */ /*                                                    02680000
*              */ /* CONTENTS = Major areas within this structure are:  02690000
*              */ /*   RESOURCE - Address and length of the resource nam02700000
*e             */ /*   DATA     - Address and length of additional data 02710000
*which relates */ /*              any information required for debugging02720000
*.             */ ') COLUMN(2);                                         02730000
*         ANSWER('/*   JOBNAME  - Specified when known or is different f02740000
*rom the       */ /*              standard jobname acquired from the dum02750000
*p.            */ /*   SYSNAME  - System name which identifies a system 02760000
*other than    */ /*              the dumped system which owns or is wai02770000
*ting for a    */ /*              resource.                             02780000
*              */ /*   DATS     - Address space block.  This defines cha02790000
*racteristics  */ /*              for the control block representing the02800000
* unit of work.*/ /*              (e.g. virtual storage in ASID xxxx)   02810000
*              */ ') COLUMN(2);                                         02820000
*         ANSWER('/*   LAD      - Logical address.  This is the location02830000
* of the       */ /*              control block which represents the uni02840000
*t of work     */ /*              which owns or is waiting for the resou02850000
*rce.          */ /*   DATC     - Data characteristics.  For this servic02860000
*e, the user   */ /*              will generally only have to fill in th02870000
*e name of a   */ /*              control block (e.g. TCB).             02880000
*              */ /*****************************************************02890000
****************/ ') COLUMN(2);                                         02900000
*         ELSAPCQE = ELSAPCQE !! ',BLURB'; /* Blurb produced         */ 02910000
*       END;                        /* produce BLURB once        @L1P*/ 02920000
*   ANSWER(CLVL2!!CMF2!!'ID CHAR(5)') COLUMN(FCOL2); /*          @L1P*/ 02930000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 02940000
*     ANSWER(CQINITIAL!!CMF2!!'PCQE)');                                 02950000
*   ANSWER(',/*Control block identifier*/'); /*                  @L1P*/ 02960000
*   ANSWER(CLVL3!!CMF2!!'IDC CHARACTER(4),/*Control block acronym*/')   02970000
*       COLUMN(FCOL3);              /*                           @L1P*/ 02980000
*   ANSWER(CLVL3!!CMF2!!'IDL CHARACTER(1),/*Control block level */')    02990000
*       COLUMN(FCOL3);              /*                           @L1P*/ 03000000
*   ANSWER(CLVL2!!'* BIT(24)') COLUMN(FCOL2);                           03010000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 03020000
*     ANSWER(CQINITIAL!!'''00''X)'); /*                          @L1P*/ 03030000
*   ANSWER(',/*Reserved        */');                                    03040000
*   ANSWER(CLVL2!!CMF2!!'RSA  POINTER(32)') COLUMN(FCOL2);              03050000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 03060000
*     ANSWER(CQINITIAL!!'ZZZZNULL)'); /*                         @L1P*/ 03070000
*   ANSWER(',/*Address of resource name.*/');                           03080000
*   ANSWER(CLVL2!!CMF2!!'ADA  POINTER(32)') COLUMN(FCOL2);              03090000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 03100000
*     ANSWER(CQINITIAL!!'ZZZZNULL)'); /*                         @L1P*/ 03110000
*   ANSWER(',/*Address of additional data */');                         03120000
*   ANSWER(CLVL2!!'* POINTER(32)') COLUMN(FCOL2);                       03130000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 03140000
*     ANSWER(CQINITIAL!!'ZZZZNULL)'); /*                         @L1P*/ 03150000
*   ANSWER(',/*Reserved        */'); /*                          @L1P*/ 03160000
*   ANSWER(CLVL2!!CMF2!!'RSL  FIXED(16)') COLUMN(FCOL2);                03170000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 03180000
*     ANSWER(CQINITIAL!!'0)');                                          03190000
*   ANSWER(',/*Length of resource name*/');                             03200000
*   ANSWER(CLVL2!!CMF2!!'ADL  FIXED(16)') COLUMN(FCOL2);                03210000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 03220000
*     ANSWER(CQINITIAL!!'0)');      /*                           @L1P*/ 03230000
*   ANSWER(',/*Length of additional data*/');                           03240000
*   ANSWER(CLVL2!!CMF2!!'SYNM CHAR(8)') COLUMN(FCOL2);                  03250000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 03260000
*     ANSWER(CQINITIAL!!'ZZZPGM40)');                                   03270000
*   ANSWER(',/*System name (e.g. from CVTSNAME)*/');                    03280000
*   ANSWER(CLVL2!!CMF2!!'JOBN CHAR(8)') COLUMN(FCOL2);                  03290000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 03300000
*     ANSWER(CQINITIAL!!'ZZZPGM40)'); /*                         @L1P*/ 03310000
*   ANSWER(',/*Jobname or component specific identifier*/');            03320000
*   ANSWER(CLVL2!!CMF2!!'OW   CHAR(2)') COLUMN(FCOL2);                  03330000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 03340000
*     ANSWER(CQINITIAL!!CMF2!!'OWN)');                                  03350000
*   ANSWER(',/*O=owner W=waiter for the resource*/');                   03360000
*   ANSWER(CLVL2!!'* BIT(16)') COLUMN(FCOL2);                           03370000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 03380000
*     ANSWER(CQINITIAL!!'''00''X)'); /*                          @L1P*/ 03390000
*   ANSWER(',/*Reserved*/');        /*                           @L1P*/ 03400000
*   ANSWER('?BLSRDATS(ZZZASTCV,ZZZAS1NO,ZZZAS2M) MF(SUBLIST,'!!CMF2!!   03410000
*       'AS,'!!CMF3A!!','!!CLVL2!!');'); /* Address space identifier */ 03420000
*   ANSWER(CLVL2!!CMF2!!'LAD POINTER(32)') COLUMN(FCOL2); /*     @L1P*/ 03430000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 03440000
*     ANSWER(CQINITIAL!!'ZZZZNULL)'); /*                         @L1P*/ 03450000
*   ANSWER(',/*Logical address*/'); /*                           @L1P*/ 03460000
*   ANSWER('?BLSRDATC(ZZZDTYM) MF(SUBLIST,'!!CMF2!!'D,'!!CMF3A!!','!!   03470000
*       CLVL2!!');');               /* Storage characteristics       */ 03480000
*   ANSWER(CLVL2!!CMF2!!'MODN CHAR(8)') COLUMN(FCOL2); /*        @L1P*/ 03490000
*   IF CMF3A = CQCOMPLETE THEN      /*                           @L1P*/ 03500000
*     IF LENGTH(EHBCSECT) >= 8 THEN /* CSECT name defined by BLRPROC    03510000
*                                                                @L1P*/ 03520000
*       ANSWER(CQINITIAL!!QUOTE(EHBCSECT(1:8))!!')'); /*         @L1P*/ 03530000
*     ELSE                          /* No token specified        @L1P*/ 03540000
*       ANSWER(CQINITIAL!!'''        '')'); /* Default is blanks @L1P*/ 03550000
*   ANSWER(',/*Name of module requesting the service*/'); /*     @L1P*/ 03560000
*   ANSWER(CLVL2!!CMF2!!'REQA PTR(32)') COLUMN(FCOL2); /*        @L3A*/ 03570000
*   IF CMF3A = CQCOMPLETE THEN      /*                           @L3A*/ 03580000
*     ANSWER(CQINITIAL!!'''00''X)'); /*                          @L3A*/ 03590000
*   ANSWER(',/*Address of time of request (TOD)     */'); /*     @L3A*/ 03600000
*   ANSWER(CLVL2!!CMF2!!'GRTA PTR(32)') COLUMN(FCOL2); /*        @L3A*/ 03610000
*   IF CMF3A = CQCOMPLETE THEN      /*                           @L3A*/ 03620000
*     ANSWER(CQINITIAL!!'''''b)');  /*                           @L3A*/ 03630000
*   ANSWER(',/*Address of time of grant (TOD)       */'); /*     @L3A*/ 03640000
*   ANSWER(CLVL2!!'* BIT(112)') COLUMN(FCOL2);                /* @L3C*/ 03650000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required   @L1P*/ 03660000
*     ANSWER(CQINITIAL!!'''00''X)'); /*                          @L1P*/ 03670000
*   ANSWER(',/*Reserved*/');        /*                           @L1P*/ 03680000
*   ANSWER(CLVL2!!CMF2!!'999 CHARACTER(0)'!!CENDCHAR!!                  03690000
*       '/*BLSAPCQE #MD85283*/') COLUMN(FCOL2); /*               @P1C*/ 03700000
*   IF CENDCHAR = ';' THEN          /*                           @L1P*/ 03710000
*     ANSWER('?BLSR002;');          /* Process deferred declarations    03720000
*                                                                @L1P*/ 03730000
*   ANSWER('?BLR003(BLSAPCQE,'!!CHAR(EHBRC)!!');');                     03740000
*   RETURN CODE(FRC);               /*                           @L1P*/ 03750000
*   %END BLSAPCQE;                                                      03760000
