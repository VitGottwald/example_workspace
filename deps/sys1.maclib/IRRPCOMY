*%;    /*                                                               00000100
         MACRO                                                          00000200
         IRRPCOMY &DSECT=YES                                         */ 00000300
*/****START OF SPECIFICATIONS****************************************** 00000400
*                                                                       00000500
*  $MAC (IRRPCOMY) COMP(SC1BN) PROD(SAF):                               00000600
*                                                                       00000700
*01* MACRO NAME: IRRPCOMY                                               00000800
*                                                                       00000900
*01* DSECT NAME: COMY                                                   00001000
*                                                                       00001100
*01* DESCRIPTIVE NAME: SAF Common Security Parameter List (64 bit)      00001200
*                                                                       00001300
*02*   ACRONYM: COMY                                                    00001400
**/                                                                     00001500
*/*01* PROPRIETARY STATEMENT=                                        */ 00001600
*/***PROPRIETARY_STATEMENT********************************************/ 00001700
*/*                                                                  */ 00001800
*/*                                                                  */ 00001900
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */ 00002000
*/* 5650-ZOS COPYRIGHT IBM CORP. 2006, 2021                          */ 00002100
*/*                                                                  */ 00002200
*/* STATUS= HBB77D0                                                  */ 00002300
*/*                                                                  */ 00002400
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 00002500
*/*                                                                  */ 00002600
*/*01* EXTERNAL CLASSIFICATION: PSPI                                 */ 00002700
*/*01* END OF EXTERNAL CLASSIFICATION:                               */ 00002800
*/*                                                                     00002900
*01* FUNCTION:                                                          00003000
*                                                                       00003100
*    This file contains PL/X and BAL 64-bit mappings                    00003200
*    of the common and specific input parameter lists                   00003300
*    for SAF callable services. The parameter lists                     00003400
*    in this file are the following:                                    00003500
*                                                                       00003600
*    DSECT NAME   STUB NAME     SECURITY FUNCTION                       00003700
*                                                                       00003800
*    COMY         all           Common Security                         00003900
*                                                                       00004000
*    RAUX64       IRRSAX64      Security audit Service                  00004100
*                                                                       00004200
*    PGSN64       IRRSPS64      R_PgmSignVer program signing service    00004300
*                                                                       00004400
*    PKIS64       IRRSPX64      R_PKISERV Service                 @L3A  00004500
*                                                                       00004600
*    FACT         IRRSFA64      R_Factor Authentication factor service  00004700
*                                                                 @L6A  00004800
*    SMOP         IRRSMO64      R_SecMgtOper service              @L5A  00004900
*                                                                       00005000
*                                                                       00005100
*01* METHOD OF ACCESS:                                                  00005200
*                                                                       00005300
*02*   PL/X:  %INCLUDE(IRRPCOMY)                                        00005400
*                                                                       00005500
*             DECLARE COMY_PTR PTR(64) or PTR(31)                       00005600
*             To contain the address of the SAF common                  00005700
*             plist and any additional service routine plist.           00005800
*                                                                       00005900
*                                                                       00006000
*02*   ASM:   IRRPCOMY                                                  00006100
*             A DSECT is produced unless DSECT=NO is specified.         00006200
*                                                                       00006300
*             LA     REG,COMY                                           00006400
*             USING  COMY,REG                                           00006500
*                                                                       00006600
*             Where REG is any general register except 0.               00006700
*                                                                       00006800
*                                                                       00006900
*01* SIZE: Release dependent. Refer to the mapping.                     00007000
*                                                                       00007100
*01* POINTED TO BY: Address of COMY is passed in register 1             00007200
*                   when invoking OMVSsecurity functions.               00007300
*                                                                       00007400
*01* CREATED BY: Invoker of security functions.                         00007500
*                                                                       00007600
*01* DELETED BY: Invoker of security functions.                         00007700
*                                                                       00007800
*01* STORAGE ATTRIBUTES:                                                00007900
*02*   SUBPOOL:  N/A                                                    00008000
*02*   KEY:      Any                                                    00008100
*02*   RESIDENCY: Invoker's primary address space                       00008200
*                                                                       00008300
*01* FREQUENCY: N/A                                                     00008400
*                                                                       00008500
*01* SERIALIZATION: N/A                                                 00008600
*                                                                       00008700
*01* DEPENDENCIES: None                                                 00008800
*                                                                       00008900
*01* NOTES:                                                             00009000
*  This part was heavily restructured in z/OS 2.5 to make it            00009100
*   compatible with the C-header generation utility used during build.  00009200
*   o The tool requires that all of the 'main' plist components         00009300
*     (COMY, PGSN,FACT , ..., SMOP) be contiguous, and not separated    00009400
*     by constants or parameter list sub-mappings. The 'main' plist     00009500
*     components are those which are specified on the CALL statement.   00009600
*   o The ASM portion is unaffected by these changes.                   00009700
*   o To add a new service to the PLX mapping:                          00009800
*     - Locate 'COMY sub-declares'.                                     00009900
*     - Change the previous semi-colon to 'Comy_Term'                   00010000
*     - Add the main plist                                              00010100
*     - End it with a semi-colon                                        00010200
*    o All constants and additional data mappings should be added       00010300
*      to the very end of the macro.                               @L9A 00010400
*                                                                       00010500
*                                                                       00010600
*01* COMPONENT:   SAF (SC1BN)                                           00010700
*                                                                       00010800
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     00010900
*                                                                       00011000
*01* EYE-CATCHER: None - this is not a control block definition.        00011100
*02*   OFFSET:  N/A                                                     00011200
*02*   LENGTH:  N/A                                                     00011300
*                                                                       00011400
*01* CHANGE-ACTIVITY:                                                   00011500
*  $L0=LAUD     HBB7720 041008 PDSGW1  64-bit R_auditx                  00011600
*  $L1=LAUD     HBB7720 050109 PDSGW1  64-bit R_auditx           @L1A   00011700
*  $P1=MG05219  HBB7730 051020 PDAWS1  Defect MG05219            @P1A   00011800
*  $L2=FIPS     HBB7750 071028 PDM_O1  FIPS                      @L2A   00011900
*  $P2=ME16001  HBB7770 100316 PDJLW1  Prolog enhancements.      @P2A   00012000
*  $L3=PKIS22S  HBB77A0 130918 PDSSD   64-bit R_PKIServ          @L3A   00012100
*  $L4=PKIS22S  HBB77A0 140904 PDSSD   64-bit R_PKIServ          @L4A   00012200
*  $L5=SECDESC  HRF77B0 150409 PDM_O1: 83321 (rtc)               @L5A   00012300
*  $L6=ZD003XBD HBB7790 150724 PDSGW1  64-bit R_Factor           @L6A   00012400
*  $L7=MFA3     HBB77B0 161011 PDSGW1  64-bit R_Factor           @L7A   00012500
*  $L8=MFA5     HBB77C0 170505 PDRDC1  64-bit R_Factor           @L8A   00012600
*  $L9=CMACROS  HBB77D0 191211 PDM_O1: 352039                    @L9A   00012700
*  $LA=PKIS25F  HBB77D0 191006 PDRRG1  333808 Cert Fingerprint   @LAA   00012800
*  $LB=VALBOOT  HBB77D0 230208 PDTCG1: R_PgmSignVer enhancement  @LBA   00012900
*                                                                       00013000
*                                                                       00013100
*01* CHANGE-DESCRIPTIONS:                                               00013200
*    A000000-999999                                              @L0A   00013300
*    A - Correct assembler RAUX64 OPTION_WORD@ & LINK_VALUE@     @L1A   00013400
*    C - Corrected RAUX64 COMPONENT@ so PL/X and assembler match @P1A   00013500
*    A - Support for R_PgmSignVer                                @L2A   00013600
*    C - Prolog enhancements.                                    @P2A   00013700
*    A - Added support for R_PKIServ service                     @L3A   00013800
*    A - Added a new entry in the PKIS64 mapping                 @L4A   00013900
*    A - Add support for IRRSMO64                                @L5A   00014000
*    A - Support for R_Factor                                    @L6A   00014100
*    A - Add R_factor function 5, extend function 3              @L7A   00014200
*    A - Add R_factor function 6                                 @L8A   00014300
*    A - Many updates to accommodate CBGENC C-Header generation  @L9A   00014400
*        tool which causes C header files to be built magically  @L9A   00014500
*        during build. Mostly not change flagged because every   @L9A   00014600
*        PLX line is altered or moved.                           @L9A   00014700
*    C - Revise description of PKIS function specific parameter  @LAA   00014800
*        PKIS64_CRTD_SERIALNUM@.  Commentary change only.        @LAA   00014900
*    A - Add updates for R_PgmSignVer enhancements               @LBA   00015000
*                                                                       00015100
*  **Note. When making changes to this part, PLEASE refer to            00015200
*    the NOTES in the prolog. This part was changed significantly in    00015300
*    z/OS 2.5.                                                          00015400
                                                                        00015500
*                                                                       00015600
****END OF SPECIFICATIONS*********************************************/ 00015700
*%;/*                                                                   00015800
*********************************************************************** 00015900
***                                                                  ** 00016000
***                   COMY ASSEMBLER DECLARATIONS                    ** 00016100
***------------------------------------------------------------------** 00016200
***                                                                  ** 00016300
***   DECLARATION NAME = COMY                                        ** 00016400
***                                                                  ** 00016500
***   DESCRIPTIVE NAME = Common SAF parameter list.                  ** 00016600
***                                                                  ** 00016700
***   FUNCTION = Provides BAL mapping of the common input parameter  ** 00016800
***              list for the SAF router.                            ** 00016900
***                                                                  ** 00017000
**********************************************************************/ 00017100
*%;   /*                                                                00017200
         AIF   ('&DSECT' EQ 'NO').DSECTNO                               00017300
*                                                                       00017400
COMY     DSECT ,                 SAF callable service common plist      00017500
         AGO   .DSECTYES                                                00017600
.DSECTNO ANOP                                                           00017700
COMY     DS    0D                SAF callable service common plist      00017800
.DSECTYES ANOP                                                          00017900
*                                                                       00018000
*                                                                       00018100
COMY_WORKA_STOR@ DS   AD         Address of 1024 byte work area         00018200
*                                                                       00018300
COMY_SAFRC_ALET@ DS   AD         Address of ALET for SAF return code    00018400
*                                                                       00018500
COMY_SAFRC_STOR@ DS   AD         Address of SAF return code             00018600
*                                                                       00018700
COMY_RACRC_ALET@ DS   AD         Address of ALET for RACF return code   00018800
*                                                                       00018900
COMY_RACRC_STOR@ DS   AD         Address of RACF return code            00019000
*                                                                       00019100
COMY_RACSC_ALET@ DS   AD         Address of ALET for RACF reason code   00019200
*                                                                       00019300
COMY_RACSC_STOR@ DS   AD         Address of RACF reason code            00019400
*                                                                       00019500
COMY_SERVR_PARMS DS   0C         Parameters for the service routines    00019600
*                                 start here.                           00019700
*                                                                       00019800
COMY_LEN          EQU *-COMY     Constant - Fixed length of COMY        00019900
*                                                                       00020000
*********************************************************************** 00020100
*                                                                     * 00020200
*                  RAUX64 ASSEMBLER DECLARATIONS                      * 00020300
*---------------------------------------------------------------------* 00020400
*                                                                     * 00020500
*  DECLARATION NAME = RAUX64                                          * 00020600
*                                                                     * 00020700
*  DESCRIPTIVE NAME = R_auditx 64 bit                                 * 00020800
*                                                                     * 00020900
*  FUNCTION = Provides the ASSEMBLER mapping of the input parameter   * 00021000
*             list for the R_auditx 64 bit callable service           * 00021100
*********************************************************************** 00021200
                       ORG   COMY_SERVR_PARMS   Follows common plist    00021300
*                                                                       00021400
RAUX64                 DS  0C   Mapping for RAUX64                      00021500
*                                                                       00021600
RAUX64_NUM_PARMS@      DS  AD   Address of a full word containing       00021700
*                               the total number of parameters          00021800
*                               included in COMY and RAUX64             00021900
*                                                                       00022000
RAUX64_ACEE_ALET@      DS  AD   Address of ALET for the ACEE            00022100
*                               structure                               00022200
*                                                                       00022300
RAUX64_ACEE@           DS  AD   Address of the ACEE structure           00022400
*                                                                       00022500
RAUX64_PARM_ALET@      DS  AD   Address of ALET for the remaining       00022600
*                               parameters                              00022700
*                                                                       00022800
RAUX64_OPTION_WORD@    DS  AD   Address of a full word containing  @L1C 00022900
*                               binary zeros. The area pointed to       00023000
*                               by this parameter is reserved for       00023100
*                               future use.                             00023200
*                                                                       00023300
RAUX64_LINK_VALUE@     DS  AD   Address of an 8 byte value used to @L1C 00023400
*                               mark a set of related SMF records       00023500
*                                                                       00023600
RAUX64_ATTRIBUTES@     DS  AD   Address of a full word containing       00023700
*                               flag values                             00023800
*                                                                       00023900
RAUX64_COMPONENT@      DS  AD   Address of an area containing a @P1C    00024000
*                               4 byte length followed by a             00024100
*                               component or product name               00024200
*                                                                       00024300
RAUX64_FMID@           DS  AD   Address of a 7 byte area containing     00024400
*                               the FMID for the component or           00024500
*                               product                                 00024600
*                                                                       00024700
RAUX64_SUBTYPE@        DS  AD   Address of a full word containing       00024800
*                               the SMF 83 record subtype               00024900
*                                                                       00025000
RAUX64_EVENT@          DS  AD   Address of a full word containing       00025100
*                               the event code                          00025200
*                                                                       00025300
RAUX64_QUALIFIER@      DS  AD   Address of a full word containing       00025400
*                               the qualifier for the event code        00025500
*                                                                       00025600
RAUX64_CLASS@          DS  AD   Address of an 8 byte area               00025700
*                               containing a class name                 00025800
*                                                                       00025900
RAUX64_RESOURCE@       DS  AD   Address of an area containing a         00026000
*                               4 byte length followed by the           00026100
*                               resource name which is covered by       00026200
*                               a profile defined in the class          00026300
*                               above                                   00026400
*                                                                       00026500
RAUX64_LOG_STRING@     DS  AD   Address of an area containing a         00026600
*                               4 byte length followed by text to       00026700
*                               be written to the SMF record            00026800
*                                                                       00026900
RAUX64_RELOCATE_COUNT@ DS  AD   Address of a full word containing       00027000
*                               the number of relocate sections         00027100
*                                                                       00027200
RAUX64_RELOCATE_PTR@   DS  AD   Address of an 8 byte pointer to         00027300
*                               the array of relocate sections          00027400
*                                                                       00027500
RAUX64_MESSAGE_COUNT@  DS  AD   Address of a full word containing       00027600
*                               the number of message segments          00027700
*                                                                       00027800
RAUX64_MESSAGE_PTR@    DS  AD   Address of an 8 byte pointer to         00027900
*                               the arrary of message segments          00028000
*                                                                       00028100
RAUX64_LEN             EQU *-RAUX64 Constant - RAUX64 length            00028200
*                                                                       00028300
*********************************************************************** 00028400
*                                                                     * 00028500
*                PGSN64 ASSEMBLER DECLARATIONS                        * 00028600
*---------------------------------------------------------------------* 00028700
*                                                                     * 00028800
*  DECLARATION NAME = PGSN64                                          * 00028900
*                                                                     * 00029000
*  DESCRIPTIVE NAME =   Program signing and verification              * 00029100
*                                                                     * 00029200
*  FUNCTION = Provides the ASSEMBLER mapping of the input parameter   * 00029300
*      list for the service which will cryptographically sign and     * 00029400
*      verify z/OS program objects (R_PgmSignVer)                     * 00029500
*                                                                     * 00029600
*  NOTE: Function code constants and mappings for function-           * 00029700
*        specific parameter lists can be found in IRRPCOMP.           * 00029800
*                                                                  @L2A 00029900
*********************************************************************** 00030000
                     ORG   COMY_SERVR_PARMS   Follows common plist @L2A 00030100
*                                                                       00030200
PGSN64               DS  0C     Mapping for PGSN64                 @L2A 00030300
*                                                                       00030400
PGSN64_NUM_PARMS@    DS  AD     Address of fullword containing          00030500
*                               the total number of parameters          00030600
*                               included in COMY and PGSN64        @L2A 00030700
*                                                                       00030800
PGSN64_FUNC@         DS  AD     Address of 2 byte function code    @L2A 00030900
*                                                                       00031000
PGSN64_FUNC_PARML@   DS  AD     Address of the function-specific        00031100
*                               parameter list corresponding to         00031200
*                               the function code.                 @L2A 00031300
*                                                                       00031400
PGSN64_LEN           EQU *-PGSN64 Constant - fixed length of PGSN64@L2A 00031500
*                                                                       00031600
*                                                                       00031700
PGSN64_FUNC_ATTRS@   DS  AD     Address of the attributes corresponding 00031800
*                               to function code                   @LBA 00031900
*                                                                       00032000
PGSN64_LEN_WITH_ATTRS EQU *-PGSN64 Constant - Length of PGSN64 with     00032100
*                               PGSN64_FUNC_ATTRS@ specified       @LBA 00032200
*                                                                       00032300
*------------------------------------------------------------------     00032400
*                                                                       00032500
*********************************************************************** 00032600
*                                                                     * 00032700
*                 PKIS64 ASSEMBLER DECLARATIONS                       * 00032800
*********************************************************************** 00032900
*                                                                     * 00033000
*  DECLARATION NAME = PKIS64                                          * 00033100
*                                                                     * 00033200
*  DESCRIPTIVE NAME = RPKIserv 64 bit parameters                      * 00033300
*                                                                     * 00033400
*  FUNCTION = Provides the ASSEMBLER mapping of the input paramter    * 00033500
*             list for the PKIS64 callable service R_PKISERV      @L3A* 00033600
*********************************************************************** 00033700
                     ORG   COMY_SERVR_PARMS Follows common plist   @L3A 00033800
*                                                                       00033900
PKIS64               DS  0C     Mapping for PKIS64                 @L3A 00034000
*                                                                       00034100
PKIS64_NUM_PARMS@    DS  AD     Address of a 8-byte variable that       00034200
*                               contains the number of parameters that  00034300
*                               follow in the non-request specific      00034400
*                               portion of the R_PKIServ callable       00034500
*                               service Parameter List             @L3A 00034600
*                                                                       00034700
PKIS64_FUNC@         DS  AD     Address of a 2-byte variable that       00034800
*                               contains the code of the requested      00034900
*                               function.Constants for the function     00035000
*                               codes are declared below           @L3A 00035100
*                                                                       00035200
PKIS64_ATTRIBUTES@   DS  AD     Address of a 4-byte variable that       00035300
*                               contains attribute flags for the        00035400
*                               service                            @L3A 00035500
*                                                                       00035600
PKIS64_LOG_STRING@   DS  AD     Address of a Variable-Length area that  00035700
*                               contains the LOG string to be passed    00035800
*                               to RACROUTE (1 byte for the length      00035900
*                               followed by up to 255 bytes for the     00036000
*                               LOG string itself)                 @L3A 00036100
*                                                                       00036200
PKIS64_PARM_VER@     DS  AD     Address of a 4-byte variable that       00036300
*                               contains the version number of the      00036400
*                               Function Specific Parameter List        00036500
*                               (PKIS64_FUNC_PARML@)               @L3A 00036600
*                                                                       00036700
PKIS64_FUNC_PARML@   DS  AD     Address of the FSPL - Function          00036800
*                               Specific Parameter List (FSPL =         00036900
*                               the Parameter List that corresponds     00037000
*                               to the Function Code)              @L3A 00037100
*                                                                       00037200
PKIS64_LEN           EQU *-PKIS64 Constant-Fixed length of PKIS64       00037300
*                                 with no CA Domain                @L4A 00037400
*                                                                       00037500
PKIS64_CA_DOMAIN@    DS  AD     Address of the name of the PKI          00037600
*                               Services certificate authority          00037700
*                               instance to be invoked.            @L3A 00037800
*                                                                       00037900
PKIS64_TOT_LEN       EQU *-PKIS64 Constant-Fixed length of PKIS64  @L3A 00038000
*                                                                       00038100
*---------------------------------------------------------------------* 00038200
*                                                                       00038300
*      PKIS64 Function Code Constants                                   00038400
*                                                                       00038500
*---------------------------------------------------------------------* 00038600
*                                                                       00038700
PKIS64_GENCERT      EQU X'0001'  Generates a basic X.509 V3             00038800
*                                digital certificate               @L3A 00038900
*                                                                       00039000
PKIS64_EXPORT       EQU X'0002'  Export a digital certificate           00039100
*                                by certificate Request ID         @L3A 00039200
*                                                                       00039300
PKIS64_QUERYREQS    EQU X'0003'  Query one or more certificate          00039400
*                                requests                          @L3A 00039500
*                                                                       00039600
PKIS64_REQDETAILS   EQU X'0004'  Extract details of a single            00039700
*                                certificate request               @L3A 00039800
*                                                                       00039900
PKIS64_MODIFYREQS   EQU X'0005'  Modify information on one or more      00040000
*                                certificate requests              @L3A 00040100
*                                                                       00040200
PKIS64_QUERYCERTS   EQU X'0006'  Query on one or more issued            00040300
*                                certificates                      @L3A 00040400
*                                                                       00040500
PKIS64_CERTDETAILS  EQU X'0007'  Extract the details of a single        00040600
*                                issued Certificate                @L3A 00040700
*                                                                       00040800
PKIS64_MODIFYCERTS  EQU X'0008'  Modify information one or more issued  00040900
*                                certificates                      @L3A 00041000
*                                                                       00041100
PKIS64_REQCERT      EQU X'0009'  Request certificate for approval  @L3A 00041200
*                                                                       00041300
PKIS64_VERIFY       EQU X'000A'  Request certificate verification  @L3A 00041400
*                                                                       00041500
PKIS64_REVOKE       EQU X'000B'  Request certificate revocation    @L3A 00041600
*                                                                       00041700
PKIS64_GENRENEW     EQU X'000C'  Request auto-approved certificate      00041800
*                                renewal.                          @L3A 00041900
*                                                                       00042000
PKIS64_REQRENEW     EQU X'000D'  Request certificate renewal       @L3A 00042100
*                                                                       00042200
PKIS64_RESPOND      EQU X'000E'  Report certificate status through      00042300
*                                OCSP                              @L3A 00042400
*                                                                       00042500
PKIS64_SCEPREQ      EQU X'000F'  Submit a request to PKI Services       00042600
*                                using SCEP                        @L3A 00042700
*                                                                       00042800
PKIS64_PREREGISTER  EQU X'0010'  Preregister a SCEP user           @L3A 00042900
*                                                                       00043000
PKIS64_QRECOVER     EQU X'0011'  Query for recovering a certificate     00043100
*                                and private key                   @L3A 00043200
*---------------------------------------------------------------------* 00043300
*                                                                       00043400
PKIS64_SYNCH_CREATE  EQU X'80000000'  Synchronous generation flag  @L3A 00043500
*                                                                       00043600
*********************************************************************** 00043700
*                                                                     * 00043800
*                SMOP64 ASSEMBLER DECLARATIONS                        * 00043900
*---------------------------------------------------------------------* 00044000
*                                                                     * 00044100
*  DECLARATION NAME = SMOP64                                          * 00044200
*                                                                     * 00044300
*  DESCRIPTIVE NAME = R_SecMgtOper parameters                         * 00044400
*                                                                     * 00044500
*  FUNCTION = Provides the ASSEMBLER mapping of the input parameter   * 00044600
*      list for the R_SecMgtOper callable service                     * 00044700
*                                                                  @L5A 00044800
*********************************************************************** 00044900
                     ORG   COMY_SERVR_PARMS   Follows common plist      00045000
*                                                                       00045100
SMOP64                 DS  0C   Mapping for SMOP                   @L5A 00045200
*                                                                       00045300
SMOP64_NUM_PARMS@      DS  AD   Address of a full word containing  @L5A 00045400
*                               the total number of parameters          00045500
SMOP64_FUNC@           DS  AD   Address of 4 byte function code    @L5A 00045600
*                                                                       00045700
SMOP64_OPTIONS@        DS  AD   Address of 4 byte option           @L5A 00045800
*                                                                       00045900
SMOP64_REQUEST_LEN@    DS  AD   Address of a full word containing  @L5A 00046000
*                               the length of the input request         00046100
SMOP64_REQUEST@        DS  AD   Address of an area containing the  @L5A 00046200
*                               input request                           00046300
SMOP64_HANDLE@         DS  AD   Address of input Handle            @L5A 00046400
SMOP64_USERID@         DS  AD   Address of runas user.This address @L5A 00046500
*                               points to a 1 byte length followed by   00046600
*                               up to 8 bytes containing the user.      00046700
SMOP64_ACEE@           DS  AD   Address of runas ACEE.             @L5A 00046800
SMOP64_RESULT_LEN@     DS  AD   Address of a full word containing  @L5A 00046900
*                               the length of the provided buffer       00047000
*                               to which the result will be copied.     00047100
*                               On return contains the number of bytes  00047200
*                               copied to the SMOP64_RESULT@ buffer.    00047300
SMOP64_RESULT@         DS  AD   Address of an area into which the  @L5A 00047400
*                               result will be copied.                  00047500
SMOP64_LEN             EQU *-SMOP64 SMOP plist len                 @L5A 00047600
*                                                                       00047700
*********************************************************************** 00047800
*                                                                     * 00047900
*                FACT   ASSEMBLER DECLARATIONS                        * 00048000
*---------------------------------------------------------------------* 00048100
*                                                                     * 00048200
*  DECLARATION NAME = FACT                                            * 00048300
*                                                                     * 00048400
*  DESCRIPTIVE NAME = Authentication Factor Service                   * 00048500
*                                                                     * 00048600
*  FUNCTION = Provides the ASSEMBLER mapping of the input parameter   * 00048700
*      list for the Authentication Factor Service (R_Factor)          * 00048800
*                                                                  @L6A 00048900
*********************************************************************** 00049000
                     ORG   COMY_SERVR_PARMS   Follows common plist @L6A 00049100
*                                                                       00049200
FACT                 DS  0C     Mapping for FACT                   @L6A 00049300
*                                                                       00049400
FACT_NUM_PARMS@      DS  AD     Address of fullword containing          00049500
*                               the total number of parameters          00049600
*                               included in COMY and FACT          @L6A 00049700
*                                                                       00049800
FACT_PARM_ALET@      DS  AD     Addrees of ALET for the                 00049900
*                               remaining parameters               @L6A 00050000
*                                                                       00050100
FACT_FUNC@           DS  AD     Address of 2 byte function code    @L6A 00050200
*                                                                       00050300
FACT_FUNC_PARML@     DS  AD     Address of the function-specific        00050400
*                               parameter list corresponding to         00050500
*                               the function code.                 @L6A 00050600
*                                                                       00050700
FACT_LEN             EQU *-FACT Constant - fixed length of FACT    @L6A 00050800
*                                                                       00050900
*                                                                       00051000
*   Function Code Constants                                             00051100
*                                                                       00051200
FACT_FUNC_GET_FACTOR   EQU X'0001' Get general factor data         @L6A 00051300
FACT_FUNC_SET_FACTOR   EQU X'0002' Set general factor data         @L6A 00051400
FACT_FUNC_GET_UFACTOR  EQU X'0003' Get user factor data            @L6A 00051500
FACT_FUNC_SET_UFACTOR  EQU X'0004' Set user factor data            @L6A 00051600
FACT_FUNC_GET_POLICY   EQU X'0005' Set general policy data         @L7A 00051700
FACT_FUNC_GET_CTC      EQU X'0006' Get Cached Token Credential     @L8A 00051800
*                                                                       00051900
*---------------------------------------------------------------------* 00052000
*                                                                       00052100
* RAUX64 Structures                                                     00052200
*                                                                       00052300
*------------------------------------------------------------------     00052400
RAUX64_RELOCATE      DSECT      Mapping for relocate                    00052500
RAUX64_RELO_TYPE     DS  AL2    Section type                            00052600
                     DS  AL2    Reserved                                00052700
RAUX64_RELO_LEN      DS  F      Length of section data                  00052800
RAUX64_RELO_DATA_PTR DS  AD     Address of section data                 00052900
*                                                                       00053000
RAUX64_SEGMENT       DSECT      Mapping for message segment             00053100
                     DS  F      Reserved                                00053200
RAUX64_SEG_LEN       DS  F      Length of segment data                  00053300
RAUX64_SEG_PTR       DS  AD     Address of segment data                 00053400
*                                                                       00053500
*                                                                       00053600
* RAUX attribute values                                                 00053700
*                                                                       00053800
RAUX64_ATTR_RESULT          EQU X'80000000'  Event result               00053900
RAUX64_ATTR_AUTHENTICATION  EQU X'40000000'  Authentication event       00054000
RAUX64_ATTR_AUTHORIZATION   EQU X'20000000'  Authorization  event       00054100
RAUX64_ATTR_LOG_SUCCESS     EQU X'10000000'  Always log successes       00054200
RAUX64_ATTR_LOG_FAILURE     EQU X'08000000'  Always log failures        00054300
RAUX64_ATTR_NOLOG_SUCCESS   EQU X'04000000'  Never log successes        00054400
RAUX64_ATTR_NOLOG_FAILURE   EQU X'02000000'  Never log failures         00054500
RAUX64_ATTR_WARN_FAILURE    EQU X'01000000'  Issue warning message      00054600
*                                            for failures               00054700
*                                                                       00054800
*---------------------------------------------------------------------* 00054900
*    PKIS64 Function Specific Parameter List for GENCERT          @L3A* 00055000
*---------------------------------------------------------------------* 00055100
*                                                                       00055200
PKIS64_GENCERT_MAP   DSECT      Function Specific Parameter List        00055300
*                               (FSPL) for GENCERT                 @L3A 00055400
*                                                                       00055500
PKIS64_GENC_EYECATCH DS  CL8    Eyecatcher for the GENCERT FSPL         00055600
*                               left-aligned blank filled string        00055700
*                               containing the text 'GENCERT '     @L3A 00055800
*                                                                       00055900
PKIS64_GENC_CERTPL_LEN DS  F    Length (in bytes) of the Digital        00056000
*                               Certificate generation PList       @L3A 00056100
*                                                                       00056200
                     DS  F      Alignment                          @L3A 00056300
*                                                                       00056400
PKIS64_GENC_CERTPL@  DS  AD     Address of the Digital                  00056500
*                               Certificate generation PList       @L3A 00056600
*                                                                       00056700
PKIS64_GENC_CERTID@  DS  AD     Address of a 57-Byte area that          00056800
*                               contains the output Certificate         00056900
*                               Request ID (the first byte of this      00057000
*                               area contains the length of the         00057100
*                               Output Certificate Request ID)     @L3A 00057200
*                                                                       00057300
*---------------------------------------------------------------------* 00057400
*                                                                       00057500
PKIS64_CPL_ENTRY     DSECT      Certificate Request PList entry         00057600
*                               (a single GENCERT PList entry)     @L3A 00057700
*                                                                       00057800
PKIS64_CPL_FIELD_NAME  DS  CL12 Certificate Request Field Name     @L3A 00057900
*                                                                       00058000
PKIS64_CPL_FIELD_LEN DS  F      Length (in bytes) of the                00058100
*                               Request Field Name value           @L3A 00058200
*                                                                       00058300
PKIS64_CPL_FIELD_VALUE DS  0C   Request Field Name value           @L3A 00058400
*                                                                       00058500
*---------------------------------------------------------------------* 00058600
*    PKIS64 Function Specific Parameter List for EXPORT           @L3A* 00058700
*---------------------------------------------------------------------* 00058800
*                                                                       00058900
PKIS64_EXPORT_MAP    DSECT      Function Specific Parameter List        00059000
*                               (FSPL) for EXPORT                  @L3A 00059100
*                                                                       00059200
PKIS64_EXP_EYECATCH  DS  CL8    Eyecatcher for the EXPORT FSPL          00059300
*                               Left-aligned blank filled string        00059400
*                               containing the text 'EXPORT  '     @L3A 00059500
*                                                                       00059600
PKIS64_EXP_CERTAN_LEN  DS  F    Length (in bytes) of the                00059700
*                               pre-allocated Certificate Anchor        00059800
*                               area                               @L3A 00059900
*                                                                       00060000
                     DS  F      Alignment                          @L3A 00060100
*                                                                       00060200
PKIS64_EXP_CERTAN@   DS  AD     Address of the pre-allocated            00060300
*                               Certificate Anchor area            @L3A 00060400
*                                                                       00060500
PKIS64_EXP_CERTID@   DS  AD     Address of a 57-Byte area that          00060600
*                               contains the Input Certificate          00060700
*                               Request ID that is used to              00060800
*                               locate the Digital Certificate          00060900
*                               to be EXPORTed (the first byte of       00061000
*                               this area contains the length of        00061100
*                               the Input Certificate Request ID)  @L3A 00061200
*                                                                       00061300
PKIS64_EXP_KEYID@    DS  AD     Address of a 41-byte area that          00061400
*                               contains the KeyId - the hash of the    00061500
*                               public key generated by PKI Services.   00061600
*                               The first byte of this area contains    00061700
*                               the length of the KeyId.  This field    00061800
*                               is used to export a recovery            00061900
*                               certificate, the only case that the     00062000
*                               first byte is 40.  In all other cases,  00062100
*                               the length byte should be 0.       @L3A 00062200
*                                                                       00062300
*---------------------------------------------------------------------* 00062400
*                                                                       00062500
*---------------------------------------------------------------------* 00062600
*    PKIS64 Function Specific Parameter List for QUERYREQS        @L3A* 00062700
*---------------------------------------------------------------------* 00062800
*                                                                       00062900
PKIS64_QUERYREQS_MAP DSECT      Function Specific Parameter List        00063000
*                               (FSPL) for QUERYREQS               @L3A 00063100
*                                                                       00063200
PKIS64_QRYR_EYECATCH DS  CL8    Eyecatcher for the QUERYREQS FSPL       00063300
*                               left-aligned blank filled string        00063400
*                               containing user specified text,         00063500
*                               e.g. 'QUERYRQS'                    @L3A 00063600
*                                                                       00063700
PKIS64_QRYR_RESULTL_LEN DS  F   Length (in bytes) of the pre-allocated  00063800
*                               Results List area                  @L3A 00063900
*                                                                       00064000
                     DS  F      Alignment                          @L3A 00064100
*                                                                       00064200
PKIS64_QRYR_RESULTL@ DS  AD     Address of the pre-allocated Results    00064300
*                               List area                          @L3A 00064400
*                                                                       00064500
PKIS64_QRYR_CERTID@  DS  AD     Address of a 57-Byte area that contains 00064600
*                               the Input Certificate Request ID that   00064700
*                               is to be used as a starting point for   00064800
*                               this query. Only Request IDs located    00064900
*                               after this Cert ID is returned. The     00065000
*                               first byte of area contains the length  00065100
*                               of the Input Certificate Request        00065200
*                               ID                                 @L3A 00065300
*                                                                       00065400
PKIS64_QRYR_NUMENTRIES  DS  F   Value indicating the maximum number     00065500
*                               of entries to be returned in the        00065600
*                               Results List area. Zero indicates       00065700
*                               no limit                           @L3A 00065800
*                                                                       00065900
PKIS64_QRYR_CRIT_STATUS DS  F   Value indicating the request status     00066000
*                               to use as search criteria          @L3A 00066100
*                                                                       00066200
PKIS64_QRYR_CRIT_DAYS   DS  F   Value indicating the recent activity    00066300
*                               time to use as additional search        00066400
*                               criteria                           @L3A 00066500
*                                                                       00066600
                     DS  F      Alignment                          @L3A 00066700
*                                                                       00066800
PKIS64_QRYR_CRIT_NAME@  DS  AD  Address of a 33-Byte area that          00066900
*                               contains the input requestor's name     00067000
*                               to be used as additional search         00067100
*                               criteria. The first byte of this area   00067200
*                               contains the length of the input        00067300
*                               requestor's name                   @L3A 00067400
*                                                                       00067500
*---------------------------------------------------------------------* 00067600
*                                                                       00067700
PKIS64_RESL_ENTRY    DSECT      Results List Entry for QUERYREQS        00067800
*                               or QUERYCERTS ( a single entry )   @L3A 00067900
*                                                                       00068000
PKIS64_RESL_ENTRY_LEN   DS  X   Length (in bytes) of the                00068100
*                               Results List entry value           @L3A 00068200
*                                                                       00068300
PKIS64_RESL_ENTRY_VALUE DS  0C  Results list entry value           @L3A 00068400
*                                                                       00068500
*---------------------------------------------------------------------* 00068600
*                                                                       00068700
*---------------------------------------------------------------------* 00068800
*    PKIS64 Function Specific Parameter List for REQDETAILS       @L3A* 00068900
*---------------------------------------------------------------------* 00069000
*                                                                       00069100
PKIS64_REQDETAILS_MAP  DSECT    Function Specific Parameter List        00069200
*                               (FSPL) for REQDETAILS              @L3A 00069300
*                                                                       00069400
PKIS64_REQD_EYECATCH DS  CL8    Eyecatcher for the REQDETAILS FSPL      00069500
*                               left-aligned blank filled string        00069600
*                               containing user specified text,         00069700
*                               e.g. 'REQDTAIL'                    @L3A 00069800
*                                                                       00069900
PKIS64_REQD_SUML_LEN DS  F      Length (in bytes) of the pre-allocated  00070000
*                               Summary List area                  @L3A 00070100
*                                                                       00070200
                     DS  F      Alignment                          @L3A 00070300
*                                                                       00070400
PKIS64_REQD_SUML@    DS  AD     Address of the pre-allocated Summary    00070500
*                               List area                          @L3A 00070600
*                                                                       00070700
PKIS64_REQD_CERTPL_LEN DS  F    Length (in bytes) of the Digital        00070800
*                               Certificate generation type PList       00070900
*                               details area                       @L3A 00071000
*                                                                       00071100
                     DS  F      Alignment                          @L3A 00071200
*                                                                       00071300
PKIS64_REQD_CERTPL@  DS  AD     Address of the pre-allocated Digital    00071400
*                               Certificate generation type Plist       00071500
*                               details area                       @L3A 00071600
*                                                                       00071700
PKIS64_REQD_CERTID@  DS  AD     Address of a 57-Byte area that          00071800
*                               contains the Input Certificate          00071900
*                               Request ID from which to extract        00072000
*                               the data(the first byte of this area    00072100
*                               contains the length of the Input        00072200
*                               Certificate Request ID)            @L3A 00072300
*                                                                       00072400
*---------------------------------------------------------------------* 00072500
*                                                                       00072600
PKIS64_SUML_ENTRY    DSECT      Summary List Entry for REQDETAILS,      00072700
*                               CERTDETAILS, or VERIFY                  00072800
*                               ( a single entry )                 @L3A 00072900
*                                                                       00073000
PKIS64_SUML_ENTRY_LEN   DS  X   Length (in bytes) of the                00073100
*                               Summary List entry value           @L3A 00073200
*                                                                       00073300
PKIS64_SUML_ENTRY_VALUE DS  0C  Summary list entry value           @L3A 00073400
*                                                                       00073500
*---------------------------------------------------------------------* 00073600
*                                                                       00073700
*---------------------------------------------------------------------* 00073800
*    PKIS64 Function Specific Parameter List for MODIFYREQS       @L3A* 00073900
*---------------------------------------------------------------------* 00074000
*                                                                       00074100
PKIS64_MODIFYREQS_MAP  DSECT    Function Specific Parameter List        00074200
*                               (FSPL) for MODIFYREQS              @L3A 00074300
*                                                                       00074400
PKIS64_MODR_EYECATCH DS  CL8    Eyecatcher for the MODIFYREQS FSPL      00074500
*                               left-aligned blank filled string        00074600
*                               containing user specified text,         00074700
*                               e.g. 'MODREQS '                    @L3A 00074800
*                                                                       00074900
PKIS64_MODR_ACTION   DS  F      4 byte binary value indicating          00075000
*                               the action to be taken against the      00075100
*                               certificate requests               @L3A 00075200
*                                                                       00075300
                     DS  F      Alignment                          @L3A 00075400
*                                                                       00075500
PKIS64_MODR_COMMENT@ DS  AD     Address of a 65-Byte area that          00075600
*                               contains the comment data               00075700
*                               associated with this action. The        00075800
*                               first byte of this area contains        00075900
*                               the length of the actual comment.       00076000
*                               If the length is x'00' then             00076100
*                               no comment is to be recorded.      @L3A 00076200
*                                                                       00076300
PKIS64_MODR_CERTIDL_LEN DS F    Length (in bytes) of the                00076400
*                               Certificate Request id list             00076500
*                               on input                           @L3A 00076600
*                                                                       00076700
                     DS  F      Alignment                          @L3A 00076800
*                                                                       00076900
PKIS64_MODR_CERTIDL@ DS  AD     Address of the area containing          00077000
*                               1 or more certificate request ids       00077100
*                               that are to be modified by this         00077200
*                               request.                           @L3A 00077300
*                                                                       00077400
PKIS64_MODR_CERTPL_LEN DS  F    Length (in bytes) of the                00077500
*                               Certificate modification                00077600
*                               plist area                         @L3A 00077700
*                                                                       00077800
                     DS  F      Alignment                          @L3A 00077900
*                                                                       00078000
PKIS64_MODR_CERTPL@  DS  AD     Address of the area which is            00078100
*                               the Certificate modification            00078200
*                               Plist                              @L3A 00078300
*                                                                       00078400
PKIS64_MODR_ERRL_LEN DS  F      Length (in bytes) of the error          00078500
*                               list data return area              @L3A 00078600
*                                                                       00078700
                     DS  F      Alignment                          @L3A 00078800
*                                                                       00078900
PKIS64_MODR_ERRL@    DS  AD     Address of the area where error         00079000
*                               list information is to be               00079100
*                               returned.                          @L3A 00079200
*                                                                       00079300
PKIS64_MODR_TSTAMP@  DS  AD     Address of a 20-byte area that          00079400
*                               can contain a time stamp in             00079500
*                               'YYYY/MM/DD HH:MM:SS' format. The       00079600
*                               first byte of this area contains        00079700
*                               the length of the time stamp.           00079800
*                               If the length is x'00' then no          00079900
*                               time stamp is provided. Acceptable      00080000
*                               lengths are '00'x and '13'x only.  @L3A 00080100
*                                                                       00080200
*---------------------------------------------------------------------* 00080300
*                                                                       00080400
*---------------------------------------------------------------------* 00080500
*    PKIS64 Function Specific Parameter List for QUERYCERTS       @L3A* 00080600
*---------------------------------------------------------------------* 00080700
*                                                                       00080800
PKIS64_QUERYCERTS_MAP  DSECT    Function Specific Parameter List        00080900
*                               (FSPL) for QUERYCERTS              @L3A 00081000
*                                                                       00081100
PKIS64_QRYC_EYECATCH DS  CL8    Eyecatcher for the QUERYCERTS FSPL      00081200
*                               left-aligned blank filled string        00081300
*                               containing user specified text,         00081400
*                               e.g. 'QUERYCTS'                    @L3A 00081500
*                                                                       00081600
PKIS64_QRYC_RESULTL_LEN DS F    Length (in bytes) of the                00081700
*                               pre-allocated Results list area    @L3A 00081800
*                                                                       00081900
                     DS  F      Alignment                          @L3A 00082000
*                                                                       00082100
PKIS64_QRYC_RESULTL@ DS  AD     Address of the pre-allocated Results    00082200
*                               List area                          @L3A 00082300
*                                                                       00082400
PKIS64_QRYC_SERIALNUM@ DS  AD   Address of a 17-Byte area that          00082500
*                               contains the Input Certificate          00082600
*                               Serial Number that is used as a         00082700
*                               starting point for this query. Only     00082800
*                               Certificates located after this         00082900
*                               serial number is returned. The first    00083000
*                               byte of area contains the length        00083100
*                               of the Input Certificate Serial         00083200
*                               Number                             @L3A 00083300
*                                                                       00083400
PKIS64_QRYC_NUMENTRIES DS  F    Value indicating the maximum number     00083500
*                               of entries to be returned in the        00083600
*                               Result List area. Zero indicates        00083700
*                               no limit                           @L3A 00083800
*                                                                       00083900
PKIS64_QRYC_CRIT_STATUS DS F    Value indicating the request status     00084000
*                               to use as search criteria          @L3A 00084100
*                                                                       00084200
PKIS64_QRYC_CRIT_DAYS  DS  F    Value indicating the recent             00084300
*                               activity to use as additional           00084400
*                               search criteria                    @L3A 00084500
*                                                                       00084600
                     DS  F      Alignment                          @L3A 00084700
*                                                                       00084800
PKIS64_QRYC_CRIT_NAME@ DS  AD   Address of a 33-Byte area that          00084900
*                               contains the input requestor's          00085000
*                               name to be used as additional           00085100
*                               search criteria. The first byte         00085200
*                               of this area contains the length        00085300
*                               of the input requestor name        @L3A 00085400
*                                                                       00085500
*---------------------------------------------------------------------* 00085600
*                                                                       00085700
*---------------------------------------------------------------------* 00085800
*    PKIS64 Function Specific Parameter List for CERTDETAILS      @L3A* 00085900
*---------------------------------------------------------------------* 00086000
*                                                                       00086100
PKIS64_CERTDETAILS_MAP DSECT    Function Specific Parameter List        00086200
*                               (FSPL) for CERTDETAILS             @L3A 00086300
*                                                                       00086400
PKIS64_CRTD_EYECATCH DS  CL8    Eyecatcher for the CERTDETAILS FSPL     00086500
*                               left-aligned blank filled string        00086600
*                               containing user specified text,         00086700
*                               e.g. 'CRTDETLS'                    @L3A 00086800
*                                                                       00086900
PKIS64_CRTD_SUML_LEN DS  F      Length (in bytes) of the                00087000
*                               pre-allocated Summary List area    @L3A 00087100
*                                                                       00087200
                     DS  F      Alignment                          @L3A 00087300
*                                                                       00087400
PKIS64_CRTD_SUML@    DS  AD     Address of the pre-allocated            00087500
*                               Summary List area                  @L3A 00087600
*                                                                       00087700
PKIS64_CRTD_CERTPL_LEN DS  F    Length (in bytes) of the Digital        00087800
*                               Certificate generation type PList       00087900
*                               area                               @L3A 00088000
*                                                                       00088100
                     DS  F      Alignment                          @L3A 00088200
*                                                                       00088300
PKIS64_CRTD_CERTPL@  DS  AD     Address of the pre-allocated Digital    00088400
*                               Certificate generation type PList       00088500
*                               details area                       @L3A 00088600
*                                                                       00088700
PKIS64_CRTD_SERIALNUM@ DS AD    Address of an Input Certificate         00088800
*                               Serial Number or an Input Certificate   00088900
*                               Fingerprint for which the details will  00089000
*                               be extracted.                           00089100
*                                 + When referencing an Input           00089200
*                                   Certificate Serial Number, this     00089300
*                                   value is the address of a 17-Byte   00089400
*                                   area, the first byte containing the 00089500
*                                   length of the Certificate Serial    00089600
*                                   Number.                             00089700
*                                 + When referencing an Input           00089800
*                                   Certificate Fingerprint, this value 00089900
*                                   is one of two acceptable values:    00090000
*                                     - The address of a 65-Byte area,  00090100
*                                       the first byte containing the   00090200
*                                       length of the Certificate       00090300
*                                       Fingerprint, whose value        00090400
*                                       contains no embedded separator  00090500
*                                       characters,                     00090600
*                                     OR                                00090700
*                                     - The address of a 96-Byte area,  00090800
*                                       the first byte containing the   00090900
*                                       length of the Certificate       00091000
*                                       Fingerprint, whose value is     00091100
*                                       expected to contain embedded    00091200
*                                       separator characters of ':' or  00091300
*                                       ' '.                       @LAC 00091400
*---------------------------------------------------------------------* 00091500
*                                                                       00091600
*---------------------------------------------------------------------* 00091700
*    PKIS64 Function Specific Parameter List for MODIFYCERTS      @L3A* 00091800
*---------------------------------------------------------------------* 00091900
*                                                                       00092000
PKIS64_MODIFYCERTS_MAP DSECT    Function Specific Parameter List        00092100
*                               (FSPL) for MODIFYCERTS             @L3A 00092200
*                                                                       00092300
PKIS64_MODC_EYECATCH DS  CL8    Eyecatcher for MODIFYCERTS FSPL         00092400
*                               left-aligned blank filled string        00092500
*                               containing user specified text,         00092600
*                               e.g. 'MODCERTS'                    @L3A 00092700
*                                                                       00092800
PKIS64_MODC_ACTION   DS  F      4 byte binary value indicating          00092900
*                               the action to be taken against the      00093000
*                               certificates identified by the          00093100
*                               serial number list.                @L3A 00093200
*                                                                       00093300
                     DS  F      Alignment                          @L3A 00093400
*                                                                       00093500
PKIS64_MODC_COMMENT@ DS  AD     Address of a 65-Byte area that          00093600
*                               contains the comment data associated    00093700
*                               with this action. The first byte        00093800
*                               of this area contains the length of     00093900
*                               the actual comment. If the length is    00094000
*                               x'00' then no comment will be           00094100
*                               recorded.                          @L3A 00094200
*                                                                       00094300
PKIS64_MODC_SERIALNUMSL_LEN DS F  Length (in bytes) of the              00094400
*                                 Serial Numbers list on input.    @L3A 00094500
*                                                                       00094600
                     DS  F      Alignment                          @L3A 00094700
*                                                                       00094800
PKIS64_MODC_SERIALNUMSL@ DS  AD Address of the area containing          00094900
*                               1 or more Serial Numbers of             00095000
*                               certificates that are to be             00095100
*                               modified by this request.          @L3A 00095200
*                                                                       00095300
PKIS64_MODC_REASON   DS  F      4 byte binary value indicating          00095400
*                               the reason for certificate              00095500
*                               revocation                         @L3A 00095600
*                                                                       00095700
                     DS  F      Alignment                          @L3A 00095800
*                                                                       00095900
PKIS64_MODC_REQUESTOREMAIL@  DS AD Address of a 33-byte area that       00096000
*                                  contains the new e-mail address      00096100
*                                  of the requestor.  The first byte    00096200
*                                  of this area contains the length     00096300
*                                  of the e-mail address.          @L3A 00096400
*                                                                       00096500
PKIS64_MODC_ERRL_LEN DS  F      Length (in bytes) of the error          00096600
*                               list data return area              @L3A 00096700
*                                                                       00096800
                     DS  F      Alignment                          @L3A 00096900
*                                                                       00097000
PKIS64_MODC_ERRL@    DS  AD     Address of the area which is the        00097100
*                               error list                         @L3A 00097200
*                                                                       00097300
*---------------------------------------------------------------------* 00097400
*                                                                       00097500
PKIS64_SNID_ENTRY    DSECT      Certificate ID or Serial Number         00097600
*                               ( a single entry )                 @L3A 00097700
*                                                                       00097800
PKIS64_SNID_ENTRY_LEN   DS  X   Length (in bytes) of the Cert ID        00097900
*                               or Serial Number entry value       @L3A 00098000
*                                                                       00098100
PKIS64_SNID_ENTRY_VALUE DS  0C  Cert ID or Serial Number entry          00098200
*                               value                              @L3A 00098300
*                                                                       00098400
*---------------------------------------------------------------------* 00098500
*    PKIS64 Function Specific Parameter List for QRECOVER         @L3A* 00098600
*---------------------------------------------------------------------* 00098700
*                                                                       00098800
PKIS64_QRECOVER_MAP  DSECT      Mapping for QRECOVER function           00098900
*                               specific parameter list            @L3A 00099000
*                                                                       00099100
PKIS64_QREC_EYECATCH DS  CL8    Eyecatcher, 8 characters left           00099200
*                               aligned blank filled. Actual            00099300
*                               value set by invoker, e.g.              00099400
*                               'QRECOVER'                         @L3A 00099500
*                                                                       00099600
PKIS64_QREC_RESULTL_LEN DS  F   Length (in bytes) of the                00099700
*                               pre-allocated Results List              00099800
*                               area                               @L3A 00099900
*                                                                       00100000
                     DS  F      Alignment                          @L3A 00100100
*                                                                       00100200
PKIS64_QREC_RESULTL@ DS  AD     Address of the pre-allocated            00100300
*                               Results List area                  @L3A 00100400
*                                                                       00100500
PKIS64_QREC_NUMENTRIES  DS  F   Value indicating the maximum            00100600
*                               number of entries to be returned        00100700
*                               in the Results List area.  Zero         00100800
*                               indicates no limit                 @L3A 00100900
*                                                                       00101000
                     DS  F      Alignment                          @L3A 00101100
*                                                                       00101200
PKIS64_QREC_CRIT_EMAIL@ DS  AD  Address of a 33-byte area that          00101300
*                               contains the input requestor's          00101400
*                               email address as search                 00101500
*                               criteria                           @L3A 00101600
*                                                                       00101700
PKIS64_QREC_CRIT_PASS@  DS  AD  Address of a 33-byte area that          00101800
*                               contains the input pass phrase          00101900
*                               as search criteria.                @L3A 00102000
*                                                                       00102100
*---------------------------------------------------------------------* 00102200
*                                                                       00102300
*---------------------------------------------------------------------* 00102400
*    PKIS64 Function Specific Parameter List for VERIFY           @L3A* 00102500
*---------------------------------------------------------------------* 00102600
*                                                                       00102700
PKIS64_VERIFY_MAP    DSECT      Function Specific Parameter List        00102800
*                               (FSPL) for VERIFY                  @L3A 00102900
*                                                                       00103000
PKIS64_VERF_EYECATCH DS  CL8    Eyecatcher for the VERIFY FSPL          00103100
*                               left-aligned blank filled string        00103200
*                               containing user specified text,         00103300
*                               e.g. 'VERIFY  '                    @L3A 00103400
*                                                                       00103500
PKIS64_VERF_SUML_LEN DS  F      Length (in bytes) of the                00103600
*                               pre-allocated Summary List              00103700
*                               area                               @L3A 00103800
*                                                                       00103900
                     DS  F      Alignment                          @L3A 00104000
*                                                                       00104100
PKIS64_VERF_SUML@    DS  AD     Address of the pre-allocated            00104200
*                               Summary List area                  @L3A 00104300
*                                                                       00104400
PKIS64_VERF_CERTPL_LEN DS  F    Length (in bytes) of the Digital        00104500
*                               Certificate generation type PList       00104600
*                               details area                       @L3A 00104700
*                                                                       00104800
                     DS  F      Alignment                          @L3A 00104900
*                                                                       00105000
PKIS64_VERF_CERTPL@  DS  AD     Address of the pre-allocated Digital    00105100
*                               Certificate generation type PList       00105200
*                               details area                       @L3A 00105300
*                                                                       00105400
PKIS64_VERF_CERT_LEN DS  F      Length (in bytes) of the Cert area      00105500
*                               containing the certificate to           00105600
*                               verify                             @L3A 00105700
*                                                                       00105800
                     DS  F      Alignment                          @L3A 00105900
*                                                                       00106000
PKIS64_VERF_CERT@    DS  AD     Address of the area containing the      00106100
*                               Certificate to verify              @L3A 00106200
*                                                                       00106300
*--------------------------------------------------------------------*  00106400
*                                                                       00106500
*--------------------------------------------------------------------*  00106600
*    PKIS64 Function Specific Parameter List for REVOKE          @L3A*  00106700
*--------------------------------------------------------------------*  00106800
*                                                                       00106900
PKIS64_REVOKE_MAP    DSECT      Function Specific Parameter List        00107000
*                               (FSPL) for REVOKE                  @L3A 00107100
*                                                                       00107200
PKIS64_REVK_EYECATCH DS  CL8    Eyecatcher for the REVOKE FSPL          00107300
*                               left-aligned blank filled string        00107400
*                               containing user specified text,         00107500
*                               e.g. 'REVOKE  '                    @L3A 00107600
*                                                                       00107700
PKIS64_REVK_REASON   DS  F      4 byte binary value indicating          00107800
*                               the reason for the certificate          00107900
*                               revocation                         @L3A 00108000
*                                                                       00108100
                     DS  F      Alignment                          @L3A 00108200
*                                                                       00108300
PKIS64_REVK_SERIALNUM@ DS  AD   Address of a 17-Byte area that          00108400
*                               contains the Input Certificate          00108500
*                               Serial Number to be revoked. The        00108600
*                               first byte of this area contains        00108700
*                               the length of the Input Certificate     00108800
*                               Serial Number.                     @L3A 00108900
*                                                                       00109000
*--------------------------------------------------------------------*  00109100
*                                                                       00109200
*--------------------------------------------------------------------*  00109300
*    PKIS64 Function Specific Parameter List for RENEW           @L3A*  00109400
*--------------------------------------------------------------------*  00109500
*                                                                       00109600
PKIS64_RENEW_MAP     DSECT      Function Specific Parameter List        00109700
*                               (FSPL) for GENRENEW and REQRENEW   @L3A 00109800
*                                                                       00109900
PKIS64_RENW_EYECATCH DS  CL8    Eyecatcher for the GENRENEW FSPL        00110000
*                               and the REQRENEW FSPL left-alligned     00110100
*                               blank filled string containing the      00110200
*                               text 'RENEW   '                    @L3A 00110300
*                                                                       00110400
PKIS64_RENW_CERTPL_LEN DS  F    Length (in bytes) of the Digital        00110500
*                               Certificate generation PList       @L3A 00110600
*                                                                       00110700
                     DS  F      Alignment                          @L3A 00110800
*                                                                       00110900
PKIS64_RENW_CERTPL@  DS  AD     Address of the Digital                  00111000
*                               Certificate generation PList       @L3A 00111100
*                                                                       00111200
PKIS64_RENW_CERTID@  DS  AD     Address of a 57-Byte area that          00111300
*                               contains the Output Certificate         00111400
*                               Request ID (the first byte of this      00111500
*                               area contains the length of the         00111600
*                               Output Certificate Request ID)     @L3A 00111700
*                                                                       00111800
PKIS64_RENW_SERIALNUM@ DS  AD   Address of a 17-Byte area that          00111900
*                               contains the input Certficate Serial    00112000
*                               Number to be renewed. The first         00112100
*                               byte of this area contains the          00112200
*                               length of the Input Certificate         00112300
*                               Serial Number.                     @L3A 00112400
*                                                                       00112500
*--------------------------------------------------------------------*  00112600
*                                                                       00112700
*--------------------------------------------------------------------*  00112800
*   PKIS64 Function Specific Parameter List for RESPOND          @L3A*  00112900
*--------------------------------------------------------------------*  00113000
*                                                                       00113100
PKIS64_RESPOND_MAP   DSECT      Mapping for RESPOND function Specific   00113200
*                               parameter List                     @L3A 00113300
*                                                                       00113400
PKIS64_RESP_EYECATCH DS  CL8    Eyecatcher for the RESPOND FSPL.        00113500
*                               left-aligned blank filled string        00113600
*                               containing user specified text,         00113700
*                               e.g. 'RESPOND '                    @L3A 00113800
*                                                                       00113900
PKIS64_RESP_RESPONSE_LEN  DS  F Length(in bytes) of the Response        00114000
*                               area on input to RESPOND           @L3A 00114100
*                                                                       00114200
                     DS  F      Alignment                          @L3A 00114300
*                                                                       00114400
PKIS64_RESP_RESPONSE@     DS  AD Address of the storage area in which   00114500
*                                the R_PKISERV service stores the       00114600
*                                results of the RESPOND if the          00114700
*                                service was able to successfully       00114800
*                                retrieve the data                 @L3A 00114900
*                                                                       00115000
PKIS64_RESP_REQUEST_LEN   DS  F Length (in bytes) of the Request        00115100
*                               area containing the input request       00115200
*                               data                               @L3A 00115300
*                                                                       00115400
                     DS  F      Alignment                          @L3A 00115500
*                                                                       00115600
PKIS64_RESP_REQUEST@ DS  AD     Address of the area containing the      00115700
*                               Request                            @L3A 00115800
*                                                                       00115900
*---------------------------------------------------------------------* 00116000
*                                                                       00116100
*---------------------------------------------------------------------* 00116200
*  PKIS64 Function Specific Parameter List for SCEPREQ            @L3A* 00116300
*---------------------------------------------------------------------* 00116400
*                                                                       00116500
PKIS64_SCEPREQ_MAP   DSECT      Function Specific Parm List             00116600
*                               (FSPL) for SCEPREQ                 @L3A 00116700
*                                                                       00116800
PKIS64_SCEP_EYECATCH DS  CL8    Eyecatcher for the SCEPREQ FSPL.        00116900
*                               left-aligned, blank filled. Actual      00117000
*                               value set by the invoker, for           00117100
*                               e.g. 'SCEPREQ '                    @L3A 00117200
*                                                                       00117300
PKIS64_SCEP_RESPONSE_LEN  DS  F 4 byte area which is the length         00117400
*                               of the pre-allocated storage of         00117500
*                               the reponse area on input to            00117600
*                               SCEPREQ                            @L3A 00117700
*                                                                       00117800
                     DS  F      Alignment                          @L3A 00117900
*                                                                       00118000
PKIS64_SCEP_RESPONSE@     DS  AD The address of the storage area        00118100
*                                in which the R_PKIServ service         00118200
*                                stores the results of the SCEPREQ      00118300
*                                if the serivce was able to             00118400
*                                successfuly retrieve the data     @L3A 00118500
*                                                                       00118600
PKIS64_SCEP_REQUEST_LEN   DS  F Length (in bytes) of the Request        00118700
*                               area containing the input request       00118800
*                               data                               @L3A 00118900
*                                                                       00119000
                     DS  F      Alignment                          @L3A 00119100
*                                                                       00119200
PKIS64_SCEP_REQUEST@ DS  AD      Address of the area containing the     00119300
*                                Request to process                @L3A 00119400
*                                                                       00119500
*---------------------------------------------------------------------* 00119600
*                                                                       00119700
*---------------------------------------------------------------------* 00119800
*    PKIS64 Function Specific Parameter List for PREREGISTER      @L3A* 00119900
*---------------------------------------------------------------------* 00120000
*                                                                       00120100
PKIS64_PREREG_MAP    DSECT      Mapping for PREREGISTER function        00120200
*                               specific parm List                 @L3A 00120300
*                                                                       00120400
PKIS64_PREG_EYECATCH DS CL8     Eyecatcher for the SCEPREQ              00120500
*                               PRERIGISTER FSPL. left-aligned,         00120600
*                               blank filled string.Actual value        00120700
*                               set by invoker, e.g. 'PREREG  '    @L3A 00120800
*                                                                       00120900
PKIS64_PREG_CERTPL_LEN  DS  F   Length (in bytes) of the                00121000
*                               preregistration parameter list     @L3A 00121100
*                                                                       00121200
                     DS  F      Alignment                          @L3A 00121300
*                                                                       00121400
PKIS64_PREG_CERTPL@  DS  AD     Address of the preregistration          00121500
*                               parameter list                     @L3A 00121600
*                                                                       00121700
PKIS64_PREG_CERTID@  DS  AD     Address of a 57-Byte area that          00121800
*                               contains the Output Certificate         00121900
*                               Request ID (the first byte of this      00122000
*                               area contains the length of the         00122100
*                               Output Certificate Request ID)     @L3A 00122200
*                                                                       00122300
*---------------------------------------------------------------------* 00122400
*                                                                       00122500
*---------------------------------------------------------------------* 00122600
*                                                                       00122700
*********************************************************************** 00122800
*  FACT function-specific parameter lists                          @L6A 00122900
*********************************************************************** 00123000
*                                                                       00123100
*********************************************************************** 00123200
*  Function code 1: Get general factor data                        @L6A 00123300
*********************************************************************** 00123400
FACT_GETF_PLIST          DSECT                                     @L6A 00123500
FACT_GETF_OPTIONS        DS  F  Reserved                           @L6A 00123600
FACT_GETF_FACTOR_LENGTH  DS  F  Length of factor name              @L6A 00123700
FACT_GETF_FACTOR@        DS AD  Address of factor name             @L6A 00123800
                         DS  F  Reserved                           @L6A 00123900
FACT_GETF_AF_LENGTH      DS  F  Length of data area                @L6A 00124000
FACT_GETF_AF@            DS AD  Address of data area               @L6A 00124100
*                                                                       00124200
*********************************************************************** 00124300
*  Function code 2: Set general factor data                        @L6A 00124400
*********************************************************************** 00124500
FACT_SETF_PLIST          DSECT                                     @L6A 00124600
FACT_SETF_OPTIONS        DS  F  Reserved                           @L6A 00124700
FACT_SETF_FACTOR_LENGTH  DS  F  Length of factor name              @L6A 00124800
FACT_SETF_FACTOR@        DS AD  Address of factor name             @L6A 00124900
                         DS  F  Reserved                           @L6A 00125000
FACT_SETF_AF_LENGTH      DS  F  Length of data area                @L6A 00125100
FACT_SETF_AF@            DS AD  Address of data area               @L6A 00125200
*                                                                       00125300
*********************************************************************** 00125400
*  Function code 3: Get user factor data                           @L6A 00125500
*********************************************************************** 00125600
FACT_GETU_PLIST          DSECT                                     @L6A 00125700
FACT_GETU_OPTIONS        DS  F  Option settings                    @L7C 00125800
FACT_GETU_OPT_POLICY EQU X'80000000'  Include policy information   @L7A 00125900
FACT_GETU_UF_COUNT       DS  F  Number of user factors             @L6A 00126000
                         DS  F  Reserved                           @L6A 00126100
FACT_GETU_UF_LENGTH      DS  F  Length of user factor area         @L6A 00126200
FACT_GETU_UF@            DS AD  Address of user factor area        @L6A 00126300
FACT_GETU_USER_LENGTH    DS AL1 Length of user ID                  @L6A 00126400
FACT_GETU_USER           DS CL8 User ID                            @L6A 00126500
FACT_GETU_FALL_BACK      DS AL1 Fall back to password              @L6A 00126600
*                               x'01' Enabled                      @L6A 00126700
*                               x'02' Disabled                     @L6A 00126800
FACT_GETU_LEN        EQU *-FACT_GETU_PLIST                         @L7A 00126900
*                               Length of original parameter list  @L7A 00127000
*                                                                       00127100
*  Extended parameter list for function code 3 -                   @L7A 00127200
FACT_GETU_PLIST1         DSECT                                     @L7A 00127300
                         DS CL34 Area defined by FACT_GETU_PLIST   @L7A 00127400
*                                                                  @L7A 00127500
FACT_GETU_EXT1           DS CL22 Beginning of extended area        @L7A 00127600
                         ORG FACT_GETU_EXT1                        @L7A 00127700
                         DS CL14 Reserved                          @L7A 00127800
FACT_GETU_POL_COUNT      DS  F   Number of policies                @L7A 00127900
FACT_GETU_POL_OFFSET     DS  F   Offset to policy list             @L7A 00128000
*                                                                       00128100
FACT_GETU_LEN1       EQU *-FACT_GETU_PLIST1                        @L7A 00128200
*                               Length of extended parameter list  @L7A 00128300
*                                                                       00128400
*********************************************************************** 00128500
*  Function code 4: Set user factor data                           @L6A 00128600
*********************************************************************** 00128700
FACT_SETU_PLIST          DSECT                                     @L6A 00128800
FACT_SETU_OPTIONS        DS  F  Reserved                           @L6A 00128900
FACT_SETU_UF_COUNT       DS  F  Number of user factors             @L6A 00129000
                         DS  F  Reserved                           @L6A 00129100
FACT_SETU_UF_LENGTH      DS  F  Length of user factor area         @L6A 00129200
FACT_SETU_UF@            DS AD  Address of user factor area        @L6A 00129300
FACT_SETU_USER_LENGTH    DS AL1 Length of user ID                  @L6A 00129400
FACT_SETU_USER           DS CL8 User ID                            @L6A 00129500
FACT_SETU_FALL_BACK      DS AL1 Fall back to password              @L6A 00129600
*                               x'00' No change                    @L6A 00129700
*                                                                       00129800
*********************************************************************** 00129900
*  Function code 5: Get policy data                                @L7A 00130000
*********************************************************************** 00130100
FACT_GETP_PLIST          DSECT                                     @L7A 00130200
FACT_GETP_OPTIONS        DS  F   Reserved                          @L7A 00130300
FACT_GETP_POLICY_LENGTH  DS  F   Length of policy name             @L7A 00130400
FACT_GETP_POLICY@        DS AD   Address of policy name            @L7A 00130500
FACT_GETP_FL_COUNT       DS  F   Number of factors in list         @L7A 00130600
FACT_GETP_PA_LENGTH      DS AL1  Length of policy area             @L7A 00130700
FACT_GETP_PA@            DS AD   Address of policy area            @L7A 00130800
FACT_GETP_TIMEOUT        DS  F   Token time-out value              @L7A 00130900
FACT_GETP_REUSE          DS AL1  Token reuse setting               @L7A 00131000
*                                x'01' can reuse                   @L7A 00131100
*                                x'02' cannot reuse                @L7A 00131200
                         DS CL15 Reserved                          @L7A 00131300
*                                                                       00131400
*********************************************************************** 00131500
*  Function code 6: Get CTC - Cached Token Credential              @L8A 00131600
*********************************************************************** 00131700
FACT_GETC_PLIST          DSECT                                     @L8A 00131800
FACT_GETC_OPTIONS        DS  F   Reserved                          @L8A 00131900
FACT_GETC_USER_LENGTH    DS AL1  Length of User ID                 @L8A 00132000
FACT_GETC_USER           DS CL8  User ID                           @L8A 00132100
FACT_GETC_APPL           DS CL8  User ID                           @L8A 00132200
                         DS CL7  Reserved                          @L8A 00132300
FACT_GETC_CRED_LIST_NUM  DS  F   Number of CREDs in CRED List      @L8A 00132400
FACT_GETC_CRED_LIST@     DS AD   Address of CRED List              @L8A 00132500
FACT_GETC_CTC@           DS AD   Address of CTC area               @L8A 00132600
FACT_GETC_POLICY_LEN     DS  F   Length of Policy Name             @L8A 00132700
FACT_GETC_POLICY_NAME    DS CL20 Token reuse setting               @L8A 00132800
                         DS CL16 Reserved                          @L8A 00132900
*                                                                       00133000
*********************************************************************** 00133100
*  User factor list                                                @L6A 00133200
*********************************************************************** 00133300
FACT_UF_ENTRY            DSECT                                     @L6A 00133400
FACT_UF_FACTOR_LENGTH    DS  F  Length of factor name              @L6A 00133500
FACT_UF_FACTOR_OFFSET    DS  F  Positive offset from start of user @L6A 00133600
*                                factor area to factor name        @L6A 00133700
FACT_UF_FIELDS_COUNT     DS  F  Number of fields for this factor   @L6A 00133800
FACT_UF_FIELDS_OFFSET    DS  F  Positive offset from start of user @L6A 00133900
*                                factor area to user factor field  @L6A 00134000
*                                list                              @L6A 00134100
*                                                                       00134200
*********************************************************************** 00134300
*  User factor fields list                                         @L6A 00134400
*********************************************************************** 00134500
FACT_UFF_ENTRY           DSECT                                     @L6A 00134600
FACT_UFF_FIELD_ID        DS  F  Numeric identifier                 @L6A 00134700
FACT_UFF_VALUE_LENGTH    DS  F  Length of field value              @L6A 00134800
FACT_UFF_VALUE_OFFSET    DS  F  Positive offset from start of user @L6A 00134900
*                                factor area to user factor field  @L6A 00135000
*                                value                             @L6A 00135100
*                                                                       00135200
*   FACT_UFF_FIELD_ID constants                                         00135300
*                                                                       00135400
FACT_FID_TAGS          EQU X'00000001' User factor tag data        @L6A 00135500
FACT_FID_ACTIVE        EQU X'00000002' User factor active date     @L6A 00135600
*                                                                       00135700
*********************************************************************** 00135800
*  User factor tag list                                            @L6A 00135900
*********************************************************************** 00136000
FACT_UFT_LIST            DSECT  Header value appears once at the   @L6A 00136100
FACT_UFT_HEADER          DS AL2  start of the tag list area        @L6A 00136200
*                                                                       00136300
* The first PART1 area must immediately follow FACT_UFT_HEADER.    @L6A 00136400
* The first PART2 area must immediately follow the first PART1.    @L6A 00136500
* Subsequent PART1/PART2 pairs must immediately follow preceding   @L6A 00136600
* pairs.                                                           @L6A 00136700
*                                                                       00136800
FACT_UFT_PART1           DSECT                                     @L6A 00136900
FACT_UFT_PAIR_LENGTH     DS AL2  Total length of this tag/value    @L6A 00137000
*                                 entry                            @L6A 00137100
FACT_UFT_ATTRIBUTES      DS AL2  Tag attributes                    @L6A 00137200
FACT_UFT_TAG_LENGTH      DS AL2  Length of tag                     @L6A 00137300
FACT_UFT_TAG             DS 0C   Tag name                          @L6A 00137400
*                                                                       00137500
FACT_UFT_PART2           DSECT                                     @L6A 00137600
FACT_UFT_VALUE_LENGTH    DS AL2  Length of tag value               @L6A 00137700
FACT_UFT_VALUE           DS 0C   Value for tag                     @L6A 00137800
*                                                                       00137900
*********************************************************************** 00138000
*  User policy list                                                @L7A 00138100
*********************************************************************** 00138200
FACT_UP_ENTRY            DSECT                                     @L7A 00138300
FACT_UP_POLICY_LENGTH    DS  F   Length of policy name             @L7A 00138400
FACT_UP_POLICY_OFFSET    DS  F   Positive offset from start of     @L7A 00138500
*                                 user factor area to policy name  @L7A 00138600
                         DS AD   Reserved                          @L7A 00138700
*                                                                       00138800
*********************************************************************** 00138900
*  Policy factor list                                              @L7A 00139000
*********************************************************************** 00139100
FACT_PF_ENTRY            DSECT                                     @L7A 00139200
FACT_PF_FACTOR_LENGTH    DS  F   Length of factor name             @L7A 00139300
FACT_PF_FACTOR_OFFSET    DS  F   Positive offset from start of     @L7A 00139400
*                                 policy area to factor name       @L7A 00139500
                         DS AD   Reserved                          @L7A 00139600
*                                                                       00139700
*******************************************************************     00139800
*  MFA CRED List                                                   @L8A 00139900
*********************************************************************** 00140000
FACT_CRED_LIST           DSECT                                     @L8A 00140100
FACT_CRED_TYPE           DS CL20  Credential Type                  @L8A 00140200
FACT_CRED_LENGTH         DS  F    Credential Length                @L8A 00140300
FACT_CRED_VAL@           DS AD    Address of Credential Value      @L8A 00140400
                         DS CL16  Reserved                         @L8A 00140500
*                                                                       00140600
*   MFA CRED constants                                             @L8A 00140700
*                                                                       00140800
FACT_CRED_LIST_NUM_MAX EQU X'0000000A' CRED List Max entries       @L8A 00140900
FACT_CRED_LEN_MAX      EQU X'00002000' Max CRED length             @L8A 00141000
*                                                                       00141100
*******************************************************************     00141200
                                                                        00141300
*                                                                       00141400
                   MEND                                              */ 00141500
*                                                                       00141600
*                                                                       00141700
*                                                                       00141800
*                                                                       00141900
*                                                                       00142000
*                                                                       00142100
*                                                                       00142200
*/********************************************************************/ 00142300
*/********************************************************************/ 00142400
*/********************************************************************/ 00142500
*/*                                                                  */ 00142600
*/*                     COMY PL/X DECLARATIONS                       */ 00142700
*/*------------------------------------------------------------------*/ 00142800
*/*                                                                  */ 00142900
*/*   DECLARATION NAME = COMY                                        */ 00143000
*/*                                                                  */ 00143100
*/*   DESCRIPTIVE NAME = SAF callable service parameter list.        */ 00143200
*/*                                                                  */ 00143300
*/*   FUNCTION = Provides PL/X mapping of the common input parameter */ 00143400
*/*              list for the SAF router.                            */ 00143500
*/*                                                                  */ 00143600
*/********************************************************************/ 00143700
*                                                                       00143800
* DECLARE                                                               00143900
*  1 COMY BASED BDY(DWORD),      /* Common SAF plist                 */ 00144000
*                                                                       00144100
*   3 COMY_WORKA_STOR@ PTR(64), /* Addr of 1024 byte work area       */ 00144200
*                                                                       00144300
*   3 COMY_SAFRC_ALET@ PTR(64), /* Addr of ALET for SAF return code  */ 00144400
*                                                                       00144500
*   3 COMY_SAFRC_STOR@ PTR(64), /* Addr of SAF return code           */ 00144600
*                                                                       00144700
*   3 COMY_RACRC_ALET@ PTR(64), /* Addr of ALET for RACF return code */ 00144800
*                                                                       00144900
*   3 COMY_RACRC_STOR@ PTR(64), /* Addr of RACF return code          */ 00145000
*                                                                       00145100
*   3 COMY_RACSC_ALET@ PTR(64), /* Addr of ALET for RACF reason code */ 00145200
*                                                                       00145300
*   3 COMY_RACSC_STOR@ PTR(64), /* Addr of RACF reason code          */ 00145400
*                                                                       00145500
* ] Set up magic for C header generation.  If we are not generating a   00145600
* ]  C header, the last part of COMY is the COMY_SERVR_PARM char(0)     00145700
* ]  declaration, and everything else is based or defined on            00145800
* ]  COMY_SERVR_PARMS.  Each service has a separate mapping declared.   00145900
* %If Translate(IBM_CBGENC) ^= 'YES' %Then                       ] @L9A 00146000
* %Do;                                                           ] @L9A 00146100
*   3 COMY_SERVR_PARMS CHAR(0);  /* Service routine parameter lists     00146200
*                                    begin here.                     */ 00146300
*   %COMY_Lvl = '1';                                             ] @L9A 00146400
*   %COMY_Bas = 'Based(Addr(COMY_SERVR_PARMS))';                 ] @L9A 00146500
*   %COMY_Def = 'Defined(COMY_SERVR_PARMS)';                     ] @L9A 00146600
*   %COMY_Term = ';';                                            ] @L9A 00146700
*   %COMY_Dcl = 'Declare';                                       ] @L9A 00146800
* %End;                                                          ] @L9A 00146900
* ] If we are generating a                                              00147000
* ]  C header, the last part of COMY_SERVR_PARMS is a UNION             00147100
* ]  declaration, and everything else is declared inside that           00147200
* ]  UNION, resulting in COMY being a single, giant UNION of all        00147300
* ]   of the service parameter lists.                                   00147400
* %Else %Do;                                                     ] @L9A 00147500
*   3 COMY_SERVR_PARMS Union,    /* Service routine parameter lists     00147600
*                                    begin here.                     */ 00147700
*   %COMY_Lvl = '4';                                             ] @L9A 00147800
*   %COMY_Bas = '';                                              ] @L9A 00147900
*   %COMY_Def = '';                                              ] @L9A 00148000
*   %COMY_Term = ',';                                            ] @L9A 00148100
*   %COMY_Dcl = '';                                              ] @L9A 00148200
* %End;                                                          ] @L9A 00148300
*                                                                       00148400
*/********************************************************************/ 00148500
*/*                                                                  */ 00148600
*/*                RAUX64 PL/X DECLARATIONS                          */ 00148700
*/*------------------------------------------------------------------*/ 00148800
*/*                                                                  */ 00148900
*/* DECLARATION NAME = RAUX64                                        */ 00149000
*/*                                                                  */ 00149100
*/* DESCRIPTIVE NAME = 64 bit R_auditx parameters                    */ 00149200
*/*                                                                  */ 00149300
*/* FUNCTION = Provides 64 bit PL/X mapping of the input parameter   */ 00149400
*/*            list for the R_auditx callable service                */ 00149500
*/********************************************************************/ 00149600
* COMY_Dcl                                                              00149700
*  COMY_Lvl RAUX64 COMY_Def,                  /* RAUX64 Mapping  @P1C*/ 00149800
*                                                                       00149900
*   5 RAUX64_NUM_PARMS@      PTR(64), /* Address of a full word         00150000
*                                        containing the total           00150100
*                                        number of parameters           00150200
*                                        included in COMY and           00150300
*                                        RAUX64                      */ 00150400
*   5 RAUX64_ACEE_ALET@      PTR(64), /* Address of the ALET for        00150500
*                                        the ACEE structure          */ 00150600
*   5 RAUX64_ACEE@           PTR(64), /* Address of the ACEE            00150700
*                                        structure                   */ 00150800
*   5 RAUX64_PARM_ALET@      PTR(64), /* Address of ALET for the        00150900
*                                        remaining parameters        */ 00151000
*   5 RAUX64_OPTION_WORD@    PTR(64), /* Address of a full word         00151100
*                                        containing binary zeros.       00151200
*                                        The area pointed to by         00151300
*                                        this parameter is              00151400
*                                        reserved for future use.    */ 00151500
*   5 RAUX64_LINK_VALUE@     PTR(64), /* Address of 8 byte value        00151600
*                                        used to mark a set of          00151700
*                                        related SMF records         */ 00151800
*   5 RAUX64_ATTRIBUTES@     PTR(64), /* Address of a full word         00151900
*                                        containing flag values      */ 00152000
*   5 RAUX64_COMPONENT@      PTR(64), /* Address of an area             00152100
*                                        containing a 4 byte            00152200
*                                        length followed by a           00152300
*                                        a component or product         00152400
*                                        name                        */ 00152500
*   5 RAUX64_FMID@           PTR(64), /* Address of a 7 byte area       00152600
*                                        containing the FMID for        00152700
*                                        the component or               00152800
*                                        product                     */ 00152900
*   5 RAUX64_SUBTYPE@        PTR(64), /* Address of a full word         00153000
*                                        containing the SMF 83          00153100
*                                        record subtype              */ 00153200
*   5 RAUX64_EVENT@          PTR(64), /* Address of a full word         00153300
*                                        containing the event           00153400
*                                        code                        */ 00153500
*   5 RAUX64_QUALIFIER@      PTR(64), /* Address of a full word         00153600
*                                        containing the qualifier       00153700
*                                        for the event code          */ 00153800
*   5 RAUX64_CLASS@          PTR(64), /* Address of an 8 byte           00153900
*                                        area containing a              00154000
*                                        class name                  */ 00154100
*   5 RAUX64_RESOURCE@       PTR(64), /* Address of an area             00154200
*                                        containing a 4 byte            00154300
*                                        length followed by the         00154400
*                                        resource name which is         00154500
*                                        covered by a profile           00154600
*                                        defined in the class           00154700
*                                        specified above             */ 00154800
*   5 RAUX64_LOG_STRING@     PTR(64), /* Address of an area             00154900
*                                        containing a 4 byte            00155000
*                                        length followed by             00155100
*                                        text to be written             00155200
*                                        to the SMF record           */ 00155300
*   5 RAUX64_RELOCATE_COUNT@ PTR(64), /* Address of a full word         00155400
*                                        containing the number          00155500
*                                        of relocate sections        */ 00155600
*   5 RAUX64_RELOCATE_PTR@   PTR(64), /* Address of an 8-byte           00155700
*                                        pointer to the array of        00155800
*                                        relocate sections      */      00155900
*   5 RAUX64_MESSAGE_COUNT@  PTR(64), /* Address of a full word         00156000
*                                        containing the number          00156100
*                                        of message segments         */ 00156200
*   5 RAUX64_MESSAGE_PTR@    PTR(64)  /* Address of an 8-byte           00156300
*                                        pointer to the array of        00156400
*                                        message segments            */ 00156500
*   Comy_Term                                                           00156600
*/********************************************************************/ 00156700
*/*                                                                  */ 00156800
*/*                PGSN64 PL/X DECLARATIONS                          */ 00156900
*/*------------------------------------------------------------------*/ 00157000
*/*                                                                  */ 00157100
*/* DECLARATION NAME = PGSN64                                        */ 00157200
*/*                                                                  */ 00157300
*/* DESCRIPTIVE NAME =   Program signing and verification            */ 00157400
*/*                                                                  */ 00157500
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 00157600
*/*     list for the service which will cryptographically sign and   */ 00157700
*/*     verify z/OS program objects (R_PgmSignVer)                   */ 00157800
*/*                                                                  */ 00157900
*/* NOTE: Function code constants and mappings for function-         */ 00158000
*/*       specific parameter lists can be found in IRRPCOMP.         */ 00158100
*/*                                                                  */ 00158200
*/***************************************************************@L2A*/ 00158300
*                                                                       00158400
* COMY_Dcl                                                              00158500
*  COMY_Lvl PGSN64 COMY_Def,           ] Mapping for PGSN64        @L2A 00158600
*    5 PGSN64_NUM_PARMS@     Ptr(64),  ] Address of fullword containing 00158700
*                                      ] the total number of parameters 00158800
*                                      ] in COMY and PGSN64        @L2A 00158900
*    5 PGSN64_FUNC@          Ptr(64),  ] Address of 2 byte function     00159000
*                                      ] code                      @L2A 00159100
*    5 PGSN64_FUNC_PARML@    Ptr(64),  ] Address of the function-       00159200
*                                      ] specific parameter list        00159300
*                                      ] corresponding to the function  00159400
*                                      ] code.                     @LBC 00159500
*    5 PGSN64_FUNC_ATTRS@    Ptr(64)   ] Address of the attributes      00159600
*                                      ] corresponding to function      00159700
*                                      ] code.                     @LBA 00159800
*   Comy_Term                                                           00159900
*/********************************************************************/ 00160000
*/*                                                                  */ 00160100
*/*                PKIS64 PL/X DECLARATIONS                          */ 00160200
*/*------------------------------------------------------------------*/ 00160300
*/*                                                                  */ 00160400
*/*  DECLARATION NAME = PKIS64                                       */ 00160500
*/*                                                                  */ 00160600
*/*  DESCRIPTIVE NAME =   PKIS Service parameters(64 bit)            */ 00160700
*/*                                                                  */ 00160800
*/*  FUNCTION = Provides the PL/X mapping of the input paramter      */ 00160900
*/*             list for the PKIS callable service R_PKIServ     @L3A*/ 00161000
*/********************************************************************/ 00161100
* COMY_Dcl                                                              00161200
*  COMY_Lvl PKIS64 COMY_Def,           /* PKIS64 Mapping         @L3A*/ 00161300
*   5 PKIS64_NUM_PARMS@      PTR(64),  /* Address of a 8-byte variable  00161400
*                                         that contains the number of   00161500
*                                         parameters that follow in the 00161600
*                                         non-request specific portion  00161700
*                                         of the R_PKIServ callable     00161800
*                                         service Parameter List @L3A*/ 00161900
*   5 PKIS64_FUNC@           PTR(64),  /* Address of a 2-byte variable  00162000
*                                         that contains the code of the 00162100
*                                         requested function. Constants 00162200
*                                         for the function codes are    00162300
*                                         declared below         @L3A*/ 00162400
*   5 PKIS64_ATTRIBUTES@     PTR(64),  /* Address of a 4-byte variable  00162500
*                                         that contains attribute       00162600
*                                         flags for the service  @L3A*/ 00162700
*   5 PKIS64_LOG_STRING@     PTR(64),  /* Address of a Variable-Length  00162800
*                                         area that contains the LOG    00162900
*                                         string to be passed to        00163000
*                                         RACROUTE (1 byte for the      00163100
*                                         length followed by up to 255  00163200
*                                         bytes for the LOG string      00163300
*                                         itself)                @L3A*/ 00163400
*   5 PKIS64_PARM_VER@       PTR(64),  /* Address of a 4-byte variable  00163500
*                                         that contains the version     00163600
*                                         number of the Function        00163700
*                                         Specific Parameter List       00163800
*                                        (PKIS64_FUNC_PARML@)    @L3A*/ 00163900
*   5 PKIS64_FUNC_PARML@     PTR(64),  /* Address of the FSPL-Function  00164000
*                                         Specific Parameter List       00164100
*                                         (FSPL = the Parameter List    00164200
*                                         that corresponds to the       00164300
*                                         Function Code          @L3A*/ 00164400
*   5 PKIS64_CA_DOMAIN@      PTR(64)   /* Address of the name of        00164500
*                                         the PKI Services certificate  00164600
*                                         authority instance to be      00164700
*                                         invoked.               @L3A*/ 00164800
*   Comy_Term                                                           00164900
*/*------------------------------------------------------------------*/ 00165000
*/********************************************************************/ 00165100
*/*                                                                  */ 00165200
*/*                SMOP64 PL/X DECLARATIONS                          */ 00165300
*/*------------------------------------------------------------------*/ 00165400
*/*                                                                  */ 00165500
*/* DECLARATION NAME = SMOP64                                        */ 00165600
*/*                                                                  */ 00165700
*/* DESCRIPTIVE NAME = r_SecMgtOper service parameters               */ 00165800
*/*                                                                  */ 00165900
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 00166000
*/*            list for the callable service R_SecMgtOper            */ 00166100
*/***************************************************************@L5A*/ 00166200
*                                                                       00166300
* COMY_Dcl                                                              00166400
*  COMY_Lvl SMOP64  COMY_Def,       /* Map SMOP64                @L5A*/ 00166500
*    5 SMOP64_NUM_PARMS@   ptr(64), /* Address of fullword containing   00166600
*                                    the total number of parameters     00166700
*                                    included in COMP and SMOP64.@L5A*/ 00166800
*    5 SMOP64_FUNC@        ptr(64), /* Addr of 4 byte func code  @L5A*/ 00166900
*    5 SMOP64_OPTIONS@     ptr(64), /* Address of options for           00167000
*                                       SecMgtOper               @L5A*/ 00167100
*    5 SMOP64_REQUEST_LEN@ ptr(64), /* Address of 4 byte request length 00167200
*                                                                @L5A*/ 00167300
*    5 SMOP64_REQUEST@     ptr(64), /* Address of input req XML  @L5A*/ 00167400
*    5 SMOP64_HANDLE@      PTR(64), /* Address of input handle   @L5A*/ 00167500
*    5 SMOP64_USERID@      ptr(64), /* Address of runas USER     @L5A*/ 00167600
*    5 SMOP64_ACEE@        ptr(64), /* Address of runas ACEE     @L5A*/ 00167700
*    5 SMOP64_RESULT_LEN@  ptr(64), /* Address of result len     @L5A*/ 00167800
*    5 SMOP64_RESULT@      ptr(64)  /* Address of result         @L5A*/ 00167900
*    Comy_Term                                                          00168000
*/*------------------------------------------------------------------*/ 00168100
*                                                                       00168200
*/********************************************************************/ 00168300
*/*                                                                  */ 00168400
*/*                FACT PL/X DECLARATIONS                            */ 00168500
*/*------------------------------------------------------------------*/ 00168600
*/*                                                                  */ 00168700
*/* DECLARATION NAME = FACT                                          */ 00168800
*/*                                                                  */ 00168900
*/* DESCRIPTIVE NAME = Authentication Factor Service                 */ 00169000
*/*                                                                  */ 00169100
*/* FUNCTION = Provides the PL/X mapping of the input parameter      */ 00169200
*/*     list for the service which manages authentication factors    */ 00169300
*/*     (R_Factor)                                                   */ 00169400
*/*                                                              @L6A*/ 00169500
*/********************************************************************/ 00169600
*                                                                       00169700
* COMY_Dcl                                                              00169800
*  COMY_Lvl FACT COMY_Def, ] Mapping for FACT     @L6A                  00169900
*    5 FACT_NUM_PARMS@       Ptr(64),  ] Address of fullword containing 00170000
*                                      ] the total number of parameters 00170100
*                                      ] in COMY and FACT          @L6A 00170200
*    5 FACT_PARM_ALET@       PTR(64),  ] Address of ALET for the        00170300
*                                      ] remaining parameters           00170400
*    5 FACT_FUNC@            Ptr(64),  ] Address of 2 byte function     00170500
*                                      ] code                      @L6A 00170600
*    5 FACT_FUNC_PARML@      Ptr(64)   ] Address of the function-       00170700
*                                      ] specific parameter list        00170800
*                                      ] corresponding to the function  00170900
*                                      ] code.                     @L6A 00171000
*   ;                                                                   00171100
*/*------------------------------------------------------------------*/ 00171200
*                                                                       00171300
*/* Add new service here.  Change previous semi-colon to Comy_Term.  */ 00171400
*/*   End new service declaration with semi-colon.                   */ 00171500
*/* Put only the main arguments specified on the CALL                */ 00171600
*/*   statement here.  Constants and other mappings                  */ 00171700
*/*   should be added at the very end of  this macro.                */ 00171800
*                                                                       00171900
*/********************************************************************/ 00172000
*/*                COMY sub-declares                                 */ 00172100
*/********************************************************************/ 00172200
*                                                                       00172300
* DECLARE                                                               00172400
*  COMY_LEN FIXED(31) CONSTANT(LENGTH(COMY)); /* Block length        */ 00172500
*                                                                       00172600
*/********************************************************************/ 00172700
*/*                RAUX64 sub-declares                               */ 00172800
*/********************************************************************/ 00172900
*                                                                       00173000
*                                                                       00173100
* DECLARE                                                               00173200
*  RAUX64_LEN FIXED(31) CONSTANT(LENGTH(RAUX64)); /* RAUX64 length   */ 00173300
*                                                                       00173400
*/*     Attribute values                                             */ 00173500
* DECLARE                                                               00173600
*  RAUX64_ATTR_RESULT                  /* Event result,              */ 00173700
*       BIT(32) CONSTANT('80000000'x), /* ON=success,OFF=failure     */ 00173800
*                                                                       00173900
*  RAUX64_ATTR_AUTHENTICATION          /* Authentication event       */ 00174000
*       BIT(32) CONSTANT('40000000'x), /*                            */ 00174100
*                                                                       00174200
*  RAUX64_ATTR_AUTHORIZATION           /* Authorization event        */ 00174300
*       BIT(32) CONSTANT('20000000'x), /*                            */ 00174400
*                                                                       00174500
*  RAUX64_ATTR_LOG_SUCCESS             /* Always log successes       */ 00174600
*       BIT(32) CONSTANT('10000000'x), /*                            */ 00174700
*                                                                       00174800
*  RAUX64_ATTR_LOG_FAILURE             /* Always log failures        */ 00174900
*       BIT(32) CONSTANT('08000000'x), /*                            */ 00175000
*                                                                       00175100
*  RAUX64_ATTR_NOLOG_SUCCESS           /* Never log successes        */ 00175200
*       BIT(32) CONSTANT('04000000'x), /*                            */ 00175300
*                                                                       00175400
*  RAUX64_ATTR_NOLOG_FAILURE           /* Never log failues          */ 00175500
*       BIT(32) CONSTANT('02000000'x), /*                            */ 00175600
*                                                                       00175700
*  RAUX64_ATTR_WARN_FAILURE            /* Issue warning message      */ 00175800
*       BIT(32) CONSTANT('01000000'x); /* for failues                */ 00175900
*                                                                       00176000
*/*     Relocate structure                                           */ 00176100
* DECLARE                                                               00176200
*  1 RAUX64_RELOCATE     Based    , /* Mapping for relocate          */ 00176300
*    3 RAUX64_RELO_TYPE  Fixed(16), /* Section type                  */ 00176400
*    3 *                 Fixed(16), /* Reserved                      */ 00176500
*    3 RAUX64_RELO_LEN   Fixed(32), /* Length of section data        */ 00176600
*    3 RAUX64_RELO_DATA_PTR Ptr(64);/* Address of section data       */ 00176700
*                                                                       00176800
*/*     Message segment structure                                    */ 00176900
* DECLARE                                                               00177000
*  1 RAUX64_SEGMENT      Based    , /* Mapping for msg segment       */ 00177100
*    3 *                 Fixed(32), /* Reserved                      */ 00177200
*    3 RAUX64_SEG_LEN    Fixed(32), /* Segment length                */ 00177300
*    3 RAUX64_SEG_PTR      Ptr(64); /* Address of segment data       */ 00177400
*                                                                       00177500
*/********************************************************************/ 00177600
*/*                PGSN64 sub-declares                               */ 00177700
*/********************************************************************/ 00177800
*                                                                       00177900
* /* PGSN64 length without function attributes                   @LBA*/ 00177901
* %If Translate(IBM_CBGENC) ^= 'YES' %Then                      ]  @LBA 00177902
* %Do;                                                          ]  @LBA 00177903
* DECLARE PGSN64_LEN FIXED(31)                                          00177904
*                    CONSTANT(OFFSET(PGSN64_FUNC_ATTRS@));      ]  @LBC 00177905
* %End;                                                         ]  @LBA 00177906
* %Else %Do;                                                    ]  @LBA 00177907
* DECLARE PGSN64_LEN FIXED(31)                                          00178000
*                    CONSTANT( OFFSET(PGSN64_FUNC_ATTRS@)               00178001
*                            - OFFSET(COMY_SERVR_PARMS)                 00178002
*                            );                                 ]  @LBA 00178100
* %End;                                                         ]  @LBA 00177909
*                                                                       00178300
* /* PGSN64 length with function attributes                      @LBA*/ 00178400
* DECLARE PGSN64_LEN_WITH_ATTRS FIXED(31)                               00178500
*                     CONSTANT(LENGTH(PGSN64));               /* @LBA*/ 00178600
*                                                                       00178800
*/********************************************************************/ 00178900
*/*                PKIS64 sub-declares                               */ 00179000
*/********************************************************************/ 00179100
*                                                                       00179200
* DECLARE                                                               00179300
*  PKIS64_LEN           FIXED(31) CONSTANT(Offset(PKIS64_CA_DOMAIN@)),  00179400
*                             /* Constant - Length of the PKIS64        00179500
*                                structure with no CA domain     @L4A*/ 00179600
*  PKIS64_TOT_LEN            FIXED(31)  CONSTANT(LENGTH(PKIS64));       00179700
*                                      /* Constant-length of            00179800
*                                         PKIS64                 @L3A*/ 00179900
*                                                                       00180000
*/*------------------------------------------------------------------*/ 00180100
*/*                                                                  */ 00180200
*/* PKIS64 Function Code Constants                               @L3A*/ 00180300
*/*                                                                  */ 00180400
*/*------------------------------------------------------------------*/ 00180500
*                                                                       00180600
* DECLARE                                                               00180700
*  PKIS64_GENCERT      FIXED(16) CONSTANT(1), /* Generates a basic      00180800
*                                                X.509 V3 digital       00180900
*                                                certificate     @L3A*/ 00181000
*  PKIS64_EXPORT       FIXED(16) CONSTANT(2), /* Extracts a digital     00181100
*                                                certificate by         00181200
*                                                Certificate Request    00181300
*                                                ID              @L3A*/ 00181400
*  PKIS64_QUERYREQS    FIXED(16) CONSTANT(3), /* QUERYREQS Function     00181500
*                                                of PKI Services.       00181600
*                                                Query certificate      00181700
*                                                requests        @L3A*/ 00181800
*  PKIS64_REQDETAILS   FIXED(16) CONSTANT(4), /* REQDETAILS Function    00181900
*                                                of PKI Services.       00182000
*                                                Extract details of a   00182100
*                                                single certificate     00182200
*                                                request         @L3A*/ 00182300
*  PKIS64_MODIFYREQS   FIXED(16) CONSTANT(5), /* MODIFYREQS Function    00182400
*                                                of PKI Services.       00182500
*                                                Modify one or more     00182600
*                                                certificate requests   00182700
*                                                                @L3A*/ 00182800
*  PKIS64_QUERYCERTS   FIXED(16) CONSTANT(6), /* QUERYCERTS Function    00182900
*                                                of PKI Services        00183000
*                                                Query issued           00183100
*                                                certificates    @L3A*/ 00183200
*  PKIS64_CERTDETAILS  FIXED(16) CONSTANT(7), /* CERTDETAILS Function   00183300
*                                                of PKI Services        00183400
*                                                Extract details of a   00183500
*                                                single issued          00183600
*                                                certificate     @L3A*/ 00183700
*  PKIS64_MODIFYCERTS  FIXED(16) CONSTANT(8), /* MODIFYCERTS Function   00183800
*                                                of PKI Services        00183900
*                                                Modify one or more     00184000
*                                                issued certificate     00184100
*                                                                @L3A*/ 00184200
*  PKIS64_REQCERT      FIXED(16) CONSTANT(9), /* REQCERT Function       00184300
*                                                of PKI Services        00184400
*                                                Request a digital      00184500
*                                                certificate pending    00184600
*                                                the approval of an     00184700
*                                                administrator   @L3A*/ 00184800
*  PKIS64_VERIFY       FIXED(16) CONSTANT(10), /* VERIFY Function of    00184900
*                                                 PKI Services, Request 00185000
*                                                 certificate           00185100
*                                                 verification   @L3A*/ 00185200
*  PKIS64_REVOKE       FIXED(16) CONSTANT(11), /* REVOKE Function of    00185300
*                                                 PKI Services. Request 00185400
*                                                 certificate           00185500
*                                                 revocation     @L3A*/ 00185600
*  PKIS64_GENRENEW     FIXED(16) CONSTANT(12), /* GENRENEW Function of  00185700
*                                                 PKI Services, Request 00185800
*                                                 auto-approved         00185900
*                                                 certificate renewal   00186000
*                                                                @L3A*/ 00186100
*  PKIS64_REQRENEW     FIXED(16) CONSTANT(13), /* REQRENEW Function of  00186200
*                                                 PKI Services. Request 00186300
*                                                 certificate renewal   00186400
*                                                                @L3A*/ 00186500
*  PKIS64_RESPOND      FIXED(16) CONSTANT(14), /* RESPOND Function of   00186600
*                                                 PKI Services.  @L3A*/ 00186700
*  PKIS64_SCEPREQ      FIXED(16) CONSTANT(15), /* SCEPREQ Function of   00186800
*                                                 PKI Services. Submit  00186900
*                                                 a request to PKI      00187000
*                                                 Services using SCEP   00187100
*                                                                @L3A*/ 00187200
*  PKIS64_PREREGISTER  FIXED(16) CONSTANT(16), /* PREREGISTER Function  00187300
*                                                 of PKI Services.      00187400
*                                                 Preregister a SCEP    00187500
*                                                 user           @L3A*/ 00187600
*  PKIS64_QRECOVER     FIXED(16) CONSTANT(17); /* QRECOVER Function of  00187700
*                                                 PKI Services. Query   00187800
*                                                 for recovering a      00187900
*                                                 certificate and       00188000
*                                                 private key    @L3A*/ 00188100
*                                                                       00188200
*/*------------------------------------------------------------------*/ 00188300
*/*                                                                  */ 00188400
*/* PKIS64 Function Specific Parameter Lists                     @L3A*/ 00188500
*/*                                                                  */ 00188600
*/*------------------------------------------------------------------*/ 00188700
*                                                                       00188800
* DECLARE                                                               00188900
*  1 PKIS64_GENCERT_MAP      BASED,    /* Function Specific Parameter   00189000
*                                         List (FSPL) for GENCERT       00189100
*                                                                @L3A*/ 00189200
*   2 PKIS64_GENC_EYECATCH   CHAR(8),  /* Eyecatcher for the GENCERT    00189300
*                                         FSPL left-aligned blank       00189400
*                                         filled string containing      00189500
*                                         the text 'GENCERT '    @L3A*/ 00189600
*   2 PKIS64_GENC_CERTPL_LEN FIXED(32),/* Length (in bytes) of the      00189700
*                                         Digital Certificate           00189800
*                                         generation PList       @L3A*/ 00189900
*                        2 * FIXED(32),/* alignment              @L3A*/ 00190000
*   2 PKIS64_GENC_CERTPL@    PTR(64),  /* Address of the Digital        00190100
*                                         Certificate generation        00190200
*                                         PList                  @L3A*/ 00190300
*   2 PKIS64_GENC_CERTID@    PTR(64);  /* Address of a 57-Byte area     00190400
*                                         that contains the Output      00190500
*                                         Certificate Request ID (the   00190600
*                                         first byte of this area       00190700
*                                         contains the length of the    00190800
*                                         Output Certificate Request    00190900
*                                         ID)                    @L3A*/ 00191000
*                                                                       00191100
*/*------------------------------------------------------------------*/ 00191200
*                                                                       00191300
* DECLARE                                                               00191400
*  1 PKIS64_CPL_ENTRY        BASED,    /* Certificate Request PList     00191500
*                                         entry (a single GENCERT       00191600
*                                         PList entry)           @L3A*/ 00191700
*   2 PKIS64_CPL_FIELD_NAME  CHAR(12), /* Certificate Request Field     00191800
*                                         Name                   @L3A*/ 00191900
*   2 PKIS64_CPL_FIELD_LEN   FIXED(32),/* Length (in bytes) of the      00192000
*                                         Request Field Name value      00192100
*                                                                @L3A*/ 00192200
*   2 PKIS64_CPL_FIELD_VALUE CHAR(*);  /* Request Field Name value      00192300
*                                                                @L3A*/ 00192400
*                                                                       00192500
*/*------------------------------------------------------------------*/ 00192600
*                                                                       00192700
* DECLARE                                                               00192800
*  1 PKIS64_ATTRIBUTES_MAP   BIT(32) BASED, /* Certificate Request      00192900
*                                            Attribute mapping   @L3A*/ 00193000
*     3 PKIS64_SYNCH_CREATE  Bit  (1), /* Synchronous generation        00193100
*                                         flag                   @L3A*/ 00193200
*     3 *                    Bit (31); /* Reserved               @L3A*/ 00193300
*                                                                       00193400
*/*------------------------------------------------------------------*/ 00193500
*                                                                       00193600
*/*------------------------------------------------------------------*/ 00193700
*                                                                       00193800
* DECLARE                                                               00193900
*  1 PKIS64_EXPORT_MAP       BASED,    /* Function Specific Parameter   00194000
*                                         List (FSPL) for EXPORT        00194100
*                                                                @L3A*/ 00194200
*   2 PKIS64_EXP_EYECATCH    CHAR(8),  /* Eyecatcher for the EXPORT     00194300
*                                         FSPL left-aligned blank       00194400
*                                         filled string containing      00194500
*                                         the text 'EXPORT '     @L3A*/ 00194600
*   2 PKIS64_EXP_CERTAN_LEN  FIXED(32),/* Length (in bytes) of the      00194700
*                                         pre-allocated Certificate     00194800
*                                         Anchor area            @L3A*/ 00194900
*                        2 * FIXED(32),/* alignment              @L3A*/ 00195000
*   2 PKIS64_EXP_CERTAN@     PTR(64),  /* Address of the pre-allocated  00195100
*                                         Certificate Anchor area       00195200
*                                                                @L3A*/ 00195300
*   2 PKIS64_EXP_CERTID@     PTR(64),  /* Address of a 57-byte area     00195400
*                                         that contains the Input       00195500
*                                         Certificate Request ID that   00195600
*                                         is used to locate the         00195700
*                                         Digital Certificate to be     00195800
*                                         EXPORTed (the first byte of   00195900
*                                         this area contains the        00196000
*                                         length of the Input           00196100
*                                         Certificate Request ID)       00196200
*                                                                @L3A*/ 00196300
*   2 PKIS64_EXP_KEYID@      PTR(64);  /* Address of a 41-byte area     00196400
*                                         that contains the KeyID-the   00196500
*                                         hash of the public key        00196600
*                                         generated by PKI Services.    00196700
*                                         The first byte of this area   00196800
*                                         contains the length of the    00196900
*                                         KeyId. This field is used to  00197000
*                                         export a recovery             00197100
*                                         certificate the only case     00197200
*                                         that the first byte is 40.    00197300
*                                         In all other cases, the       00197400
*                                         length byte should be 0.      00197500
*                                                                @L3A*/ 00197600
*                                                                       00197700
*/*------------------------------------------------------------------*/ 00197800
*                                                                       00197900
* DECLARE                                                               00198000
*  1 PKIS64_QUERYREQS_MAP    BASED,    /* Function Specific Parameter   00198100
*                                         List (FSPL) for QUERYREQS     00198200
*                                                                @L3A*/ 00198300
*   2 PKIS64_QRYR_EYECATCH   CHAR(8),  /* Eyecatcher for QUERYREQS      00198400
*                                         FSPL left-aligned blank       00198500
*                                         filled string containing      00198600
*                                         user specified text, for      00198700
*                                         example, 'QUERYRQS'    @L3A*/ 00198800
*   2 PKIS64_QRYR_RESULTL_LEN FIXED(32),/* Length (in bytes) of the     00198900
*                                          pre-allocated Results list   00199000
*                                          area                  @L3A*/ 00199100
*                        2 * FIXED(32),/* alignment              @L3A*/ 00199200
*   2 PKIS64_QRYR_RESULTL@   PTR(64),  /* Address of the pre-allocated  00199300
*                                         Results List area      @L3A*/ 00199400
*   2 PKIS64_QRYR_CERTID@    PTR(64),  /* Address of a 57-byte area     00199500
*                                         that contains the Input       00199600
*                                         Certificate Request ID that   00199700
*                                         is be used as a starting      00199800
*                                         point for this query. Only    00199900
*                                         Request IDs located after     00200000
*                                         this Cert ID is returned.     00200100
*                                         The first byte of area        00200200
*                                         contains the length of the    00200300
*                                         Input Certificate Request     00200400
*                                         ID.                    @L3A*/ 00200500
*   2 PKIS64_QRYR_NUMENTRIES FIXED(32),/* Value indicating the          00200600
*                                         maximum number of entries     00200700
*                                         to be returned in the         00200800
*                                         Results List area. Zero       00200900
*                                         indicates no limit     @L3A*/ 00201000
*   2 PKIS64_QRYR_CRIT_STATUS FIXED(32), /* Value indicating the        00201100
*                                         request status to use as      00201200
*                                         search criteria        @L3A*/ 00201300
*   2 PKIS64_QRYR_CRIT_DAYS  FIXED(31),/* Value indicating the recent   00201400
*                                         activity to use as            00201500
*                                         additional search criteria    00201600
*                                                                @L3A*/ 00201700
*                        2 * FIXED(32),/* alignment              @L3A*/ 00201800
*   2 PKIS64_QRYR_CRIT_NAME@ PTR(64);  /* Address of a 33-byte area     00201900
*                                         that contains the input       00202000
*                                         requestor's name to be used   00202100
*                                         as additional search          00202200
*                                         criteria. The first byte      00202300
*                                         of this area contains the     00202400
*                                         length of the input           00202500
*                                         requestor's name.      @L3A*/ 00202600
*                                                                       00202700
*/*------------------------------------------------------------------*/ 00202800
*                                                                       00202900
* DECLARE                                                               00203000
*  1 PKIS64_RESL_ENTRY       BASED,    /* Results List Entry for        00203100
*                                         QUERYREQS or QUERYCERTS (a    00203200
*                                         single entry )         @L3A*/ 00203300
*   2 PKIS64_RESL_ENTRY_LEN  FIXED(8), /* Length (in bytes) of the      00203400
*                                         Results List entry value      00203500
*                                                                @L3A*/ 00203600
*   2 PKIS64_RESL_ENTRY_VALUE CHAR(*); /* Results list entry value      00203700
*                                                                @L3A*/ 00203800
*                                                                       00203900
*/*------------------------------------------------------------------*/ 00204000
*                                                                       00204100
* DECLARE                                                               00204200
*  1 PKIS64_REQDETAILS_MAP   BASED,    /* Function Specific Parameter   00204300
*                                         List (FSPL) for REQDETAILS    00204400
*                                                                @L3A*/ 00204500
*   2 PKIS64_REQD_EYECATCH   CHAR(8),  /* Eyecatcher for REQDETAILS     00204600
*                                         FSPL left-aligned blank       00204700
*                                         filled string containing      00204800
*                                         user specified text, for      00204900
*                                         example, 'REQDTAIL'    @L3A*/ 00205000
*   2 PKIS64_REQD_SUML_LEN   FIXED(32),/* Length (in bytes) of the      00205100
*                                         pre-allocated Summary list    00205200
*                                         area                   @L3A*/ 00205300
*                        2 * FIXED(32),/* alignment              @L3A*/ 00205400
*   2 PKIS64_REQD_SUML@      PTR(64),  /* Address of the pre-allocated  00205500
*                                         Summary List area      @L3A*/ 00205600
*   2 PKIS64_REQD_CERTPL_LEN FIXED(32),/* Length (in bytes) of the      00205700
*                                         Digital Certificate           00205800
*                                         generation type PLIST area    00205900
*                                                                @L3A*/ 00206000
*                        2 * FIXED(32),/* alignment              @L3A*/ 00206100
*   2 PKIS64_REQD_CERTPL@    PTR(64),  /* Address of the pre-allocated  00206200
*                                         Digital Certificate           00206300
*                                         generation type PList         00206400
*                                         details area           @L3A*/ 00206500
*   2 PKIS64_REQD_CERTID@    PTR(64);  /* Address of a 57-byte area     00206600
*                                         that contains the Input       00206700
*                                         Certificate Request ID from   00206800
*                                         which to extract the data     00206900
*                                         (the first byte of this area  00207000
*                                         contains the length of the    00207100
*                                         Input Certificate Request     00207200
*                                         ID)                    @L3A*/ 00207300
*                                                                       00207400
*/*------------------------------------------------------------------*/ 00207500
*                                                                       00207600
* DECLARE                                                               00207700
*  1 PKIS64_SUML_ENTRY       BASED,    /* Summary List Entry for        00207800
*                                         REQDETAILS CERTDETAILS,       00207900
*                                         or VERIFY ( a single entry )  00208000
*                                                                @L3A*/ 00208100
*   2 PKIS64_SUML_ENTRY_LEN  FIXED(8), /* Length (in bytes) of the      00208200
*                                         Summary List entry value      00208300
*                                                                @L3A*/ 00208400
*   2 PKIS64_SUML_ENTRY_VALUE CHAR(*); /* Summary list entry value      00208500
*                                                                @L3A*/ 00208600
*                                                                       00208700
*/*------------------------------------------------------------------*/ 00208800
*                                                                       00208900
* DECLARE                                                               00209000
*  1 PKIS64_MODIFYREQS_MAP   BASED,    /* Function Specific Parameter   00209100
*                                         List (FSPL) for MODIFYREQS    00209200
*                                                                @L3A*/ 00209300
*   2 PKIS64_MODR_EYECATCH   CHAR(8),  /* Eyecatcher for MODIFYREQS     00209400
*                                         FSPL left-aligned blank       00209500
*                                         filled string containing      00209600
*                                         user specified text, for      00209700
*                                         example, 'MODREQS'     @L3A*/ 00209800
*   2 PKIS64_MODR_ACTION     FIXED(32),/* 4 byte binary value           00209900
*                                         indicating the action to      00210000
*                                         be taken against the          00210100
*                                         certificates requests  @L3A*/ 00210200
*                        2 * FIXED(32),/* alignment              @L3A*/ 00210300
*   2 PKIS64_MODR_COMMENT@   PTR(64),  /* Address of a 65-byte area     00210400
*                                         that contains the comment     00210500
*                                         data associated with this     00210600
*                                         action. The first byte of     00210700
*                                         this area contains the        00210800
*                                         length of the actual          00210900
*                                         comment. If the length is     00211000
*                                         x'00' then no comment is be   00211100
*                                         recorded.              @L3A*/ 00211200
*   2 PKIS64_MODR_CERTIDL_LEN FIXED(32),/* Length (in bytes) of the     00211300
*                                          Certificate Request id list  00211400
*                                          on input              @L3A*/ 00211500
*                        2 * FIXED(32),/* alignment              @L3A*/ 00211600
*   2 PKIS64_MODR_CERTIDL@   PTR(64),  /* Address of the area           00211700
*                                         containing 1 or more          00211800
*                                         certificate request ids that  00211900
*                                         are to be modified by this    00212000
*                                         request                @L3A*/ 00212100
*   2 PKIS64_MODR_CERTPL_LEN FIXED(32),/* Length (in bytes) of the      00212200
*                                         Certificate modification      00212300
*                                         plist area             @L3A*/ 00212400
*                        2 * FIXED(32),/*  alignment             @L3A*/ 00212500
*   2 PKIS64_MODR_CERTPL@    PTR(64),  /* Address of the area which is  00212600
*                                         the Certificate modification  00212700
*                                         plist                  @L3A*/ 00212800
*   2 PKIS64_MODR_ERRL_LEN   FIXED(32),/* Length (in bytes) of the      00212900
*                                         error list area        @L3A*/ 00213000
*                        2 * FIXED(32),/* alignment              @L3A*/ 00213100
*   2 PKIS64_MODR_ERRL@      PTR(64),  /* Address of the area which     00213200
*                                         is the error list      @L3A*/ 00213300
*   2 PKIS64_MODR_TSTAMP@    PTR(64);  /* Address of a 20-byte area     00213400
*                                         that can contain a timestamp  00213500
*                                         in 'YYYY/MM/DD HH:MM:SS'      00213600
*                                         format. The first byte of     00213700
*                                         this area contains the        00213800
*                                         length of the time stamp. If  00213900
*                                         the length is x'00' then no   00214000
*                                         time stamp is provided.       00214100
*                                         Acceptable lengths are '00'x  00214200
*                                         and '13'x only.        @L3A*/ 00214300
*                                                                       00214400
*/*------------------------------------------------------------------*/ 00214500
*                                                                       00214600
* DECLARE                                                               00214700
*  1 PKIS64_QUERYCERTS_MAP   BASED,    /* Function Specific Parameter   00214800
*                                         List (FSPL) for QUERYCERTS    00214900
*                                                                @L3A*/ 00215000
*   2 PKIS64_QRYC_EYECATCH   CHAR(8),  /* Eyecatcher for QUERYREQS      00215100
*                                         FSPL left-aligned blank       00215200
*                                         filled string containing      00215300
*                                         user specified text, for      00215400
*                                         example,'QUERYCTS'     @L3A*/ 00215500
*   2 PKIS64_QRYC_RESULTL_LEN FIXED(32),/* Length (in bytes) of the     00215600
*                                          pre-allocated Results list   00215700
*                                          area                  @L3A*/ 00215800
*                        2 * FIXED(32),/* alignment              @L3A*/ 00215900
*   2 PKIS64_QRYC_RESULTL@   PTR(64),  /* Address of the pre-allocated  00216000
*                                         Results List area      @L3A*/ 00216100
*   2 PKIS64_QRYC_SERIALNUM@ PTR(64),  /* Address of a 17-byte area     00216200
*                                         that contains the Input       00216300
*                                         Certificate Serial Number     00216400
*                                         that is used as a starting    00216500
*                                         point for this query. Only    00216600
*                                         Certificates located after    00216700
*                                         this serial number is         00216800
*                                         returned. The first byte of   00216900
*                                         area contains the length of   00217000
*                                         the Input Certificate Serial  00217100
*                                         Number                 @L3A*/ 00217200
*   2 PKIS64_QRYC_NUMENTRIES FIXED(32),/* Value indicating the maximum  00217300
*                                         number of entries to be       00217400
*                                         returned in the Results       00217500
*                                         List area. Zero indicates     00217600
*                                         no limit               @L3A*/ 00217700
*   2 PKIS64_QRYC_CRIT_STATUS FIXED(32),/* Value indicating the request 00217800
*                                          status to use as search      00217900
*                                          criteria              @L3A*/ 00218000
*   2 PKIS64_QRYC_CRIT_DAYS  FIXED(31),/* Value indicating the recent   00218100
*                                         activity to use as            00218200
*                                         additional search criteria    00218300
*                                                                @L3A*/ 00218400
*                        2 * FIXED(32),/* alignment              @L3A*/ 00218500
*   2 PKIS64_QRYC_CRIT_NAME@ PTR(64);  /* Address of a 33-byte area     00218600
*                                         that contains the input       00218700
*                                         requestor's name to be used   00218800
*                                         as additional search          00218900
*                                         criteria. The first byte of   00219000
*                                         this area contains the        00219100
*                                         length of the input           00219200
*                                         requestor's name       @L3A*/ 00219300
*                                                                       00219400
*/*------------------------------------------------------------------*/ 00219500
*                                                                       00219600
* DECLARE                                                               00219700
*  1 PKIS64_CERTDETAILS_MAP  BASED,    /* Function Specific Parameter   00219800
*                                         List (FSPL) for CERTDETAILS   00219900
*                                                                @L3A*/ 00220000
*   2 PKIS64_CRTD_EYECATCH   CHAR(8),  /* Eyecatcher for REQDETAILS     00220100
*                                         FSPL left-aligned blank       00220200
*                                         filled string containing      00220300
*                                         user specified text, for      00220400
*                                         example, 'CRTDETLS'    @L3A*/ 00220500
*   2 PKIS64_CRTD_SUML_LEN   FIXED(32),/* Length (in bytes) of the      00220600
*                                         pre-allocated Summary list    00220700
*                                         area                   @L3A*/ 00220800
*                        2 * FIXED(32),/* alignment              @L3A*/ 00220900
*   2 PKIS64_CRTD_SUML@      PTR(64),  /* Length (in bytes) of the      00221000
*                                         pre-allocated Summary list    00221100
*                                         area                   @L3A*/ 00221200
*   2 PKIS64_CRTD_CERTPL_LEN FIXED(32),/* Length (in bytes) of the      00221300
*                                         Digital Certificate           00221400
*                                         generation type PLIST area    00221500
*                                                                @L3A*/ 00221600
*                        2 * FIXED(32),/* alignment              @L3A*/ 00221700
*   2 PKIS64_CRTD_CERTPL@    PTR(64),  /* Address of the pre-allocated  00221800
*                                         Digital Certificate           00221900
*                                         generation type PList         00222000
*                                         details area           @L3A*/ 00222100
*   2 PKIS64_CRTD_SERIALNUM@ PTR(64); /* Address of an Input            00222200
*                                        Certificate Serial Number or   00222300
*                                        an Input Certificate           00222400
*                                        Fingerprint for which the      00222500
*                                        details will be extracted.     00222600
*                                        + When referencing an Input    00222700
*                                          Certificate Serial Number,   00222800
*                                          this value is the address    00222900
*                                          of a 17-Byte area, the       00223000
*                                          first byte containing the    00223100
*                                          length of the Certificate    00223200
*                                          Serial Number.               00223300
*                                        + When referencing an Input    00223400
*                                          Certificate Fingerprint,     00223500
*                                          this value is one of two     00223600
*                                          acceptable values:           00223700
*                                          - The address of a 65-Byte   00223800
*                                            area, the first byte       00223900
*                                            containing the length of   00224000
*                                            the Certificate            00224100
*                                            Fingerprint, whose value   00224200
*                                            contains no embedded       00224300
*                                            separator characters,      00224400
*                                          OR                           00224500
*                                          - The address of a 96-Byte   00224600
*                                            area, the first byte       00224700
*                                            containing the length of   00224800
*                                            the Certificate            00224900
*                                            Fingerprint, whose value   00225000
*                                            is expected to contain     00225100
*                                            embedded separator         00225200
*                                            characters of ':' or ' '.  00225300
*                                                                @LAC*/ 00225400
*                                                                       00225500
*/*------------------------------------------------------------------*/ 00225600
*                                                                       00225700
* DECLARE                                                               00225800
*  1 PKIS64_MODIFYCERTS_MAP  BASED,    /* Function Specific Parameter   00225900
*                                         List (FSPL) for MODIFYCERTS   00226000
*                                                                @L3A*/ 00226100
*   2 PKIS64_MODC_EYECATCH   CHAR(8),  /* Eyecatcher for MODIFYCERTS    00226200
*                                         FSPL left-aligned blank       00226300
*                                         filled string containing      00226400
*                                         user specified text, for      00226500
*                                         example, 'MODCERTS'    @L3A*/ 00226600
*   2 PKIS64_MODC_ACTION     FIXED(32),/* 4 byte binary value           00226700
*                                         indicating the action to      00226800
*                                         be taken against the          00226900
*                                         certificates identified by    00227000
*                                         the serial number list        00227100
*                                                                @L3A*/ 00227200
*                        2 * FIXED(32),/* alignment              @L3A*/ 00227300
*   2 PKIS64_MODC_COMMENT@   PTR(64),  /* Address of a 65-byte area     00227400
*                                         that contains the comment     00227500
*                                         data associated with this     00227600
*                                         action. The first byte of     00227700
*                                         this area contains the        00227800
*                                         length of the actual          00227900
*                                         comment. If the length is     00228000
*                                         x'00' then no comment is      00228100
*                                         be recorded            @L3A*/ 00228200
*   2 PKIS64_MODC_SERIALNUMSL_LEN FIXED(32), /* Length (in bytes) of    00228300
*                                               the Serial Numbers      00228400
*                                               list on input.   @L3A*/ 00228500
*                        2 * FIXED(32),/* alignment              @L3A*/ 00228600
*   2 PKIS64_MODC_SERIALNUMSL@ PTR(64),/* Address of the area           00228700
*                                         containing 1 or more Serial   00228800
*                                         Numbers of certificates that  00228900
*                                         are to be modified by this    00229000
*                                         request.               @L3A*/ 00229100
*   2 PKIS64_MODC_REASON     FIXED(32),/* 4 byte binary value           00229200
*                                         indicating the reason for     00229300
*                                         certificate revocation        00229400
*                                                                @L3A*/ 00229500
*                        2 * FIXED(32),/* alignment              @L3A*/ 00229600
*   2 PKIS64_MODC_REQUESTOREMAIL@ PTR(64), /* Address of a 33-byte      00229700
*                                         area that contains the        00229800
*                                         new email address of the      00229900
*                                         requestor. The first          00230000
*                                         byte of this area             00230100
*                                         contains the length of        00230200
*                                         the email address. @L3A*/     00230300
*   2 PKIS64_MODC_ERRL_LEN   FIXED(32),/* Length (in bytes) of the      00230400
*                                         error list area        @L3A*/ 00230500
*   2 * FIXED,                         /* alignment              @L3A*/ 00230600
*   2 PKIS64_MODC_ERRL@      PTR(64);  /* Address of the area which     00230700
*                                         is the error list      @L3A*/ 00230800
*                                                                       00230900
*/*------------------------------------------------------------------*/ 00231000
*                                                                       00231100
* DECLARE                                                               00231200
*  1 PKIS64_SNID_ENTRY       BASED,    /* Certificate ID or Serial      00231300
*                                         Number ( a single entry )     00231400
*                                                                @L3A*/ 00231500
*   2 PKIS64_SNID_ENTRY_LEN  FIXED(8), /* Length (in bytes) of the      00231600
*                                         Cert ID or Serial Number      00231700
*                                         entry value            @L3A*/ 00231800
*   2 PKIS64_SNID_ENTRY_VALUE CHAR(*); /* Cert ID or Serial Number      00231900
*                                         entry value            @L3A*/ 00232000
*                                                                       00232100
*/*------------------------------------------------------------------*/ 00232200
*                                                                       00232300
* DECLARE                                                               00232400
*  1 PKIS64_QRECOVER_MAP     BASED,    /* Mapping for QRECOVER          00232500
*                                         function specific parameter   00232600
*                                         list                   @L3A*/ 00232700
*   2 PKIS64_QREC_EYECATCH   CHAR(8),  /* Eyecatcher, 8 characters      00232800
*                                         left-aligned blank filled.    00232900
*                                         Actual value set by invoker,  00233000
*                                         for example, 'QRECOVER'@L3A*/ 00233100
*   2 PKIS64_QREC_RESULTL_LEN FIXED(32),/* Length (in bytes) of the     00233200
*                                          pre-allocated Results List   00233300
*                                          area                  @L3A*/ 00233400
*                        2 * FIXED(32),/* alignment              @L3A*/ 00233500
*   2 PKIS64_QREC_RESULTL@   PTR(64),  /* Address of the pre-allocated  00233600
*                                         Results List area      @L3A*/ 00233700
*   2 PKIS64_QREC_NUMENTRIES FIXED(32),/* Value indicating the          00233800
*                                         maximum number of entries     00233900
*                                         to be returned in the         00234000
*                                         Results List area. Zero       00234100
*                                         indicates no limit     @L3A*/ 00234200
*                        2 * FIXED(32),/* alignment              @L3A*/ 00234300
*   2 PKIS64_QREC_CRIT_EMAIL@ PTR(64), /* Address of a 33-byte area     00234400
*                                         that contains the input       00234500
*                                         requestor's email address     00234600
*                                         as search criteria     @L3A*/ 00234700
*   2 PKIS64_QREC_CRIT_PASS@ PTR(64);  /* Address of a 33-byte area     00234800
*                                         that contains the input       00234900
*                                         passphrase as search          00235000
*                                         criteria               @L3A*/ 00235100
*/*------------------------------------------------------------------*/ 00235200
*                                                                       00235300
* DECLARE                                                               00235400
*  1 PKIS64_VERIFY_MAP       BASED,    /* Function Specific Parameter   00235500
*                                         List (FSPL) for VERIFY @L3A*/ 00235600
*   2 PKIS64_VERF_EYECATCH   CHAR(8),  /* Eyecatcher for VERIFY FSPL    00235700
*                                         left-aligned blank filled     00235800
*                                         string containing user        00235900
*                                         specified text, for example,  00236000
*                                         'VERIFY '              @L3A*/ 00236100
*   2 PKIS64_VERF_SUML_LEN   FIXED(32),/* Length (in bytes) of the      00236200
*                                         pre-allocated Summary list    00236300
*                                         area                   @L3A*/ 00236400
*                        2 * FIXED(32),/* alignment              @L3A*/ 00236500
*   2 PKIS64_VERF_SUML@      PTR(64),  /* Address of the pre-allocated  00236600
*                                         Summary List area      @L3A*/ 00236700
*   2 PKIS64_VERF_CERTPL_LEN FIXED(32),/* Length (in bytes) of the      00236800
*                                         Digital Certificate           00236900
*                                         generation type PLIST area    00237000
*                                                                @L3A*/ 00237100
*                        2 * FIXED(32),/* alignment              @L3A*/ 00237200
*   2 PKIS64_VERF_CERTPL@    PTR(64),  /* Address of the pre-allocated  00237300
*                                         Digital Certificate           00237400
*                                         generation type PList         00237500
*                                         details area           @L3A*/ 00237600
*   2 PKIS64_VERF_CERT_LEN   FIXED(32),/* Length (in bytes) of the      00237700
*                                         Cert area containing the      00237800
*                                         certificate to verify  @L3A*/ 00237900
*                        2 * FIXED(32),/* alignment              @L3A*/ 00238000
*   2 PKIS64_VERF_CERT@      PTR(64);  /* Address of the area           00238100
*                                         containing the Certificate    00238200
*                                         to verify              @L3A*/ 00238300
*                                                                       00238400
*/*------------------------------------------------------------------*/ 00238500
*                                                                       00238600
* DECLARE                                                               00238700
*  1 PKIS64_REVOKE_MAP       BASED,    /* Function Specific Parameter   00238800
*                                         List (FSPL) for REVOKE        00238900
*                                                                @L3A*/ 00239000
*   2 PKIS64_REVK_EYECATCH   CHAR(8),  /* Eyecatcher for REVOKE FSPL    00239100
*                                         left-aligned blank filled     00239200
*                                         string containing user        00239300
*                                         specified text, for example,  00239400
*                                         'REVOKE '              @L3A*/ 00239500
*   2 PKIS64_REVK_REASON     FIXED(32),/* 4 byte binary value           00239600
*                                         indicating the reason         00239700
*                                         for the certificate           00239800
*                                         revocation             @L3A*/ 00239900
*                        2 * FIXED(32),/* alignment              @L3A*/ 00240000
*   2 PKIS64_REVK_SERIALNUM@ PTR(64);  /* Address of a 17-byte area     00240100
*                                         that contains the Input       00240200
*                                         Certificate Serial Number     00240300
*                                         to be revoked. The first      00240400
*                                         byte of this area contains    00240500
*                                         the length of the Input       00240600
*                                         Certificate Serial Number.    00240700
*                                                                @L3A*/ 00240800
*                                                                       00240900
*/*------------------------------------------------------------------*/ 00241000
*                                                                       00241100
* DECLARE                                                               00241200
*  1 PKIS64_RENEW_MAP        BASED,    /* Function Specific Parameter   00241300
*                                         List (FSPL) for GENRENEW      00241400
*                                         and REQRENEW           @L3A*/ 00241500
*   2 PKIS64_RENW_EYECATCH   CHAR(8),  /* Eyecatcher for the GENRENEW   00241600
*                                         FSPL and the REQRENEW FSPL    00241700
*                                         left-aligned blank filled     00241800
*                                         string containing the text    00241900
*                                          'RENEW '              @L3A*/ 00242000
*   2 PKIS64_RENW_CERTPL_LEN FIXED(32),/* Length (in bytes) of the      00242100
*                                         Digital Certificate           00242200
*                                         generation PList       @L3A*/ 00242300
*                        2 * FIXED(32),/* alignment              @L3A*/ 00242400
*   2 PKIS64_RENW_CERTPL@    PTR(64),  /* Address of the Digital        00242500
*                                         Certificate generation        00242600
*                                         PList                  @L3A*/ 00242700
*   2 PKIS64_RENW_CERTID@    PTR(64),  /* Address of a 57-byte area     00242800
*                                         that contains the Output      00242900
*                                         Certificate Request ID (the   00243000
*                                         first byte of this area       00243100
*                                         contains the length of the    00243200
*                                         Output Certificate Request    00243300
*                                         ID)                    @L3A*/ 00243400
*   2 PKIS64_RENW_SERIALNUM@ PTR(64);  /* Address of a 17-byte area     00243500
*                                         that contains the input       00243600
*                                         Certificate Serial Number     00243700
*                                         to be renewed. The first      00243800
*                                         byte of this area contains    00243900
*                                         the length of the Input       00244000
*                                         Certificate Serial Number     00244100
*                                                                @L3A*/ 00244200
*                                                                       00244300
*/*------------------------------------------------------------------*/ 00244400
*                                                                       00244500
* DECLARE                                                               00244600
*  1 PKIS64_RESPOND_MAP      BASED,    /* Mapping for RESPOND function  00244700
*                                         specific parameter list       00244800
*                                                                @L3A*/ 00244900
*   2 PKIS64_RESP_EYECATCH   CHAR(8),  /* Eyecatcher, 8 characters      00245000
*                                         left-aligned blank filled.    00245100
*                                         Actual value set by invoker,  00245200
*                                         for example, 'RESPOND'        00245300
*                                                                @L3A*/ 00245400
*   2 PKIS64_RESP_RESPONSE_LEN  FIXED(32), /* 4 byte area which is the  00245500
*                                         length of the pre-allocated   00245600
*                                         storage of the response       00245700
*                                         area on input to RESPOND      00245800
*                                                                @L3A*/ 00245900
*                        2 * FIXED(32),/* alignment              @L3A*/ 00246000
*   2 PKIS64_RESP_RESPONSE@  PTR(64),  /* The address of the            00246100
*                                         storage area in which the     00246200
*                                         R_PKIServ service stores      00246300
*                                         the results of the            00246400
*                                         RESPOND if the service        00246500
*                                         was able to successfully      00246600
*                                         retrieve the data      @L3A*/ 00246700
*   2 PKIS64_RESP_REQUEST_LEN   FIXED(32), /* Address of a 57-byte area 00246800
*                                         that contains the Output      00246900
*                                         Certificate Request ID        00247000
*                                         (the first byte of this area  00247100
*                                         contains the length of the    00247200
*                                         Output Certificate Request    00247300
*                                         ID)Length of the Request      00247400
*                                         area containing the request   00247500
*                                         to verify              @L3A*/ 00247600
*                        2 * FIXED(32),/* alignment              @L3A*/ 00247700
*   2 PKIS64_RESP_REQUEST@   PTR(64);  /* Pointer to the area           00247800
*                                         containing the request to     00247900
*                                         verify                 @L3A*/ 00248000
*                                                                       00248100
*                                                                       00248200
*/*------------------------------------------------------------------*/ 00248300
*                                                                       00248400
* DECLARE                                                               00248500
*  1 PKIS64_SCEPREQ_MAP      BASED,    /* Mapping for SCEPREQ function  00248600
*                                         specific parameter list       00248700
*                                                                @L3A*/ 00248800
*   2 PKIS64_SCEP_EYECATCH   CHAR(8),  /* Eyecatcher, 8 characters      00248900
*                                         left-aligned blank filled.    00249000
*                                         Actual value set by invoker,  00249100
*                                         for example, 'SCEPREQ'        00249200
*                                                                @L3A*/ 00249300
*   2 PKIS64_SCEP_RESPONSE_LEN  FIXED(32), /* 4 byte area which is the  00249400
*                                         length of the pre-allocated   00249500
*                                         storage of the response       00249600
*                                         area on input to SCEPREQ      00249700
*                                                                @L3A*/ 00249800
*                        2 * FIXED(32),/* alignment              @L3A*/ 00249900
*   2 PKIS64_SCEP_RESPONSE@  PTR(64),  /* The address of the            00250000
*                                         storage area in which the     00250100
*                                         R_PKIServ service stores      00250200
*                                         the results of the SCEPREQ    00250300
*                                         if the service was able       00250400
*                                         to successfully retrieve      00250500
*                                         the data               @L3A*/ 00250600
*   2 PKIS64_SCEP_REQUEST_LEN  FIXED(32), /* Length of the Request      00250700
*                                         area containing the request   00250800
*                                         to process             @L3A*/ 00250900
*                        2 * FIXED(32),/* alignment              @L3A*/ 00251000
*   2 PKIS64_SCEP_REQUEST@   PTR(64);  /* Pointer to the area           00251100
*                                         containing the request to     00251200
*                                         process                @L3A*/ 00251300
*                                                                       00251400
*/*------------------------------------------------------------------*/ 00251500
*                                                                       00251600
* DECLARE                                                               00251700
*  1 PKIS64_PREREG_MAP       BASED,    /* Mapping for PREREGISTER       00251800
*                                         function specific parameter   00251900
*                                         list                   @L3A*/ 00252000
*   2 PKIS64_PREG_EYECATCH   CHAR(8),  /* Eyecatcher, 8 characters      00252100
*                                         left-aligned blank filled     00252200
*                                         Actual value set by invoker,  00252300
*                                         for example, 'PREREG'  @L3A*/ 00252400
*   2 PKIS64_PREG_CERTPL_LEN FIXED(32),/* Length in bytes of the        00252500
*                                         preregistration plist         00252600
*                                                                @L3A*/ 00252700
*                        2 * FIXED(32),/* alignment              @L3A*/ 00252800
*   2 PKIS64_PREG_CERTPL@    PTR(64),  /* The address of the            00252900
*                                         preregistration plist         00253000
*                                                                @L3A*/ 00253100
*   2 PKIS64_PREG_CERTID@    PTR(64);  /* Address of a 57 byte area     00253200
*                                         in which the first byte       00253300
*                                         contains the actual length    00253400
*                                         on return of the              00253500
*                                         certificate request ID @L3A*/ 00253600
*                                                                       00253700
*/********************************************************************/ 00253800
*/*                SMOP64 sub-declares                               */ 00253900
*/********************************************************************/ 00254000
*                                                                       00254100
* DECLARE                                                               00254200
*  SMOP64_LEN FIXED(31) CONSTANT(LENGTH(SMOP64)); /* SMOP64      @L5A*/ 00254300
*                                                                       00254400
*/********************************************************************/ 00254500
*/*                FACT64 sub-declares                               */ 00254600
*/********************************************************************/ 00254700
*                                                                       00254800
* DECLARE                                                               00254900
*  FACT_LEN FIXED(31) CONSTANT(LENGTH(FACT)); ] FACT length        @L6A 00255000
*                                                                       00255100
*/********************************************************************/ 00255200
*/* Constant values for function code pointed to by FACT_FUNC@.  @L6A*/ 00255300
*/********************************************************************/ 00255400
* ] Get general factor data                                             00255500
* DECLARE FACT_FUNC_GET_FACTOR   Fixed(16) constant(1);          ] @L6A 00255600
*                                                                       00255700
* ] Set general factor data                                             00255800
* DECLARE FACT_FUNC_SET_FACTOR   Fixed(16) constant(2);          ] @L6A 00255900
*                                                                       00256000
* ] Get user factor data                                                00256100
* DECLARE FACT_FUNC_GET_UFACTOR  Fixed(16) constant(3);          ] @L6A 00256200
*                                                                       00256300
* ] Set user factor data                                                00256400
* DECLARE FACT_FUNC_SET_UFACTOR  Fixed(16) constant(4);          ] @L6A 00256500
*                                                                       00256600
* ] Get policy data                                                     00256700
* DECLARE FACT_FUNC_GET_POLICY   Fixed(16) constant(5);          ] @L7A 00256800
*                                                                       00256900
* ] Get cached token credential                                         00257000
* DECLARE FACT_FUNC_GET_CTC      Fixed(16) constant(6);          ] @L8A 00257100
*                                                                       00257200
*                                                                       00257300
*/********************************************************************/ 00257400
*/*  Function-specific parameter lists                           @L6A*/ 00257500
*/********************************************************************/ 00257600
*                                                                       00257700
*/********************************************************************/ 00257800
*/*  Function code 1: Get general factor data                    @L6A*/ 00257900
*/********************************************************************/ 00258000
* DECLARE                                                               00258100
*  1 FACT_GETF_PLIST        Based,      ]                          @L6A 00258200
*   3 FACT_GETF_OPTIONS       Fixed(32),] (INPUT)                  @L6A 00258300
*                                       ]   Reserved               @L6A 00258400
*   3 FACT_GETF_FACTOR_LENGTH Fixed(32),] (INPUT)                       00258500
*                                       ]   Length of factor name  @L6A 00258600
*   3 FACT_GETF_FACTOR@       Ptr(64),  ] (INPUT)                       00258700
*                                       ]   Address of factor name @L6A 00258800
*   3 *                       Fixed(32),] (INPUT)                       00258900
*                                       ]   Reserved               @L6A 00259000
*   3 FACT_GETF_AF_LENGTH     Fixed(32),] (INPUT/OUTPUT)                00259100
*                                       ]   Length of data area    @L6A 00259200
*   3 FACT_GETF_AF@           Ptr(64);  ] (INPUT)                       00259300
*                                       ]   Address of data area   @L6A 00259400
*                                       ]                               00259500
*/********************************************************************/ 00259600
*/*  Function code 2: Set general factor data                    @L6A*/ 00259700
*/********************************************************************/ 00259800
* DECLARE                                                               00259900
*  1 FACT_SETF_PLIST        Based,      ]                          @L6A 00260000
*   3 FACT_SETF_OPTIONS       Fixed(32),] (INPUT)                  @L6A 00260100
*                                       ]   Reserved               @L6A 00260200
*   3 FACT_SETF_FACTOR_LENGTH Fixed(32),] (INPUT)                       00260300
*                                       ]   Length of factor name  @L6A 00260400
*   3 FACT_SETF_FACTOR@       Ptr(64),  ] (INPUT)                       00260500
*                                       ]   Address of factor name @L6A 00260600
*   3 *                       Fixed(32),] (INPUT)                       00260700
*                                       ]   Reserved               @L6A 00260800
*   3 FACT_SETF_AF_LENGTH     Fixed(32),] (INPUT)                       00260900
*                                       ]   Length of data area    @L6A 00261000
*   3 FACT_SETF_AF@           Ptr(64);  ] (INPUT)                       00261100
*                                       ]   Address of data area   @L6A 00261200
*                                       ]                               00261300
*/********************************************************************/ 00261400
*/*  Function code 3: Get user factor data                       @L6A*/ 00261500
*/********************************************************************/ 00261600
* DECLARE                                                               00261700
*  1 FACT_GETU_PLIST          Based,    ] Original parm list       @L7C 00261800
*   3 FACT_GETU_OPTIONS       Fixed(32),] (INPUT)                       00261900
*    5 FACT_GETU_OPT_POLICY   Bit(1),   ]   b'1' - include policy  @L7A 00262000
*                                       ]          information     @L7A 00262100
*    5 *                      Bit(31),  ]   Reserved               @L7C 00262200
*   3 FACT_GETU_UF_COUNT      Fixed(32),] (OUTPUT)                      00262300
*                                       ]   Number of user factors @L6A 00262400
*   3 *                       Fixed(32),] (INPUT)                       00262500
*                                       ]   Reserved               @L6A 00262600
*   3 FACT_GETU_UF_LENGTH     Fixed(32),] (INPUT/OUTPUT)                00262700
*                                       ]   Length of user factor       00262800
*                                       ]   & policy area          @L7C 00262900
*   3 FACT_GETU_UF@           Ptr(64),  ] (INPUT)                       00263000
*                                       ]   Address of user factor      00263100
*                                       ]   & policy area          @L7C 00263200
*   3 FACT_GETU_USER_LENGTH   Fixed(8), ] (INPUT)                       00263300
*                                       ]   Length of user ID      @L6A 00263400
*   3 FACT_GETU_USER          Char(8),  ] (INPUT)                       00263500
*                                       ]   User ID                @L6A 00263600
*   3 FACT_GETU_FALL_BACK     Fixed(8); ] (OUTPUT)                      00263700
*                                       ]   Fall back to password       00263800
*                                       ]   x'01' Enabled               00263900
*                                       ]   x'02' Disabled         @L6A 00264000
* DECLARE                                                               00264100
*  1 FACT_GETU_PLIST1                   ] Extended parm list 1     @L7A 00264200
*         Based(addr(FACT_GETU_PLIST)), ]                          @L7A 00264300
*   2 *             Char(FACT_GETU_LEN),] PLIST space                   00264400
*   2 FACT_GETU_EXT1,                   ] Extension area           @L7A 00264500
*    3 *                      Char(14), ] (INPUT/OUTPUT)                00264600
*                                       ]   Reserved               @L7A 00264700
*    3 FACT_GETU_POL_COUNT    Bdy(byte) ]                               00264800
*                             Fixed(32),] (OUTPUT)                      00264900
*                                       ]   Number of policies     @L7A 00265000
*    3 FACT_GETU_POL_OFFSET   Bdy(byte) ]                               00265100
*                             Fixed(32);] (OUTPUT)                      00265200
*                                       ]   Offset to policy list  @L7A 00265300
*                                       ]                               00265400
* DECLARE                               ]                               00265500
*  FACT_GETU_LEN  FIXED(31) CONSTANT(   ] Length of original            00265600
*      LENGTH(FACT_GETU_PLIST));        ]  parameter list          @L7A 00265700
*                                       ]                               00265800
* DECLARE                               ]                               00265900
*  FACT_GETU_LEN1 FIXED(31) CONSTANT(   ] Length of parameter list      00266000
*      LENGTH(FACT_GETU_PLIST1));       ]  with first extension    @L7A 00266100
*                                       ]                               00266200
*/********************************************************************/ 00266300
*/*  Function code 4: Set user factor data                       @L6A*/ 00266400
*/********************************************************************/ 00266500
* DECLARE                                                               00266600
*  1 FACT_SETU_PLIST        Based,      ]                          @L6A 00266700
*   3 FACT_SETU_OPTIONS       Fixed(32),] (INPUT)                       00266800
*                                       ]   Reserved               @L6A 00266900
*   3 FACT_SETU_UF_COUNT      Fixed(32),] (INPUT)                       00267000
*                                       ]   Number of user factors @L6A 00267100
*   3 *                       Fixed(32),] (INPUT)                       00267200
*                                       ]   Reserved               @L6A 00267300
*   3 FACT_SETU_UF_LENGTH     Fixed(32),] (INPUT)                       00267400
*                                       ]   Length of user factor       00267500
*                                       ]   area                   @L6A 00267600
*   3 FACT_SETU_UF@           Ptr(64),  ] (INPUT)                       00267700
*                                       ]   Address of user factor      00267800
*                                       ]   area                   @L6A 00267900
*   3 FACT_SETU_USER_LENGTH   Fixed(8), ] (INPUT)                       00268000
*                                       ]   Length of user ID      @L6A 00268100
*   3 FACT_SETU_USER          Char(8),  ] (INPUT)                       00268200
*                                       ]   User ID                @L6A 00268300
*   3 FACT_SETU_FALL_BACK     Fixed(8); ] (INPUT)                       00268400
*                                       ]   Fall back to password       00268500
*                                       ]   x'00' No change        @L6A 00268600
*                                       ]                               00268700
*/********************************************************************/ 00268800
*/*  Function code 5: Get policy data                            @L7A*/ 00268900
*/********************************************************************/ 00269000
* DECLARE                                                               00269100
*  1 FACT_GETP_PLIST      Based,        ]                          @L7A 00269200
*   3 FACT_GETP_OPTIONS       Fixed(32),] (INPUT)                       00269300
*                                       ]   Reserved               @L7A 00269400
*   3 FACT_GETP_POLICY_LENGTH Fixed(32),] (INPUT)                       00269500
*                                       ]   Length of policy name       00269600
*                                       ]                          @L7A 00269700
*   3 FACT_GETP_POLICY@       Ptr(64),  ] (INPUT)                       00269800
*                                       ]   Address of policy name      00269900
*                                       ]                          @L7A 00270000
*   3 FACT_GETP_FL_COUNT      Fixed(32),] (OUTPUT)                      00270100
*                                       ]   Number of factors in        00270200
*                                       ]     list                 @L7A 00270300
*   3 FACT_GETP_PA_LENGTH     Fixed(32),] (INPUT/OUTPUT)                00270400
*                                       ]   Length of policy            00270500
*                                       ]     area                 @L7A 00270600
*   3 FACT_GETP_PA@           Ptr(64),  ] (INPUT)                       00270700
*                                       ]   Address of policy           00270800
*                                       ]     area                 @L7A 00270900
*   3 FACT_GETP_TIMEOUT       Fixed(32),] (OUTPUT)                      00271000
*                                       ]   Token time-out value   @L7A 00271100
*   3 FACT_GETP_REUSE         Fixed(8), ] (OUTPUT)                      00271200
*                                       ]   Token reuse setting         00271300
*                                       ]   x'01' - can reuse           00271400
*                                       ]   x'02' - cannot reuse   @L7A 00271500
*   3 *                       Char(15); ] (INPUT/OUTPUT)                00271600
*                                       ]   Reserved               @L7A 00271700
*                                       ]                               00271800
*/********************************************************************/ 00271900
*/*  Function code 6: Get cached token credential                @L8A*/ 00272000
*/********************************************************************/ 00272100
* DECLARE                                                               00272200
*  1 FACT_GETC_PLIST      Based,        ]                          @L8A 00272300
*   3 FACT_GETC_OPTIONS       Fixed(32),] (INPUT)                       00272400
*                                       ]   Reserved               @L8A 00272500
*   3 FACT_GETC_USER_LENGTH   Fixed(8) ,] (INPUT)                       00272600
*                                       ]   Length of User ID      @L8A 00272700
*   3 FACT_GETC_USER          CHAR(8),  ] (INPUT)                       00272800
*                                       ]   User ID                @L8A 00272900
*   3 FACT_GETC_APPL          CHAR(8),  ] (INPUT)                       00273000
*                                       ]   Application Name       @L8A 00273100
*   3 *                       CHAR(7),  ] (INPUT/OUTPUT)                00273200
*                                       ]   Reserved               @L8A 00273300
*   3 FACT_GETC_CRED_LIST_NUM Fixed(32),] (INPUT)                       00273400
*                                       ]   Number of credentials       00273500
*                                       ]     in Credential list   @L8A 00273600
*   3 FACT_GETC_CRED_LIST@    Ptr(64),  ] (INPUT)                       00273700
*                                       ]   Address of Cred list   @L8A 00273800
*   3 FACT_GETC_CTC@          Ptr(64),  ] (OUTPUT)                      00273900
*                                       ]   Address of CTC area    @L8A 00274000
*   3 FACT_GETC_POLICY_LEN    Fixed(32),] (INPUT)                       00274100
*                                       ]   Length of MFA Policy   @L8A 00274200
*   3 FACT_GETC_POLICY_NAME   Char(20), ] (INPUT)                       00274300
*                                       ]   MFA Policy Name        @L8A 00274400
*   3 *                       Char(16); ] (INPUT/OUTPUT)                00274500
*                                       ]   Reserved               @L8A 00274600
*                                       ]                               00274700
*/********************************************************************/ 00274800
*/*  User factor list -                                              */ 00274900
*/*   Located at the beginning of the user factor area referenced    */ 00275000
*/*   by FACT_GETU_UF@ or FACT_SETU_UF@, this list is the contiguous */ 00275100
*/*   set of user factor entries, each mapped by FACT_UF_ENTRY.      */ 00275200
*/*   The number of entries is specified by FACT_GETU_UF_COUNT or    */ 00275300
*/*   FACT_SETU_UF_COUNT.                                        @L6A*/ 00275400
*/********************************************************************/ 00275500
* DECLARE                                                               00275600
*  1 FACT_UF_ENTRY          Based,      ]                          @L6A 00275700
*   3 FACT_UF_FACTOR_LENGTH   Fixed(32),] Length of factor name    @L6A 00275800
*   3 FACT_UF_FACTOR_OFFSET   Fixed(32),] Positive offset from start    00275900
*                                       ]  of user factor area to       00276000
*                                       ]  factor name             @L6A 00276100
*   3 FACT_UF_FIELDS_COUNT    Fixed(32),] Number of fields for          00276200
*                                       ]  this factor             @L6A 00276300
*   3 FACT_UF_FIELDS_OFFSET   Fixed(32);] Positive offset from start    00276400
*                                       ]  of user factor area to       00276500
*                                       ]  user factor field list  @L6A 00276600
*                                       ]                               00276700
*/********************************************************************/ 00276800
*/*  User factor field list -                                        */ 00276900
*/*   Located at offset FACT_UF_FIELDS_OFFSET from the beginning of  */ 00277000
*/*   the user factor area, this list is a contiguous set of user    */ 00277100
*/*   factor fields entries, each mapped by FACT_UFF_ENTRY.          */ 00277200
*/*   The number of entries is specified by FACT_UF_FIELDS_COUNT     */ 00277300
*/*   in the associated factor entry.                            @L6A*/ 00277400
*/********************************************************************/ 00277500
* DECLARE                                                               00277600
*  1 FACT_UFF_ENTRY         Based,      ]                          @L6A 00277700
*   3 FACT_UFF_FIELD_ID       Fixed(32),] Numeric identifier       @L6A 00277800
*   3 FACT_UFF_VALUE_LENGTH   Fixed(32),] Length of field value    @L6A 00277900
*   3 FACT_UFF_VALUE_OFFSET   Fixed(32);] Positive offset from start    00278000
*                                       ]  of user factor area to       00278100
*                                       ]  user factor field value @L6A 00278200
*                                       ]                               00278300
*/********************************************************************/ 00278400
*/* Constant values for FACT_UFF_FIELD_ID                        @L6A*/ 00278500
*/********************************************************************/ 00278600
* ] User factor tag data                                                00278700
* DECLARE FACT_FID_TAGS       Fixed(32) constant(1);             ] @L6A 00278800
*                                                                       00278900
* ] User factor active date                                             00279000
* DECLARE FACT_FID_ACTIVE     Fixed(32) constant(2);             ] @L6A 00279100
*                                                                       00279200
*                                       ]                               00279300
*/********************************************************************/ 00279400
*/*  User factor tag list                                        @L6A*/ 00279500
*/********************************************************************/ 00279600
* DECLARE                                                               00279700
*  1 FACT_UFT_LIST          Based,      ] Header value appears     @L6A 00279800
*   3 FACT_UFT_HEADER         Fixed(16);]  once at the start of    @L6A 00279900
*                                       ]  the tag list area       @L6A 00280000
*                                       ] It is reserved and       @L6A 00280100
*                                       ]  must be zero.           @L6A 00280200
* ] The first PART1 area must immediately follow FACT_UFT_HEADER.  @L6A 00280300
* ] The first PART2 area must immediately follow the first PART1.  @L6A 00280400
* ] Subsequent PART1/PART2 pairs must immediately follow preceding @L6A 00280500
* ] pairs.                                                         @L6A 00280600
* DECLARE                                                               00280700
*  1 FACT_UFT_PART1         Based,      ]                          @L6A 00280800
*   3 FACT_UFT_PAIR_LENGTH    Fixed(16),] Total length of this          00280900
*                                       ]  tag/value entry         @L6A 00281000
*   3 FACT_UFT_ATTRIBUTES     Fixed(16),] Tag attributes           @L6A 00281100
*   3 FACT_UFT_TAG_LENGTH     Fixed(16),] Length of tag            @L6A 00281200
*   3 FACT_UFT_TAG            char(*);  ] Tag name                 @L6A 00281300
* DECLARE                               ]                               00281400
*  1 FACT_UFT_PART2         Based(addr(FACT_UFT_TAG) +                  00281500
*                                      FACT_UFT_TAG_LENGTH),    ]  @L6A 00281600
*   3 FACT_UFT_VALUE_LENGTH   Fixed(16),] Length of tag value      @L6A 00281700
*   3 FACT_UFT_VALUE          char(*);  ] Value for tag            @L6A 00281800
*                                       ]                               00281900
*/********************************************************************/ 00282000
*/*  User policy list -                                              */ 00282100
*/*   Located at offset FACT_GETU_POL_OFFSET from FACT_GETU_UF@,     */ 00282200
*/*   this list is the contiguous set of user policy entries,        */ 00282300
*/*   each mapped by FACT_UP_ENTRY.  The number of entries is        */ 00282400
*/*   specified by FACT_GETU_POL_COUNT.                          @L7A*/ 00282500
*/********************************************************************/ 00282600
* DECLARE                                                               00282700
*  1 FACT_UP_ENTRY          Based,      ]                          @L7A 00282800
*   3 FACT_UP_POLICY_LENGTH   Fixed(32),] Length of policy name    @L7A 00282900
*   3 FACT_UP_POLICY_OFFSET   Fixed(32),] Positive offset from start    00283000
*                                       ]  of user factor area to       00283100
*                                       ]  policy name             @L7A 00283200
*   3 *                       Fixed(64);] Reserved                 @L7A 00283300
*                                       ]                               00283400
*                                                                       00283500
*/********************************************************************/ 00283600
*/*  Policy factor list -                                            */ 00283700
*/*   Located at the beginning of the policy area referenced         */ 00283800
*/*   by FACT_GETP_PA@, this list is the contiguous                  */ 00283900
*/*   set of policy entries, each mapped by FACT_PF_ENTRY.           */ 00284000
*/*   The number of entries is specified by FACT_GETP_FL_COUNT.  @L7A*/ 00284100
*/********************************************************************/ 00284200
* DECLARE                                                               00284300
*  1 FACT_PF_ENTRY          Based,      ]                          @L7A 00284400
*   3 FACT_PF_FACTOR_LENGTH   Fixed(32),] Length of factor name    @L7A 00284500
*   3 FACT_PF_FACTOR_OFFSET   Fixed(32),] Positive offset from start    00284600
*                                       ]  of policy area to factor     00284700
*                                       ]  name                    @L7A 00284800
*   3 *                       Fixed(64);] Reserved                 @L7A 00284900
*                                       ]                               00285000
*                                                                       00285100
*/********************************************************************/ 00285200
*/*  MFA Credential List -                                           */ 00285300
*/*   Input to the GetCTC function code 6 in the                     */ 00285400
*/*   FACT_GETC_CRED_LIST@ parameter. The length of the list is      */ 00285500
*/*   FACT_GETC_CRED_LIST_LEN. The number of entries is              */ 00285600
*/*   FACT_GETC_CRED_LIST_NUM.                                  @L8A */ 00285700
*/********************************************************************/ 00285800
* DECLARE                                                               00285900
*  1 FACT_CRED_LIST         Based,      ]                          @L8A 00286000
*   3 FACT_CRED_TYPE          Char(20), ] Credential Type          @L8A 00286100
*   3 FACT_CRED_LENGTH        Fixed(32),] Credential Length        @L8A 00286200
*   3 FACT_CRED_VAL@          Ptr(64),  ] Address of Cred Value    @L8A 00286300
*   3 *                       Char(16); ] Reserved                 @L8A 00286400
*                                                                       00286500
*/********************************************************************/ 00286600
*/* Constant values for GetCTC                                   @L8A*/ 00286700
*/********************************************************************/ 00286800
*                                                                       00286900
* ] Maximum Number of CRED_LIST entries                            @L8A 00287000
* DECLARE FACT_CRED_LIST_NUM_MAX Fixed(32) constant(10);         ] @L8A 00287100
*                                                                       00287200
* ] Maximum Length of all CRED Value Lengths combined              @L8A 00287300
* DECLARE FACT_CRED_LEN_MAX Fixed(32) constant(8192);            ] @L8A 00287400
