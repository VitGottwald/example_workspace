*/****** START OF SPECIFICATIONS ************************************** 00010000
*                                                                     * 00020000
*01* MACRO-NAME = SYSSTATE                                            * 00030000
*                                                                     * 00040000
*01* DESCRIPTIVE-NAME = SYSTEM STATE MACRO                            * 00050000
*                                                                     * 00060000
*01* COPYRIGHT =                                                      * 00070000
*              5650-ZOS                                               * 00080000
*              COPYRIGHT IBM CORP. 1988,2021                          * 00090000
*              LICENSED MATERIALS - PROPERTY OF IBM                   * 00100000
*                                                                     * 00110000
*01* STATUS = HBB77D0                                                 * 00120000
*                                                                     * 00130000
*01* EXTERNAL CLASSIFICATION:                                         * 00140000
*02*   PI: BASE                                                       * 00141000
*02*   NOTPI: ARCHLVL_IBM_PLX                                         * 00142000
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00150000
*                                                                     * 00160000
*01* FUNCTION = USED TO SET THE VALUE OF THE GLOBAL SET SYMBOL        * 00170000
*               "SYSASCE" TO A SPECIFIED VALUE OR A DEFAULT VALUE.    * 00180000
*               THE PURPOSE IS TO REQUEST CODE GENERATION FOR         * 00190000
*               THE SPECIFIED ASC ENVIRONMENT.                        * 00200000
*                                                                     * 00210000
*01* NOTES =    TO CHANGE THE DEFAULT VALUE, UPDATE THE STATEMENT     * 00220000
*                    "&DEFAULT SETC  'P'"                             * 00230000
*               WHICH IS SHORTLY AFTER THE MACRO PROTOTYPE STATEMENT. * 00240000
*                                                                     * 00250000
*01* PL/X NOTES = To request support for GEN CTRL on SYSSTATE,        * 00260000
*               set external macro variable SYSSTATE_GENCTRL = 'YES'  * 00261000
*                                                                     * 00262000
*02* PROCESSOR = ASSEMBLER/PL/X                                       * 00263000
*                                                                     * 00264000
*01* MACRO PARAMETERS =                                               * 00265000
*        FUNCTION - POSITIONAL, OPTIONAL                              * 00266000
*                   PUSH     - SAVE CURRENT SETTINGS                  * 00267000
*                   POP      - RESTORE PREVIOUSLY-SAVED SETTINGS      * 00268000
*                   TEST     - SET SYSASCE TO THE DEFAULT VALUE IF A  * 00269000
*                              VALUE HAS NOT ALREADY BEEN ASSIGNED    * 00270000
*                              TO SYSASCE.                            * 00280000
*                            - SET SYSAM64 TO THE DEFAULT VALUE IF A  * 00290000
*                              VALUE HAS NOT ALREADY BEEN ASSIGNED    * 00300000
*                              TO SYSAM64.                            * 00310000
*                            - SET SYSRM64 TO THE DEFAULT VALUE IF A  * 00311000
*                              VALUE HAS NOT ALREADY BEEN ASSIGNED    * 00312000
*                              TO SYSRM64.                            * 00313000
*                            - SET SYSALVL TO THE DEFAULT VALUE IF A  * 00320000
*                              VALUE HAS NOT ALREADY BEEN ASSIGNED    * 00330000
*                              TO SYSALVL.                            * 00340000
*                              Also sets SYSSTATE_OPTABLE.            * 00340100
*                            - SET SYSOSREL TO THE DEFAULT VALUE IF A * 00341000
*                              VALUE HAS NOT ALREADY BEEN ASSIGNED    * 00342000
*                              TO SYSOSREL.                           * 00343000
*                            - SET SYSALR TO THE DEFAULT VALUE IF A   * 00344000
*                              VALUE HAS NOT ALREADY BEEN ASSIGNED    * 00345000
*                              TO SYSALR.                             * 00346000
*                   ASCENV   - SET SYSASCE TO THE DEFAULT VALUE. (IN  * 00347000
*                              PLX, THIS IS NOT A POSITIONAL          * 00348000
*                              PARAMETER. INSTEAD, ASCENV CAN BE      * 00349000
*                              CODED AS A KEYWORD PARAMETER WITH OR   * 00350000
*                              WITHOUT A VALUE.) THIS IS THE DEFAULT. * 00360000
*                   AMODE64  - SET SYSAM64 TO THE DEFAULT VALUE. (IN  * 00370000
*                              PLX, THIS IS NOT A POSITIONAL          * 00380000
*                              PARAMETER. INSTEAD, AMODE64 CAN BE     * 00390000
*                              CODED AS A KEYWORD PARAMETER WITH OR   * 00400000
*                              WITHOUT A VALUE.) THIS IS THE DEFAULT. * 00410000
*                   RMODE64  - SET SYSRM64 TO THE DEFAULT VALUE. (IN  * 00411000
*                              PLX, THIS IS NOT A POSITIONAL          * 00412000
*                              PARAMETER. INSTEAD, RMODE64 CAN BE     * 00413000
*                              CODED AS A KEYWORD PARAMETER WITH OR   * 00414000
*                              WITHOUT A VALUE.) THIS IS THE DEFAULT. * 00415000
*                   ARCHLVL  - SET SYSALVL TO THE DEFAULT VALUE. (IN  * 00420000
*                              PLX, THIS IS NOT A POSITIONAL          * 00430000
*                              PARAMETER. INSTEAD, ARCHLVL CAN BE     * 00440000
*                              CODED AS A KEYWORD PARAMETER WITH OR   * 00450000
*                              WITHOUT A VALUE.) THIS IS THE DEFAULT. * 00460000
*                              Also sets SYSSTATE_OPTABLE.            * 00461000
*                   OSREL - SET SYSOSREL TO THE DEFAULT VALUE. (IN    * 00470000
*                              PLX, THIS IS NOT A POSITIONAL          * 00480000
*                              PARAMETER. INSTEAD, OSREL CAN BE       * 00490000
*                              CODED AS A KEYWORD PARAMETER WITH OR   * 00500000
*                              WITHOUT A VALUE.) THE DEFAULT IS THE   * 00510000
*                              VALUE, IN CHARACTER FORM, OF           * 00520000
*                              ECVTPSEQ. REFER TO THE IHAECVT MAPPING * 00530000
*                              FOR THE VALUES.                        * 00540000
*                              NOTE THAT GLOBAL CHARACTER MACRO       * 00550000
*                              VARIABLE SYSOSREL_NAME IS ALSO SET,    * 00560000
*                              TO A VALUE SUCH AS "ZOSV1R5" FOR A     * 00570000
*                              MORE MNEMONICALLY READABLE VERSION IF  * 00580000
*                              A MACRO WANTS TO DISPLAY THE           * 00590000
*                              VALUE OF SYSSTATE OSREL CURRENTLY IN   * 00600000
*                              EFFECT.                                * 00610000
*                   ALR      - SET SYSALR TO THE DEFAULT VALUE. (IN   * 00620000
*                              PLX, THIS IS NOT A POSITIONAL          * 00630000
*                              PARAMETER. INSTEAD, ALR CAN BE         * 00640000
*                              CODED AS A KEYWORD PARAMETER WITH OR   * 00650000
*                              WITHOUT A VALUE.) THIS IS THE DEFAULT. * 00660000
*        ASCENV   - KEYWORD, OPTIONAL                                 * 00670000
*                   SPECIFIES THE EXPLICIT VALUE TO WHICH SYSASCE IS  * 00680000
*                   TO BE SET.                                        * 00690000
*                        'P' SUPPORT PRIMARY ASC MODE INVOKERS        * 00700000
*                       'AR' SUPPORT ACCESS REGISTER ASC MODE         * 00710000
*                            INVOKERS                                 * 00720000
*                      'ANY' SUPPORT EITHER PRIMARY OR AR ASC MODE    * 00730000
*                            INVOKERS                                 * 00740000
*        AMODE64  - KEYWORD, OPTIONAL                                 * 00750000
*                   SPECIFIES THE EXPLICIT VALUE TO WHICH SYSAM64 IS  * 00760000
*                   TO BE SET.                                        * 00770000
*                      'YES' SUPPORT AMODE 64 INVOKERS                * 00780000
*                            IMPLIES ARCHLVL=2                        * 00790000
*                       'NO' DO NOT SUPPORT AMODE 64 INVOKERS         * 00800000
*        RMODE64  - KEYWORD, OPTIONAL                                 * 00801000
*                   SPECIFIES THE EXPLICIT VALUE TO WHICH SYSRM64 IS  * 00802000
*                   TO BE SET.                                        * 00803000
*                      'YES' SUPPORT RMODE 64 INVOKERS                * 00804000
*                            IMPLIES ARCHLVL=2                        * 00805000
*                       'NO' DO NOT SUPPORT RMODE 64 INVOKERS         * 00806000
*        ARCHLVL  - KEYWORD, OPTIONAL                                 * 00810000
*                   SPECIFIES THE EXPLICIT VALUE TO WHICH SYSALVL IS  * 00820000
*                   TO BE SET.                                        * 00830000
*                      0     ARCHITECTURE IS ESA                      * 00840000
*                      1     ARCHITECTURE IS ESA FOR OS/390 R10       * 00850000
*                            (INCLUDES RELATIVE/IMMEDIATE)            * 00860000
*                      2     ARCHITECTURE IS Z/ARCHITECTURE           * 00870000
*                      3     ARCHITECTURE IS Z9                   @LGA* 00871000
*                      4     ARCHITECTURE IS Z10                  @LJA* 00872000
*                      5     ARCHITECTURE IS z196/z114            @LLA* 00873000
*                            You may specify Z196 or Z114         @LLA* 00873100
*                      6     ARCHITECTURE IS ZEC12/ZBC12          @LLA* 00873200
*                            You may specify ZEC12 or ZBC12       @LLA* 00873300
*                            You may specify ZOSV2R3              @LLA* 00873400
*                      7     ARCHITECTURE IS Z13                  @xxA* 00873500
*                            You may specify z13                  @xxA* 00873600
*                            You may specify ZOSV2R5              @xxA* 00873700
*                      OSREL Set to the ARCHLVL associated with   @LGA* 00874000
*                            the release                          @LGA* 00875000
*                   SYSSTATE_OPTABLE is also set according to the     * 00876000
*                   resulting SYSALVL:                                * 00877000
*                     0,1,2: ZOP                                  @01C* 00878000
*                     3:     ZS3                                      * 00879000
*                     4:     ZS4                                      * 00879100
*                     5:     ZS5                                  @LLA* 00879200
*                     6:     ZS6                                  @LLA* 00879300
*                     7:     ZS7                                  @xxA* 00879400
*                   This can be used with the assembler ACONTROL      * 00879500
*                   directive such as                                 * 00879600
*                        GBLC  &SYSSTATE_OPTABLE                      * 00879700
*                        SYSSTATE ...                                 * 00879800
*                        ACONTROL OPTABLE(&SYSSTATE_OPTABLE)          * 00879900
*                   to limit the instruction set for this section     * 00880000
*                   of your program according to the architecture     * 00880100
*                   level.                                            * 00880200
*        ARCHLVL_IBM_PLX - an optional keyword for IBM use only.  @LPA* 00881000
*                   When not null, silently overrides the         @LPA* 00881100
*                   ARCHLVL specification. For use in PLX         @LPA* 00881200
*                   modules where the compiler automatically      @LPA* 00881300
*                   adds ARCHLVL=2 but where you want the Stack   @LPA* 00881400
*                   macro to pay attention to a different         @LPA* 00881500
*                   ARCHLVL value.                                @LPA* 00881600
*                   Specify GenSysState('ARCHLVL_IBM_PLX=n') on   @LPA* 00881700
*                   the main proc.                                @LPA* 00881800
*        OSREL - KEYWORD, OPTIONAL                                    * 00882000
*                   SPECIFIES THE EXPLICIT VALUE TO WHICH SYSOSREL IS * 00890000
*                   TO BE SET. IT SHOULD BE SET TO ONE OF THE VALUES  * 00900000
*                   DOCUMENTED FOR THE ECVTPSEQ FIELD IN IHAECVT.     * 00910000
*                   NOTE THAT GLOBAL CHARACTER MACRO VARIABLE         * 00920000
*                   SYSOSREL_NAME IS ALSO SET, TO A VALUE SUCH AS     * 00930000
*                   "ZOSV1R5" FOR A MORE MNEMONICALLY READABLE        * 00940000
*                   VERSION IF A MACRO WANTS TO DISPLAY THE VALUE OF  * 00950000
*                   SYSSTATE OSREL CURRENTLY IN EFFECT.               * 00960000
*                   The value SYSSTATE can be specified to indicate   * 00970000
*                   to set OSREL to the value that corresponds to     * 00980000
*                   the level of the SYSSTATE macro.              @LBA* 00990000
*        ALR      - KEYWORD, OPTIONAL                                 * 01000000
*                   SPECIFIES THE EXPLICIT VALUE TO WHICH SYSALR IS   * 01010000
*                   TO BE SET.                                        * 01020000
*                      'YES' ASN AND LX REUSE ARCHITECTURE IS         * 01030000
*                            AVAILABLE                                * 01040000
*                       'NO' ASN AND LX REUSE ARCHITECTURE IS         * 01050000
*                            NOT KNOWN TO BE AVAILABLE                * 01060000
*                     'COND' ASN AND LX REUSE ARCHITECTURE IS         * 01070000
*                            NOT KNOWN TO BE AVAILABLE. MAKE A        * 01080000
*                            RUN-TIME CHECK                           * 01090000
*        ASM      - KEYWORD, VALID ONLY IN PLX, OPTIONAL.             * 01100000
*                   The default is ASM(YES).                          * 01101000
*                   IN ADDITION TO SETTING THE PLX GLOBAL VARIABLE    * 01110000
*                   SYSASCE, SET THE ASSEMBLER GLOBAL SET SYMBOL      * 01120000
*                   SYSASCE.                                          * 01130000
*                   IN ADDITION TO SETTING THE PLX GLOBAL VARIABLE    * 01140000
*                   SYSAM64, SET THE ASSEMBLER GLOBAL SET SYMBOL      * 01150000
*                   SYSAM64.                                          * 01160000
*                   IN ADDITION TO SETTING THE PLX GLOBAL VARIABLE    * 01161000
*                   SYSRM64, SET THE ASSEMBLER GLOBAL SET SYMBOL      * 01162000
*                   SYSRM64.                                          * 01163000
*                                                                     * 01170000
*01* MACRO VARIABLES =                                                * 01180000
*                                                                     * 01190000
*        SYSSTATE_POP_VERBOSE                                         * 01200000
*                 - A global character macro variable whose value     * 01210000
*                   must be null or not-null. Not-null indicates      * 01220000
*                   that a SYSSTATE POP is to display the             * 01221000
*                   now-current set of options                    @LHA* 01230000
*                                                                     * 01241000
*01* MACRO VARIABLES SET =                                            * 01241100
*                                                                     * 01241200
*        SYSSTATE_OSREL                                               * 01241300
*                 - A global character macro variable whose value     * 01241400
*                   indicates what level of the SYSSTATE macro is     * 01241500
*                   present. The value is one of the values           * 01241600
*                   documented for the ECVTPSEQ field in IHAECVT. @H1A* 01241700
*                                                                     * 01241800
*01* PL/X Macro variables =                                           * 01241900
*                                                                     * 01242000
*        SYSSTATE_GENCTRL                                             * 01242100
*                 - Null or YES. YES asks to use GEN CTRL instead     * 01242200
*                   of GEN CODE when that function is available.      * 01242300
*                   This is normally the right thing to do.           * 01242400
*                                                                     * 01242500
*        SYSSTATE_GC_OVER                                             * 01242600
*                 - Null or not null.                                 * 01242700
*                   GEN CTRL Override. When not null, indicates       * 01242800
*                   not to use GEN CTRL regardless of the value       * 01242900
*                   in SYSSTATE_GENCTRL. Due to deficiencies          * 01243000
*                   in BlockReorder processing, this can be           * 01243100
*                   necessary in order to get "rare" code moved       * 01243200
*                   as desired.                                       * 01243300
*                                                                     * 01243400
*        SYSSTATE_VERBOSE <<not SYSSTATE_POP_VERBOSE>>                * 01243500
*                 - A global character macro variable whose value     * 01243600
*                   must be null or not-null. Not-null indicates      * 01243700
*                   that a SYSSTATE POP is to display the             * 01243800
*                   now-current set of options                    @LHA* 01243900
*                                                                     * 01244000
*01* MACROS = IHBERMAC                                                * 01244100
*                                                                     * 01244200
*01* CHANGE-ACTIVITY =                                                * 01244300
*    $L0=     AR    HBB3310 850901 PDXB: AR SUPPORT                   * 01244400
*    $L1=64BITRTM HBB7703 981204 PD00XB: ESAME                        * 01244500
*    $L2=LXREU    HBB7709 030801 PD00XB: ASN-AND-LX-REUSE FACILITY    * 01245000
*    $L3=PR720    HBB7720 031008 U2IAXZ: HBB7720                      * 01246000
*    $P1=PDE0309  HBB7720 040423 U2IAXZ:                              * 01247000
*    $P2=ME01632  HBB7720 040827 U2IAXZ:                              * 01248000
*    $L4=PR730    HBB7730 040930 U2IAXZ: HBB7730                      * 01249000
*    $L5=PR730    HBB7730 060313 U2IAXZ: SYSSTATE_OSREL               * 01250000
*    $L6=PR740    HBB7740 051024 U2IAXZ: HBB7740                      * 01260000
*    $L7=PR750    HBB7750 060609 U2IAXZ: HBB7750                      * 01270000
*    $P3=ME08825  HBB7750 061215 PD00XB: PLS                          * 01280000
*    $L8=ME11098  HBB7760 070830 PD00BS: HBB7760                      * 01290000
*    $L9=ME12303  HBB7750 080110 PD00XB: SYSSTATE_GENCTRL             * 01300000
*    $P4=ME13429  HBB7760 080501 PD00XB: PLS                          * 01310000
*    $LA=PR770    HBB7770 080912 U2IAXZ: HBB7770                      * 01320000
*    $LB=ME16162  HBB7770 090319 PD00XB: OSREL=SYSSTATE               * 01321000
*    $LC=PR780    HBB7780 090912 U2IAXZ: HBB7780                      * 01321100
*    $LD=ME18274  HBB7770 100125 PD00XB: GENCTRL override             * 01321200
*    $LE=PR790    HBB7790 100810 PD00KP: HBB7790                      * 01321300
*    $LF=PR790    HBB7790 101201 PD00XB: Reversion                    * 01321400
*    $P5=ME22665  HBB7790 111005 PD00XB: V1Rxx for R10-R13            * 01321500
*    $LG=ME24042  HBB7790 120315 PD00XB: ARCHLVL=3                    * 01321600
*    $LH=ME24030  HBB7790 120418 PD00XB: VERBOSE                      * 01321700
*    $LI=PR7A0    HBB77A0 110915 PD00XZ: HBB77A0                      * 01321800
*    $LJ=ME27837  HBB77A0 140716 PD00XB: ARCHLVL=4                    * 01321900
*    $LK=PR7B0    HBB77B0 140915 PD00XB: HBB77B0                      * 01322000
*    $LL=W118009  HBB77B0 150406 PD00XB: ARCHLVL=5,6                  * 01322100
*    $LM=W158145  HBB77B0 170210 PD00XB: OSREL(MIGLIB)                * 01322200
*    $LN=PR7C0    HBB77C0 170211 PD00XB: HBB77C0                      * 01322300
*    $01=OA53779  HBB77A0 170901 PD00KP: Fix OPTABLE                  * 01322400
*    $LO=W194192  HBB77C0 170801 PD00XB: RMODE64                      * 01322500
*    $LP=W267561  HBB77C0 180719 PD00XB: ARCHLVL_IBM_PLX              * 01322600
*    $LQ=PR7D0    HBB77D0 190901 PD00XB: HBB77D0                      * 01322700
*    $LR=W375489  HBB77D0 200601 PD00XB: ARCHLVL=7                    * 01322801
*                                                                     * 01322900
******** END OF SPECIFICATIONS **************************************** 01323000
         MACRO                                                          01323100
&LABEL   SYSSTATE &FCN,&FCN1,&FCN2,&FCN3,&FCN4,&FCN5,                  X01323200
               &ASCENV=,&AMODE64=,&ARCHLVL=,&OSREL=,&ALR=,         @L2AX01323300
               &RMODE64=,&ARCHLVL_IBM_PLX=                         @LPC 01323400
.*                                                                      01323500
         GBLC  &SYSSTATE_OSREL                                     @L5A 01323600
         GBLC  &SYSSTATE_OPTABLE                                   @LJA 01323700
         GBLC  &SYSASCE,&SYSAM64,&SYSRM64                          @LOA 01323800
         GBLA  &SYSALVL                                                 01323900
         GBLC  &SYSOSREL                                           @L2A 01324000
         GBLC  &SYSOSREL_NAME                                      @L2A 01324100
         GBLC  &SYSOSREL_ZOSV2R5                                   @LQA 01324200
         GBLC  &SYSOSREL_ZOSV2R4                                   @LMA 01324300
         GBLC  &SYSOSREL_ZOSV2R3                                   @LKA 01324400
         GBLC  &SYSOSREL_ZOSV2R2                                   @LIA 01324500
         GBLC  &SYSOSREL_ZOSV2R1                                   @LFC 01324600
         GBLC  &SYSOSREL_ZOSR13                                    @LCA 01324700
         GBLC  &SYSOSREL_ZOSV1R13                                  @LCA 01324800
         GBLC  &SYSOSREL_ZOSR12                                    @LAA 01324900
         GBLC  &SYSOSREL_ZOSV1R12                                  @LAA 01325000
         GBLC  &SYSOSREL_ZOSR11                                    @L8A 01325100
         GBLC  &SYSOSREL_ZOSV1R11                                  @L8A 01325200
         GBLC  &SYSOSREL_ZOSR10                                    @P3C 01325300
         GBLC  &SYSOSREL_ZOSV1R10                                  @L7A 01325400
         GBLC  &SYSOSREL_ZOSV1R9                                   @L6A 01325500
         GBLC  &SYSOSREL_ZOSV1R8                                   @L4A 01325600
         GBLC  &SYSOSREL_ZOSV1R7                                   @P2C 01325700
         GBLC  &SYSOSREL_ZOSV1R6                                   @L2A 01325800
         GBLC  &SYSOSREL_ZOSV1R5                                   @L2A 01325900
         GBLC  &SYSOSREL_ZOSV1R4                                   @L2A 01326000
         GBLC  &SYSOSREL_ZOSV1R3                                   @L2A 01326100
         GBLC  &SYSOSREL_ZOSV1R2                                   @L2A 01326200
         GBLC  &SYSOSREL_ZOSV1R1                                   @L2A 01326300
         GBLC  &SYSOSREL_OS390                                     @L2A 01326400
         GBLC  &SYSOSREL_DEFAULT                                   @L2A 01326500
         GBLC  &SYSOSREL_NAMEDEF                                   @L2A 01326600
         GBLC  &SYSASCEA(255)                                           01326700
         GBLC  &SYSAM64A(255)                                           01326800
         GBLC  &SYSRM64A(255)                                      @LOA 01326900
         GBLA  &SYSALVLA(255)                                           01327000
         GBLC  &SYSOSRELA(255)                                     @L2A 01327100
         GBLC  &SYSOSRELN(255)                                     @L2A 01327200
         GBLC  &SYSOPTBLA(255)                                     @LJA 01327300
         GBLC  &SYSSTATE_POP_VERBOSE                               @LHA 01327400
         GBLA  &SYSSTATEI                                               01327500
         LCLC  &DEFAULT,&DEFAULT64                                      01327600
         LCLC  &TARCHLVL               Temp ARCHLVL                @LPA 01327700
         LCLA  &DEFAULTALVL                                             01327800
         LCLB  &SPECASCENV,&SPECAM64,&SPECALVL,&SPECTEST,&SPECOSREL     01327900
         LCLB  &SPECRM64                                           @LOA 01328000
.*                                                                      01328100
.*********************************************************************  01329000
.*                                                                   *  01330000
.*       DEFAULT VALUE FOR SYSASCE IN ASSEMBLER LANGUAGE:            *  01340000
.*                                                                   *  01350000
&DEFAULT SETC 'P'                      FOR THE VALUES WHICH &DEFAULT *  01360000
.*                                     CAN BE SET TO, SEE THE        *  01370000
.*                                     DESCRIPTION OF THE PARAMETER  *  01380000
.*                                     "ASCENV" IN THIS MACRO'S      *  01390000
.*                                     PROLOGUE.                     *  01400000
.*                                                                   *  01410000
.*********************************************************************  01420000
.*                                                                      01430000
.*********************************************************************  01440000
.*                                                                   *  01450000
.*       DEFAULT VALUE FOR SYSAM64 IN ASSEMBLER LANGUAGE:            *  01460000
.*                                                                   *  01470000
&DEFAULT64 SETC 'NO'                                                 *  01480000
.*                                                                   *  01490000
.*********************************************************************  01500000
.*                                                                   *  01510000
.*********************************************************************  01511000
.*                                                                   *  01512000
.*       DEFAULT VALUE FOR SYSRM64 IN ASSEMBLER LANGUAGE:        @LOA*  01513000
.*                                                                   *  01514000
&DEFAULTRM64 SETC 'NO'                                           @LOA*  01515000
.*                                                                   *  01516000
.*********************************************************************  01517000
.*                                                                   *  01518000
.*********************************************************************  01520000
.*                                                                   *  01530000
.*       DEFAULT VALUE FOR SYSALVL IN ASSEMBLER LANGUAGE:            *  01540000
.*                                                                   *  01550000
&DEFAULTALVL SETA 0                                                  *  01560000
.*                                                                   *  01570000
.*********************************************************************  01580000
.*                                                                      01590000
.*********************************************************************  01600000
.*                                                                   *  01610000
.*       DEFAULT VALUE FOR SYSOSREL IN ASSEMBLER LANGUAGE:           *  01620000
.*                                                                   *  01630000
&SYSOSREL_ZOSV2R5 SETC '01020500'                                  @LQA 01650000
&SYSOSREL_ZOSV2R4 SETC '01020400'                                  @LNA 01650100
&SYSOSREL_ZOSV2R3 SETC '01020300'                                  @LKA 01650200
&SYSOSREL_ZOSV2R2 SETC '01020200'                                  @LIA 01650300
&SYSOSREL_ZOSV2R1 SETC '01020100'                                  @LFC 01650400
&SYSOSREL_ZOSR13 SETC '01011300'                                   @LCA 01651000
&SYSOSREL_ZOSV1R13 SETC '01011300'                                 @LCA 01652000
&SYSOSREL_ZOSR12 SETC '01011200'                                   @LAA 01660000
&SYSOSREL_ZOSV1R12 SETC '01011200'                                 @LAA 01670000
&SYSOSREL_ZOSR11 SETC '01011100'                                   @L8A 01680000
&SYSOSREL_ZOSV1R11 SETC '01011100'                                 @L8A 01690000
&SYSOSREL_ZOSR10 SETC '01011000'                                   @P3C 01700000
&SYSOSREL_ZOSV1R10 SETC '01011000'                                 @P3C 01710000
&SYSOSREL_ZOSV1R9 SETC '01010900'                                  @L6A 01720000
&SYSOSREL_ZOSV1R8 SETC '01010800'                                  @L4A 01730000
&SYSOSREL_ZOSV1R7 SETC '01010700'                                  @P2C 01740000
&SYSOSREL_ZOSV1R6 SETC '01010600'                                  @L2A 01750000
&SYSOSREL_ZOSV1R5 SETC '01010500'                                  @L2A 01760000
&SYSOSREL_ZOSV1R4 SETC '01010400'                                  @L2A 01770000
&SYSOSREL_ZOSV1R3 SETC '01010300'                                  @L2A 01780000
&SYSOSREL_ZOSV1R2 SETC '01010200'                                  @L2A 01790000
&SYSOSREL_ZOSV1R1 SETC '01010100'                                  @L2A 01800000
&SYSOSREL_OS390 SETC '00021000'                                    @L2A 01810000
&SYSOSREL_DEFAULT SETC '00000000'                                  @L2A 01820000
&SYSOSREL_NAMEDEF SETC '00000000'                                  @L2A 01830000
.*                                                                   *  01840000
.*                                                                   *  01850000
.*       Current value for SYSSTATE_OSREL in assembler language:     *  01860000
.*                                                                   *  01870000
&SYSSTATE_OSREL SETC '&SYSOSREL_ZOSV2R5'                          @LQC  01880000
.*                                                                   *  01890000
.*********************************************************************  01900000
.*                                                                   *  01910000
.*********************************************************************  01920000
.*********************************************************************  01930000
.*                                                                      01940000
.* WE SET THE DEFAULTS ALSO WHEN ANYTHING IS SPECIFIED SO THAT          01950000
.* THE FINAL MESSAGE WILL BE "NORMAL"                                   01960000
         AIF   ('&SYSASCE' NE '').HAVEASCE SYSASCE NOT NULL, SKIP       01970000
&SYSASCE SETC  '&DEFAULT'                                               01980000
.HAVEASCE ANOP                                                          01990000
         AIF   ('&SYSAM64' NE '').HAVEAM64 SYSAM64 NOT NULL, SKIP       02000000
&SYSAM64 SETC  '&DEFAULT64'                                             02001000
.HAVEAM64 ANOP                                                          02002000
         AIF   ('&SYSRM64' NE '').HAVERM64 SYSRM64 NOT NULL, SKIP  @LOA 02002100
&SYSRM64 SETC  '&DEFAULTRM64'                                           02002200
.HAVERM64 ANOP                                                          02002300
         AIF   (&SYSALVL NE 0).HAVEALVL SYSALVL NOT NULL, SKIP          02003000
&SYSALVL SETA  &DEFAULTALVL                                             02004000
.HAVEALVL ANOP                                                          02005000
         AIF   ('&SYSOSREL' NE '').HAVEOSREL SYSOSREL NOT NULL, SKIP    02006000
&SYSOSREL SETC '&SYSOSREL_DEFAULT'                                      02007000
&SYSOSREL_NAME SETC '&SYSOSREL_NAMEDEF'                                 02008000
.HAVEOSREL ANOP                                                         02009000
.*                                                                      02010000
&SPECASCENV SETB ('&FCN' EQ 'ASCENV' OR '&FCN1' EQ 'ASCENV' OR         *02020000
               '&FCN2' EQ 'ASCENV' OR '&FCN3' EQ 'ASCENV' OR           *02030000
               '&FCN4' EQ 'ASCENV' OR '&FCN5' EQ 'ASCENV')         @LOC 02040000
&SPECAM64   SETB ('&FCN' EQ 'AMODE64' OR '&FCN1' EQ 'AMODE64' OR       *02050000
               '&FCN2' EQ 'AMODE64' OR '&FCN3' EQ 'AMODE64' OR         *02060000
               '&FCN4' EQ 'AMODE64' OR '&FCN5' EQ 'AMODE64')       @LOC 02061000
&SPECRM64   SETB ('&FCN' EQ 'RMODE64' OR '&FCN1' EQ 'RMODE64' OR       *02071000
               '&FCN2' EQ 'RMODE64' OR '&FCN3' EQ 'RMODE64' OR         *02072000
               '&FCN4' EQ 'RMODE64' OR '&FCN5' EQ 'RMODE64')       @LOC 02072100
&SPECALVL   SETB ('&FCN' EQ 'ARCHLVL' OR '&FCN1' EQ 'ARCHLVL' OR       *02080000
               '&FCN2' EQ 'ARCHLVL' OR '&FCN3' EQ 'ARCHLVL' OR         *02090000
               '&FCN4' EQ 'ARCHLVL' OR '&FCN5' EQ 'ARCHLVL')       @LOC 02091000
&SPECOSREL  SETB ('&FCN' EQ 'OSREL' OR '&FCN1' EQ 'OSREL' OR           *02110000
               '&FCN2' EQ 'OSREL' OR '&FCN3' EQ 'OSREL' OR             *02120000
               '&FCN4' EQ 'OSREL' OR '&FCN5' EQ 'OSREL')           @LOC 02121000
&SPECALR    SETB ('&FCN' EQ 'ALR' OR '&FCN1' EQ 'ALR' OR               *02140000
               '&FCN2' EQ 'ALR' OR '&FCN3' EQ 'ALR' OR                 *02150000
               '&FCN4' EQ 'ALR' OR '&FCN5' EQ 'ALR')               @LOC 02151000
&SPECTEST   SETB ('&FCN' EQ 'TEST' OR '&FCN1' EQ 'TEST' OR             *02170000
               '&FCN2' EQ 'TEST' OR '&FCN3' EQ 'TEST' OR               *02180000
               '&FCN4' EQ 'TEST' OR '&FCN5' EQ 'TEST')             @LOC 02181000
         AIF   ('&LABEL' EQ '').NOLABEL                                 02200000
&LABEL   DS    0X                                                       02210000
.*                                                                      02220000
.NOLABEL ANOP                                                           02230000
         AIF   (N'&SYSLIST GT 3).ERR1  CHECK FOR TOO MANY POSITIONALS   02240000
         AIF   ('&FCN' EQ 'PUSH').DOPUSH                                02250000
         AIF   ('&FCN' EQ 'POP').DOPOP                                  02260000
         AIF   ('&FCN' NE '' AND '&FCN' NE 'TEST' AND '&FCN' NE        *02270000
               'ASCENV' AND '&FCN' NE 'AMODE64'                        *02280000
               AND '&FCN' NE 'RMODE64'                                 *02290000
               AND '&FCN' NE 'ARCHLVL'                                 *02291000
               AND '&FCN' NE 'ALR'                                     *02300000
               AND '&FCN' NE 'OSREL').ERR2                              02310000
         AIF   ('&FCN1' NE '' AND '&FCN1' NE 'TEST' AND '&FCN1' NE     *02320000
               'ASCENV' AND '&FCN1' NE 'AMODE64'                       *02330000
               AND '&FCN1' NE 'RMODE64'                                *02331000
               AND '&FCN1' NE 'ARCHLVL'                                *02340000
               AND '&FCN1' NE 'ALR'                                    *02350000
               AND '&FCN1' NE 'OSREL').ERR2                             02360000
         AIF   ('&FCN2' NE '' AND '&FCN2' NE 'TEST' AND '&FCN2' NE     *02370000
               'ASCENV' AND '&FCN2' NE 'AMODE64'                       *02380000
               AND '&FCN2' NE 'RMODE64'                                *02381000
               AND '&FCN2' NE 'ARCHLVL'                                *02390000
               AND '&FCN2' NE 'ALR'                                    *02400000
               AND '&FCN2' NE 'OSREL').ERR2                             02410000
         AIF   ('&FCN3' NE '' AND '&FCN3' NE 'TEST' AND '&FCN3' NE     *02420000
               'ASCENV' AND '&FCN3' NE 'AMODE64'                       *02430000
               AND '&FCN3' NE 'RMODE64'                                *02431000
               AND '&FCN3' NE 'ARCHLVL'                                *02440000
               AND '&FCN3' NE 'ALR'                                    *02450000
               AND '&FCN3' NE 'OSREL').ERR2                             02460000
         AIF   ('&FCN4' NE '' AND '&FCN4' NE 'TEST' AND '&FCN4' NE     *02470000
               'ASCENV' AND '&FCN4' NE 'AMODE64'                       *02480000
               AND '&FCN4' NE 'RMODE64'                                *02481000
               AND '&FCN4' NE 'ARCHLVL'                                *02490000
               AND '&FCN4' NE 'ALR'                                    *02500000
               AND '&FCN4' NE 'OSREL').ERR2                             02510000
         AIF   ('&FCN5' NE '' AND '&FCN5' NE 'TEST' AND '&FCN5' NE     *02511000
               'ASCENV' AND '&FCN5' NE 'AMODE64'                       *02512000
               AND '&FCN5' NE 'RMODE64'                                *02513000
               AND '&FCN5' NE 'ARCHLVL'                                *02514000
               AND '&FCN5' NE 'ALR'                                    *02515000
               AND '&FCN5' NE 'OSREL').ERR2                        @LOA 02516000
         AIF   (&SPECASCENV AND '&ASCENV' NE '').ERR4 TOO MANY PARMS    02520000
         AIF   (&SPECAM64 AND '&AMODE64' NE '').ERR6 TOO MANY PARMS     02530000
         AIF   (&SPECRM64 AND '&RMODE64' NE '').ERR6R TOO MANY PARMS    02531000
         AIF   (&SPECALVL AND '&ARCHLVL' NE '').ERR8 TOO MANY PARMS     02540000
         AIF   (&SPECOSREL AND '&OSREL' NE '').ERR10 TOO MANY PARMS     02550000
         AIF   (&SPECALR AND '&ALR' NE '').ERR12 TOO MANY PARMS         02560000
         AIF   ('&FCN' EQ '' AND '&ASCENV' EQ '' AND                   *02570000
               '&AMODE64' EQ '' AND                                    *02580000
               '&RMODE64' EQ '' AND                                    *02581000
               '&ARCHLVL' EQ '' AND                                    *02590000
               '&ARCHLVL_IBM_PLX' EQ '' AND                            *02591000
               '&ALR' EQ '' AND                                        *02600000
               '&OSREL' EQ '').DOTEST                              @LPC 02610000
         AIF   (NOT &SPECTEST).ASCENV GO CHECK FOR 'ASCENV'             02620000
         AGO   .DOTEST                                                  02630000
.DOPUSH  ANOP                                                           02640000
         AIF   (N'&SYSLIST GT 1).ERR1A CHECK FOR TOO MANY POSITIONALS   02650000
         AIF   ('&ASCENV' NE '').ERR1A                                  02660000
         AIF   ('&AMODE64' NE '').ERR1A                                 02670000
         AIF   ('&RMODE64' NE '').ERR1A                                 02671000
         AIF   ('&ALR' NE '').ERR1A                                     02680000
         AIF   ('&ARCHLVL' NE '').ERR1A                                 02690000
         AIF   ('&ARCHLVL_IBM_PLX' NE '').ERR1A                    @LPA 02691000
         AIF   ('&OSREL' NE '').ERR1A                                   02700000
         AIF   (&SYSSTATEI GT 255).ERRINDEXA                            02710000
         SYSSTATE TEST                                                  02720000
&SYSSTATEI SETA &SYSSTATEI+1                                            02730000
&SYSASCEA(&SYSSTATEI) SETC '&SYSASCE'                                   02740000
&SYSAM64A(&SYSSTATEI) SETC '&SYSAM64'                                   02750000
&SYSRM64A(&SYSSTATEI) SETC '&SYSRM64'                              @LOA 02751000
&SYSALVLA(&SYSSTATEI) SETA &SYSALVL                                     02760000
&SYSOSRELA(&SYSSTATEI) SETC '&SYSOSREL'                            @L2A 02770000
&SYSOSRELN(&SYSSTATEI) SETC '&SYSOSREL_NAME'                       @L2A 02780000
&SYSOPTBLA(&SYSSTATEI) SETC '&SYSSTATE_OPTABLE'                    @LJA 02781000
         MEXIT                         DONE                             02790000
.DOPOP   ANOP                                                           02800000
         AIF   (N'&SYSLIST GT 1).ERR1A CHECK FOR TOO MANY POSITIONALS   02810000
         AIF   ('&ASCENV' NE '').ERR1A                                  02820000
         AIF   ('&AMODE64' NE '').ERR1A                                 02830000
         AIF   ('&RMODE64' NE '').ERR1A                                 02831000
         AIF   ('&ALR' NE '').ERR1A                                     02840000
         AIF   ('&ARCHLVL' NE '').ERR1A                                 02850000
         AIF   ('&ARCHLVL_IBM_PLX' NE '').ERR1A                    @LPA 02851000
         AIF   ('&OSREL' NE '').ERR1A                                   02860000
         AIF   (&SYSSTATEI LT 1).ERRINDEXB                              02870000
&SYSASCE SETC '&SYSASCEA(&SYSSTATEI)'                                   02880000
&SYSAM64 SETC '&SYSAM64A(&SYSSTATEI)'                                   02890000
&SYSRM64 SETC '&SYSRM64A(&SYSSTATEI)'                              @LOA 02891000
&SYSALVL SETA &SYSALVLA(&SYSSTATEI)                                     02900000
&SYSOSREL SETC '&SYSOSRELA(&SYSSTATEI)'                            @L2A 02910000
&SYSOSREL_NAME SETC '&SYSOSRELN(&SYSSTATEI)'                       @L2A 02920000
&SYSSTATE_OPTABLE SETC '&SYSOPTBLA(&SYSSTATEI)'                    @LJA 02921000
&SYSSTATEI SETA &SYSSTATEI-1                                            02930000
         AIF   ('&SYSSTATE_POP_VERBOSE' NE '').EXIT1               @LHA 02931000
         MEXIT                         DONE                             02940000
.*                                                                      02950000
.* PROCESS TEST FUNCTION                                                02960000
.*                                                                      02970000
.DOTEST  ANOP                                                           02980000
         MEXIT                         DONE                             02990000
.*                                                                      03000000
.* PROCESS ASCENV FUNCTION                                              03010000
.*                                                                      03020000
.ASCENV  ANOP                                                           03030000
         AIF   (NOT &SPECASCENV).TRYASCEK                               03040000
&SYSASCE SETC  '&DEFAULT'                                               03050000
         AGO   .DONEASCE                                                03060000
.TRYASCEK ANOP                                                          03070000
         AIF   ('&ASCENV' EQ '').DONEASCE                               03080000
         AIF   ('&ASCENV' EQ 'P').SETASCE ASSIGN VALID VALUE            03090000
         AIF   ('&ASCENV' EQ 'AR').SETASCE ASSIGN VALID VALUE           03100000
         AIF   ('&ASCENV' EQ 'ANY').SETASCE ASSIGN VALID VALUE          03110000
         AIF   ('&ASCENV' NE '').ERR3  INVALID VALUE FOR ASCENV         03120000
.SETASCE ANOP                                                           03130000
&SYSASCE SETC '&ASCENV'                                                 03140000
.DONEASCE ANOP                                                          03150000
.*                                                                      03160000
.* PROCESS AMODE64 FUNCTION                                             03170000
.*                                                                      03180000
         AIF   (NOT &SPECAM64).TRYAM64K                                 03190000
&SYSAM64 SETC  '&DEFAULT64'                                             03200000
         AGO   .DONEAM64                                                03210000
.TRYAM64K ANOP                                                          03220000
         AIF   ('&AMODE64' EQ '').DONEAM64                              03230000
         AIF   ('&AMODE64' EQ 'YES').SETAM64 ASSIGN VALID VALUE         03240000
         AIF   ('&AMODE64' EQ 'NO').SETAM64  ASSIGN VALID VALUE         03250000
         AIF   ('&AMODE64' NE '').ERR5   INVALID VALUE FOR AMODE64      03260000
.SETAM64 ANOP                                                           03270000
&SYSAM64 SETC '&AMODE64'                                                03280000
         AIF  ('&SYSAM64' NE 'YES' OR &SYSALVL GT 1).DONEAM64           03290000
&SYSALVL SETA 2                                                         03300000
.DONEAM64 ANOP                                                          03310000
.*                                                                      03310100
.* PROCESS RMODE64 FUNCTION                                        @LOA 03310200
.*                                                                      03310300
         AIF   (NOT &SPECRM64).TRYRM64K                            @LOA 03310400
&SYSRM64 SETC  '&DEFAULT64'                                        @LOA 03310500
         AGO   .DONERM64                                           @LOA 03310600
.TRYRM64K ANOP                                                     @LOA 03310700
         AIF   ('&RMODE64' EQ '').DONERM64                         @LOA 03310800
         AIF   ('&RMODE64' EQ 'YES').SETRM64Y ASSIGN VALID VALUE   @LOA 03310900
         AIF   ('&RMODE64' EQ 'NO').SETRM64N ASSIGN VALID VALUE    @LOA 03311000
         AIF   ('&RMODE64' NE '').ERR5R  INVALID VALUE FOR RMODE64 @LOA 03311100
.SETRM64Y ANOP                                                     @LOA 03311200
&SYSRM64 SETC 'YES'                                                @LOA 03311300
&SYSAM64 SETC 'YES'                                                @LOA 03311400
         AGO   .END_SETRM64                                        @LOA 03311500
.SETRM64N ANOP                                                     @LOA 03311600
&SYSRM64 SETC 'NO'                                                 @LOA 03311700
.END_SETRM64 ANOP                                                  @LOA 03311800
         AIF  ('&SYSRM64' NE 'YES' OR &SYSALVL GT 1).DONERM64      @LOA 03311900
&SYSALVL SETA 2                                                    @LOA 03312000
.DONERM64 ANOP                                                     @LOA 03312100
.*                                                                      03312200
.* PROCESS OSREL FUNCTION                                               03312300
.*                                                                      03313000
         AIF   (NOT &SPECOSREL).TRYOSRELK                               03314000
&SYSOSREL SETC '&SYSOSREL_DEFAULT'                                      03315000
&SYSOSREL_NAME SETC '&SYSOSREL_NAMEDEF'                                 03316000
         AGO   .DONEOSREL                                               03317000
.TRYOSRELK ANOP                                                         03318000
         AIF   ('&OSREL' EQ '').DONEOSREL                               03319000
.SETOSREL ANOP                                                          03319100
&SYSOSREL_NAME SETC 'ZOSV2R5'                                      @LQA 03319200
&SYSOSREL SETC '&SYSOSREL_ZOSV2R5'                                 @LQA 03319300
          AIF  ('&OSREL' EQ 'SYSSTATE').DONEOSREL                  @LQM 03319400
          AIF  ('&OSREL' EQ 'ZOSV2R5').DONEOSREL                   @LQA 03319500
&SYSOSREL_NAME SETC 'ZOSV2R4'                                      @LNA 03319600
&SYSOSREL SETC '&SYSOSREL_ZOSV2R4'                                 @LNA 03319700
          AIF  ('&OSREL' EQ 'ZOSV2R4').DONEOSREL                   @LNA 03319900
&SYSOSREL_NAME SETC 'ZOSV2R3'                                      @LKA 03320000
&SYSOSREL SETC '&SYSOSREL_ZOSV2R3'                                 @LKA 03320100
          AIF  ('&OSREL' EQ 'MIGLIB').DONEOSREL                    @LQM 03320200
          AIF  ('&OSREL' EQ 'ZOSV2R3').DONEOSREL                   @LKA 03320300
&SYSOSREL_NAME SETC 'ZOSV2R2'                                      @LIA 03320400
&SYSOSREL SETC '&SYSOSREL_ZOSV2R2'                                 @LIA 03320500
          AIF  ('&OSREL' EQ 'ZOSV2R2').DONEOSREL                   @LIA 03320700
&SYSOSREL_NAME SETC 'ZOSV2R1'                                      @LFC 03320800
&SYSOSREL SETC '&SYSOSREL_ZOSV2R1'                                 @LFC 03320900
          AIF  ('&OSREL' EQ 'ZOSV2R1').DONEOSREL                   @LFC 03321000
&SYSOSREL_NAME SETC 'ZOSV1R13'                                     @LCA 03321100
&SYSOSREL SETC '&SYSOSREL_ZOSR13'                                  @LCA 03321200
          AIF  ('&OSREL' EQ 'ZOSV1R13').DONEOSREL                  @LCA 03321300
          AIF  ('&OSREL' EQ 'ZOSR13').DONEOSREL                    @LCA 03321400
&SYSOSREL_NAME SETC 'ZOSV1R12'                                     @LAA 03321500
&SYSOSREL SETC '&SYSOSREL_ZOSR12'                                  @LAA 03321600
          AIF  ('&OSREL' EQ 'ZOSV1R12').DONEOSREL                  @LAA 03321700
          AIF  ('&OSREL' EQ 'ZOSR12').DONEOSREL                    @LAA 03321800
&SYSOSREL_NAME SETC 'ZOSV1R11'                                     @L8A 03321900
&SYSOSREL SETC '&SYSOSREL_ZOSR11'                                  @L8A 03322000
          AIF  ('&OSREL' EQ 'ZOSV1R11').DONEOSREL                  @L8A 03322100
          AIF  ('&OSREL' EQ 'ZOSR11').DONEOSREL                    @L8A 03322200
&SYSOSREL_NAME SETC 'ZOSV1R10'                                     @L7A 03322300
&SYSOSREL SETC '&SYSOSREL_ZOSR10'                                  @P3C 03322400
          AIF  ('&OSREL' EQ 'ZOSV1R10').DONEOSREL                  @L7A 03322500
          AIF  ('&OSREL' EQ 'ZOSR10').DONEOSREL                    @L7A 03322600
&SYSOSREL_NAME SETC 'ZOSV1R9'                                      @L6A 03322700
&SYSOSREL SETC '&SYSOSREL_ZOSV1R9'                                 @L6A 03322800
          AIF  ('&OSREL' EQ 'ZOSV1R9').DONEOSREL                   @L6A 03322900
          AIF  ('&OSREL' EQ 'ZOSR9').DONEOSREL                     @L6A 03323000
&SYSOSREL_NAME SETC 'ZOSV1R8'                                      @L4A 03323100
&SYSOSREL SETC '&SYSOSREL_ZOSV1R8'                                 @L4A 03323200
          AIF  ('&OSREL' EQ 'ZOSV1R8').DONEOSREL                   @L4A 03323300
          AIF  ('&OSREL' EQ 'ZOSR8').DONEOSREL                     @L4A 03323400
&SYSOSREL_NAME SETC 'ZOSV1R7'                                      @P2C 03323500
&SYSOSREL SETC '&SYSOSREL_ZOSV1R7'                                 @P2C 03323600
          AIF  ('&OSREL' EQ 'ZOSV1R7').DONEOSREL                   @P2C 03323700
          AIF  ('&OSREL' EQ 'ZOSR7').DONEOSREL                     @L3A 03323800
.* For some releases, the name must be explicitly set,                  03323900
.* because there is more than one possibility for &OSREL.               03324000
&SYSOSREL_NAME SETC 'ZOSV1R6'                                           03324100
&SYSOSREL SETC '&SYSOSREL_ZOSV1R6'                                      03324200
          AIF  ('&OSREL' EQ 'ZOSV1R6').DONEOSREL                        03324300
          AIF  ('&OSREL' EQ 'ZOSR6').DONEOSREL                          03324400
&SYSOSREL_NAME SETC '&OSREL'                                            03324500
&SYSOSREL SETC '&SYSOSREL_ZOSV1R5'                                      03324600
          AIF  ('&OSREL' EQ 'ZOSV1R5').DONEOSREL                        03324700
&SYSOSREL SETC '&SYSOSREL_ZOSV1R4'                                      03324800
          AIF  ('&OSREL' EQ 'ZOSV1R4').DONEOSREL                        03324900
&SYSOSREL SETC '&SYSOSREL_ZOSV1R3'                                      03325000
          AIF  ('&OSREL' EQ 'ZOSV1R3').DONEOSREL                        03325100
&SYSOSREL SETC '&SYSOSREL_ZOSV1R2'                                      03325200
          AIF  ('&OSREL' EQ 'ZOSV1R2').DONEOSREL                        03325300
&SYSOSREL SETC '&SYSOSREL_ZOSV1R1'                                      03325400
          AIF  ('&OSREL' EQ 'ZOSV1R1').DONEOSREL                        03325500
&SYSOSREL SETC '&SYSOSREL_OS390'                                        03325600
          AIF  ('&OSREL' EQ 'OS390V2R10').DONEOSREL                     03325700
          AIF  (T'&OSREL NE 'N').BADOSREL                               03325800
&SYSOSREL SETC '&OSREL'                                                 03325900
.DONEOSREL ANOP                                                         03326000
.*                                                                      03327000
.* PROCESS ARCHLVL FUNCTION                                             03330000
.*                                                                      03340000
         AIF   (NOT &SPECALVL).TRYALVLK                                 03350000
&SYSALVL SETA  &DEFAULTALVL                                             03360000
         AGO   .DONEALVL                                                03370000
.TRYALVLK ANOP                                                          03380000
&TARCHLVL SETC '&ARCHLVL_IBM_PLX'                                  @LPA 03390200
         AIF   ('&ARCHLVL_IBM_PLX' NE '').USE_ARCHLVL_IBM_PLX      @LPC 03390300
&TARCHLVL SETC '&ARCHLVL'                                          @LPA 03391000
.USE_ARCHLVL_IBM_PLX ANOP                                          @LPA 03392000
         AIF  ('&TARCHLVL' EQ '').DONEALVL                         @LPC 03393000
         AIF  ('&TARCHLVL' EQ '0').SETALVL0 ASSIGN VALID VALUE     @LPC 03400000
         AIF  ('&TARCHLVL' EQ 'ESA').SETALVL0 ASSIGN VALID VALUE   @LPC 03410000
         AIF  ('&TARCHLVL' EQ '1').SETALVL1 ASSIGN VALID VALUE     @LPC 03420000
         AIF  ('&TARCHLVL' EQ 'ESAR10').SETALVL1 ASSIGN VALID VAL  @LPC 03430000
         AIF  ('&TARCHLVL' EQ '2').SETALVL2  ASSIGN VALID VALUE    @LPC 03440000
         AIF  ('&TARCHLVL' EQ 'ZARCH').SETALVL2  ASSIGN VALID VAL  @LPC 03450000
         AIF  ('&TARCHLVL' EQ 'ZARCHITECTURE').SETALVL2            @LPC 03460000
         AIF  ('&TARCHLVL' EQ 'ESAME').SETALVL2  ASSIGN VALID VAL  @LPC 03470000
         AIF  ('&TARCHLVL' EQ '3').SETALVL3  ASSIGN VALID VALUE    @LPC 03471000
         AIF  ('&TARCHLVL' EQ 'Z9').SETALVL3  ASSIGN VALID VALUE   @LPC 03472000
         AIF  ('&TARCHLVL' EQ 'ZOSV2R1').SETALVL3 ASSIGN VALUE     @LPC 03473000
         AIF  ('&TARCHLVL' EQ '4').SETALVL4  ASSIGN VALID VALUE    @LPC 03473100
         AIF  ('&TARCHLVL' EQ 'Z10').SETALVL4 ASSIGN VALID VALUE   @LPC 03473200
         AIF  ('&TARCHLVL' EQ 'ZOSV2R2').SETALVL4 ASSIGN VALUE     @LPC 03473300
         AIF  ('&TARCHLVL' EQ '5').SETALVL5  ASSIGN VALID VALUE    @LPC 03473400
         AIF  ('&TARCHLVL' EQ 'Z196').SETALVL5 ASSIGN VALID VALUE  @LPC 03473500
         AIF  ('&TARCHLVL' EQ 'Z114').SETALVL5 ASSIGN VALID VALUE  @LPC 03473600
         AIF  ('&TARCHLVL' EQ '6').SETALVL6  ASSIGN VALID VALUE    @LPC 03473700
         AIF  ('&TARCHLVL' EQ 'ZEC12').SETALVL6 ASSIGN VALID VALUE @LPC 03473800
         AIF  ('&TARCHLVL' EQ 'ZBC12').SETALVL6 ASSIGN VALID VALUE @LPC 03473900
         AIF  ('&TARCHLVL' EQ 'ZOSV2R3').SETALVL6 ASSIGN VALUE     @LPC 03474000
         AIF  ('&TARCHLVL' EQ 'ZOSV2R4').SETALVL6 ASSIGN VALUE     @LPC 03474100
         AIF  ('&TARCHLVL' EQ '7').SETALVL7  ASSIGN VALID VALUE    @LRA 03474201
         AIF  ('&TARCHLVL' EQ 'Z13').SETALVL7 ASSIGN VALID VALUE   @LRA 03474301
         AIF  ('&TARCHLVL' EQ 'ZOSV2R5').SETALVL7 ASSIGN VALUE     @LRA 03474401
         AIF  ('&TARCHLVL' EQ 'OSREL').SETALVLO ASSIGN VALUE       @LPC 03475000
         AIF  ('&TARCHLVL' NE '').ERR7   INVALID VALUE FOR ARCHLVL @LPC 03480000
.SETALVL0 ANOP                                                          03490000
&SYSALVL SETA 0                                                         03500000
         AGO   .DONEALVL                                                03510000
.SETALVL1 ANOP                                                          03520000
&SYSALVL SETA 1                                                         03530000
         AGO   .DONEALVL                                                03540000
.SETALVL2 ANOP                                                          03550000
&SYSALVL SETA 2                                                         03560000
         AGO   .DONEALVL                                                03570000
.SETALVL3 ANOP                                                     @LGA 03571000
&SYSALVL SETA 3                                                    @LGA 03572000
         AGO   .DONEALVL                                           @LGA 03573000
.SETALVL4 ANOP                                                     @LJA 03573100
&SYSALVL SETA 4                                                    @LJA 03573200
         AGO   .DONEALVL                                           @LJA 03573300
.SETALVL5 ANOP                                                     @LLA 03573400
&SYSALVL SETA 5                                                    @LLA 03573500
         AGO   .DONEALVL                                           @LLA 03573600
.SETALVL6 ANOP                                                     @LLA 03573700
&SYSALVL SETA 6                                                    @LLA 03573800
         AGO   .DONEALVL                                           @LLA 03573900
.SETALVL7 ANOP                                                     @LRA 03574001
&SYSALVL SETA 7                                                    @LRA 03574101
         AGO   .DONEALVL                                           @LRA 03574201
.SETALVLO ANOP                                                     @LGA 03574300
         AIF   ('&SYSOSREL' GE '&SYSOSREL_ZOSV2R5').SETALVL7       @LRA 03574401
         AIF   ('&SYSOSREL' GE '&SYSOSREL_ZOSV2R4').SETALVL6       @LNA 03574500
         AIF   ('&SYSOSREL' GE '&SYSOSREL_ZOSV2R3').SETALVL6       @LLA 03574600
         AIF   ('&SYSOSREL' GE '&SYSOSREL_ZOSV2R2').SETALVL4       @LJA 03574700
         AIF   ('&SYSOSREL' GE '&SYSOSREL_ZOSV2R1').SETALVL3       @LGA 03574800
         AIF   ('&SYSOSREL' GE '&SYSOSREL_ZOSV1R6').SETALVL2       @LGA 03574900
         AGO   .SETALVL1                                           @LGA 03575000
.DONEALVL ANOP                                                          03580000
         AGO   .EXIT                                                    04020000
.EXIT    ANOP                                                           04030000
         AIF   ('&SYSAM64' EQ 'YES' AND &SYSALVL LT 2).ERR9             04040000
         AIF   ('&SYSRM64' EQ 'YES' AND &SYSALVL LT 2).ERR9R       @LOA 04041000
.EXIT1   ANOP                                                           04050000
         AIF   ('&FCN' EQ 'TEST').EXITNOP IF TEST, GENERATE NO OUTPUT   04060000
         MNOTE '*        THE VALUE OF SYSSTATE IS NOW SET TO ASCENV=&SY*04070000
               SASCE AMODE64=&SYSAM64 ARCHLVL=&SYSALVL OSREL=&SYSOSREL_*04080000
               NAME RMODE64=&SYSRM64'                              @LOC 04090000
.EXITNOP ANOP                                                           04100000
         AIF   (&SYSALVL GT 2).OPTABLE_3                           @LJA 04101000
&SYSSTATE_OPTABLE SETC 'ZOP'                                       @01C 04101200
         AGO   .OPTABLE_END                                        @LJA 04101300
.OPTABLE_3 ANOP                                                    @LJA 04102000
         AIF   (&SYSALVL GT 3).OPTABLE_4                           @LJA 04103000
&SYSSTATE_OPTABLE SETC 'ZS3'                                       @LJA 04103200
         AGO   .OPTABLE_END                                        @LJA 04103400
.OPTABLE_4 ANOP                                                    @LJA 04104000
         AIF   (&SYSALVL GT 4).OPTABLE_5                           @LLA 04104100
&SYSSTATE_OPTABLE SETC 'ZS4'                                       @LJA 04104200
         AGO   .OPTABLE_END                                        @LJA 04104300
.OPTABLE_5 ANOP                                                    @LLA 04104400
         AIF   (&SYSALVL GT 5).OPTABLE_6                           @LLA 04104500
&SYSSTATE_OPTABLE SETC 'ZS5'                                       @LLA 04104600
         AGO   .OPTABLE_END                                        @LLA 04104700
.OPTABLE_6 ANOP                                                    @LLA 04104800
         AIF   (&SYSALVL GT 6).OPTABLE_7                           @LRA 04104901
&SYSSTATE_OPTABLE SETC 'ZS6'                                       @LLA 04105000
         AGO   .OPTABLE_END                                        @LRA 04105101
.OPTABLE_7 ANOP                                                    @LRA 04105201
&SYSSTATE_OPTABLE SETC 'ZS7'                                       @LRA 04105301
         AGO   .OPTABLE_END                                        @LRA 04105401
.OPTABLE_END ANOP                                                  @LJA 04106000
         MEXIT                                                          04110000
.*                                                                      04120000
.ERR1    ANOP                                                           04130000
     MNOTE 12,'*        TOO MANY POSITIONAL PARAMETERS SPECIFIED.'      04140000
         MEXIT                                                          04150000
.ERR1A   ANOP                                                           04160000
     MNOTE 12,'*        NO PARAMETERS MAY BE SPECIFIED WITH PUSH/POP.'  04170000
         MEXIT                                                          04180000
.ERR2    ANOP                                                           04190000
         MNOTE 12,'*        POSITIONAL PARAMETER MUST BE ''ASCENV'', ''*04200000
               AMODE64'', ''ARCHLVL'', OR ''TEST''.'                    04210000
         MEXIT                                                          04220000
.ERR3    MNOTE 12,'*        THE ASCENV PARAMETER MUST BE ''P'', ''AR'' *04230000
               OR ''ANY''.'                                             04240000
         MEXIT                                                          04250000
.ERR4    MNOTE 12,'*        ASCENV POSITIONAL PARAMETER MAY NOT BE SPEC*04260000
               IFIED WITH ASCENV PARAMETER.'                            04270000
.ERR5    MNOTE 12,'*        THE AMODE64 PARAMETER MUST BE ''YES'' OR ''*04280000
               NO''.'                                                   04290000
         MEXIT                                                          04300000
.ERR5R   MNOTE 12,'*        THE RMODE64 PARAMETER MUST BE ''YES'' OR ''*04301000
               NO''.'                                              @LOA 04302000
         MEXIT                                                     @LOA 04303000
.ERR6    MNOTE 12,'*        AMODE64 POSITIONAL PARAMETER MAY NOT BE SPE*04310000
               CIFIED WITH AMODE64 PARAMETER.'                          04320000
         MEXIT                                                          04321000
.ERR6R   MNOTE 12,'*        RMODE64 POSITIONAL PARAMETER MAY NOT BE SPE*04330000
               CIFIED WITH RMODE64 PARAMETER.'                     @LOA 04331000
         MEXIT                                                     @LOA 04332000
.ERR7    MNOTE 12,'*        THE ARCHLVL PARAMETER IS NOT VALID.'   @LLC 04340000
         MEXIT                                                          04350000
.ERR8    MNOTE 12,'*        ARCHLVL POSITIONAL PARAMETER MAY NOT BE SPE*04360000
               CIFIED WITH ARCHLVL PARAMETER.'                          04370000
         MEXIT                                                          04380000
.ERR9    MNOTE 12,'*        AMODE64=YES IS NOT VALID WITH ARCHLVL=1'    04390000
         MEXIT                                                          04400000
.ERR9R   MNOTE 12,'*        RMODE64=YES IS NOT VALID WITH ARCHLVL=1'    04401000
         MEXIT                                                     @LOA 04402000
.ERR10   MNOTE 12,'*        OSREL POSITIONAL PARAMETER MAY NOT BE SPECI*04410000
               FIED WITH OSREL PARAMETER.'                              04420000
         MEXIT                                                          04430000
.ERR12   MNOTE 12,'*        ALR POSITIONAL PARAMETER MAY NOT BE SPECIFI*04440000
               ED WITH ALR PARAMETER.'                                  04450000
         MEXIT                                                          04460000
.ERRINDEXA MNOTE 12,'*        SYSSTATE PUSH STACK IS FULL (255 LEVELS).*04470000
                PUSH NOT DONE'                                          04480000
         MEXIT                                                          04490000
.ERRINDEXB MNOTE 12,'*        SYSSTATE PUSH STACK IS EMPTY. POP NOT DON*04500000
               E'                                                       04510000
         MEXIT                                                          04520000
.BADOSREL MNOTE 12,'*         OSREL IS NEITHER NUMERIC NOR A DEFINED SY*04530000
               MBOLIC'                                                  04540000
         MEXIT                                                          04550000
         MEND  ,                                                     */ 04560000
*        %SYSSTATE: MACRO KEYS(ASCENV,AMODE64,ARCHLVL,OSREL,NOASM,      04570000
*                              RMODE64,                       /* @LOA*/ 04571000
*                              PUSH,POP,ASM,NOOPTACROSS); /*     @L2C*/ 04580000
*    /****************************************************************/ 04590000
*    /*                                                              */ 04600000
*    /*  START PL/S VERSION                                          */ 04610000
*    /*                                                              */ 04620000
*    /****************************************************************/ 04630000
*                                                                       04640000
*    DCL SYSSTATE_OSREL CHAR EXT;   /* For current release level @L5A*/ 04650000
*    DCL EHARC FIXED EXT;           /* DEFINE GLOBAL RETURN CODE     */ 04660000
*    DCL EHAMAPS CHAR EXT;          /* DEFINE EPILOG MAPS            */ 04670000
*    DCL SYSASCE CHAR EXT;          /* DEFINE GLOBAL ASC ENVIRONMENT */ 04680000
*    DCL SYSASCEA(255) CHAR EXT;    /* PUSH STACK                    */ 04690000
*    DCL SYSAM64 CHAR EXT;          /* DEFINE GLOBAL AMODE           */ 04700000
*    DCL SYSAM64A(255) CHAR EXT;    /* PUSH STACK                    */ 04710000
*    DCL SYSRM64 CHAR EXT;          /* DEFINE GLOBAL AMODE       @LOA*/ 04711000
*    DCL SYSRM64A(255) CHAR EXT;    /* PUSH STACK                @LOA*/ 04712000
*    DCL SYSALVL FIXED EXT;         /* DEFINE GLOBAL ARCH            */ 04720000
*    DCL SYSALVLA(255) FIXED EXT;   /* PUSH STACK                    */ 04730000
*    DCL SYSOSREL CHAR EXT;         /* DEFINE GLOBAL OS RELEASE  @L2A*/ 04740000
*    DCL SYSOSREL_NAME CHAR EXT;    /* DEFINE GLOBAL OS RELEASE  @L2A*/ 04750000
*    DCL SYSOSREL_ZOSV2R5 CHAR EXT;  /* ZOS V2R5 VALUE           @LQA*/ 04760000
*    DCL SYSOSREL_ZOSV2R4 CHAR EXT;  /* ZOS V2R4 VALUE           @LNA*/ 04760100
*    DCL SYSOSREL_ZOSV2R3 CHAR EXT;  /* ZOS V2R3 VALUE           @LKA*/ 04760200
*    DCL SYSOSREL_ZOSV2R2 CHAR EXT;  /* ZOS V2R2 VALUE           @LIA*/ 04760300
*    DCL SYSOSREL_ZOSV2R1 CHAR EXT;  /* ZOS V2R1 VALUE           @LFC*/ 04761000
*    DCL SYSOSREL_ZOSV1R13 CHAR EXT; /* ZOS R13 VALUE            @P5A*/ 04762000
*    DCL SYSOSREL_ZOSR13 CHAR EXT;  /* ZOS R13 VALUE             @LCA*/ 04763000
*    DCL SYSOSREL_ZOSV1R12 CHAR EXT; /* ZOS R12 VALUE            @P5A*/ 04770000
*    DCL SYSOSREL_ZOSR12 CHAR EXT;  /* ZOS R12 VALUE             @LAA*/ 04771000
*    DCL SYSOSREL_ZOSV1R11 CHAR EXT; /* ZOS R11 VALUE            @P5A*/ 04780000
*    DCL SYSOSREL_ZOSR11 CHAR EXT;  /* ZOS R11 VALUE             @L8A*/ 04781000
*    DCL SYSOSREL_ZOSV1R10 CHAR EXT; /* ZOS R10 VALUE            @P5C*/ 04790000
*    DCL SYSOSREL_ZOSR10 CHAR EXT;  /* ZOS R10 VALUE             @P3C*/ 04791000
*    DCL SYSOSREL_ZOSV1R9 CHAR EXT; /* ZOS R9 VALUE              @L6A*/ 04800000
*    DCL SYSOSREL_ZOSV1R8 CHAR EXT; /* ZOS R8 VALUE              @L4A*/ 04810000
*    DCL SYSOSREL_ZOSV1R7 CHAR EXT; /* ZOS R7 VALUE              @P2C*/ 04820000
*    DCL SYSOSREL_ZOSV1R6 CHAR EXT; /* ZOS R6 VALUE              @L2A*/ 04830000
*    DCL SYSOSREL_ZOSV1R5 CHAR EXT; /* ZOS R5 VALUE              @L2A*/ 04840000
*    DCL SYSOSREL_ZOSV1R4 CHAR EXT; /* ZOS R4 VALUE              @L2A*/ 04850000
*    DCL SYSOSREL_ZOSV1R3 CHAR EXT; /* ZOS R3 VALUE              @L2A*/ 04860000
*    DCL SYSOSREL_ZOSV1R2 CHAR EXT; /* ZOS R2 VALUE              @L2A*/ 04870000
*    DCL SYSOSREL_ZOSV1R1 CHAR EXT; /* ZOS R1 VALUE              @L2A*/ 04880000
*    DCL SYSOSREL_OS390 CHAR EXT; /* OS/390 VALUE                @L2A*/ 04890000
*    DCL SYSOSREL_DEFAULT CHAR EXT;/* DEFAULT VALUE FOR SYSOSREL @L2A*/ 04900000
*    DCL SYSOSREL_NAMEDEF CHAR EXT;/* DEFAULT NAME               @L2A*/ 04910000
*    DCL SYSOSRELA(255) CHAR EXT;   /* PUSH STACK                @L2A*/ 04920000
*    DCL SYSOSRELN(255) CHAR EXT;   /* PUSH STACK                @L2A*/ 04930000
*    DCL SYSSTATE_VERBOSE CHAR EXT; /*                           @LHA*/ 04931000
*    DCL SYSSTATEI FIXED EXT;       /* DEPTH OF PUSH STACK           */ 04940000
*    DCL CMT CHAR INT;              /* TO PUT OUT COMMENTS           */ 04950000
*    DCL IENV CHAR INT;             /* LOCAL COPY OF KEY ASCENV      */ 04960000
*    DCL IAM64 CHAR INT;            /* LOCAL COPY OF KEY AMODE64     */ 04970000
*    DCL IRM64 CHAR INT;            /* LOCAL COPY OF KEY RMODE64 @LOA*/ 04971000
*    DCL IALVL CHAR INT;            /* LOCAL COPY OF KEY ARCHLVL     */ 04980000
*    DCL IOSREL CHAR INT;          /* LOCAL COPY OF KEY OSREL    @L2A*/ 04990000
*    DCL IASM CHAR INT;             /* LOCAL COPY OF KEY ASM         */ 05000000
*    DCL DEFAULT CHAR INT;          /* DEFAULT VALUE FOR SYSASCE     */ 05010000
*    DCL DEFAULT64 CHAR INT;        /* DEFAULT VALUE FOR SYSAM64     */ 05020000
*    DCL DEFAULTRM64 CHAR INT;      /* DEFAULT VALUE FOR SYSRM64 @LOA*/ 05021000
*    DCL DEFAULTALVL FIXED INT;     /* DEFAULT VALUE FOR SYSALVL     */ 05030000
*    DCL INOTEXT CHAR INT;          /* USED TO BUILD MESSAGES        */ 05040000
*    DCL SPECTEST CHAR INT;         /* IS TEST SPECIFIED?            */ 05050000
*    DCL SPECASCENV CHAR INT;       /* IS ASCENV SPECIFIED?          */ 05060000
*    DCL SPECAM64 CHAR INT;         /* IS AMODE64 SPECIFIED?         */ 05070000
*    DCL SPECRM64 CHAR INT;         /* IS RMODE64 SPECIFIED?     @LOA*/ 05071000
*    DCL SPECALVL CHAR INT;         /* IS ARCHLVL SPECIFIED?         */ 05080000
*    DCL SPECOSREL CHAR INT;        /* IS OSREL SPECIFIED?       @L2A*/ 05090000
*    DCL SYSSTATE_GENCTRL CHAR EXT; /* Add CTRL to GEN           @L9A*/ 05100000
*    DCL SYSSTATE_GC_OVER CHAR EXT; /* GEN CTRL override -- when        05101000
*                        not null, GENCTRL will not be used             05102000
*                        no matter what                          @LDA*/ 05103000
*    DCL ASAXMAC_ISITPLX CHAR EXT;  /*                           @L9A*/ 05104000
*    DCL SAVE_ISITPLX CHAR;         /*                           @L9A*/ 05105000
*    DCL OSREL_GOOD FIXED;          /*                           @P4A*/ 05106000
*    OPTSTRING = 'OPTACROSS NOSETS NOREFS ';                  /* @L9A*/ 05107000
*    SAVE_ISITPLX = ASAXMAC_ISITPLX;                        /* 130413*/ 05107100
*    ANS('?ASAXMAC IsItPLX(3,1,0);') RESCAN;                /* 130413*/ 05107400
*    IF ASAXMAC_ISITPLX = 'YES' THEN                        /* 130413*/ 05107500
*      SYSSTATE_GENCTRL = 'YES';                            /* 130413*/ 05107600
*    ASAXMAC_ISITPLX = SAVE_ISITPLX;                        /* 130413*/ 05107700
*    IF SYSSTATE_GENCTRL ^= '' THEN                           /* @L9A*/ 05108000
*    DO;                                                      /* @L9A*/ 05109000
*      IF SYSSTATE_GENCTRL ^= 'YES' THEN                      /* @L9A*/ 05110000
*      DO;                                                    /* @L9A*/ 05120000
*        ANS MSG('SYSSTATE --> Macro variable SYSSTATE_GENCTRL ' !!     05130000
*                'must be YES or null') NORESCAN;             /* @L9A*/ 05140000
*        RETURN CODE(8);                                      /* @L9A*/ 05150000
*      END;                                                   /* @L9A*/ 05160000
*      SAVE_ISITPLX = ASAXMAC_ISITPLX;                        /* @L9A*/ 05170000
*      IF SYSVERSION ^= ''                                    /* @L9A*/ 05171000
*       & SYSSTATE_GC_OVER = '' THEN                          /* @LDA*/ 05171100
*      DO;                                                    /* @L9A*/ 05171200
*        ANS('?ASAXMAC IsItPLX(2,4,0);') RESCAN;              /* @L9A*/ 05171300
*        IF ASAXMAC_ISITPLX = 'YES' THEN                      /* @L9A*/ 05171400
*          GENCTRL = 'CTRL ';                                 /* @L9A*/ 05171500
*          OPTSTRING = '';                                    /* @L9A*/ 05171600
*      END;                                                   /* @L9A*/ 05171700
*      ASAXMAC_ISITPLX = SAVE_ISITPLX;                        /* @L9A*/ 05171800
*    END;                                                     /* @L9A*/ 05171900
*    EHARC = 0;                     /* INITIALIZE EXTERNAL RETURN    */ 05172000
*    /*                                                              */ 05173000
*    /*  DEFAULT VALUE FOR SYSASCE IN PLX:                           */ 05173100
*    /*                                                              */ 05173200
*    DEFAULT='P';                                                       05173300
*    /*                                                              */ 05173400
*    /*                                                              */ 05173500
*    /*  DEFAULT VALUE FOR SYSAM64 IN PLX:                           */ 05173600
*    /*                                                              */ 05173700
*    DEFAULT64='NO';                                                    05173800
*    /*                                                              */ 05173900
*    /*                                                              */ 05174000
*    /*  DEFAULT VALUE FOR SYSRM64 IN PLX:                       @LOA*/ 05174100
*    /*                                                              */ 05174200
*    DEFAULTRM64='NO';                                        /* @LOA*/ 05174300
*    /*                                                              */ 05174400
*    /*                                                              */ 05174500
*    /*  DEFAULT VALUE FOR SYSALVL IN PLX:                           */ 05175000
*    /*                                                              */ 05176000
*    DEFAULTALVL=0;                                                     05177000
*    /*                                                              */ 05178000
*    /*                                                              */ 05179000
*    /*  DEFAULT VALUE FOR SYSOSREL IN PLX:                          */ 05180000
*    /*                                                              */ 05190000
*    SYSOSREL_ZOSV2R5 = '01020500'; /* ZOS V2R5 SYSOSREL         @LQA*/ 05200000
*    SYSOSREL_ZOSV2R4 = '01020400'; /* ZOS V2R4 SYSOSREL         @LNA*/ 05200100
*    SYSOSREL_ZOSV2R3 = '01020300'; /* ZOS V2R3 SYSOSREL         @LKA*/ 05200200
*    SYSOSREL_ZOSV2R2 = '01020200'; /* ZOS V2R2 SYSOSREL         @LIA*/ 05200300
*    SYSOSREL_ZOSV2R1 = '01020100'; /* ZOS V2R1 SYSOSREL         @LFC*/ 05200400
*    SYSOSREL_ZOSV1R13 = '01011300'; /* ZOS R13 SYSOSREL         @P5A*/ 05201000
*    SYSOSREL_ZOSR13 = '01011300';  /* ZOS R13 SYSOSREL          @LCA*/ 05202000
*    SYSOSREL_ZOSV1R12 = '01011200'; /* ZOS R12 SYSOSREL         @P5A*/ 05210000
*    SYSOSREL_ZOSR12 = '01011200';  /* ZOS R12 SYSOSREL          @LAA*/ 05211000
*    SYSOSREL_ZOSV1R11 = '01011100'; /* ZOS R11 SYSOSREL         @P5A*/ 05220000
*    SYSOSREL_ZOSR11 = '01011100';  /* ZOS R11 SYSOSREL          @L8A*/ 05221000
*    SYSOSREL_ZOSV1R10 = '01011000'; /* ZOS R10 SYSOSREL         @P5C*/ 05230000
*    SYSOSREL_ZOSR10 = '01011000';  /* ZOS R10 SYSOSREL          @P3C*/ 05231000
*    SYSOSREL_ZOSV1R9 = '01010900'; /* ZOS R9 SYSOSREL           @L6A*/ 05240000
*    SYSOSREL_ZOSV1R8 = '01010800'; /* ZOS R8 SYSOSREL           @L4A*/ 05250000
*    SYSOSREL_ZOSV1R7 = '01010700'; /* ZOS R7 SYSOSREL           @P2C*/ 05260000
*    SYSOSREL_ZOSV1R6 = '01010600'; /* ZOS R6 SYSOSREL           @L2A*/ 05270000
*    SYSOSREL_ZOSV1R5 = '01010500'; /* ZOS R5 SYSOSREL           @L2A*/ 05280000
*    SYSOSREL_ZOSV1R4 = '01010400'; /* ZOS R4 SYSOSREL           @L2A*/ 05290000
*    SYSOSREL_ZOSV1R3 = '01010300'; /* ZOS R3 SYSOSREL           @L2A*/ 05300000
*    SYSOSREL_ZOSV1R2 = '01010200'; /* ZOS R2 SYSOSREL           @L2A*/ 05310000
*    SYSOSREL_ZOSV1R1 = '01010100'; /* ZOS R1 SYSOSREL           @L2A*/ 05320000
*    SYSOSREL_OS390 = '00021000'; /* OS/390 R10 SYSOSREL         @L2A*/ 05330000
*    SYSOSREL_DEFAULT = '00000000'; /*                           @L2A*/ 05340000
*    SYSOSREL_NAMEDEF = '00000000'; /*                           @L2A*/ 05350000
*    /*                                                              */ 05360000
*    /****************************************************************/ 05370000
*    /*                                                              */ 05370100
*    /*  CURRENT VALUE FOR SYSSTATE_OSREL in PLX:                    */ 05370200
*    /*                                                              */ 05370300
*    SYSSTATE_OSREL = SYSOSREL_ZOSV2R5; /*                       @LQC*/ 05370400
*    /*                                                              */ 05370500
*    /****************************************************************/ 05370600
*    INOTEXT='. NO TEXT IS GENERATED.';                                 05370700
*                                                                       05370800
*    IF MACLABEL ^= '' THEN         /* LABEL ON MACRO CALL?          */ 05370900
*      ANS(MACLABEL) COL(MACLMAR) NORESCAN; /* YES, PUT OUT LABEL    */ 05371000
*                                                                       05372000
*    IF MACLIST(1) ^= 'TEST' THEN   /* IF 'TEST', PUT OUT NO COMMENT */ 05373000
*      DO;                                                              05374000
*        CMT = '? ' !! MACLABEL !! ' ' !! MACNAME !! ' ' !! MACLIST !!  05375000
*          ' ' !! MACKEYS;                                              05376000
*        ANS(COMMENT(CMT)) COL(MACLMAR) NORESCAN;                       05377000
*      END;                                                             05378000
*    IF SYSASCE = '' THEN SYSASCE = DEFAULT;               /*    @LQA*/ 05379000
*    IF SYSAM64 = '' THEN SYSAM64 = DEFAULT64;             /*    @LQA*/ 05380000
*    IF SYSRM64 = '' THEN SYSRM64 = DEFAULTRM64;           /*    @LOA*/ 05381000
*    IF SYSALVL = 0 THEN SYSALVL = DEFAULTALVL;            /*    @LQA*/ 05390000
*    IF SYSOSREL = '' THEN                                 /*    @L2A*/ 05400000
*    DO;                                                   /*    @L2A*/ 05410000
*       SYSOSREL = SYSOSREL_DEFAULT;                       /*    @L2A*/ 05420000
*       SYSOSREL_NAME = SYSOSREL_NAMEDEF;                  /*    @L2A*/ 05430000
*    END;                                                  /*    @L2A*/ 05440000
*                                                                       05450000
*    /****************************************************************/ 05460000
*    /*                                                              */ 05470000
*    /*  PROCESS THE MACLIST                                         */ 05480000
*    /*                                                              */ 05490000
*    /****************************************************************/ 05500000
*    IF MACLIST ^= '' THEN                                              05510000
*      DO;                                                              05520000
*        IF NUMBER(MACLIST) > 1 THEN /* TOO MANY POSITIONAL PARMS.?  */ 05530000
*          DO;                      /* YES, WRITE MESSAGE            */ 05540000
*            ANS MSG('AHA0073 TOO MANY POSITIONAL PARAMETERS ARE ' !!   05550000
*              'SPECIFIED. ONE IS PERMITTED.') NORESCAN;                05560000
*            CMT='TOO MANY POSITIONAL PARAMETERS ARE ' !!               05570000
*              'SPECIFIED. ONE IS PERMITTED.';                          05580000
*            ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);                05590000
*            EHARC = 12;            /* INDICATE SERIOUS ERROR        */ 05600000
*          END;                                                         05610000
*        FUNCTION=MACLIST(1);                                           05620000
*        IF MACLIST(1) ^= 'TEST' &                                      05630000
*           MACLIST(1) ^= 'PUSH' &                                      05640000
*           MACLIST(1) ^= 'POP' THEN                                    05650000
*          DO;                      /* INVALID POSITIONAL PARAMETER  */ 05660000
*            ANS MSG('AHA0043 MACLIST(1) MUST BE ' !!                   05670000
*              QUOTE('TEST, PUSH, OR POP') !! INOTEXT) NORESCAN;        05680000
*            CMT='MACLIST(1) MUST BE ' !!                               05690000
*              QUOTE('TEST, PUSH, OR POP') !! INOTEXT;                  05700000
*            ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);                05710000
*            EHARC = 12;            /* INDICATE SERIOUS ERROR        */ 05720000
*            FUNCTION = 'BAD_FUNCTION';                                 05730000
*          END;                                                         05740000
*        IF (FUNCTION = 'PUSH' & POP ^= '')                             05750000
*         ! (FUNCTION = 'POP' & PUSH ^= '') THEN                        05760000
*        DO;                                                            05770000
*              ANS MSG('AHA0023 ''PUSH'' IS INVALID WITH ''POP'''       05780000
*                !! INOTEXT) NORESCAN;                                  05790000
*              CMT='''PUSH'' IS INVALID WITH ''POP''' !! INOTEXT;       05800000
*              ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);              05810000
*              EHARC = 12;                                              05820000
*        END;                                                           05830000
*      END;                                                             05840000
*      ELSE IF PUSH = 'PUSH' THEN                                       05850000
*      DO;                                                              05860000
*        FUNCTION='PUSH';                                               05870000
*      END;                                                             05880000
*      ELSE IF POP = 'POP' THEN                                         05890000
*      DO;                                                              05900000
*        FUNCTION='POP';                                                05910000
*      END;                                                             05920000
*                                                                       05930000
*    IF FUNCTION ^= '' THEN                                             05940000
*    DO;                            /* FUNCTION ^= ''                */ 05950000
*                                                                       05960000
*        IF FUNCTION ^= 'BAD_FUNCTION' THEN             /*           */ 05970000
*        DO;                        /* TEST/PUSH/POP                 */ 05980000
*          IF ASCENV ^= '' THEN     /* ASCENV WITH TEST/PUSH/POP        05990000
*                                                       IS INVALID   */ 06000000
*            DO;                                                        06010000
*              ANS MSG('AHA0023 ''ASCENV'' IS INVALID WITH ' !!         06020000
*                QUOTE(FUNCTION)                                        06030000
*                !! INOTEXT) NORESCAN;                                  06040000
*              CMT='''ASCENV'' IS INVALID WITH ' !!                     06050000
*                QUOTE(FUNCTION) !! INOTEXT;                            06060000
*              ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);              06070000
*              EHARC = 12;                                              06080000
*            END;                                                       06090000
*          IF AMODE64 ^= '' THEN    /* AMODE64 WITH TEST/PUSH/POP       06100000
*                                                        IS INVALID  */ 06110000
*            DO;                                                        06120000
*              ANS MSG('AHA0023 ''AMODE64'' IS INVALID WITH ' !!        06130000
*                QUOTE(FUNCTION)                                        06140000
*                !! INOTEXT) NORESCAN;                                  06150000
*              CMT='''AMODE64'' IS INVALID WITH ' !!                    06160000
*                QUOTE(FUNCTION) !! INOTEXT;                            06170000
*              ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);              06180000
*              EHARC = 12;                                              06190000
*            END;                                                       06200000
*          IF RMODE64 ^= '' THEN    /* RMODE64 WITH TEST/PUSH/POP       06201000
*                                      IS INVALID                @LOA*/ 06202000
*            DO;                                                        06203000
*              ANS MSG('AHA0023 ''RMODE64'' IS INVALID WITH ' !!        06204000
*                QUOTE(FUNCTION)                                        06205000
*                !! INOTEXT) NORESCAN;                                  06206000
*              CMT='''RMODE64'' IS INVALID WITH ' !!                    06207000
*                QUOTE(FUNCTION) !! INOTEXT;                            06208000
*              ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);              06209000
*              EHARC = 12;                                              06209100
*            END;                                                       06209200
*          IF ARCHLVL ^= '' THEN    /* ARCHLVL WITH TEST/PUSH/POP       06210000
*                                                        IS INVALID  */ 06220000
*            DO;                                                        06230000
*              ANS MSG('AHA0023 ''ARCHLVL'' IS INVALID WITH ' !!        06240000
*                QUOTE(FUNCTION)                                        06250000
*                !! INOTEXT) NORESCAN;                                  06260000
*              CMT='''ARCHLVL'' IS INVALID WITH ' !!                    06270000
*                QUOTE(FUNCTION) !! INOTEXT;                            06280000
*              ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);              06290000
*              EHARC = 12;                                              06300000
*            END;                                                       06310000
*          IF ASM ^= '' THEN /* IF OTHER PARAMETERS                     06320000
*                              ARE SPECIFIED, PUT OUT WARNING        */ 06330000
*            DO;                                                        06340000
*              ANS MSG('AHA0051 ''ASM'' WITH ' !!                       06350000
*                QUOTE(FUNCTION) !! ' IS IGNORED.')                     06360000
*              NORESCAN;                                                06370000
*              CMT='''ASM'' WITH ' !!                                   06380000
*                QUOTE(FUNCTION) !! ' IS IGNORED.';                     06390000
*              ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);              06400000
*              IF EHARC = 0 THEN                                        06410000
*                EHARC = 4;                                             06420000
*            END;                                                       06430000
*        END;                       /* FUNCTION = TEST/PUSH/POP      */ 06440000
*        IF FUNCTION = 'TEST' THEN                                      06450000
*          RETURN CODE(EHARC);                                          06460000
*    END;                           /* FUNCTION ^= ''                */ 06470000
*                                                                       06480000
*    /****************************************************************/ 06490000
*    /*                                                              */ 06500000
*    /*  VALIDITY CHECK THE ASM KEYWORD                              */ 06510000
*    /*                                                              */ 06520000
*    /****************************************************************/ 06530000
*                                                                       06540000
*    IF ASM = '' THEN                                                   06550000
*      IASM = 'YES';                /* SET DEFAULT IF OMITTED        */ 06560000
*    ELSE                           /* ASM WAS SPECIFIED             */ 06570000
*                                                                       06580000
*      DO;                          /* ANALYZE THE ASM KEYWORD       */ 06590000
*                                                                       06600000
*        IF NUMBER(ASM) > 1 THEN    /* TOO MANY SUBOPERANDS          */ 06610000
*          DO;                                                          06620000
*            ANS MSG('AHA0073 ''ASM'' PARAMETER HAS TOO MANY ' !!       06630000
*              'SUBPARAMETERS' !! INOTEXT) NORESCAN;                    06640000
*            CMT='''ASM'' PARAMETER HAS TOO MANY ' !!                   06650000
*              'SUBPARAMETERS' !! INOTEXT;                              06660000
*            ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);                06670000
*            EHARC = 12;            /* INDICATE SERIOUS ERROR        */ 06680000
*          END;                                                         06690000
*                                                                       06700000
*        IF ASM(1) = 'YES' THEN                                         06710000
*          IASM = 'YES';            /* SET YES IF SPECIFIED          */ 06720000
*        ELSE                                                           06730000
*          IF ASM(1) = 'NO' THEN                                        06740000
*            IASM = 'NO';           /* SET NO IF SPECIFIED           */ 06750000
*          ELSE                                                         06760000
*            DO;                    /* PROCESS INVALID VALUE         */ 06770000
*              ANS MSG('AHA0043 ''ASM'' MUST BE ''YES'' OR ''NO''' !!   06780000
*                INOTEXT) NORESCAN;                                     06790000
*              CMT='''ASM'' MUST BE ''YES'' OR ''NO''' !! INOTEXT;      06800000
*              ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);              06810000
*              EHARC = 12;          /* INDICATE SERIOUS ERROR        */ 06820000
*            END;                                                       06830000
*      END;                                                             06840000
*    /****************************************************************/ 06850000
*    /*                                                              */ 06860000
*    /*  VALIDITY CHECK THE ASCENV KEYWORD                           */ 06870000
*    /*                                                              */ 06880000
*    /****************************************************************/ 06890000
*                                                                       06900000
*    IF ASCENV ^= '' THEN                                               06910000
*      DO;                          /* ANALYZE THE ASCENV KEYWORD    */ 06920000
*                                                                       06930000
*        IF NUMBER(ASCENV) > 1 THEN /* TOO MANY SUBOPERANDS          */ 06940000
*          DO;                                                          06950000
*            ANS MSG('AHA0073 ''ASCENV'' PARAMETER HAS TOO MANY ' !!    06960000
*              'SUBPARAMETERS' !! INOTEXT) NORESCAN;                    06970000
*            CMT='''ASCENV'' PARAMETER HAS TOO MANY ' !!                06980000
*              'SUBPARAMETERS' !! INOTEXT;                              06990000
*            ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);                07000000
*            EHARC = 12;            /* INDICATE SERIOUS ERROR        */ 07010000
*          END;                                                         07020000
*                                                                       07030000
*        IF ASCENV(1) ^= 'P' & ASCENV(1) ^= 'AR'& ASCENV(1)^='ANY'      07040000
*          & ASCENV ^= 'ASCENV' THEN                                    07050000
*          DO;                      /* PROCESS INVALID VALUE         */ 07060000
*            ANS MSG('AHA0043 ''ASCENV'' MUST BE ''P'' , ''AR'', '      07070000
*            !!'''ANY'', OR HAVE NO VALUE' !! INOTEXT) NORESCAN;        07080000
*            CMT='''ASCENV'' MUST BE ''P'' , ''AR'', '                  07090000
*            !!'''ANY'', OR HAVE NO VALUE' !! INOTEXT;                  07100000
*            ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);                07110000
*            EHARC = 12;            /* INDICATE SERIOUS ERROR        */ 07120000
*          END;                                                         07130000
*      END;                         /* ASCENV ^= ''                  */ 07140000
*                                                                       07150000
*    /****************************************************************/ 07160000
*    /*                                                              */ 07170000
*    /*  VALIDITY CHECK THE AMODE64 KEYWORD                          */ 07180000
*    /*                                                              */ 07190000
*    /****************************************************************/ 07200000
*                                                                       07210000
*    IF AMODE64 ^= '' THEN                                              07220000
*      DO;                          /* ANALYZE THE AMODE64 KEYWORD   */ 07230000
*                                                                       07240000
*        IF NUMBER(AMODE64) > 1 THEN /* TOO MANY SUBOPERANDS         */ 07250000
*          DO;                                                          07260000
*            ANS MSG('AHA0073 ''AMODE64'' PARAMETER HAS TOO MANY ' !!   07270000
*              'SUBPARAMETERS' !! INOTEXT) NORESCAN;                    07280000
*            CMT='''AMODE64'' PARAMETER HAS TOO MANY ' !!               07290000
*              'SUBPARAMETERS' !! INOTEXT;                              07300000
*            ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);                07310000
*            EHARC = 12;            /* INDICATE SERIOUS ERROR        */ 07320000
*          END;                                                         07330000
*                                                                       07340000
*        IF AMODE64(1) ^= 'YES' & AMODE64(1) ^= 'NO'                    07350000
*          & AMODE64 ^= 'AMODE64' THEN                                  07360000
*          DO;                      /* PROCESS INVALID VALUE         */ 07370000
*            ANS MSG('AHA0043 ''AMODE64'' MUST BE ''YES'', ''NO'', '    07380000
*            !!'OR HAVE NO VALUE' !! INOTEXT) NORESCAN;                 07390000
*            CMT='''AMODE64'' MUST BE ''YES'', ''NO'', '                07400000
*            !!'OR HAVE NO VALUE' !! INOTEXT;                           07410000
*            ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);                07420000
*            EHARC = 12;            /* INDICATE SERIOUS ERROR        */ 07430000
*          END;                                                         07440000
*      END;                         /* AMODE64 ^= ''                 */ 07450000
*                                                                       07451000
*    /****************************************************************/ 07452000
*    /*                                                              */ 07453000
*    /*  VALIDITY CHECK THE RMODE64 KEYWORD                      @LOA*/ 07454000
*    /*                                                              */ 07455000
*    /****************************************************************/ 07456000
*                                                                       07457000
*    IF RMODE64 ^= '' THEN                                    /* @LOA*/ 07458000
*      DO;                          /* ANALYZE THE RMODE64 KEYWORD   */ 07459000
*                                                                       07459100
*        IF NUMBER(RMODE64) > 1 THEN /* TOO MANY SUBOPERANDS         */ 07459200
*          DO;                                                          07459300
*            ANS MSG('AHA0073 ''RMODE64'' PARAMETER HAS TOO MANY ' !!   07459400
*              'SUBPARAMETERS' !! INOTEXT) NORESCAN;                    07459500
*            CMT='''RMODE64'' PARAMETER HAS TOO MANY ' !!               07459600
*              'SUBPARAMETERS' !! INOTEXT;                              07459700
*            ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);                07459800
*            EHARC = 12;            /* INDICATE SERIOUS ERROR        */ 07459900
*          END;                                                         07460000
*                                                                       07460100
*        IF RMODE64(1) ^= 'YES' & RMODE64(1) ^= 'NO'                    07460200
*          & RMODE64 ^= 'RMODE64' THEN                                  07460300
*          DO;                      /* PROCESS INVALID VALUE         */ 07460400
*            ANS MSG('AHA0043 ''RMODE64'' MUST BE ''YES'', ''NO'', '    07460500
*            !!'OR HAVE NO VALUE' !! INOTEXT) NORESCAN;                 07460600
*            CMT='''RMODE64'' MUST BE ''YES'', ''NO'', '                07460700
*            !!'OR HAVE NO VALUE' !! INOTEXT;                           07460800
*            ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);                07460900
*            EHARC = 12;            /* INDICATE SERIOUS ERROR        */ 07461000
*          END;                                                         07461100
*      END;                         /* RMODE64 ^= ''                 */ 07461200
*                                                                       07462000
*    /****************************************************************/ 07470000
*    /*                                                              */ 07480000
*    /*  VALIDITY CHECK THE ARCHLVL KEYWORD                          */ 07490000
*    /*                                                              */ 07500000
*    /****************************************************************/ 07510000
*                                                                       07520000
*    IF ARCHLVL ^= '' THEN                                              07530000
*      DO;                          /* ANALYZE THE ARCHLVL KEYWORD   */ 07540000
*                                                                       07550000
*        IF NUMBER(ARCHLVL) > 1 THEN /* TOO MANY SUBOPERANDS         */ 07560000
*          DO;                                                          07570000
*            ANS MSG('AHA0073 ''ARCHLVL'' PARAMETER HAS TOO MANY ' !!   07580000
*              'SUBPARAMETERS' !! INOTEXT) NORESCAN;                    07590000
*            CMT='''ARCHLVL'' PARAMETER HAS TOO MANY ' !!               07600000
*              'SUBPARAMETERS' !! INOTEXT;                              07610000
*            ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);                07620000
*            EHARC = 12;            /* INDICATE SERIOUS ERROR        */ 07630000
*          END;                                                         07640000
*                                                                       07650000
*        IF ARCHLVL(1) ^= '0' &                                         07660000
*           ARCHLVL(1) ^= '1' & ARCHLVL(1) ^= '2'                       07670000
*         & ARCHLVL(1) ^= '3'                                 /* @LGA*/ 07671000
*         & ARCHLVL(1) ^= '4'                                 /* @LJA*/ 07672000
*         & ARCHLVL(1) ^= '5'                                 /* @LLA*/ 07673000
*         & ARCHLVL(1) ^= '6'                                 /* @LLA*/ 07674000
*         & ARCHLVL(1) ^= '7'                                 /* @LRA*/ 07675001
*         & ARCHLVL(1) ^= 'ESA' & ARCHLVL(1) ^= 'ESAME'                 07680000
*         & ARCHLVL(1) ^= 'ZARCH'                                       07690000
*         & ARCHLVL(1) ^= 'ZARCHITECTURE'                               07700000
*         & ARCHLVL(1) ^= 'Z9'                                /* @LGA*/ 07701000
*         & ARCHLVL(1) ^= 'Z10'                               /* @LJA*/ 07701100
*         & ARCHLVL(1) ^= 'Z196'                              /* @LLA*/ 07701200
*         & ARCHLVL(1) ^= 'Z114'                              /* @LLA*/ 07701300
*         & ARCHLVL(1) ^= 'ZEC12'                             /* @LLA*/ 07701400
*         & ARCHLVL(1) ^= 'ZBC12'                             /* @LLA*/ 07701500
*         & ARCHLVL(1) ^= 'Z13'                               /* @LRA*/ 07701601
*         & ARCHLVL(1) ^= 'ZOSV2R1'                           /* @LGA*/ 07702000
*         & ARCHLVL(1) ^= 'ZOSV2R2'                           /* @LJA*/ 07703000
*         & ARCHLVL(1) ^= 'ZOSV2R3'                           /* @LLA*/ 07704000
*         & ARCHLVL(1) ^= 'ZOSV2R4'                           /* @LNA*/ 07705000
*         & ARCHLVL(1) ^= 'ZOSV2R5'                           /* @LQA*/ 07706000
*         & ARCHLVL(1) ^= 'ESAR10'                            /* @LGC*/ 07710000
*         & ARCHLVL(1) ^= 'OSREL' THEN                        /* @LGA*/ 07711000
*          DO;                      /* PROCESS INVALID VALUE         */ 07720000
*           ANS MSG('AHA0043 ARCHLVL IS NOT VALID'                      07730000
*            !! INOTEXT) NORESCAN;                                      07741000
*            CMT='ARCHLVL IS NOT VALID'                       /* @LLC*/ 07750000
*            !! INOTEXT;                                      /* @LGC*/ 07761000
*            ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);                07770000
*            EHARC = 12;            /* INDICATE SERIOUS ERROR        */ 07780000
*          END;                                                         07790000
*      END;                         /* ARCHLVL ^= ''                 */ 07800000
*                                                                       07810000
*    /****************************************************************/ 07820000
*    /*                                                              */ 07830000
*    /*  PROCESS THE KEYWORD PARAMETERS                              */ 07840000
*    /*                                                              */ 07850000
*    /****************************************************************/ 07860000
*    IF EHARC < 12 THEN             /* CHECK RETURN CODE             */ 07870000
*      DO;                                                              07880000
*    IF FUNCTION = 'PUSH' THEN      /* PUSH?                         */ 07890000
*    DO;                            /* PUSH                          */ 07900000
*      IF SYSSTATEI > 255 THEN      /* LIMIT EXCEEDED?               */ 07910000
*      DO;                          /* LIMIT EXCEEDED                */ 07920000
*        CMT='AHA0073 SYSSTATE PUSH STACK IS FULL ' !!                  07930000
*          '(255 LEVELS). PUSH NOT DONE.';                              07940000
*        ANS MSG(CMT) NORESCAN;                                         07950000
*        ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);                    07960000
*        EHARC = 12;                /* INDICATE ERROR                */ 07970000
*      END;                         /* LIMIT EXCEEDED                */ 07980000
*      ELSE DO;                     /* LIMIT NOT EXCEEDED            */ 07990000
*        SYSSTATEI = SYSSTATEI + 1; /* NEXT STACK LEVEL              */ 08000000
*        SYSASCEA(SYSSTATEI) = SYSASCE;  /* SAVE SYSASCE             */ 08010000
*        SYSAM64A(SYSSTATEI) = SYSAM64;  /* SAVE SYSAM64             */ 08020000
*        SYSRM64A(SYSSTATEI) = SYSRM64;  /* SAVE SYSRM64         @LOA*/ 08021000
*        SYSALVLA(SYSSTATEI) = SYSALVL;  /* SAVE SYSALVL             */ 08030000
*        SYSOSRELA(SYSSTATEI) = SYSOSREL; /* SAVE SYSOSREL       @L2A*/ 08040000
*        SYSOSRELN(SYSSTATEI) = SYSOSREL_NAME;  /*               @L2A*/ 08050000
*        IF NOASM = '' THEN         /*                           @L2A*/ 08060000
*          IF NOOPTACROSS = '' THEN /*                           @L2A*/ 08070000
*            ANS('GEN ' !! GENCTRL !! OPTSTRING !!                      08080000
*                    '(SYSSTATE PUSH);')                                08090000
*              COL(10) NORESCAN;    /*                           @L9C*/ 08100000
*          ELSE                                                         08110000
*            ANS('GEN ' !! GENCTRL !!                                   08120000
*                    '(SYSSTATE PUSH);')                                08130000
*              COL(10) NORESCAN;    /*                           @L9C*/ 08140000
*      END;                         /* LIMIT NOT EXCEEDED            */ 08150000
*      RETURN CODE(EHARC);          /* RETURN                        */ 08160000
*    END;                           /* PUSH                          */ 08170000
*    IF FUNCTION = 'POP' THEN       /* POP?                          */ 08180000
*    DO;                            /* POP                           */ 08190000
*      IF SYSSTATEI < 1 THEN        /* NO ENTRIES?                   */ 08200000
*      DO;                          /* NO ENTRIES                    */ 08210000
*        CMT='AHA0073 SYSSTATE PUSH STACK IS EMPTY. ' !!                08220000
*          'POP NOT DONE.';                                             08230000
*        ANS MSG(CMT) NORESCAN;                                         08240000
*        ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);                    08250000
*        EHARC = 12;                /* INDICATE ERROR                */ 08260000
*      END;                         /* NO ENTRIES                    */ 08270000
*      ELSE DO;                     /* VALID ENTRY                   */ 08280000
*        IF NOASM = '' THEN         /*                           @L2A*/ 08290000
*          IF NOOPTACROSS = '' THEN /*                           @L2A*/ 08300000
*            ANS('GEN ' !! GENCTRL !! OPTSTRING !!                      08310000
*                    '(SYSSTATE POP);')                                 08320000
*              COL(10) NORESCAN;    /*                           @L9C*/ 08330000
*          ELSE                                                         08340000
*            ANS('GEN ' !! GENCTRL !!                                   08350000
*                    '(SYSSTATE POP);')                                 08360000
*              COL(10) NORESCAN;    /*                           @L9C*/ 08370000
*        SYSASCE = SYSASCEA(SYSSTATEI);  /* SAVE SYSASCE             */ 08380000
*        SYSAM64 = SYSAM64A(SYSSTATEI);  /* SAVE SYSAM64             */ 08390000
*        SYSRM64 = SYSRM64A(SYSSTATEI);  /* SAVE SYSRM64         @LOA*/ 08391000
*        SYSALVL = SYSALVLA(SYSSTATEI);  /* SAVE SYSALVL             */ 08400000
*        SYSOSREL = SYSOSRELA(SYSSTATEI); /* SAVE SYSOSREL       @L2A*/ 08410000
*        SYSOSREL_NAME = SYSOSRELN(SYSSTATEI);  /*               @L2A*/ 08420000
*        SYSSTATEI = SYSSTATEI - 1; /* PREVIOUS STACK LEVEL          */ 08430000
*        IF SYSSTATE_VERBOSE ^= '' THEN                       /* @LHA*/ 08431000
*          GOTO POPVERBOSE;                                   /* @LHA*/ 08432000
*      END;                         /* VALID ENTRY                   */ 08440000
*      RETURN CODE(EHARC);          /* RETURN                        */ 08451000
*    END;                           /* POP                           */ 08460000
*        IF ASCENV ^= '' THEN       /* ASCENV SPECIFIED              */ 08470000
*        DO;                        /* ASCENV SPECIFIED              */ 08480000
*          IF ASCENV = 'ASCENV' THEN /* USE DEFAULT                  */ 08490000
*            SYSASCE = DEFAULT;     /* SET DEFAULT SYSASCE           */ 08500000
*                                                                       08510000
*          ELSE                     /* SYSSTATE WAS PROVIDED         */ 08520000
*            SYSASCE=ASCENV(1);     /* SET ASC ENVIRONMENT           */ 08530000
*                                                                       08540000
*        END;                       /* ASCENV SPECIFIED              */ 08550000
*        IF AMODE64 ^= '' THEN      /* AMODE64 SPECIFIED             */ 08560000
*        DO;                        /* AMODE64 SPECIFIED             */ 08570000
*        IF AMODE64 = 'AMODE64' THEN /* USE DEFAULT                  */ 08580000
*          SYSAM64 = DEFAULT64;     /* SET DEFAULT SYSAM64           */ 08590000
*                                                                       08600000
*        ELSE DO;                   /* SYSSTATE WAS PROVIDED         */ 08610000
*          SYSAM64=AMODE64(1);      /* SET AMODE ENVIRONMENT         */ 08620000
*                                                                       08630000
*          IF SYSAM64 = 'YES' & SYSALVL < 2 THEN         /*          */ 08640000
*            SYSALVL = 2;           /*                               */ 08650000
*        END;                       /* SYSSTATE WAS PROVIDED         */ 08660000
*        END;                       /* AMODE64 SPECIFIED             */ 08670000
*        IF RMODE64 ^= '' THEN      /* RMODE64 SPECIFIED         @LOA*/ 08670100
*        DO;                        /* RMODE64 SPECIFIED         @LOA*/ 08670200
*        IF RMODE64 = 'RMODE64' THEN /* USE DEFAULT              @LOA*/ 08670300
*          SYSRM64 = DEFAULTRM64;   /* SET DEFAULT SYSRM64       @LOA*/ 08670400
*                                                                       08670500
*        ELSE DO;                   /* SYSSTATE WAS PROVIDED     @LOA*/ 08670600
*          SYSRM64=RMODE64(1);      /* SET RMODE ENVIRONMENT     @LOA*/ 08670700
*                                                                       08670800
*          IF SYSRM64 = 'YES' THEN  /* RMODE64=YES?              @LOA*/ 08670900
*            SYSAM64 = 'YES';       /* SET AMODE 64              @LOA*/ 08671000
*          IF SYSRM64 = 'YES' & SYSALVL < 2 THEN         /*      @LOA*/ 08671100
*            SYSALVL = 2;           /*                           @LOA*/ 08671200
*        END;                       /* SYSSTATE WAS PROVIDED     @LOA*/ 08671300
*        END;                       /* RMODE64 SPECIFIED         @LOA*/ 08671400
*        IF OSREL ^= '' THEN        /* OSREL SPECIFIED               */ 08671500
*        DO;                        /* OSREL SPECIFIED               */ 08672000
*        IF OSREL = 'OSREL' THEN /* USE DEFAULT                      */ 08673000
*        DO;                     /* USE DEFAULT                      */ 08674000
*          SYSOSREL = SYSOSREL_DEFAULT; /* SET DEFAULT SYSOSREL      */ 08675000
*          SYSOSREL_NAME = SYSOSREL_NAMEDEF;                            08676000
*                                                                       08677000
*        END;                    /* USE DEFAULT                      */ 08678000
*        ELSE DO;                                                       08679000
*          OSREL_GOOD = 0;                                    /* @P4A*/ 08679100
*          SYSOSREL_NAME = OSREL(1);                                    08679200
*                                                                       08679300
*          IF OSREL(1) = 'SYSSTATE' !                         /* @LQP*/ 08679400
*             OSREL(1) = 'ZOSV2R5' THEN                       /* @LQA*/ 08679500
*          DO;                                                /* @LQP*/ 08679600
*            OSREL_GOOD = 1;                                  /* @LQP*/ 08679700
*            SYSOSREL = SYSOSREL_ZOSV2R5;                     /* @LQA*/ 08679800
*            SYSOSREL_NAME = 'ZOSV2R5';                       /* @LQA*/ 08679900
*          END;                                               /* @LQP*/ 08680000
*                                                                       08680100
*          IF OSREL(1) = 'ZOSV2R4' THEN                       /* @LQC*/ 08680300
*          DO;                                                /* @LNP*/ 08680400
*            OSREL_GOOD = 1;                                  /* @LNP*/ 08680500
*            SYSOSREL = SYSOSREL_ZOSV2R4;                     /* @LNA*/ 08680600
*            SYSOSREL_NAME = 'ZOSV2R4';                       /* @LNA*/ 08680700
*          END;                                               /* @LNP*/ 08680800
*                                                                       08680900
*          IF OSREL(1) = 'MIGLIB' !                           /* @LQM*/ 08681000
*             OSREL(1) = 'ZOSV2R3' THEN                       /* @LQC*/ 08681100
*          DO;                                                /* @LKP*/ 08681200
*            OSREL_GOOD = 1;                                  /* @LKP*/ 08681300
*            SYSOSREL = SYSOSREL_ZOSV2R3;                     /* @LKA*/ 08681400
*            SYSOSREL_NAME = 'ZOSV2R3';                       /* @LKA*/ 08681500
*          END;                                               /* @LKP*/ 08681600
*                                                                       08681700
*          IF OSREL(1) = 'ZOSV2R2' THEN                       /* @LQC*/ 08681900
*          DO;                                                /* @LIP*/ 08682000
*            OSREL_GOOD = 1;                                  /* @LIP*/ 08682100
*            SYSOSREL = SYSOSREL_ZOSV2R2;                     /* @LIA*/ 08682200
*            SYSOSREL_NAME = 'ZOSV2R2';                       /* @LIA*/ 08682300
*          END;                                               /* @LIP*/ 08682400
*                                                                       08682500
*          IF OSREL(1) = 'ZOSV2R1' THEN                       /* @LIC*/ 08682600
*          DO;                                                /* @LEP*/ 08682700
*            OSREL_GOOD = 1;                                  /* @LEP*/ 08682800
*            SYSOSREL = SYSOSREL_ZOSV2R1;                     /* @LFC*/ 08682900
*            SYSOSREL_NAME = 'ZOSV2R1';                       /* @LFC*/ 08683000
*          END;                                               /* @LEP*/ 08683100
*                                                                       08683200
*          IF OSREL(1) = 'ZOSV1R13' !                         /* @LEC*/ 08683300
*             OSREL(1) = 'ZOSR13' THEN                        /* @LCA*/ 08683400
*          DO;                                                /* @LCP*/ 08683500
*            OSREL_GOOD = 1;                                  /* @LCP*/ 08683600
*            SYSOSREL = SYSOSREL_ZOSR13;                      /* @LCA*/ 08683700
*            SYSOSREL_NAME = 'ZOSV1R13';                      /* @LCA*/ 08683800
*          END;                                               /* @LAP*/ 08683900
*                                                                       08684000
*          IF OSREL(1) = 'ZOSV1R12' !                         /* @LCC*/ 08684100
*             OSREL(1) = 'ZOSR12' THEN                        /* @LAA*/ 08684200
*          DO;                                                /* @LAP*/ 08684300
*            OSREL_GOOD = 1;                                  /* @LAP*/ 08684400
*            SYSOSREL = SYSOSREL_ZOSR12;                      /* @LAA*/ 08684500
*            SYSOSREL_NAME = 'ZOSV1R12';                      /* @LAA*/ 08684600
*          END;                                               /* @LAP*/ 08684700
*                                                                       08684800
*          IF OSREL(1) = 'ZOSV1R11' !                         /* @L8A*/ 08684900
*             OSREL(1) = 'ZOSR11' THEN                        /* @L8A*/ 08685000
*          DO;                                                /* @L8P*/ 08685100
*            OSREL_GOOD = 1;                                  /* @P4A*/ 08685200
*            SYSOSREL = SYSOSREL_ZOSR11;                      /* @L8A*/ 08685300
*            SYSOSREL_NAME = 'ZOSV1R11';                      /* @L8A*/ 08685400
*          END;                                               /* @L8P*/ 08685500
*                                                             /* @P4D*/ 08685600
*          IF OSREL(1) = 'ZOSV1R10' !                         /* @L7A*/ 08685700
*             OSREL(1) = 'ZOSR10' THEN                        /* @L7A*/ 08685800
*          DO;                                                /* @L7P*/ 08685900
*            OSREL_GOOD = 1;                                  /* @P4A*/ 08686000
*            SYSOSREL = SYSOSREL_ZOSR10;                      /* @P3C*/ 08686100
*            SYSOSREL_NAME = 'ZOSV1R10';                      /* @L7A*/ 08686200
*          END;                                               /* @L7P*/ 08686300
*                                                             /* @P4D*/ 08686400
*          IF OSREL(1) = 'ZOSV1R9' !                          /* @L6A*/ 08686500
*             OSREL(1) = 'ZOSR9' THEN                         /* @L6A*/ 08686600
*          DO;                                                /* @L6P*/ 08686700
*            OSREL_GOOD = 1;                                  /* @P4A*/ 08686800
*            SYSOSREL = SYSOSREL_ZOSV1R9;                     /* @L6A*/ 08686900
*            SYSOSREL_NAME = 'ZOSV1R9';                       /* @L6A*/ 08687000
*          END;                                               /* @L6P*/ 08687100
*                                                             /* @P4D*/ 08687200
*          IF OSREL(1) = 'ZOSV1R8' !                          /* @L4A*/ 08687300
*             OSREL(1) = 'ZOSR8' THEN                         /* @L4A*/ 08687400
*          DO;                                                /* @L4P*/ 08687500
*            OSREL_GOOD = 1;                                  /* @P4A*/ 08687600
*            SYSOSREL = SYSOSREL_ZOSV1R8;                     /* @L4A*/ 08687700
*            SYSOSREL_NAME = 'ZOSV1R8';                       /* @L4A*/ 08687800
*          END;                                               /* @L4P*/ 08687900
*                                                             /* @P4D*/ 08688000
*          IF OSREL(1) = 'ZOSV1R7' !                          /* @P2C*/ 08688100
*             OSREL(1) = 'ZOSR7' THEN                         /* @L3A*/ 08688200
*          DO;                                                /* @L3P*/ 08688300
*            OSREL_GOOD = 1;                                  /* @P4A*/ 08688400
*            SYSOSREL = SYSOSREL_ZOSV1R7;                     /* @P2C*/ 08688500
*            SYSOSREL_NAME = 'ZOSV1R7';                       /* @P2C*/ 08688600
*          END;                                               /* @L3P*/ 08688700
*                                                             /* @P4D*/ 08688800
*          IF OSREL(1) = 'ZOSV1R6' !                                    08688900
*             OSREL(1) = 'ZOSR6' THEN                                   08689000
*          DO;                                                /* @P4A*/ 08689100
*            OSREL_GOOD = 1;                                  /* @P4A*/ 08689200
*            SYSOSREL = SYSOSREL_ZOSV1R6;                               08689300
*            SYSOSREL_NAME = 'ZOSV1R6';                                 08689400
*          END;                                               /* @P4A*/ 08689500
*          IF OSREL(1) = 'ZOSV1R5' THEN                       /* @P4C*/ 08689600
*          DO;                                                /* @P4A*/ 08689700
*            OSREL_GOOD = 1;                                  /* @P4A*/ 08689800
*            SYSOSREL = SYSOSREL_ZOSV1R5;                               08689900
*          END;                                               /* @P4A*/ 08690000
*          IF OSREL(1) = 'ZOSV1R4' THEN                       /* @P4C*/ 08690100
*          DO;                                                /* @P4A*/ 08690200
*            OSREL_GOOD = 1;                                  /* @P4A*/ 08690300
*            SYSOSREL = SYSOSREL_ZOSV1R4;                               08690400
*          END;                                               /* @P4A*/ 08690500
*          IF OSREL(1) = 'ZOSV1R3' THEN                       /* @P4C*/ 08690600
*          DO;                                                /* @P4A*/ 08690700
*            OSREL_GOOD = 1;                                  /* @P4A*/ 08690800
*            SYSOSREL = SYSOSREL_ZOSV1R3;                               08690900
*          END;                                               /* @P4A*/ 08691000
*          IF OSREL(1) = 'ZOSV1R2' THEN                       /* @P4C*/ 08691100
*          DO;                                                /* @P4A*/ 08691200
*            OSREL_GOOD = 1;                                  /* @P4A*/ 08691300
*            SYSOSREL = SYSOSREL_ZOSV1R2;                               08691400
*          END;                                               /* @P4A*/ 08691500
*          IF OSREL(1) = 'ZOSV1R1' THEN                       /* @P4C*/ 08691600
*          DO;                                                /* @P4A*/ 08691700
*            OSREL_GOOD = 1;                                  /* @P4A*/ 08691800
*            SYSOSREL = SYSOSREL_ZOSV1R1;                               08691900
*          END;                                               /* @P4A*/ 08692000
*          IF OSREL(1) = 'OS390V2R10' THEN                    /* @P4C*/ 08692100
*          DO;                                                /* @P4A*/ 08692200
*            OSREL_GOOD = 1;                                  /* @P4A*/ 08692300
*            SYSOSREL = SYSOSREL_OS390;                                 08692400
*          END;                                               /* @P4A*/ 08692500
*          IF OSREL_GOOD = 0 THEN                                       08692600
*          DO;                                                          08692700
*            IF INDEX('0123456789',OSREL(1,1:1)) = 0 THEN     /* @P4C*/ 08692800
*            DO;                                                        08692900
*              ANS MSG('AHA0043 ''OSREL' !! OSREL !! ''' IS NEITHER '   08693000
*               !!'NUMERIC NOR A DEFINED SYMBOLIC.') NORESCAN;          08693100
*              CMT='''OSREL' !! OSREL !! ''' IS NEITHER '               08693200
*               !!'NUMERIC NOR A DEFINED SYMBOLIC.';                    08693300
*              ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);              08693400
*              EHARC = 12;          /* INDICATE SERIOUS ERROR        */ 08693500
*            END;                                                       08693600
*            ELSE                                                       08693700
*              SYSOSREL=OSREL(1);     /* SET OSREL                   */ 08693800
*          END;                                                         08693900
*        END;                                                           08694000
*        END;                       /* OSREL SPECIFIED               */ 08694100
*        IF ARCHLVL ^= '' THEN      /* ARCHLVL SPECIFIED             */ 08694200
*        DO;                        /* ARCHLVL SPECIFIED             */ 08695000
*        IF ARCHLVL = 'ARCHLVL' THEN /* USE DEFAULT                  */ 08700000
*          SYSALVL = DEFAULTALVL;   /* SET DEFAULT SYSALVL           */ 08710000
*                                                                       08720000
*        ELSE IF ARCHLVL(1) = 'ESA' ! ARCHLVL(1) = '0' THEN  /*      */ 08730000
*          SYSALVL=0;                 /* SET ARCHLVL                 */ 08740000
*        ELSE IF ARCHLVL(1) = 'ESAR10' ! ARCHLVL(1) = '1' THEN  /*   */ 08750000
*          SYSALVL=1;                 /* SET ARCHLVL                 */ 08760000
*        ELSE IF ARCHLVL(1) = 'Z9' ! ARCHLVL(1) = '3' !                 08761000
*                ARCHLVL(1) = 'ZOSV2R1' THEN                  /* @LGA*/ 08761100
*          SYSALVL=3;                 /* SET ARCHLVL             @LGA*/ 08762000
*        ELSE IF ARCHLVL(1) = 'Z10' ! ARCHLVL(1) = '4' !                08762100
*                ARCHLVL(1) = 'ZOSV2R2' THEN                  /* @LJA*/ 08762200
*          SYSALVL=4;                 /* SET ARCHLVL             @LJA*/ 08762300
*        ELSE IF ARCHLVL(1) = 'Z196' ! ARCHLVL(1) = '5' !               08762500
*                ARCHLVL(1) = 'Z114' THEN                     /* @LLA*/ 08762600
*          SYSALVL=5;                 /* SET ARCHLVL             @LLA*/ 08762700
*        ELSE IF ARCHLVL(1) = 'ZEC12' ! ARCHLVL(1) = '6' !              08762800
*                ARCHLVL(1) = 'ZBC12' !                                 08762900
*                ARCHLVL(1) = 'ZOSV2R3' !                     /* @LNC*/ 08763000
*                ARCHLVL(1) = 'ZOSV2R4' THEN                  /* @LNA*/ 08763100
*          SYSALVL=6;                 /* SET ARCHLVL             @LLA*/ 08763300
*        ELSE IF ARCHLVL(1) = 'Z13' ! ARCHLVL(1) = '7' !      /* @LRA*/ 08763401
*                ARCHLVL(1) = 'ZOSV2R5' THEN                  /* @LRA*/ 08763801
*          SYSALVL=7;                 /* SET ARCHLVL             @LRA*/ 08763901
*        ELSE IF ARCHLVL(1) = 'OSREL' THEN                    /* @LGA*/ 08764000
*        DO;                                                  /* @LGA*/ 08764100
*          IF SYSOSREL >= SYSOSREL_ZOSV2R5 THEN               /* @LRA*/ 08764201
*            SYSALVL = 7;                                     /* @LRA*/ 08764301
*          ELSE IF SYSOSREL >= SYSOSREL_ZOSV2R3 THEN          /* @LRC*/ 08764401
*            SYSALVL = 6;                                     /* @LLA*/ 08764500
*          ELSE IF SYSOSREL >= SYSOSREL_ZOSV2R2 THEN          /* @LJA*/ 08764600
*            SYSALVL = 4;                                     /* @LJA*/ 08764700
*          ELSE IF SYSOSREL >= SYSOSREL_ZOSV2R1 THEN          /* @LGA*/ 08764800
*            SYSALVL = 3;                                     /* @LGA*/ 08764900
*          ELSE IF SYSOSREL >= SYSOSREL_ZOSV1R6 THEN          /* @LGA*/ 08765000
*            SYSALVL = 2;                                     /* @LGA*/ 08765100
*          ELSE                                               /* @LGA*/ 08765200
*            SYSALVL = 1;                                     /* @LGA*/ 08765300
*        END;                                                 /* @LGA*/ 08766000
*        ELSE                         /* "ZARCHITECTURE" OR "2"      */ 08770000
*          SYSALVL=2;                 /* SET ARCHLVL                 */ 08780000
*                                                                       08790000
*        END;                       /* ARCHLVL SPECIFIED             */ 08800000
* POPVERBOSE:;                                                /* @LHA*/ 09301000
*        CMT='THE VALUE OF SYSSTATE IS NOW SET TO ASCENV('              09310000
*             !! SYSASCE !! ') AMODE64('!!SYSAM64!!')'                  09320000
*             !! ' RMODE64('!!SYSRM64!!')'                    /* @LOA*/ 09321000
*             !! ' ARCHLVL(' !! CHAR(SYSALVL) !! ')'                    09330000
*             !! ' OSREL(' !! SYSOSREL_NAME !! ').';                    09340000
*        ANS (COMMENT(CMT)) COL(MACLMAR+4) NORESCAN;                    09350000
* IF FUNCTION = 'POP' THEN                                    /* @LHA*/ 09351000
*   RETURN CODE(EHARC);                                       /* @LHA*/ 09352000
*        IF SYSASCE^='P' &          /* FOR AR OR ANY                 */ 09360000
*           INDEX(EHAMAPS,'AR@')=0 THEN /* MAPS NOT SPECIFIED YET    */ 09370000
*          EHAMAPS=EHAMAPS!!'AR@';  /* GET AR-MODE DECLARES          */ 09380000
*                                                                       09390000
*        IF SYSAM64 = 'YES' &                                           09400000
*           SYSALVL < 2 THEN                                            09410000
*        DO;                                                            09420000
*            ANS MSG('AHA0043 ''AMODE64(YES)'' IS NOT VALID WITH '      09430000
*             !!'''ARCHLVL(1)''.') NORESCAN;                            09440000
*            CMT='''AMODE64(YES)'' IS NOT VALID WITH'                   09450000
*             !!'''ARCHLVL(1)''.';                                      09460000
*            ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);                09470000
*            EHARC = 12;            /* INDICATE SERIOUS ERROR        */ 09480000
*        END;                                                           09490000
*        IF SYSRM64 = 'YES' &                                 /* @LOA*/ 09491000
*           SYSALVL < 2 THEN                                  /* @LOA*/ 09492000
*        DO;                                                  /* @LOA*/ 09493000
*            ANS MSG('AHA0043 ''RMODE64(YES)'' IS NOT VALID WITH '      09494000
*             !!'''ARCHLVL(1)''.') NORESCAN;                  /* @LOA*/ 09495000
*            CMT='''RMODE64(YES)'' IS NOT VALID WITH'                   09496000
*             !!'''ARCHLVL(1)''.';                            /* @LOA*/ 09497000
*            ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);      /* @LOA*/ 09498000
*            EHARC = 12;            /* INDICATE SERIOUS ERROR    @LOA*/ 09499000
*        END;                                                 /* @LOA*/ 09499100
*        IF IASM = 'YES' THEN       /* ASM VERSION IS REQUESTED      */ 09500000
*        DO;                                                            09510000
*          SYSSTATEC = 'SYSSTATE ASCENV=';                              09520000
*          IF ASCENV ^= '' THEN                                         09530000
*            IF ASCENV = 'ASCENV' THEN /* IN CASE THE PLX AND           09540000
*                                         ASSEMBLER DEFAULTS ARE        09550000
*                                         DIFFERENT, PASS THE PLX       09560000
*                                         DEFAULT                    */ 09570000
*              SYSSTATEC = SYSSTATEC !! DEFAULT;                        09580000
*            ELSE                                                       09590000
*              SYSSTATEC = SYSSTATEC !! ASCENV(1);                      09600000
*          SYSSTATEC = SYSSTATEC !! ',AMODE64=';                        09610000
*          IF AMODE64 ^= '' THEN                                        09620000
*            IF AMODE64 = 'AMODE64' THEN /* IN CASE THE PLX AND         09630000
*                                         ASSEMBLER DEFAULTS ARE        09640000
*                                         DIFFERENT, PASS THE PLX       09650000
*                                         DEFAULT                    */ 09660000
*              SYSSTATEC = SYSSTATEC !! DEFAULT64;                      09670000
*            ELSE                                                       09680000
*              SYSSTATEC = SYSSTATEC !! AMODE64(1);                     09690000
*          SYSSTATEC = SYSSTATEC !! ',RMODE64=';              /* @LOA*/ 09691000
*          IF RMODE64 ^= '' THEN                              /* @LOA*/ 09692000
*            IF RMODE64 = 'RMODE64' THEN /* IN CASE THE PLX AND         09693000
*                                         ASSEMBLER DEFAULTS ARE        09694000
*                                         DIFFERENT, PASS THE PLX       09695000
*                                         DEFAULT                @LOA*/ 09696000
*              SYSSTATEC = SYSSTATEC !! DEFAULTRM64;          /* @LOA*/ 09697000
*            ELSE                                             /* @LOA*/ 09698000
*              SYSSTATEC = SYSSTATEC !! RMODE64(1);           /* @LOA*/ 09699000
*          SYSSTATEC = SYSSTATEC !! ',ARCHLVL=';                        09700000
*          IF ARCHLVL ^= '' THEN                                        09710000
*            IF ARCHLVL = 'ARCHLVL' THEN /* IN CASE THE PLX AND         09720000
*                                         ASSEMBLER DEFAULTS ARE        09730000
*                                         DIFFERENT, PASS THE PLX       09740000
*                                         DEFAULT                    */ 09750000
*              SYSSTATEC = SYSSTATEC !! CHAR(DEFAULTALVL);              09760000
*            ELSE                                                       09770000
*              SYSSTATEC = SYSSTATEC !! ARCHLVL(1);                     09780000
*          SYSSTATEC = SYSSTATEC !! ',';                      /* @LOA*/ 09790000
*          SYSSTATEC2 = 'OSREL=';                             /* @LOC*/ 09791000
*          IF OSREL ^= '' THEN                                          09800000
*            IF OSREL = 'OSREL' THEN /* IN CASE THE PLX AND             09810000
*                                         ASSEMBLER DEFAULTS ARE        09820000
*                                         DIFFERENT, PASS THE PLX       09830000
*                                         DEFAULT                    */ 09840000
*              SYSSTATEC2 = SYSSTATEC2 !! SYSOSREL_NAME;      /* @LOC*/ 09850000
*            ELSE                                                       09860000
*              SYSSTATEC2 = SYSSTATEC2 !! OSREL(1);           /* @LOC*/ 09870000
* /* Set up SYSSTATEC so that it has continuation character      @LOA*/ 09871000
*          SYSSTATEC = SYSSTATEC !!                                     09880000
*            '                                                     '    09880100
*            ;                                                /* @LOA*/ 09880200
*          SYSSTATEC = SYSSTATEC(1:61) !! '**';               /* @LOA*/ 09880300
*          IF NOASM = '' THEN       /*                           @L2A*/ 09881000
*            IF NOOPTACROSS = '' &                                      09890000
*               SYSVERSION ^= '' &                                      09900000
*               SYSRULESMOD ^= 'PL/S-III ' THEN                         09910000
*            DO;                                                        09920000
*              ANS('GEN ' !! GENCTRL !! OPTSTRING !! ';')               09930000
*                COL(10) NORESCAN;  /* CREATE GENERATED VERSION      */ 09940000
*              ANS(SYSSTATEC)                                           09950000
*                COL(10) NORESCAN;  /* CREATE GENERATED VERSION      */ 09960000
*              ANS(SYSSTATEC2)                                          09960100
*                COL(MACGLMAR+15) NORESCAN;                   /* @LOA*/ 09960200
*              ANS('@ENDGEN')                                           09961000
*                COL(10) NORESCAN;                                      09962000
*              ANS(' ') SKIP NORESCAN;                                  09963000
*            END;                                                       09970000
*            ELSE DO;                                                   09980000
*              ANS('GEN ' !! GENCTRL !! ';')                            09990000
*                COL(10) NORESCAN;  /* CREATE GENERATED VERSION      */ 10000000
*              ANS(SYSSTATEC)                                           10001000
*                COL(10) NORESCAN;  /* CREATE GENERATED VERSION      */ 10002000
*              ANS(SYSSTATEC2)                                          10003000
*                COL(MACGLMAR+15) NORESCAN;                   /* @LOA*/ 10004000
*              ANS('@ENDGEN')                                           10021000
*                COL(10) NORESCAN;                                      10022000
*              ANS(' ') SKIP NORESCAN;                                  10023000
*            END;                                                       10030000
*        END;                                                           10040000
*                                                                       10050000
*      END;                         /* KEYWORD PARMS AND NO SERIOUS     10060000
*                                      ERRORS                        */ 10070000
*                                                                       10080000
*    RETURN CODE(EHARC);                                                10090000
*    %END SYSSTATE;                                                     10100000
