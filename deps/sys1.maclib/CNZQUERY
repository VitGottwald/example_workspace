*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  CNZQUERY                              -11/23/09-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Consoles Query                                * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5694-A01 COPYRIGHT IBM CORP. 2005, 2010                         * 00001200
*                                                                     * 00001300
* STATUS= HBB7770                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      CNZQUERY provides an interface to obtain information about the * 00002100
*      consoles component.                                            * 00002200
*                                                                     * 00002300
*      Information is returned in an answer area defined by mapping   * 00002400
*      macro CNZMYQUA.                                                * 00002500
*                                                                     * 00002600
*01* EXTERNAL CLASSIFICATION:                                         * 00002700
*                                                                     * 00002800
*02* PI:   BASE                                                       * 00002900
*                                                                     * 00003000
*02* NONE: FIELDS                                                     * 00003100
*          INTINFO                                                    * 00003200
*                                                                     * 00003300
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00003400
*                                                                     * 00003500
*01* ENVIRONMENT:                                                     * 00003600
*                                                                     * 00003700
*                                                                     * 00003800
*      Minimum authorization: Supervisor state or PKM 0.              * 00003900
*                                                                     * 00004000
*      Dispatchable unit mode: Task mode.                             * 00004100
*                                                                     * 00004200
*      Cross Memory Mode: Any primary, any home, and any secondary    * 00004300
*                        address space.                               * 00004400
*                                                                     * 00004500
*      AMODE:            31-bit.                                      * 00004600
*                                                                     * 00004700
*      ASC mode:         Primary or Access Register.                  * 00004800
*                                                                     * 00004900
*      Interrupt status: Enabled for I/O and external interrupts.     * 00005000
*                                                                     * 00005100
*      Locks:            The caller must not be locked.               * 00005200
*                                                                     * 00005300
*      Control parameters: Control parameters must be in the primary  * 00005400
*                        address space or, for AR-mode callers, must  * 00005500
*                        be in an address/data space that is          * 00005600
*                        addressable through a public entry on the    * 00005700
*                        caller's dispatchable unit access list       * 00005800
*                        (DU-AL).                                     * 00005900
*                                                                     * 00006000
*                        The user-provided answer area (via           * 00006100
*                        ANSAREAALET) must be in a 2G data space on   * 00006200
*                        the caller's dispatchable unit access list   * 00006300
*                        or must be a 2G common-area data space.      * 00006400
*                                                                     * 00006500
*                                                                     * 00006600
*                                                                     * 00006700
*01* PROGRAMMING REQUIREMENTS:                                        * 00006800
*                                                                     * 00006900
*    The caller must include the CNZMYQUA macro to get a mapping of   * 00007000
*    the output area which is in the data space designated by the     * 00007100
*    ANSAREAALET keyword. This macro also includes symbolic constants * 00007200
*    for the return and reason codes provided by this service.        * 00007300
*                                                                     * 00007400
*    It is recommended that, after using the returned information,    * 00007500
*    the pages in the ANSAREAALET data space be released via the      * 00007600
*    RELEASE parameter of DSPSERV.                                    * 00007700
*                                                                     * 00007800
*01* RESTRICTIONS:                                                    * 00007900
*                                                                     * 00008000
*                                                                     * 00008100
*    o   No EUT FRRs may be established.                              * 00008200
*                                                                     * 00008300
*                                                                     * 00008400
*                                                                     * 00008500
*01* INPUT REGISTER INFORMATION:                                      * 00008600
*                                                                     * 00008700
*    Before issuing the CNZQUERY macro, the caller does not have to   * 00008800
*    place any information into any general purpose register (GPR)    * 00008900
*    unless using it in register notation for a particular parameter, * 00009000
*    or using it as a base register.                                  * 00009100
*                                                                     * 00009200
*    In that case, the caller does not have to place any information  * 00009300
*    into any access register (AR) unless using it in register        * 00009400
*    notation for a particular parameter, or using it as a base       * 00009500
*    register.                                                        * 00009600
*                                                                     * 00009700
*01* OUTPUT REGISTER INFORMATION:                                     * 00009800
*                                                                     * 00009900
*    When control returns to the caller, the GPRs contain:            * 00010000
*                                                                     * 00010100
*                                                                     * 00010200
*    REGISTER    CONTENTS                                             * 00010300
*                                                                     * 00010400
*    0           reason code if GR15 is not 0                         * 00010500
*                                                                     * 00010600
*    1           Used as a work register by the system                * 00010700
*                                                                     * 00010800
*    2-13        unchanged                                            * 00010900
*                                                                     * 00011000
*    14          Used as a work register by the system                * 00011100
*                                                                     * 00011200
*    15          return code                                          * 00011300
*                                                                     * 00011400
*                                                                     * 00011500
*                                                                     * 00011600
*    When control returns to the caller, the ARs contain:             * 00011700
*                                                                     * 00011800
*                                                                     * 00011900
*    REGISTER    CONTENTS                                             * 00012000
*                                                                     * 00012100
*    0-1         Used as work registers by the system                 * 00012200
*                                                                     * 00012300
*    2-13        unchanged                                            * 00012400
*                                                                     * 00012500
*    14-15       Used as work registers by the system                 * 00012600
*                                                                     * 00012700
*                                                                     * 00012800
*                                                                     * 00012900
*01* PERFORMANCE IMPLICATIONS:                                        * 00013000
*    None.                                                            * 00013100
*                                                                     * 00013200
*01* SYNTAX:                                                          * 00013300
*                                                                     * 00013400
*Ýxlabel¨  CNZQUERY  ÐÝ WTOR=NO¨                                      * 00013500
*                    ¿Ý,WTOR=YES¨                                     * 00013600
*                    ÐÝ,AMRF=NO¨                                      * 00013700
*                    ¿Ý,AMRF=YES¨                                     * 00013800
*                    ÐÝ,INTINFO=NO¨                                   * 00013900
*                    ¿Ý,INTINFO=YES¨                                  * 00014000
*                      ,ANSAREAALET=xansareaalet                      * 00014100
*                     Ý,RETCODE=xretcode¨                             * 00014200
*                     Ý,RSNCODE=xrsncode¨                             * 00014300
*                     Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨         * 00014400
*                    ÐÝ,MF=S¨                                         * 00014500
*                    ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                  * 00014600
*                    ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                    * 00014700
*                                                                     * 00014800
*                                                                     * 00014900
*      Where:                                                         * 00015000
*                                                                     * 00015100
*                                                                     * 00015200
*      Ýxlabel¨                                                       * 00015300
*          is an optional symbol, starting in column 1, that is the   * 00015400
*          name on the CNZQUERY macro invocation.  The name must      * 00015500
*          conform to the rules for an ordinary assembler language    * 00015600
*          symbol.                                                    * 00015700
*          DEFAULT: No name.                                          * 00015800
*                                                                     * 00015900
*                                                                     * 00016000
*                                                                     * 00016100
*                                                                     * 00016200
*      ÝWTOR=»NO!YESº¨                                                * 00016300
*          is an optional keyword input that indicates whether or not * 00016400
*          information about WTORs is to be returned.                 * 00016500
*          DEFAULT: NO                                                * 00016600
*                                                                     * 00016700
*                                                                     * 00016800
*          ÝWTOR=NO¨                                                  * 00016900
*              Do not return information about WTORs.                 * 00017000
*                                                                     * 00017100
*          ÝWTOR=YES¨                                                 * 00017200
*              Return information about WTORs.  A queue of OREs is    * 00017300
*              returned, each of which has field ORERWQE which        * 00017400
*              contains the address of the associated WQE only when   * 00017500
*              bits ORESUSP and OREINUSE are both off. When either of * 00017600
*              those bits is on, there is no associated WQE, as the   * 00017700
*              building of the ORE is not yet complete.  The address  * 00017800
*              of the first ORE is in field CNZMYQUAH_First_ORE_Addr. * 00017900
*              The ORE is mapped by IHAORE and the address of the     * 00018000
*              next ORE is in field ORELKP, with a zero value in      * 00018100
*              ORELKP indicating that this is the last element of the * 00018200
*              queue.  The WQE is mapped by IHAWQE.  Bit              * 00018300
*              Cnzmyquah_Valid_WTOR_INFO is set to 1 when the         * 00018400
*              information is successfully returned.                  * 00018500
*                                                                     * 00018600
*                                                                     * 00018700
*                                                                     * 00018800
*                                                                     * 00018900
*                                                                     * 00019000
*                                                                     * 00019100
*      ÝAMRF=»NO!YESº¨                                                * 00019200
*          is an optional keyword input that indicates whether or not * 00019300
*          information about the action message retention facility    * 00019400
*          (AMRF) is to be returned.                                  * 00019500
*          DEFAULT: NO                                                * 00019600
*                                                                     * 00019700
*                                                                     * 00019800
*          ÝAMRF=NO¨                                                  * 00019900
*              Do not return information about the AMRF.              * 00020000
*                                                                     * 00020100
*          ÝAMRF=YES¨                                                 * 00020200
*              Return information about the AMRF. Three queues of     * 00020300
*              WQEs are returned.  The address of the first immediate * 00020400
*              action WQE is in field CNZMYQUAH_First_IA_WQE_Addr.    * 00020500
*              The address of the first eventual action WQE is in     * 00020600
*              field CNZMYQUAH_First_EA_WQE_Addr.  The address of the * 00020700
*              first critical eventual action WQE is in field         * 00020800
*              CNZMYQUAH_First_CEA_WQE_Addr.  The WQE is mapped by    * 00020900
*              IHAWQE and the address of the next WQE is in field     * 00021000
*              WQELKP, with a zero value in WQELKP indicating that    * 00021100
*              this is the last element of the queue.  In addition,   * 00021200
*              some status information about AMRF is returned (field  * 00021300
*              CNZMYQUAH_AMRF_Status).  Bit Cnzmyquah_Valid_AMRF_INFO * 00021400
*              is set to 1 when the information is successfully       * 00021500
*              returned.                                              * 00021600
*                                                                     * 00021700
*                                                                     * 00021800
*                                                                     * 00021900
*                                                                     * 00022000
*                                                                     * 00022100
*                                                                     * 00022200
*      ÝINTINFO=»NO!YESº¨                                             * 00022300
*          is an optional keyword input that indicates whether or not * 00022400
*          certain information, reserved for IBM use, is to be        * 00022500
*          returned. This keyword is reserved for IBM use.            * 00022600
*          DEFAULT: NO                                                * 00022700
*                                                                     * 00022800
*                                                                     * 00022900
*          ÝINTINFO=NO¨                                               * 00023000
*              Do not return internal information.                    * 00023100
*                                                                     * 00023200
*          ÝINTINFO=YES¨                                              * 00023300
*              Return internal information.                           * 00023400
*                                                                     * 00023500
*                                                                     * 00023600
*                                                                     * 00023700
*                                                                     * 00023800
*                                                                     * 00023900
*                                                                     * 00024000
*      ANSAREAALET=xansareaalet                                       * 00024100
*          is the name (RS-type), or address in register (2)-(12), of * 00024200
*          a required fullword input which contains the ALET of the   * 00024300
*          data space which is to contain the output information. The * 00024400
*          data space must be on the dispatchable unit access list or * 00024500
*          be a common area data space.  It must include the address  * 00024600
*          range x'1000' through x'7FFFEFFF' (i.e., it is a 2G data   * 00024700
*          space). It may contain the 0 and x'7FFFF000' pages.  The   * 00024800
*          area is mapped by macro CNZMYQUA. The header area, mapped  * 00024900
*          by dsect CNZMYQUAHDR, will begin at location x'1000' in    * 00025000
*          the data space.                                            * 00025100
*                                                                     * 00025200
*                                                                     * 00025300
*                                                                     * 00025400
*                                                                     * 00025500
*      ÝRETCODE=xretcode¨                                             * 00025600
*          is the name (RS-type) of an optional fullword output       * 00025700
*          variable, or register (2)-(12) or (15), into which the     * 00025800
*          return code is to be copied from GPR 15.  If you specify   * 00025900
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00026000
*          the value will be left in GPR 15.                          * 00026100
*                                                                     * 00026200
*                                                                     * 00026300
*                                                                     * 00026400
*                                                                     * 00026500
*      ÝRSNCODE=xrsncode¨                                             * 00026600
*          is the name (RS-type) of an optional fullword output       * 00026700
*          variable into which the reason code is to be copied from   * 00026800
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00026900
*          R0 (within or without parentheses), the value will be left * 00027000
*          in GPR 0.                                                  * 00027100
*                                                                     * 00027200
*                                                                     * 00027300
*                                                                     * 00027400
*                                                                     * 00027500
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00027600
*          is an optional byte input decimal value in the "0-0" range * 00027700
*          that specifies the macro version.  PLISTVER is the only    * 00027800
*          key allowed on the list form of MF and determines which    * 00027900
*          parameter list is generated.  Note that MAX may be         * 00028000
*          specified instead of a number, and the parameter list will * 00028100
*          be of the largest size currently supported. This size may  * 00028200
*          grow from release to release (thus possibly affecting the  * 00028300
*          amount of storage needed by your program).  If your        * 00028400
*          program can tolerate this, IBM recommends that you always  * 00028500
*          specify MAX when creating the list form parameter list as  * 00028600
*          that will ensure that the list form parameter list is      * 00028700
*          always long enough to hold whatever parameters might be    * 00028800
*          specified on the execute form.                             * 00028900
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00029000
*          default is the lowest version which allows all of the      * 00029100
*          parameters specified on the invocation to be processed.    * 00029200
*                                                                     * 00029300
*                                                                     * 00029400
*                                                                     * 00029500
*                                                                     * 00029600
*      ÝMF=»S!L!Eº¨                                                   * 00029700
*          is an optional keyword input which specifies the macro     * 00029800
*          form.                                                      * 00029900
*          DEFAULT: S                                                 * 00030000
*                                                                     * 00030100
*                                                                     * 00030200
*          ÝMF=S¨                                                     * 00030300
*              specifies the standard form of the macro.  The "S"     * 00030400
*              form generates code to put the parameters into an      * 00030500
*              in-line parameter list and invoke the desired service. * 00030600
*              Full checking for required macro keys is done along    * 00030700
*              with supplying defaults for omitted optional           * 00030800
*              parameters.                                            * 00030900
*                                                                     * 00031000
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00031100
*              specifies the list form of the macro.  The "L" form    * 00031200
*              defines an area to be used for the parameter list.     * 00031300
*              Only the PLISTVER key may be specified on the          * 00031400
*              invocation.  All other macro parameters are flagged as * 00031500
*              errors.  If PLISTVER is not specified, the original    * 00031600
*              parameter list definition is used.                     * 00031700
*                                                                     * 00031800
*            ,xmfctrl                                                 * 00031900
*              is a required input.  It is the name of a storage area * 00032000
*              for the parameter list.                                * 00032100
*                                                                     * 00032200
*            »,xmfattr!0Dº                                            * 00032300
*              is an optional 60 character input string that varies   * 00032400
*              from 1 to 60 characters. Use it to force boundary      * 00032500
*              alignment of the parameter list. Use only 0F or 0D.    * 00032600
*              DEFAULT: 0D which forces the parameter list to a       * 00032700
*              doubleword boundary.                                   * 00032800
*                                                                     * 00032900
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00033000
*              specifies the execute form of the macro.  The "E" form * 00033100
*              generates code to put the parameters into the          * 00033200
*              parameter list specified by xmfctrl and provides full  * 00033300
*              syntax checking with default setting.                  * 00033400
*                                                                     * 00033500
*            ,xmfctrl                                                 * 00033600
*              is a required input.  It is the name (RS-type), or     * 00033700
*              address in register (1)-(12), of a storage area for    * 00033800
*              the parameter list.                                    * 00033900
*                                                                     * 00034000
*            »,COMPLETEº                                              * 00034100
*              is an optional keyword input which specifies the       * 00034200
*              degree of macro parameter syntax checking.             * 00034300
*              DEFAULT: COMPLETE                                      * 00034400
*                                                                     * 00034500
*                                                                     * 00034600
*              COMPLETE                                               * 00034700
*                  Checking for required macro keys is done and       * 00034800
*                  defaults are supplied for omitted optional         * 00034900
*                  parameters.                                        * 00035000
*                                                                     * 00035100
*                                                                     * 00035200
*                                                                     * 00035300
*                                                                     * 00035400
*                                                                     * 00035500
*                                                                     * 00035600
*                                                                     * 00035700
*01* RETURN CODES:                                                    * 00035800
*                                                                     * 00035900
*                                                                     * 00036000
*                 Return and reason code constants are defined in     * 00036100
*                 macro CNZMYQUA.                                     * 00036200
*                                                                     * 00036300
*       0         Name: CNZQUERYRc_OK                                 * 00036400
*                                                                     * 00036500
*                 Meaning:  CNZQUERY request successful.              * 00036600
*                                                                     * 00036700
*                 Action: None required.                              * 00036800
*                                                                     * 00036900
*                                                                     * 00037000
*       8         Name: CNZQUERYRc_InvParm                            * 00037100
*                                                                     * 00037200
*                 Meaning:  CNZQUERY request specifies invalid        * 00037300
*                 parameters.                                         * 00037400
*                                                                     * 00037500
*                 Action: Refer to action under the individual reason * 00037600
*                 code.                                               * 00037700
*                                                                     * 00037800
*                                                                     * 00037900
*                 HEX REASON  MEANING/ACTION                          * 00038000
*                 CODE                                                * 00038100
*                                                                     * 00038200
*                 xxxx0801    Name: CnzqueryRsn_BadParmlist           * 00038300
*                                                                     * 00038400
*                             Meaning: Unable to access parameter     * 00038500
*                             list.                                   * 00038600
*                                                                     * 00038700
*                             Action: Check for possible storage      * 00038800
*                             overlay.                                * 00038900
*                                                                     * 00039000
*                 xxxx0802    Name: CnzqueryRsn_SrbMode               * 00039100
*                                                                     * 00039200
*                             Meaning: SRB mode.                      * 00039300
*                                                                     * 00039400
*                             Action: Avoid requesting this function  * 00039500
*                             in SRB mode.                            * 00039600
*                                                                     * 00039700
*                 xxxx0803    Name: CnzqueryRsn_NotEnabled            * 00039800
*                                                                     * 00039900
*                             Meaning: Not Enabled.                   * 00040000
*                                                                     * 00040100
*                             Action: Avoid requesting this function  * 00040200
*                             while not enabled.                      * 00040300
*                                                                     * 00040400
*                 xxxx0804    Name: CnzqueryRsn_BadAnsAreaALET        * 00040500
*                                                                     * 00040600
*                             Meaning: Bad answer area ALET.          * 00040700
*                                                                     * 00040800
*                             Action: Make sure that the ALET         * 00040900
*                             associated with the answer area is      * 00041000
*                             valid.  The access register might not   * 00041100
*                             have been set up correctly.             * 00041200
*                                                                     * 00041300
*                 xxxx0805    Name: CnzqueryRsn_BadAnsArea            * 00041400
*                                                                     * 00041500
*                             Meaning: Error accessing answer area.   * 00041600
*                             The data space might not have been      * 00041700
*                             defined to span 2G.                     * 00041800
*                                                                     * 00041900
*                             Action: Make sure that the provided     * 00042000
*                             answer area is a valid 2G data space.   * 00042100
*                                                                     * 00042200
*                 xxxx0806    Name: CnzqueryRsn_ReservedNot0          * 00042300
*                                                                     * 00042400
*                             Meaning: Reserved field not 0.          * 00042500
*                                                                     * 00042600
*                             Action: Check for possible storage      * 00042700
*                             overlay of the parameter list.          * 00042800
*                                                                     * 00042900
*                 xxxx0807    Name: CnzqueryRsn_BadParmlistALET       * 00043000
*                                                                     * 00043100
*                             Meaning: Bad parmlist ALET.             * 00043200
*                                                                     * 00043300
*                             Action: Make sure that the ALET of the  * 00043400
*                             parameter list is valid.  The access    * 00043500
*                             register might not have been set up     * 00043600
*                             correctly.                              * 00043700
*                                                                     * 00043800
*                 xxxx0808    Name: CnzqueryRsn_BadVersion            * 00043900
*                                                                     * 00044000
*                             Meaning: Bad version number.            * 00044100
*                                                                     * 00044200
*                             Action: Check for possible storage      * 00044300
*                             overlay of the parameter list.          * 00044400
*                                                                     * 00044500
*                 xxxx0809    Name: CnzqueryRsn_Locked                * 00044600
*                                                                     * 00044700
*                             Meaning: Locked                         * 00044800
*                                                                     * 00044900
*                             Action: Avoid requesting this function  * 00045000
*                             in this environment.                    * 00045100
*                                                                     * 00045200
*                 xxxx080A    Name: CnzqueryRsn_FRR                   * 00045300
*                                                                     * 00045400
*                             Meaning: An FRR is set                  * 00045500
*                                                                     * 00045600
*                             Action: Avoid requesting this function  * 00045700
*                             in this environment.                    * 00045800
*                                                                     * 00045900
*                                                                     * 00046000
*                                                                     * 00046100
*                                                                     * 00046200
*       10        Name: CnzqueryRC_CompError                          * 00046300
*                                                                     * 00046400
*                 Meaning:  Unexpected failure.                       * 00046500
*                                                                     * 00046600
*                 Action:  Refer to the action provided with the      * 00046700
*                 specific reason code.                               * 00046800
*                                                                     * 00046900
*                                                                     * 00047000
*                 HEX REASON  MEANING/ACTION                          * 00047100
*                 CODE                                                * 00047200
*                                                                     * 00047300
*                 xxxx1001    Name: CnzqueryRsn_CompError             * 00047400
*                                                                     * 00047500
*                             Meaning: Unexpected failure.  The state * 00047600
*                             of the request is unpredictable.        * 00047700
*                                                                     * 00047800
*                             Action: Contact your system programmer. * 00047900
*                                                                     * 00048000
*                                                                     * 00048100
*                                                                     * 00048200
*                                                                     * 00048300
*                                                                     * 00048400
*01* REASON CODES:                                                    * 00048500
*                                                                     * 00048600
*       Reason codes, as appropriate, are defined under their         * 00048700
*       corresponding return code.                                    * 00048800
*                                                                     * 00048900
*01* ABEND CODES:                                                     * 00049000
*                                                                     * 00049100
*                                                                     * 00049200
*       0C2       Meaning:  Privileged-Operation exception.  A        * 00049300
*                 problem state caller without PKM allowing key 0     * 00049400
*                 attempted to use CNZQUERY.                          * 00049500
*                                                                     * 00049600
*                 Action:  Get into supervisor state or PSW key 0     * 00049700
*                 before invoking the function, perhaps by the        * 00049800
*                 MODESET macro.                                      * 00049900
*                                                                     * 00050000
*                                                                     * 00050100
*                                                                     * 00050200
*01* ABEND REASON CODES:                                              * 00050300
*                                                                     * 00050400
*       REASON    ABEND                                               * 00050500
*       CODE      CODE      DESCRIPTION                               * 00050600
*       ××××××××  ××××××××  ×××××××××××                               * 00050700
*                                                                     * 00050800
*                                                                     * 00050900
*              2  0C2       Problem state caller without PKM allowing * 00051000
*                           key 0 attempted to use CNZQUERY           * 00051100
*                                                                     * 00051200
*                                                                     * 00051300
*                                                                     * 00051400
*01* MODULE TYPE:  ASSEM MACRO                                        * 00051500
*                                                                     * 00051600
*02*   PROCESSOR:  ASSEM                                              * 00051700
*                                                                     * 00051800
*01* COMPONENT:  SC1CK                                                * 00051900
*                                                                     * 00052000
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00052100
*                                                                     * 00052200
*01* EXAMPLES:                                                        * 00052300
*                                                                     * 00052400
*    Example 1                                                        * 00052500
*                                                                     * 00052600
*    Operation:                                                       * 00052700
*                                                                     * 00052800
*    After having established addressability and a dynamic area,      * 00052900
*                                                                     * 00053000
*                                                                     * 00053100
*    1.  Create a 2G data space                                       * 00053200
*                                                                     * 00053300
*    2.  Add the data space to the dispatchable unit access list      * 00053400
*                                                                     * 00053500
*    3.  Invoke CNZQUERY to retrieve WTOR and AMRF information        * 00053600
*                                                                     * 00053700
*    4.  Examine the WTOR queue                                       * 00053800
*                                                                     * 00053900
*    5.  Examine the AMRF Immediate Action queue                      * 00054000
*                                                                     * 00054100
*    6.  Delete the access list entry                                 * 00054200
*                                                                     * 00054300
*    7.  Delete the data space                                        * 00054400
*                                                                     * 00054500
*                                                                     * 00054600
*                                                                     * 00054700
*    The code is as follows.                                          * 00054800
*                                                                     * 00054900
*             SAC   512    Enter AR ASC mode                          * 00055000
*             SYSSTATE ASCENV=AR,ARCHLVL=2                            * 00055100
*    *************************************************************    * 00055200
*    * Create a 2G data space                                    *    * 00055300
*    *************************************************************    * 00055400
*             DSPSERV CREATE,NAME=dsName,BLOCKS=MaxBlocks,        *   * 00055500
*                   STOKEN=dsSTOKEN,                              *   * 00055600
*                   MF=(E,DSPSERVL)                                   * 00055700
*    *                                                                * 00055800
*    * Place code here to check return code from GPR 15 and           * 00055900
*    * reason code from GPR 0.                                        * 00056000
*    *                                                                * 00056100
*    *************************************************************    * 00056200
*    * Add the data space to the dispatchable unit access list   *    * 00056300
*    *************************************************************    * 00056400
*             ALESERV ADD,STOKEN=dsSTOKEN,ALET=dsALET,            *   * 00056500
*                   MF=(E,ALESERVL)                                   * 00056600
*    *                                                                * 00056700
*    * Place code here to check return code from GPR 15.              * 00056800
*    *                                                                * 00056900
*    *************************************************************    * 00057000
*    * Retrieve WTOR and AMRF information                        *    * 00057100
*    *************************************************************    * 00057200
*             CNZQUERY WTOR=YES,AMRF=YES,ANSAREAALET=dsALET,      *   * 00057300
*                   RETCODE=LRetcode,RSNCODE=LRsncode,            *   * 00057400
*                   MF=(E,CNZQUERYL)                                  * 00057500
*    *                                                                * 00057600
*    * Place code here to check return/reason codes.                  * 00057700
*    *                                                                * 00057800
*             LHI   2,HeaderAddr       Access header info             * 00057900
*             LAM   2,2,dsALET         With ALET                      * 00058000
*             USING CnzmyquaHdr,2                                     * 00058100
*    *************************************************************    * 00058200
*    * Examine the WTOR queue                                    *    * 00058300
*    *************************************************************    * 00058400
*             CPYA  3,2                ORE ALET = hdr ALET            * 00058500
*             ICM   3,B'1111',Cnzmyquah_First_ORE_Addr                * 00058600
*             JZ    NO_OREs                                           * 00058700
*             USING OREF,3                                            * 00058800
*             CPYA  4,2                WQE ALET = ORE ALET            * 00058900
*    NEXT_ORE DS    0H                                                * 00059000
*             L     4,ORERWQE                                         * 00059100
*             USING WQE,4                                             * 00059200
*    *                                                                * 00059300
*    * Place code here to examine the specific ORE and                * 00059400
*    * its associated WQE                                             * 00059500
*    *                                                                * 00059600
*             DROP  4                                                 * 00059700
*             ICM   3,B'1111',ORELKP                                  * 00059800
*             JNZ   NEXT_ORE                                          * 00059900
*             DROP  3                                                 * 00060000
*    NO_OREs  DS    0H                                                * 00060100
*    *************************************************************    * 00060200
*    * Examine the AMRF Immediate Action queue                   *    * 00060300
*    *************************************************************    * 00060400
*             CPYA  3,2                WQE ALET = hdr ALET            * 00060500
*             ICM   3,B'1111',Cnzmyquah_First_IA_WQE_Addr             * 00060600
*             JZ    NO_WQEs                                           * 00060700
*             USING WQE,3                                             * 00060800
*    NEXT_WQE DS    0H                                                * 00060900
*    *                                                                * 00061000
*    * Place code here to examine the specific WQE.                   * 00061100
*    *                                                                * 00061200
*             ICM   3,B'1111',WQELKP                                  * 00061300
*             JNZ   NEXT_WQE                                          * 00061400
*             DROP  3                                                 * 00061500
*    NO_WQEs  DS    0H                                                * 00061600
*    *************************************************************    * 00061700
*    *************************************************************    * 00061800
*    * Delete the access list entry                              *    * 00061900
*    *************************************************************    * 00062000
*             ALESERV DELETE,ALET=dsALET,                         *   * 00062100
*                   MF=(E,ALESERVL)                                   * 00062200
*    *                                                                * 00062300
*    * Place code here to check return code from GPR 15.              * 00062400
*    *                                                                * 00062500
*    *************************************************************    * 00062600
*    * Delete the data space                                     *    * 00062700
*    *************************************************************    * 00062800
*             DSPSERV DELETE,STOKEN=dsSTOKEN,                     *   * 00062900
*                   MF=(E,DSPSERVL)                                   * 00063000
*    *                                                                * 00063100
*    * Place code here to check return code from GPR 15 and           * 00063200
*    * reason code from GPR 0.                                        * 00063300
*    *                                                                * 00063400
*    *************************************************************    * 00063500
*    * Exit the module                                           *    * 00063600
*    *************************************************************    * 00063700
*    *                                                                * 00063800
*    * Place code here to free the dynamic area and                   * 00063900
*    * exit the module.                                               * 00064000
*    * here                                                           * 00064100
*    *                                                                * 00064200
*    HeaderAddr EQU x'1000'     Where Cnzmyqua_Hdr is placed          * 00064300
*    STATAREA DS    0D                                                * 00064400
*    dsName   DC    CL8'MYDATASP'                                     * 00064500
*    MaxBlocks DC   A(524288)   Number of blocks in full 2G data space* 00064600
*    DYNAREA  DSECT                                                   * 00064700
*    dsSTOKEN DS    D                                                 * 00064800
*    dsALET   DS    D                                                 * 00064900
*    LRetcode DS    F                                                 * 00065000
*    LRsncode DS    F                                                 * 00065100
*    ListForms DS    0D                                               * 00065200
*             DSPSERV MF=(L,DSPSERVL)                                 * 00065300
*             ORG   ListForms                                         * 00065400
*    ALESERVL ALESERV MF=L                                            * 00065500
*             ORG   ListForms                                         * 00065600
*             CNZQUERY MF=(L,CNZQUERYL)                               * 00065700
*             ORG   ,                                                 * 00065800
*             CNZMYQUA              Output information                * 00065900
*             IHAWQE                WQE                               * 00066000
*             IHAORE                ORE                               * 00066100
*                                                                     * 00066200
*                                                                     * 00066300
*01* MACRO USAGE NOTES:                                               * 00066400
*                                                                     * 00066500
*                                                                     * 00066600
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00066700
*        global macro variable.  Any value other than 'NO' will       * 00066800
*        result in the macro expansion being printed.  The default is * 00066900
*        'YES'.  The following examples illustrate how the ZPRINT     * 00067000
*        variable should be set.                                      * 00067100
*                                                                     * 00067200
*                    GBLC &ZPRINT                                     * 00067300
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00067400
*                                                                     * 00067500
*                                                                     * 00067600
*    2.  All   keys   currently   contained  in  the  CNZQUERY  macro * 00067700
*        correspond  to  version  0.   If you specify PLISTVER, use a * 00067800
*        value of 0 or MAX.                                           * 00067900
*                                                                     * 00068000
*                                                                     * 00068100
*                                                                     * 00068200
*                                                                     * 00068300
*01* CHANGE ACTIVITY:                                                 * 00068400
*                                                                     * 00068500
*   Flag LineItem  FMID    Date   ID    Comment                       * 00068600
*                                                                     * 00068700
*    $L0=CNZ1BAMG HBB7720 040121 PD00XB:  Console Info Retrieval      * 00068800
*    $L1=CNZ1B    HBB7720 040121 PD00XB:  Console Info Retrieval      * 00068900
*    $P1=ME17740  HBB7770 091231 PD00EK:  Update ACTIONs for 0804 and * 00069000
*                                         0807 reason codes           * 00069100
****** END OF SPECIFICATIONS *****************************************/ 00069200
*/********************************************************************* 00069300
         MACRO                                                          00069400
&XLABEL  CNZQUERY &WTOR=,&AMRF=,&INTINFO=,&ANSAREAALET=,&RETCODE=,     *00069500
               &RSNCODE=,&PLISTVER=,&MF=                                00069600
.*                                                                      00069700
*                 MACDATE -11/23/09-<0>                                 00069800
.*                                                                      00069900
.*******************************************************************    00070000
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00070100
.*******************************************************************    00070200
                 GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                00070300
                 GBLC  &ZTEST      YES=TEST NO=NO TEST                  00070400
                 GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX          00070500
.*                                                                      00070600
                 GBLC  &ZCNZQUERY  YES=MACRO USED AT LEAST ONCE         00070700
.*******************************************************************    00070800
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00070900
.*******************************************************************    00071000
                 LCLC  &ZMS        ERROR MESSAGE WORK AREA              00071100
                 LCLC  &ZCNDX      SYSNDX CHARACTERS                    00071200
                 LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED           00071300
                 LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR          00071400
                 LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE          00071500
                 LCLA  &ZAWRK      USED AS A WORK AREA                  00071600
                 LCLA  &ZASIZ      USED FOR SIZE OF VALUE               00071700
                 LCLA  &ZN         NUMERIC WORK VARIABLE                00071800
                 LCLC  &ZC         CHARACTER WORK VARIABLE              00071900
                 LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE          00072000
                 LCLA  &ZTLA       VALUE TOO LONG VARIABLE              00072100
                 LCLC  &ZMAC_G     "G" or null                          00072200
&ZMAC_G          SETC  ''                                               00072300
                 LCLC  &ZMAC_LR                                         00072400
&ZMAC_LR         SETC  'LR'                                             00072500
                 LCLC  &ZMAC_L                                          00072600
&ZMAC_L          SETC  'L'                                              00072700
                 LCLC  &ZMAC_ST                                         00072800
&ZMAC_ST         SETC  'ST'                                             00072900
                 LCLA  &ZMACRET    MACRO RETURN CODE                    00073000
&ZMACRET         SETA  0           ASSUME NO ERRORS                     00073100
.*                                                                      00073200
                 LCLC  &ZCSYSLIST(255)          NONXKEY, POS ARRAY      00073300
                 LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()           00073400
                 LCLA  &ZPLLEN     PARAMETER LIST LENGTH                00073500
                 LCLC  &ZENDBASEPL              End of base PL          00073600
                 LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                00073700
.*******************************************************************    00073800
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00073900
.*******************************************************************    00074000
                 LCLA  &ZI         INDEX FOR ARRAY                      00074100
                 LCLA  &ZJ         INDEX FOR PARMS                      00074200
                 LCLA  &ZK         INDEX FOR PARSE                      00074300
                 LCLA  &ZLO        LOW RANGE VALUE                      00074400
                 LCLA  &ZHI        HIGH RANGE VALUE                     00074500
                 LCLC  &ZW         WORK AREA FOR PARM                   00074600
.********************************************************************   00074700
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00074800
.********************************************************************   00074900
                 GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL              00075000
                 GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE       00075100
                 GBLA  &SYSALVL    SYSSTATE ARCHLVL                     00075200
                 GBLC  &SYSAM64    SYSSTATE AMODE64                     00075300
.*                                                                      00075400
                 AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED       00075500
                 AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED        00075600
                 SPLEVEL  TEST                                          00075700
.ZSYS2           ANOP  ,                                                00075800
                 AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1            00075900
                 AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1            00076000
                 SYSSTATE TEST                                          00076100
                 AGO   .ZSYS4                                           00076200
.ZSYS3           ANOP  ,                                                00076300
&SYSASCE         SETC  'P'         ASSUME SYSSTATE PRIMARY              00076400
.ZSYS4           ANOP  ,                                                00076500
.*******************************************************************    00076600
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00076700
.*******************************************************************    00076800
                 LCLC  &XWTOR      ++ VALUE                             00076900
                 LCLC  &XAMRF      ++ VALUE                             00077000
                 LCLC  &XINTINFO   ++ VALUE                             00077100
                 LCLC  &XANSAREAALET            ++ NAME                 00077200
                 LCLC  &XRETCODE   ++ NAME                              00077300
                 LCLC  &XRSNCODE   ++ NAME                              00077400
                 LCLA  &XPLISTVER  ++ VALUE                             00077500
                 LCLC  &XMF        ++ VALUE                             00077600
                 LCLC  &XMFCTRL    ++ NAME                              00077700
                 LCLC  &XMFATTR    ++ VALUE                             00077800
                 LCLC  &XMFSCK     ++ VALUE                             00077900
.*******************************************************************    00078000
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00078100
.*******************************************************************    00078200
                 LCLC  &ZXWTOR     ++ INPUT VALUE                       00078300
                 LCLC  &ZXAMRF     ++ INPUT VALUE                       00078400
                 LCLC  &ZXINTINFO  ++ INPUT VALUE                       00078500
                 LCLC  &ZXANSAREAALET           ++ INPUT NAME           00078600
                 LCLC  &ZXRETCODE  ++ OUTPUT NAME                       00078700
                 LCLC  &ZXRSNCODE  ++ OUTPUT NAME                       00078800
                 LCLC  &ZXPLISTVER              ++ INPUT VALUE          00078900
                 LCLC  &ZXMF       ++ INPUT VALUE                       00079000
                 LCLC  &ZXMFCTRL   ++ INPUT NAME                        00079100
                 LCLC  &ZXMFATTR   ++ INPUT VALUE                       00079200
                 LCLC  &ZXMFSCK    ++ INPUT VALUE                       00079300
.********************************************************************   00079400
.***AC.PLV01  PROCESS PLISTVER                                      *   00079500
.********************************************************************   00079600
&XPLISTVER      SETA  0                                                 00079700
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00079800
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00079900
&XPLISTVER      SETA  0                                                 00080000
.ZPLV0          ANOP  ,                                                 00080100
.*                                                                      00080200
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00080300
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00080400
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00080500
.*-------------------------------------------------------------------   00080600
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00080700
&ZMS            SETC  '"PLISTVER='                                      00080800
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00080900
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00081000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00081100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00081200
                AGO   .ZPVCK2                                           00081300
.ZPVCK3         ANOP  ,                                                 00081400
.*-------------------------------------------------------------------   00081500
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00081600
&ZMS            SETC  '"PLISTVER='                                      00081700
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00081800
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00081900
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00082000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00082100
                AGO   .ZPVCKE                                           00082200
.ZPVCK2         ANOP  ,                                                 00082300
.*-------------------------------------------------------------------   00082400
&ZCVAL          SETC  '&PLISTVER(1)'                                    00082500
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00082600
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00082700
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00082800
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00082900
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00083000
.ZPVCK6         ANOP  ,                                                 00083100
&ZMS            SETC  '"PLISTVER='                                      00083200
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00083300
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00083400
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00083500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00083600
&XPLISTVER      SETA  0                                                 00083700
                AGO   .ZPVCKE                                           00083800
.*-------------------------------------------------------------------   00083900
.ZPVCK4A        ANOP  ,                                                 00084000
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00084100
&ZMS            SETC  'PLISTVER='                                       00084200
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00084300
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00084400
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00084500
                MNOTE 8,' &ZMS IS REQUIRED.'                            00084600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00084700
                AGO   .ZPVCK5                                           00084800
.ZPVCK4         ANOP  ,                                                 00084900
&XPLISTVER      SETA  &PLISTVER(1)                                      00085000
.ZPVCK5         ANOP  ,                                                 00085100
.ZPVCKE         ANOP  ,                                                 00085200
.********************************************************************   00085300
.***AG.MF01 PROCESS MF MACRO FORMS                                      00085400
.********************************************************************   00085500
                 ACTR  10000                                            00085600
.*------------------------------------------------------------------    00085700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00085800
&XMF             SETC  ''          INITIALIZE XVARIABLE                 00085900
.*-------------------------------------------------------------------   00086000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00086100
.ZG30            ANOP  ,                                                00086200
&ZTLC            SETC 'S'                                               00086300
                 AIF   ('&MF(1)' NE '&ZTLC').ZG31                       00086400
&XMF             SETC  'S'         SET KEYWORD                          00086500
                 AIF   (N'&MF LE 1).ZG30A       CK NUM                  00086600
&ZMS             SETC  '"MF='                                           00086700
&ZMS             SETC  '&ZMS.&MF"'                                      00086800
&ZMS             SETC  '&ZMS "MF"'                                      00086900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00087000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00087100
.ZG30A           ANOP  ,                                                00087200
.*-------------------------------------------------------------------   00087300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00087400
.ZG31            ANOP  ,                                                00087500
&ZTLC            SETC 'L'                                               00087600
                 AIF   ('&MF(1)' NE '&ZTLC').ZG38                       00087700
&XMF             SETC  'L'         SET KEYWORD                          00087800
                 AIF   (N'&MF LE 3).ZG31A       CK NUM                  00087900
&ZMS             SETC  '"MF='                                           00088000
&ZMS             SETC  '&ZMS.&MF"'                                      00088100
&ZMS             SETC  '&ZMS "MF"'                                      00088200
                 MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'             00088300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00088400
.ZG31A           ANOP  ,                                                00088500
.*-------------------------------------------------------------------   00088600
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00088700
                 AIF   (N'&SYSLIST NE 0).ZG31B  POSITIONALS?            00088800
                 AIF   ('&WTOR' NE '').ZG31B    KEYS?                   00088900
                 AIF   ('&AMRF' NE '').ZG31B    KEYS?                   00089000
                 AIF   ('&INTINFO' NE '').ZG31B  KEYS?                  00089100
                 AIF   ('&ANSAREAALET' NE '').ZG31B  KEYS?              00089200
                 AIF   ('&RETCODE' NE '').ZG31B  KEYS?                  00089300
                 AIF   ('&RSNCODE' NE '').ZG31B  KEYS?                  00089400
                 AGO    .ZG31C     INVOCATION OKAY                      00089500
.ZG31B           ANOP  ,                                                00089600
&ZMS             SETC  'THE "L" FORM OF "MF"'                           00089700
&ZMS             SETC  '&ZMS CAN ONLY HAVE'                             00089800
&ZMS             SETC  '&ZMS THE "PLISTVER" KEY'                        00089900
                 MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'           00090000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00090100
.ZG31C           ANOP  ,                                                00090200
.*-------------------------------------------------------------------   00090300
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00090400
&ZXMFCTRL        SETC  'INPUT'     SET IN/OUTPUT                        00090500
&XMFCTRL         SETC  '&MF(2,1)'  SET XVARIABLE                        00090600
                 AIF   (N'&MF(2) GT 1).ZG33B    MULTI PARMS             00090700
&XMFCTRL         SETC  '&MF(2)'    SET XVARIABLE                        00090800
.ZG33B           AIF   (K'&MF(2) GT 0).ZG33C                            00090900
&ZXMFCTRL        SETC  ''          RESET IN/OUTPUT                      00091000
&ZMS             SETC  'WHEN "L" IS SPECIFIED'                          00091100
&ZMS             SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'              00091200
                 MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                     00091300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00091400
.ZG33C           ANOP  ,                                                00091500
.*-------------------------------------------------------------------   00091600
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00091700
                 AIF   (K'&ZXMFCTRL LE 0).ZG33P  NOT I/O                00091800
                 AIF   ('&XMFCTRL'(1,1) NE '(').ZG33P                   00091900
&ZXMFCTRL        SETC  ''          RESET IN/OUTPUT                      00092000
&ZMS             SETC  '"MF='                                           00092100
&ZMS             SETC  '&ZMS.&MF"'                                      00092200
&ZMS             SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'        00092300
                 MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                00092400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00092500
.ZG33P           ANOP  ,                                                00092600
.*-------------------------------------------------------------------   00092700
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00092800
&ZXMFATTR        SETC  'INPUT'     SET IN/OUTPUT                        00092900
&XMFATTR         SETC  '0D'                                             00093000
                 AIF   (K'&MF(3) LE 0).ZG36B    PARM                    00093100
&XMFATTR         SETC  '&MF(3,1)'  SET XVARIABLE                        00093200
                 AIF   (N'&MF(3) GT 1).ZG36B    MULTI                   00093300
&XMFATTR         SETC  '&MF(3)'    SET XVARIABLE                        00093400
.ZG36B           ANOP  ,                                                00093500
.*-------------------------------------------------------------------   00093600
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00093700
                 AIF   (K'&ZXMFATTR LE 0).ZG36P  NOT I/O                00093800
                 AIF   ('&XMFATTR'(1,1) NE '(').ZG36P                   00093900
&ZXMFATTR        SETC  ''          RESET IN/OUTPUT                      00094000
&ZMS             SETC  '"MF='                                           00094100
&ZMS             SETC  '&ZMS.&MF"'                                      00094200
&ZMS             SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'        00094300
                 MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                00094400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00094500
.ZG36P           ANOP  ,                                                00094600
.*-------------------------------------------------------------------   00094700
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00094800
                 AIF   (K'&ZXMFATTR LE 0).ZG36S  NOT I/O                00094900
                 AIF   (K'&XMFATTR LE 60).ZG36S  LNG OK                 00095000
&ZXMFATTR        SETC  ''          RESET IN/OUTPUT                      00095100
&ZMS             SETC  '"MF='                                           00095200
&ZMS             SETC  '&ZMS.&MF"'                                      00095300
&ZMS             SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'            00095400
                 MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'               00095500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00095600
.ZG36S           ANOP  ,                                                00095700
.*-------------------------------------------------------------------   00095800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00095900
.ZG38            ANOP  ,                                                00096000
&ZTLC            SETC 'E'                                               00096100
                 AIF   ('&MF(1)' NE '&ZTLC').ZG46                       00096200
&XMF             SETC  'E'         SET KEYWORD                          00096300
                 AIF   (N'&MF LE 3).ZG38A       CK NUM                  00096400
&ZMS             SETC  '"MF='                                           00096500
&ZMS             SETC  '&ZMS.&MF"'                                      00096600
&ZMS             SETC  '&ZMS "MF"'                                      00096700
                 MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'             00096800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00096900
.ZG38A           ANOP  ,                                                00097000
.*-------------------------------------------------------------------   00097100
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00097200
&ZXMFCTRL        SETC  'INPUT'     SET IN/OUTPUT                        00097300
&XMFCTRL         SETC  '&MF(2,1)'  SET XVARIABLE                        00097400
                 AIF   (N'&MF(2) GT 1).ZG40B    MULTI PARMS             00097500
&XMFCTRL         SETC  '&MF(2)'    SET XVARIABLE                        00097600
.ZG40B           AIF   (K'&MF(2) GT 0).ZG40C                            00097700
&ZXMFCTRL        SETC  ''          RESET IN/OUTPUT                      00097800
&ZMS             SETC  'WHEN "E" IS SPECIFIED'                          00097900
&ZMS             SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'              00098000
                 MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                     00098100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00098200
.ZG40C           ANOP  ,                                                00098300
.*-------------------------------------------------------------------   00098400
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00098500
                 AIF   (K'&ZXMFCTRL LE 0).ZG40R  NOT I/O                00098600
                 AIF   ('&XMFCTRL'(1,1) NE '(').ZG40R                   00098700
&ZCGPR           SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                       00098800
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG40P                     00098900
                 AIF   (K'&ZCGPR GT 2).ZG40Q                            00099000
                 AIF   ('&ZCGPR' EQ '0').ZG40Q                          00099100
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00099200
                 AIF   (T'&ZCGPR NE 'N').ZG40Q  INVALID REG NAME        00099300
.ZG40P           ANOP  ,                                                00099400
                 AIF   (T'&ZCGPR NE 'N').ZG40R  NON NUMERIC             00099500
                 AIF   ('&ZCGPR' LT '1').ZG40Q                          00099600
                 AIF   ('&ZCGPR' LE '12').ZG40R                         00099700
.ZG40Q           ANOP  ,                                                00099800
&ZMS             SETC  '"MF='                                           00099900
&ZMS             SETC  '&ZMS.&MF"'                                      00100000
&ZMS             SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'        00100100
                 MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                 00100200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00100300
.ZG40R           ANOP  ,                                                00100400
.*-------------------------------------------------------------------   00100500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00100600
&XMFSCK          SETC  ''          INITIALIZE XVARIABLE                 00100700
.ZG44A   AIF   ('&MF(3)' NE 'COMPLETE').ZG45A                           00100800
&XMFSCK          SETC  'COMPLETE'  SET KEYWORD                          00100900
.*-------------------------------------------------------------------   00101000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00101100
.ZG45A           AIF   (K'&XMFSCK GT 0).ZG45C   KEYWORD                 00101200
                 AIF   (K'&MF(3) LE 0).ZG45B                            00101300
&ZMS             SETC  '"MF='                                           00101400
&ZMS             SETC  '&ZMS.&MF"'                                      00101500
&ZMS             SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '        00101600
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00101700
&ZMS             SETC  '&ZMS "COMPLETE".'                               00101800
                 MNOTE 8,' &ZMS '                                       00101900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00102000
.ZG45B           ANOP  ,                                                00102100
&XMFSCK          SETC  'COMPLETE'  SET DEFAULT KEYWORD                  00102200
.ZG45C           ANOP  ,                                                00102300
&ZXMFSCK         SETC  'INPUT'     SET IN/OUTPUT                        00102400
.*------------------------------------------------------------------    00102500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00102600
.ZG46            ANOP  ,                                                00102700
&ZXMF            SETC  'INPUT'     SET IN/OUTPUT                        00102800
                 AIF   (K'&XMF GT 0).ZG46E      VALID ARG               00102900
                 AIF   (T'&MF EQ 'O').ZG46D     OMITTED                 00103000
&ZASYSLNDX       SETA  0                                                00103100
.ZG46A           ANOP  ,           POSITIONAL MACRO KEY                 00103200
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00103300
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG46C                 00103400
&ZTLC            SETC 'MF'                                              00103500
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG46A        00103600
.ZG46B           ANOP  ,                                                00103700
&ZXMF            SETC  ''          RESET IN/OUTPUT                      00103800
&ZMS             SETC  'THE "MF" KEY'                                   00103900
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00104000
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00104100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00104200
                 AGO   .ZG46E                                           00104300
.ZG46C           ANOP  ,                                                00104400
&ZXMF            SETC  ''          RESET IN/OUTPUT                      00104500
&ZMS             SETC  '"MF='                                           00104600
&ZMS             SETC  '&ZMS.&MF"'                                      00104700
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00104800
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00104900
&ZMS             SETC  '&ZMS "S",'                                      00105000
&ZMS             SETC  '&ZMS "L",'                                      00105100
&ZMS             SETC  '&ZMS OR "E".'                                   00105200
                 MNOTE 8,' &ZMS '                                       00105300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00105400
                 AGO   .ZG46E                                           00105500
.ZG46D           ANOP  ,                                                00105600
&XMF             SETC  'S'         SET DEFAULT KEYWORD                  00105700
&XMFSCK          SETC  'COMPLETE'  COMPLETE CHECKING                    00105800
.ZG46E           ANOP  ,                                                00105900
.********************************************************************   00106000
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00106100
.********************************************************************   00106200
                 ACTR  10000                                            00106300
.*-------------------------------------------------------------------   00106400
.***AG.MF03 MF=(SLE)                                                    00106500
                 AIF   ('&XMF' EQ 'L').ZGMFX                            00106600
.*------------------------------------------------------------------    00106700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00106800
&XWTOR           SETC  ''          INITIALIZE XVARIABLE                 00106900
.*-------------------------------------------------------------------   00107000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00107100
.ZG3             ANOP  ,                                                00107200
                 AIF   (K'&WTOR(1) LE 0).ZG3A                           00107300
&ZTLC            SETC 'NO'                                              00107400
                 AIF   ('&WTOR(1)' NE '&ZTLC').ZG4                      00107500
&XWTOR           SETC  'NO'        SET KEYWORD                          00107600
                 AIF   (N'&WTOR LE 1).ZG3A      CK NUM                  00107700
&ZMS             SETC  '"WTOR='                                         00107800
&ZMS             SETC  '&ZMS.&WTOR"'                                    00107900
&ZMS             SETC  '&ZMS "WTOR"'                                    00108000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00108100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00108200
.ZG3A            ANOP  ,                                                00108300
.*-------------------------------------------------------------------   00108400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00108500
.ZG4             ANOP  ,                                                00108600
&ZTLC            SETC 'YES'                                             00108700
                 AIF   ('&WTOR(1)' NE '&ZTLC').ZG5                      00108800
&XWTOR           SETC  'YES'       SET KEYWORD                          00108900
                 AIF   (N'&WTOR LE 1).ZG4A      CK NUM                  00109000
&ZMS             SETC  '"WTOR='                                         00109100
&ZMS             SETC  '&ZMS.&WTOR"'                                    00109200
&ZMS             SETC  '&ZMS "WTOR"'                                    00109300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00109400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00109500
.ZG4A            ANOP  ,                                                00109600
.*------------------------------------------------------------------    00109700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00109800
.ZG5             ANOP  ,                                                00109900
&ZXWTOR          SETC  'INPUT'     SET IN/OUTPUT                        00110000
                 AIF   (K'&XWTOR GT 0).ZG5E     VALID ARG               00110100
                 AIF   (T'&WTOR EQ 'O').ZG5D    OMITTED                 00110200
&ZASYSLNDX       SETA  0                                                00110300
.ZG5A            ANOP  ,           POSITIONAL MACRO KEY                 00110400
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00110500
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG5C                  00110600
&ZTLC            SETC 'WTOR'                                            00110700
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG5A         00110800
.ZG5B            ANOP  ,                                                00110900
&ZXWTOR          SETC  ''          RESET IN/OUTPUT                      00111000
&ZMS             SETC  'THE "WTOR" KEY'                                 00111100
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00111200
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00111300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00111400
                 AGO   .ZG5E                                            00111500
.ZG5C            ANOP  ,                                                00111600
&ZXWTOR          SETC  ''          RESET IN/OUTPUT                      00111700
&ZMS             SETC  '"WTOR='                                         00111800
&ZMS             SETC  '&ZMS.&WTOR"'                                    00111900
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00112000
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00112100
&ZMS             SETC  '&ZMS "NO"'                                      00112200
&ZMS             SETC  '&ZMS OR "YES".'                                 00112300
                 MNOTE 8,' &ZMS '                                       00112400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00112500
                 AGO   .ZG5E                                            00112600
.ZG5D            ANOP  ,                                                00112700
&XWTOR           SETC  'NO'        SET DEFAULT KEYWORD                  00112800
.ZG5E            ANOP  ,                                                00112900
.*------------------------------------------------------------------    00113000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00113100
&XAMRF           SETC  ''          INITIALIZE XVARIABLE                 00113200
.*-------------------------------------------------------------------   00113300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00113400
.ZG8             ANOP  ,                                                00113500
                 AIF   (K'&AMRF(1) LE 0).ZG8A                           00113600
&ZTLC            SETC 'NO'                                              00113700
                 AIF   ('&AMRF(1)' NE '&ZTLC').ZG9                      00113800
&XAMRF           SETC  'NO'        SET KEYWORD                          00113900
                 AIF   (N'&AMRF LE 1).ZG8A      CK NUM                  00114000
&ZMS             SETC  '"AMRF='                                         00114100
&ZMS             SETC  '&ZMS.&AMRF"'                                    00114200
&ZMS             SETC  '&ZMS "AMRF"'                                    00114300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00114400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00114500
.ZG8A            ANOP  ,                                                00114600
.*-------------------------------------------------------------------   00114700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00114800
.ZG9             ANOP  ,                                                00114900
&ZTLC            SETC 'YES'                                             00115000
                 AIF   ('&AMRF(1)' NE '&ZTLC').ZG10                     00115100
&XAMRF           SETC  'YES'       SET KEYWORD                          00115200
                 AIF   (N'&AMRF LE 1).ZG9A      CK NUM                  00115300
&ZMS             SETC  '"AMRF='                                         00115400
&ZMS             SETC  '&ZMS.&AMRF"'                                    00115500
&ZMS             SETC  '&ZMS "AMRF"'                                    00115600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00115700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00115800
.ZG9A            ANOP  ,                                                00115900
.*------------------------------------------------------------------    00116000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00116100
.ZG10            ANOP  ,                                                00116200
&ZXAMRF          SETC  'INPUT'     SET IN/OUTPUT                        00116300
                 AIF   (K'&XAMRF GT 0).ZG10E    VALID ARG               00116400
                 AIF   (T'&AMRF EQ 'O').ZG10D   OMITTED                 00116500
&ZASYSLNDX       SETA  0                                                00116600
.ZG10A           ANOP  ,           POSITIONAL MACRO KEY                 00116700
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00116800
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG10C                 00116900
&ZTLC            SETC 'AMRF'                                            00117000
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG10A        00117100
.ZG10B           ANOP  ,                                                00117200
&ZXAMRF          SETC  ''          RESET IN/OUTPUT                      00117300
&ZMS             SETC  'THE "AMRF" KEY'                                 00117400
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00117500
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00117600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00117700
                 AGO   .ZG10E                                           00117800
.ZG10C           ANOP  ,                                                00117900
&ZXAMRF          SETC  ''          RESET IN/OUTPUT                      00118000
&ZMS             SETC  '"AMRF='                                         00118100
&ZMS             SETC  '&ZMS.&AMRF"'                                    00118200
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00118300
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00118400
&ZMS             SETC  '&ZMS "NO"'                                      00118500
&ZMS             SETC  '&ZMS OR "YES".'                                 00118600
                 MNOTE 8,' &ZMS '                                       00118700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00118800
                 AGO   .ZG10E                                           00118900
.ZG10D           ANOP  ,                                                00119000
&XAMRF           SETC  'NO'        SET DEFAULT KEYWORD                  00119100
.ZG10E           ANOP  ,                                                00119200
.*------------------------------------------------------------------    00119300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00119400
&XINTINFO        SETC  ''          INITIALIZE XVARIABLE                 00119500
.*-------------------------------------------------------------------   00119600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00119700
.ZG13            ANOP  ,                                                00119800
                 AIF   (K'&INTINFO(1) LE 0).ZG13A                       00119900
&ZTLC            SETC 'NO'                                              00120000
                 AIF   ('&INTINFO(1)' NE '&ZTLC').ZG14                  00120100
&XINTINFO        SETC  'NO'        SET KEYWORD                          00120200
                 AIF   (N'&INTINFO LE 1).ZG13A  CK NUM                  00120300
&ZMS             SETC  '"INTINFO='                                      00120400
&ZMS             SETC  '&ZMS.&INTINFO"'                                 00120500
&ZMS             SETC  '&ZMS "INTINFO"'                                 00120600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00120700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00120800
.ZG13A           ANOP  ,                                                00120900
.*-------------------------------------------------------------------   00121000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00121100
.ZG14            ANOP  ,                                                00121200
&ZTLC            SETC 'YES'                                             00121300
                 AIF   ('&INTINFO(1)' NE '&ZTLC').ZG15                  00121400
&XINTINFO        SETC  'YES'       SET KEYWORD                          00121500
                 AIF   (N'&INTINFO LE 1).ZG14A  CK NUM                  00121600
&ZMS             SETC  '"INTINFO='                                      00121700
&ZMS             SETC  '&ZMS.&INTINFO"'                                 00121800
&ZMS             SETC  '&ZMS "INTINFO"'                                 00121900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00122000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00122100
.ZG14A           ANOP  ,                                                00122200
.*------------------------------------------------------------------    00122300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00122400
.ZG15            ANOP  ,                                                00122500
&ZXINTINFO       SETC  'INPUT'     SET IN/OUTPUT                        00122600
                 AIF   (K'&XINTINFO GT 0).ZG15E  VALID ARG              00122700
                 AIF   (T'&INTINFO EQ 'O').ZG15D  OMITTED               00122800
&ZASYSLNDX       SETA  0                                                00122900
.ZG15A           ANOP  ,           POSITIONAL MACRO KEY                 00123000
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00123100
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG15C                 00123200
&ZTLC            SETC 'INTINFO'                                         00123300
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG15A        00123400
.ZG15B           ANOP  ,                                                00123500
&ZXINTINFO       SETC  ''          RESET IN/OUTPUT                      00123600
&ZMS             SETC  'THE "INTINFO" KEY'                              00123700
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00123800
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00123900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00124000
                 AGO   .ZG15E                                           00124100
.ZG15C           ANOP  ,                                                00124200
&ZXINTINFO       SETC  ''          RESET IN/OUTPUT                      00124300
&ZMS             SETC  '"INTINFO='                                      00124400
&ZMS             SETC  '&ZMS.&INTINFO"'                                 00124500
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00124600
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00124700
&ZMS             SETC  '&ZMS "NO"'                                      00124800
&ZMS             SETC  '&ZMS OR "YES".'                                 00124900
                 MNOTE 8,' &ZMS '                                       00125000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00125100
                 AGO   .ZG15E                                           00125200
.ZG15D           ANOP  ,                                                00125300
&XINTINFO        SETC  'NO'        SET DEFAULT KEYWORD                  00125400
.ZG15E           ANOP  ,                                                00125500
.*----------------------------------------------------------------***   00125600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00125700
                 AIF   (N'&ANSAREAALET LE 1).ZG17A  CK NUM              00125800
&ZMS             SETC  '"ANSAREAALET='                                  00125900
&ZMS             SETC  '&ZMS.&ANSAREAALET"'                             00126000
&ZMS             SETC  '&ZMS "ANSAREAALET"'                             00126100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00126200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00126300
.ZG17A           ANOP  ,                                                00126400
.*-------------------------------------------------------------------   00126500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00126600
&ZXANSAREAALET   SETC  'INPUT'     SET IN/OUTPUT                        00126700
&XANSAREAALET    SETC  '&ANSAREAALET(1)'        SET XVARIABLE           00126800
                 AIF   (N'&ANSAREAALET GT 1).ZG17B  MULTI PARMS         00126900
&XANSAREAALET    SETC  '&ANSAREAALET'           SET XVARIABLE           00127000
.ZG17B           AIF   (K'&ANSAREAALET(1) GT 0).ZG17C                   00127100
&ZXANSAREAALET   SETC  ''          RESET IN/OUTPUT                      00127200
&ZMS             SETC  ' '                                              00127300
&ZMS             SETC  '&ZMS "ANSAREAALET" KEY AND ITS'                 00127400
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00127500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00127600
.ZG17C           ANOP  ,                                                00127700
.*-------------------------------------------------------------------   00127800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00127900
                 AIF   (K'&ZXANSAREAALET LE 0).ZG17R  NOT I/O           00128000
                 AIF   ('&XANSAREAALET'(1,1) NE '(').ZG17R              00128100
&ZCGPR           SETC  '&XANSAREAALET'(2,K'&XANSAREAALET-2)             00128200
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG17P                     00128300
                 AIF   (K'&ZCGPR GT 2).ZG17Q                            00128400
                 AIF   ('&ZCGPR' EQ '0').ZG17Q                          00128500
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00128600
                 AIF   (T'&ZCGPR NE 'N').ZG17Q  INVALID REG NAME        00128700
.ZG17P           ANOP  ,                                                00128800
                 AIF   (T'&ZCGPR NE 'N').ZG17R  NON NUMERIC             00128900
                 AIF   ('&ZCGPR' LT '2').ZG17Q                          00129000
                 AIF   ('&ZCGPR' LE '12').ZG17R                         00129100
.ZG17Q           ANOP  ,                                                00129200
&ZMS             SETC  '"ANSAREAALET='                                  00129300
&ZMS             SETC  '&ZMS.&ANSAREAALET"'                             00129400
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00129500
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00129600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00129700
.ZG17R           ANOP  ,                                                00129800
.*----------------------------------------------------------------***   00129900
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00130000
                 AIF   (N'&RETCODE LE 1).ZG20A  CK NUM                  00130100
&ZMS             SETC  '"RETCODE='                                      00130200
&ZMS             SETC  '&ZMS.&RETCODE"'                                 00130300
&ZMS             SETC  '&ZMS "RETCODE"'                                 00130400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00130500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00130600
.ZG20A           ANOP  ,                                                00130700
.*-------------------------------------------------------------------   00130800
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00130900
                 AIF   (K'&RETCODE(1) LE 0).ZG20C  NO PARM              00131000
&ZXRETCODE       SETC  'OUTPUT'    SET OUTPUT                           00131100
&XRETCODE        SETC  '&RETCODE(1)'            SET XVARIABLE           00131200
                 AIF   (N'&RETCODE GT 1).ZG20C                          00131300
&XRETCODE        SETC  '&RETCODE'  SET XVARIABLE                        00131400
.ZG20C           ANOP  ,                                                00131500
.*-------------------------------------------------------------------   00131600
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00131700
                 AIF   (K'&ZXRETCODE LE 0).ZG20R  NOT I/O               00131800
                 AIF   ('&XRETCODE'(1,1) NE '(').ZG20R                  00131900
&ZCGPR           SETC  '&XRETCODE'(2,K'&XRETCODE-2)                     00132000
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG20P                     00132100
                 AIF   (K'&ZCGPR GT 2).ZG20Q                            00132200
                 AIF   ('&ZCGPR' EQ '0').ZG20Q                          00132300
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00132400
                 AIF   (T'&ZCGPR NE 'N').ZG20Q  INVALID REG NAME        00132500
.ZG20P           ANOP  ,                                                00132600
                 AIF   (T'&ZCGPR NE 'N').ZG20R  NON NUMERIC             00132700
                 AIF   ('&ZCGPR' EQ '15').ZG20R                         00132800
                 AIF   ('&ZCGPR' LT '2').ZG20Q                          00132900
                 AIF   ('&ZCGPR' LE '12').ZG20R                         00133000
.ZG20Q           ANOP  ,                                                00133100
&ZMS             SETC  '"RETCODE='                                      00133200
&ZMS             SETC  '&ZMS.&RETCODE"'                                 00133300
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00133400
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'         00133500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00133600
.ZG20R           ANOP  ,                                                00133700
.*----------------------------------------------------------------***   00133800
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00133900
                 AIF   (N'&RSNCODE LE 1).ZG23A  CK NUM                  00134000
&ZMS             SETC  '"RSNCODE='                                      00134100
&ZMS             SETC  '&ZMS.&RSNCODE"'                                 00134200
&ZMS             SETC  '&ZMS "RSNCODE"'                                 00134300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00134400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00134500
.ZG23A           ANOP  ,                                                00134600
.*-------------------------------------------------------------------   00134700
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00134800
                 AIF   (K'&RSNCODE(1) LE 0).ZG23C  NO PARM              00134900
&ZXRSNCODE       SETC  'OUTPUT'    SET OUTPUT                           00135000
&XRSNCODE        SETC  '&RSNCODE(1)'            SET XVARIABLE           00135100
                 AIF   (N'&RSNCODE GT 1).ZG23C                          00135200
&XRSNCODE        SETC  '&RSNCODE'  SET XVARIABLE                        00135300
.ZG23C           ANOP  ,                                                00135400
.*-------------------------------------------------------------------   00135500
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00135600
                 AIF   (K'&ZXRSNCODE LE 0).ZG23R  NOT I/O               00135700
                 AIF   ('&XRSNCODE'(1,1) NE '(').ZG23R                  00135800
&ZCGPR           SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                     00135900
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG23P                     00136000
                 AIF   (K'&ZCGPR GT 2).ZG23Q                            00136100
                 AIF   ('&ZCGPR' EQ '0').ZG23R                          00136200
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00136300
                 AIF   (T'&ZCGPR NE 'N').ZG23Q  INVALID REG NAME        00136400
.ZG23P           ANOP  ,                                                00136500
                 AIF   (T'&ZCGPR NE 'N').ZG23R  NON NUMERIC             00136600
                 AIF   ('&ZCGPR' EQ '0').ZG23R                          00136700
                 AIF   ('&ZCGPR' LT '2').ZG23Q                          00136800
                 AIF   ('&ZCGPR' LE '12').ZG23R                         00136900
.ZG23Q           ANOP  ,                                                00137000
&ZMS             SETC  '"RSNCODE='                                      00137100
&ZMS             SETC  '&ZMS.&RSNCODE"'                                 00137200
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00137300
                 MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'          00137400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00137500
.ZG23R           ANOP  ,                                                00137600
.******************************************************************     00137700
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00137800
.******************************************************************     00137900
                 ACTR  10000                                            00138000
.*----------------------------------------------------------------***   00138100
.***AH.P02 EXTRA POSITIONALS                                            00138200
                 AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS             00138300
                 AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL             00138400
                 AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL         00138500
                 AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL          00138600
.ZGLISTX1        ANOP  ,                                                00138700
&ZCVAL           SETC  ''          ERROR FIELD                          00138800
&ZAWRK           SETA  0           POSITIONAL NUMBER                    00138900
.ZGLIST2         ANOP  ,                                                00139000
&ZAWRK           SETA  &ZAWRK+1    NEXT POSITIONAL                      00139100
                 AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE             00139200
&ZCVAL           SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                  00139300
                 AGO   .ZGLIST2                                         00139400
.*                                                                      00139500
.ZGLIST3         ANOP  ,                                                00139600
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)    STRIP COMMA             00139700
&ZMS             SETC  'POSITIONAL ARGUMENT(S),'                        00139800
&ZMS             SETC  '&ZMS "&ZCVAL"'                                  00139900
&ZMS             SETC  '&ZMS CANNOT BE USED.'                           00140000
&ZMS             SETC  '&ZMS NO POSITIONAL ARGUMENTS'                   00140100
                 MNOTE 8,' &ZMS ARE ALLOWED.'                           00140200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00140300
.ZGLISTX         ANOP  ,                                                00140400
&ZASYSLNDX       SETA  0                                                00140500
.*-------------------------------------------------------------------   00140600
.***AG.MF04 MF=(SLE)                                                    00140700
.ZGMFX           ANOP  ,           END OF FULL SYNTAX CHECK             00140800
.*******************************************************************    00140900
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00141000
.*******************************************************************    00141100
                 AIF   (&ZMACRET NE 0).ZLX2     ERROR DETECTED          00141200
.*******************************************************************    00141300
.***AE.01  START OF CNZQUERY MACRO CODE                                 00141400
.*******************************************************************    00141500
                 LCLC  &M0M0001                 NAME                    00141600
&M0M0001         SETC  '&XLABEL'                SET NAME                00141700
                 AIF   (K'&XLABEL NE 0).XLAB2                           00141800
&M0M0001         SETC  'M00M&SYSNDX'            DEFAULT NAME            00141900
.*                                                                      00142000
.XLAB2           ANOP  ,                                                00142100
                 AIF   ('&XMF' EQ 'L').XLAB3                            00142200
&M0M0001 DS    0H                             CNZQUERY-0                00142300
.XLAB3           ANOP  ,                                                00142400
.*******************************************************************    00142500
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00142600
.*******************************************************************    00142700
              PUSH  PRINT                                               00142800
                 AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON       00142900
                 PRINT OFF         ++ PR01                              00143000
                 AGO   .ZPRNTXX                                         00143100
.ZPRINTX         PRINT ON                                               00143200
.ZPRNTXX         ANOP  ,                                                00143300
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00143400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00143500
.********************************************************************   00143600
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00143700
.********************************************************************   00143800
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00143900
                      LCLA  &ZOPN1         INVOCATION INDEX             00144000
                      LCLC  &ZOPL(4095)    LABEL                        00144100
                      LCLC  &ZOPO(4095)    OPERATION                    00144200
                      LCLC  &ZOPV(4095)    VALUE                        00144300
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00144400
.*                                                                      00144500
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00144600
.******************************************************************     00144700
.***AL.L10 CNZQUERY FMT=LIST MF=S!L PARAMETERS                          00144800
.******************************************************************     00144900
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00145000
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00145100
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00145200
&XMFATTR              SETC  '0D'                                        00145300
.*                                                                      00145400
&ZOPN                 SETA  &ZOPN+1                                     00145500
&ZOPL(&ZOPN)          SETC  ' '                                         00145600
                      AIF   (&SYSALVL NE 0).ZALVL6A                     00145700
&ZOPO(&ZOPN)          SETC  'B'                                         00145800
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00145900
                      AGO   .ZALVL6B                                    00146000
.ZALVL6A              ANOP                                              00146100
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00146200
&ZOPV(&ZOPN)          SETC  '4,8'                                       00146300
&ZOPN                 SETA  &ZOPN+1                                     00146400
&ZOPL(&ZOPN)          SETC  ' '                                         00146500
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00146600
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00146700
.ZALVL6B              ANOP                                              00146800
&ZOPD(&ZOPN)          SETC  '++ CNZQUERY ARG PARMS'                     00146900
.*                                                                      00147000
&ZOPN                 SETA  &ZOPN+1                                     00147100
&ZOPL(&ZOPN)          SETC  ' '                                         00147200
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00147300
&ZOPV(&ZOPN)          SETC  '1'                                         00147400
&ZOPD(&ZOPN)          SETC  ' '                                         00147500
.*                                                                      00147600
.ZLMFSL2              ANOP  ,                                           00147700
.*-------------------------------------------------------------------   00147800
.***AM.L00  CNZQUERY FMT=LIST name                                      00147900
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00148000
&ZOPN                 SETA &ZOPN+1                                      00148100
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00148200
&ZOPO(&ZOPN)          SETC 'EQU'                                        00148300
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00148400
&ZOPD(&ZOPN)          SETC '++ CNZQUERY NAME'                           00148500
.ZLMFSL2M             ANOP  ,                                           00148600
.*-------------------------------------------------------------------   00148700
.***AM.L01  CNZQUERY FMT=LIST PARAMETERS                                00148800
&ZOPN                 SETA &ZOPN+1                                      00148900
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00149000
&ZOPO(&ZOPN)          SETC 'DS'                                         00149100
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00149200
&ZOPD(&ZOPN)          SETC '++ CNZQUERY PARM LIST'                      00149300
.*-------------------------------------------------------------------   00149400
.***AM.L02 XVERSION XL1                                                 00149500
&ZOPN                 SETA &ZOPN+1                                      00149600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00149700
&ZOPO(&ZOPN)          SETC 'DS'                                         00149800
&ZOPV(&ZOPN)          SETC 'XL1'                                        00149900
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00150000
.*-------------------------------------------------------------------   00150100
.***AM.L03 XFLAGS BL.8                                                  00150200
&ZOPN                 SETA &ZOPN+1                                      00150300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS'                           00150400
&ZOPO(&ZOPN)          SETC 'DS'                                         00150500
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00150600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00150700
.*                                                                      00150800
&ZOPN                 SETA  &ZOPN+1                                     00150900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XWTOR_YES'                       00151000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00151100
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00151200
&ZOPD(&ZOPN)          SETC  '++ XWTOR.'                                 00151300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00151400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00151500
.*                                                                      00151600
&ZOPN                 SETA  &ZOPN+1                                     00151700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XAMRF_YES'                       00151800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00151900
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00152000
&ZOPD(&ZOPN)          SETC  '++ XAMRF.'                                 00152100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00152200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00152300
.*                                                                      00152400
&ZOPN                 SETA  &ZOPN+1                                     00152500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XINTINFO_YES'                    00152600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00152700
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00152800
&ZOPD(&ZOPN)          SETC  '++ XINTINFO.'                              00152900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00153000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00153100
.*-------------------------------------------------------------------   00153200
.***AM.L09  XRSV0002 CL2                                                00153300
&ZOPN                 SETA &ZOPN+1                                      00153400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0002'                         00153500
&ZOPO(&ZOPN)          SETC 'DS'                                         00153600
&ZOPV(&ZOPN)          SETC 'CL2'                                        00153700
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00153800
.*-------------------------------------------------------------------   00153900
.***AM.L09  XANSAREAALET F                                              00154000
&ZOPN                 SETA &ZOPN+1                                      00154100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSAREAALET'                     00154200
&ZOPO(&ZOPN)          SETC 'DS'                                         00154300
&ZOPV(&ZOPN)          SETC 'F'                                          00154400
&ZOPD(&ZOPN)          SETC '++ &ZXANSAREAALET '                         00154500
.*-------------------------------------------------------------------   00154600
.***AM.L09  XRSVNNNN CL16                                               00154700
&ZOPN                 SETA &ZOPN+1                                      00154800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSVNNNN'                         00154900
&ZOPO(&ZOPN)          SETC 'DS'                                         00155000
&ZOPV(&ZOPN)          SETC 'CL16'                                       00155100
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00155200
.*-------------------------------------------------------------------   00155300
.***AM.L10 END OF CNZQUERY LIST PARAMETERS                              00155400
&ZOPN                 SETA &ZOPN+1                                      00155500
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00155600
&ZOPO(&ZOPN)          SETC 'EQU'                                        00155700
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00155800
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00155900
.*                                                                      00156000
&ZOPN                 SETA &ZOPN+1                                      00156100
&ZOPL(&ZOPN)          SETC ' '                                          00156200
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00156300
&ZOPV(&ZOPN)          SETC '1'                                          00156400
&ZOPD(&ZOPN)          SETC ' '                                          00156500
.*-------------------------------------------------------------------   00156600
.***AL.L12 CNZQUERY FMT=LIST MF=S!L PARAMETERS                          00156700
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00156800
.*                                                                      00156900
&ZOPN                 SETA  &ZOPN+1                                     00157000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00157100
&ZOPO(&ZOPN)          SETC  'DC'                                        00157200
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00157300
&ZOPD(&ZOPN)          SETC  '++ CNZQUERY ARG PARMS'                     00157400
.*                                                                      00157500
.ZLMFSLX              ANOP  ,                                           00157600
.*-------------------------------------------------------------------   00157700
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00157800
&ZPLLEN               SETA 24                                           00157900
.*                                                                      00158000
.******************************************************************     00158100
.***AI.L01 CNZQUERY FMT=LIST FILL IN PARAMETER AREA                     00158200
.******************************************************************     00158300
                      ACTR  10000                                       00158400
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00158500
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00158600
&ZCVAL                SETC  'LAE'          XAX MODE                     00158700
.ZIMFXA               ANOP ,                                            00158800
.*                                                                      00158900
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00159000
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00159100
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00159200
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00159300
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00159400
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00159500
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00159600
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00159700
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00159800
&ZOPN                 SETA  &ZOPN+1                                     00159900
&ZOPL(&ZOPN)          SETC  ' '                                         00160000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00160100
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00160200
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00160300
                      AGO   .ZIMFNX                                     00160400
.*                                                                      00160500
.ZIMFN2               ANOP ,                                            00160600
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     00160700
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00160800
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00160900
&ZOPN                 SETA  &ZOPN+1                                     00161000
&ZOPL(&ZOPN)          SETC  ' '                                         00161100
&ZOPO(&ZOPN)          SETC  'LAE'                                       00161200
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00161300
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00161400
                      AGO   .ZIMFNX                                     00161500
.ZIMFNX1              ANOP ,                                            00161600
&ZOPN                 SETA  &ZOPN+1                                     00161700
&ZOPL(&ZOPN)          SETC  ' '                                         00161800
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00161900
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00162000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00162100
.ZIMFNX               ANOP ,                                            00162200
.********************************************************************   00162300
.***AI.L02 CNZQUERY FMT=LIST INITIALIZE PARAMETER AREA                  00162400
.********************************************************************   00162500
.***AI.L03 MF=(SLE)                                                     00162600
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00162700
.*                                                                      00162800
&ZOPN                 SETA  &ZOPN+1                                     00162900
&ZOPL(&ZOPN)          SETC  ' '                                         00163000
&ZOPO(&ZOPN)          SETC  'XC'                                        00163100
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00163200
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00163300
.ZIMFLX               ANOP  ,                                           00163400
.*-------------------------------------------------------------------   00163500
.***AI.L05 XFLAGS BL1                                                   00163600
&ZW                   SETC  ''                                          00163700
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00163800
.*-------------------------------------------------------------------   00163900
.***AI.L08 XFLAGS "YES"                                                 00164000
.***      BL1'1XXXXXXX'                                                 00164100
         AIF   ('&XWTOR' NE 'YES').ZI3A                                 00164200
&ZW                   SETC  '&ZW.1'                                     00164300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00164400
                      AGO   .ZI3C                                       00164500
.*                                                                      00164600
.ZI3A                 ANOP  ,                                           00164700
&ZW                   SETC  '&ZW.0'                                     00164800
.ZI3C                 ANOP  ,                                           00164900
.*-------------------------------------------------------------------   00165000
.***AI.L08 XFLAGS "YES"                                                 00165100
.***      BL1'X1XXXXXX'                                                 00165200
         AIF   ('&XAMRF' NE 'YES').ZI4A                                 00165300
&ZW                   SETC  '&ZW.1'                                     00165400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00165500
                      AGO   .ZI4C                                       00165600
.*                                                                      00165700
.ZI4A                 ANOP  ,                                           00165800
&ZW                   SETC  '&ZW.0'                                     00165900
.ZI4C                 ANOP  ,                                           00166000
.*-------------------------------------------------------------------   00166100
.***AI.L08 XFLAGS "YES"                                                 00166200
.***      BL1'XXXXXXX1'                                                 00166300
         AIF   ('&XINTINFO' NE 'YES').ZI5A                              00166400
&ZW                   SETC  '&ZW.000001'                                00166500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00166600
                      AGO   .ZI5C                                       00166700
.*                                                                      00166800
.ZI5A                 ANOP  ,                                           00166900
&ZW                   SETC  '&ZW.000000'                                00167000
.ZI5C                 ANOP  ,                                           00167100
.*-------------------------------------------------------------------   00167200
.***AI.L11 XFLAGS BL1                                                   00167300
                      AIF   ('&ZCLNG' NE 'YES').ZI5E  ALL ZERO BITS     00167400
&ZOPN                 SETA  &ZOPN+1                                     00167500
&ZOPL(&ZOPN)          SETC  ' '                                         00167600
&ZOPO(&ZOPN)          SETC  'OI'                                        00167700
&ZOPV(&ZOPN)          SETC  '1(1),B''&ZW'''                             00167800
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00167900
.ZI5E                 ANOP  ,                                           00168000
.*-------------------------------------------------------------------   00168100
.***AI.L25  XANSAREAALET F                                              00168200
                      AIF   ('&ZXANSAREAALET' EQ '').ZI7E               00168300
                      AIF   ('&ZXANSAREAALET' EQ 'OUTPUT').ZI7E         00168400
&ZCGPR                SETC  '&XANSAREAALET'                             00168500
.*                                                                      00168600
                      AIF   ('&XANSAREAALET'(1,1) NE '(').ZI7B          00168700
&ZCGPR   SETC  '0('.'&XANSAREAALET'(2,K'&XANSAREAALET-2).')'            00168800
                      AGO   .ZI7D                                       00168900
.ZI7B                 ANOP  ,                                           00169000
.*                                                                      00169100
&ZC                   SETC  '&XANSAREAALET'(1,1)                        00169200
                      AIF   (T'&ZC NE 'N').ZI7D                         00169300
&ZC                   SETC  '&XANSAREAALET'                             00169400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI7D                00169500
&ZCGPR                SETC  '=AL4(&XANSAREAALET)'                       00169600
.*                                                                      00169700
.ZI7D                 ANOP  ,                                           00169800
.*                                                                      00169900
&ZOPN                 SETA  &ZOPN+1                                     00170000
&ZOPL(&ZOPN)          SETC  ' '                                         00170100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00170200
&ZOPV(&ZOPN)          SETC  '4(4,1),&ZCGPR'                             00170300
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREAALET XANSAREAALET'            00170400
.*                                                                      00170500
.ZI7E                 ANOP  ,                                           00170600
.*-------------------------------------------------------------------   00170700
&ZOPN1                SETA &ZOPN                                        00170800
.*******************************************************************    00170900
.***  PROCESS CNZQUERY OUTPUT PARAMETERS                                00171000
.*******************************************************************    00171100
                      ACTR  10000                                       00171200
.*******************************************************************    00171300
.***AO.X02  RETURN CODE PROCESSING                                      00171400
.*******************************************************************    00171500
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00171600
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00171700
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00171800
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00171900
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00172000
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00172100
&ZOPN                 SETA  &ZOPN+1                                     00172200
&ZOPL(&ZOPN)          SETC  ' '                                         00172300
&ZOPO(&ZOPN)          SETC  'ST'                                        00172400
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00172500
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00172600
                      AGO   .ZMRETX                                     00172700
.*                                                                      00172800
.ZMRET2               ANOP  ,                                           00172900
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00173000
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00173100
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00173200
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00173300
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00173400
&ZOPN                 SETA  &ZOPN+1                                     00173500
&ZOPL(&ZOPN)          SETC  ' '                                         00173600
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00173700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00173800
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00173900
.ZMRETX               ANOP  ,                                           00174000
.*******************************************************************    00174100
.***AO.X03  REASON CODE PROCESSING                                      00174200
.*******************************************************************    00174300
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00174400
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00174500
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00174600
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00174700
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00174800
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00174900
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00175000
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00175100
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00175200
&ZOPN                 SETA  &ZOPN+1                                     00175300
&ZOPL(&ZOPN)          SETC  ' '                                         00175400
&ZOPO(&ZOPN)          SETC  'ST'                                        00175500
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00175600
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00175700
                      AGO   .ZMRSNX                                     00175800
.*                                                                      00175900
.ZMRSN2               ANOP  ,                                           00176000
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00176100
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00176200
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00176300
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00176400
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00176500
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00176600
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00176700
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00176800
&ZOPN                 SETA  &ZOPN+1                                     00176900
&ZOPL(&ZOPN)          SETC  ' '                                         00177000
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00177100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00177200
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00177300
.ZMRSNX               ANOP  ,                                           00177400
.*******************************************************************    00177500
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00177600
.*******************************************************************    00177700
.ZMFLX                ANOP  ,              MF=L PROCESSING              00177800
.*******************************************************************    00177900
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00178000
.*******************************************************************    00178100
                      ACTR  10000                                       00178200
.*                                                                      00178300
                      LCLA  &ZLC           COLUMN POSITION              00178400
                      LCLA  &ZOPX          LIST TABLE INDEX             00178500
                      LCLC  &ZLL           LABEL                        00178600
                      LCLC  &ZLOP          OPERATION                    00178700
                      LCLC  &ZLV           VALUE                        00178800
                      LCLC  &ZLD           DESCRIPTION                  00178900
.*                                                                      00179000
&ZOPX                 SETA  1                                           00179100
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00179200
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00179300
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00179400
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00179500
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00179600
                      AIF   (K'&ZLD LE 0).ZL5                           00179700
&ZLC                  SETA  35             COMMENT COLUMN               00179800
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00179900
&ZLC                  SETA  33             COMMMENT COLUMN              00180000
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00180100
&ZLV                  SETC  '&ZLV'.' '                                  00180200
                      AGO   .ZL3                                        00180300
.*                                                                      00180400
.ZL4                  ANOP  ,                                           00180500
&ZLV                  SETC  '&ZLV'.' '                                  00180600
.ZL5                  ANOP  ,                                           00180700
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00180800
.*                                                                      00180900
&ZLL     &ZLOP &ZLV                                                     00181000
.*                                                                      00181100
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00181200
                      AGO   .ZL2           CONTINUE LOOPING             00181300
.*                                                                      00181400
.ZLX                  ANOP  ,                                           00181500
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00181600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00181700
         AIF   ('&INTINFO' EQ '').NOINTINFO                        @L1A 00181800
&ZMS     SETC  'INTINFO MUST NOT BE SPECIFIED'                     @L1A 00181900
         MNOTE 8,'&ZMS'                                            @L1A 00182000
         POP   PRINT                                               @L1A 00182100
         MEXIT                                                     @L1A 00182200
.NOINTINFO ANOP                                                    @L1A 00182300
         L     14,16(0,0)              GET CVT ADDRESS             @L1A 00182400
         L     14,772(14,0)            GET SFT ADDRESS             @L1A 00182500
         L     14,100(14,0)            GET LX/EX FOR SERVICE RTN   @L1A 00182600
         LA    14,29(14,0)             Add EX                      @L1A 00182700
         PC    0(14)                   Call routine                @L1A 00182800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00182900
.ZLINKX               ANOP  ,                                           00183000
.*******************************************************************    00183100
.***AP.X01  FORMAT GENERATED CODE                                       00183200
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00183300
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00183400
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00183500
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00183600
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00183700
                      AIF   (K'&ZLD LE 0).ZL51                          00183800
&ZLC                  SETA  35             COMMENT COLUMN               00183900
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00184000
&ZLC                  SETA  33             COMMENT COLUMN               00184100
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00184200
&ZLV                  SETC  '&ZLV'.' '                                  00184300
                      AGO   .ZL31                                       00184400
.*                                                                      00184500
.ZL41                 ANOP  ,                                           00184600
&ZLV                  SETC  '&ZLV'.' '                                  00184700
.ZL51                 ANOP  ,                                           00184800
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00184900
.*                                                                      00185000
&ZLL     &ZLOP &ZLV                                                     00185100
.*                                                                      00185200
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00185300
                      AGO   .ZL21          CONTINUE LOOPING             00185400
.*                                                                      00185500
.ZLX1                 ANOP  ,                                           00185600
.*******************************************************************    00185700
.***AP.X02  END OF CNZQUERY MACRO                                       00185800
&ZCNZQUERY            SETC  'YES'          SET CNZQUERY USED            00185900
         POP   PRINT                                                    00186000
*                                            CNZQUERY-0                 00186100
         SPACE 1                                                        00186200
.ZLX2                 ANOP  ,                                           00186300
         MEND                                                           00186400
**********************************************************************/ 00186500
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00186600
*%CNZQUERY: MACRO KEYS(WTOR,AMRF,INTINFO,ANSAREAALET,RETCODE,RSNCODE,   00186700
*                 PLISTVER,MF);                                         00186800
*  ANS('?'!!MACLABEL!!' '!!'CNZQUERP '!!MACLIST!!                       00186900
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00187000
*%END CNZQUERY;                                                         00187100
