*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXCNOTE                               -08/23/21-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  XCF Note Pad Interface                        * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 2013, 2013                         * 00001200
*                                                                     * 00001300
* STATUS= HBB7790                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The XCF Note Pad macro (IXCNOTE) encapsulates the interfaces   * 00002100
*      that allow an application to interact with the XCF Note Pad    * 00002200
*      service.  With these interfaces, an application can create or  * 00002300
*      delete a "note pad".  A note pad contains zero or more notes.  * 00002400
*      A "note" contains 1024 bytes of application data and is        * 00002500
*      identified by an application provided "name".  An application  * 00002600
*      that is "connected" to a note pad can create, read, modify, or * 00002700
*      delete notes in the note pad.  Each note has an "instance      * 00002800
*      number" that is assigned by XCF whenever the note is created   * 00002900
*      or modified.  The instance number uniquely identifies an       * 00003000
*      instance of a particular note.                                 * 00003100
*                                                                     * 00003200
*      Depending on the various attributes specified when the note    * 00003300
*      pad is created, one might use a note pad to:                   * 00003400
*                                                                     * 00003500
*                                                                     * 00003600
*      o   Store data that would allow a backup instance of an        * 00003700
*          application to resume processing on some other system in   * 00003800
*          the sysplex after the primary instance had failed.         * 00003900
*                                                                     * 00004000
*      o   Share data between systems in the sysplex.  One can use    * 00004100
*          the instance number of a note to provide a simple "compare * 00004200
*          and swap" like serialization to ensure the integrity of    * 00004300
*          updates to the shared notes.                               * 00004400
*                                                                     * 00004500
*                                                                     * 00004600
*                                                                     * 00004700
*      To begin using a note pad, one must first create it. Once      * 00004800
*      created, the note pad will persist until one of the following  * 00004900
*      occur:                                                         * 00005000
*                                                                     * 00005100
*                                                                     * 00005200
*      o   It is explicitly deleted by the exploiter with an IXCNOTE  * 00005300
*          REQUEST=NOTEPAD REQTYPE=DELETE request                     * 00005400
*                                                                     * 00005500
*      o   The note pad fails.                                        * 00005600
*                                                                     * 00005700
*      o   It is manually deleted through use of the note pad         * 00005800
*          deletion utility (IXCDELNP).                               * 00005900
*                                                                     * 00006000
*                                                                     * 00006100
*      The creator of the note pad determines its attributes.  For    * 00006200
*      example, the creator specifies the number of notes the note    * 00006300
*      pad needs to hold and indicates whether the note pad can be    * 00006400
*      updated by multiple "connections".                             * 00006500
*                                                                     * 00006600
*      After a note pad is created, a program must "connect" to the   * 00006700
*      note pad in order to use it.  A note pad can be accessed from  * 00006800
*      one or more systems in the sysplex.  On any given system, it   * 00006900
*      could be that each address space that uses the note pad will   * 00007000
*      need its own connection.  In other cases, a single connection  * 00007100
*      from one particular address space will suffice.  The design of * 00007200
*      the exploiting application will determine what is needed.      * 00007300
*                                                                     * 00007400
*      A connection will either have "task scope" or "address space   * 00007500
*      scope".  If the task that creates the connection has its own   * 00007600
*      security environment (TCBSENV is nonzero), the connection will * 00007700
*      have task scope.  If the connection is created by an SRB, or   * 00007800
*      by a task that does not have its own security environment      * 00007900
*      (TCBSENV is zero), the connection will have address space      * 00008000
*      scope.  In either case, the "connector address space" is the   * 00008100
*      address space that is home when the connection is created.     * 00008200
*                                                                     * 00008300
*      For a connection with task scope, the "connector" is the task  * 00008400
*      itself.  For a connection with address space scope, the        * 00008500
*      "connector" is any work unit whose home address space is the   * 00008600
*      connector address space, and for which the work unit is either * 00008700
*      an SRB or a task that does not have its own security           * 00008800
*      environment (TCBSENV is zero).  Thus an address space          * 00008900
*      connection can have multiple work units be the "connector".    * 00009000
*                                                                     * 00009100
*      A "valid user" is a work unit that is allowed to use a         * 00009200
*      connection to a note pad.  Each IXCNOTE request that requires  * 00009300
*      a connection indicates the conditions under which the          * 00009400
*      requester is deemed to be a valid user.  The creator of the    * 00009500
*      connection specifies the USAGE keyword to indicate the         * 00009600
*      criteria that are to be used to determine a valid user when    * 00009700
*      accessing notes in the note pad (REQUEST=NOTE or               * 00009800
*      REQUEST=NOTES).                                                * 00009900
*                                                                     * 00010000
*      After a connection is created, the SAF profile of the          * 00010100
*      connector could change.  XCF will not typically be aware of    * 00010200
*      such changes since SAF checking is not typically performed for * 00010300
*      a connection being used by a work unit deemed to be a valid    * 00010400
*      user.  To be certain that changes to the SAF profile are       * 00010500
*      observed by XCF and applied to the connector, one must delete  * 00010600
*      the connection and create it anew.  In some cases it might be  * 00010700
*      necessary to bring down the connector address space in order   * 00010800
*      for the changes to become effective.                           * 00010900
*                                                                     * 00011000
*      A note pad resides in a coupling facility.  In general, if the * 00011100
*      coupling facility containing a note pad fails, the note pad    * 00011200
*      fails as well.  XCF will automatically delete a failed note    * 00011300
*      pad and all of its connections throughout the sysplex.  As     * 00011400
*      needed, the application is responsible for recovering the note * 00011500
*      pad by creating it anew, reestablishing the necessary          * 00011600
*      connections to the new note pad instance, and recreating the   * 00011700
*      notes.                                                         * 00011800
*                                                                     * 00011900
*      All requests that manipulate notes in the note pad, for        * 00012000
*      example REQUEST=NOTE and REQUEST=NOTES, might be rejected if   * 00012100
*      conditions are such that typical response times might be       * 00012200
*      significantly elongated.  In such cases, XCF will return with  * 00012300
*      a return and reason code to so indicate (IXCNOTERSNQUIESCED).  * 00012400
*      Requests would be rejected in this manner, for example, when   * 00012500
*      the coupling facility structure containing the note pad is     * 00012600
*      quiesced for rebuild processing.                               * 00012700
*                                                                     * 00012800
*      The connector can issue IXCNOTE REQUEST=CONNECTION             * 00012900
*      REQTYPE=PAUSE to wait for the quiesce conditions to clear.     * 00013000
*      The service routine processing the PAUSE request might also    * 00013100
*      return if the quiesce conditions change.  If the note pad is   * 00013200
*      once again accessible, the connector can once again try to use * 00013300
*      IXCNOTE to manipulate notes in the note pad.  If the note pad  * 00013400
*      is still inaccessible, the requester can inspect the quiesce   * 00013500
*      conditions to determine whether to reissue the PAUSE request   * 00013600
*      to continue waiting, or to take some other appropriate         * 00013700
*      recovery action (such as disconnecting from the note pad, or   * 00013800
*      perhaps even deleting the note pad).  As an alternative to     * 00013900
*      using the PAUSE request, the connector can simply retry the    * 00014000
*      request after allowing some time for the condition to clear    * 00014100
*      (poll).                                                        * 00014200
*                                                                     * 00014300
*      The IXCNOTE macro completes a parameter list with caller       * 00014400
*      provided data and generates a stacking, space-switch program   * 00014500
*      call to an XCF service routine.  Note that the calling work    * 00014600
*      unit might be suspended until the request completes.           * 00014700
*                                                                     * 00014800
*01* INPUT REGISTER INFORMATION:                                      * 00014900
*                                                                     * 00015000
*    Before issuing the IXCNOTE macro, the caller does not have to    * 00015100
*    place any information into any register unless using it in       * 00015200
*    register notation for a particular parameter, or using it as a   * 00015300
*    base register.                                                   * 00015400
*                                                                     * 00015500
*    Input general purpose registers (GPRs):                          * 00015600
*                                                                     * 00015700
*                                                                     * 00015800
*    REGISTER    CONTENTS                                             * 00015900
*                                                                     * 00016000
*    0-1         Reserved                                             * 00016100
*                                                                     * 00016200
*    2-13        Undefined                                            * 00016300
*                                                                     * 00016400
*    14-15       Reserved                                             * 00016500
*                                                                     * 00016600
*                                                                     * 00016700
*                                                                     * 00016800
*    Input access registers (ARs):                                    * 00016900
*                                                                     * 00017000
*                                                                     * 00017100
*    REGISTER    CONTENTS                                             * 00017200
*                                                                     * 00017300
*    0-1         Reserved                                             * 00017400
*                                                                     * 00017500
*    2-13        Undefined                                            * 00017600
*                                                                     * 00017700
*    14-15       Reserved                                             * 00017800
*                                                                     * 00017900
*                                                                     * 00018000
*                                                                     * 00018100
*01* OUTPUT REGISTER INFORMATION:                                     * 00018200
*                                                                     * 00018300
*    When control returns to the caller, the general purpose          * 00018400
*    registers (GPRs) contain:                                        * 00018500
*                                                                     * 00018600
*                                                                     * 00018700
*    REGISTER    CONTENTS                                             * 00018800
*                                                                     * 00018900
*    0           Reason code, if applicable, and if GPR15 return code * 00019000
*                is nonzero                                           * 00019100
*                                                                     * 00019200
*    1           Used as a work register by the system                * 00019300
*                                                                     * 00019400
*    2-13        Unchanged                                            * 00019500
*                                                                     * 00019600
*    14          Used as a work register by the system                * 00019700
*                                                                     * 00019800
*    15          Return code                                          * 00019900
*                                                                     * 00020000
*    AR0-AR1     Used as a work register by the system                * 00020100
*                                                                     * 00020200
*    AR2-AR13    unchanged                                            * 00020300
*                                                                     * 00020400
*    AR14-AR15   Used as a work register by the system                * 00020500
*                                                                     * 00020600
*                                                                     * 00020700
*                                                                     * 00020800
*    When control returns to the caller, the access registers (ARs)   * 00020900
*    contain:                                                         * 00021000
*                                                                     * 00021100
*                                                                     * 00021200
*    REGISTER    CONTENTS                                             * 00021300
*                                                                     * 00021400
*    0-1         Used as work registers by the system                 * 00021500
*                                                                     * 00021600
*    2-13        Unchanged                                            * 00021700
*                                                                     * 00021800
*    14-15       Used as work registers by the system                 * 00021900
*                                                                     * 00022000
*                                                                     * 00022100
*                                                                     * 00022200
*01* PERFORMANCE IMPLICATIONS:                                        * 00022300
*    None.                                                            * 00022400
*                                                                     * 00022500
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00022600
*                                                                     * 00022700
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00022800
*                                                                     * 00022900
*01* ENVIRONMENT:                                                     * 00023000
*                                                                     * 00023100
*                                                                     * 00023200
*      Dispatchable unit mode: Task or SRB mode.                      * 00023300
*                                                                     * 00023400
*      Minimum authorization: Supervisor state or problem state.  Any * 00023500
*                        PSW-key mask (PKM).                          * 00023600
*                                                                     * 00023700
*                        Programs require appropriate SAF (System     * 00023800
*                        Authorization Facility) authorization to the * 00023900
*                        FACILITY class resource                      * 00024000
*                        IXCNOTE.owner.application when creating,     * 00024100
*                        deleting, querying, or modifying a note pad, * 00024200
*                        and when creating a connection to a note     * 00024300
*                        pad.  The "owner" and "application" are      * 00024400
*                        derived from the note pad name.              * 00024500
*                                                                     * 00024600
*                                                                     * 00024700
*                        o   To create or delete a note pad or modify * 00024800
*                            note pad attributes, the program must    * 00024900
*                            have CONTROL access.                     * 00025000
*                                                                     * 00025100
*                        o   To query a note pad, the program must    * 00025200
*                            have READ access                         * 00025300
*                                                                     * 00025400
*                        o   To create a connection to a note pad     * 00025500
*                            that can be used to create, read, write, * 00025600
*                            replace, or delete notes, the program    * 00025700
*                            must have UPDATE access                  * 00025800
*                                                                     * 00025900
*                        o   To create a connection to a note pad     * 00026000
*                            that can only read notes, the program    * 00026100
*                            must have READ access                    * 00026200
*                                                                     * 00026300
*                                                                     * 00026400
*                                                                     * 00026500
*                        A program that uses a connection must be     * 00026600
*                        recognized by XCF as a valid user of the     * 00026700
*                        connection.  Each applicable request         * 00026800
*                        documents the conditions under which a       * 00026900
*                        program is deemed to be a valid user.  If    * 00027000
*                        the program is not recognized as a valid     * 00027100
*                        user, XCF might perform a SAF check to       * 00027200
*                        verify that the user has the authority       * 00027300
*                        appropriate for the request.                 * 00027400
*                                                                     * 00027500
*                        Note that all SAF checking is performed      * 00027600
*                        against the security environment of the work * 00027700
*                        unit.  For a task that has a task specific   * 00027800
*                        security environment, the Access Control     * 00027900
*                        Environment Element (ACEE) anchored at       * 00028000
*                        offset TCBSENV in the TCB (macro IKJTCB) is  * 00028100
*                        used.  For an SRB, or a task for which       * 00028200
*                        TCBSENV is zero, the ACEE anchored at offset * 00028300
*                        ASXBSENV in the ASXB (macro IHAASXB) for the * 00028400
*                        home address space is used.                  * 00028500
*                                                                     * 00028600
*                        If SAF is not available, or if there is no   * 00028700
*                        IXCNOTE.owner.application resource defined   * 00028800
*                        for the note pad in the FACILITY class, a    * 00028900
*                        request to create, delete, query, modify or  * 00029000
*                        connect to a note pad is rejected if the     * 00029100
*                        program is running in problem state with a   * 00029200
*                        PKM allowing key 8 to 15                     * 00029300
*                        (IXCNOTERSNNOSECPROFILE).  Such requests are * 00029400
*                        accepted if the program is running in        * 00029500
*                        supervisor state or with a PKM allowing key  * 00029600
*                        0 to 7.  However, note that the program will * 00029700
*                        need to run in supervisor state or with a    * 00029800
*                        PKM allowing key 0 to 7 when using a         * 00029900
*                        connection that was created under these      * 00030000
*                        circumstances.                               * 00030100
*                                                                     * 00030200
*                        Any program that specifies USAGE=SERVER or   * 00030300
*                        USAGE=CLIENT when creating a connection to a * 00030400
*                        note pad must be running in supervisor state * 00030500
*                        or with a PKM allowing key 0 to 7.           * 00030600
*                                                                     * 00030700
*      AMODE:            31- or 64-bit.                               * 00030800
*                                                                     * 00030900
*                        If in 64-bit mode, specify SYSSTATE          * 00031000
*                        AMODE64=YES before invoking this macro.      * 00031100
*                                                                     * 00031200
*      ASC mode:         Primary or Access Register.                  * 00031300
*                                                                     * 00031400
*                        If in Access Register (AR) ASC mode, specify * 00031500
*                        SYSSTATE ASCENV=AR before invoking this      * 00031600
*                        macro.                                       * 00031700
*                                                                     * 00031800
*      Interrupt status: Enabled for I/O and external interrupts      * 00031900
*                                                                     * 00032000
*      Locks:            No locks held                                * 00032100
*                                                                     * 00032200
*      Control parameters: Control parameters must be in the primary  * 00032300
*                        address space or, for AR-mode callers, must  * 00032400
*                        be in an address/data space that is          * 00032500
*                        addressable through a public entry on the    * 00032600
*                        caller's dispatchable unit access list       * 00032700
*                        (DU-AL).  The control parameters can also    * 00032800
*                        reside in a common area data space.          * 00032900
*                                                                     * 00033000
*                        The control parameters must be accessible    * 00033100
*                        using the PSW key of the program making the  * 00033200
*                        request.  The service routine will always    * 00033300
*                        fetch the control parameters.  It might also * 00033400
*                        store into them.                             * 00033500
*                                                                     * 00033600
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00033700
*                                                                     * 00033800
*                        Problem state programs with a PKM allowing   * 00033900
*                        key 8 to 15 must be running task mode with   * 00034000
*                        home and primary being the same address      * 00034100
*                        space for the following requests:            * 00034200
*                                                                     * 00034300
*                                                                     * 00034400
*                        o   REQUEST=NOTEPAD REQTYPE=CREATE           * 00034500
*                                                                     * 00034600
*                        o   REQUEST=NOTEPAD REQTYPE=QUERY            * 00034700
*                                                                     * 00034800
*                        o   REQUEST=NOTEPAD REQTYPE=DELETE           * 00034900
*                                                                     * 00035000
*                        o   REQUEST=NOTEPAD REQTYPE=MODIFY           * 00035100
*                                                                     * 00035200
*                        o   REQUEST=CONNECTION REQTYPE=CREATE        * 00035300
*                                                                     * 00035400
*                                                                     * 00035500
*                                                                     * 00035600
*                        Any program that specifies USAGE=SERVER or   * 00035700
*                        USAGE=CLIENT when creating a connection to a * 00035800
*                        note pad must be running with home and       * 00035900
*                        primary being the same address space.        * 00036000
*                                                                     * 00036100
*                                                                     * 00036200
*                                                                     * 00036300
*01* RESTRICTIONS:                                                    * 00036400
*                                                                     * 00036500
*                                                                     * 00036600
*    o   Task mode callers cannot have an enabled, unlocked task      * 00036700
*        (EUT) FRR set.                                               * 00036800
*                                                                     * 00036900
*    o   IXCNOTE cannot be used by tasks higher in the task tree than * 00037000
*        the cross memory resource owning task (the top, or first,    * 00037100
*        job step task in the address space).                         * 00037200
*                                                                     * 00037300
*    o   Address space and task resource managers are not permitted   * 00037400
*        to issue IXCNOTE requests that process note pads or          * 00037500
*        connections (REQUEST=NOTEPAD or REQUEST=CONNECTION).  Note   * 00037600
*        that XCF will automatically delete any connection associated * 00037700
*        with a terminated address space or task.                     * 00037800
*                                                                     * 00037900
*    o   Callers running in SRB mode should refrain from invoking the * 00038000
*        IXCNOTE service under the following circumstances:           * 00038100
*                                                                     * 00038200
*                                                                     * 00038300
*        -   After the SRB receives a X'47B' abend                    * 00038400
*                                                                     * 00038500
*        -   When running in a suspend exit after invoking SUSPEND    * 00038600
*                                                                     * 00038700
*                                                                     * 00038800
*                                                                     * 00038900
*        In these cases, the IXCNOTE request might be rejected        * 00039000
*        because the service routine will not be able to suspend the  * 00039100
*        caller as needed (IXCNOTERSNBADSUSPENDENV).                  * 00039200
*                                                                     * 00039300
*    o   All storage areas provided to the IXCNOTE service must be    * 00039400
*        accessible via the PKM of the caller.  In particular, this   * 00039500
*        restriction applies to the input control parameters as well  * 00039600
*        as storage areas identified by the keywords ANSAREA, BUFFER, * 00039700
*        CRITERIA, DESCRIPTION, and INFO.                             * 00039800
*                                                                     * 00039900
*    o   When using REQUEST=NOTEPAD, REQTYPE=MODIFY to modify the     * 00040000
*        number of notes (#NOTES) that a note pad is allowed to hold, * 00040100
*        IBM recommends that if connections to the note pad exist,    * 00040200
*        then all connections to the note pad be from systems that    * 00040300
*        support REQUEST=NOTEPAD, REQTYPE=MODIFY.  To determine       * 00040400
*        whether the support for REQUEST=NOTEPAD, REQTYPE=MODIFY is   * 00040500
*        available on the system from which you are connecting, issue * 00040600
*        IXCQUERY REQINFO=FEATURES.  QuReqRfIxcNoteResiliency         * 00040700
*        indicates whether the support is available.                  * 00040800
*                                                                     * 00040900
*        If a connection to the note pad resides on a system that     * 00041000
*        does not support REQUEST=NOTEPAD, REQTYPE=MODIFY (a "down    * 00041100
*        level" system), an IXCNOTE request issued to create, read,   * 00041200
*        modify, or delete notes in the note pad from the down level  * 00041300
*        system while a note pad #NOTES is being modified may render  * 00041400
*        the note pad unusable from the down level system for the     * 00041500
*        life of the IPL.  Restoring access to the note pad from the  * 00041600
*        down level system will require a re-IPL of the down level    * 00041700
*        system or deleting and re-creating the note pad.             * 00041800
*                                                                     * 00041900
*    o   For REQUEST=NOTEPAD, REQTYPE=CREATE, LOSSCONNDELETE=YES, IBM * 00042000
*        recommends that if connections to the note pad exist, then   * 00042100
*        all connections to the note pad be from systems that support * 00042200
*        LOSSCONNDELETE=YES.                                          * 00042300
*                                                                     * 00042400
*        If a connection to the note pad resides on a system that     * 00042500
*        does not support LOSSCONNDELETE=YES (a "down level" system), * 00042600
*        an IXCNOTE request issued to create, read, modify, or delete * 00042700
*        notes in the note pad from the down level system may not be  * 00042800
*        properly fenced when the note pad is automatically being     * 00042900
*        deleted by LOSSCONNDELETE processing.                        * 00043000
*                                                                     * 00043100
*        If a "down level" system exists in the sysplex, it is        * 00043200
*        possible that the LOSSCONNDELETE=YES specification will not  * 00043300
*        be honored. This can occur if an "up level" system needs     * 00043400
*        help from another system in the sysplex to initiate the      * 00043500
*        LOSSCONNDELETE processing and the available helping          * 00043600
*        system(s) are "down level". An "up level" system may need    * 00043700
*        help initiating the LOSSCONNDELETE processing if the system  * 00043800
*        does not have access to the note pad catalog structure.      * 00043900
*                                                                     * 00044000
*                                                                     * 00044100
*                                                                     * 00044200
*01* SYNTAX:                                                          * 00044300
*                                                                     * 00044400
*Ýxlabel¨  IXCNOTE  Ð  REQUEST=NOTEPAD                                * 00044500
*                   !     ,NOTEPAD=xnotepad                           * 00044600
*                   !   Ð ,REQTYPE=CREATE                             * 00044700
*                   !   !     ,DESCRIPTION=xdescription               * 00044800
*                   !   !    Ý,INFO=»xinfo!0º¨                        * 00044900
*                   !   !     ,#NOTES=x#notes                         * 00045000
*                   !   !   Ð ,MULTIWRITE=NO                          * 00045100
*                   !   !   ¿ ,MULTIWRITE=YES                         * 00045200
*                   !   !   ÐÝ,DUPLEX=AVOID¨                          * 00045300
*                   !   !   ¿Ý,DUPLEX=FAVOR¨                          * 00045400
*                   !   !   ÐÝ,INSTCOMP=DISCRETIONARY¨                * 00045500
*                   !   !   ¿Ý,INSTCOMP=REQUIRED¨                     * 00045600
*                   !   !   ÐÝ,TAGGING=XCF¨                           * 00045700
*                   !   !   ¿Ý,TAGGING=USER¨                          * 00045800
*                   !   !   ÐÝ,TRACKTAG=NO¨                           * 00045900
*                   !   !   ÔÝ,TRACKTAG=CURRENT¨                      * 00046000
*                   !   !   ¿Ý,TRACKTAG=LIFETIME¨                     * 00046100
*                   !   !   ÐÝ,LOSSCONNDELETE=NO¨                     * 00046200
*                   !   !   ¿Ý,LOSSCONNDELETE=YES¨                    * 00046300
*                   !   Ô ,REQTYPE=QUERY                              * 00046400
*                   !   Ô ,REQTYPE=DELETE                             * 00046500
*                   !   !    Ý,ETODCREATED=»xetodcreated!ANYº¨        * 00046600
*                   !   !   Ð ,CONDITIONS=NO                          * 00046700
*                   !   !   ¿ ,CONDITIONS=YES                         * 00046800
*                   !   !         ,MUSTBE=EMPTY!UNUSED                * 00046900
*                   !   ¿ ,REQTYPE=MODIFY                             * 00047000
*                   !         ,#NOTES=x#notes                         * 00047100
*                   !    Ý,TIMEOUT=»xtimeout!XCFº¨                    * 00047200
*                   Ô ,REQUEST=CONNECTION                             * 00047300
*                   !     ,CONNECTION=xconnection                     * 00047400
*                   !   Ð ,REQTYPE=CREATE                             * 00047500
*                   !   !     ,NOTEPAD=xnotepad                       * 00047600
*                   !   !     ,DESCRIPTION=xdescription               * 00047700
*                   !   !    Ý,INFO=»xinfo!0º¨                        * 00047800
*                   !   !   ÐÝ,ACCESS=UPDATE¨                         * 00047900
*                   !   !   ¿Ý,ACCESS=READ¨                           * 00048000
*                   !   !   Ð ,TERMSCOPE=TASK                         * 00048100
*                   !   !   !    Ý,TTOKEN=»xttoken!CURRENTº¨          * 00048200
*                   !   !   Ô ,TERMSCOPE=HOME                         * 00048300
*                   !   !   ¿ ,TERMSCOPE=PRIMARY                      * 00048400
*                   !   !   ÐÝ,USAGE=CONNECTOR¨                       * 00048500
*                   !   !   ÔÝ,USAGE=SERVER¨                          * 00048600
*                   !   !   ¿Ý,USAGE=CLIENT¨                          * 00048700
*                   !   Ô ,REQTYPE=DELETE                             * 00048800
*                   !   Ô ,REQTYPE=PAUSE                              * 00048900
*                   !   ¿ ,REQTYPE=RESUME                             * 00049000
*                   !    Ý,TIMEOUT=»xtimeout!XCFº¨                    * 00049100
*                   Ô ,REQUEST=NOTE                                   * 00049200
*                   !     ,CONNECTION=xconnection                     * 00049300
*                   !   Ð ,REQTYPE=CREATE                             * 00049400
*                   !   Ô ,REQTYPE=WRITE                              * 00049500
*                   !   Ô ,REQTYPE=REPLACE                            * 00049600
*                   !   Ô ,REQTYPE=READ                               * 00049700
*                   !   ¿ ,REQTYPE=DELETE                             * 00049800
*                   !     ,NAME=xname                                 * 00049900
*                   !   Ð ,TAGGING=USER                               * 00050000
*                   !   !    Ý,TAG=»xtag!KEEPº¨                       * 00050100
*                   !   ¿ ,TAGGING=XCF                                * 00050200
*                   !        Ý,TAG=xtag¨                              * 00050300
*                   !    Ý,INSTANCE#=»xinstance#!IGNOREº¨             * 00050400
*                   !   ÐÝ,KEEPNOTE=NO¨                               * 00050500
*                   !   ¿Ý,KEEPNOTE=YES¨                              * 00050600
*                   !   Ð ,NOBUFFER                                   * 00050700
*                   !   ¿ ,BUFFER=xbuffer                             * 00050800
*                   !         ,BUFLEN=xbuflen                         * 00050900
*                   ¿ ,REQUEST=NOTES                                  * 00051000
*                         ,CONNECTION=xconnection                     * 00051100
*                       Ð ,REQTYPE=READ                               * 00051200
*                       !     ,RESUMETOKEN=xresumetoken               * 00051300
*                       !   Ð ,NOBUFFER                               * 00051400
*                       !   ¿ ,BUFFER=xbuffer                         * 00051500
*                       !         ,BUFLEN=xbuflen                     * 00051600
*                       ¿ ,REQTYPE=DELETE                             * 00051700
*                            Ý,MAXTAG=»xmaxtag!NONEº¨                 * 00051800
*                       Ð ,CHOOSE=ALL                                 * 00051900
*                       ¿ ,CHOOSE=BYCRITERIA                          * 00052000
*                             ,CRITERIA=xcriteria                     * 00052100
*                   Ð ,NOANSAREA                                      * 00052200
*                   ¿ ,ANSAREA=xansarea                               * 00052300
*                         ,ANSLEN=xanslen                             * 00052400
*                    Ý,RETCODE=xretcode¨                              * 00052500
*                    Ý,RSNCODE=xrsncode¨                              * 00052600
*                    Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨          * 00052700
*                   ÐÝ,MF=S¨                                          * 00052800
*                   ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                   * 00052900
*                   ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                     * 00053000
*                                                                     * 00053100
*                                                                     * 00053200
*      Where:                                                         * 00053300
*                                                                     * 00053400
*                                                                     * 00053500
*      Ýxlabel¨                                                       * 00053600
*          is an optional symbol, starting in column 1, that is the   * 00053700
*          name on the IXCNOTE macro invocation.  The name must       * 00053800
*          conform to the rules for an ordinary assembler language    * 00053900
*          symbol.                                                    * 00054000
*          DEFAULT: No name.                                          * 00054100
*                                                                     * 00054200
*                                                                     * 00054300
*                                                                     * 00054400
*                                                                     * 00054500
*      REQUEST=»NOTEPAD!CONNECTION!NOTE!NOTESº                        * 00054600
*          is a required keyword input specifying the request to be   * 00054700
*          processed.                                                 * 00054800
*                                                                     * 00054900
*                                                                     * 00055000
*                                                                     * 00055100
*          REQUEST=NOTEPAD                                            * 00055200
*              Process a note pad.                                    * 00055300
*                                                                     * 00055400
*                                                                     * 00055500
*              NOTEPAD=xnotepad                                       * 00055600
*                  is the name (RS-type), or address in register      * 00055700
*                  (2)-(12), of a required 32 character input         * 00055800
*                  variable containing the name of the note pad to be * 00055900
*                  processed.                                         * 00056000
*                                                                     * 00056100
*                  Note pad names are mapped by                       * 00056200
*                  ixcynote_tNotePadName.  Note pad names consist of  * 00056300
*                  four 8 byte sections.  The various sections        * 00056400
*                  identify the owner of the note pad, the            * 00056500
*                  application using the note pad, and its function.  * 00056600
*                  Each 8 byte section must be left justified, padded * 00056700
*                  on the right with EBCDIC blanks as needed.  Each   * 00056800
*                  section can contain any uppercase alphabetic       * 00056900
*                  (A-Z), numeric (0-9), national (@,#,$), or         * 00057000
*                  underscore (_) character.  The first two sections, * 00057100
*                  which identify the owner and application, must not * 00057200
*                  be all blanks.  The remaining sections can be all  * 00057300
*                  blank.                                             * 00057400
*                                                                     * 00057500
*                  To avoid names used by IBM, do not begin note pad  * 00057600
*                  names ("owner") with the letters A through I or    * 00057700
*                  the character string SYS.  Names beginning with    * 00057800
*                  the string SYSXCF are reserved for use by XCF.     * 00057900
*                                                                     * 00058000
*                  Note that if the installation so chooses, it can   * 00058100
*                  define coupling facility structure names of the    * 00058200
*                  form IXCNP_ownerxx (where xx is the EBCDIC         * 00058300
*                  representation of a two digit hex number) to have  * 00058400
*                  XCF allocate note pads for the indicated "owner"   * 00058500
*                  in one of the designated structures.  In the       * 00058600
*                  absence of any such definition, the note pad will  * 00058700
*                  be allocated in a default note pad structure       * 00058800
*                  defined for XCF.                                   * 00058900
*                                                                     * 00059000
*                                                                     * 00059100
*                                                                     * 00059200
*                                                                     * 00059300
*              REQTYPE=»CREATE!QUERY!DELETE!MODIFYº                   * 00059400
*                  is a required keyword input indicating the type of * 00059500
*                  request to be processed against the note pad.      * 00059600
*                                                                     * 00059700
*                                                                     * 00059800
*                  REQTYPE=CREATE                                     * 00059900
*                      XCF is to create a new note pad.               * 00060000
*                                                                     * 00060100
*                                                                     * 00060200
*                                                                     * 00060300
*                      DESCRIPTION=xdescription                       * 00060400
*                          is the name (RS-type), or address in       * 00060500
*                          register (2)-(12), of a required 32        * 00060600
*                          character input variable containing a      * 00060700
*                          description of the note pad.  The string   * 00060800
*                          can contain any alphanumeric (A-Z, a-z,    * 00060900
*                          0-9), national (@, #, $), or special       * 00061000
*                          (underscore or blank) character.  Leading  * 00061100
*                          blanks and all blank descriptors are not   * 00061200
*                          permitted.  Descriptions are case          * 00061300
*                          sensitive.  The description will appear in * 00061400
*                          various XCF messages and diagnostic data   * 00061500
*                          reports.  The description is intended to   * 00061600
*                          help installations and service personnel   * 00061700
*                          understand the function, purpose, or role  * 00061800
*                          of the note pad.                           * 00061900
*                                                                     * 00062000
*                          The storage containing the DESCRIPTION     * 00062100
*                          must reside in the primary address space   * 00062200
*                          of the caller, or in a space addressable   * 00062300
*                          via a public entry on the dispatchable     * 00062400
*                          unit access list (DU-AL), or in a common   * 00062500
*                          area data space.  The storage must be      * 00062600
*                          accessible using the PSW key of the        * 00062700
*                          program making the request.                * 00062800
*                                                                     * 00062900
*                                                                     * 00063000
*                                                                     * 00063100
*                                                                     * 00063200
*                      ÝINFO=»xinfo!0º¨                               * 00063300
*                          is the name (RS-type), or address in       * 00063400
*                          register (2)-(12), of an optional 64       * 00063500
*                          character input variable which contains    * 00063600
*                          information about the note pad.  The       * 00063700
*                          content and interpretation of this         * 00063800
*                          information is determined by the creator   * 00063900
*                          of the note pad.  XCF associates a copy of * 00064000
*                          the indicated data with the note pad.  A   * 00064100
*                          copy of the data is visible to other       * 00064200
*                          processes in the sysplex via queries that  * 00064300
*                          return information about the note pad.     * 00064400
*                          The creator might, for example, use INFO   * 00064500
*                          to define the protocols that users of the  * 00064600
*                          note pad are to follow.  Alternatively,    * 00064700
*                          INFO could be used to describe the         * 00064800
*                          attributes of the note pad.                * 00064900
*                                                                     * 00065000
*                          The storage containing the INFO must       * 00065100
*                          reside in the primary address space of the * 00065200
*                          caller, or in a space addressable via a    * 00065300
*                          public entry on the dispatchable unit      * 00065400
*                          access list (DU-AL), or in a common area   * 00065500
*                          data space.  The storage must be           * 00065600
*                          accessible using the PSW key of the        * 00065700
*                          program making the request.                * 00065800
*                                                                     * 00065900
*                          DEFAULT: 0                                 * 00066000
*                                                                     * 00066100
*                                                                     * 00066200
*                                                                     * 00066300
*                                                                     * 00066400
*                      #NOTES=x#notes                                 * 00066500
*                          is the name (RS-type), or address in       * 00066600
*                          register (2)-(12), of a required fullword  * 00066700
*                          input variable containing the number of    * 00066800
*                          notes that the note pad is allowed to      * 00066900
*                          hold.  The specified value must be at      * 00067000
*                          least one.  If XCF is not able to          * 00067100
*                          accommodate the requested number of notes, * 00067200
*                          the create note pad request is rejected    * 00067300
*                          (IXCNOTERSNCONSTRAINED).                   * 00067400
*                                                                     * 00067500
*                          After the note pad is created, there can   * 00067600
*                          be times when XCF is unable to provide the * 00067700
*                          requested number of notes.  For example,   * 00067800
*                          the coupling facility structure containing * 00067900
*                          the note pad could be full.  In such       * 00068000
*                          cases, a request to process a note could   * 00068100
*                          be rejected with a return and reason code  * 00068200
*                          indicating that the note pad resources are * 00068300
*                          constrained (IXCNOTERSNCONSTRAINED).  If   * 00068400
*                          the note pad is not constrained, an        * 00068500
*                          attempt to create more than the requested  * 00068600
*                          number of notes is rejected with an        * 00068700
*                          indication that the note pad is full       * 00068800
*                          (IXCNOTERSN#NOTESEXCEEDED).                * 00068900
*                                                                     * 00069000
*                          If the note pad is full, actions that      * 00069100
*                          might be necessary in order to             * 00069200
*                          successfully create a new note or update   * 00069300
*                          an existing note include:                  * 00069400
*                                                                     * 00069500
*                                                                     * 00069600
*                          o   Issuing an IXCNOTE REQUEST=NOTEPAD     * 00069700
*                              REQYTPE=MODIFY to dynamically increase * 00069800
*                              the number of notes that the note pad  * 00069900
*                              is allowed to hold                     * 00070000
*                                                                     * 00070100
*                          o   Delete one or more existing notes      * 00070200
*                                                                     * 00070300
*                                                                     * 00070400
*                                                                     * 00070500
*                                                                     * 00070600
*                                                                     * 00070700
*                                                                     * 00070800
*                      MULTIWRITE=»NO!YESº                            * 00070900
*                          is a required keyword input indicating     * 00071000
*                          whether the note pad can be updated by     * 00071100
*                          more than one connector at a time.         * 00071200
*                                                                     * 00071300
*                                                                     * 00071400
*                          MULTIWRITE=NO                              * 00071500
*                              The note pad is to have at most one    * 00071600
*                              connector with write access            * 00071700
*                              (ACCESS=UPDATE) connected to the note  * 00071800
*                              pad at any one time.                   * 00071900
*                                                                     * 00072000
*                          MULTIWRITE=YES                             * 00072100
*                              The note pad can have two or more      * 00072200
*                              connectors with write access           * 00072300
*                              (ACCESS=UPDATE) connected to the note  * 00072400
*                              pad at the same time.                  * 00072500
*                                                                     * 00072600
*                                                                     * 00072700
*                                                                     * 00072800
*                                                                     * 00072900
*                                                                     * 00073000
*                                                                     * 00073100
*                      ÝDUPLEX=»AVOID!FAVORº¨                         * 00073200
*                          is an optional keyword input indicating a  * 00073300
*                          preference as to whether the note pad      * 00073400
*                          should be placed in a duplexed coupling    * 00073500
*                          facility structure.  There is no guarantee * 00073600
*                          that the specified preference can be       * 00073700
*                          satisfied.  If the preference is satisfied * 00073800
*                          initially, there is no guarantee that the  * 00073900
*                          preference will remain in effect for the   * 00074000
*                          life of the note pad.                      * 00074100
*                                                                     * 00074200
*                          A duplexed structure will generally        * 00074300
*                          provide greater availability since it is   * 00074400
*                          generally more resilient to failure than a * 00074500
*                          simplex structure.  A simplex structure    * 00074600
*                          will generally provide faster request      * 00074700
*                          response times than a duplexed structure   * 00074800
*                          since the note operations will not incur   * 00074900
*                          the overhead needed to replicate the       * 00075000
*                          request.  The requirements of the          * 00075100
*                          exploiting application determine which     * 00075200
*                          option is to be preferred.                 * 00075300
*                          DEFAULT: AVOID                             * 00075400
*                                                                     * 00075500
*                                                                     * 00075600
*                          ÝDUPLEX=AVOID¨                             * 00075700
*                              XCF should try to avoid placing the    * 00075800
*                              note pad in a duplexed structure.      * 00075900
*                                                                     * 00076000
*                          ÝDUPLEX=FAVOR¨                             * 00076100
*                              XCF should try to place the note pad   * 00076200
*                              in a duplexed structure.               * 00076300
*                                                                     * 00076400
*                                                                     * 00076500
*                                                                     * 00076600
*                                                                     * 00076700
*                                                                     * 00076800
*                                                                     * 00076900
*                      ÝINSTCOMP=»DISCRETIONARY!REQUIREDº¨            * 00077000
*                          is an optional keyword input indicating    * 00077100
*                          whether the users of the note pad are      * 00077200
*                          required to perform instance number        * 00077300
*                          comparisons when replacing or deleting a   * 00077400
*                          note (see INSTANCE# keyword for            * 00077500
*                          REQUEST=NOTE).                             * 00077600
*                          DEFAULT: DISCRETIONARY                     * 00077700
*                                                                     * 00077800
*                                                                     * 00077900
*                          ÝINSTCOMP=DISCRETIONARY¨                   * 00078000
*                              Instance number comparisons are not    * 00078100
*                              required.                              * 00078200
*                                                                     * 00078300
*                              When a note pad connector calls        * 00078400
*                              IXCNOTE REQUEST=NOTE to replace,       * 00078500
*                              write, or delete an existing note, any * 00078600
*                              INSTANCE# specification is permitted.  * 00078700
*                              Instance number comparisons will be    * 00078800
*                              performed only if the connector so     * 00078900
*                              requests.                              * 00079000
*                                                                     * 00079100
*                          ÝINSTCOMP=REQUIRED¨                        * 00079200
*                              Instance number comparisons are        * 00079300
*                              required.                              * 00079400
*                                                                     * 00079500
*                              When a note pad connector calls        * 00079600
*                              IXCNOTE REQUEST=NOTE to replace,       * 00079700
*                              write, or delete an existing note, an  * 00079800
*                              instance number comparison must be     * 00079900
*                              performed to ensure that the correct   * 00080000
*                              instance of the note is being          * 00080100
*                              manipulated.  For REQTYPE=REPLACE and  * 00080200
*                              REQTYPE=DELETE, the request is         * 00080300
*                              immediately rejected unless a nonzero  * 00080400
*                              INSTANCE# value is specified.  For     * 00080500
*                              REQTYPE=WRITE, the request proceeds.   * 00080600
*                              If the note does not exist, the write  * 00080700
*                              request will create a new note (if the * 00080800
*                              request is otherwise valid).  If the   * 00080900
*                              note already exists, the write request * 00081000
*                              is rejected.                           * 00081100
*                                                                     * 00081200
*                                                                     * 00081300
*                                                                     * 00081400
*                                                                     * 00081500
*                                                                     * 00081600
*                                                                     * 00081700
*                      ÝTAGGING=»XCF!USERº¨                           * 00081800
*                          is an optional keyword input indicating    * 00081900
*                          whether note tags are to be assigned by    * 00082000
*                          the user or by XCF.                        * 00082100
*                                                                     * 00082200
*                          Every note has a 16 byte note "tag" that   * 00082300
*                          is to be set (or preserved) whenever the   * 00082400
*                          note is manipulated (REQUEST=NOTE).  The   * 00082500
*                          creator of the note pad determines whether * 00082600
*                          note tags are to be assigned by the user   * 00082700
*                          or by XCF.  Note tags must be assigned in  * 00082800
*                          the same way for the duration of the note  * 00082900
*                          pad.  Thus all connectors to the note pad  * 00083000
*                          must adhere to the note tag assignment     * 00083100
*                          protocol specified by the creator of the   * 00083200
*                          note pad.                                  * 00083300
*                          DEFAULT: XCF                               * 00083400
*                                                                     * 00083500
*                                                                     * 00083600
*                          ÝTAGGING=XCF¨                              * 00083700
*                              XCF is responsible for assigning tags  * 00083800
*                              to notes.  XCF tag values are ever     * 00083900
*                              increasing.  A new tag is assigned     * 00084000
*                              whenever a note is successfully        * 00084100
*                              created, replaced, or written.  XCF    * 00084200
*                              does not assign a new tag when         * 00084300
*                              deleting a note.                       * 00084400
*                                                                     * 00084500
*                          ÝTAGGING=USER¨                             * 00084600
*                              The user is responsible for assigning  * 00084700
*                              tags to notes whenever a note is       * 00084800
*                              created, replaced, or written.  One    * 00084900
*                              can also assign a new note tag when    * 00085000
*                              deleting a note.                       * 00085100
*                                                                     * 00085200
*                              User defined note tags can be used in  * 00085300
*                              any way that the exploiter deems       * 00085400
*                              suitable.  For example, one could use  * 00085500
*                              tags to identify a collection of notes * 00085600
*                              that are to be associated with each    * 00085700
*                              other, or one could use tags to assign * 00085800
*                              a logical sequence number to each      * 00085900
*                              note.  Alternatively, a tag could      * 00086000
*                              simply be additional metadata that is  * 00086100
*                              associated with the note.              * 00086200
*                                                                     * 00086300
*                              Note that specifying TRACKTAG=CURRENT  * 00086400
*                              or TRACKTAG=LIFETIME imposes           * 00086500
*                              additional sequencing requirements on  * 00086600
*                              user assigned TAG values that are      * 00086700
*                              enforced when writing, replacing, or   * 00086800
*                              deleting existing notes.               * 00086900
*                                                                     * 00087000
*                                                                     * 00087100
*                                                                     * 00087200
*                                                                     * 00087300
*                                                                     * 00087400
*                                                                     * 00087500
*                      ÝTRACKTAG=»NO!CURRENT!LIFETIMEº¨               * 00087600
*                          is an optional keyword input indicating    * 00087700
*                          whether XCF needs to track the maximum tag * 00087800
*                          value assigned to a note, and if so, how   * 00087900
*                          that value should be maintained and        * 00088000
*                          reported.                                  * 00088100
*                          DEFAULT: NO                                * 00088200
*                                                                     * 00088300
*                                                                     * 00088400
*                          ÝTRACKTAG=NO¨                              * 00088500
*                              XCF need not track the maximum note    * 00088600
*                              tag values.  When reporting the        * 00088700
*                              maximum tag value, XCF will always     * 00088800
*                              report zero.  Requests to create,      * 00088900
*                              replace, write, or delete a note will  * 00089000
*                              not incur any additional overhead for  * 00089100
*                              tracking of the maximum note tag.      * 00089200
*                                                                     * 00089300
*                              For user assigned tags (TAGGING=USER), * 00089400
*                              any value can be assigned to the tag   * 00089500
*                              when writing, replacing, or deleting a * 00089600
*                              note.  In particular, the new tag      * 00089700
*                              value for the note can be less than,   * 00089800
*                              equal to, or greater than the current  * 00089900
*                              tag value of the note.                 * 00090000
*                                                                     * 00090100
*                          ÝTRACKTAG=CURRENT¨                         * 00090200
*                              XCF is to track the maximum tag of the * 00090300
*                              notes that currently exist in the note * 00090400
*                              pad.  When reporting the maximum note  * 00090500
*                              tag value, XCF will report the maximum * 00090600
*                              tag value assigned to any note that    * 00090700
*                              exists in the note pad when the query  * 00090800
*                              is made.  If the note pad is empty,    * 00090900
*                              zero will be reported.  Requests to    * 00091000
*                              create, replace, write, or delete a    * 00091100
*                              note will not incur any additional     * 00091200
*                              overhead for tracking of the maximum   * 00091300
*                              note tag.                              * 00091400
*                                                                     * 00091500
*                              For user assigned tags (TAGGING=USER), * 00091600
*                              the tag value assigned when writing,   * 00091700
*                              replacing, or deleting a note must be  * 00091800
*                              greater than or equal to the current   * 00091900
*                              tag value of the note.  In effect,     * 00092000
*                              TRACKTAG=CURRENT imposes a requirement * 00092100
*                              that the tag values assigned to        * 00092200
*                              existing notes be nondecreasing.  If   * 00092300
*                              the new tag value is less than the     * 00092400
*                              current tag value of the note, the     * 00092500
*                              request is rejected                    * 00092600
*                              (IXCNOTERSNNOTELOWTAG).  Any tag value * 00092700
*                              can be assigned when creating a note.  * 00092800
*                                                                     * 00092900
*                          ÝTRACKTAG=LIFETIME¨                        * 00093000
*                              XCF is to track the maximum tag of any * 00093100
*                              note that ever existed in the note     * 00093200
*                              pad.  When reporting the maximum tag,  * 00093300
*                              XCF will report the maximum tag value  * 00093400
*                              ever assigned to any note, including   * 00093500
*                              deleted notes.                         * 00093600
*                                                                     * 00093700
*                              For user assigned tags (TAGGING=USER), * 00093800
*                              the tag value assigned when writing,   * 00093900
*                              replacing, or deleting a note must be  * 00094000
*                              greater than or equal to the current   * 00094100
*                              tag value of the note.  In effect,     * 00094200
*                              TRACKTAG=LIFETIME imposes a            * 00094300
*                              requirement that the tag values        * 00094400
*                              assigned to existing notes be          * 00094500
*                              nondecreasing.  If the new tag value   * 00094600
*                              is less than the current tag value of  * 00094700
*                              the note, the request is rejected      * 00094800
*                              (IXCNOTERSNNOTELOWTAG).  Any tag value * 00094900
*                              can be assigned when creating a note.  * 00095000
*                                                                     * 00095100
*                              Tracking the maximum tag value for the * 00095200
*                              life of the note pad is not without    * 00095300
*                              cost.  When deleting a note, XCF might * 00095400
*                              have to defer deletion of the note     * 00095500
*                              until the maximum tag value can be     * 00095600
*                              recorded.  In such cases, the note is  * 00095700
*                              said to be "pending delete".  XCF will * 00095800
*                              automatically finish deleting the      * 00095900
*                              note, but a subsequent request for a   * 00096000
*                              note that is still "pending delete" at * 00096100
*                              the time of the request could be       * 00096200
*                              delayed until XCF finishes deleting    * 00096300
*                              the prior instance of the note.        * 00096400
*                                                                     * 00096500
*                              In practice, the need to defer delete  * 00096600
*                              requests and the additional overhead   * 00096700
*                              or delays (if any) encountered by      * 00096800
*                              other requests will vary according to  * 00096900
*                              the use of the note pad, the tags that * 00097000
*                              are assigned to the notes, the         * 00097100
*                              attributes of the note pad, and the    * 00097200
*                              dynamics of the system.                * 00097300
*                                                                     * 00097400
*                                                                     * 00097500
*                                                                     * 00097600
*                                                                     * 00097700
*                                                                     * 00097800
*                                                                     * 00097900
*                      ÝLOSSCONNDELETE=»NO!YESº¨                      * 00098000
*                          is an optional keyword input indicating    * 00098100
*                          whether XCF can automatically initiate     * 00098200
*                          note pad delete processing when all        * 00098300
*                          systems with connectors to the note pad    * 00098400
*                          have lost connectivity to the coupling     * 00098500
*                          facility hosting the note pad. The default * 00098600
*                          is NO.                                     * 00098700
*                          DEFAULT: NO                                * 00098800
*                                                                     * 00098900
*                                                                     * 00099000
*                          ÝLOSSCONNDELETE=NO¨                        * 00099100
*                              XCF will not automatically initiate    * 00099200
*                              note pad delete processing when all    * 00099300
*                              systems with connectors to the note    * 00099400
*                              pad have lost connectivity to the      * 00099500
*                              coupling facility hosting the note     * 00099600
*                              pad.                                   * 00099700
*                                                                     * 00099800
*                          ÝLOSSCONNDELETE=YES¨                       * 00099900
*                              XCF will automatically initiate note   * 00100000
*                              pad delete processing when all systems * 00100100
*                              with connectors to the note pad have   * 00100200
*                              lost connectivity to the coupling      * 00100300
*                              facility hosting the note pad.         * 00100400
*                                                                     * 00100500
*                              As a result of XCF automatically       * 00100600
*                              initiating delete processing the       * 00100700
*                              following will occur:                  * 00100800
*                                                                     * 00100900
*                                                                     * 00101000
*                              o   Any existing notes will be deleted * 00101100
*                                  as part of deleting the note pad.  * 00101200
*                                                                     * 00101300
*                              o   Any existing connections will be   * 00101400
*                                  deleted as part of deleting the    * 00101500
*                                  note pad.  Depending on the timing * 00101600
*                                  as to when the deletion is         * 00101700
*                                  recognized, connections that are   * 00101800
*                                  deleted in this manner might have  * 00101900
*                                  their IXCNOTE requests rejected    * 00102000
*                                  with a variety of reason codes     * 00102100
*                                  (including for example,            * 00102200
*                                  IXCNOTERSNNOTEPADNOTEXIST,         * 00102300
*                                  IXCNOTERSNCONNECTIONNOTEXIST, and  * 00102400
*                                  IXCNOTERSNNOTENOTEXIST).           * 00102500
*                                                                     * 00102600
*                              o   Any existing paused connections    * 00102700
*                                  would be resumed and then deleted  * 00102800
*                                  as part of deleting the note pad.  * 00102900
*                                  If an answer area was provided on  * 00103000
*                                  the PAUSE request,                 * 00103100
*                                  dr_ResumeCode=ixcynote_kResumeNote * 00103200
*                                  PadDeleted would be set in the     * 00103300
*                                  data area mapped by                * 00103400
*                                  ixcynote_tDetailsResumed.          * 00103500
*                                                                     * 00103600
*                                                                     * 00103700
*                                                                     * 00103800
*                                                                     * 00103900
*                                                                     * 00104000
*                                                                     * 00104100
*                                                                     * 00104200
*                  REQTYPE=QUERY                                      * 00104300
*                      Get information about the note pad.            * 00104400
*                                                                     * 00104500
*                      If an answer area (ANSAREA) is provided, one   * 00104600
*                      can for example, obtain the maximum number of  * 00104700
*                      notes supported by the note pad, the current   * 00104800
*                      number of notes in the note pad, or the        * 00104900
*                      maximum note tag value, as well as the INFO    * 00105000
*                      that was specified by the creator of the note  * 00105100
*                      pad.  One can also obtain information about    * 00105200
*                      the systems that have connections to the note  * 00105300
*                      pad.                                           * 00105400
*                                                                     * 00105500
*                      If an answer area is provided, it must be      * 00105600
*                      large enough to contain at least one note pad  * 00105700
*                      data record (ixcynote_tNotepadData).  If not,  * 00105800
*                      the request is rejected                        * 00105900
*                      (IXCNOTERSNANSLENMORE).  If the answer area is * 00106000
*                      large enough for the note pad data record but  * 00106100
*                      not large enough to hold all of the system     * 00106200
*                      connection records (ixcynote_tSysConnData),    * 00106300
*                      the answer area is filled with the note pad    * 00106400
*                      data record and as many system connection      * 00106500
*                      records as will fit. The request completes     * 00106600
*                      with an indication that more storage is needed * 00106700
*                      to obtain all of the records                   * 00106800
*                      (IXCNOTERSNMOREDATA).                          * 00106900
*                                                                     * 00107000
*                      If an answer area is not provided, one is in   * 00107100
*                      effect testing for the existence of the note   * 00107200
*                      pad.                                           * 00107300
*                                                                     * 00107400
*                  REQTYPE=DELETE                                     * 00107500
*                      Delete the indicated note pad, provided the    * 00107600
*                      specified conditions (if any) are satisfied.   * 00107700
*                                                                     * 00107800
*                      Any existing notes will be deleted as part of  * 00107900
*                      deleting the note pad.                         * 00108000
*                                                                     * 00108100
*                      Any existing connections will be deleted as    * 00108200
*                      part of deleting the note pad.  Depending on   * 00108300
*                      the timing as to when the deletion is          * 00108400
*                      recognized, connections that are deleted in    * 00108500
*                      this manner might have their IXCNOTE requests  * 00108600
*                      rejected with a variety of reason codes        * 00108700
*                      (including for example,                        * 00108800
*                      IXCNOTERSNNOTEPADNOTEXIST,                     * 00108900
*                      IXCNOTERSNCONNECTIONNOTEXIST, and              * 00109000
*                      IXCNOTERSNNOTENOTEXIST).                       * 00109100
*                                                                     * 00109200
*                                                                     * 00109300
*                      ÝETODCREATED=»xetodcreated!ANYº¨               * 00109400
*                          is the name (RS-type), or address in       * 00109500
*                          register (2)-(12), of an optional 16       * 00109600
*                          character input variable containing the    * 00109700
*                          extended time of day timestamp (ETOD) when * 00109800
*                          the note pad was created.  This timestamp  * 00109900
*                          identifies a unique instance of the note   * 00110000
*                          pad.  Specify this keyword to ensure that  * 00110100
*                          the intended instance of the note pad is   * 00110200
*                          deleted.  If not specified, or if the      * 00110300
*                          value of the indicated variable is zero,   * 00110400
*                          the current instance of the notepad will   * 00110500
*                          be processed.                              * 00110600
*                                                                     * 00110700
*                          The note pad data record contains the      * 00110800
*                          relevant ETOD (npd_ETodWhenCreated).  A    * 00110900
*                          note pad data record                       * 00111000
*                          (ixcynote_tNotePadData) is stored in the   * 00111100
*                          answer area when the note pad is created   * 00111200
*                          or queried.  The connect data record also  * 00111300
*                          contains the relevant ETOD                 * 00111400
*                          (cd_ETodWhenNpCreated).  A connect data    * 00111500
*                          record (ixcynote_tConnectData) is stored   * 00111600
*                          in the answer area when a connection to    * 00111700
*                          the note pad is created.                   * 00111800
*                          DEFAULT: ANY                               * 00111900
*                                                                     * 00112000
*                                                                     * 00112100
*                                                                     * 00112200
*                                                                     * 00112300
*                      CONDITIONS=»NO!YESº                            * 00112400
*                          is a required keyword input indicating     * 00112500
*                          whether there are any conditions that must * 00112600
*                          be satisfied in order to delete the note   * 00112700
*                          pad.                                       * 00112800
*                                                                     * 00112900
*                                                                     * 00113000
*                          CONDITIONS=NO                              * 00113100
*                              The delete of the note pad is to be    * 00113200
*                              performed unconditionally.  The note   * 00113300
*                              pad is to be deleted even if it        * 00113400
*                              contains notes.  The note pad is to be * 00113500
*                              deleted even if it has connections.    * 00113600
*                                                                     * 00113700
*                          CONDITIONS=YES                             * 00113800
*                              The delete of the note pad is to       * 00113900
*                              proceed only if the conditions         * 00114000
*                              specified by the MUSTBE keyword are    * 00114100
*                              satisfied.                             * 00114200
*                                                                     * 00114300
*                                                                     * 00114400
*                              MUSTBE=EMPTY!UNUSED                    * 00114500
*                                  is a required group of keyword     * 00114600
*                                  input(s) indicating the conditions * 00114700
*                                  that must be true in order for the * 00114800
*                                  note pad to be deleted.            * 00114900
*                                                                     * 00115000
*                                  One or more conditions can be      * 00115100
*                                  specified.  Only the specified     * 00115200
*                                  conditions are considered when     * 00115300
*                                  determining whether to delete the  * 00115400
*                                  note pad. For example:  Specifying * 00115500
*                                  MUSTBE=EMPTY means the delete      * 00115600
*                                  request is rejected if the note    * 00115700
*                                  pad contains notes, but the        * 00115800
*                                  existence of connections is        * 00115900
*                                  irrelevant.  Specifying            * 00116000
*                                  MUSTBE=UNUSED means the delete     * 00116100
*                                  request is rejected if the note    * 00116200
*                                  pad has connections, but the       * 00116300
*                                  existence of notes is irrelevant.  * 00116400
*                                  Specifying MUSTBE=(EMPTY,UNUSED)   * 00116500
*                                  means the delete request is        * 00116600
*                                  rejected if the note pad has notes * 00116700
*                                  or connections or both.            * 00116800
*                                                                     * 00116900
*                                  If there are competing delete      * 00117000
*                                  requests with different            * 00117100
*                                  conditions, or perhaps no          * 00117200
*                                  conditions at all, the delete will * 00117300
*                                  be processed per the request with  * 00117400
*                                  the least restrictive conditions.  * 00117500
*                                                                     * 00117600
*                                                                     * 00117700
*                                  MUSTBE=EMPTY                       * 00117800
*                                      The note pad must be empty.    * 00117900
*                                      If the note pad contains       * 00118000
*                                      notes, the delete request will * 00118100
*                                      be rejected                    * 00118200
*                                      (IXCNOTERSNNOTEPADINUSE).      * 00118300
*                                                                     * 00118400
*                                  MUSTBE=UNUSED                      * 00118500
*                                      The note pad must not have any * 00118600
*                                      users.  If the note pad has a  * 00118700
*                                      connection, the delete request * 00118800
*                                      will be rejected               * 00118900
*                                      (IXCNOTERSNNOTEPADINUSE).      * 00119000
*                                                                     * 00119100
*                                                                     * 00119200
*                                                                     * 00119300
*                                                                     * 00119400
*                                                                     * 00119500
*                                                                     * 00119600
*                                                                     * 00119700
*                                                                     * 00119800
*                                                                     * 00119900
*                  REQTYPE=MODIFY                                     * 00120000
*                      Increase or decrease the number of notes a     * 00120100
*                      note pad is allowed to hold.                   * 00120200
*                                                                     * 00120300
*                      If an answer area is provided (ANSAREA),       * 00120400
*                      information reflecting the new #NOTES value is * 00120500
*                      stored in the field aa_details when the        * 00120600
*                      request completes with return code 0.  The     * 00120700
*                      details are mapped by                          * 00120800
*                      ixcynote_tDetailsModify#Notes.                 * 00120900
*                                                                     * 00121000
*                                                                     * 00121100
*                      #NOTES=x#notes                                 * 00121200
*                          is the name (RS-type), or address in       * 00121300
*                          register (2)-(12), of a required fullword  * 00121400
*                          input variable containing a value to       * 00121500
*                          change the maximum number of notes that    * 00121600
*                          the note pad is allowed to hold.  The      * 00121700
*                          specified value may be greater than        * 00121800
*                          (increase) or less than (decrease) the     * 00121900
*                          current #NOTES value for the note pad.     * 00122000
*                          The specified value must be at least one   * 00122100
*                          (1).                                       * 00122200
*                                                                     * 00122300
*                          The system will dynamically update the     * 00122400
*                          note pad #NOTES attribute with the         * 00122500
*                          requested value which becomes effective    * 00122600
*                          immediately when the request completes     * 00122700
*                          with a return code IxcRetCodeOk.           * 00122800
*                                                                     * 00122900
*                          If connections exist to a note pad when    * 00123000
*                          using REQUEST=NOTEPAD, REQTYPE=MODIFY to   * 00123100
*                          modify the #NOTES that a note pad is       * 00123200
*                          allowed to hold, all connections to the    * 00123300
*                          note pad must be from systems that support * 00123400
*                          REQUEST=NOTEPAD, REQTYPE=MODIFY.           * 00123500
*                                                                     * 00123600
*                                                                     * 00123700
*                                                                     * 00123800
*                                                                     * 00123900
*                                                                     * 00124000
*                                                                     * 00124100
*                                                                     * 00124200
*                                                                     * 00124300
*              ÝTIMEOUT=»xtimeout!XCFº¨                               * 00124400
*                  is the name (RS-type), or address in register      * 00124500
*                  (2)-(12), of an optional halfword input indicating * 00124600
*                  the number of seconds that the caller is willing   * 00124700
*                  to allow for the request to complete.  The TIMEOUT * 00124800
*                  specification imposes an upper bound on the        * 00124900
*                  duration of the request.                           * 00125000
*                                                                     * 00125100
*                  If the TIMEOUT keyword is not specified, or if     * 00125200
*                  TIMEOUT=XCF is specified, or if the specified      * 00125300
*                  value is zero, the maximum duration of the request * 00125400
*                  is at the discretion of XCF.                       * 00125500
*                                                                     * 00125600
*                  The amount of time needed to complete a given      * 00125700
*                  REQTYPE will depend on the nature of the request   * 00125800
*                  as well as the state of the system and the note    * 00125900
*                  pad.  In particular, there is the potential for    * 00126000
*                  any given request to be delayed while XCF          * 00126100
*                  processes previously accepted requests, some of    * 00126200
*                  which could be long running.                       * 00126300
*                                                                     * 00126400
*                  For REQUEST=NOTEPAD, XCF might need to access the  * 00126500
*                  Couple Data Set that contains the Coupling         * 00126600
*                  Facility Resource Manager (CFRM) policy that       * 00126700
*                  governs use of coupling facility resources in the  * 00126800
*                  sysplex.  There can be a variety of conditions for * 00126900
*                  which these accesses might require tens of seconds * 00127000
*                  if not minutes to complete.                        * 00127100
*                                                                     * 00127200
*                  Choose TIMEOUT values accordingly.                 * 00127300
*                                                                     * 00127400
*                  In general, a REQUEST=NOTEPAD request is processed * 00127500
*                  asynchronously.  If the request times out, the     * 00127600
*                  request might or might not have been processed     * 00127700
*                  successfully.  Depending on the request and the    * 00127800
*                  design of the exploiting application, it might be  * 00127900
*                  appropriate to retry the request, perhaps with a   * 00128000
*                  longer timeout value.  In some cases, one might    * 00128100
*                  need to issue a QUERY to determine whether the     * 00128200
*                  note pad exists.                                   * 00128300
*                                                                     * 00128400
*                  DEFAULT: XCF                                       * 00128500
*                                                                     * 00128600
*                                                                     * 00128700
*                                                                     * 00128800
*          REQUEST=CONNECTION                                         * 00128900
*              Process a connection to a note pad.                    * 00129000
*                                                                     * 00129100
*                                                                     * 00129200
*              CONNECTION=xconnection                                 * 00129300
*                  is the name (RS-type), or address in register      * 00129400
*                  (2)-(12), of a required 32 character input/output  * 00129500
*                  storage area.  A token for the subject connection  * 00129600
*                  will either be fetched from or stored into this    * 00129700
*                  area.                                              * 00129800
*                                                                     * 00129900
*                  For REQTYPE=CREATE, CONNECTION is an output        * 00130000
*                  variable and a token representing the connection   * 00130100
*                  will be stored in the indicated area.  This token  * 00130200
*                  must be passed on subsequent IXCNOTE requests that * 00130300
*                  manipulate the connection or access notes in the   * 00130400
*                  note pad.  Note that the requester must carefully  * 00130500
*                  preserve the CONNECTION token because this is the  * 00130600
*                  only opportunity to acquire the token.  XCF does   * 00130700
*                  not make the token available via any other service * 00130800
*                  or IXCNOTE request.                                * 00130900
*                                                                     * 00131000
*                  For all other REQTYPE specifications, CONNECTION   * 00131100
*                  is an input variable and a token will be fetched   * 00131200
*                  from the indicated storage area.  The token        * 00131300
*                  identifies the connection that is to be processed. * 00131400
*                  The token would have been returned by a prior      * 00131500
*                  IXCNOTE request that was issued to create the      * 00131600
*                  connection on the local system.                    * 00131700
*                                                                     * 00131800
*                                                                     * 00131900
*                                                                     * 00132000
*                                                                     * 00132100
*              REQTYPE=»CREATE!DELETE!PAUSE!RESUMEº                   * 00132200
*                  is a required keyword input indicating the type of * 00132300
*                  request to be processed for the connection.        * 00132400
*                                                                     * 00132500
*                                                                     * 00132600
*                  REQTYPE=CREATE                                     * 00132700
*                      Create a connection to the note pad.           * 00132800
*                                                                     * 00132900
*                                                                     * 00133000
*                      NOTEPAD=xnotepad                               * 00133100
*                          is the name (RS-type), or address in       * 00133200
*                          register (2)-(12), of a required 32        * 00133300
*                          character input variable containing the    * 00133400
*                          name of an existing note pad to which a    * 00133500
*                          connection is to be created.               * 00133600
*                                                                     * 00133700
*                          Note pad names are mapped by               * 00133800
*                          ixcynote_tNotePadName.  Note pad names     * 00133900
*                          consist of four 8 byte sections.  The      * 00134000
*                          various sections identify the owner of the * 00134100
*                          note pad, the application using the note   * 00134200
*                          pad, and its function.  Each 8 byte        * 00134300
*                          section must be left justified, padded on  * 00134400
*                          the right with EBCDIC blanks as needed.    * 00134500
*                          Each section can contain any uppercase     * 00134600
*                          alphabetic (A-Z), numeric (0-9), national  * 00134700
*                          (@, #, $), or underscore (_) character.    * 00134800
*                                                                     * 00134900
*                                                                     * 00135000
*                                                                     * 00135100
*                                                                     * 00135200
*                      DESCRIPTION=xdescription                       * 00135300
*                          is the name (RS-type), or address in       * 00135400
*                          register (2)-(12), of a required 32        * 00135500
*                          character input variable containing a      * 00135600
*                          description of the connector.  The         * 00135700
*                          description might indicate the function,   * 00135800
*                          service, purpose, or role of the           * 00135900
*                          connector.  Or it might indicate the       * 00136000
*                          application with which the connector is    * 00136100
*                          associated.  The string can contain any    * 00136200
*                          alphanumeric (a-z, A-Z, 0-9), national (@, * 00136300
*                          #, $), or special (underscore or blank)    * 00136400
*                          character.  Leading blanks and all blank   * 00136500
*                          descriptors are not permitted.             * 00136600
*                          Descriptions are case sensitive.  XCF      * 00136700
*                          presents the connector description when    * 00136800
*                          providing information about the            * 00136900
*                          connection.  The description also appears  * 00137000
*                          in various XCF messages and diagnostic     * 00137100
*                          data reports.  The intended purpose is to  * 00137200
*                          help installations and service personnel   * 00137300
*                          understand how the system (or sysplex)     * 00137400
*                          might be impacted if there are problems    * 00137500
*                          with this connector or its use of the note * 00137600
*                          pad.                                       * 00137700
*                                                                     * 00137800
*                          The storage containing the DESCRIPTION     * 00137900
*                          must reside in the primary address space   * 00138000
*                          of the caller, or in a space addressable   * 00138100
*                          via a public entry on the dispatchable     * 00138200
*                          unit access list (DU-AL), or in a common   * 00138300
*                          area data space.  The storage must be      * 00138400
*                          accessible using the PSW key of the        * 00138500
*                          program making the request.                * 00138600
*                                                                     * 00138700
*                                                                     * 00138800
*                                                                     * 00138900
*                                                                     * 00139000
*                      ÝINFO=»xinfo!0º¨                               * 00139100
*                          is the name (RS-type), or address in       * 00139200
*                          register (2)-(12), of an optional 64       * 00139300
*                          character input variable which contains    * 00139400
*                          information about the connector.  The      * 00139500
*                          content and interpretation of this         * 00139600
*                          information is determined by the creator   * 00139700
*                          of the connection.  XCF associates a copy  * 00139800
*                          of the indicated data with the connector.  * 00139900
*                          The connector might, for example, use INFO * 00140000
*                          to document the protocols that it          * 00140100
*                          supports.                                  * 00140200
*                                                                     * 00140300
*                          The storage containing the INFO must       * 00140400
*                          reside in the primary address space of the * 00140500
*                          caller, or in a space addressable via a    * 00140600
*                          public entry on the dispatchable unit      * 00140700
*                          access list (DU-AL), or in a common area   * 00140800
*                          data space.  The storage must be           * 00140900
*                          accessible using the PSW key of the        * 00141000
*                          program making the request.                * 00141100
*                                                                     * 00141200
*                          DEFAULT: 0                                 * 00141300
*                                                                     * 00141400
*                                                                     * 00141500
*                                                                     * 00141600
*                                                                     * 00141700
*                      ÝACCESS=»UPDATE!READº¨                         * 00141800
*                          is an optional keyword input indicating    * 00141900
*                          what type of access the indicated          * 00142000
*                          connection is to enjoy.                    * 00142100
*                          DEFAULT: UPDATE                            * 00142200
*                                                                     * 00142300
*                                                                     * 00142400
*                          ÝACCESS=UPDATE¨                            * 00142500
*                              The connection can create, write,      * 00142600
*                              replace, read, or delete notes in the  * 00142700
*                              note pad.                              * 00142800
*                                                                     * 00142900
*                              The calling program must have SAF      * 00143000
*                              authorization that permits UPDATE      * 00143100
*                              access to the FACILITY class resource  * 00143200
*                              IXCNOTE.owner.application.  If SAF is  * 00143300
*                              not available, or if there is no       * 00143400
*                              IXCNOTE.owner.application resource     * 00143500
*                              defined for the note pad in the        * 00143600
*                              FACILITY class, a program running in   * 00143700
*                              supervisor state or with a PKM         * 00143800
*                              allowing key 0 to 7 is permitted to    * 00143900
*                              create a connection.                   * 00144000
*                                                                     * 00144100
*                          ÝACCESS=READ¨                              * 00144200
*                              The connection can read notes in the   * 00144300
*                              note pad, but it cannot create, write, * 00144400
*                              replace, or delete notes.              * 00144500
*                                                                     * 00144600
*                              The calling program must have SAF      * 00144700
*                              authorization that permits READ access * 00144800
*                              to the FACILITY class resource         * 00144900
*                              IXCNOTE.owner.application.  If SAF is  * 00145000
*                              not available, or if there is no       * 00145100
*                              IXCNOTE.owner.application resource     * 00145200
*                              defined for the note pad in the        * 00145300
*                              FACILITY class, a program running in   * 00145400
*                              supervisor state or with a PKM         * 00145500
*                              allowing key 0 to 7 is permitted to    * 00145600
*                              create a connection.                   * 00145700
*                                                                     * 00145800
*                                                                     * 00145900
*                                                                     * 00146000
*                                                                     * 00146100
*                                                                     * 00146200
*                                                                     * 00146300
*                      TERMSCOPE=»TASK!HOME!PRIMARYº                  * 00146400
*                          is a required keyword input indicating an  * 00146500
*                          entity with which the connection is to be  * 00146600
*                          associated for the purposes of termination * 00146700
*                          processing.  If the indicated entity       * 00146800
*                          terminates, XCF deletes the connection.    * 00146900
*                          Note that a connection is always deleted   * 00147000
*                          when the local system terminates, or when  * 00147100
*                          the connector address space terminates.    * 00147200
*                          For a connection with task scope (TCBSENV  * 00147300
*                          is nonzero), the connection is always      * 00147400
*                          deleted if the connector task terminates.  * 00147500
*                                                                     * 00147600
*                          The TERMSCOPE keyword enables the creator  * 00147700
*                          of the connection to bind the existence of * 00147800
*                          the connection to a designated task or     * 00147900
*                          space.  A connection cannot be associated  * 00148000
*                          with a task or address space that is in    * 00148100
*                          the midst of being (or has already)        * 00148200
*                          terminated.                                * 00148300
*                                                                     * 00148400
*                                                                     * 00148500
*                          TERMSCOPE=TASK                             * 00148600
*                              The connection is to be terminated     * 00148700
*                              when the indicated task or the address * 00148800
*                              space in which it resides terminates.  * 00148900
*                                                                     * 00149000
*                                                                     * 00149100
*                              ÝTTOKEN=»xttoken!CURRENTº¨             * 00149200
*                                  is the name (RS-type), or address  * 00149300
*                                  in register (2)-(12), of an        * 00149400
*                                  optional 16 character input which  * 00149500
*                                  contains the task token of the     * 00149600
*                                  relevant task.  The TCBTOKEN macro * 00149700
*                                  is typically used to obtain task   * 00149800
*                                  tokens.                            * 00149900
*                                                                     * 00150000
*                                  If TTOKEN=CURRENT is specified or  * 00150100
*                                  taken as the default, or if the    * 00150200
*                                  content of the TTOKEN variable is  * 00150300
*                                  hexadecimal zero, the system uses  * 00150400
*                                  the task token of the current      * 00150500
*                                  task.  SRB mode callers must       * 00150600
*                                  explicitly pass a nonzero TTOKEN.  * 00150700
*                                                                     * 00150800
*                                  For a program running in problem   * 00150900
*                                  state with a PKM allowing key 8 to * 00151000
*                                  15, the TTOKEN must represent a    * 00151100
*                                  task that resides in the home      * 00151200
*                                  address space.  The specified task * 00151300
*                                  must be the job step program task  * 00151400
*                                  or a descendent thereof.  The      * 00151500
*                                  specified task must also be the    * 00151600
*                                  current task or an ancestor        * 00151700
*                                  thereof.                           * 00151800
*                                                                     * 00151900
*                                  For a program running in           * 00152000
*                                  supervisor state or with a PKM     * 00152100
*                                  allowing key 0 to 7, the TTOKEN    * 00152200
*                                  must represent a task that resides * 00152300
*                                  in either the home address space   * 00152400
*                                  or the primary address space of    * 00152500
*                                  the caller.                        * 00152600
*                                  DEFAULT: CURRENT                   * 00152700
*                                                                     * 00152800
*                                                                     * 00152900
*                                                                     * 00153000
*                          TERMSCOPE=HOME                             * 00153100
*                              The connection is terminated when the  * 00153200
*                              home address space of the caller       * 00153300
*                              terminates.                            * 00153400
*                                                                     * 00153500
*                              To be precise, the connection will be  * 00153600
*                              deleted when the task that owns the    * 00153700
*                              cross-memory resources in the home     * 00153800
*                              address space terminates.  The Task    * 00153900
*                              Control Block (macro IKJTCB) for that  * 00154000
*                              task is anchored in the ASCBXTCB field * 00154100
*                              of the Address Space Control Block     * 00154200
*                              (macro IHAASCB) for the address space. * 00154300
*                                                                     * 00154400
*                          TERMSCOPE=PRIMARY                          * 00154500
*                              The connection is terminated when the  * 00154600
*                              primary address space of the caller    * 00154700
*                              terminates.                            * 00154800
*                                                                     * 00154900
*                              To be precise, the connection will be  * 00155000
*                              deleted when the task that owns the    * 00155100
*                              cross-memory resources in the primary  * 00155200
*                              address space terminates.  The Task    * 00155300
*                              Control Block (macro IKJTCB) for that  * 00155400
*                              task is anchored in the ASCBXTCB field * 00155500
*                              of the Address Space Control Block     * 00155600
*                              (macro IHAASCB) for the address space. * 00155700
*                                                                     * 00155800
*                                                                     * 00155900
*                                                                     * 00156000
*                                                                     * 00156100
*                                                                     * 00156200
*                                                                     * 00156300
*                      ÝUSAGE=»CONNECTOR!SERVER!CLIENTº¨              * 00156400
*                          is an optional keyword input that          * 00156500
*                          specifies the intended use of the          * 00156600
*                          connection.  When the connection is        * 00156700
*                          subsequently used to process notes in the  * 00156800
*                          note pad (REQUEST=NOTE or REQUEST=NOTES),  * 00156900
*                          USAGE determines the conditions under      * 00157000
*                          which the requester is deemed to be a      * 00157100
*                          valid user.                                * 00157200
*                                                                     * 00157300
*                          To specify USAGE=SERVER or USAGE=CLIENT,   * 00157400
*                          the creator of the connection must be      * 00157500
*                          running in supervisor state or with a PKM  * 00157600
*                          allowing key 0 to 7, and the primary       * 00157700
*                          address space must be the home address     * 00157800
*                          space.  In addition, for USAGE=SERVER, a   * 00157900
*                          task mode caller must not have a task      * 00158000
*                          specific security environment (TCBSENV     * 00158100
*                          must be zero).                             * 00158200
*                                                                     * 00158300
*                          DEFAULT: CONNECTOR                         * 00158400
*                                                                     * 00158500
*                                                                     * 00158600
*                          ÝUSAGE=CONNECTOR¨                          * 00158700
*                              The connection is to be used by work   * 00158800
*                              units running out of the connector     * 00158900
*                              address space.                         * 00159000
*                                                                     * 00159100
*                              When processing notes, a work unit is  * 00159200
*                              deemed to be a valid user of the       * 00159300
*                              connection if it can satisfy any of    * 00159400
*                              the following conditions:              * 00159500
*                                                                     * 00159600
*                                                                     * 00159700
*                              o   Requester is the connector         * 00159800
*                                                                     * 00159900
*                              o   Home is connector space and user   * 00160000
*                                  has SAF authorization appropriate  * 00160100
*                                  for the REQTYPE                    * 00160200
*                                                                     * 00160300
*                              o   Supervisor state or PKM allowing   * 00160400
*                                  key 0 to 7, and running as an      * 00160500
*                                  address space resource manager     * 00160600
*                                                                     * 00160700
*                                                                     * 00160800
*                                                                     * 00160900
*                          ÝUSAGE=SERVER¨                             * 00161000
*                              The connection is to be used by a      * 00161100
*                              server that processes notes while      * 00161200
*                              running in its own address space.      * 00161300
*                                                                     * 00161400
*                              When processing notes, a work unit is  * 00161500
*                              deemed to be a valid user of the       * 00161600
*                              connection if it can satisfy any of    * 00161700
*                              the following conditions:              * 00161800
*                                                                     * 00161900
*                                                                     * 00162000
*                              o   Requester is the connector         * 00162100
*                                                                     * 00162200
*                              o   Home is connector space and user   * 00162300
*                                  has SAF authorization appropriate  * 00162400
*                                  for the REQTYPE                    * 00162500
*                                                                     * 00162600
*                              o   Supervisor state or PKM allowing   * 00162700
*                                  key 0 to 7, and running as an      * 00162800
*                                  address space resource manager     * 00162900
*                                                                     * 00163000
*                              o   Primary is connector space, and    * 00163100
*                                  requester is supervisor state or   * 00163200
*                                  PKM allowing key 0 to 7 (**)       * 00163300
*                                                                     * 00163400
*                                                                     * 00163500
*                                                                     * 00163600
*                              Note that in the case marked with      * 00163700
*                              (**), XCF has not verified that the    * 00163800
*                              requester is permitted to access the   * 00163900
*                              note pad. So the exploiter, who must   * 00164000
*                              be running authorized, is responsible  * 00164100
*                              for ensuring that use of the note pad  * 00164200
*                              connection is appropriate.  Typically  * 00164300
*                              this condition is satisfied because    * 00164400
*                              the server is processing notes for its * 00164500
*                              own internal purposes and is not       * 00164600
*                              giving its clients access to the       * 00164700
*                              notes.  If the server gives a client   * 00164800
*                              access to the notes, it might well be  * 00164900
*                              necessary for the server to ensure     * 00165000
*                              that the client is authorized to make  * 00165100
*                              such access.                           * 00165200
*                                                                     * 00165300
*                              USAGE=SERVER is typically used in a    * 00165400
*                              client/server application where a      * 00165500
*                              client running in an arbitrary address * 00165600
*                              space calls the server to perform some * 00165700
*                              service that executes while running in * 00165800
*                              the server address space.  The server  * 00165900
*                              address space creates the note pad     * 00166000
*                              connection for its own internal use.   * 00166100
*                              Since the client is neither the        * 00166200
*                              connector nor running out of the       * 00166300
*                              connector address space, XCF would     * 00166400
*                              typically deny the server request to   * 00166500
*                              access its own note pad from the       * 00166600
*                              client thread.  With the SERVER        * 00166700
*                              option, XCF allows the client work     * 00166800
*                              unit to access the note pad if the     * 00166900
*                              server (connector) address space is    * 00167000
*                              primary at the time of the request,    * 00167100
*                              and the program is running supervisor  * 00167200
*                              state or with a PKM allowing key 0 to  * 00167300
*                              7.                                     * 00167400
*                                                                     * 00167500
*                          ÝUSAGE=CLIENT¨                             * 00167600
*                              The connection is to be used by a      * 00167700
*                              server that processes notes while      * 00167800
*                              running in the client address space.   * 00167900
*                                                                     * 00168000
*                              When processing notes, a work unit is  * 00168100
*                              deemed to be a valid user of the       * 00168200
*                              connection if it can satisfy any of    * 00168300
*                              the following conditions:              * 00168400
*                                                                     * 00168500
*                                                                     * 00168600
*                              o   Requester is the connector         * 00168700
*                                                                     * 00168800
*                              o   Home is connector space and user   * 00168900
*                                  has SAF authorization appropriate  * 00169000
*                                  for the REQTYPE                    * 00169100
*                                                                     * 00169200
*                              o   Supervisor state or PKM allowing   * 00169300
*                                  key 0 to 7, and running as an      * 00169400
*                                  address space resource manager     * 00169500
*                                                                     * 00169600
*                              o   Requester is supervisor state or   * 00169700
*                                  PKM allowing key 0 to 7 (**)       * 00169800
*                                                                     * 00169900
*                                                                     * 00170000
*                                                                     * 00170100
*                              Note that in the case marked with      * 00170200
*                              (**), XCF has not verified that the    * 00170300
*                              requester is permitted to access the   * 00170400
*                              note pad. So the exploiter, who must   * 00170500
*                              be running authorized, is responsible  * 00170600
*                              for ensuring that use of the note pad  * 00170700
*                              connection is appropriate.  Typically  * 00170800
*                              this condition is satisfied because    * 00170900
*                              the server is processing notes for its * 00171000
*                              own internal purposes and is not       * 00171100
*                              giving its clients access to the       * 00171200
*                              notes.  If the server gives a client   * 00171300
*                              access to the notes, it might well be  * 00171400
*                              necessary for the server to ensure     * 00171500
*                              that the client is authorized to make  * 00171600
*                              such access.                           * 00171700
*                                                                     * 00171800
*                              USAGE=CLIENT is typically used in a    * 00171900
*                              client/server application where a      * 00172000
*                              client running in an arbitrary address * 00172100
*                              space calls the server to perform some * 00172200
*                              service that executes while running in * 00172300
*                              the client address space.  The server  * 00172400
*                              address space creates the note pad     * 00172500
*                              connection for its own internal use.   * 00172600
*                              Since the client is neither the        * 00172700
*                              connector nor running out of the       * 00172800
*                              connector address space, XCF would     * 00172900
*                              typically deny the server request to   * 00173000
*                              access its own note pad from the       * 00173100
*                              client thread.  With the CLIENT        * 00173200
*                              option, XCF allows the client work     * 00173300
*                              unit to access the note pad, provided  * 00173400
*                              the program is running supervisor      * 00173500
*                              state or with a PKM allowing key 0 to  * 00173600
*                              7.                                     * 00173700
*                                                                     * 00173800
*                                                                     * 00173900
*                                                                     * 00174000
*                                                                     * 00174100
*                                                                     * 00174200
*                  REQTYPE=DELETE                                     * 00174300
*                      Delete the connection to the note pad.         * 00174400
*                                                                     * 00174500
*                      If there is no further need for the note pad,  * 00174600
*                      one should explicitly delete the note pad (by  * 00174700
*                      issuing IXCNOTE REQUEST=NOTEPAD                * 00174800
*                      REQTYPE=DELETE) so that system resources can   * 00174900
*                      be released in a timely manner.                * 00175000
*                                                                     * 00175100
*                      A DELETE request can be issued by a work unit  * 00175200
*                      that can satisfy any of the following          * 00175300
*                      conditions:                                    * 00175400
*                                                                     * 00175500
*                                                                     * 00175600
*                      o   Requester is the connector                 * 00175700
*                                                                     * 00175800
*                      o   Home is connector address space and the    * 00175900
*                          requester has SAF authorization            * 00176000
*                          appropriate for the ACCESS specified by    * 00176100
*                          the creator of the connection              * 00176200
*                                                                     * 00176300
*                      o   Running in supervisor state or with a PKM  * 00176400
*                          allowing key 0 to 7 and either:            * 00176500
*                                                                     * 00176600
*                                                                     * 00176700
*                          -   The creator of the connection          * 00176800
*                              specified USAGE=SERVER and primary is  * 00176900
*                              the connector address space, or        * 00177000
*                                                                     * 00177100
*                          -   The creator of the connection          * 00177200
*                              specified USAGE=CLIENT                 * 00177300
*                                                                     * 00177400
*                                                                     * 00177500
*                                                                     * 00177600
*                                                                     * 00177700
*                                                                     * 00177800
*                  REQTYPE=PAUSE                                      * 00177900
*                      Wait for a condition to clear.  The service    * 00178000
*                      routine is to suspend the caller until the     * 00178100
*                      relevant condition is resolved, or it is       * 00178200
*                      determined that the condition cannot be        * 00178300
*                      resolved.  The service routine will also       * 00178400
*                      return when the indicated TIMEOUT value        * 00178500
*                      expires.  The service routine might also       * 00178600
*                      return if the state of any relevant condition  * 00178700
*                      changes.                                       * 00178800
*                                                                     * 00178900
*                      For example, a prior IXCNOTE request might     * 00179000
*                      have been rejected with a return and reason    * 00179100
*                      code indicating that the note pad is quiesced. * 00179200
*                      While quiesced, all attempts to access notes   * 00179300
*                      in the note pad will be rejected.  The         * 00179400
*                      connector can use REQTYPE=PAUSE to determine   * 00179500
*                      when typical note activity can be resumed.     * 00179600
*                                                                     * 00179700
*                      A connection could be quiesced as the result   * 00179800
*                      of several different conditions occurring      * 00179900
*                      simultaneously.  While paused, there could be  * 00180000
*                      a change in the set of quiesce conditions.     * 00180100
*                      Some conditions might clear, while new ones    * 00180200
*                      might occur.  The service routine always       * 00180300
*                      returns to the caller when the set of quiesce  * 00180400
*                      conditions clears and the note pad is once     * 00180500
*                      again accessible.  The service routine might   * 00180600
*                      also return to the caller when the set of      * 00180700
*                      quiesce conditions changes, even though the    * 00180800
*                      connection remains quiesced.                   * 00180900
*                                                                     * 00181000
*                      The paused unit of work will also be resumed   * 00181100
*                      if the connection is deleted or if the note    * 00181200
*                      pad fails.  Note that "connection is deleted"  * 00181300
*                      includes the case where the connection is      * 00181400
*                      deleted due to termination of the TERMSCOPE    * 00181500
*                      entity, in which case the paused unit of work  * 00181600
*                      will be resumed if the work unit is still      * 00181700
*                      viable.  One can also resume the work unit by  * 00181800
*                      invoking IXCNOTE to process a REQTYPE=RESUME   * 00181900
*                      request (from some other unit of work).        * 00182000
*                                                                     * 00182100
*                      The return and reason code presented to the    * 00182200
*                      caller of the PAUSE request indicate whether   * 00182300
*                      the note pad is accessible upon return from    * 00182400
*                      the PAUSE.  Return code 0 implies that the     * 00182500
*                      connection no longer has any conditions that   * 00182600
*                      would preclude typical use.  Return code 4 is  * 00182700
*                      used when the connection still has conditions  * 00182800
*                      for which a PAUSE might be appropriate.        * 00182900
*                      Return code 8 is used when the connection was  * 00183000
*                      deleted.                                       * 00183100
*                                                                     * 00183200
*                      Thus upon return from the service routine, the * 00183300
*                      connection can still be quiesced.  The         * 00183400
*                      connector might elect to reissue the PAUSE in  * 00183500
*                      order to continue waiting for the connection   * 00183600
*                      to become unquiesced, or it might take some    * 00183700
*                      other relevant recovery action according to    * 00183800
*                      the specific quiesce conditions that remain.   * 00183900
*                                                                     * 00184000
*                      For a given connection, at most one unit of    * 00184100
*                      work can be paused for a REQTYPE=PAUSE         * 00184200
*                      request.                                       * 00184300
*                                                                     * 00184400
*                      A PAUSE request can be issued by a work unit   * 00184500
*                      that can satisfy any of the following          * 00184600
*                      conditions:                                    * 00184700
*                                                                     * 00184800
*                                                                     * 00184900
*                      o   Requester is the connector                 * 00185000
*                                                                     * 00185100
*                      o   Home address space is the connector        * 00185200
*                          address space                              * 00185300
*                                                                     * 00185400
*                      o   Primary address space is the connector     * 00185500
*                          address space                              * 00185600
*                                                                     * 00185700
*                      o   Running in supervisor state or a PKM       * 00185800
*                          allowing key 0 to 7                        * 00185900
*                                                                     * 00186000
*                                                                     * 00186100
*                                                                     * 00186200
*                      If an answer area is provided (ANSAREA),       * 00186300
*                      information related to the pause conditions is * 00186400
*                      stored in the field aa_details when the        * 00186500
*                      request completes with return code 0 or 4.     * 00186600
*                      The details are mapped by                      * 00186700
*                      ixcynote_tDetailsResumed.                      * 00186800
*                                                                     * 00186900
*                  REQTYPE=RESUME                                     * 00187000
*                      Resume the work unit that is currently paused  * 00187100
*                      for the indicated connection.  Use this        * 00187200
*                      service to release a paused connection         * 00187300
*                      (REQTYPE=PAUSE) before the quiescing           * 00187400
*                      conditions clear or before the connection is   * 00187500
*                      deleted.                                       * 00187600
*                                                                     * 00187700
*                      If a work unit is currently paused for the     * 00187800
*                      connection, the suspended work unit will be    * 00187900
*                      resumed and the PAUSE request will return to   * 00188000
*                      its caller.  If a work unit is not currently   * 00188100
*                      paused for the connection, the next PAUSE      * 00188200
*                      request to be accepted will be resumed         * 00188300
*                      immediately.                                   * 00188400
*                                                                     * 00188500
*                      A RESUME request can be issued by a work unit  * 00188600
*                      that can satisfy any of the following          * 00188700
*                      conditions:                                    * 00188800
*                                                                     * 00188900
*                                                                     * 00189000
*                      o   Requester is the connector                 * 00189100
*                                                                     * 00189200
*                      o   Home address space is the connector        * 00189300
*                          address space                              * 00189400
*                                                                     * 00189500
*                      o   Primary address space is the connector     * 00189600
*                          address space                              * 00189700
*                                                                     * 00189800
*                      o   Running in supervisor state or a PKM       * 00189900
*                          allowing key 0 to 7                        * 00190000
*                                                                     * 00190100
*                                                                     * 00190200
*                                                                     * 00190300
*                                                                     * 00190400
*                                                                     * 00190500
*                                                                     * 00190600
*                                                                     * 00190700
*                                                                     * 00190800
*              ÝTIMEOUT=»xtimeout!XCFº¨                               * 00190900
*                  is the name (RS-type), or address in register      * 00191000
*                  (2)-(12), of an optional halfword input indicating * 00191100
*                  the number of seconds that the caller is willing   * 00191200
*                  to allow for the request to complete.  The TIMEOUT * 00191300
*                  specification imposes an upper bound on the        * 00191400
*                  duration of the request.                           * 00191500
*                                                                     * 00191600
*                  If the TIMEOUT keyword is not specified, or if     * 00191700
*                  TIMEOUT=XCF is specified, or if the specified      * 00191800
*                  value is zero, the duration of the pause is at the * 00191900
*                  discretion of XCF.                                 * 00192000
*                                                                     * 00192100
*                  The amount of time needed to complete a given      * 00192200
*                  REQTYPE will depend on the nature of the request   * 00192300
*                  as well as the state of the system and the note    * 00192400
*                  pad.  In particular, there is the potential for    * 00192500
*                  any given request to be delayed while XCF          * 00192600
*                  processes previously accepted requests, some of    * 00192700
*                  which could be long running.                       * 00192800
*                                                                     * 00192900
*                  For REQTYPE=PAUSE, note that many quiescing        * 00193000
*                  conditions are not likely to be resolved for       * 00193100
*                  several minutes.  In some cases, manual            * 00193200
*                  intervention can be required to resolve the        * 00193300
*                  problem.                                           * 00193400
*                                                                     * 00193500
*                  Choose TIMEOUT values accordingly.                 * 00193600
*                                                                     * 00193700
*                  For a REQTYPE other than PAUSE, the request is     * 00193800
*                  processed asynchronously.  If the request times    * 00193900
*                  out, XCF will not be able to provide the results   * 00194000
*                  of the request.  However, the request might or     * 00194100
*                  might not have been processed successfully.        * 00194200
*                  Depending on the request and the design of the     * 00194300
*                  exploiting application, it might be appropriate to * 00194400
*                  retry the request, perhaps with a longer timeout   * 00194500
*                  value.  If a REQTYPE=CREATE request times out, XCF * 00194600
*                  will make sure that the connection does not exist  * 00194700
*                  before returning.                                  * 00194800
*                                                                     * 00194900
*                  DEFAULT: XCF                                       * 00195000
*                                                                     * 00195100
*                                                                     * 00195200
*                                                                     * 00195300
*          REQUEST=NOTE                                               * 00195400
*              Process a single note in the note pad associated with  * 00195500
*              the indicated connection.                              * 00195600
*                                                                     * 00195700
*              The keyword NAME identifies the note to be             * 00195800
*              manipulated.  For create, write, or replace requests,  * 00195900
*              the note content will be fetched from the storage area * 00196000
*              identified by the BUFFER keyword.  For read and delete * 00196100
*              requests, BUFFER indicates where the content of the    * 00196200
*              note is to be stored.                                  * 00196300
*                                                                     * 00196400
*              A NOTE request can be issued by a work unit that can   * 00196500
*              satisfy any of the following conditions:               * 00196600
*                                                                     * 00196700
*                                                                     * 00196800
*              o   Requester is the connector                         * 00196900
*                                                                     * 00197000
*              o   Home is connector address space and has            * 00197100
*                  appropriate SAF authorization                      * 00197200
*                                                                     * 00197300
*              o   Supervisor state or PKM allowing key 0 to 7, and:  * 00197400
*                                                                     * 00197500
*                                                                     * 00197600
*                  -   Connection created with USAGE=CLIENT, or       * 00197700
*                                                                     * 00197800
*                  -   Connection created with USAGE=SERVER and       * 00197900
*                      primary is the connector space, or             * 00198000
*                                                                     * 00198100
*                  -   Running as an address space resource manager   * 00198200
*                                                                     * 00198300
*                                                                     * 00198400
*                                                                     * 00198500
*                                                                     * 00198600
*                                                                     * 00198700
*                                                                     * 00198800
*              CONNECTION=xconnection                                 * 00198900
*                  is the name (RS-type), or address in register      * 00199000
*                  (2)-(12), of a required 32 character input         * 00199100
*                  variable containing the token representing the     * 00199200
*                  connection to the note pad.                        * 00199300
*                                                                     * 00199400
*                  This token was returned by a previous invocation   * 00199500
*                  of IXCNOTE REQUEST=CONNECTION REQTYPE=CREATE.  The * 00199600
*                  connection represented by the token must have been * 00199700
*                  created with an ACCESS specification that is       * 00199800
*                  appropriate to the type of note request to be      * 00199900
*                  processed (REQTYPE).  If created with              * 00200000
*                  ACCESS=UPDATE, the connection can create, write,   * 00200100
*                  replace, read, or delete a note.  If created with  * 00200200
*                  ACCESS=READ, the connection can read a note.       * 00200300
*                                                                     * 00200400
*                                                                     * 00200500
*                                                                     * 00200600
*                                                                     * 00200700
*              REQTYPE=»CREATE!WRITE!REPLACE!READ!DELETEº             * 00200800
*                  is a required keyword input indicating the type of * 00200900
*                  request to be processed for the indicated note.    * 00201000
*                                                                     * 00201100
*                                                                     * 00201200
*                  REQTYPE=CREATE                                     * 00201300
*                      Create a new note in the note pad.  The        * 00201400
*                      request is rejected if the named note already  * 00201500
*                      exists.                                        * 00201600
*                                                                     * 00201700
*                  REQTYPE=WRITE                                      * 00201800
*                      If the named note does not already exist,      * 00201900
*                      create it.  If the named note does exist,      * 00202000
*                      replace it.                                    * 00202100
*                                                                     * 00202200
*                  REQTYPE=REPLACE                                    * 00202300
*                      Replace an existing note in the note pad.  The * 00202400
*                      request is rejected if the named note does not * 00202500
*                      already exist.                                 * 00202600
*                                                                     * 00202700
*                  REQTYPE=READ                                       * 00202800
*                      Read an existing note from the note pad.  The  * 00202900
*                      request is rejected if the named note does not * 00203000
*                      already exist.                                 * 00203100
*                                                                     * 00203200
*                  REQTYPE=DELETE                                     * 00203300
*                      Delete an existing note from the note pad.     * 00203400
*                      The request is rejected if the named note does * 00203500
*                      not already exist.                             * 00203600
*                                                                     * 00203700
*                      If a buffer area (BUFFER) is provided, a copy  * 00203800
*                      of the deleted note will be stored in the      * 00203900
*                      buffer if the request is successful.           * 00204000
*                                                                     * 00204100
*                      If the creator of the note pad specified       * 00204200
*                      TRACKTAG=LIFETIME, deletion of the note might  * 00204300
*                      be deferred so that XCF can ensure that the    * 00204400
*                      maximum note tag value is preserved.  In such  * 00204500
*                      cases the note is said to be "pending delete". * 00204600
*                      XCF will automatically complete deletion of    * 00204700
*                      the note asynchronously to the caller.         * 00204800
*                      Deferring the delete will not directly impact  * 00204900
*                      the delete request.                            * 00205000
*                                                                     * 00205100
*                      However, notes that are "pending delete" will  * 00205200
*                      continue to consume note pad resources until   * 00205300
*                      XCF finishes deleting the note.  They could,   * 00205400
*                      for example, be included in counts of the      * 00205500
*                      number of notes that exist in the note pad.  A * 00205600
*                      subsequent request to process a given note can * 00205700
*                      incur additional overhead if the named note is * 00205800
*                      still "pending delete" when the request is     * 00205900
*                      made.  In such cases, XCF might need to finish * 00206000
*                      the pending delete before it can proceed with  * 00206100
*                      the request.                                   * 00206200
*                                                                     * 00206300
*                      If the creator of the note pad specified       * 00206400
*                      TAGGING=USER and TRACKTAG=LIFETIME, be aware   * 00206500
*                      that the likelihood of the delete request      * 00206600
*                      being deferred increases if one assigns a new  * 00206700
*                      note tag that is greater than the current tag  * 00206800
*                      value for the note.  Assigning a new tag value * 00206900
*                      that would be the new maximum tag value of the * 00207000
*                      note pad will certainly induce deferral.       * 00207100
*                      Consider using TAG=KEEP when deleting notes in * 00207200
*                      order to minimize the potential for deferring  * 00207300
*                      of the request.                                * 00207400
*                                                                     * 00207500
*                      Note that return code 0 is provided regardless * 00207600
*                      of whether the delete request is performed     * 00207700
*                      synchronously or deferred.  The answer area    * 00207800
*                      (ANSAREA), if any, will indicate whether the   * 00207900
*                      delete request was deferred.                   * 00208000
*                                                                     * 00208100
*                                                                     * 00208200
*                                                                     * 00208300
*                                                                     * 00208400
*                                                                     * 00208500
*                                                                     * 00208600
*              NAME=xname                                             * 00208700
*                  is the name (RS-type), or address in register      * 00208800
*                  (2)-(12), of a required 8 character input variable * 00208900
*                  containing the name of the note to be processed.   * 00209000
*                  The note name uniquely identifies a note in the    * 00209100
*                  note pad.  There are no restrictions or            * 00209200
*                  requirements for the note name other than it be    * 00209300
*                  unique for each note in the note pad.  Different   * 00209400
*                  note pads can use the same note names without      * 00209500
*                  conflict.                                          * 00209600
*                                                                     * 00209700
*                                                                     * 00209800
*                                                                     * 00209900
*                                                                     * 00210000
*              TAGGING=»USER!XCFº                                     * 00210100
*                  is a required keyword input indicating how the     * 00210200
*                  connector expects (or desires) tags to be          * 00210300
*                  processed.                                         * 00210400
*                                                                     * 00210500
*                  Every note has a 16 byte note "tag" that is set    * 00210600
*                  (or preserved) whenever the note is manipulated.   * 00210700
*                  If TAGGING=USER was specified by the creator of    * 00210800
*                  the note pad, the tags are to be assigned by the   * 00210900
*                  connector.  If TAGGING=XCF was specified by the    * 00211000
*                  creator of the note pad, the tags are assigned by  * 00211100
*                  XCF.                                               * 00211200
*                                                                     * 00211300
*                                                                     * 00211400
*                  TAGGING=USER                                       * 00211500
*                      The connector claims to be responsible for     * 00211600
*                      assigning tags to the notes.  The request is   * 00211700
*                      rejected if the creator of the note pad        * 00211800
*                      specified TAGGING=XCF.                         * 00211900
*                                                                     * 00212000
*                      For user assigned tags (TAGGING=USER) where    * 00212100
*                      the creator of the note pad specified          * 00212200
*                      TRACKTAG=CURRENT or TRACKTAG=LIFETIME, the tag * 00212300
*                      value assigned when writing, replacing, or     * 00212400
*                      deleting a note must be greater than or equal  * 00212500
*                      to the current tag value of the note.  If the  * 00212600
*                      new tag value is less than the current tag     * 00212700
*                      value of the note, the request is rejected     * 00212800
*                      (IXCNOTERSNNOTELOWTAG).  Any tag value can be  * 00212900
*                      assigned when creating a note.                 * 00213000
*                                                                     * 00213100
*                                                                     * 00213200
*                      ÝTAG=»xtag!KEEPº¨                              * 00213300
*                          is the name (RS-type), or address in       * 00213400
*                          register (2)-(12), of an optional 16       * 00213500
*                          character input/output variable into/from  * 00213600
*                          which the connector assigned note tag is   * 00213700
*                          stored/fetched.                            * 00213800
*                                                                     * 00213900
*                                                                     * 00214000
*                          o   For a TAG specification other than     * 00214100
*                              TAG=KEEP                               * 00214200
*                                                                     * 00214300
*                              When reading a note, TAG is an output  * 00214400
*                              variable into which the current tag of * 00214500
*                              the note is to be stored.  Zero might  * 00214600
*                              be stored if the request is not        * 00214700
*                              successful.                            * 00214800
*                                                                     * 00214900
*                              When creating a note, TAG is an        * 00215000
*                              input/output variable.  The tag value  * 00215100
*                              to be assigned to the note will be     * 00215200
*                              fetched from the indicated variable.   * 00215300
*                              If the request is rejected because the * 00215400
*                              note already exists                    * 00215500
*                              (IXCNOTERSNNOTEEXISTS), the current    * 00215600
*                              tag value for the note is stored.      * 00215700
*                              Otherwise the tag value stored will be * 00215800
*                              the original input value, which for a  * 00215900
*                              successful request, would be the tag   * 00216000
*                              value that was set for the newly       * 00216100
*                              created note.                          * 00216200
*                                                                     * 00216300
*                              When replacing, writing, or deleting a * 00216400
*                              note, TAG is an input/output variable. * 00216500
*                              For these requests, the tag value to   * 00216600
*                              be assigned to the note will be        * 00216700
*                              fetched from the indicated variable.   * 00216800
*                              If the request is rejected due to an   * 00216900
*                              instance number mismatch               * 00217000
*                              (IXCNOTERSNNOTEBADINSTANCE#), or       * 00217100
*                              because the specified tag value was    * 00217200
*                              less than the current tag value of the * 00217300
*                              note (IXCNOTERSNNOTELOWTAG), the       * 00217400
*                              current tag value for the note is      * 00217500
*                              stored.  Otherwise the tag value       * 00217600
*                              stored will be the original input      * 00217700
*                              value, which for a successful request, * 00217800
*                              would be the tag value that was set    * 00217900
*                              for the note.                          * 00218000
*                                                                     * 00218100
*                              When writing a note, the indicated TAG * 00218200
*                              value will be assigned to the note     * 00218300
*                              regardless of whether the write        * 00218400
*                              request causes the note to be created  * 00218500
*                              or replaced.                           * 00218600
*                                                                     * 00218700
*                              When deleting a note from a note pad   * 00218800
*                              for which the creator of the note pad  * 00218900
*                              specified TRACKTAG=LIFETIME, the       * 00219000
*                              delete request could be deferred if    * 00219100
*                              XCF needs to ensure that the maximum   * 00219200
*                              note tag value is preserved.           * 00219300
*                                                                     * 00219400
*                          o   For TAG=KEEP                           * 00219500
*                                                                     * 00219600
*                              If TAG=KEEP is specified (or taken as  * 00219700
*                              a default), a tag value is neither     * 00219800
*                              fetched nor stored.  When creating a   * 00219900
*                              note, the tag value assigned to the    * 00220000
*                              note will be zero.  When reading,      * 00220100
*                              replacing, or deleting a note, the     * 00220200
*                              note tag will not be changed.  When    * 00220300
*                              writing a note, the note tag will be   * 00220400
*                              set to zero if the note is created,    * 00220500
*                              but will not be changed if the note is * 00220600
*                              replaced.                              * 00220700
*                                                                     * 00220800
*                                                                     * 00220900
*                                                                     * 00221000
*                          DEFAULT: KEEP                              * 00221100
*                                                                     * 00221200
*                                                                     * 00221300
*                                                                     * 00221400
*                  TAGGING=XCF                                        * 00221500
*                      The connector claims that XCF is responsible   * 00221600
*                      for assigning tags to the notes.  The request  * 00221700
*                      is rejected if the creator of the note pad     * 00221800
*                      specified TAGGING=USER.                        * 00221900
*                                                                     * 00222000
*                      XCF will assign a new tag when creating,       * 00222100
*                      replacing, or writing a note.  XCF does not    * 00222200
*                      change the note tag when reading or deleting a * 00222300
*                      note.  XCF note tags are ever increasing.      * 00222400
*                                                                     * 00222500
*                                                                     * 00222600
*                      ÝTAG=xtag¨                                     * 00222700
*                          is the name (RS-type), or address in       * 00222800
*                          register (2)-(12), of an optional 16       * 00222900
*                          character output variable into which the   * 00223000
*                          XCF assigned tag value for the note is to  * 00223100
*                          be stored.  If TAG is specified and the    * 00223200
*                          request is not successful, zero might be   * 00223300
*                          stored.                                    * 00223400
*                                                                     * 00223500
*                                                                     * 00223600
*                                                                     * 00223700
*                                                                     * 00223800
*                                                                     * 00223900
*                                                                     * 00224000
*                                                                     * 00224100
*                                                                     * 00224200
*              ÝINSTANCE#=»xinstance#!IGNOREº¨                        * 00224300
*                  is the name (RS-type), or address in register      * 00224400
*                  (2)-(12), of an optional 8 character input/output  * 00224500
*                  variable for the instance number of the note.  XCF * 00224600
*                  sets the instance number to a value of its own     * 00224700
*                  choosing whenever a note is created, written, or   * 00224800
*                  replaced.  The exploiter specifies the INSTANCE#   * 00224900
*                  keyword to indicate whether instance number        * 00225000
*                  comparisons are to be performed when reading,      * 00225100
*                  writing, replacing, or deleting a note (such       * 00225200
*                  comparisons are not done when creating a note).    * 00225300
*                  The instance number allows for a simple compare    * 00225400
*                  and swap like serialization that can be used to    * 00225500
*                  ensure that the expected copy of the note is being * 00225600
*                  manipulated in the note pad.  If the specified     * 00225700
*                  (nonzero) instance number equals the current       * 00225800
*                  instance number of the note, the request is        * 00225900
*                  processed.  If not, the request is rejected.       * 00226000
*                                                                     * 00226100
*                  If the creator of the note pad specified           * 00226200
*                  INSTCOMP=REQUIRED, a nonzero INSTANCE# must be     * 00226300
*                  specified when deleting, replacing, or writing an  * 00226400
*                  existing note.                                     * 00226500
*                                                                     * 00226600
*                  If INSTANCE#=IGNORE is specified, or if the        * 00226700
*                  specified instance number equals zero, the request * 00226800
*                  is processed without performing instance number    * 00226900
*                  comparisons.  That is, the note will be read,      * 00227000
*                  written, replaced, or deleted without regard to    * 00227100
*                  its current instance number.  If the specified     * 00227200
*                  instance number is nonzero, the read, write,       * 00227300
*                  replace, or delete of the note in the note pad     * 00227400
*                  will be performed only if the specified instance   * 00227500
*                  number equals the current instance number of the   * 00227600
*                  note.                                              * 00227700
*                                                                     * 00227800
*                  For an INSTANCE# specification other than          * 00227900
*                  INSTANCE#=IGNORE, INSTANCE# could be an output     * 00228000
*                  variable or an input/output variable.              * 00228100
*                                                                     * 00228200
*                                                                     * 00228300
*                  o   When creating a note, INSTANCE# is an output   * 00228400
*                      variable into which the instance number        * 00228500
*                      assigned to the note by XCF is to be stored.   * 00228600
*                      Zero might be stored if the request is not     * 00228700
*                      successful.                                    * 00228800
*                                                                     * 00228900
*                  o   When writing, replacing, reading, or deleting  * 00229000
*                      a note, INSTANCE# is an input/output variable. * 00229100
*                      A copy of the variable will be put in the      * 00229200
*                      IXCNOTE parameter list.  If the note exists    * 00229300
*                      and the specified instance number is not zero, * 00229400
*                      the service routine will use it for instance   * 00229500
*                      number comparisons.  Upon return from the      * 00229600
*                      service routine, an instance number is stored  * 00229700
*                      in the indicated variable.  Typically this     * 00229800
*                      value will be the current instance number of   * 00229900
*                      the note, regardless of whether the request    * 00230000
*                      was successfully processed or whether it       * 00230100
*                      failed due to an instance number mismatch.     * 00230200
*                      The original input value might be stored if    * 00230300
*                      the request is not successful for other        * 00230400
*                      reasons.  In the case where the request fails  * 00230500
*                      due to an instance number mismatch, the output * 00230600
*                      value would be the instance number to specify  * 00230700
*                      on a subsequent request in order to pass the   * 00230800
*                      instance number comparison check for the note  * 00230900
*                      (assuming the note was not updated by some     * 00231000
*                      other request in the meantime).                * 00231100
*                                                                     * 00231200
*                                                                     * 00231300
*                                                                     * 00231400
*                  DEFAULT: IGNORE                                    * 00231500
*                                                                     * 00231600
*                                                                     * 00231700
*                                                                     * 00231800
*                                                                     * 00231900
*              ÝKEEPNOTE=»NO!YESº¨                                    * 00232000
*                  is an optional keyword input indicating whether    * 00232100
*                  the note should be kept or deleted when the        * 00232200
*                  connection associated with the note is deleted.  A * 00232300
*                  note is associated with the connection if the      * 00232400
*                  connection created the note and it was never       * 00232500
*                  replaced, or if the connection was the last to     * 00232600
*                  replace the note (regardless of which connection   * 00232700
*                  might have created the note).                      * 00232800
*                                                                     * 00232900
*                  The KEEPNOTE specification is an attribute of the  * 00233000
*                  note that gets set whenever the note is created,   * 00233100
*                  written, or replaced.  Thus the KEEPNOTE keyword   * 00233200
*                  must not be specified when reading or deleting a   * 00233300
*                  note since these operations cannot change the      * 00233400
*                  attribute.                                         * 00233500
*                                                                     * 00233600
*                  Note that the KEEPNOTE attribute is subject to     * 00233700
*                  change whenever a note is replaced.  Thus if the   * 00233800
*                  KEEPNOTE attribute is to be preserved, the         * 00233900
*                  connector must take care to code the appropriate   * 00234000
*                  KEEPNOTE specification each time the note is       * 00234100
*                  replaced.                                          * 00234200
*                  DEFAULT: NO                                        * 00234300
*                                                                     * 00234400
*                                                                     * 00234500
*                  ÝKEEPNOTE=NO¨                                      * 00234600
*                      The note is to be deleted when the associated  * 00234700
*                      connection is deleted.                         * 00234800
*                                                                     * 00234900
*                  ÝKEEPNOTE=YES¨                                     * 00235000
*                      The note is to be kept when the associated     * 00235100
*                      connection is deleted.                         * 00235200
*                                                                     * 00235300
*                      The note will remain in the note pad until it  * 00235400
*                      is explicitly deleted by a subsequent IXCNOTE  * 00235500
*                      request, or until the note pad is deleted.     * 00235600
*                      Also note that the note will be eligible for   * 00235700
*                      deletion if KEEPNOTE=NO is specified (possibly * 00235800
*                      as a default) when the note is subsequently    * 00235900
*                      replaced.                                      * 00236000
*                                                                     * 00236100
*                                                                     * 00236200
*                                                                     * 00236300
*                                                                     * 00236400
*                                                                     * 00236500
*                                                                     * 00236600
*              The following is a set of mutually exclusive keys.     * 00236700
*              This set is required; only one key must be specified.  * 00236800
*                                                                     * 00236900
*                                                                     * 00237000
*              NOBUFFER                                               * 00237100
*                  keyword indicating that no buffer is being         * 00237200
*                  provided for the note request.                     * 00237300
*                                                                     * 00237400
*                  When creating a note, the note will have no        * 00237500
*                  content (the size of the note will be zero).  A    * 00237600
*                  note with no content is called a "null note".      * 00237700
*                  When replacing a note, the current content of the  * 00237800
*                  note will not be changed.  If writing a note, the  * 00237900
*                  content of the note will not be changed if the     * 00238000
*                  note exists, and the note will be null if it does  * 00238100
*                  not exist.  Use BUFFER with a BUFLEN of zero if an * 00238200
*                  existing note is to be replaced or written with    * 00238300
*                  null content.                                      * 00238400
*                                                                     * 00238500
*                  When reading or deleting a note, the request will  * 00238600
*                  be processed but the content of the note will not  * 00238700
*                  be copied into storage.                            * 00238800
*                                                                     * 00238900
*              BUFFER=xbuffer                                         * 00239000
*                  belongs to a set of mutually exclusive keys. It is * 00239100
*                  the name (RS-type), or address in register         * 00239200
*                  (2)-(12), of a character input buffer into/from    * 00239300
*                  which the note content is stored/fetched.  When    * 00239400
*                  creating, replacing or writing a note, the buffer  * 00239500
*                  names an input area that contains the data that is * 00239600
*                  to be written as a note in the note pad.  When     * 00239700
*                  reading or deleting a note, the buffer is an       * 00239800
*                  output area into which XCF is to place a copy of   * 00239900
*                  the note that was fetched from the note pad.       * 00240000
*                  Refer to the description of BUFLEN below for       * 00240100
*                  additional details.                                * 00240200
*                                                                     * 00240300
*                  The storage containing the BUFFER must reside in   * 00240400
*                  the primary address space of the caller, or in a   * 00240500
*                  space addressable via a public entry on the        * 00240600
*                  dispatchable unit access list (DU-AL), or in a     * 00240700
*                  common area data space.  The storage must be       * 00240800
*                  accessible using the PSW key of the program making * 00240900
*                  the request.                                       * 00241000
*                                                                     * 00241100
*                                                                     * 00241200
*                  BUFLEN=xbuflen                                     * 00241300
*                      is the name (RS-type), or address in register  * 00241400
*                      (2)-(12), of a required fullword input         * 00241500
*                      variable containing the size in bytes of the   * 00241600
*                      buffer.  The specified value must be a         * 00241700
*                      multiple of 1024 (1K).                         * 00241800
*                                                                     * 00241900
*                      If BUFLEN is zero, then:                       * 00242000
*                                                                     * 00242100
*                                                                     * 00242200
*                      o   When reading or deleting a note, the       * 00242300
*                          request is rejected unless the note to be  * 00242400
*                          processed is a null note (has no content). * 00242500
*                                                                     * 00242600
*                      o   When creating, replacing, or writing a     * 00242700
*                          note, the resulting note will be a null    * 00242800
*                          note.  In particular, note that when       * 00242900
*                          writing or replacing an existing note, the * 00243000
*                          existing content of the note (if any) will * 00243100
*                          be lost when the BUFLEN value is zero.     * 00243200
*                          Use NOBUFFER if the content of the note is * 00243300
*                          to be preserved.                           * 00243400
*                                                                     * 00243500
*                                                                     * 00243600
*                                                                     * 00243700
*                      If BUFLEN is nonzero, then:                    * 00243800
*                                                                     * 00243900
*                                                                     * 00244000
*                      o   When reading or deleting a note, the       * 00244100
*                          nonzero BUFLEN must be greater than or     * 00244200
*                          equal to the size of the note being        * 00244300
*                          processed.  The number of bytes stored in  * 00244400
*                          the buffer will be the actual note size.   * 00244500
*                          If the buffer is larger than the note      * 00244600
*                          size, XCF does not update any bytes in the * 00244700
*                          buffer beyond the end of the note.  If the * 00244800
*                          buffer is smaller than the actual note     * 00244900
*                          size, the request is rejected.             * 00245000
*                                                                     * 00245100
*                      o   When creating, replacing, or writing a     * 00245200
*                          note, the nonzero BUFLEN indicates the     * 00245300
*                          size of the note.  The nonzero value must  * 00245400
*                          be less than or equal to the maximum note  * 00245500
*                          size defined by the creator of the note    * 00245600
*                          pad.  If BUFLEN exceeds the maximum note   * 00245700
*                          size defined by the creator of the note    * 00245800
*                          pad, the request is rejected.              * 00245900
*                                                                     * 00246000
*                                                                     * 00246100
*                                                                     * 00246200
*                                                                     * 00246300
*                                                                     * 00246400
*                                                                     * 00246500
*                                                                     * 00246600
*              End of a set of mutually exclusive required keys.      * 00246700
*                                                                     * 00246800
*                                                                     * 00246900
*          REQUEST=NOTES                                              * 00247000
*              Process a collection of notes in the note pad.         * 00247100
*                                                                     * 00247200
*              The CHOOSE keyword determines the set of notes to be   * 00247300
*              processed.  One can either read or delete the selected * 00247400
*              notes.                                                 * 00247500
*                                                                     * 00247600
*              Requests to process multiple notes could be long       * 00247700
*              running.                                               * 00247800
*                                                                     * 00247900
*              A NOTES request can be issued by a work unit that can  * 00248000
*              satisfy any of the following conditions:               * 00248100
*                                                                     * 00248200
*                                                                     * 00248300
*              o   Requester is the connector                         * 00248400
*                                                                     * 00248500
*              o   Home is connector address space and has            * 00248600
*                  appropriate SAF authorization                      * 00248700
*                                                                     * 00248800
*              o   Supervisor state or PKM allowing key 0 to 7, and:  * 00248900
*                                                                     * 00249000
*                                                                     * 00249100
*                  -   Connection created with USAGE=CLIENT, or       * 00249200
*                                                                     * 00249300
*                  -   Connection created with USAGE=SERVER and       * 00249400
*                      primary is the connector space, or             * 00249500
*                                                                     * 00249600
*                  -   Running as an address space resource manager   * 00249700
*                                                                     * 00249800
*                                                                     * 00249900
*                                                                     * 00250000
*                                                                     * 00250100
*                                                                     * 00250200
*                                                                     * 00250300
*              CONNECTION=xconnection                                 * 00250400
*                  is the name (RS-type), or address in register      * 00250500
*                  (2)-(12), of a required 32 character input         * 00250600
*                  variable containing the token that represents the  * 00250700
*                  connection to the note pad.                        * 00250800
*                                                                     * 00250900
*                  This token was returned by a previous invocation   * 00251000
*                  of IXCNOTE REQUEST=CONNECTION REQTYPE=CREATE.  The * 00251100
*                  connection represented by the token must have been * 00251200
*                  created with an ACCESS specification that is       * 00251300
*                  appropriate to the type of request to be processed * 00251400
*                  (REQTYPE).  If created with ACCESS=UPDATE, the     * 00251500
*                  connection can read or delete notes.  If created   * 00251600
*                  with ACCESS=READ, the connection can read notes.   * 00251700
*                                                                     * 00251800
*                                                                     * 00251900
*                                                                     * 00252000
*                                                                     * 00252100
*              REQTYPE=»READ!DELETEº                                  * 00252200
*                  is a required keyword input indicating the type of * 00252300
*                  request to be processed.                           * 00252400
*                                                                     * 00252500
*                                                                     * 00252600
*                  REQTYPE=READ                                       * 00252700
*                      Read one or more notes from the note pad.      * 00252800
*                      Metadata for each of the selected notes will   * 00252900
*                      be stored in the answer area (ANSAREA).  The   * 00253000
*                      note content will be stored in the buffer area * 00253100
*                      (BUFFER).  An answer area is required.  A      * 00253200
*                      buffer area is optional.  A successful read    * 00253300
*                      request returns to the caller when all of the  * 00253400
*                      selected notes have been read, or when the     * 00253500
*                      storage areas provided for output are filled   * 00253600
*                      with as many notes as will fit, whichever      * 00253700
*                      comes first.                                   * 00253800
*                                                                     * 00253900
*                      If a read request completes prematurely        * 00254000
*                      because one or both of the provided storage    * 00254100
*                      areas are full, the service routine provides a * 00254200
*                      warning return and reason code                 * 00254300
*                      (IXCNOTERSNMORENOTES).  If so, a nonzero       * 00254400
*                      resume token (RESUMETOKEN) is also stored.     * 00254500
*                      After processing the notes that were read, one * 00254600
*                      can continue reading the remaining notes by    * 00254700
*                      reissuing the same request, passing the        * 00254800
*                      aforementioned nonzero resume token via the    * 00254900
*                      RESUMETOKEN keyword to continue reading from   * 00255000
*                      where the prior read request left off.  When   * 00255100
*                      all of the notes have been read, the service   * 00255200
*                      routine sets return code zero.  Note that the  * 00255300
*                      number of notes returned in this case could be * 00255400
*                      zero.  Also note that a nonzero RESUMETOKEN is * 00255500
*                      returned for the return code zero case as      * 00255600
*                      well.  One could for example, later issue a    * 00255700
*                      new read notes request with this token to read * 00255800
*                      subsequently created notes.                    * 00255900
*                                                                     * 00256000
*                      XCF inspects the notes in the order in which   * 00256100
*                      they were originally created.  As a result, be * 00256200
*                      aware of the following:                        * 00256300
*                                                                     * 00256400
*                                                                     * 00256500
*                      o   If an existing note is replaced one or     * 00256600
*                          more times while a read notes request is   * 00256700
*                          being processed, at most one of the        * 00256800
*                          instances will be returned by the request. * 00256900
*                          A note is created by a create note         * 00257000
*                          request, or by a write request when the    * 00257100
*                          note does not exist.  Replacing the        * 00257200
*                          content of an existing note does not cause * 00257300
*                          the note to be created.  Thus after a read * 00257400
*                          operation inspects a note, that note will  * 00257500
*                          not be inspected again by the ongoing read * 00257600
*                          operation or any subsequent resume of the  * 00257700
*                          read request, regardless of how many times * 00257800
*                          the note is replaced.                      * 00257900
*                                                                     * 00258000
*                      o   If a note is created while a read notes    * 00258100
*                          request is being processed, the newly      * 00258200
*                          created note might not be returned by the  * 00258300
*                          ongoing read operation.  In some cases,    * 00258400
*                          the timing could be such that a note would * 00258500
*                          not be returned even when the read request * 00258600
*                          is resumed using the RESUMETOKEN returned  * 00258700
*                          by the read request that was active when   * 00258800
*                          the note was created.                      * 00258900
*                                                                     * 00259000
*                      o   If a note is deleted and created anew      * 00259100
*                          while a read notes request is being        * 00259200
*                          processed, there is the potential for the  * 00259300
*                          note to be reported multiple times by the  * 00259400
*                          read request.  For example, the read       * 00259500
*                          request could fetch a given note and store * 00259600
*                          it in the user ANSAREA.  Meanwhile, some   * 00259700
*                          other process could delete the note and    * 00259800
*                          create a new instance of the same note     * 00259900
*                          (one with the same name).  That new        * 00260000
*                          instance of the note could be visible to   * 00260100
*                          the ongoing read operation, or to a        * 00260200
*                          subsequent resume of the read request, and * 00260300
*                          so could be returned again.                * 00260400
*                                                                     * 00260500
*                                                                     * 00260600
*                                                                     * 00260700
*                      An answer area (ANSAREA) must be provided when * 00260800
*                      reading notes.  For each of the selected       * 00260900
*                      notes, a data record containing information    * 00261000
*                      about the note (such as its name and tag) will * 00261100
*                      be stored in the answer area.  The data record * 00261200
*                      is mapped by ixcynote_tNoteData.               * 00261300
*                                                                     * 00261400
*                      The answer area must be large enough to allow  * 00261500
*                      information for at least one note to be        * 00261600
*                      returned.  If the answer area is not large     * 00261700
*                      enough to allow information for the required   * 00261800
*                      minimum number of notes to be returned, the    * 00261900
*                      service routine rejects the request            * 00262000
*                      (IXCNOTERSNANSLENMORE).                        * 00262100
*                                                                     * 00262200
*                      The content of the notes will be returned in   * 00262300
*                      the indicated buffer area (BUFFER).  The       * 00262400
*                      buffer area is optional.  If a buffer is not   * 00262500
*                      provided, the content of the notes will not be * 00262600
*                      read.  If a buffer area is provided, the data  * 00262700
*                      record stored in the answer area for each note * 00262800
*                      will indicate the location within the buffer   * 00262900
*                      area where the content of the corresponding    * 00263000
*                      note was stored (if any).                      * 00263100
*                                                                     * 00263200
*                      The BUFFER area must be large enough to allow  * 00263300
*                      the content of at least one note to be stored. * 00263400
*                      If the BUFFER area is not large enough for the * 00263500
*                      minimum required number of notes, the service  * 00263600
*                      routine rejects the request                    * 00263700
*                      (IXCNOTERSNBUFLENBADVAL).                      * 00263800
*                                                                     * 00263900
*                                                                     * 00264000
*                      RESUMETOKEN=xresumetoken                       * 00264100
*                          is the name (RS-type), or address in       * 00264200
*                          register (2)-(12), of a required 32        * 00264300
*                          character input/output variable that       * 00264400
*                          contains a resume token for resuming a     * 00264500
*                          read request that completes prematurely.   * 00264600
*                          Specifying a resume token initialized to   * 00264700
*                          all zeros causes the read request to       * 00264800
*                          consider all the notes in the note pad.    * 00264900
*                          Specifying a nonzero resume token causes   * 00265000
*                          the read request to continue reading from  * 00265100
*                          where a prior request left off.            * 00265200
*                                                                     * 00265300
*                          When specifying a nonzero resume token,    * 00265400
*                          only use the value that was returned by    * 00265500
*                          the previous invocation of a read request  * 00265600
*                          initiated by the subject connection for    * 00265700
*                          the subject note pad.  Otherwise XCF might * 00265800
*                          reject the request with an indication that * 00265900
*                          the resume token is not valid              * 00266000
*                          (IXCNOTERSNRESUMETOKENBADVAL), or if the   * 00266100
*                          request is in fact processed, the request  * 00266200
*                          might not return the expected set of       * 00266300
*                          notes.                                     * 00266400
*                                                                     * 00266500
*                          When passing a nonzero RESUMETOKEN, the    * 00266600
*                          caller should in general also pass the     * 00266700
*                          same selection criteria as was passed when * 00266800
*                          the request was first initiated, and       * 00266900
*                          continue doing so for each iteration of    * 00267000
*                          the read request until it is complete.     * 00267100
*                          Otherwise the request will likely not      * 00267200
*                          return the intended set of notes.  For     * 00267300
*                          example, the same note could be read twice * 00267400
*                          or a note that meets the selection         * 00267500
*                          criteria might not be read at all.         * 00267600
*                                                                     * 00267700
*                          Typically, the reading of multiple notes   * 00267800
*                          will use logic similar to the following:   * 00267900
*                                                                     * 00268000
*                           Set ResumeToken to zero                   * 00268100
*                           Do until all notes have been read (rc=0)  * 00268200
*                             IXCNOTE REQUEST=NOTES,REQTYPE=READ,     * 00268300
*                                     CHOOSE=ALL,                     * 00268400
*                                     RESUMETOKEN=ResumeToken,        * 00268500
*                                     CONNECTION=connect_token,       * 00268600
*                                     ANSAREA=ansarea,ANSLEN=anslen,  * 00268700
*                                     BUFFER=buffer,BUFLEN=buflen,    * 00268800
*                                     RETCODE=rc,RSNCODE=rsn          * 00268900
*                                                                     * 00269000
*                             If rc/rsn indicate error                * 00269100
*                               Deal with error                       * 00269200
*                               Terminate loop                        * 00269300
*                             Else (rc=0 or rc=4)                     * 00269400
*                               Process returned notes (if any)       * 00269500
*                           End Do                                    * 00269600
*                                                                     * 00269700
*                                                                     * 00269800
*                                                                     * 00269900
*                                                                     * 00270000
*                      The following is a set of mutually exclusive   * 00270100
*                      keys.  This set is required; only one key must * 00270200
*                      be specified.                                  * 00270300
*                                                                     * 00270400
*                                                                     * 00270500
*                      NOBUFFER                                       * 00270600
*                          keyword indicating that the content of the * 00270700
*                          notes are not to be stored.  Information   * 00270800
*                          about the notes will be stored in the      * 00270900
*                          answer area (ANSAREA).                     * 00271000
*                                                                     * 00271100
*                      BUFFER=xbuffer                                 * 00271200
*                          belongs to a set of mutually exclusive     * 00271300
*                          keys. It is the name (RS-type), or address * 00271400
*                          in register (2)-(12), of a character input * 00271500
*                          buffer into which the content of the       * 00271600
*                          selected notes is to be stored.  Only      * 00271700
*                          complete notes will be stored in the       * 00271800
*                          buffer.  When the buffer is filled, the    * 00271900
*                          read request returns.  In the answer area, * 00272000
*                          the data record for each note              * 00272100
*                          (ixcynote_tNoteData) will indicate whether * 00272200
*                          the content of the note was stored in the  * 00272300
*                          BUFFER area, and if so, where.             * 00272400
*                                                                     * 00272500
*                          The storage containing the BUFFER must     * 00272600
*                          reside in the primary address space of the * 00272700
*                          caller, or in a space addressable via a    * 00272800
*                          public entry on the dispatchable unit      * 00272900
*                          access list (DU-AL), or in a common area   * 00273000
*                          data space.  The storage must be           * 00273100
*                          accessible using the PSW key of the        * 00273200
*                          program making the request.                * 00273300
*                                                                     * 00273400
*                                                                     * 00273500
*                          BUFLEN=xbuflen                             * 00273600
*                              is the name (RS-type), or address in   * 00273700
*                              register (2)-(12), of a required       * 00273800
*                              fullword input variable containing the * 00273900
*                              size in bytes of the buffer.  BUFLEN   * 00274000
*                              must be a multiple of 1024.  If BUFLEN * 00274100
*                              is less than the size needed to hold   * 00274200
*                              the largest selected note, the request * 00274300
*                              is rejected.  In general, the          * 00274400
*                              specified BUFLEN value should be       * 00274500
*                              greater than or equal to the largest   * 00274600
*                              note supported by the note pad.        * 00274700
*                              BUFLEN can be zero, but the request    * 00274800
*                              will be rejected if any note other     * 00274900
*                              than a null note is selected.  A null  * 00275000
*                              note has no content (zero length).     * 00275100
*                                                                     * 00275200
*                                                                     * 00275300
*                                                                     * 00275400
*                                                                     * 00275500
*                                                                     * 00275600
*                      End of a set of mutually exclusive required    * 00275700
*                      keys.                                          * 00275800
*                                                                     * 00275900
*                                                                     * 00276000
*                  REQTYPE=DELETE                                     * 00276100
*                      Delete the indicated set of notes from the     * 00276200
*                      note pad.  The request will not return until   * 00276300
*                      all of the selected notes are processed.       * 00276400
*                                                                     * 00276500
*                      If provided, the answer area will indicate how * 00276600
*                      many notes were deleted.  No note information  * 00276700
*                      is stored for any of the deleted notes.        * 00276800
*                                                                     * 00276900
*                      Note that the note pad itself persists until   * 00277000
*                      it is deleted.  Deleting all the notes in the  * 00277100
*                      note pad does not delete the note pad.         * 00277200
*                                                                     * 00277300
*                                                                     * 00277400
*                      ÝMAXTAG=»xmaxtag!NONEº¨                        * 00277500
*                          is the name (RS-type), or address in       * 00277600
*                          register (2)-(12), of an optional 16       * 00277700
*                          character input variable containing a note * 00277800
*                          tag value.  if MAXTAG=NONE is specified    * 00277900
*                          (or taken as the default), all of the      * 00278000
*                          selected notes are deleted without regard  * 00278100
*                          to tag value.  If a MAXTAG value other     * 00278200
*                          than NONE is specified, a selected note    * 00278300
*                          will be deleted if its tag value is less   * 00278400
*                          than or equal to the indicated MAXTAG      * 00278500
*                          value.                                     * 00278600
*                                                                     * 00278700
*                          If the creator of the note pad specified   * 00278800
*                          TRACKTAG=LIFETIME, these additional        * 00278900
*                          considerations apply,                      * 00279000
*                                                                     * 00279100
*                                                                     * 00279200
*                          o   If notes are deleted, XCF will have    * 00279300
*                              atomically preserved the maximum tag   * 00279400
*                              value of the note pad if any of the    * 00279500
*                              deleted notes had the maximum tag      * 00279600
*                              value ever assigned for the life of    * 00279700
*                              the note pad.                          * 00279800
*                                                                     * 00279900
*                          o   If the creator of the note pad         * 00280000
*                              specified TAGGING=USER, then after the * 00280100
*                              selected notes are deleted, XCF        * 00280200
*                              determines whether the specified       * 00280300
*                              MAXTAG value is a new maximum tag      * 00280400
*                              value for the note pad.  If so, XCF    * 00280500
*                              preserves the indicated MAXTAG value   * 00280600
*                              as the new maximum note tag value for  * 00280700
*                              the note pad.                          * 00280800
*                                                                     * 00280900
*                              NOTE]  Although preservation of the    * 00281000
*                              maximum tag value assigned to the      * 00281100
*                              deleted notes is atomic, the setting   * 00281200
*                              of the specified MAXTAG value as the   * 00281300
*                              new maximum note tag for the note pad  * 00281400
*                              is not atomic.  Thus as the result of  * 00281500
*                              a failure, the specified MAXTAG value  * 00281600
*                              might not get preserved in the note    * 00281700
*                              pad.  If the exploiter cannot tolerate * 00281800
*                              a failure to record the specified      * 00281900
*                              MAXTAG value as the new maximum tag    * 00282000
*                              value, consider using REQUEST=NOTE to  * 00282100
*                              delete the notes one at a time.        * 00282200
*                              Preservation of the maximum note tag   * 00282300
*                              is guaranteed to be atomic when        * 00282400
*                              deleting a single note.                * 00282500
*                                                                     * 00282600
*                                                                     * 00282700
*                                                                     * 00282800
*                          DEFAULT: NONE                              * 00282900
*                                                                     * 00283000
*                                                                     * 00283100
*                                                                     * 00283200
*                                                                     * 00283300
*                                                                     * 00283400
*                                                                     * 00283500
*                                                                     * 00283600
*                                                                     * 00283700
*              CHOOSE=»ALL!BYCRITERIAº                                * 00283800
*                  is a required keyword input indicating how the set * 00283900
*                  of notes to be processed is to be determined.      * 00284000
*                                                                     * 00284100
*                                                                     * 00284200
*                  CHOOSE=ALL                                         * 00284300
*                      All notes in the note pad are to be selected.  * 00284400
*                                                                     * 00284500
*                  CHOOSE=BYCRITERIA                                  * 00284600
*                      The notes that meet the indicated selection    * 00284700
*                      criteria are to be processed.  Various         * 00284800
*                      selection criteria can be specified.  For      * 00284900
*                      example, one can select notes whose tag values * 00285000
*                      are within a particular range.                 * 00285100
*                                                                     * 00285200
*                                                                     * 00285300
*                      CRITERIA=xcriteria                             * 00285400
*                          is the name (RS-type), or address in       * 00285500
*                          register (2)-(12), of a required character * 00285600
*                          input storage area containing selection    * 00285700
*                          criteria which is mapped by                * 00285800
*                          ixcynote_tSelectionCriteria.  A selection  * 00285900
*                          element contains data that defines the     * 00286000
*                          criteria that are to be used to select the * 00286100
*                          notes of interest.  See the IXCYNOTE macro * 00286200
*                          for additional details on how to specify   * 00286300
*                          various selection criteria.                * 00286400
*                                                                     * 00286500
*                          The storage containing the CRITERIA must   * 00286600
*                          reside in the primary address space of the * 00286700
*                          caller, or in a space addressable via a    * 00286800
*                          public entry on the dispatchable unit      * 00286900
*                          access list (DU-AL), or in a common area   * 00287000
*                          data space.  The storage must be           * 00287100
*                          accessible using the PSW key of the        * 00287200
*                          program making the request.                * 00287300
*                                                                     * 00287400
*                                                                     * 00287500
*                                                                     * 00287600
*                                                                     * 00287700
*                                                                     * 00287800
*                                                                     * 00287900
*                                                                     * 00288000
*                                                                     * 00288100
*                                                                     * 00288200
*                                                                     * 00288300
*                                                                     * 00288400
*                                                                     * 00288500
*      The following is a set of mutually exclusive keys.  This set   * 00288600
*      is required; only one key must be specified.                   * 00288700
*                                                                     * 00288800
*                                                                     * 00288900
*      NOANSAREA                                                      * 00289000
*          indicating that no answer area is being provided.  XCF     * 00289100
*          will process the request and provide a suitable return and * 00289200
*          reason code, but an answer area will not be stored.        * 00289300
*                                                                     * 00289400
*          This specification is not permitted for REQUEST=NOTES      * 00289500
*          REQTYPE=READ since an answer area is a required input for  * 00289600
*          that request.                                              * 00289700
*                                                                     * 00289800
*      ANSAREA=xansarea                                               * 00289900
*          belongs to a set of mutually exclusive keys. It is the     * 00290000
*          name (RS-type), or address in register (2)-(12), of a      * 00290100
*          character input storage area into which XCF is to store    * 00290200
*          the results of the request.                                * 00290300
*                                                                     * 00290400
*          If the ANSAREA is not large enough to hold the answer area * 00290500
*          header (mapped by ixcynote_tAnsArea), the request is       * 00290600
*          rejected outright (IXCNOTERSNANSLENBADVAL).  If the        * 00290700
*          ANSAREA is large enough for the header, but not large      * 00290800
*          enough to hold all the requested output data, the service  * 00290900
*          routine returns with a return and reason code indicating   * 00291000
*          that the ANSAREA needs to be bigger.  In cases where the   * 00291100
*          answer areas is not large enough for requests that return  * 00291200
*          a static number of records, the request is rejected with   * 00291300
*          reason code ixcnotRsnAnsLenMore.  In cases where the       * 00291400
*          answer area is not large enough for requests that return a * 00291500
*          variable number of records, the answer area is filled with * 00291600
*          as many records as will fit and the service routine        * 00291700
*          returns with a warning return code and a reason indicating * 00291800
*          that there is additional data available                    * 00291900
*          (IXCNOTERSNMOREDATA or IXCNOTERSNMORENOTES).  For reason   * 00292000
*          IXCNOTERSNMORENOTES, the caller can reissue the request    * 00292100
*          with the resultant RESUMETOKEN value to continue reading   * 00292200
*          the remaining notes.  For the other reasons, the answer    * 00292300
*          area header indicates how much storage is needed to        * 00292400
*          contain the requested data (aa_AnsAreaSizeNeeded).  As     * 00292500
*          appropriate, the caller should obtain a sufficiently large * 00292600
*          answer area and reissue the request.                       * 00292700
*                                                                     * 00292800
*          The storage containing the ANSAREA must reside in the      * 00292900
*          primary address space of the caller, or in a space         * 00293000
*          addressable via a public entry on the dispatchable unit    * 00293100
*          access list (DU-AL), or in a common area data space.  The  * 00293200
*          storage must be accessible using the PSW key of the        * 00293300
*          program making the request.                                * 00293400
*                                                                     * 00293500
*          Note that the answer area storage can be used by XCF as a  * 00293600
*          work area.  In particular, some or all of the answer area  * 00293700
*          might be updated regardless of whether the request         * 00293800
*          completes successfully or not.  The answer area will be    * 00293900
*          valid for use for any return and reason code that          * 00294000
*          indicates that an answer area is stored.                   * 00294100
*                                                                     * 00294200
*                                                                     * 00294300
*          ANSLEN=xanslen                                             * 00294400
*              is the name (RS-type), or address in register          * 00294500
*              (2)-(12), of a required fullword input variable        * 00294600
*              containing the size in bytes of the answer area        * 00294700
*              provided.                                              * 00294800
*                                                                     * 00294900
*                                                                     * 00295000
*                                                                     * 00295100
*                                                                     * 00295200
*                                                                     * 00295300
*      End of a set of mutually exclusive required keys.              * 00295400
*                                                                     * 00295500
*                                                                     * 00295600
*                                                                     * 00295700
*      ÝRETCODE=xretcode¨                                             * 00295800
*          is the name (RS-type) of an optional fullword output       * 00295900
*          variable, or register (2)-(12) or (15), into which the     * 00296000
*          return code is to be copied from GPR 15.  If you specify   * 00296100
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00296200
*          the value will be left in GPR 15.                          * 00296300
*                                                                     * 00296400
*                                                                     * 00296500
*                                                                     * 00296600
*                                                                     * 00296700
*      ÝRSNCODE=xrsncode¨                                             * 00296800
*          is the name (RS-type) of an optional fullword output       * 00296900
*          variable into which the reason code is to be copied from   * 00297000
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00297100
*          R0 (within or without parentheses), the value will be left * 00297200
*          in GPR 0.                                                  * 00297300
*                                                                     * 00297400
*                                                                     * 00297500
*                                                                     * 00297600
*                                                                     * 00297700
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00297800
*          is an optional byte input decimal value in the "0-0" range * 00297900
*          that specifies the macro version.  PLISTVER is the only    * 00298000
*          key allowed on the list form of MF and determines which    * 00298100
*          parameter list is generated.  Note that MAX may be         * 00298200
*          specified instead of a number, and the parameter list will * 00298300
*          be of the largest size currently supported. This size may  * 00298400
*          grow from release to release (thus possibly affecting the  * 00298500
*          amount of storage needed by your program).  If your        * 00298600
*          program can tolerate this, IBM recommends that you always  * 00298700
*          specify MAX when creating the list form parameter list as  * 00298800
*          that will ensure that the list form parameter list is      * 00298900
*          always long enough to hold whatever parameters might be    * 00299000
*          specified on the execute form.                             * 00299100
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00299200
*          default is the lowest version which allows all of the      * 00299300
*          parameters specified on the invocation to be processed.    * 00299400
*                                                                     * 00299500
*                                                                     * 00299600
*                                                                     * 00299700
*                                                                     * 00299800
*      ÝMF=»S!L!Eº¨                                                   * 00299900
*          is an optional keyword input which specifies the macro     * 00300000
*          form.                                                      * 00300100
*          DEFAULT: S                                                 * 00300200
*                                                                     * 00300300
*                                                                     * 00300400
*          ÝMF=S¨                                                     * 00300500
*              specifies the standard form of the macro.  The "S"     * 00300600
*              form generates code to put the parameters into an      * 00300700
*              in-line parameter list and invoke the desired service. * 00300800
*              Full checking for required macro keys is done along    * 00300900
*              with supplying defaults for omitted optional           * 00301000
*              parameters.                                            * 00301100
*                                                                     * 00301200
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00301300
*              specifies the list form of the macro.  The "L" form    * 00301400
*              defines an area to be used for the parameter list.     * 00301500
*              Only the PLISTVER key may be specified on the          * 00301600
*              invocation.  All other macro parameters are flagged as * 00301700
*              errors.  If PLISTVER is not specified, the original    * 00301800
*              parameter list definition is used.                     * 00301900
*                                                                     * 00302000
*            ,xmfctrl                                                 * 00302100
*              is a required input.  It is the name of a storage area * 00302200
*              for the parameter list.                                * 00302300
*                                                                     * 00302400
*            »,xmfattr!0Dº                                            * 00302500
*              is an optional 60 character input string that varies   * 00302600
*              from 1 to 60 characters. Use it to force boundary      * 00302700
*              alignment of the parameter list. Use only 0F or 0D.    * 00302800
*              DEFAULT: 0D which forces the parameter list to a       * 00302900
*              doubleword boundary.                                   * 00303000
*                                                                     * 00303100
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00303200
*              specifies the execute form of the macro.  The "E" form * 00303300
*              generates code to put the parameters into the          * 00303400
*              parameter list specified by xmfctrl and provides full  * 00303500
*              syntax checking with default setting.                  * 00303600
*                                                                     * 00303700
*            ,xmfctrl                                                 * 00303800
*              is a required input.  It is the name (RS-type), or     * 00303900
*              address in register (1)-(12), of a storage area for    * 00304000
*              the parameter list.                                    * 00304100
*                                                                     * 00304200
*            »,COMPLETEº                                              * 00304300
*              is an optional keyword input which specifies the       * 00304400
*              degree of macro parameter syntax checking.             * 00304500
*              DEFAULT: COMPLETE                                      * 00304600
*                                                                     * 00304700
*                                                                     * 00304800
*              COMPLETE                                               * 00304900
*                  Checking for required macro keys is done and       * 00305000
*                  defaults are supplied for omitted optional         * 00305100
*                  parameters.                                        * 00305200
*                                                                     * 00305300
*                                                                     * 00305400
*                                                                     * 00305500
*                                                                     * 00305600
*                                                                     * 00305700
*                                                                     * 00305800
*                                                                     * 00305900
*01* RETURN CODES:                                                    * 00306000
*                                                                     * 00306100
*                                                                     * 00306200
*                 Reason codes are returned with values of the form   * 00306300
*                 xxxxYYYY.  XCF puts diagnostic data in the xxxx     * 00306400
*                 portion.  To validly test for the reason code using * 00306500
*                 the documented reason code constants, you must      * 00306600
*                 account for the nonzero xxxx as the reason code     * 00306700
*                 constants defined in IXCYCON have values of the     * 00306800
*                 form 0000YYYY.  You could for example, isolate the  * 00306900
*                 non-diagnostic YYYY data by ANDing the output       * 00307000
*                 reason code with the mask X'0000FFFF'               * 00307100
*                 (IXCNOTERSNCODEMASK) before comparing it to the     * 00307200
*                 indicated reason code constant.  However, note that * 00307300
*                 when providing documentation to IBM service         * 00307400
*                 personnel, the original unmasked content of the     * 00307500
*                 reason code is needed.                              * 00307600
*                                                                     * 00307700
*       0         IxcRetCodeOk:  Successful completion.               * 00307800
*                                                                     * 00307900
*                                                                     * 00308000
*       4         IxcRetCodeWarning:  Warning. The request completed, * 00308100
*                 but with exceptional circumstances.                 * 00308200
*                                                                     * 00308300
*                                                                     * 00308400
*                 HEX REASON                                          * 00308500
*                 CODE        MEANING                                 * 00308600
*                                                                     * 00308700
*                 xxxx0401    ixcnoteRsnMoreData:  The request was    * 00308800
*                             processed and some of the requested     * 00308900
*                             data was stored in the answer area.     * 00309000
*                             The ANSAREA is large enough to hold the * 00309100
*                             header (ixcynote_tAnsArea) but does not * 00309200
*                             have room for all the requested data.   * 00309300
*                             The aa_AnsAreaSizeNeeded returned in    * 00309400
*                             the ANSAREA indicates how much storage  * 00309500
*                             is required in order for the ANSAREA to * 00309600
*                             hold all the requested data.  As        * 00309700
*                             needed, obtain storage for the answer   * 00309800
*                             area that is at least as large as the   * 00309900
*                             indicated size and reissue the request. * 00310000
*                                                                     * 00310100
*                             For requests that produce varying       * 00310200
*                             quantities of output data due to the    * 00310300
*                             dynamics of the system (for example,    * 00310400
*                             query of a note pad), the actual amount * 00310500
*                             of storage needed for the answer area   * 00310600
*                             when the request is reissued might      * 00310700
*                             differ from the indicated size.  One    * 00310800
*                             might choose to obtain more storage     * 00310900
*                             than indicated by aa_AnsAreaSizeNeeded  * 00311000
*                             in order to reduce the likelihood of    * 00311100
*                             getting this return and reason code     * 00311200
*                             when the request is reissued.           * 00311300
*                                                                     * 00311400
*                 xxxx0402    ixcnoteRsnMoreNotes:  A request to read * 00311500
*                             notes in the note pad completed         * 00311600
*                             prematurely.  The answer area, and as   * 00311700
*                             applicable, the buffer area, were       * 00311800
*                             filled with as many notes as would fit. * 00311900
*                             After processing these results, the     * 00312000
*                             user can continue reading the remaining * 00312100
*                             notes by reissuing the IXCNOTE request  * 00312200
*                             specifying the RESUMETOKEN that was     * 00312300
*                             returned in the RESUMETOKEN output      * 00312400
*                             variable.                               * 00312500
*                                                                     * 00312600
*                 xxxx0403    ixcnoteRsnResumed:  As a result of an   * 00312700
*                             IXCNOTE REQUEST=CONNECTION              * 00312800
*                             REQTYPE=PAUSE request, the connector    * 00312900
*                             was being paused until the note pad was * 00313000
*                             no longer quiesced.  The pause request  * 00313100
*                             was resumed due to some condition other * 00313200
*                             than the note pad becoming unquiesced.  * 00313300
*                             For example, some other work unit       * 00313400
*                             called IXCNOTE REQUEST=CONNECTION       * 00313500
*                             REQTYPE=RESUME to resume the paused     * 00313600
*                             work unit, or the connection            * 00313700
*                             terminated, or the note pad failed.     * 00313800
*                                                                     * 00313900
*                             If an answer area was provided, the     * 00314000
*                             field aa_Details provides additional    * 00314100
*                             information.  The data is mapped by     * 00314200
*                             ixcynote_tDetailsResumed.               * 00314300
*                                                                     * 00314400
*                 xxxx0441    ixcnoteRsnPending:  The request is      * 00314500
*                             pending.                                * 00314600
*                                                                     * 00314700
*                             When creating a connection to a note    * 00314800
*                             pad, the connection was successfully    * 00314900
*                             created.  However, the connection is    * 00315000
*                             currently in a quiesced state.          * 00315100
*                             Consider using IXCNOTE                  * 00315200
*                             REQUEST=CONNECTION REQTYPE=PAUSE to     * 00315300
*                             wait until the connection is ready for  * 00315400
*                             use.  If an answer area was provided,   * 00315500
*                             the field aa_Details provides           * 00315600
*                             additional information.  The data is    * 00315700
*                             mapped by ixcynote_tDetailsQuiesced.    * 00315800
*                                                                     * 00315900
*                             When resuming a connection to a note    * 00316000
*                             pad, no connection was found to be      * 00316100
*                             paused.  The resume request was         * 00316200
*                             recorded so that the next pause request * 00316300
*                             will be immediately resumed.            * 00316400
*                                                                     * 00316500
*                             When deleting a connection to a note    * 00316600
*                             pad, the connection was marked for      * 00316700
*                             deletion.  However, not all of the      * 00316800
*                             necessary cleanup could be accomplished * 00316900
*                             because XCF was not able to access the  * 00317000
*                             relevant coupling facility structures.  * 00317100
*                             XCF will automatically complete the     * 00317200
*                             deletion when access to the structures  * 00317300
*                             is restored.  Consider using IXCNOTE    * 00317400
*                             REQUEST=CONNECTION REQTYPE=PAUSE to     * 00317500
*                             wait until XCF is able to finish        * 00317600
*                             deleting the connection.  If an answer  * 00317700
*                             area was provided, the field aa_Details * 00317800
*                             provides additional information.  The   * 00317900
*                             data is mapped by                       * 00318000
*                             ixcynote_tDetailsQuiesced or by         * 00318100
*                             ixcynote_tDetailsNoResources.           * 00318200
*                                                                     * 00318300
*                             When deleting a note pad, the note pad  * 00318400
*                             was marked for deletion.  However, not  * 00318500
*                             all of the necessary cleanup could be   * 00318600
*                             accomplished because XCF was not able   * 00318700
*                             to access the relevant coupling         * 00318800
*                             facility structures.  XCF will          * 00318900
*                             automatically complete the deletion     * 00319000
*                             when access to the structures is        * 00319100
*                             restored.  While deletion of the note   * 00319200
*                             pad is pending, some requests might get * 00319300
*                             unexpected results.  For example, you   * 00319400
*                             might be able to create a new           * 00319500
*                             connection to the note pad, or an       * 00319600
*                             attempt to create a new instance of the * 00319700
*                             note pad might be rejected because the  * 00319800
*                             old instance still exists.  As needed,  * 00319900
*                             consider using IXCNOTE REQUEST=NOTEPAD  * 00320000
*                             REQTYPE=QUERY to verify that the note   * 00320100
*                             pad has been deleted before proceeding. * 00320200
*                             You might need to be sensitive to the   * 00320300
*                             particular instance of the note pad     * 00320400
*                             (see npd_ETodWhenCreated in macro       * 00320500
*                             IXCYNOTE).                              * 00320600
*                                                                     * 00320700
*                             When modifying the #NOTES attribute for * 00320800
*                             a note pad, not all of the necessary    * 00320900
*                             updates could be accomplished because   * 00321000
*                             XCF was not able to access the relevant * 00321100
*                             coupling facility structures.  XCF will * 00321200
*                             automatically complete the modify       * 00321300
*                             request when access to the structures   * 00321400
*                             is restored.                            * 00321500
*                                                                     * 00321600
*                                                                     * 00321700
*                             o   When a connection to the note pad   * 00321800
*                                 exists, consider using IXCNOTE      * 00321900
*                                 REQUEST=CONNECTION REQTYPE=PAUSE to * 00322000
*                                 be resumed when XCF completes the   * 00322100
*                                 MODIFY request.                     * 00322200
*                                                                     * 00322300
*                             o   IXCNOTE REQUEST=NOTEPAD             * 00322400
*                                 REQTYPE=QUERY can also be used to   * 00322500
*                                 determine whether a MODIFY request  * 00322600
*                                 is pending against the note pad.    * 00322700
*                                 npd_Modifying#Notes is set ON if    * 00322800
*                                 the note pad #NOTES is in the midst * 00322900
*                                 of being modified.  When            * 00323000
*                                 npd_Modifying#Notes is set OFF,     * 00323100
*                                 npd_Required#Notes reflects the     * 00323200
*                                 number of notes that the note pad   * 00323300
*                                 is allowed to hold.                 * 00323400
*                                 npd_Required#Notes will not reflect * 00323500
*                                 the requested change to the #NOTES  * 00323600
*                                 attribute while the modify request  * 00323700
*                                 is pending.                         * 00323800
*                                                                     * 00323900
*                                                                     * 00324000
*                                                                     * 00324100
*                                                                     * 00324200
*                                                                     * 00324300
*                                                                     * 00324400
*       8         IxcRetCodeParmError:  Error. The request can not be * 00324500
*                 completed due to a program error.                   * 00324600
*                                                                     * 00324700
*                                                                     * 00324800
*                 HEX REASON                                          * 00324900
*                 CODE        MEANING                                 * 00325000
*                                                                     * 00325100
*                 xxxx0001    ixcnoteRsnPlistBadStg:  Program error.  * 00325200
*                             The storage containing the parameter    * 00325300
*                             list is not accessible.  It must be     * 00325400
*                             both addressable and accessible using   * 00325500
*                             the PSW key of the caller.              * 00325600
*                                                                     * 00325700
*                             The error occurred while trying to      * 00325800
*                             store output data in the parameter list * 00325900
*                             after the IXCNOTE request had been      * 00326000
*                             processed.  The request might or might  * 00326100
*                             not have completed successfully.  The   * 00326200
*                             note pad might or might not have been   * 00326300
*                             altered.  In the specific case of       * 00326400
*                             REQUEST=CONNECTION REQTYPE=CREATE, the  * 00326500
*                             connection that was created, if any,    * 00326600
*                             has been deleted by XCF.                * 00326700
*                                                                     * 00326800
*                 xxxx0003    ixcnoteRsnPlistBadRsvd:  Program error. * 00326900
*                             A reserved field in the parameter list  * 00327000
*                             is not zero.  Either the parameter list * 00327100
*                             was corrupted or the program is running * 00327200
*                             on a system that does not have the      * 00327300
*                             necessary support.                      * 00327400
*                                                                     * 00327500
*                 xxxx0004    ixcnoteRsnPlistBadVersion:  Program     * 00327600
*                             error.  The parameter list version      * 00327700
*                             number value is not valid.  Either the  * 00327800
*                             parameter list was corrupted or the     * 00327900
*                             program is running on a system that     * 00328000
*                             does not have the necessary support.    * 00328100
*                             Program error.  The parameter list      * 00328200
*                             service code value is not valid.        * 00328300
*                             Either the parameter list was corrupted * 00328400
*                             or the program is running on a system   * 00328500
*                             that does not have the necessary        * 00328600
*                             support.                                * 00328700
*                                                                     * 00328800
*                 xxxx0005    ixcnoteRsnPlistBadRequest:  Program     * 00328900
*                             error.  The parameter list content for  * 00329000
*                             the REQUEST keyword is not valid.       * 00329100
*                             Either the parameter list was corrupted * 00329200
*                             or the program is running on a system   * 00329300
*                             that does not have the necessary        * 00329400
*                             support.                                * 00329500
*                                                                     * 00329600
*                 xxxx0006    ixcnoteRsnPlistBadReqType:  Program     * 00329700
*                             error.  The parameter list content for  * 00329800
*                             the REQTYPE keyword is not valid.       * 00329900
*                             Either the parameter list was corrupted * 00330000
*                             or the program is running on a system   * 00330100
*                             that does not have the necessary        * 00330200
*                             support.                                * 00330300
*                                                                     * 00330400
*                 xxxx0008    ixcnoteRsnPlistBadTagging:  Program     * 00330500
*                             error.  The parameter list content for  * 00330600
*                             the TAGGING keyword is not valid.       * 00330700
*                             Either the parameter list was corrupted * 00330800
*                             or the program is running on a system   * 00330900
*                             that does not have the necessary        * 00331000
*                             support.                                * 00331100
*                                                                     * 00331200
*                 xxxx0010    ixcnoteRsnNotepadBadVal:  Program       * 00331300
*                             error.  The parameter list content for  * 00331400
*                             the NOTEPAD keyword is not valid.  The  * 00331500
*                             indicated note pad name does not        * 00331600
*                             conform to the requirements for a valid * 00331700
*                             name.  Note pad names consist of four 8 * 00331800
*                             byte sections.  Each 8 byte section     * 00331900
*                             must be left justified, padded on the   * 00332000
*                             right with EBCDIC blanks as needed.     * 00332100
*                             Each section can contain any uppercase  * 00332200
*                             alphabetic (A-Z), numeric (0-9),        * 00332300
*                             national (@, #, $), or underscore (_)   * 00332400
*                             character.                              * 00332500
*                                                                     * 00332600
*                 xxxx0011    ixcnoteRsnNotepadNotExist:  The         * 00332700
*                             specified notepad does not exist.  For  * 00332800
*                             REQUEST=NOTEPAD or for                  * 00332900
*                             REQUEST=CONNECTION with REQTYPE=CREATE, * 00333000
*                             the note pad named by the NOTEPAD       * 00333100
*                             keyword does not exist.  For any other  * 00333200
*                             request, the note pad to which the      * 00333300
*                             CONNECTION token applies no longer      * 00333400
*                             exists.  The connection token is no     * 00333500
*                             longer valid for use.  As needed, the   * 00333600
*                             user must create a new instance of the  * 00333700
*                             note pad, establish a new connection,   * 00333800
*                             and reconstruct the notes.              * 00333900
*                                                                     * 00334000
*                 xxxx0012    ixcnoteRsnNotepadFailed:  The note pad  * 00334100
*                             failed and could not be recovered by    * 00334200
*                             XCF.  It no longer exists.  The         * 00334300
*                             connection token is no longer valid for * 00334400
*                             use.  As needed, the user must create a * 00334500
*                             new instance of the note pad, establish * 00334600
*                             a new connection, and reconstruct the   * 00334700
*                             notes.                                  * 00334800
*                                                                     * 00334900
*                             This condition will typically be        * 00335000
*                             detected by an in-flight request.       * 00335100
*                             Subsequent attempts to issue IXCNOTE    * 00335200
*                             requests with the input connection      * 00335300
*                             token might be rejected with a return   * 00335400
*                             and reason code indicating that the     * 00335500
*                             connection no longer exists.  IXCNOTE   * 00335600
*                             requests issued by other connectors     * 00335700
*                             might be rejected with a return and     * 00335800
*                             reason code indicating that the note    * 00335900
*                             pad no longer exists                    * 00336000
*                             (ixcnoteRsnNotepadNotExist) or that the * 00336100
*                             connection no longer exists             * 00336200
*                             (ixcnoteRsnConnectionNotExist).         * 00336300
*                                                                     * 00336400
*                 xxxx0013    ixcnoteRsnNotepadExists:  The specified * 00336500
*                             note pad already exists.                * 00336600
*                                                                     * 00336700
*                             If an answer area was provided, the     * 00336800
*                             note pad data record                    * 00336900
*                             (ixcynote_tNotepadData) stored therein  * 00337000
*                             describes the existing note pad.        * 00337100
*                                                                     * 00337200
*                 xxxx0014    ixcnoteRsnNotepadInUse:  Program error. * 00337300
*                             A request to delete the note pad is     * 00337400
*                             rejected because the specified note pad * 00337500
*                             is still in use.  It either has         * 00337600
*                             connectors, or contains notes, or both. * 00337700
*                             Retry the request after the relevant    * 00337800
*                             connectors or notes have been deleted,  * 00337900
*                             or specify the appropriate CONDITIONS   * 00338000
*                             when issuing the delete request.        * 00338100
*                                                                     * 00338200
*                             If an answer area was provided, the     * 00338300
*                             field aa_Details provides additional    * 00338400
*                             information.  The data is mapped by     * 00338500
*                             ixcynote_tDetailsDeleteNP.              * 00338600
*                                                                     * 00338700
*                 xxxx0015    ixcnoteRsnNotepadMultiWriteNo:  A       * 00338800
*                             request to create a connection with     * 00338900
*                             ACCESS=UPDATE is rejected.  Since the   * 00339000
*                             creator of the note pad specified       * 00339100
*                             MULTIWRITE=NO, at most one connector    * 00339200
*                             with ACCESS=UPDATE can be connected to  * 00339300
*                             the note pad.  Such a connection        * 00339400
*                             already exists.                         * 00339500
*                                                                     * 00339600
*                 xxxx0018    ixcnoteRsnConnectionBadVal:  Program    * 00339700
*                             error.  The value specified for         * 00339800
*                             CONNECTION is not a valid connection    * 00339900
*                             token.                                  * 00340000
*                                                                     * 00340100
*                 xxxx0019    ixcnoteRsnConnectionNotExist:  The      * 00340200
*                             specified CONNECTION does not exist.    * 00340300
*                                                                     * 00340400
*                             In the specific case of                 * 00340500
*                             REQUEST=CONNECTION REQTYPE=CREATE, the  * 00340600
*                             connection was created but then deleted * 00340700
*                             before the service routine could return * 00340800
*                             to the caller.  You might see this      * 00340900
*                             situation, for example, if the entity   * 00341000
*                             indicated by TERMSCOPE terminated while * 00341100
*                             the connection was being created.  You  * 00341200
*                             might also see this result if the work  * 00341300
*                             unit that requested the create fails to * 00341400
*                             thrive.  XCF deletes the connection if  * 00341500
*                             the requesting work unit appears to be  * 00341600
*                             unresponsive.  Increasing the TIMEOUT   * 00341700
*                             can help overcome cases where the       * 00341800
*                             dynamics of the system are such that    * 00341900
*                             the requesting work unit does not get   * 00342000
*                             enough system resources to make timely  * 00342100
*                             progress.                               * 00342200
*                                                                     * 00342300
*                 xxxx001B    ixcnoteRsnConnectionBadTerm:  Program   * 00342400
*                             error.  The TERMSCOPE specification is  * 00342500
*                             not valid.                              * 00342600
*                                                                     * 00342700
*                             A program running in SRB mode must      * 00342800
*                             either specify TERMSCOPE=HOME,          * 00342900
*                             TERMSCOPE=PRIMARY, or TERMSCOPE=TASK    * 00343000
*                             with a nonzero TTOKEN.  When a program  * 00343100
*                             specifies TERMSCOPE=TASK, the task      * 00343200
*                             indicated by the TTOKEN keyword must be * 00343300
*                             a task in either the home address space * 00343400
*                             or the primary address space of the     * 00343500
*                             caller.  When a program running in      * 00343600
*                             problem state with a PKM allowing key 8 * 00343700
*                             to 15 specifies TERMSCOPE=TASK, the     * 00343800
*                             relevant task must be the job step task * 00343900
*                             or one of its descendents and it must   * 00344000
*                             be the current task or one of its       * 00344100
*                             ancestors.                              * 00344200
*                                                                     * 00344300
*                 xxxx001C    ixcnoteRsnConnectionBadPause:  Program  * 00344400
*                             error.                                  * 00344500
*                                                                     * 00344600
*                             For REQTYPE=PAUSE, a work unit is       * 00344700
*                             already paused for the indicated        * 00344800
*                             connection.  At most one work unit can  * 00344900
*                             be paused for a given connection.       * 00345000
*                                                                     * 00345100
*                 xxxx001D    ixcnoteRsnConnectionBadUser:  Program   * 00345200
*                             error.  The specified CONNECTION token  * 00345300
*                             is not valid for use by the caller.     * 00345400
*                                                                     * 00345500
*                             When processing notes (REQUEST=NOTE or  * 00345600
*                             REQUEST=NOTES), the requester must      * 00345700
*                             satisfy at least one of the following   * 00345800
*                             conditions:                             * 00345900
*                                                                     * 00346000
*                                                                     * 00346100
*                             o   Requester is the connector          * 00346200
*                                                                     * 00346300
*                             o   Home is connector address space and * 00346400
*                                 the requester has SAF authorization * 00346500
*                                 appropriate for the REQTYPE         * 00346600
*                                                                     * 00346700
*                             o   Running in supervisor state or with * 00346800
*                                 a PKM allowing key 0 to 7 and       * 00346900
*                                 either:                             * 00347000
*                                                                     * 00347100
*                                                                     * 00347200
*                                 -   Running as an address space     * 00347300
*                                     resource manager, or            * 00347400
*                                                                     * 00347500
*                                 -   The creator of the connection   * 00347600
*                                     specified USAGE=SERVER and      * 00347700
*                                     primary is the connector        * 00347800
*                                     address space, or               * 00347900
*                                                                     * 00348000
*                                 -   The creator of the connection   * 00348100
*                                     specified USAGE=CLIENT          * 00348200
*                                                                     * 00348300
*                                                                     * 00348400
*                                                                     * 00348500
*                                                                     * 00348600
*                                                                     * 00348700
*                             When deleting a connection              * 00348800
*                             (REQUEST=CONNECTION REQTYPE=DELETE),    * 00348900
*                             the requester must satisfy at least one * 00349000
*                             of the following conditions:            * 00349100
*                                                                     * 00349200
*                                                                     * 00349300
*                             o   Requester is the connector          * 00349400
*                                                                     * 00349500
*                             o   Home is connector address space and * 00349600
*                                 the requester has SAF authorization * 00349700
*                                 appropriate for the ACCESS          * 00349800
*                                 specified by the creator of the     * 00349900
*                                 connection                          * 00350000
*                                                                     * 00350100
*                             o   Running in supervisor state or with * 00350200
*                                 a PKM allowing key 0 to 7 and       * 00350300
*                                 either:                             * 00350400
*                                                                     * 00350500
*                                                                     * 00350600
*                                 -   The creator of the connection   * 00350700
*                                     specified USAGE=SERVER and      * 00350800
*                                     primary is the connector        * 00350900
*                                     address space, or               * 00351000
*                                                                     * 00351100
*                                 -   The creator of the connection   * 00351200
*                                     specified USAGE=CLIENT          * 00351300
*                                                                     * 00351400
*                                                                     * 00351500
*                                                                     * 00351600
*                                                                     * 00351700
*                                                                     * 00351800
*                             When pausing or resuming a connection   * 00351900
*                             (REQUEST=CONNECTION with REQTYPE=PAUSE  * 00352000
*                             or REQTYPE=RESUME), the requester must  * 00352100
*                             satisfy at least one of the following   * 00352200
*                             conditions:                             * 00352300
*                                                                     * 00352400
*                                                                     * 00352500
*                             o   Requester is the connector          * 00352600
*                                                                     * 00352700
*                             o   Home is the connector address space * 00352800
*                                                                     * 00352900
*                             o   Primary is the connector address    * 00353000
*                                 space                               * 00353100
*                                                                     * 00353200
*                             o   Running in supervisor state or with * 00353300
*                                                                     * 00353400
*                                                                     * 00353500
*                             a PKM allowing key 0 to 7               * 00353600
*                                                                     * 00353700
*                 xxxx001E    ixcnoteRsnConnectionBadAccess:  Program * 00353800
*                             error.  The specified CONNECTION token  * 00353900
*                             is not valid for use with the specified * 00354000
*                             request.                                * 00354100
*                                                                     * 00354200
*                             If the connection was created with      * 00354300
*                             ACCESS=READ, one cannot use the token   * 00354400
*                             to create, write, replace, or delete    * 00354500
*                             notes.                                  * 00354600
*                                                                     * 00354700
*                             If an answer area was provided, the     * 00354800
*                             field aa_Details provides additional    * 00354900
*                             information.  The data is mapped by     * 00355000
*                             ixcynote_tDetailsAccess.                * 00355100
*                                                                     * 00355200
*                 xxxx001F    ixcnoteRsnConnectionBadAuth:  Program   * 00355300
*                             error.                                  * 00355400
*                                                                     * 00355500
*                             When creating a connection with         * 00355600
*                             USAGE=SERVER or USAGE=CLIENT, the       * 00355700
*                             program was not running in supervisor   * 00355800
*                             state or with a PKM allowing key 0 to   * 00355900
*                             7.                                      * 00356000
*                                                                     * 00356100
*                             For any other request, the specified    * 00356200
*                             connection was created when SAF was not * 00356300
*                             available or when there was no          * 00356400
*                             IXCNOTE.owner.application resource      * 00356500
*                             defined for the note pad in the         * 00356600
*                             FACILITY class.  It can only be used by * 00356700
*                             programs running in supervisor state or * 00356800
*                             with a PKM allowing key 0 to 7.         * 00356900
*                                                                     * 00357000
*                 xxxx0020    ixcnoteRsnDescBadStg:  Program error.   * 00357100
*                             The storage identified by the           * 00357200
*                             DESCRIPTION keyword is not accessible.  * 00357300
*                             It must be both addressable and         * 00357400
*                             accessible using the PSW key of the     * 00357500
*                             caller.                                 * 00357600
*                                                                     * 00357700
*                 xxxx0021    ixcnoteRsnDescBadAlet:  Program error.  * 00357800
*                             The ALET that qualifies the address of  * 00357900
*                             the storage area indicated by the       * 00358000
*                             DESCRIPTION keyword is neither zero,    * 00358100
*                             nor a valid entry on the Dispatchable   * 00358200
*                             Unit Access List (DU-AL) of the caller, * 00358300
*                             nor a valid entry for a common area     * 00358400
*                             data space.                             * 00358500
*                                                                     * 00358600
*                 xxxx0022    ixcnoteRsnDescBadVal:  Program error.   * 00358700
*                             The storage identified by the           * 00358800
*                             DESCRIPTION keyword does not contain a  * 00358900
*                             valid description.  Descriptions can    * 00359000
*                             contain any alphanumeric (A-Z, a-z,     * 00359100
*                             0-9), national (@, #, $), or special    * 00359200
*                             (underscore or blank) character.        * 00359300
*                             Leading blanks and all blank            * 00359400
*                             descriptors are not permitted.          * 00359500
*                                                                     * 00359600
*                 xxxx0023    ixcnoteRsnInfoBadStg:  Program error.   * 00359700
*                             The storage identified by the INFO      * 00359800
*                             keyword is not accessible.  It must be  * 00359900
*                             both addressable and accessible using   * 00360000
*                             the PSW key of the caller.              * 00360100
*                                                                     * 00360200
*                 xxxx0024    ixcnoteRsnInfoBadAlet:  Program error.  * 00360300
*                             The ALET that qualifies the address of  * 00360400
*                             the storage area indicated by the INFO  * 00360500
*                             keyword is neither zero, nor a valid    * 00360600
*                             entry on the Dispatchable Unit Access   * 00360700
*                             List (DU-AL) of the caller, nor a valid * 00360800
*                             entry for a common area data space.     * 00360900
*                                                                     * 00361000
*                 xxxx0025    ixcnoteRsnCriteriaBadStg:  Program      * 00361100
*                             error.  The storage identified by the   * 00361200
*                             CRITERIA keyword is not accessible.  It * 00361300
*                             must be both addressable and accessible * 00361400
*                             using the PSW key of the caller.        * 00361500
*                                                                     * 00361600
*                             In the case of a delete request, zero   * 00361700
*                             or more notes might have been deleted   * 00361800
*                             before the problem was detected.        * 00361900
*                                                                     * 00362000
*                             If an answer area was provided, the     * 00362100
*                             field aa_Details provides additional    * 00362200
*                             information to identify the problem.    * 00362300
*                             The data is mapped by                   * 00362400
*                             ixcynote_tDetailsCriteria.              * 00362500
*                                                                     * 00362600
*                 xxxx0026    ixcnoteRsnCriteriaBadAlet:  Program     * 00362700
*                             error.  The ALET that qualifies the     * 00362800
*                             address of the storage area indicated   * 00362900
*                             by the CRITERIA keyword is neither      * 00363000
*                             zero, nor a valid entry on the          * 00363100
*                             Dispatchable Unit Access List (DU-AL)   * 00363200
*                             of the caller, nor a valid entry for a  * 00363300
*                             common area data space.                 * 00363400
*                                                                     * 00363500
*                 xxxx0027    ixcnoteRsnCriteriaBadVal:  Program      * 00363600
*                             error.  The specified CRITERIA do not   * 00363700
*                             contain valid selection criteria.       * 00363800
*                                                                     * 00363900
*                             In the case of a delete request, zero   * 00364000
*                             or more notes might have been deleted   * 00364100
*                             before the problem was detected.        * 00364200
*                                                                     * 00364300
*                             If an answer area was provided, the     * 00364400
*                             field aa_Details provides additional    * 00364500
*                             information to identify the problem.    * 00364600
*                             The data is mapped by                   * 00364700
*                             ixcynote_tDetailsCriteria.              * 00364800
*                                                                     * 00364900
*                 xxxx0029    ixcnoteRsnBufferBadStgNP:  Program      * 00365000
*                             error.  The storage identified by the   * 00365100
*                             BUFFER keyword is not accessible.  It   * 00365200
*                             must be both addressable and accessible * 00365300
*                             using the PSW key of the caller.        * 00365400
*                                                                     * 00365500
*                             The note pad was not altered.  XCF      * 00365600
*                             might have altered the content of the   * 00365700
*                             storage containing the buffer and the   * 00365800
*                             answer area.                            * 00365900
*                                                                     * 00366000
*                 xxxx002A    ixcnoteRsnBufferBadAlet:  Program       * 00366100
*                             error.  The ALET that qualifies the     * 00366200
*                             address of the storage area indicated   * 00366300
*                             by the BUFFER keyword is neither zero,  * 00366400
*                             nor a valid entry on the Dispatchable   * 00366500
*                             Unit Access List (DU-AL) of the caller, * 00366600
*                             nor a valid entry for a common area     * 00366700
*                             data space.                             * 00366800
*                                                                     * 00366900
*                 xxxx002B    ixcnoteRsnBufLenBadVal:  Program error. * 00367000
*                             The value specified by the BUFLEN       * 00367100
*                             keyword is not valid.  BUFLEN must be a * 00367200
*                             multiple of 1024.  If an answer area    * 00367300
*                             was provided, the field aa_Details      * 00367400
*                             provides additional information.  The   * 00367500
*                             data is mapped by                       * 00367600
*                             ixcynote_tDetailsBufLen.                * 00367700
*                                                                     * 00367800
*                             For REQUEST=NOTE with REQTYPE of READ   * 00367900
*                             or DELETE, BUFLEN must be greater than  * 00368000
*                             or equal to the size of the designated  * 00368100
*                             note.  For REQUEST=NOTE with REQTYPE of * 00368200
*                             CREATE, WRITE, or REPLACE, BUFLEN must  * 00368300
*                             be less than or equal to the size of    * 00368400
*                             the largest note supported by the note  * 00368500
*                             pad.                                    * 00368600
*                                                                     * 00368700
*                             When reading multiple notes with        * 00368800
*                             REQUEST=NOTES REQTYPE=READ, BUFLEN must * 00368900
*                             be greater than or equal to the length  * 00369000
*                             in bytes of the largest note selected.  * 00369100
*                                                                     * 00369200
*                 xxxx002C    ixcnoteRsnBufferBadStg:  Program error. * 00369300
*                             The storage identified by the BUFFER    * 00369400
*                             keyword is not accessible.  It must be  * 00369500
*                             both addressable and accessible using   * 00369600
*                             the PSW key of the caller.              * 00369700
*                                                                     * 00369800
*                             The error occurred while trying to      * 00369900
*                             store note data in the buffer.  The     * 00370000
*                             request might or might not have         * 00370100
*                             completed successfully.  In the         * 00370200
*                             particular case of a delete note        * 00370300
*                             request (IXCNOTE REQUEST=NOTE           * 00370400
*                             REQTYPE=DELETE), the note was           * 00370500
*                             successfully deleted.                   * 00370600
*                                                                     * 00370700
*                 xxxx002E    ixcnoteRsnResumeTokenBadVal:  Program   * 00370800
*                             error.  The value specified by the      * 00370900
*                             RESUMETOKEN keyword is not valid.  The  * 00371000
*                             value must either be zero or a token    * 00371100
*                             that was returned by a previous IXCNOTE * 00371200
*                             request.                                * 00371300
*                                                                     * 00371400
*                 xxxx0030    ixcnoteRsnAnsAreaRequired:  Program     * 00371500
*                             error.  An answer area is required for  * 00371600
*                             the particular IXCNOTE request that was * 00371700
*                             issued.                                 * 00371800
*                                                                     * 00371900
*                 xxxx0031    ixcnoteRsnAnsAreaBadStg:  Program       * 00372000
*                             error.  The storage identified by the   * 00372100
*                             ANSAREA keyword is not accessible.  It  * 00372200
*                             must be both addressable and accessible * 00372300
*                             using the PSW key of the caller.        * 00372400
*                                                                     * 00372500
*                             The error occurred while trying to      * 00372600
*                             store output data after the IXCNOTE     * 00372700
*                             request had been processed.  The        * 00372800
*                             request might or might not have         * 00372900
*                             completed successfully.  In the         * 00373000
*                             specific case of REQUEST=CONNECTION     * 00373100
*                             REQTYPE=CREATE, the connection that was * 00373200
*                             created, if any, has been deleted by    * 00373300
*                             XCF.  For other requests, you might     * 00373400
*                             need to determine whether the request   * 00373500
*                             actually worked.  For example, you      * 00373600
*                             might issue a suitable IXCNOTE request  * 00373700
*                             to determine whether the subject note   * 00373800
*                             pad, connection, or note exists.  As    * 00373900
*                             appropriate, obtain a valid storage     * 00374000
*                             area and retry the request.             * 00374100
*                                                                     * 00374200
*                 xxxx0032    ixcnoteRsnAnsAreaBadAlet:  Program      * 00374300
*                             error.  The ALET that qualifies the     * 00374400
*                             address of the storage area indicated   * 00374500
*                             by the ANSAREA keyword is neither zero, * 00374600
*                             nor a valid entry on the Dispatchable   * 00374700
*                             Unit Access List (DU-AL) of the caller, * 00374800
*                             nor a valid entry for a common area     * 00374900
*                             data space.                             * 00375000
*                                                                     * 00375100
*                 xxxx0033    ixcnoteRsnAnsLenBadVal:  Program error. * 00375200
*                             The value specified by the ANSLEN       * 00375300
*                             keyword is not valid.  The length of    * 00375400
*                             the answer area must be at least as     * 00375500
*                             long as the number of bytes in the      * 00375600
*                             answer area header.                     * 00375700
*                                                                     * 00375800
*                 xxxx0034    ixcnoteRsnAnsLenMore:  The request was  * 00375900
*                             not processed because the ANSAREA is    * 00376000
*                             too small.  The ANSAREA is large enough * 00376100
*                             to hold the header (ixcynote_tAnsArea)  * 00376200
*                             but does not have room for the          * 00376300
*                             requested data.  The                    * 00376400
*                             aa_AnsAreaSizeNeeded returned in the    * 00376500
*                             ANSAREA indicates how much storage is   * 00376600
*                             required in order for the ANSAREA to    * 00376700
*                             hold the requested data.  In the case   * 00376800
*                             of a REQUEST=NOTES REQTYPE=READ         * 00376900
*                             request, aa_AnsAreaSizeNeeded will      * 00377000
*                             indicate the amount of space needed for * 00377100
*                             the required minimum number of notes.   * 00377200
*                             Obtain storage for the answer area that * 00377300
*                             is at least as large as the indicated   * 00377400
*                             size and reissue the request.           * 00377500
*                                                                     * 00377600
*                 xxxx0035    ixcnoteRsnAnsAreaBadStgNP:  Program     * 00377700
*                             error.  The storage identified by the   * 00377800
*                             ANSAREA keyword is not accessible.  It  * 00377900
*                             must be both addressable and accessible * 00378000
*                             using the PSW key of the caller.        * 00378100
*                                                                     * 00378200
*                             The note pad was not altered.  XCF      * 00378300
*                             might have altered the content of the   * 00378400
*                             storage containing the answer area, and * 00378500
*                             as applicable, the buffer area.         * 00378600
*                                                                     * 00378700
*                 xxxx0037    ixcnoteRsn#NotesExceeded:  The note     * 00378800
*                             request cannot be processed because the * 00378900
*                             note pad already contains the maximum   * 00379000
*                             number of notes.  Retry the request     * 00379100
*                             after deleting some notes, or after     * 00379200
*                             issuing an IXCNOTE REQUEST=NOTEPAD      * 00379300
*                             REQTYPE=MODIFY request that             * 00379400
*                             successfully increased the number of    * 00379500
*                             notes that the note pad is allowed to   * 00379600
*                             hold.                                   * 00379700
*                                                                     * 00379800
*                             If an answer area was provided, the     * 00379900
*                             field aa_Details provides additional    * 00380000
*                             information.  The data is mapped by     * 00380100
*                             ixcynote_tDetailsConstrained.           * 00380200
*                                                                     * 00380300
*                 xxxx0038    ixcnoteRsn#NotesBadVal:  Program error. * 00380400
*                             The value specified by the #NOTES       * 00380500
*                             keyword is not valid.  It must be a     * 00380600
*                             number greater than or equal to one.    * 00380700
*                                                                     * 00380800
*                 xxxx0040    ixcnoteRsnNoteNotExist:  The specified  * 00380900
*                             note does not exist.                    * 00381000
*                                                                     * 00381100
*                 xxxx0041    ixcnoteRsnNoteExists:  An attempt to    * 00381200
*                             create a new note (REQUEST=NOTE         * 00381300
*                             REQTYPE=CREATE) is rejected because the * 00381400
*                             named note already exists.              * 00381500
*                                                                     * 00381600
*                             As applicable, the current tag value of * 00381700
*                             the note was stored in the TAG          * 00381800
*                             variable.  As applicable, the current   * 00381900
*                             instance number for the note was stored * 00382000
*                             in the INSTANCE# variable.              * 00382100
*                                                                     * 00382200
*                 xxxx0042    ixcnoteRsnNoteBadInstance#:  The        * 00382300
*                             specified note was not processed due to * 00382400
*                             an instance number mismatch             * 00382500
*                             (INSTANCE#).  The current instance      * 00382600
*                             number of the note was stored in the    * 00382700
*                             INSTANCE# variable.  As applicable, the * 00382800
*                             tag value of the note was stored in the * 00382900
*                             TAG variable.                           * 00383000
*                                                                     * 00383100
*                 xxxx0043    ixcnoteRsnNoteBadTagging:  Program      * 00383200
*                             error.  The TAGGING specification does  * 00383300
*                             not match the TAGGING specified by the  * 00383400
*                             creator of the note pad.  If            * 00383500
*                             TAGGING=XCF was specified by the        * 00383600
*                             creator of the note pad, the connector  * 00383700
*                             must also specify TAGGING=XCF when      * 00383800
*                             processing notes.  Similarly, if        * 00383900
*                             TAGGING=USER was specified by the       * 00384000
*                             creator of the note pad, the connector  * 00384100
*                             must also specify TAGGING=USER.         * 00384200
*                                                                     * 00384300
*                 xxxx0044    ixcnoteRsnNoteLowTag:  Program error.   * 00384400
*                             The specified tag value was less than   * 00384500
*                             the current tag value of the note.  The * 00384600
*                             current tag value of the note was       * 00384700
*                             stored in the TAG variable.  As         * 00384800
*                             applicable, the current instance number * 00384900
*                             of the note was stored in the INSTANCE# * 00385000
*                             variable.                               * 00385100
*                                                                     * 00385200
*                             When the maximum user assigned tag      * 00385300
*                             values are being tracked for the note   * 00385400
*                             pad (the creator of the note pad        * 00385500
*                             specified TAGGING=USER and either       * 00385600
*                             TRACKTAG=CURRENT or TRACKTAG=LIFETIME), * 00385700
*                             the tag value to be assigned to an      * 00385800
*                             existing note must be greater than or   * 00385900
*                             equal to the current tag value of the   * 00386000
*                             note.  The write, replace, or delete    * 00386100
*                             request was rejected because the new    * 00386200
*                             tag value (TAG) specified for the note  * 00386300
*                             was not greater than or equal to the    * 00386400
*                             current tag value of the note.  As      * 00386500
*                             appropriate, reissue the request with a * 00386600
*                             suitable tag value.                     * 00386700
*                                                                     * 00386800
*                 xxxx0045    ixcnoteRsnNoteNoInstance#:  Program     * 00386900
*                             error.  The creator of the note pad     * 00387000
*                             indicated that an instance number       * 00387100
*                             comparison must be performed            * 00387200
*                             (INSTCOMP=REQUIRED) when invoking       * 00387300
*                             IXCNOTE REQUEST=NOTE to replace, write, * 00387400
*                             or delete a note.  The specified note   * 00387500
*                             was not processed because the required  * 00387600
*                             instance number comparison value was    * 00387700
*                             not provided.  Either INSTANCE#=IGNORE  * 00387800
*                             was specified, or the value of the      * 00387900
*                             INSTANCE# variable was zero.  As        * 00388000
*                             applicable, obtain the current instance * 00388100
*                             number of the relevant note and retry   * 00388200
*                             the request, specifying the nonzero     * 00388300
*                             instance number for comparison          * 00388400
*                             (INSTANCE#).                            * 00388500
*                                                                     * 00388600
*                 xxxx00A4    ixcnoteRsnR0Conflict:  Program error.   * 00388700
*                             The request data in the parameter list  * 00388800
*                             is not consistent with the request data * 00388900
*                             in register 0 on entry to the IXCNOTE   * 00389000
*                             service routine.  The parameter list or * 00389100
*                             the register contents were corrupted    * 00389200
*                             before the service routine received     * 00389300
*                             control.                                * 00389400
*                                                                     * 00389500
*                 xxxx0128    ixcnoteRsnTaskTerm:  Program error.     * 00389600
*                             The specified request is not valid when * 00389700
*                             called from a task that is terminating. * 00389800
*                             Furthermore, when creating a connection * 00389900
*                             to a note pad, TERMSCOPE cannot be      * 00390000
*                             assigned to a task that is terminating. * 00390100
*                                                                     * 00390200
*                 xxxx0129    ixcnoteRsnSpaceTerm:  Program error.    * 00390300
*                             The specified request is not valid when * 00390400
*                             called from an address space that is    * 00390500
*                             terminating.  Furthermore, when         * 00390600
*                             creating a connection to a note pad,    * 00390700
*                             TERMSCOPE cannot be assigned to an      * 00390800
*                             address space that is terminating.      * 00390900
*                                                                     * 00391000
*                 xxxx012A    ixcnoteRsnResMgr:  Program error.  The  * 00391100
*                             specified request is not valid when     * 00391200
*                             called by a program running as a        * 00391300
*                             resource manager.                       * 00391400
*                                                                     * 00391500
*                 xxxx0130    ixcnoteRsnBadSEnv:  Program error.      * 00391600
*                             When creating a connection with         * 00391700
*                             USAGE=SERVER, a program running in task * 00391800
*                             mode must not have a task specific      * 00391900
*                             security environment.  That is, TCBSENV * 00392000
*                             must be zero.                           * 00392100
*                                                                     * 00392200
*                 xxxx0801    ixcnoteRsnPlistBadStgNP:  Program       * 00392300
*                             error.  The storage containing the      * 00392400
*                             parameter list is not accessible.  It   * 00392500
*                             must be both addressable and accessible * 00392600
*                             using the PSW key of the caller.        * 00392700
*                                                                     * 00392800
*                             The note pad was not altered.           * 00392900
*                                                                     * 00393000
*                 xxxx0802    ixcnoteRsnPlistBadAletNP:  Program      * 00393100
*                             error.  The parameter list ALET is not  * 00393200
*                             valid.  The ALET that qualifies the     * 00393300
*                             address of the parameter list is        * 00393400
*                             neither zero nor a valid entry on the   * 00393500
*                             caller's Dispatchable Unit Access List  * 00393600
*                             (DU-AL), nor a valid entry for a common * 00393700
*                             area data space.                        * 00393800
*                                                                     * 00393900
*                             The IXCNOTE request was not processed.  * 00394000
*                                                                     * 00394100
*                 xxxx0804    ixcnoteRsnNotInstalledVN:               * 00394200
*                                                                     * 00394300
*                             This reason is returned only if the     * 00394400
*                             program issues an IXCNOTE request while * 00394500
*                             running on a system that does not have  * 00394600
*                             IXCNOTE support installed.  Note that   * 00394700
*                             the down level system can reject an     * 00394800
*                             IXCNOTE request with a variety of       * 00394900
*                             failures.  This particular reason       * 00395000
*                             applies when the down level system      * 00395100
*                             determines that the parameter list      * 00395200
*                             version number is not one that it       * 00395300
*                             supports.                               * 00395400
*                                                                     * 00395500
*                 xxxx0805    ixcnoteRsnTaskTooHigh:  Program error.  * 00395600
*                             IXCNOTE cannot be used by tasks higher  * 00395700
*                             in the task tree than the cross memory  * 00395800
*                             resource owning task (the top, or       * 00395900
*                             first, job step task in the address     * 00396000
*                             space).                                 * 00396100
*                                                                     * 00396200
*                 xxxx0806    ixcnoteRsnNotTaskMode:  Program error.  * 00396300
*                             The specified request is only valid     * 00396400
*                             when called from a work unit that is    * 00396500
*                             running in task mode.                   * 00396600
*                                                                     * 00396700
*                             This reason can also be issued if the   * 00396800
*                             program is running in SRB mode on a     * 00396900
*                             system that does not have IXCNOTE       * 00397000
*                             support installed.                      * 00397100
*                                                                     * 00397200
*                 xxxx0807    ixcnoteRsnNotEnabled:  Program error.   * 00397300
*                             Caller is not running enabled.  Ensure  * 00397400
*                             that the macro is called while the      * 00397500
*                             program is running in the required      * 00397600
*                             environment.                            * 00397700
*                                                                     * 00397800
*                 xxxx0808    ixcnoteRsnMasterAS:                     * 00397900
*                                                                     * 00398000
*                             This reason is issued only if the       * 00398100
*                             program issues an IXCNOTE request from  * 00398200
*                             the MASTER address space while running  * 00398300
*                             on a system that does not have IXCNOTE  * 00398400
*                             support installed.                      * 00398500
*                                                                     * 00398600
*                 xxxx0809    ixcnoteRsnPrimaryNotHome:  Program      * 00398700
*                             error.  The home address space of the   * 00398800
*                             caller is not the same as the primary   * 00398900
*                             address space.                          * 00399000
*                                                                     * 00399100
*                             Problem state programs with a PKM       * 00399200
*                             allowing key 8 to 15 must be running    * 00399300
*                             with home and primary being the same    * 00399400
*                             address space for all REQUEST=NOTEPAD   * 00399500
*                             requests, and for REQUEST=CONNECTION    * 00399600
*                             requests with REQTYPE=CREATE.           * 00399700
*                                                                     * 00399800
*                             When creating a connection with         * 00399900
*                             USAGE=SERVER or USAGE=CLIENT, the       * 00400000
*                             program must be running in supervisor   * 00400100
*                             state for with a PKM allowing key 8 to  * 00400200
*                             15.                                     * 00400300
*                                                                     * 00400400
*                 xxxx0812    ixcnoteRsnBadSuspendEnv:  Program       * 00400500
*                             error.  The IXCNOTE request was issued  * 00400600
*                             from a SUSPEND exit routine or from an  * 00400700
*                             SRB routine that the system abended     * 00400800
*                             with a 47B system completion code.  The * 00400900
*                             caller cannot be suspended while        * 00401000
*                             running in this environment.  The       * 00401100
*                             request cannot be processed because XCF * 00401200
*                             needs to suspend the caller.            * 00401300
*                                                                     * 00401400
*                 xxxx084C    ixcnoteRsnNoSafAuth:  The caller does   * 00401500
*                             not have the SAF authorization needed   * 00401600
*                             to perform the request.                 * 00401700
*                                                                     * 00401800
*                             If an answer area was provided, the     * 00401900
*                             field aa_Details provides additional    * 00402000
*                             information.  The data is mapped by     * 00402100
*                             ixcynote_tDetailsNoSafAuth.             * 00402200
*                                                                     * 00402300
*                 xxxx0857    ixcnoteRsnHasFRR:  Program error.       * 00402400
*                             Caller is running with an FRR           * 00402500
*                             established.  Ensure that the macro is  * 00402600
*                             called while the program is running in  * 00402700
*                             the required environment.  This reason  * 00402800
*                             applies only to task mode callers.      * 00402900
*                                                                     * 00403000
*                 xxxx0876    ixcnoteRsnLocked:  Program error.       * 00403100
*                             Caller holds locks.  Ensure that the    * 00403200
*                             macro is called while the program is    * 00403300
*                             running in the required environment.    * 00403400
*                                                                     * 00403500
*                             Note that for some cases, an 073 abend  * 00403600
*                             can be issued instead.                  * 00403700
*                                                                     * 00403800
*                 xxxx08B2    ixcnoteRsnBadServiceNum:  Program       * 00403900
*                             error.  The parameter list service code * 00404000
*                             value is not valid.  Either the         * 00404100
*                             parameter list was corrupted or the     * 00404200
*                             program is running on a system that     * 00404300
*                             does not have IXCNOTE support           * 00404400
*                             installed.                              * 00404500
*                                                                     * 00404600
*                                                                     * 00404700
*                                                                     * 00404800
*                                                                     * 00404900
*       C         IxcRetCodeEnvError:  Environmental Error.           * 00405000
*                                                                     * 00405100
*                                                                     * 00405200
*                 HEX REASON                                          * 00405300
*                 CODE        MEANING                                 * 00405400
*                                                                     * 00405500
*                 xxxx0C01    ixcnoteRsnQuiesced:  The note pad is    * 00405600
*                             quiesced.  Requests to process notes in * 00405700
*                             the note pad (REQUEST=NOTE or           * 00405800
*                             REQUEST=NOTES) are rejected when a note * 00405900
*                             pad is quiesced.  The connector can     * 00406000
*                             either invoke IXCNOTE                   * 00406100
*                             REQUEST=CONNECTION REQTYPE=PAUSE to     * 00406200
*                             pause until the note pad is no longer   * 00406300
*                             quiesced, or it can simply retry the    * 00406400
*                             request after allowing time for the     * 00406500
*                             condition to clear.                     * 00406600
*                                                                     * 00406700
*                             A note pad could be quiesced for a      * 00406800
*                             variety of reasons.  For example, a     * 00406900
*                             note pad will be quiesced if the CF     * 00407000
*                             structure containing the note pad is    * 00407100
*                             being rebuilt.  It will also be         * 00407200
*                             quiesced when a system loses            * 00407300
*                             connectivity to the coupling facility   * 00407400
*                             that contains the note pad.             * 00407500
*                                                                     * 00407600
*                             If an answer area was provided, the     * 00407700
*                             field aa_Details provides additional    * 00407800
*                             information.  The data is mapped by     * 00407900
*                             ixcynote_tDetailsQuiesced.              * 00408000
*                                                                     * 00408100
*                 xxxx0C02    ixcnoteRsnConstrained:  XCF is unable   * 00408200
*                             to honor the request due to constraints * 00408300
*                             on the available number of notes.       * 00408400
*                                                                     * 00408500
*                             When processing a note, XCF is unable   * 00408600
*                             to satisfy the request because the CF   * 00408700
*                             structure is full.  XCF is unable to    * 00408800
*                             provide the number of notes requested   * 00408900
*                             by the creator of the note pad.  Retry  * 00409000
*                             the request after allowing time for the * 00409100
*                             condition to clear.                     * 00409200
*                                                                     * 00409300
*                             If an answer area was provided, the     * 00409400
*                             field aa_Details provides additional    * 00409500
*                             information.  The data is mapped by     * 00409600
*                             ixcynote_tDetailsConstrained.           * 00409700
*                                                                     * 00409800
*                 xxxx0C03    ixcnoteRsnModifyInProgress:  A          * 00409900
*                             REQTYPE=MODIFY to change the #NOTES     * 00410000
*                             value for a note pad is rejected        * 00410100
*                             because a MODIFY request to change the  * 00410200
*                             #NOTES attribute is still in progress.  * 00410300
*                                                                     * 00410400
*                             A request is either currently in        * 00410500
*                             progress updating the note pad #NOTES   * 00410600
*                             attribute and CF structure control      * 00410700
*                             information or a previous MODIFY        * 00410800
*                             request is pending completion due to an * 00410900
*                             inability to access the note pad        * 00411000
*                             catalog structure or note pad structure * 00411100
*                             or both.                                * 00411200
*                                                                     * 00411300
*                                                                     * 00411400
*                             o   When a connection to the note pad   * 00411500
*                                 exists, consider using IXCNOTE      * 00411600
*                                 REQUEST=CONNECTION REQTYPE=PAUSE to * 00411700
*                                 be resumed when XCF completes the   * 00411800
*                                 MODIFY request.                     * 00411900
*                                                                     * 00412000
*                             o   IXCNOTE REQUEST=NOTEPAD             * 00412100
*                                 REQTYPE=QUERY can also be used to   * 00412200
*                                 determine whether a MODIFY request  * 00412300
*                                 is pending against the note pad.    * 00412400
*                                 npd_Modifying#Notes is set ON if    * 00412500
*                                 the note pad #NOTES is in the midst * 00412600
*                                 of being modified.  When            * 00412700
*                                 npd_Modifying#Notes is set OFF,     * 00412800
*                                 npd_Required#Notes reflects the     * 00412900
*                                 number of notes that the note pad   * 00413000
*                                 is allowed to hold.                 * 00413100
*                                 npd_Required#Notes will not reflect * 00413200
*                                 the requested change to the #NOTES  * 00413300
*                                 while the modify request is in      * 00413400
*                                 progress.                           * 00413500
*                                                                     * 00413600
*                                                                     * 00413700
*                                                                     * 00413800
*                 xxxx0C0A    ixcnoteRsnNo#NotesStrResources:  The    * 00413900
*                             requested #NOTES can not be committed   * 00414000
*                             to the note pad because the current     * 00414100
*                             number of data entries reserved for XCF * 00414200
*                             and for note pads in the host note pad  * 00414300
*                             structure plus the requested #Notes     * 00414400
*                             would exceed the maximum entries        * 00414500
*                             supported by the structure.             * 00414600
*                                                                     * 00414700
*                             Retry the request after allowing time   * 00414800
*                             for the condition to clear.  In some    * 00414900
*                             cases, manual intervention might be     * 00415000
*                             required to resolve the problem. For    * 00415100
*                             example, the installation might need to * 00415200
*                             update the CFRM policy to change the    * 00415300
*                             size of the host note pad structure or  * 00415400
*                             use the IXLALTER service to expand the  * 00415500
*                             size of the structure.  In other cases, * 00415600
*                             the typical dynamics of the system      * 00415700
*                             could cause existing note pads to be    * 00415800
*                             deleted or note pad notes to be deleted * 00415900
*                             which in turn would allow an increase   * 00416000
*                             in #NOTES for the note pad.             * 00416100
*                                                                     * 00416200
*                             If an answer area was provided, the     * 00416300
*                             field aa_Details provides additional    * 00416400
*                             information.  The data is mapped by     * 00416500
*                             ixcynote_tDetailsModify#Notes.          * 00416600
*                                                                     * 00416700
*                 xxxx0C0B    ixcnoteRsnNotSupportModify:  A system   * 00416800
*                             that has connectors to the note pad     * 00416900
*                             does not support IXCNOTE                * 00417000
*                             REQUEST=NOTEPAD, REQTYPE=MODIFY.        * 00417100
*                                                                     * 00417200
*                             If connections exist to a note pad when * 00417300
*                             using REQUEST=NOTEPAD, REQTYPE=MODIFY,  * 00417400
*                             all connections to the note pad must be * 00417500
*                             from systems that support               * 00417600
*                             REQUEST=NOTEPAD, REQTYPE=MODIFY. To     * 00417700
*                             determine whether the support for       * 00417800
*                             REQUEST=NOTEPAD, REQTYPE=MODIFY is      * 00417900
*                             available on the system from which you  * 00418000
*                             are connected from, issue IXCQUERY      * 00418100
*                             REQINFO=FEATURES.                       * 00418200
*                             QuReqRfIxcNoteResiliency indicates      * 00418300
*                             whether the support is available.       * 00418400
*                                                                     * 00418500
*                 xxxx0C0C    ixcnoteRsn#NotesDecreaseNotValid:  The  * 00418600
*                             requested #NOTES can not be less than   * 00418700
*                             the current number of notes in use in   * 00418800
*                             the note pad.                           * 00418900
*                                                                     * 00419000
*                             Delete enough notes from the note pad   * 00419100
*                             such that the number of notes in use by * 00419200
*                             the note pad is less than the number of * 00419300
*                             notes being requested.                  * 00419400
*                                                                     * 00419500
*                             If an answer area was provided, the     * 00419600
*                             field aa_Details provides additional    * 00419700
*                             information.  The data is mapped by     * 00419800
*                             ixcynote_tDetailsModify#Notes.          * 00419900
*                                                                     * 00420000
*                 xxxx0C0D    ixcnoteRsnNotepadNotUsable:  The note   * 00420100
*                             pad is no longer usable by the local    * 00420200
*                             system receiving this reason code due   * 00420300
*                             to an enabled note pad feature(s) that  * 00420400
*                             is not compatible with the level of     * 00420500
*                             note pad support on the local system.   * 00420600
*                             Restoring access to the note pad from   * 00420700
*                             the local system will require a re-IPL  * 00420800
*                             of the local system or deleting and     * 00420900
*                             re-creating the note pad.               * 00421000
*                                                                     * 00421100
*                 xxxx0C40    ixcnoteRsnNoSecProfile:  No security    * 00421200
*                             decision could be made for an           * 00421300
*                             unauthorized caller since there is      * 00421400
*                             either no security product installed on * 00421500
*                             the system, or there is no              * 00421600
*                             IXCNOTE.owner.application resource      * 00421700
*                             defined for the note pad in the         * 00421800
*                             FACILITY class.  A request to create,   * 00421900
*                             delete, query, or connect to a note pad * 00422000
*                             is rejected since the program is        * 00422100
*                             running in problem state with a PKM     * 00422200
*                             allowing key 8 to 15.                   * 00422300
*                                                                     * 00422400
*                             Note that this problem can occur if the * 00422500
*                             installation defines the necessary      * 00422600
*                             profile but then fails to refresh the   * 00422700
*                             security profile.  For example, if RACF * 00422800
*                             is being used as the security product,  * 00422900
*                             the installation might need to issue    * 00423000
*                             RACLIST(REFRESH) to get the system to   * 00423100
*                             recognize the update to the resource    * 00423200
*                             profile.                                * 00423300
*                                                                     * 00423400
*                 xxxx0CA3    ixcnoteRsnMaxNotepads:  Unable to       * 00423500
*                             create a new note pad. Maximum number   * 00423600
*                             of note pads already defined.           * 00423700
*                                                                     * 00423800
*                             The maximum number of note pads is      * 00423900
*                             determined by the size of the structure * 00424000
*                             that XCF uses to manage note pads       * 00424100
*                             (SYSXCF_NPCATALOG).                     * 00424200
*                                                                     * 00424300
*                 xxxx0CA4    ixcnoteRsnNoSysResources:  Unable to    * 00424400
*                             obtain the system resources needed to   * 00424500
*                             process the request.  Retry the request * 00424600
*                             after allowing time for the condition   * 00424700
*                             to clear.                               * 00424800
*                                                                     * 00424900
*                             If an answer area was provided, the     * 00425000
*                             field aa_Details provides additional    * 00425100
*                             information.  The data is mapped by     * 00425200
*                             ixcynote_tDetailsNoResources.           * 00425300
*                                                                     * 00425400
*                 xxxx0CA5    ixcnoteRsnNoStrResources:  Unable to    * 00425500
*                             create a new note pad because there was * 00425600
*                             no coupling facility structure suitable * 00425700
*                             for it.  Retry the request after        * 00425800
*                             allowing time for the condition to      * 00425900
*                             clear.  In some cases, manual           * 00426000
*                             intervention might be required to       * 00426100
*                             resolve the problem.  For example, the  * 00426200
*                             installation might need to update the   * 00426300
*                             CFRM policy to define additional        * 00426400
*                             structures or change the sizes of       * 00426500
*                             existing structures, or it might be     * 00426600
*                             necessary to reestablish connectivity   * 00426700
*                             to a coupling facility.  In other       * 00426800
*                             cases, the typical dynamics of the      * 00426900
*                             system could cause existing note pads   * 00427000
*                             to be deleted, which in turn would      * 00427100
*                             allow a new note pad to be created.     * 00427200
*                                                                     * 00427300
*                             If an answer area was provided, the     * 00427400
*                             field aa_Details provides additional    * 00427500
*                             information.  The data is mapped by     * 00427600
*                             ixcynote_tDetailsNoStructures.          * 00427700
*                                                                     * 00427800
*                 xxxx0CA6    ixcnoteRsnMaxConnections:  Unable to    * 00427900
*                             create a new connection to the          * 00428000
*                             requested note pad.  The maximum number * 00428100
*                             of connections created for the home     * 00428200
*                             address space have already been         * 00428300
*                             defined.                                * 00428400
*                                                                     * 00428500
*                 xxxx0CB0    ixcnoteRsnTimeout:  The request timed   * 00428600
*                             out.  No recovery action is required.   * 00428700
*                             The request can be retried if so        * 00428800
*                             desired.                                * 00428900
*                                                                     * 00429000
*                             Note that XCF will return "status       * 00429100
*                             unknown" (ixcnoteRsnStatusUnknown) if   * 00429200
*                             you might need to perform a recovery    * 00429300
*                             action before the request can be        * 00429400
*                             retried.                                * 00429500
*                                                                     * 00429600
*                 xxxx0CBD    ixcnoteRsnStatusUnknown:  The request   * 00429700
*                             failed in a way that XCF cannot         * 00429800
*                             determine whether it actually worked or * 00429900
*                             not.  This result can occur, for        * 00430000
*                             example, when the local system loses    * 00430100
*                             connectivity to the coupling facility   * 00430200
*                             that contains the note pad.  It can     * 00430300
*                             also occur if the request times out     * 00430400
*                             (see TIMEOUT).                          * 00430500
*                                                                     * 00430600
*                             When processing a note, the note might  * 00430700
*                             or might not have been successfully     * 00430800
*                             created, written, replaced, or deleted  * 00430900
*                             from the note pad.  The requester       * 00431000
*                             should take an appropriate recovery     * 00431100
*                             action.  For example, you might issue a * 00431200
*                             read request to determine whether the   * 00431300
*                             note exists in the note pad.  As        * 00431400
*                             appropriate, you might then create,     * 00431500
*                             replace, or delete the note to achieve  * 00431600
*                             the desired result.  In some cases you  * 00431700
*                             might not be able to issue such         * 00431800
*                             requests until the note pad is once     * 00431900
*                             again accessible (see IXCNOTE           * 00432000
*                             REQUEST=CONNECTION REQTYPE=PAUSE).      * 00432100
*                                                                     * 00432200
*                             When deleting a note pad, the note pad  * 00432300
*                             might or might not have been marked for * 00432400
*                             deletion.  The requester should take an * 00432500
*                             appropriate recovery action.  For       * 00432600
*                             example, you might reissue the request  * 00432700
*                             to retry deleting the note pad.  You    * 00432800
*                             might need to be sensitive to the       * 00432900
*                             particular instance of the note pad     * 00433000
*                             (see ETODCREATED).                      * 00433100
*                                                                     * 00433200
*                             When modifying the #NOTES attribute for * 00433300
*                             a note pad, processing to update the    * 00433400
*                             #NOTES attribute might or might not     * 00433500
*                             have been initiated and / or completed. * 00433600
*                             The requester should take an            * 00433700
*                             appropriate recovery action.  For       * 00433800
*                             example, prior to reissuing the         * 00433900
*                             request, the requestor might consider   * 00434000
*                             issuing IXCNOTE REQUEST=NOTEPAD         * 00434100
*                             REQTYPE=QUERY to determine whether a    * 00434200
*                             MODIFY request is pending against the   * 00434300
*                             note pad.                               * 00434400
*                                                                     * 00434500
*                 xxxx0CFE    ixcnoteRsnNotConfigured:  The system is * 00434600
*                             not currently configured to support     * 00434700
*                             note pads.  For example, the current    * 00434800
*                             active Coupling Facility Resource       * 00434900
*                             Manager (CFRM) policy does not have     * 00435000
*                             definitions for the necessary           * 00435100
*                             structures.  The problem could be       * 00435200
*                             resolved if the installation performs   * 00435300
*                             the necessary actions.  Retry the       * 00435400
*                             request after allowing time for the     * 00435500
*                             situation to be resolved.               * 00435600
*                                                                     * 00435700
*                             If an answer area was provided, the     * 00435800
*                             field aa_Details provides additional    * 00435900
*                             information.  The data is mapped by     * 00436000
*                             ixcynote_tDetailsNoResources.           * 00436100
*                                                                     * 00436200
*                 xxxx0CFF    ixcnoteRsnNoService:  IXCNOTE services  * 00436300
*                             are not available on this system.  The  * 00436400
*                             situation will persist for the life of  * 00436500
*                             the IPL.  Retry is futile.              * 00436600
*                                                                     * 00436700
*                             For example, the hardware needed to     * 00436800
*                             process coupling facility requests is   * 00436900
*                             not present.                            * 00437000
*                                                                     * 00437100
*                                                                     * 00437200
*                                                                     * 00437300
*                                                                     * 00437400
*       10        IxcRetCodeCompError:  XCF failure.  Reason codes    * 00437500
*                 are provided for this return code, however they are * 00437600
*                 not documented.  In general, XCF will have produced * 00437700
*                 diagnostic reports to document the failure (such as * 00437800
*                 a LOGREC entry or a dump).  Any such documentation  * 00437900
*                 should be forwarded to IBM for analysis.            * 00438000
*                                                                     * 00438100
*                 The reason code should be included in any           * 00438200
*                 diagnostic reports that the IXCNOTE user might      * 00438300
*                 choose to produce to document the impact from the   * 00438400
*                 exploiter perspective.                              * 00438500
*                                                                     * 00438600
*                                                                     * 00438700
*                                                                     * 00438800
*                                                                     * 00438900
*01* REASON CODES:                                                    * 00439000
*                                                                     * 00439100
*       Reason codes, as appropriate, are defined under their         * 00439200
*       corresponding return code.  Return code and reason code       * 00439300
*       constants are defined in the IXCYCON macro.                   * 00439400
*                                                                     * 00439500
*01* MODULE TYPE:  ASSEM MACRO                                        * 00439600
*                                                                     * 00439700
*02*   PROCESSOR:  ASSEM                                              * 00439800
*                                                                     * 00439900
*01* COMPONENT:  SCXCF                                                * 00440000
*                                                                     * 00440100
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00440200
*                                                                     * 00440300
*01* ABEND CODES:                                                     * 00440400
*                                                                     * 00440500
*                                                                     * 00440600
*       073       Environment not valid, the caller held a lock.      * 00440700
*                                                                     * 00440800
*                                                                     * 00440900
*                                                                     * 00441000
*01* MACRO USAGE NOTES:                                               * 00441100
*                                                                     * 00441200
*                                                                     * 00441300
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00441400
*        global macro variable.  Any value other than 'NO' will       * 00441500
*        result in the macro expansion being printed.  The default is * 00441600
*        'YES'.  The following examples illustrate how the ZPRINT     * 00441700
*        variable should be set.                                      * 00441800
*                                                                     * 00441900
*                    GBLC &ZPRINT                                     * 00442000
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00442100
*                                                                     * 00442200
*                                                                     * 00442300
*    2.  All keys currently contained in the IXCNOTE macro correspond * 00442400
*        to  version 0.  If you specify PLISTVER, use a value of 0 or * 00442500
*        MAX.                                                         * 00442600
*                                                                     * 00442700
*                                                                     * 00442800
*    3.  Macro  IXCYNOTE  has  declarations for the various constants * 00442900
*        and mappings mentioned in the prolog of the IXCNOTE macro.   * 00443000
*                                                                     * 00443100
*    4.  For  some invocations of IXCNOTE, the variables specified by * 00443200
*        the following keywords will be treated as output variables:  * 00443300
*                                                                     * 00443400
*         CONNECTION                                                  * 00443500
*         INSTANCE#                                                   * 00443600
*         RESUMETOKEN                                                 * 00443700
*         TAG                                                         * 00443800
*                                                                     * 00443900
*        If  the  service routine successfully processes the request, * 00444000
*        the input parameter list is updated with the relevant output * 00444100
*        data.    Upon  return  from the service routine, the IXCNOTE * 00444200
*        expansion  then copies the data from the parameter list into * 00444300
*        the  specified  output variable.   Note that the variable is * 00444400
*        updated   unconditionally  without  regard  to  whether  the * 00444500
*        service  routine  successfully  processed  the request.   In * 00444600
*        cases   where  the  service  routine  does  not  update  the * 00444700
*        parameter  list  storage  with the expected output, the data * 00444800
*        copied into the output variable will be the original content * 00444900
*        of  the parameter list.  Thus there could be cases where the * 00445000
*        output  variable  will not contain the expected output value * 00445100
*        but  will  instead  be  cleared  to  zero (for a pure output * 00445200
*        variable)  or  "replaced"  with its original content (for an * 00445300
*        input/output   variable).      For   example,   an   IXCNOTE * 00445400
*        REQUEST=NOTE  REQTYPE=READ  TAGGING=USER  TAG=MyTag  request * 00445500
*        would  set  the variable MyTag to zero if the read fails but * 00445600
*        would  set  it  to  the current tag value of the note if the * 00445700
*        read request were successful.                                * 00445800
*                                                                     * 00445900
*        Thus,  if  one needs to preserve the original content of the * 00446000
*        output  variable in cases where the service routine does not * 00446100
*        actually  return  the  expected data, one must take pains to * 00446200
*        preserve  the  relevant data.  Always inspect the return and * 00446300
*        reason  code  to  determine whether the output variable does * 00446400
*        indeed contain the data that is valid for its intended use.  * 00446500
*                                                                     * 00446600
*                                                                     * 00446700
*                                                                     * 00446800
*01* CHANGE ACTIVITY:                                                 * 00446900
*                                                                     * 00447000
*   Flag LineItem  FMID    Date   ID    Comment                       * 00447100
*                                                                     * 00447200
*    $L0=SAPENQ   HBB7780 101210 PD00BJ:  XCF Note Pad Support        * 00447300
*    $L1=OA60571  HBB77B0 200928 PD00C9:  XCF Note Pad Resiliency     * 00447400
****** END OF SPECIFICATIONS *****************************************/ 00447500
*/********************************************************************* 00447600
         MACRO                                                          00447700
&XLABEL  IXCNOTE &REQUEST=,&NOTEPAD=,&REQTYPE=,&DESCRIPTION=,&INFO=,   *00447800
               &#NOTES=,&MULTIWRITE=,&DUPLEX=,&INSTCOMP=,&TAGGING=,    *00447900
               &TRACKTAG=,&LOSSCONNDELETE=,&ETODCREATED=,&CONDITIONS=, *00448000
               &MUSTBE=,&TIMEOUT=,&CONNECTION=,&ACCESS=,&TERMSCOPE=,   *00448100
               &TTOKEN=,&USAGE=,&NAME=,&TAG=,&INSTANCE#=,&KEEPNOTE=,   *00448200
               &BUFFER=,&BUFLEN=,&RESUMETOKEN=,&MAXTAG=,&CHOOSE=,      *00448300
               &CRITERIA=,&ANSAREA=,&ANSLEN=,&RETCODE=,&RSNCODE=,      *00448400
               &PLISTVER=,&MF=                                          00448500
.*                                                                      00448600
*                    MACDATE -08/23/21-<0>                              00448700
.*                                                                      00448800
.*******************************************************************    00448900
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00449000
.*******************************************************************    00449100
                    GBLC  &ZPRINT     YES=PRINT NO=NO PRINT             00449200
                    GBLC  &ZTEST      YES=TEST NO=NO TEST               00449300
                    GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX       00449400
.*                                                                      00449500
                    GBLC  &ZIXCNOTE   YES=MACRO USED AT LEAST ONCE      00449600
.*******************************************************************    00449700
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00449800
.*******************************************************************    00449900
                    LCLC  &ZMS        ERROR MESSAGE WORK AREA           00450000
                    LCLC  &ZCNDX      SYSNDX CHARACTERS                 00450100
                    LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED        00450200
                    LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR       00450300
                    LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE       00450400
                    LCLA  &ZAWRK      USED AS A WORK AREA               00450500
                    LCLA  &ZASIZ      USED FOR SIZE OF VALUE            00450600
                    LCLA  &ZN         NUMERIC WORK VARIABLE             00450700
                    LCLC  &ZC         CHARACTER WORK VARIABLE           00450800
                    LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE       00450900
                    LCLA  &ZTLA       VALUE TOO LONG VARIABLE           00451000
                    LCLC  &ZMAC_G     "G" or null                       00451100
&ZMAC_G             SETC  ''                                            00451200
                    LCLC  &ZMAC_LR                                      00451300
&ZMAC_LR            SETC  'LR'                                          00451400
                    LCLC  &ZMAC_L                                       00451500
&ZMAC_L             SETC  'L'                                           00451600
                    LCLC  &ZMAC_ST                                      00451700
&ZMAC_ST            SETC  'ST'                                          00451800
                    LCLC  &ZMAC_LLGT                                    00451900
&ZMAC_LLGT          SETC  'L'                                           00452000
                    LCLC  &ZMAC_LGR                                     00452100
&ZMAC_LGR           SETC  'LR'                                          00452200
                    LCLC  &ZMAC_LG                                      00452300
&ZMAC_LG            SETC  'L'                                           00452400
                    LCLC  &ZMAC_STG                                     00452500
&ZMAC_STG           SETC  'ST'                                          00452600
                    LCLA  &ZMACRET    MACRO RETURN CODE                 00452700
&ZMACRET            SETA  0           ASSUME NO ERRORS                  00452800
.*                                                                      00452900
                    LCLC  &ZCSYSLIST(255)       NONXKEY, POS ARRAY      00453000
                    LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()        00453100
                    LCLA  &ZPLLEN     PARAMETER LIST LENGTH             00453200
                    LCLC  &ZENDBASEPL           End of base PL          00453300
                    LCLA  &ZPLWORKA   PARAMETER LIST LENGTH             00453400
.*******************************************************************    00453500
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00453600
.*******************************************************************    00453700
                    LCLA  &ZI         INDEX FOR ARRAY                   00453800
                    LCLA  &ZJ         INDEX FOR PARMS                   00453900
                    LCLA  &ZK         INDEX FOR PARSE                   00454000
                    LCLA  &ZLO        LOW RANGE VALUE                   00454100
                    LCLA  &ZHI        HIGH RANGE VALUE                  00454200
                    LCLC  &ZW         WORK AREA FOR PARM                00454300
.********************************************************************   00454400
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00454500
.********************************************************************   00454600
                    GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL           00454700
                    GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE    00454800
                    GBLA  &SYSALVL    SYSSTATE ARCHLVL                  00454900
                    GBLC  &SYSAM64    SYSSTATE AMODE64                  00455000
.*                                                                      00455100
                    AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED    00455200
                    AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED     00455300
                    SPLEVEL  TEST                                       00455400
.ZSYS2              ANOP  ,                                             00455500
                    AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1         00455600
                    AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1         00455700
                    SYSSTATE TEST                                       00455800
                    AGO   .ZSYS4                                        00455900
.ZSYS3              ANOP  ,                                             00456000
&SYSASCE            SETC  'P'         ASSUME SYSSTATE PRIMARY           00456100
.ZSYS4              ANOP  ,                                             00456200
                    AIF   ('&SYSAM64' NE 'YES').ZSYSN64                 00456300
&ZMAC_LLGT          SETC 'LLGT'                                         00456400
&ZMAC_LGR           SETC 'LGR'                                          00456500
&ZMAC_LG            SETC 'LG'                                           00456600
&ZMAC_STG           SETC 'STG'                                          00456700
.ZSYSN64            ANOP  ,                                             00456800
                    AIF   (&SYSALVL LE 1).ZSYS4A                        00456900
&ZMAC_G             SETC 'G'                                            00457000
&ZMAC_LR            SETC 'LGR'                                          00457100
&ZMAC_L             SETC 'LG'                                           00457200
&ZMAC_ST            SETC 'STG'                                          00457300
.ZSYS4A             ANOP  ,                                             00457400
.*******************************************************************    00457500
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00457600
.*******************************************************************    00457700
                    LCLC  &XREQUEST   ++ VALUE                          00457800
                    LCLC  &XNOTEPAD   ++ NAME                           00457900
                    LCLC  &XREQTYPE   ++ VALUE                          00458000
                    LCLC  &XDESCRIPTION         ++ NAME                 00458100
                    LCLC  &XINFO      ++ NAME                           00458200
                    LCLC  &X#NOTES    ++ NAME                           00458300
                    LCLC  &XMULTIWRITE          ++ VALUE                00458400
                    LCLC  &XDUPLEX    ++ VALUE                          00458500
                    LCLC  &XINSTCOMP  ++ VALUE                          00458600
                    LCLC  &XTAGGING   ++ VALUE                          00458700
                    LCLC  &XTRACKTAG  ++ VALUE                          00458800
                    LCLC  &XLOSSCONNDELETE      ++ VALUE                00458900
                    LCLC  &XETODCREATED         ++ NAME                 00459000
                    LCLC  &XCONDITIONS          ++ VALUE                00459100
                    LCLC  &XMUSTBE(257)         ++ VALUE                00459200
                    LCLC  &XTIMEOUT   ++ NAME                           00459300
                    LCLC  &XCONNECTION          ++ NAME                 00459400
                    LCLC  &XACCESS    ++ VALUE                          00459500
                    LCLC  &XTERMSCOPE           ++ VALUE                00459600
                    LCLC  &XTTOKEN    ++ NAME                           00459700
                    LCLC  &XUSAGE     ++ VALUE                          00459800
                    LCLC  &XNAME      ++ NAME                           00459900
                    LCLC  &XTAG       ++ NAME                           00460000
                    LCLC  &XINSTANCE#           ++ NAME                 00460100
                    LCLC  &XKEEPNOTE  ++ VALUE                          00460200
                    LCLC  &XBUFFORDESC          ++ NAME                 00460300
                    LCLC  &XNOBUFFER  ++ NAME                           00460400
                    LCLC  &XBUFFER    ++ NAME                           00460500
                    LCLC  &XBUFLEN    ++ NAME                           00460600
                    LCLC  &XRESUMETOKEN         ++ NAME                 00460700
                    LCLC  &XMAXTAG    ++ NAME                           00460800
                    LCLC  &XCHOOSE    ++ VALUE                          00460900
                    LCLC  &XCRITERIA  ++ NAME                           00461000
                    LCLC  &XANSORNO   ++ NAME                           00461100
                    LCLC  &XNOANSAREA           ++ NAME                 00461200
                    LCLC  &XANSAREA   ++ NAME                           00461300
                    LCLC  &XANSLEN    ++ NAME                           00461400
                    LCLC  &XRETCODE   ++ NAME                           00461500
                    LCLC  &XRSNCODE   ++ NAME                           00461600
                    LCLA  &XPLISTVER  ++ VALUE                          00461700
                    LCLC  &XMF        ++ VALUE                          00461800
                    LCLC  &XMFCTRL    ++ NAME                           00461900
                    LCLC  &XMFATTR    ++ VALUE                          00462000
                    LCLC  &XMFSCK     ++ VALUE                          00462100
.*******************************************************************    00462200
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00462300
.*******************************************************************    00462400
                    LCLC  &ZXREQUEST  ++ INPUT VALUE                    00462500
                    LCLC  &ZXNOTEPAD  ++ INPUT NAME                     00462600
                    LCLC  &ZXREQTYPE  ++ INPUT VALUE                    00462700
                    LCLC  &ZXDESCRIPTION        ++ INPUT NAME           00462800
                    LCLC  &ZXINFO     ++ INPUT NAME                     00462900
                    LCLC  &ZX#NOTES   ++ INPUT NAME                     00463000
                    LCLC  &ZXMULTIWRITE         ++ INPUT VALUE          00463100
                    LCLC  &ZXDUPLEX   ++ INPUT VALUE                    00463200
                    LCLC  &ZXINSTCOMP           ++ INPUT VALUE          00463300
                    LCLC  &ZXTAGGING  ++ INPUT VALUE                    00463400
                    LCLC  &ZXTRACKTAG           ++ INPUT VALUE          00463500
                    LCLC  &ZXLOSSCONNDELETE     ++ INPUT VALUE          00463600
                    LCLC  &ZXETODCREATED        ++ INPUT NAME           00463700
                    LCLC  &ZXCONDITIONS         ++ INPUT VALUE          00463800
                    LCLC  &ZXMUSTBE   ++ INPUT VALUE                    00463900
                    LCLC  &ZXTIMEOUT  ++ INPUT NAME                     00464000
                    LCLC  &ZXCONNECTION         ++ INOUT NAME           00464100
                    LCLC  &ZXACCESS   ++ INPUT VALUE                    00464200
                    LCLC  &ZXTERMSCOPE          ++ INPUT VALUE          00464300
                    LCLC  &ZXTTOKEN   ++ INPUT NAME                     00464400
                    LCLC  &ZXUSAGE    ++ INPUT VALUE                    00464500
                    LCLC  &ZXNAME     ++ INPUT NAME                     00464600
                    LCLC  &ZXTAG      ++ INOUT NAME                     00464700
                    LCLC  &ZXINSTANCE#          ++ INOUT NAME           00464800
                    LCLC  &ZXKEEPNOTE           ++ INPUT VALUE          00464900
                    LCLC  &ZXBUFFORDESC         ++ INPUT NAME           00465000
                    LCLC  &ZXNOBUFFER           ++ INPUT NAME           00465100
                    LCLC  &ZXBUFFER   ++ INPUT NAME                     00465200
                    LCLC  &ZXBUFLEN   ++ INPUT NAME                     00465300
                    LCLC  &ZXRESUMETOKEN        ++ INOUT NAME           00465400
                    LCLC  &ZXMAXTAG   ++ INPUT NAME                     00465500
                    LCLC  &ZXCHOOSE   ++ INPUT VALUE                    00465600
                    LCLC  &ZXCRITERIA           ++ INPUT NAME           00465700
                    LCLC  &ZXANSORNO  ++ INPUT NAME                     00465800
                    LCLC  &ZXNOANSAREA          ++ INPUT NAME           00465900
                    LCLC  &ZXANSAREA  ++ INPUT NAME                     00466000
                    LCLC  &ZXANSLEN   ++ INPUT NAME                     00466100
                    LCLC  &ZXRETCODE  ++ OUTPUT NAME                    00466200
                    LCLC  &ZXRSNCODE  ++ OUTPUT NAME                    00466300
                    LCLC  &ZXPLISTVER           ++ INPUT VALUE          00466400
                    LCLC  &ZXMF       ++ INPUT VALUE                    00466500
                    LCLC  &ZXMFCTRL   ++ INPUT NAME                     00466600
                    LCLC  &ZXMFATTR   ++ INPUT VALUE                    00466700
                    LCLC  &ZXMFSCK    ++ INPUT VALUE                    00466800
.********************************************************************   00466900
.***AC.PLV01  PROCESS PLISTVER                                      *   00467000
.********************************************************************   00467100
&XPLISTVER      SETA  0                                                 00467200
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00467300
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00467400
&XPLISTVER      SETA  0                                                 00467500
.ZPLV0          ANOP  ,                                                 00467600
.*                                                                      00467700
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00467800
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00467900
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00468000
.*-------------------------------------------------------------------   00468100
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00468200
&ZMS            SETC  '"PLISTVER='                                      00468300
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00468400
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00468500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00468600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00468700
                AGO   .ZPVCK2                                           00468800
.ZPVCK3         ANOP  ,                                                 00468900
.*-------------------------------------------------------------------   00469000
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00469100
&ZMS            SETC  '"PLISTVER='                                      00469200
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00469300
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00469400
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00469500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00469600
                AGO   .ZPVCKE                                           00469700
.ZPVCK2         ANOP  ,                                                 00469800
.*-------------------------------------------------------------------   00469900
&ZCVAL          SETC  '&PLISTVER(1)'                                    00470000
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00470100
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00470200
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00470300
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00470400
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00470500
.ZPVCK6         ANOP  ,                                                 00470600
&ZMS            SETC  '"PLISTVER='                                      00470700
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00470800
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00470900
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00471000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00471100
&XPLISTVER      SETA  0                                                 00471200
                AGO   .ZPVCKE                                           00471300
.*-------------------------------------------------------------------   00471400
.ZPVCK4A        ANOP  ,                                                 00471500
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00471600
&ZMS            SETC  'PLISTVER='                                       00471700
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00471800
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00471900
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00472000
                MNOTE 8,' &ZMS IS REQUIRED.'                            00472100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00472200
                AGO   .ZPVCK5                                           00472300
.ZPVCK4         ANOP  ,                                                 00472400
&XPLISTVER      SETA  &PLISTVER(1)                                      00472500
.ZPVCK5         ANOP  ,                                                 00472600
.ZPVCKE         ANOP  ,                                                 00472700
.********************************************************************   00472800
.***AG.MF01 PROCESS MF MACRO FORMS                                      00472900
.********************************************************************   00473000
                    ACTR  10000                                         00473100
.*------------------------------------------------------------------    00473200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00473300
&XMF                SETC  ''          INITIALIZE XVARIABLE              00473400
.*-------------------------------------------------------------------   00473500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00473600
.ZG206              ANOP  ,                                             00473700
&ZTLC               SETC 'S'                                            00473800
                    AIF   ('&MF(1)' NE '&ZTLC').ZG207                   00473900
&XMF                SETC  'S'         SET KEYWORD                       00474000
                    AIF   (N'&MF LE 1).ZG206A   CK NUM                  00474100
&ZMS                SETC  '"MF='                                        00474200
&ZMS                SETC  '&ZMS.&MF"'                                   00474300
&ZMS                SETC  '&ZMS "MF"'                                   00474400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00474500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00474600
.ZG206A             ANOP  ,                                             00474700
.*-------------------------------------------------------------------   00474800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00474900
.ZG207              ANOP  ,                                             00475000
&ZTLC               SETC 'L'                                            00475100
                    AIF   ('&MF(1)' NE '&ZTLC').ZG214                   00475200
&XMF                SETC  'L'         SET KEYWORD                       00475300
                    AIF   (N'&MF LE 3).ZG207A   CK NUM                  00475400
&ZMS                SETC  '"MF='                                        00475500
&ZMS                SETC  '&ZMS.&MF"'                                   00475600
&ZMS                SETC  '&ZMS "MF"'                                   00475700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'          00475800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00475900
.ZG207A             ANOP  ,                                             00476000
.*-------------------------------------------------------------------   00476100
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00476200
                    AIF   (N'&SYSLIST NE 0).ZG207B  POSITIONALS?        00476300
                    AIF   ('&REQUEST' NE '').ZG207B  KEYS?              00476400
                    AIF   ('&NOTEPAD' NE '').ZG207B  KEYS?              00476500
                    AIF   ('&REQTYPE' NE '').ZG207B  KEYS?              00476600
                    AIF   ('&DESCRIPTION' NE '').ZG207B  KEYS?          00476700
                    AIF   ('&INFO' NE '').ZG207B  KEYS?                 00476800
                    AIF   ('&#NOTES' NE '').ZG207B  KEYS?               00476900
                    AIF   ('&MULTIWRITE' NE '').ZG207B  KEYS?           00477000
                    AIF   ('&DUPLEX' NE '').ZG207B  KEYS?               00477100
                    AIF   ('&INSTCOMP' NE '').ZG207B  KEYS?             00477200
                    AIF   ('&TAGGING' NE '').ZG207B  KEYS?              00477300
                    AIF   ('&TRACKTAG' NE '').ZG207B  KEYS?             00477400
                    AIF   ('&LOSSCONNDELETE' NE '').ZG207B  KEYS?       00477500
                    AIF   ('&ETODCREATED' NE '').ZG207B  KEYS?          00477600
                    AIF   ('&CONDITIONS' NE '').ZG207B  KEYS?           00477700
                    AIF   ('&MUSTBE' NE '').ZG207B  KEYS?               00477800
                    AIF   ('&TIMEOUT' NE '').ZG207B  KEYS?              00477900
                    AIF   ('&CONNECTION' NE '').ZG207B  KEYS?           00478000
                    AIF   ('&ACCESS' NE '').ZG207B  KEYS?               00478100
                    AIF   ('&TERMSCOPE' NE '').ZG207B  KEYS?            00478200
                    AIF   ('&TTOKEN' NE '').ZG207B  KEYS?               00478300
                    AIF   ('&USAGE' NE '').ZG207B  KEYS?                00478400
                    AIF   ('&NAME' NE '').ZG207B  KEYS?                 00478500
                    AIF   ('&TAG' NE '').ZG207B  KEYS?                  00478600
                    AIF   ('&INSTANCE#' NE '').ZG207B  KEYS?            00478700
                    AIF   ('&KEEPNOTE' NE '').ZG207B  KEYS?             00478800
                    AIF   ('&BUFFER' NE '').ZG207B  KEYS?               00478900
                    AIF   ('&BUFLEN' NE '').ZG207B  KEYS?               00479000
                    AIF   ('&RESUMETOKEN' NE '').ZG207B  KEYS?          00479100
                    AIF   ('&MAXTAG' NE '').ZG207B  KEYS?               00479200
                    AIF   ('&CHOOSE' NE '').ZG207B  KEYS?               00479300
                    AIF   ('&CRITERIA' NE '').ZG207B  KEYS?             00479400
                    AIF   ('&ANSAREA' NE '').ZG207B  KEYS?              00479500
                    AIF   ('&ANSLEN' NE '').ZG207B  KEYS?               00479600
                    AIF   ('&RETCODE' NE '').ZG207B  KEYS?              00479700
                    AIF   ('&RSNCODE' NE '').ZG207B  KEYS?              00479800
                    AGO    .ZG207C    INVOCATION OKAY                   00479900
.ZG207B             ANOP  ,                                             00480000
&ZMS                SETC  'THE "L" FORM OF "MF"'                        00480100
&ZMS                SETC  '&ZMS CAN ONLY HAVE'                          00480200
&ZMS                SETC  '&ZMS THE "PLISTVER" KEY'                     00480300
                    MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'        00480400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00480500
.ZG207C             ANOP  ,                                             00480600
.*-------------------------------------------------------------------   00480700
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00480800
&ZXMFCTRL           SETC  'INPUT'     SET IN/OUTPUT                     00480900
&XMFCTRL            SETC  '&MF(2,1)'  SET XVARIABLE                     00481000
                    AIF   (N'&MF(2) GT 1).ZG209B  MULTI                 00481100
&XMFCTRL            SETC  '&MF(2)'    SET XVARIABLE                     00481200
.ZG209B             AIF   (K'&MF(2) GT 0).ZG209C                        00481300
&ZXMFCTRL           SETC  ''          RESET IN/OUTPUT                   00481400
&ZMS                SETC  'WHEN "L" IS SPECIFIED'                       00481500
&ZMS                SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'           00481600
                    MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                  00481700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00481800
.ZG209C             ANOP  ,                                             00481900
.*-------------------------------------------------------------------   00482000
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00482100
                    AIF   (K'&ZXMFCTRL LE 0).ZG209P  NOT I/O            00482200
                    AIF   ('&XMFCTRL'(1,1) NE '(').ZG209P               00482300
&ZXMFCTRL           SETC  ''          RESET IN/OUTPUT                   00482400
&ZMS                SETC  '"MF='                                        00482500
&ZMS                SETC  '&ZMS.&MF"'                                   00482600
&ZMS                SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'     00482700
                    MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'             00482800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00482900
.ZG209P             ANOP  ,                                             00483000
.*-------------------------------------------------------------------   00483100
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00483200
&ZXMFATTR           SETC  'INPUT'     SET IN/OUTPUT                     00483300
&XMFATTR            SETC  '0D'                                          00483400
                    AIF   (K'&MF(3) LE 0).ZG212B  PARM                  00483500
&XMFATTR            SETC  '&MF(3,1)'  SET XVARIABLE                     00483600
                    AIF   (N'&MF(3) GT 1).ZG212B  MULTI                 00483700
&XMFATTR            SETC  '&MF(3)'    SET XVARIABLE                     00483800
.ZG212B             ANOP  ,                                             00483900
.*-------------------------------------------------------------------   00484000
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00484100
                    AIF   (K'&ZXMFATTR LE 0).ZG212P  NOT I/O            00484200
                    AIF   ('&XMFATTR'(1,1) NE '(').ZG212P               00484300
&ZXMFATTR           SETC  ''          RESET IN/OUTPUT                   00484400
&ZMS                SETC  '"MF='                                        00484500
&ZMS                SETC  '&ZMS.&MF"'                                   00484600
&ZMS                SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'     00484700
                    MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'             00484800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00484900
.ZG212P             ANOP  ,                                             00485000
.*-------------------------------------------------------------------   00485100
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00485200
                    AIF   (K'&ZXMFATTR LE 0).ZG212S  NOT I/O            00485300
                    AIF   (K'&XMFATTR LE 60).ZG212S  LNG OK             00485400
&ZXMFATTR           SETC  ''          RESET IN/OUTPUT                   00485500
&ZMS                SETC  '"MF='                                        00485600
&ZMS                SETC  '&ZMS.&MF"'                                   00485700
&ZMS                SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'         00485800
                    MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'            00485900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00486000
.ZG212S             ANOP  ,                                             00486100
.*-------------------------------------------------------------------   00486200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00486300
.ZG214              ANOP  ,                                             00486400
&ZTLC               SETC 'E'                                            00486500
                    AIF   ('&MF(1)' NE '&ZTLC').ZG222                   00486600
&XMF                SETC  'E'         SET KEYWORD                       00486700
                    AIF   (N'&MF LE 3).ZG214A   CK NUM                  00486800
&ZMS                SETC  '"MF='                                        00486900
&ZMS                SETC  '&ZMS.&MF"'                                   00487000
&ZMS                SETC  '&ZMS "MF"'                                   00487100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'          00487200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00487300
.ZG214A             ANOP  ,                                             00487400
.*-------------------------------------------------------------------   00487500
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00487600
&ZXMFCTRL           SETC  'INPUT'     SET IN/OUTPUT                     00487700
&XMFCTRL            SETC  '&MF(2,1)'  SET XVARIABLE                     00487800
                    AIF   (N'&MF(2) GT 1).ZG216B  MULTI                 00487900
&XMFCTRL            SETC  '&MF(2)'    SET XVARIABLE                     00488000
.ZG216B             AIF   (K'&MF(2) GT 0).ZG216C                        00488100
&ZXMFCTRL           SETC  ''          RESET IN/OUTPUT                   00488200
&ZMS                SETC  'WHEN "E" IS SPECIFIED'                       00488300
&ZMS                SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'           00488400
                    MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                  00488500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00488600
.ZG216C             ANOP  ,                                             00488700
.*-------------------------------------------------------------------   00488800
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00488900
                    AIF   (K'&ZXMFCTRL LE 0).ZG216R  NOT I/O            00489000
                    AIF   ('&XMFCTRL'(1,1) NE '(').ZG216R               00489100
&ZCGPR              SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                    00489200
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG216P                 00489300
                    AIF   (K'&ZCGPR GT 2).ZG216Q                        00489400
                    AIF   ('&ZCGPR' EQ '0').ZG216Q                      00489500
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00489600
                    AIF   (T'&ZCGPR NE 'N').ZG216Q  INVALID REG NAME    00489700
.ZG216P             ANOP  ,                                             00489800
                    AIF   (T'&ZCGPR NE 'N').ZG216R  NON NUMERIC         00489900
                    AIF   ('&ZCGPR' LT '1').ZG216Q                      00490000
                    AIF   ('&ZCGPR' LE '12').ZG216R                     00490100
.ZG216Q             ANOP  ,                                             00490200
&ZMS                SETC  '"MF='                                        00490300
&ZMS                SETC  '&ZMS.&MF"'                                   00490400
&ZMS                SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'     00490500
                    MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'              00490600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00490700
.ZG216R             ANOP  ,                                             00490800
.*-------------------------------------------------------------------   00490900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00491000
&XMFSCK             SETC  ''          INITIALIZE XVARIABLE              00491100
.ZG220A   AIF   ('&MF(3)' NE 'COMPLETE').ZG221A                         00491200
&XMFSCK             SETC  'COMPLETE'  SET KEYWORD                       00491300
.*-------------------------------------------------------------------   00491400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00491500
.ZG221A             AIF   (K'&XMFSCK GT 0).ZG221C  KEYWORD              00491600
                    AIF   (K'&MF(3) LE 0).ZG221B                        00491700
&ZMS                SETC  '"MF='                                        00491800
&ZMS                SETC  '&ZMS.&MF"'                                   00491900
&ZMS                SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '     00492000
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00492100
&ZMS                SETC  '&ZMS "COMPLETE".'                            00492200
                    MNOTE 8,' &ZMS '                                    00492300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00492400
.ZG221B             ANOP  ,                                             00492500
&XMFSCK             SETC  'COMPLETE'  SET DEFAULT KEYWORD               00492600
.ZG221C             ANOP  ,                                             00492700
&ZXMFSCK            SETC  'INPUT'     SET IN/OUTPUT                     00492800
.*------------------------------------------------------------------    00492900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00493000
.ZG222              ANOP  ,                                             00493100
&ZXMF               SETC  'INPUT'     SET IN/OUTPUT                     00493200
                    AIF   (K'&XMF GT 0).ZG222E  VALID ARG               00493300
                    AIF   (T'&MF EQ 'O').ZG222D  OMITTED                00493400
&ZASYSLNDX          SETA  0                                             00493500
.ZG222A             ANOP  ,           POSITIONAL MACRO KEY              00493600
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00493700
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG222C             00493800
&ZTLC               SETC 'MF'                                           00493900
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG222A    00494000
.ZG222B             ANOP  ,                                             00494100
&ZXMF               SETC  ''          RESET IN/OUTPUT                   00494200
&ZMS                SETC  'THE "MF" KEY'                                00494300
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00494400
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00494500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00494600
                    AGO   .ZG222E                                       00494700
.ZG222C             ANOP  ,                                             00494800
&ZXMF               SETC  ''          RESET IN/OUTPUT                   00494900
&ZMS                SETC  '"MF='                                        00495000
&ZMS                SETC  '&ZMS.&MF"'                                   00495100
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00495200
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00495300
&ZMS                SETC  '&ZMS "S",'                                   00495400
&ZMS                SETC  '&ZMS "L",'                                   00495500
&ZMS                SETC  '&ZMS OR "E".'                                00495600
                    MNOTE 8,' &ZMS '                                    00495700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00495800
                    AGO   .ZG222E                                       00495900
.ZG222D             ANOP  ,                                             00496000
&XMF                SETC  'S'         SET DEFAULT KEYWORD               00496100
&XMFSCK             SETC  'COMPLETE'  COMPLETE CHECKING                 00496200
.ZG222E             ANOP  ,                                             00496300
.********************************************************************   00496400
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00496500
.********************************************************************   00496600
                    ACTR  10000                                         00496700
.*-------------------------------------------------------------------   00496800
.***AG.MF03 MF=(SLE)                                                    00496900
                    AIF   ('&XMF' EQ 'L').ZGMFX                         00497000
.*------------------------------------------------------------------    00497100
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00497200
&XREQUEST           SETC  ''          INITIALIZE XVARIABLE              00497300
.*-------------------------------------------------------------------   00497400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00497500
.ZG3                ANOP  ,                                             00497600
                    AIF   (K'&REQUEST(1) LE 0).ZG3A                     00497700
&ZTLC               SETC 'NOTEPAD'                                      00497800
                    AIF   ('&REQUEST(1)' NE '&ZTLC').ZG73               00497900
&XREQUEST           SETC  'NOTEPAD'   SET KEYWORD                       00498000
                    AIF   (N'&REQUEST LE 1).ZG3A  CK NUM                00498100
&ZMS                SETC  '"REQUEST='                                   00498200
&ZMS                SETC  '&ZMS.&REQUEST"'                              00498300
&ZMS                SETC  '&ZMS "REQUEST"'                              00498400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00498500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00498600
.ZG3A               ANOP  ,                                             00498700
.*------------------------------------------------------------------    00498800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00498900
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00499000
.ZG3A0              AIF   (K'&CONNECTION LE 0).ZG3A1  OK                00499100
&ZCVAL              SETC '&ZCVAL CONNECTION'    INCORRECT KEY USED      00499200
.ZG3A1              AIF   (K'&ACCESS LE 0).ZG3A2  OK                    00499300
&ZCVAL              SETC '&ZCVAL ACCESS'        INCORRECT KEY USED      00499400
.ZG3A2              AIF   (K'&TERMSCOPE LE 0).ZG3A3  OK                 00499500
&ZCVAL              SETC '&ZCVAL TERMSCOPE'     INCORRECT KEY USED      00499600
.ZG3A3              AIF   (K'&TTOKEN LE 0).ZG3A4  OK                    00499700
&ZCVAL              SETC '&ZCVAL TTOKEN'        INCORRECT KEY USED      00499800
.ZG3A4              AIF   (K'&USAGE LE 0).ZG3A5  OK                     00499900
&ZCVAL              SETC '&ZCVAL USAGE'         INCORRECT KEY USED      00500000
.ZG3A5              AIF   (K'&NAME LE 0).ZG3A6  OK                      00500100
&ZCVAL              SETC '&ZCVAL NAME'          INCORRECT KEY USED      00500200
.ZG3A6              AIF   (K'&TAG LE 0).ZG3A7   OK                      00500300
&ZCVAL              SETC '&ZCVAL TAG'           INCORRECT KEY USED      00500400
.ZG3A7              AIF   (K'&INSTANCE# LE 0).ZG3A8  OK                 00500500
&ZCVAL              SETC '&ZCVAL INSTANCE#'     INCORRECT KEY USED      00500600
.ZG3A8              AIF   (K'&KEEPNOTE LE 0).ZG3A9  OK                  00500700
&ZCVAL              SETC '&ZCVAL KEEPNOTE'      INCORRECT KEY USED      00500800
.ZG3A9              AIF   (K'&XNOBUFFER LE 0).ZG3A10  OK                00500900
&ZCVAL              SETC '&ZCVAL NOBUFFER'      INCORRECT KEY USED      00501000
.ZG3A10             AIF   (K'&BUFFER LE 0).ZG3A11  OK                   00501100
&ZCVAL              SETC '&ZCVAL BUFFER'        INCORRECT KEY USED      00501200
.ZG3A11             AIF   (K'&BUFLEN LE 0).ZG3A12  OK                   00501300
&ZCVAL              SETC '&ZCVAL BUFLEN'        INCORRECT KEY USED      00501400
.ZG3A12             AIF   (K'&RESUMETOKEN LE 0).ZG3A13  OK              00501500
&ZCVAL              SETC '&ZCVAL RESUMETOKEN'   INCORRECT KEY USED      00501600
.ZG3A13             AIF   (K'&MAXTAG LE 0).ZG3A14  OK                   00501700
&ZCVAL              SETC '&ZCVAL MAXTAG'        INCORRECT KEY USED      00501800
.ZG3A14             AIF   (K'&CHOOSE LE 0).ZG3A15  OK                   00501900
&ZCVAL              SETC '&ZCVAL CHOOSE'        INCORRECT KEY USED      00502000
.ZG3A15             AIF   (K'&CRITERIA LE 0).ZG3A16  OK                 00502100
&ZCVAL              SETC '&ZCVAL CRITERIA'      INCORRECT KEY USED      00502200
.ZG3A16             AIF   (K'&ZCVAL LE 0).ZG3A17  OK                    00502300
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00502400
&ZMS                SETC  '"REQUEST'                                    00502500
&ZMS                SETC  '&ZMS.=&REQUEST"'                             00502600
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00502700
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00502800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00502900
.ZG3A17             ANOP  ,                                             00503000
.*----------------------------------------------------------------***   00503100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00503200
                    AIF   (N'&NOTEPAD LE 1).ZG5A  CK NUM                00503300
&ZMS                SETC  '"NOTEPAD='                                   00503400
&ZMS                SETC  '&ZMS.&NOTEPAD"'                              00503500
&ZMS                SETC  '&ZMS "NOTEPAD"'                              00503600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00503700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00503800
.ZG5A               ANOP  ,                                             00503900
.*-------------------------------------------------------------------   00504000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00504100
&ZXNOTEPAD          SETC  'INPUT'     SET IN/OUTPUT                     00504200
&XNOTEPAD           SETC  '&NOTEPAD(1)'         SET XVARIABLE           00504300
                    AIF   (N'&NOTEPAD GT 1).ZG5B  MULTI                 00504400
&XNOTEPAD           SETC  '&NOTEPAD'  SET XVARIABLE                     00504500
.ZG5B               AIF   (K'&NOTEPAD(1) GT 0).ZG5C                     00504600
&ZXNOTEPAD          SETC  ''          RESET IN/OUTPUT                   00504700
&ZMS                SETC  ' '                                           00504800
&ZMS                SETC  '&ZMS "NOTEPAD" KEY AND ITS'                  00504900
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00505000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00505100
.ZG5C               ANOP  ,                                             00505200
.*-------------------------------------------------------------------   00505300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00505400
                    AIF   (K'&ZXNOTEPAD LE 0).ZG5R  NOT I/O             00505500
                    AIF   ('&XNOTEPAD'(1,1) NE '(').ZG5R                00505600
&ZCGPR              SETC  '&XNOTEPAD'(2,K'&XNOTEPAD-2)                  00505700
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                   00505800
                    AIF   (K'&ZCGPR GT 2).ZG5Q                          00505900
                    AIF   ('&ZCGPR' EQ '0').ZG5Q                        00506000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00506100
                    AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME      00506200
.ZG5P               ANOP  ,                                             00506300
                    AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC           00506400
                    AIF   ('&ZCGPR' LT '2').ZG5Q                        00506500
                    AIF   ('&ZCGPR' LE '12').ZG5R                       00506600
.ZG5Q               ANOP  ,                                             00506700
&ZMS                SETC  '"NOTEPAD='                                   00506800
&ZMS                SETC  '&ZMS.&NOTEPAD"'                              00506900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00507000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00507100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00507200
.ZG5R               ANOP  ,                                             00507300
.*------------------------------------------------------------------    00507400
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00507500
&XREQTYPE           SETC  ''          INITIALIZE XVARIABLE              00507600
.*-------------------------------------------------------------------   00507700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00507800
.ZG9                ANOP  ,                                             00507900
                    AIF   (K'&REQTYPE(1) LE 0).ZG9A                     00508000
&ZTLC               SETC 'CREATE'                                       00508100
                    AIF   ('&REQTYPE(1)' NE '&ZTLC').ZG50               00508200
&XREQTYPE           SETC  'CREATE'    SET KEYWORD                       00508300
                    AIF   (N'&REQTYPE LE 1).ZG9A  CK NUM                00508400
&ZMS                SETC  '"REQTYPE='                                   00508500
&ZMS                SETC  '&ZMS.&REQTYPE"'                              00508600
&ZMS                SETC  '&ZMS "REQTYPE"'                              00508700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00508800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00508900
.ZG9A               ANOP  ,                                             00509000
.*------------------------------------------------------------------    00509100
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00509200
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00509300
.ZG9A0              AIF   (K'&ETODCREATED LE 0).ZG9A1  OK               00509400
&ZCVAL              SETC '&ZCVAL ETODCREATED'   INCORRECT KEY USED      00509500
.ZG9A1              AIF   (K'&CONDITIONS LE 0).ZG9A2  OK                00509600
&ZCVAL              SETC '&ZCVAL CONDITIONS'    INCORRECT KEY USED      00509700
.ZG9A2              AIF   (K'&MUSTBE LE 0).ZG9A3  OK                    00509800
&ZCVAL              SETC '&ZCVAL MUSTBE'        INCORRECT KEY USED      00509900
.ZG9A3              AIF   (K'&ZCVAL LE 0).ZG9A4  OK                     00510000
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00510100
&ZMS                SETC  '"REQTYPE'                                    00510200
&ZMS                SETC  '&ZMS.=&REQTYPE"'                             00510300
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00510400
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00510500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00510600
.ZG9A4              ANOP  ,                                             00510700
.*----------------------------------------------------------------***   00510800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00510900
                    AIF   (N'&DESCRIPTION LE 1).ZG11A  CK NUM           00511000
&ZMS                SETC  '"DESCRIPTION='                               00511100
&ZMS                SETC  '&ZMS.&DESCRIPTION"'                          00511200
&ZMS                SETC  '&ZMS "DESCRIPTION"'                          00511300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00511400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00511500
.ZG11A              ANOP  ,                                             00511600
.*-------------------------------------------------------------------   00511700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00511800
&ZXDESCRIPTION      SETC  'INPUT'     SET IN/OUTPUT                     00511900
&XDESCRIPTION       SETC  '&DESCRIPTION(1)'     SET XVARIABLE           00512000
                    AIF   (N'&DESCRIPTION GT 1).ZG11B  MULTI            00512100
&XDESCRIPTION       SETC  '&DESCRIPTION'        SET XVARIABLE           00512200
.ZG11B              AIF   (K'&DESCRIPTION(1) GT 0).ZG11C                00512300
&ZXDESCRIPTION      SETC  ''          RESET IN/OUTPUT                   00512400
&ZMS                SETC  ' '                                           00512500
&ZMS                SETC  '&ZMS "DESCRIPTION" KEY AND ITS'              00512600
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00512700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00512800
.ZG11C              ANOP  ,                                             00512900
.*-------------------------------------------------------------------   00513000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00513100
                    AIF   (K'&ZXDESCRIPTION LE 0).ZG11R  NOT I/O        00513200
                    AIF   ('&XDESCRIPTION'(1,1) NE '(').ZG11R           00513300
&ZCGPR              SETC  '&XDESCRIPTION'(2,K'&XDESCRIPTION-2)          00513400
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                  00513500
                    AIF   (K'&ZCGPR GT 2).ZG11Q                         00513600
                    AIF   ('&ZCGPR' EQ '0').ZG11Q                       00513700
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00513800
                    AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME     00513900
.ZG11P              ANOP  ,                                             00514000
                    AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC          00514100
                    AIF   ('&ZCGPR' LT '2').ZG11Q                       00514200
                    AIF   ('&ZCGPR' LE '12').ZG11R                      00514300
.ZG11Q              ANOP  ,                                             00514400
&ZMS                SETC  '"DESCRIPTION='                               00514500
&ZMS                SETC  '&ZMS.&DESCRIPTION"'                          00514600
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00514700
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00514800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00514900
.ZG11R              ANOP  ,                                             00515000
.*----------------------------------------------------------------***   00515100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00515200
                    AIF   (N'&INFO LE 1).ZG14A  CK NUM                  00515300
&ZMS                SETC  '"INFO='                                      00515400
&ZMS                SETC  '&ZMS.&INFO"'                                 00515500
&ZMS                SETC  '&ZMS "INFO"'                                 00515600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00515700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00515800
.ZG14A              ANOP  ,                                             00515900
.*-------------------------------------------------------------------   00516000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00516100
&ZXINFO             SETC  'INPUT'     SET IN/OUTPUT                     00516200
&XINFO              SETC  '0'                                           00516300
                    AIF   (K'&INFO(1) LE 0).ZG14B  PARM                 00516400
&XINFO              SETC  '&INFO(1)'  SET XVARIABLE                     00516500
                    AIF   (N'&INFO GT 1).ZG14B  MULTI                   00516600
&XINFO              SETC  '&INFO'     SET XVARIABLE                     00516700
.ZG14B              ANOP  ,                                             00516800
.*-------------------------------------------------------------------   00516900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00517000
                    AIF   (K'&ZXINFO LE 0).ZG14R  NOT I/O               00517100
                    AIF   ('&XINFO'(1,1) NE '(').ZG14R                  00517200
&ZCGPR              SETC  '&XINFO'(2,K'&XINFO-2)                        00517300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                  00517400
                    AIF   (K'&ZCGPR GT 2).ZG14Q                         00517500
                    AIF   ('&ZCGPR' EQ '0').ZG14Q                       00517600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00517700
                    AIF   (T'&ZCGPR NE 'N').ZG14Q  INVALID REG NAME     00517800
.ZG14P              ANOP  ,                                             00517900
                    AIF   (T'&ZCGPR NE 'N').ZG14R  NON NUMERIC          00518000
                    AIF   ('&ZCGPR' LT '2').ZG14Q                       00518100
                    AIF   ('&ZCGPR' LE '12').ZG14R                      00518200
.ZG14Q              ANOP  ,                                             00518300
&ZMS                SETC  '"INFO='                                      00518400
&ZMS                SETC  '&ZMS.&INFO"'                                 00518500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00518600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00518700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00518800
.ZG14R              ANOP  ,                                             00518900
.*----------------------------------------------------------------***   00519000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00519100
                    AIF   (N'&#NOTES LE 1).ZG17A  CK NUM                00519200
&ZMS                SETC  '"#NOTES='                                    00519300
&ZMS                SETC  '&ZMS.&#NOTES"'                               00519400
&ZMS                SETC  '&ZMS "#NOTES"'                               00519500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00519600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00519700
.ZG17A              ANOP  ,                                             00519800
.*-------------------------------------------------------------------   00519900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00520000
&ZX#NOTES           SETC  'INPUT'     SET IN/OUTPUT                     00520100
&X#NOTES            SETC  '&#NOTES(1)'          SET XVARIABLE           00520200
                    AIF   (N'&#NOTES GT 1).ZG17B  MULTI                 00520300
&X#NOTES            SETC  '&#NOTES'   SET XVARIABLE                     00520400
.ZG17B              AIF   (K'&#NOTES(1) GT 0).ZG17C                     00520500
&ZX#NOTES           SETC  ''          RESET IN/OUTPUT                   00520600
&ZMS                SETC  ' '                                           00520700
&ZMS                SETC  '&ZMS "#NOTES" KEY AND ITS'                   00520800
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00520900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00521000
.ZG17C              ANOP  ,                                             00521100
.*-------------------------------------------------------------------   00521200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00521300
                    AIF   (K'&ZX#NOTES LE 0).ZG17R  NOT I/O             00521400
                    AIF   ('&X#NOTES'(1,1) NE '(').ZG17R                00521500
&ZCGPR              SETC  '&X#NOTES'(2,K'&X#NOTES-2)                    00521600
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG17P                  00521700
                    AIF   (K'&ZCGPR GT 2).ZG17Q                         00521800
                    AIF   ('&ZCGPR' EQ '0').ZG17Q                       00521900
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00522000
                    AIF   (T'&ZCGPR NE 'N').ZG17Q  INVALID REG NAME     00522100
.ZG17P              ANOP  ,                                             00522200
                    AIF   (T'&ZCGPR NE 'N').ZG17R  NON NUMERIC          00522300
                    AIF   ('&ZCGPR' LT '2').ZG17Q                       00522400
                    AIF   ('&ZCGPR' LE '12').ZG17R                      00522500
.ZG17Q              ANOP  ,                                             00522600
&ZMS                SETC  '"#NOTES='                                    00522700
&ZMS                SETC  '&ZMS.&#NOTES"'                               00522800
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00522900
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00523000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00523100
.ZG17R              ANOP  ,                                             00523200
.*------------------------------------------------------------------    00523300
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00523400
&XMULTIWRITE        SETC  ''          INITIALIZE XVARIABLE              00523500
.*-------------------------------------------------------------------   00523600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00523700
.ZG21               ANOP  ,                                             00523800
                    AIF   (K'&MULTIWRITE(1) LE 0).ZG21A                 00523900
&ZTLC               SETC 'NO'                                           00524000
                    AIF   ('&MULTIWRITE(1)' NE '&ZTLC').ZG22            00524100
&XMULTIWRITE        SETC  'NO'        SET KEYWORD                       00524200
                    AIF   (N'&MULTIWRITE LE 1).ZG21A  CK NUM            00524300
&ZMS                SETC  '"MULTIWRITE='                                00524400
&ZMS                SETC  '&ZMS.&MULTIWRITE"'                           00524500
&ZMS                SETC  '&ZMS "MULTIWRITE"'                           00524600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00524700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00524800
.ZG21A              ANOP  ,                                             00524900
.*-------------------------------------------------------------------   00525000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00525100
.ZG22               ANOP  ,                                             00525200
&ZTLC               SETC 'YES'                                          00525300
                    AIF   ('&MULTIWRITE(1)' NE '&ZTLC').ZG23            00525400
&XMULTIWRITE        SETC  'YES'       SET KEYWORD                       00525500
                    AIF   (N'&MULTIWRITE LE 1).ZG22A  CK NUM            00525600
&ZMS                SETC  '"MULTIWRITE='                                00525700
&ZMS                SETC  '&ZMS.&MULTIWRITE"'                           00525800
&ZMS                SETC  '&ZMS "MULTIWRITE"'                           00525900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00526000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00526100
.ZG22A              ANOP  ,                                             00526200
.*------------------------------------------------------------------    00526300
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00526400
.ZG23               ANOP  ,                                             00526500
&ZXMULTIWRITE       SETC  'INPUT'     SET IN/OUTPUT                     00526600
                    AIF   (K'&XMULTIWRITE GT 0).ZG23E  VALID ARG        00526700
                    AIF   (T'&MULTIWRITE EQ 'O').ZG23D  OMITTED         00526800
&ZASYSLNDX          SETA  0                                             00526900
.ZG23A              ANOP  ,           POSITIONAL MACRO KEY              00527000
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00527100
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG23C              00527200
&ZTLC               SETC 'MULTIWRITE'                                   00527300
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG23A     00527400
.ZG23B              ANOP  ,                                             00527500
&ZXMULTIWRITE       SETC  ''          RESET IN/OUTPUT                   00527600
&ZMS                SETC  'THE "MULTIWRITE" KEY'                        00527700
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00527800
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00527900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00528000
                    AGO   .ZG23E                                        00528100
.ZG23C              ANOP  ,                                             00528200
&ZXMULTIWRITE       SETC  ''          RESET IN/OUTPUT                   00528300
&ZMS                SETC  '"MULTIWRITE='                                00528400
&ZMS                SETC  '&ZMS.&MULTIWRITE"'                           00528500
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00528600
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00528700
&ZMS                SETC  '&ZMS "NO"'                                   00528800
&ZMS                SETC  '&ZMS OR "YES".'                              00528900
                    MNOTE 8,' &ZMS '                                    00529000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00529100
                    AGO   .ZG23E                                        00529200
.ZG23D              ANOP  ,                                             00529300
&XMULTIWRITE        SETC  'NO'        SET DEFAULT KEYWORD               00529400
.ZG23E              ANOP  ,                                             00529500
.*------------------------------------------------------------------    00529600
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00529700
                    AIF   (K'&MULTIWRITE(1) GT 0).ZG23F  PARM           00529800
&XMULTIWRITE        SETC  ''          ENSURE NULL KEYWORD               00529900
&ZXMULTIWRITE       SETC  ''          RESET IN/OUTPUT                   00530000
&ZMS                SETC  'THE'                                         00530100
&ZMS                SETC  '&ZMS "MULTIWRITE" KEY AND ITS'               00530200
&ZMS                SETC  '&ZMS ARGUMENT ARE REQUIRED.'                 00530300
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00530400
&ZMS                SETC  '&ZMS "NO"'                                   00530500
&ZMS                SETC  '&ZMS OR "YES".'                              00530600
                    MNOTE 8,' &ZMS '                                    00530700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00530800
.ZG23F              ANOP  ,                                             00530900
.*------------------------------------------------------------------    00531000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00531100
&XDUPLEX            SETC  ''          INITIALIZE XVARIABLE              00531200
.*-------------------------------------------------------------------   00531300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00531400
.ZG26               ANOP  ,                                             00531500
                    AIF   (K'&DUPLEX(1) LE 0).ZG26A                     00531600
&ZTLC               SETC 'AVOID'                                        00531700
                    AIF   ('&DUPLEX(1)' NE '&ZTLC').ZG27                00531800
&XDUPLEX            SETC  'AVOID'     SET KEYWORD                       00531900
                    AIF   (N'&DUPLEX LE 1).ZG26A  CK NUM                00532000
&ZMS                SETC  '"DUPLEX='                                    00532100
&ZMS                SETC  '&ZMS.&DUPLEX"'                               00532200
&ZMS                SETC  '&ZMS "DUPLEX"'                               00532300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00532400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00532500
.ZG26A              ANOP  ,                                             00532600
.*-------------------------------------------------------------------   00532700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00532800
.ZG27               ANOP  ,                                             00532900
&ZTLC               SETC 'FAVOR'                                        00533000
                    AIF   ('&DUPLEX(1)' NE '&ZTLC').ZG28                00533100
&XDUPLEX            SETC  'FAVOR'     SET KEYWORD                       00533200
                    AIF   (N'&DUPLEX LE 1).ZG27A  CK NUM                00533300
&ZMS                SETC  '"DUPLEX='                                    00533400
&ZMS                SETC  '&ZMS.&DUPLEX"'                               00533500
&ZMS                SETC  '&ZMS "DUPLEX"'                               00533600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00533700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00533800
.ZG27A              ANOP  ,                                             00533900
.*------------------------------------------------------------------    00534000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00534100
.ZG28               ANOP  ,                                             00534200
&ZXDUPLEX           SETC  'INPUT'     SET IN/OUTPUT                     00534300
                    AIF   (K'&XDUPLEX GT 0).ZG28E  VALID ARG            00534400
                    AIF   (T'&DUPLEX EQ 'O').ZG28D  OMITTED             00534500
&ZASYSLNDX          SETA  0                                             00534600
.ZG28A              ANOP  ,           POSITIONAL MACRO KEY              00534700
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00534800
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG28C              00534900
&ZTLC               SETC 'DUPLEX'                                       00535000
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG28A     00535100
.ZG28B              ANOP  ,                                             00535200
&ZXDUPLEX           SETC  ''          RESET IN/OUTPUT                   00535300
&ZMS                SETC  'THE "DUPLEX" KEY'                            00535400
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00535500
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00535600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00535700
                    AGO   .ZG28E                                        00535800
.ZG28C              ANOP  ,                                             00535900
&ZXDUPLEX           SETC  ''          RESET IN/OUTPUT                   00536000
&ZMS                SETC  '"DUPLEX='                                    00536100
&ZMS                SETC  '&ZMS.&DUPLEX"'                               00536200
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00536300
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00536400
&ZMS                SETC  '&ZMS "AVOID"'                                00536500
&ZMS                SETC  '&ZMS OR "FAVOR".'                            00536600
                    MNOTE 8,' &ZMS '                                    00536700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00536800
                    AGO   .ZG28E                                        00536900
.ZG28D              ANOP  ,                                             00537000
&XDUPLEX            SETC  'AVOID'     SET DEFAULT KEYWORD               00537100
.ZG28E              ANOP  ,                                             00537200
.*------------------------------------------------------------------    00537300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00537400
&XINSTCOMP          SETC  ''          INITIALIZE XVARIABLE              00537500
.*-------------------------------------------------------------------   00537600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00537700
.ZG31               ANOP  ,                                             00537800
                    AIF   (K'&INSTCOMP(1) LE 0).ZG31A                   00537900
&ZTLC               SETC 'DISCRETIONARY'                                00538000
                    AIF   ('&INSTCOMP(1)' NE '&ZTLC').ZG32              00538100
&XINSTCOMP          SETC  'DISCRETIONARY'       SET KEYWORD             00538200
                    AIF   (N'&INSTCOMP LE 1).ZG31A  CK NUM              00538300
&ZMS                SETC  '"INSTCOMP='                                  00538400
&ZMS                SETC  '&ZMS.&INSTCOMP"'                             00538500
&ZMS                SETC  '&ZMS "INSTCOMP"'                             00538600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00538700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00538800
.ZG31A              ANOP  ,                                             00538900
.*-------------------------------------------------------------------   00539000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00539100
.ZG32               ANOP  ,                                             00539200
&ZTLC               SETC 'REQUIRED'                                     00539300
                    AIF   ('&INSTCOMP(1)' NE '&ZTLC').ZG33              00539400
&XINSTCOMP          SETC  'REQUIRED'  SET KEYWORD                       00539500
                    AIF   (N'&INSTCOMP LE 1).ZG32A  CK NUM              00539600
&ZMS                SETC  '"INSTCOMP='                                  00539700
&ZMS                SETC  '&ZMS.&INSTCOMP"'                             00539800
&ZMS                SETC  '&ZMS "INSTCOMP"'                             00539900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00540000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00540100
.ZG32A              ANOP  ,                                             00540200
.*------------------------------------------------------------------    00540300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00540400
.ZG33               ANOP  ,                                             00540500
&ZXINSTCOMP         SETC  'INPUT'     SET IN/OUTPUT                     00540600
                    AIF   (K'&XINSTCOMP GT 0).ZG33E  VALID ARG          00540700
                    AIF   (T'&INSTCOMP EQ 'O').ZG33D  OMITTED           00540800
&ZASYSLNDX          SETA  0                                             00540900
.ZG33A              ANOP  ,           POSITIONAL MACRO KEY              00541000
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00541100
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG33C              00541200
&ZTLC               SETC 'INSTCOMP'                                     00541300
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG33A     00541400
.ZG33B              ANOP  ,                                             00541500
&ZXINSTCOMP         SETC  ''          RESET IN/OUTPUT                   00541600
&ZMS                SETC  'THE "INSTCOMP" KEY'                          00541700
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00541800
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00541900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00542000
                    AGO   .ZG33E                                        00542100
.ZG33C              ANOP  ,                                             00542200
&ZXINSTCOMP         SETC  ''          RESET IN/OUTPUT                   00542300
&ZMS                SETC  '"INSTCOMP='                                  00542400
&ZMS                SETC  '&ZMS.&INSTCOMP"'                             00542500
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00542600
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00542700
&ZMS                SETC  '&ZMS "DISCRETIONARY"'                        00542800
&ZMS                SETC  '&ZMS OR "REQUIRED".'                         00542900
                    MNOTE 8,' &ZMS '                                    00543000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00543100
                    AGO   .ZG33E                                        00543200
.ZG33D              ANOP  ,                                             00543300
&XINSTCOMP          SETC  'DISCRETIONARY'       SET DEFAULT KEYWORD     00543400
.ZG33E              ANOP  ,                                             00543500
.*------------------------------------------------------------------    00543600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00543700
&XTAGGING           SETC  ''          INITIALIZE XVARIABLE              00543800
.*-------------------------------------------------------------------   00543900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00544000
.ZG36               ANOP  ,                                             00544100
                    AIF   (K'&TAGGING(1) LE 0).ZG36A                    00544200
&ZTLC               SETC 'XCF'                                          00544300
                    AIF   ('&TAGGING(1)' NE '&ZTLC').ZG37               00544400
&XTAGGING           SETC  'XCF'       SET KEYWORD                       00544500
                    AIF   (N'&TAGGING LE 1).ZG36A  CK NUM               00544600
&ZMS                SETC  '"TAGGING='                                   00544700
&ZMS                SETC  '&ZMS.&TAGGING"'                              00544800
&ZMS                SETC  '&ZMS "TAGGING"'                              00544900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00545000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00545100
.ZG36A              ANOP  ,                                             00545200
.*-------------------------------------------------------------------   00545300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00545400
.ZG37               ANOP  ,                                             00545500
&ZTLC               SETC 'USER'                                         00545600
                    AIF   ('&TAGGING(1)' NE '&ZTLC').ZG38               00545700
&XTAGGING           SETC  'USER'      SET KEYWORD                       00545800
                    AIF   (N'&TAGGING LE 1).ZG37A  CK NUM               00545900
&ZMS                SETC  '"TAGGING='                                   00546000
&ZMS                SETC  '&ZMS.&TAGGING"'                              00546100
&ZMS                SETC  '&ZMS "TAGGING"'                              00546200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00546300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00546400
.ZG37A              ANOP  ,                                             00546500
.*------------------------------------------------------------------    00546600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00546700
.ZG38               ANOP  ,                                             00546800
&ZXTAGGING          SETC  'INPUT'     SET IN/OUTPUT                     00546900
                    AIF   (K'&XTAGGING GT 0).ZG38E  VALID ARG           00547000
                    AIF   (T'&TAGGING EQ 'O').ZG38D  OMITTED            00547100
&ZASYSLNDX          SETA  0                                             00547200
.ZG38A              ANOP  ,           POSITIONAL MACRO KEY              00547300
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00547400
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG38C              00547500
&ZTLC               SETC 'TAGGING'                                      00547600
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG38A     00547700
.ZG38B              ANOP  ,                                             00547800
&ZXTAGGING          SETC  ''          RESET IN/OUTPUT                   00547900
&ZMS                SETC  'THE "TAGGING" KEY'                           00548000
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00548100
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00548200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00548300
                    AGO   .ZG38E                                        00548400
.ZG38C              ANOP  ,                                             00548500
&ZXTAGGING          SETC  ''          RESET IN/OUTPUT                   00548600
&ZMS                SETC  '"TAGGING='                                   00548700
&ZMS                SETC  '&ZMS.&TAGGING"'                              00548800
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00548900
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00549000
&ZMS                SETC  '&ZMS "XCF"'                                  00549100
&ZMS                SETC  '&ZMS OR "USER".'                             00549200
                    MNOTE 8,' &ZMS '                                    00549300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00549400
                    AGO   .ZG38E                                        00549500
.ZG38D              ANOP  ,                                             00549600
&XTAGGING           SETC  'XCF'       SET DEFAULT KEYWORD               00549700
.ZG38E              ANOP  ,                                             00549800
.*------------------------------------------------------------------    00549900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00550000
&XTRACKTAG          SETC  ''          INITIALIZE XVARIABLE              00550100
.*-------------------------------------------------------------------   00550200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00550300
.ZG41               ANOP  ,                                             00550400
                    AIF   (K'&TRACKTAG(1) LE 0).ZG41A                   00550500
&ZTLC               SETC 'NO'                                           00550600
                    AIF   ('&TRACKTAG(1)' NE '&ZTLC').ZG42              00550700
&XTRACKTAG          SETC  'NO'        SET KEYWORD                       00550800
                    AIF   (N'&TRACKTAG LE 1).ZG41A  CK NUM              00550900
&ZMS                SETC  '"TRACKTAG='                                  00551000
&ZMS                SETC  '&ZMS.&TRACKTAG"'                             00551100
&ZMS                SETC  '&ZMS "TRACKTAG"'                             00551200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00551300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00551400
.ZG41A              ANOP  ,                                             00551500
.*-------------------------------------------------------------------   00551600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00551700
.ZG42               ANOP  ,                                             00551800
&ZTLC               SETC 'CURRENT'                                      00551900
                    AIF   ('&TRACKTAG(1)' NE '&ZTLC').ZG43              00552000
&XTRACKTAG          SETC  'CURRENT'   SET KEYWORD                       00552100
                    AIF   (N'&TRACKTAG LE 1).ZG42A  CK NUM              00552200
&ZMS                SETC  '"TRACKTAG='                                  00552300
&ZMS                SETC  '&ZMS.&TRACKTAG"'                             00552400
&ZMS                SETC  '&ZMS "TRACKTAG"'                             00552500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00552600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00552700
.ZG42A              ANOP  ,                                             00552800
.*-------------------------------------------------------------------   00552900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00553000
.ZG43               ANOP  ,                                             00553100
&ZTLC               SETC 'LIFETIME'                                     00553200
                    AIF   ('&TRACKTAG(1)' NE '&ZTLC').ZG44              00553300
&XTRACKTAG          SETC  'LIFETIME'  SET KEYWORD                       00553400
                    AIF   (N'&TRACKTAG LE 1).ZG43A  CK NUM              00553500
&ZMS                SETC  '"TRACKTAG='                                  00553600
&ZMS                SETC  '&ZMS.&TRACKTAG"'                             00553700
&ZMS                SETC  '&ZMS "TRACKTAG"'                             00553800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00553900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00554000
.ZG43A              ANOP  ,                                             00554100
.*------------------------------------------------------------------    00554200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00554300
.ZG44               ANOP  ,                                             00554400
&ZXTRACKTAG         SETC  'INPUT'     SET IN/OUTPUT                     00554500
                    AIF   (K'&XTRACKTAG GT 0).ZG44E  VALID ARG          00554600
                    AIF   (T'&TRACKTAG EQ 'O').ZG44D  OMITTED           00554700
&ZASYSLNDX          SETA  0                                             00554800
.ZG44A              ANOP  ,           POSITIONAL MACRO KEY              00554900
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00555000
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG44C              00555100
&ZTLC               SETC 'TRACKTAG'                                     00555200
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG44A     00555300
.ZG44B              ANOP  ,                                             00555400
&ZXTRACKTAG         SETC  ''          RESET IN/OUTPUT                   00555500
&ZMS                SETC  'THE "TRACKTAG" KEY'                          00555600
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00555700
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00555800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00555900
                    AGO   .ZG44E                                        00556000
.ZG44C              ANOP  ,                                             00556100
&ZXTRACKTAG         SETC  ''          RESET IN/OUTPUT                   00556200
&ZMS                SETC  '"TRACKTAG='                                  00556300
&ZMS                SETC  '&ZMS.&TRACKTAG"'                             00556400
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00556500
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00556600
&ZMS                SETC  '&ZMS "NO",'                                  00556700
&ZMS                SETC  '&ZMS "CURRENT",'                             00556800
&ZMS                SETC  '&ZMS OR "LIFETIME".'                         00556900
                    MNOTE 8,' &ZMS '                                    00557000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00557100
                    AGO   .ZG44E                                        00557200
.ZG44D              ANOP  ,                                             00557300
&XTRACKTAG          SETC  'NO'        SET DEFAULT KEYWORD               00557400
.ZG44E              ANOP  ,                                             00557500
.*------------------------------------------------------------------    00557600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00557700
&XLOSSCONNDELETE    SETC  ''          INITIALIZE XVARIABLE              00557800
.*-------------------------------------------------------------------   00557900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00558000
.ZG47               ANOP  ,                                             00558100
                    AIF   (K'&LOSSCONNDELETE(1) LE 0).ZG47A             00558200
&ZTLC               SETC 'NO'                                           00558300
                    AIF   ('&LOSSCONNDELETE(1)' NE '&ZTLC').ZG48        00558400
&XLOSSCONNDELETE    SETC  'NO'        SET KEYWORD                       00558500
                    AIF   (N'&LOSSCONNDELETE LE 1).ZG47A  CK NUM        00558600
&ZMS                SETC  '"LOSSCONNDELETE='                            00558700
&ZMS                SETC  '&ZMS.&LOSSCONNDELETE"'                       00558800
&ZMS                SETC  '&ZMS "LOSSCONNDELETE"'                       00558900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00559000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00559100
.ZG47A              ANOP  ,                                             00559200
.*-------------------------------------------------------------------   00559300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00559400
.ZG48               ANOP  ,                                             00559500
&ZTLC               SETC 'YES'                                          00559600
                    AIF   ('&LOSSCONNDELETE(1)' NE '&ZTLC').ZG49        00559700
&XLOSSCONNDELETE    SETC  'YES'       SET KEYWORD                       00559800
                    AIF   (N'&LOSSCONNDELETE LE 1).ZG48A  CK NUM        00559900
&ZMS                SETC  '"LOSSCONNDELETE='                            00560000
&ZMS                SETC  '&ZMS.&LOSSCONNDELETE"'                       00560100
&ZMS                SETC  '&ZMS "LOSSCONNDELETE"'                       00560200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00560300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00560400
.ZG48A              ANOP  ,                                             00560500
.*------------------------------------------------------------------    00560600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00560700
.ZG49               ANOP  ,                                             00560800
&ZXLOSSCONNDELETE   SETC  'INPUT'     SET IN/OUTPUT                     00560900
                    AIF   (K'&XLOSSCONNDELETE GT 0).ZG49E  VALID ARG    00561000
                    AIF   (T'&LOSSCONNDELETE EQ 'O').ZG49D  OMITTED     00561100
&ZASYSLNDX          SETA  0                                             00561200
.ZG49A              ANOP  ,           POSITIONAL MACRO KEY              00561300
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00561400
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG49C              00561500
&ZTLC               SETC 'LOSSCONNDELETE'                               00561600
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG49A     00561700
.ZG49B              ANOP  ,                                             00561800
&ZXLOSSCONNDELETE   SETC  ''          RESET IN/OUTPUT                   00561900
&ZMS                SETC  'THE "LOSSCONNDELETE" KEY'                    00562000
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00562100
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00562200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00562300
                    AGO   .ZG49E                                        00562400
.ZG49C              ANOP  ,                                             00562500
&ZXLOSSCONNDELETE   SETC  ''          RESET IN/OUTPUT                   00562600
&ZMS                SETC  '"LOSSCONNDELETE='                            00562700
&ZMS                SETC  '&ZMS.&LOSSCONNDELETE"'                       00562800
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00562900
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00563000
&ZMS                SETC  '&ZMS "NO"'                                   00563100
&ZMS                SETC  '&ZMS OR "YES".'                              00563200
                    MNOTE 8,' &ZMS '                                    00563300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00563400
                    AGO   .ZG49E                                        00563500
.ZG49D              ANOP  ,                                             00563600
&XLOSSCONNDELETE    SETC  'NO'        SET DEFAULT KEYWORD               00563700
.ZG49E              ANOP  ,                                             00563800
.*-------------------------------------------------------------------   00563900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00564000
.ZG50               ANOP  ,                                             00564100
&ZTLC               SETC 'QUERY'                                        00564200
                    AIF   ('&REQTYPE(1)' NE '&ZTLC').ZG51               00564300
&XREQTYPE           SETC  'QUERY'     SET KEYWORD                       00564400
                    AIF   (N'&REQTYPE LE 1).ZG50A  CK NUM               00564500
&ZMS                SETC  '"REQTYPE='                                   00564600
&ZMS                SETC  '&ZMS.&REQTYPE"'                              00564700
&ZMS                SETC  '&ZMS "REQTYPE"'                              00564800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00564900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00565000
.ZG50A              ANOP  ,                                             00565100
.*------------------------------------------------------------------    00565200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00565300
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00565400
.ZG50A0             AIF   (K'&DESCRIPTION LE 0).ZG50A1  OK              00565500
&ZCVAL              SETC '&ZCVAL DESCRIPTION'   INCORRECT KEY USED      00565600
.ZG50A1             AIF   (K'&INFO LE 0).ZG50A2  OK                     00565700
&ZCVAL              SETC '&ZCVAL INFO'          INCORRECT KEY USED      00565800
.ZG50A2             AIF   (K'&#NOTES LE 0).ZG50A3  OK                   00565900
&ZCVAL              SETC '&ZCVAL #NOTES'        INCORRECT KEY USED      00566000
.ZG50A3             AIF   (K'&MULTIWRITE LE 0).ZG50A4  OK               00566100
&ZCVAL              SETC '&ZCVAL MULTIWRITE'    INCORRECT KEY USED      00566200
.ZG50A4             AIF   (K'&DUPLEX LE 0).ZG50A5  OK                   00566300
&ZCVAL              SETC '&ZCVAL DUPLEX'        INCORRECT KEY USED      00566400
.ZG50A5             AIF   (K'&INSTCOMP LE 0).ZG50A6  OK                 00566500
&ZCVAL              SETC '&ZCVAL INSTCOMP'      INCORRECT KEY USED      00566600
.ZG50A6             AIF   (K'&TAGGING LE 0).ZG50A7  OK                  00566700
&ZCVAL              SETC '&ZCVAL TAGGING'       INCORRECT KEY USED      00566800
.ZG50A7             AIF   (K'&TRACKTAG LE 0).ZG50A8  OK                 00566900
&ZCVAL              SETC '&ZCVAL TRACKTAG'      INCORRECT KEY USED      00567000
.ZG50A8             AIF   (K'&LOSSCONNDELETE LE 0).ZG50A9  OK           00567100
&ZCVAL              SETC '&ZCVAL LOSSCONNDELETE'  INCORRECT KEY USED    00567200
.ZG50A9             AIF   (K'&ETODCREATED LE 0).ZG50A10  OK             00567300
&ZCVAL              SETC '&ZCVAL ETODCREATED'   INCORRECT KEY USED      00567400
.ZG50A10            AIF   (K'&CONDITIONS LE 0).ZG50A11  OK              00567500
&ZCVAL              SETC '&ZCVAL CONDITIONS'    INCORRECT KEY USED      00567600
.ZG50A11            AIF   (K'&MUSTBE LE 0).ZG50A12  OK                  00567700
&ZCVAL              SETC '&ZCVAL MUSTBE'        INCORRECT KEY USED      00567800
.ZG50A12            AIF   (K'&ZCVAL LE 0).ZG50A13  OK                   00567900
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00568000
&ZMS                SETC  '"REQTYPE'                                    00568100
&ZMS                SETC  '&ZMS.=&REQTYPE"'                             00568200
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00568300
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00568400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00568500
.ZG50A13            ANOP  ,                                             00568600
.*-------------------------------------------------------------------   00568700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00568800
.ZG51               ANOP  ,                                             00568900
&ZTLC               SETC 'DELETE'                                       00569000
                    AIF   ('&REQTYPE(1)' NE '&ZTLC').ZG65               00569100
&XREQTYPE           SETC  'DELETE'    SET KEYWORD                       00569200
                    AIF   (N'&REQTYPE LE 1).ZG51A  CK NUM               00569300
&ZMS                SETC  '"REQTYPE='                                   00569400
&ZMS                SETC  '&ZMS.&REQTYPE"'                              00569500
&ZMS                SETC  '&ZMS "REQTYPE"'                              00569600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00569700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00569800
.ZG51A              ANOP  ,                                             00569900
.*------------------------------------------------------------------    00570000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00570100
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00570200
.ZG51A0             AIF   (K'&DESCRIPTION LE 0).ZG51A1  OK              00570300
&ZCVAL              SETC '&ZCVAL DESCRIPTION'   INCORRECT KEY USED      00570400
.ZG51A1             AIF   (K'&INFO LE 0).ZG51A2  OK                     00570500
&ZCVAL              SETC '&ZCVAL INFO'          INCORRECT KEY USED      00570600
.ZG51A2             AIF   (K'&#NOTES LE 0).ZG51A3  OK                   00570700
&ZCVAL              SETC '&ZCVAL #NOTES'        INCORRECT KEY USED      00570800
.ZG51A3             AIF   (K'&MULTIWRITE LE 0).ZG51A4  OK               00570900
&ZCVAL              SETC '&ZCVAL MULTIWRITE'    INCORRECT KEY USED      00571000
.ZG51A4             AIF   (K'&DUPLEX LE 0).ZG51A5  OK                   00571100
&ZCVAL              SETC '&ZCVAL DUPLEX'        INCORRECT KEY USED      00571200
.ZG51A5             AIF   (K'&INSTCOMP LE 0).ZG51A6  OK                 00571300
&ZCVAL              SETC '&ZCVAL INSTCOMP'      INCORRECT KEY USED      00571400
.ZG51A6             AIF   (K'&TAGGING LE 0).ZG51A7  OK                  00571500
&ZCVAL              SETC '&ZCVAL TAGGING'       INCORRECT KEY USED      00571600
.ZG51A7             AIF   (K'&TRACKTAG LE 0).ZG51A8  OK                 00571700
&ZCVAL              SETC '&ZCVAL TRACKTAG'      INCORRECT KEY USED      00571800
.ZG51A8             AIF   (K'&LOSSCONNDELETE LE 0).ZG51A9  OK           00571900
&ZCVAL              SETC '&ZCVAL LOSSCONNDELETE'  INCORRECT KEY USED    00572000
.ZG51A9             AIF   (K'&ZCVAL LE 0).ZG51A10  OK                   00572100
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00572200
&ZMS                SETC  '"REQTYPE'                                    00572300
&ZMS                SETC  '&ZMS.=&REQTYPE"'                             00572400
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00572500
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00572600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00572700
.ZG51A10            ANOP  ,                                             00572800
.*----------------------------------------------------------------***   00572900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00573000
                    AIF   (N'&ETODCREATED LE 1).ZG53A  CK NUM           00573100
&ZMS                SETC  '"ETODCREATED='                               00573200
&ZMS                SETC  '&ZMS.&ETODCREATED"'                          00573300
&ZMS                SETC  '&ZMS "ETODCREATED"'                          00573400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00573500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00573600
.ZG53A              ANOP  ,                                             00573700
.*-------------------------------------------------------------------   00573800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00573900
&ZXETODCREATED      SETC  'INPUT'     SET IN/OUTPUT                     00574000
&XETODCREATED       SETC  'ANY'                                         00574100
                    AIF   (K'&ETODCREATED(1) LE 0).ZG53B  PARM          00574200
&XETODCREATED       SETC  '&ETODCREATED(1)'     SET XVARIABLE           00574300
                    AIF   (N'&ETODCREATED GT 1).ZG53B  MULTI            00574400
&XETODCREATED       SETC  '&ETODCREATED'        SET XVARIABLE           00574500
.ZG53B              ANOP  ,                                             00574600
.*-------------------------------------------------------------------   00574700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00574800
                    AIF   (K'&ZXETODCREATED LE 0).ZG53R  NOT I/O        00574900
         AIF   ('&XETODCREATED' EQ 'ANY').ZG53R                         00575000
                    AIF   ('&XETODCREATED'(1,1) NE '(').ZG53R           00575100
&ZCGPR              SETC  '&XETODCREATED'(2,K'&XETODCREATED-2)          00575200
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG53P                  00575300
                    AIF   (K'&ZCGPR GT 2).ZG53Q                         00575400
                    AIF   ('&ZCGPR' EQ '0').ZG53Q                       00575500
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00575600
                    AIF   (T'&ZCGPR NE 'N').ZG53Q  INVALID REG NAME     00575700
.ZG53P              ANOP  ,                                             00575800
                    AIF   (T'&ZCGPR NE 'N').ZG53R  NON NUMERIC          00575900
                    AIF   ('&ZCGPR' LT '2').ZG53Q                       00576000
                    AIF   ('&ZCGPR' LE '12').ZG53R                      00576100
.ZG53Q              ANOP  ,                                             00576200
&ZMS                SETC  '"ETODCREATED='                               00576300
&ZMS                SETC  '&ZMS.&ETODCREATED"'                          00576400
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00576500
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00576600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00576700
.ZG53R              ANOP  ,                                             00576800
.*------------------------------------------------------------------    00576900
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00577000
&XCONDITIONS        SETC  ''          INITIALIZE XVARIABLE              00577100
.*-------------------------------------------------------------------   00577200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00577300
.ZG57               ANOP  ,                                             00577400
                    AIF   (K'&CONDITIONS(1) LE 0).ZG57A                 00577500
&ZTLC               SETC 'NO'                                           00577600
                    AIF   ('&CONDITIONS(1)' NE '&ZTLC').ZG58            00577700
&XCONDITIONS        SETC  'NO'        SET KEYWORD                       00577800
                    AIF   (N'&CONDITIONS LE 1).ZG57A  CK NUM            00577900
&ZMS                SETC  '"CONDITIONS='                                00578000
&ZMS                SETC  '&ZMS.&CONDITIONS"'                           00578100
&ZMS                SETC  '&ZMS "CONDITIONS"'                           00578200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00578300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00578400
.ZG57A              ANOP  ,                                             00578500
.*------------------------------------------------------------------    00578600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00578700
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00578800
.ZG57A0             AIF   (K'&MUSTBE LE 0).ZG57A1  OK                   00578900
&ZCVAL              SETC '&ZCVAL MUSTBE'        INCORRECT KEY USED      00579000
.ZG57A1             AIF   (K'&ZCVAL LE 0).ZG57A2  OK                    00579100
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00579200
&ZMS                SETC  '"CONDITIONS'                                 00579300
&ZMS                SETC  '&ZMS.=&CONDITIONS"'                          00579400
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00579500
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00579600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00579700
.ZG57A2             ANOP  ,                                             00579800
.*-------------------------------------------------------------------   00579900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00580000
.ZG58               ANOP  ,                                             00580100
&ZTLC               SETC 'YES'                                          00580200
                    AIF   ('&CONDITIONS(1)' NE '&ZTLC').ZG64            00580300
&XCONDITIONS        SETC  'YES'       SET KEYWORD                       00580400
                    AIF   (N'&CONDITIONS LE 1).ZG58A  CK NUM            00580500
&ZMS                SETC  '"CONDITIONS='                                00580600
&ZMS                SETC  '&ZMS.&CONDITIONS"'                           00580700
&ZMS                SETC  '&ZMS "CONDITIONS"'                           00580800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00580900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00581000
.ZG58A              ANOP  ,                                             00581100
.*-------------------------------------------------------------------   00581200
.***AG.KKWRD07 VALUE, RQD INPUT, ME KEYWORD -MULTIPLE KEYWORDS          00581300
&ZI                 SETA  0           XVARIABLE ARRAY INDEX             00581400
&ZJ                 SETA  0           SUBLIST INDEX                     00581500
.ZG60A              ANOP  ,                                             00581600
&ZJ                 SETA  &ZJ+1       NEXT SUBLIST                      00581700
                    AIF   (&ZJ GT N'&MUSTBE).ZG60C  DONE                00581800
                    AIF   (K'&MUSTBE(&ZJ) LE 0).ZG60A  NULL             00581900
&ZI                 SETA  &ZI+1       NEXT ARRAY ENTRY                  00582000
&XMUSTBE(&ZI)   SETC  ''              NULL ENTRY                        00582100
&XMUSTBE(&ZI+1) SETC  ''              NULL AT ARRAY END                 00582200
.ZG61B  AIF   ('&MUSTBE(&ZJ)' NE 'EMPTY').ZG62B                         00582300
&XMUSTBE(&ZI)   SETC  'EMPTY'         SET KEYWORD                       00582400
.ZG62B  AIF   ('&MUSTBE(&ZJ)' NE 'UNUSED').ZG63B                        00582500
&XMUSTBE(&ZI)   SETC  'UNUSED'        SET KEYWORD                       00582600
.ZG63B              AIF   ('&XMUSTBE(&ZI)' NE '').ZG60A                 00582700
&ZI                 SETA  &ZI-1       BACKUP ARRAY                      00582800
&ZMS                SETC  '"MUSTBE='                                    00582900
&ZMS                SETC  '&ZMS.&MUSTBE"'                               00583000
&ZMS                SETC  '&ZMS ARGUMENT &ZJ'                           00583100
&ZMS                SETC  '&ZMS IS AN UNKNOWN KEYWORD. '                00583200
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00583300
&ZMS                SETC  '&ZMS "EMPTY"'                                00583400
&ZMS                SETC  '&ZMS OR "UNUSED".'                           00583500
                    MNOTE 8,' &ZMS '                                    00583600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00583700
                    AGO   .ZG60A                                        00583800
.*-------------------------------------------------------------------   00583900
.***AG.KKWRD09 VALUE, RQD INPUT, ME KEYWORD -MULTIPLE KEYWORDS          00584000
.ZG60C              AIF   (&ZI GT 0).ZG60D      VALID                   00584100
&ZXMUSTBE           SETC  ''          RESET IN/OUTPUT                   00584200
&XMUSTBE(1)  SETC  'EMPTY'            SET DEFAULT KEYWORD               00584300
&XMUSTBE(2)  SETC  ''                 NULL AT ARRAY END                 00584400
&ZMS                SETC  'THE'                                         00584500
&ZMS                SETC  '&ZMS "MUSTBE" KEY AND ITS'                   00584600
&ZMS                SETC  '&ZMS ARGUMENT ARE REQUIRED.'                 00584700
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00584800
&ZMS                SETC  '&ZMS "EMPTY"'                                00584900
&ZMS                SETC  '&ZMS OR "UNUSED".'                           00585000
                    MNOTE 8,' &ZMS '                                    00585100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00585200
.ZG60D              ANOP  ,                                             00585300
.*------------------------------------------------------------------    00585400
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00585500
.ZG64               ANOP  ,                                             00585600
&ZXCONDITIONS       SETC  'INPUT'     SET IN/OUTPUT                     00585700
                    AIF   (K'&XCONDITIONS GT 0).ZG64E  VALID ARG        00585800
                    AIF   (T'&CONDITIONS EQ 'O').ZG64D  OMITTED         00585900
&ZASYSLNDX          SETA  0                                             00586000
.ZG64A              ANOP  ,           POSITIONAL MACRO KEY              00586100
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00586200
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG64C              00586300
&ZTLC               SETC 'CONDITIONS'                                   00586400
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG64A     00586500
.ZG64B              ANOP  ,                                             00586600
&ZXCONDITIONS       SETC  ''          RESET IN/OUTPUT                   00586700
&ZMS                SETC  'THE "CONDITIONS" KEY'                        00586800
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00586900
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00587000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00587100
                    AGO   .ZG64E                                        00587200
.ZG64C              ANOP  ,                                             00587300
&ZXCONDITIONS       SETC  ''          RESET IN/OUTPUT                   00587400
&ZMS                SETC  '"CONDITIONS='                                00587500
&ZMS                SETC  '&ZMS.&CONDITIONS"'                           00587600
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00587700
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00587800
&ZMS                SETC  '&ZMS "NO"'                                   00587900
&ZMS                SETC  '&ZMS OR "YES".'                              00588000
                    MNOTE 8,' &ZMS '                                    00588100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00588200
                    AGO   .ZG64E                                        00588300
.ZG64D              ANOP  ,                                             00588400
&XCONDITIONS        SETC  'NO'        SET DEFAULT KEYWORD               00588500
.ZG64E              ANOP  ,                                             00588600
.*------------------------------------------------------------------    00588700
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00588800
                    AIF   (K'&CONDITIONS(1) GT 0).ZG64F  PARM           00588900
&XCONDITIONS        SETC  ''          ENSURE NULL KEYWORD               00589000
&ZXCONDITIONS       SETC  ''          RESET IN/OUTPUT                   00589100
&ZMS                SETC  'THE'                                         00589200
&ZMS                SETC  '&ZMS "CONDITIONS" KEY AND ITS'               00589300
&ZMS                SETC  '&ZMS ARGUMENT ARE REQUIRED.'                 00589400
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00589500
&ZMS                SETC  '&ZMS "NO"'                                   00589600
&ZMS                SETC  '&ZMS OR "YES".'                              00589700
                    MNOTE 8,' &ZMS '                                    00589800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00589900
.ZG64F              ANOP  ,                                             00590000
.*-------------------------------------------------------------------   00590100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00590200
.ZG65               ANOP  ,                                             00590300
&ZTLC               SETC 'MODIFY'                                       00590400
                    AIF   ('&REQTYPE(1)' NE '&ZTLC').ZG69               00590500
&XREQTYPE           SETC  'MODIFY'    SET KEYWORD                       00590600
                    AIF   (N'&REQTYPE LE 1).ZG65A  CK NUM               00590700
&ZMS                SETC  '"REQTYPE='                                   00590800
&ZMS                SETC  '&ZMS.&REQTYPE"'                              00590900
&ZMS                SETC  '&ZMS "REQTYPE"'                              00591000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00591100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00591200
.ZG65A              ANOP  ,                                             00591300
.*------------------------------------------------------------------    00591400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00591500
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00591600
.ZG65A0             AIF   (K'&DESCRIPTION LE 0).ZG65A1  OK              00591700
&ZCVAL              SETC '&ZCVAL DESCRIPTION'   INCORRECT KEY USED      00591800
.ZG65A1             AIF   (K'&INFO LE 0).ZG65A2  OK                     00591900
&ZCVAL              SETC '&ZCVAL INFO'          INCORRECT KEY USED      00592000
.ZG65A2             AIF   (K'&MULTIWRITE LE 0).ZG65A3  OK               00592100
&ZCVAL              SETC '&ZCVAL MULTIWRITE'    INCORRECT KEY USED      00592200
.ZG65A3             AIF   (K'&DUPLEX LE 0).ZG65A4  OK                   00592300
&ZCVAL              SETC '&ZCVAL DUPLEX'        INCORRECT KEY USED      00592400
.ZG65A4             AIF   (K'&INSTCOMP LE 0).ZG65A5  OK                 00592500
&ZCVAL              SETC '&ZCVAL INSTCOMP'      INCORRECT KEY USED      00592600
.ZG65A5             AIF   (K'&TAGGING LE 0).ZG65A6  OK                  00592700
&ZCVAL              SETC '&ZCVAL TAGGING'       INCORRECT KEY USED      00592800
.ZG65A6             AIF   (K'&TRACKTAG LE 0).ZG65A7  OK                 00592900
&ZCVAL              SETC '&ZCVAL TRACKTAG'      INCORRECT KEY USED      00593000
.ZG65A7             AIF   (K'&LOSSCONNDELETE LE 0).ZG65A8  OK           00593100
&ZCVAL              SETC '&ZCVAL LOSSCONNDELETE'  INCORRECT KEY USED    00593200
.ZG65A8             AIF   (K'&ETODCREATED LE 0).ZG65A9  OK              00593300
&ZCVAL              SETC '&ZCVAL ETODCREATED'   INCORRECT KEY USED      00593400
.ZG65A9             AIF   (K'&CONDITIONS LE 0).ZG65A10  OK              00593500
&ZCVAL              SETC '&ZCVAL CONDITIONS'    INCORRECT KEY USED      00593600
.ZG65A10            AIF   (K'&MUSTBE LE 0).ZG65A11  OK                  00593700
&ZCVAL              SETC '&ZCVAL MUSTBE'        INCORRECT KEY USED      00593800
.ZG65A11            AIF   (K'&ZCVAL LE 0).ZG65A12  OK                   00593900
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00594000
&ZMS                SETC  '"REQTYPE'                                    00594100
&ZMS                SETC  '&ZMS.=&REQTYPE"'                             00594200
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00594300
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00594400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00594500
.ZG65A12            ANOP  ,                                             00594600
.*----------------------------------------------------------------***   00594700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00594800
                    AIF   (N'&#NOTES LE 1).ZG67A  CK NUM                00594900
&ZMS                SETC  '"#NOTES='                                    00595000
&ZMS                SETC  '&ZMS.&#NOTES"'                               00595100
&ZMS                SETC  '&ZMS "#NOTES"'                               00595200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00595300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00595400
.ZG67A              ANOP  ,                                             00595500
.*-------------------------------------------------------------------   00595600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00595700
&ZX#NOTES           SETC  'INPUT'     SET IN/OUTPUT                     00595800
&X#NOTES            SETC  '&#NOTES(1)'          SET XVARIABLE           00595900
                    AIF   (N'&#NOTES GT 1).ZG67B  MULTI                 00596000
&X#NOTES            SETC  '&#NOTES'   SET XVARIABLE                     00596100
.ZG67B              AIF   (K'&#NOTES(1) GT 0).ZG67C                     00596200
&ZX#NOTES           SETC  ''          RESET IN/OUTPUT                   00596300
&ZMS                SETC  ' '                                           00596400
&ZMS                SETC  '&ZMS "#NOTES" KEY AND ITS'                   00596500
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00596600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00596700
.ZG67C              ANOP  ,                                             00596800
.*-------------------------------------------------------------------   00596900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00597000
                    AIF   (K'&ZX#NOTES LE 0).ZG67R  NOT I/O             00597100
                    AIF   ('&X#NOTES'(1,1) NE '(').ZG67R                00597200
&ZCGPR              SETC  '&X#NOTES'(2,K'&X#NOTES-2)                    00597300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG67P                  00597400
                    AIF   (K'&ZCGPR GT 2).ZG67Q                         00597500
                    AIF   ('&ZCGPR' EQ '0').ZG67Q                       00597600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00597700
                    AIF   (T'&ZCGPR NE 'N').ZG67Q  INVALID REG NAME     00597800
.ZG67P              ANOP  ,                                             00597900
                    AIF   (T'&ZCGPR NE 'N').ZG67R  NON NUMERIC          00598000
                    AIF   ('&ZCGPR' LT '2').ZG67Q                       00598100
                    AIF   ('&ZCGPR' LE '12').ZG67R                      00598200
.ZG67Q              ANOP  ,                                             00598300
&ZMS                SETC  '"#NOTES='                                    00598400
&ZMS                SETC  '&ZMS.&#NOTES"'                               00598500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00598600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00598700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00598800
.ZG67R              ANOP  ,                                             00598900
.*------------------------------------------------------------------    00599000
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00599100
.ZG69               ANOP  ,                                             00599200
&ZXREQTYPE          SETC  'INPUT'     SET IN/OUTPUT                     00599300
                    AIF   (K'&XREQTYPE GT 0).ZG69E  VALID ARG           00599400
                    AIF   (T'&REQTYPE EQ 'O').ZG69D  OMITTED            00599500
&ZASYSLNDX          SETA  0                                             00599600
.ZG69A              ANOP  ,           POSITIONAL MACRO KEY              00599700
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00599800
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG69C              00599900
&ZTLC               SETC 'REQTYPE'                                      00600000
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG69A     00600100
.ZG69B              ANOP  ,                                             00600200
&ZXREQTYPE          SETC  ''          RESET IN/OUTPUT                   00600300
&ZMS                SETC  'THE "REQTYPE" KEY'                           00600400
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00600500
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00600600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00600700
                    AGO   .ZG69E                                        00600800
.ZG69C              ANOP  ,                                             00600900
&ZXREQTYPE          SETC  ''          RESET IN/OUTPUT                   00601000
&ZMS                SETC  '"REQTYPE='                                   00601100
&ZMS                SETC  '&ZMS.&REQTYPE"'                              00601200
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00601300
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00601400
&ZMS                SETC  '&ZMS "CREATE",'                              00601500
&ZMS                SETC  '&ZMS "QUERY",'                               00601600
&ZMS                SETC  '&ZMS "DELETE",'                              00601700
&ZMS                SETC  '&ZMS OR "MODIFY".'                           00601800
                    MNOTE 8,' &ZMS '                                    00601900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00602000
                    AGO   .ZG69E                                        00602100
.ZG69D              ANOP  ,                                             00602200
&XREQTYPE           SETC  'CREATE'    SET DEFAULT KEYWORD               00602300
.ZG69E              ANOP  ,                                             00602400
.*------------------------------------------------------------------    00602500
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00602600
                    AIF   (K'&REQTYPE(1) GT 0).ZG69F  PARM              00602700
&XREQTYPE           SETC  ''          ENSURE NULL KEYWORD               00602800
&ZXREQTYPE          SETC  ''          RESET IN/OUTPUT                   00602900
&ZMS                SETC  'THE'                                         00603000
&ZMS                SETC  '&ZMS "REQTYPE" KEY AND ITS'                  00603100
&ZMS                SETC  '&ZMS ARGUMENT ARE REQUIRED.'                 00603200
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00603300
&ZMS                SETC  '&ZMS "CREATE",'                              00603400
&ZMS                SETC  '&ZMS "QUERY",'                               00603500
&ZMS                SETC  '&ZMS "DELETE",'                              00603600
&ZMS                SETC  '&ZMS OR "MODIFY".'                           00603700
                    MNOTE 8,' &ZMS '                                    00603800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00603900
.ZG69F              ANOP  ,                                             00604000
.*----------------------------------------------------------------***   00604100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00604200
                    AIF   (N'&TIMEOUT LE 1).ZG71A  CK NUM               00604300
&ZMS                SETC  '"TIMEOUT='                                   00604400
&ZMS                SETC  '&ZMS.&TIMEOUT"'                              00604500
&ZMS                SETC  '&ZMS "TIMEOUT"'                              00604600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00604700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00604800
.ZG71A              ANOP  ,                                             00604900
.*-------------------------------------------------------------------   00605000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00605100
&ZXTIMEOUT          SETC  'INPUT'     SET IN/OUTPUT                     00605200
&XTIMEOUT           SETC  'XCF'                                         00605300
                    AIF   (K'&TIMEOUT(1) LE 0).ZG71B  PARM              00605400
&XTIMEOUT           SETC  '&TIMEOUT(1)'         SET XVARIABLE           00605500
                    AIF   (N'&TIMEOUT GT 1).ZG71B  MULTI                00605600
&XTIMEOUT           SETC  '&TIMEOUT'  SET XVARIABLE                     00605700
.ZG71B              ANOP  ,                                             00605800
.*-------------------------------------------------------------------   00605900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00606000
                    AIF   (K'&ZXTIMEOUT LE 0).ZG71R  NOT I/O            00606100
         AIF   ('&XTIMEOUT' EQ 'XCF').ZG71R                             00606200
                    AIF   ('&XTIMEOUT'(1,1) NE '(').ZG71R               00606300
&ZCGPR              SETC  '&XTIMEOUT'(2,K'&XTIMEOUT-2)                  00606400
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG71P                  00606500
                    AIF   (K'&ZCGPR GT 2).ZG71Q                         00606600
                    AIF   ('&ZCGPR' EQ '0').ZG71Q                       00606700
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00606800
                    AIF   (T'&ZCGPR NE 'N').ZG71Q  INVALID REG NAME     00606900
.ZG71P              ANOP  ,                                             00607000
                    AIF   (T'&ZCGPR NE 'N').ZG71R  NON NUMERIC          00607100
                    AIF   ('&ZCGPR' LT '2').ZG71Q                       00607200
                    AIF   ('&ZCGPR' LE '12').ZG71R                      00607300
.ZG71Q              ANOP  ,                                             00607400
&ZMS                SETC  '"TIMEOUT='                                   00607500
&ZMS                SETC  '&ZMS.&TIMEOUT"'                              00607600
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00607700
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00607800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00607900
.ZG71R              ANOP  ,                                             00608000
.*-------------------------------------------------------------------   00608100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00608200
.ZG73               ANOP  ,                                             00608300
&ZTLC               SETC 'CONNECTION'                                   00608400
                    AIF   ('&REQUEST(1)' NE '&ZTLC').ZG116              00608500
&XREQUEST           SETC  'CONNECTION'          SET KEYWORD             00608600
                    AIF   (N'&REQUEST LE 1).ZG73A  CK NUM               00608700
&ZMS                SETC  '"REQUEST='                                   00608800
&ZMS                SETC  '&ZMS.&REQUEST"'                              00608900
&ZMS                SETC  '&ZMS "REQUEST"'                              00609000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00609100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00609200
.ZG73A              ANOP  ,                                             00609300
.*------------------------------------------------------------------    00609400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00609500
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00609600
.ZG73A0             AIF   (K'&#NOTES LE 0).ZG73A1  OK                   00609700
&ZCVAL              SETC '&ZCVAL #NOTES'        INCORRECT KEY USED      00609800
.ZG73A1             AIF   (K'&MULTIWRITE LE 0).ZG73A2  OK               00609900
&ZCVAL              SETC '&ZCVAL MULTIWRITE'    INCORRECT KEY USED      00610000
.ZG73A2             AIF   (K'&DUPLEX LE 0).ZG73A3  OK                   00610100
&ZCVAL              SETC '&ZCVAL DUPLEX'        INCORRECT KEY USED      00610200
.ZG73A3             AIF   (K'&INSTCOMP LE 0).ZG73A4  OK                 00610300
&ZCVAL              SETC '&ZCVAL INSTCOMP'      INCORRECT KEY USED      00610400
.ZG73A4             AIF   (K'&TAGGING LE 0).ZG73A5  OK                  00610500
&ZCVAL              SETC '&ZCVAL TAGGING'       INCORRECT KEY USED      00610600
.ZG73A5             AIF   (K'&TRACKTAG LE 0).ZG73A6  OK                 00610700
&ZCVAL              SETC '&ZCVAL TRACKTAG'      INCORRECT KEY USED      00610800
.ZG73A6             AIF   (K'&LOSSCONNDELETE LE 0).ZG73A7  OK           00610900
&ZCVAL              SETC '&ZCVAL LOSSCONNDELETE'  INCORRECT KEY USED    00611000
.ZG73A7             AIF   (K'&ETODCREATED LE 0).ZG73A8  OK              00611100
&ZCVAL              SETC '&ZCVAL ETODCREATED'   INCORRECT KEY USED      00611200
.ZG73A8             AIF   (K'&CONDITIONS LE 0).ZG73A9  OK               00611300
&ZCVAL              SETC '&ZCVAL CONDITIONS'    INCORRECT KEY USED      00611400
.ZG73A9             AIF   (K'&MUSTBE LE 0).ZG73A10  OK                  00611500
&ZCVAL              SETC '&ZCVAL MUSTBE'        INCORRECT KEY USED      00611600
.ZG73A10            AIF   (K'&NAME LE 0).ZG73A11  OK                    00611700
&ZCVAL              SETC '&ZCVAL NAME'          INCORRECT KEY USED      00611800
.ZG73A11            AIF   (K'&TAG LE 0).ZG73A12  OK                     00611900
&ZCVAL              SETC '&ZCVAL TAG'           INCORRECT KEY USED      00612000
.ZG73A12            AIF   (K'&INSTANCE# LE 0).ZG73A13  OK               00612100
&ZCVAL              SETC '&ZCVAL INSTANCE#'     INCORRECT KEY USED      00612200
.ZG73A13            AIF   (K'&KEEPNOTE LE 0).ZG73A14  OK                00612300
&ZCVAL              SETC '&ZCVAL KEEPNOTE'      INCORRECT KEY USED      00612400
.ZG73A14            AIF   (K'&XNOBUFFER LE 0).ZG73A15  OK               00612500
&ZCVAL              SETC '&ZCVAL NOBUFFER'      INCORRECT KEY USED      00612600
.ZG73A15            AIF   (K'&BUFFER LE 0).ZG73A16  OK                  00612700
&ZCVAL              SETC '&ZCVAL BUFFER'        INCORRECT KEY USED      00612800
.ZG73A16            AIF   (K'&BUFLEN LE 0).ZG73A17  OK                  00612900
&ZCVAL              SETC '&ZCVAL BUFLEN'        INCORRECT KEY USED      00613000
.ZG73A17            AIF   (K'&RESUMETOKEN LE 0).ZG73A18  OK             00613100
&ZCVAL              SETC '&ZCVAL RESUMETOKEN'   INCORRECT KEY USED      00613200
.ZG73A18            AIF   (K'&MAXTAG LE 0).ZG73A19  OK                  00613300
&ZCVAL              SETC '&ZCVAL MAXTAG'        INCORRECT KEY USED      00613400
.ZG73A19            AIF   (K'&CHOOSE LE 0).ZG73A20  OK                  00613500
&ZCVAL              SETC '&ZCVAL CHOOSE'        INCORRECT KEY USED      00613600
.ZG73A20            AIF   (K'&CRITERIA LE 0).ZG73A21  OK                00613700
&ZCVAL              SETC '&ZCVAL CRITERIA'      INCORRECT KEY USED      00613800
.ZG73A21            AIF   (K'&ZCVAL LE 0).ZG73A22  OK                   00613900
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00614000
                    AIF  (K'&ZCVAL LE 160).ZG73A22A                     00614100
&ZCVAL              SETC '&ZCVAL'(1,160)                                00614200
&ZCVAL              SETC '&ZCVAL....'                                   00614300
.ZG73A22A           ANOP                                                00614400
&ZMS                SETC  '"REQUEST'                                    00614500
&ZMS                SETC  '&ZMS.=&REQUEST"'                             00614600
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00614700
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00614800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00614900
.ZG73A22            ANOP  ,                                             00615000
.*----------------------------------------------------------------***   00615100
.***AG.KXVAR05 NAME, RQD INOUT, KEYS -XVARIABLE KEY                     00615200
                    AIF   (N'&CONNECTION LE 1).ZG75A  CK NUM            00615300
&ZMS                SETC  '"CONNECTION='                                00615400
&ZMS                SETC  '&ZMS.&CONNECTION"'                           00615500
&ZMS                SETC  '&ZMS "CONNECTION"'                           00615600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00615700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00615800
.ZG75A              ANOP  ,                                             00615900
.*-------------------------------------------------------------------   00616000
.***AG.KXVAR06 NAME, RQD INOUT, KEYS -XVARIABLE                         00616100
&ZXCONNECTION       SETC  'INOUT'     SET IN/OUTPUT                     00616200
&XCONNECTION        SETC  '&CONNECTION(1)'      SET XVARIABLE           00616300
                    AIF   (N'&CONNECTION GT 1).ZG75B  MULTI             00616400
&XCONNECTION        SETC  '&CONNECTION'         SET XVARIABLE           00616500
.ZG75B              AIF   (K'&CONNECTION(1) GT 0).ZG75C                 00616600
&ZXCONNECTION       SETC  ''          RESET IN/OUTPUT                   00616700
&ZMS                SETC  ' '                                           00616800
&ZMS                SETC  '&ZMS "CONNECTION" KEY AND ITS'               00616900
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00617000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00617100
.ZG75C              ANOP  ,                                             00617200
.*-------------------------------------------------------------------   00617300
.***AG.KCK02 NAME, RQD INOUT, KEYS -GPR OUT OF RANGE                    00617400
                    AIF   (K'&ZXCONNECTION LE 0).ZG75R  NOT I/O         00617500
                    AIF   ('&XCONNECTION'(1,1) NE '(').ZG75R            00617600
&ZCGPR              SETC  '&XCONNECTION'(2,K'&XCONNECTION-2)            00617700
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG75P                  00617800
                    AIF   (K'&ZCGPR GT 2).ZG75Q                         00617900
                    AIF   ('&ZCGPR' EQ '0').ZG75Q                       00618000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00618100
                    AIF   (T'&ZCGPR NE 'N').ZG75Q  INVALID REG NAME     00618200
.ZG75P              ANOP  ,                                             00618300
                    AIF   (T'&ZCGPR NE 'N').ZG75R  NON NUMERIC          00618400
                    AIF   ('&ZCGPR' LT '2').ZG75Q                       00618500
                    AIF   ('&ZCGPR' LE '12').ZG75R                      00618600
.ZG75Q              ANOP  ,                                             00618700
&ZMS                SETC  '"CONNECTION='                                00618800
&ZMS                SETC  '&ZMS.&CONNECTION"'                           00618900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00619000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00619100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00619200
.ZG75R              ANOP  ,                                             00619300
.*------------------------------------------------------------------    00619400
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00619500
&XREQTYPE           SETC  ''          INITIALIZE XVARIABLE              00619600
.*-------------------------------------------------------------------   00619700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00619800
.ZG79               ANOP  ,                                             00619900
                    AIF   (K'&REQTYPE(1) LE 0).ZG79A                    00620000
&ZTLC               SETC 'CREATE'                                       00620100
                    AIF   ('&REQTYPE(1)' NE '&ZTLC').ZG109              00620200
&XREQTYPE           SETC  'CREATE'    SET KEYWORD                       00620300
                    AIF   (N'&REQTYPE LE 1).ZG79A  CK NUM               00620400
&ZMS                SETC  '"REQTYPE='                                   00620500
&ZMS                SETC  '&ZMS.&REQTYPE"'                              00620600
&ZMS                SETC  '&ZMS "REQTYPE"'                              00620700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00620800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00620900
.ZG79A              ANOP  ,                                             00621000
.*----------------------------------------------------------------***   00621100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00621200
                    AIF   (N'&NOTEPAD LE 1).ZG81A  CK NUM               00621300
&ZMS                SETC  '"NOTEPAD='                                   00621400
&ZMS                SETC  '&ZMS.&NOTEPAD"'                              00621500
&ZMS                SETC  '&ZMS "NOTEPAD"'                              00621600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00621700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00621800
.ZG81A              ANOP  ,                                             00621900
.*-------------------------------------------------------------------   00622000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00622100
&ZXNOTEPAD          SETC  'INPUT'     SET IN/OUTPUT                     00622200
&XNOTEPAD           SETC  '&NOTEPAD(1)'         SET XVARIABLE           00622300
                    AIF   (N'&NOTEPAD GT 1).ZG81B  MULTI                00622400
&XNOTEPAD           SETC  '&NOTEPAD'  SET XVARIABLE                     00622500
.ZG81B              AIF   (K'&NOTEPAD(1) GT 0).ZG81C                    00622600
&ZXNOTEPAD          SETC  ''          RESET IN/OUTPUT                   00622700
&ZMS                SETC  ' '                                           00622800
&ZMS                SETC  '&ZMS "NOTEPAD" KEY AND ITS'                  00622900
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00623000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00623100
.ZG81C              ANOP  ,                                             00623200
.*-------------------------------------------------------------------   00623300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00623400
                    AIF   (K'&ZXNOTEPAD LE 0).ZG81R  NOT I/O            00623500
                    AIF   ('&XNOTEPAD'(1,1) NE '(').ZG81R               00623600
&ZCGPR              SETC  '&XNOTEPAD'(2,K'&XNOTEPAD-2)                  00623700
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG81P                  00623800
                    AIF   (K'&ZCGPR GT 2).ZG81Q                         00623900
                    AIF   ('&ZCGPR' EQ '0').ZG81Q                       00624000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00624100
                    AIF   (T'&ZCGPR NE 'N').ZG81Q  INVALID REG NAME     00624200
.ZG81P              ANOP  ,                                             00624300
                    AIF   (T'&ZCGPR NE 'N').ZG81R  NON NUMERIC          00624400
                    AIF   ('&ZCGPR' LT '2').ZG81Q                       00624500
                    AIF   ('&ZCGPR' LE '12').ZG81R                      00624600
.ZG81Q              ANOP  ,                                             00624700
&ZMS                SETC  '"NOTEPAD='                                   00624800
&ZMS                SETC  '&ZMS.&NOTEPAD"'                              00624900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00625000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00625100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00625200
.ZG81R              ANOP  ,                                             00625300
.*----------------------------------------------------------------***   00625400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00625500
                    AIF   (N'&DESCRIPTION LE 1).ZG84A  CK NUM           00625600
&ZMS                SETC  '"DESCRIPTION='                               00625700
&ZMS                SETC  '&ZMS.&DESCRIPTION"'                          00625800
&ZMS                SETC  '&ZMS "DESCRIPTION"'                          00625900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00626000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00626100
.ZG84A              ANOP  ,                                             00626200
.*-------------------------------------------------------------------   00626300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00626400
&ZXDESCRIPTION      SETC  'INPUT'     SET IN/OUTPUT                     00626500
&XDESCRIPTION       SETC  '&DESCRIPTION(1)'     SET XVARIABLE           00626600
                    AIF   (N'&DESCRIPTION GT 1).ZG84B  MULTI            00626700
&XDESCRIPTION       SETC  '&DESCRIPTION'        SET XVARIABLE           00626800
.ZG84B              AIF   (K'&DESCRIPTION(1) GT 0).ZG84C                00626900
&ZXDESCRIPTION      SETC  ''          RESET IN/OUTPUT                   00627000
&ZMS                SETC  ' '                                           00627100
&ZMS                SETC  '&ZMS "DESCRIPTION" KEY AND ITS'              00627200
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00627300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00627400
.ZG84C              ANOP  ,                                             00627500
.*-------------------------------------------------------------------   00627600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00627700
                    AIF   (K'&ZXDESCRIPTION LE 0).ZG84R  NOT I/O        00627800
                    AIF   ('&XDESCRIPTION'(1,1) NE '(').ZG84R           00627900
&ZCGPR              SETC  '&XDESCRIPTION'(2,K'&XDESCRIPTION-2)          00628000
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG84P                  00628100
                    AIF   (K'&ZCGPR GT 2).ZG84Q                         00628200
                    AIF   ('&ZCGPR' EQ '0').ZG84Q                       00628300
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00628400
                    AIF   (T'&ZCGPR NE 'N').ZG84Q  INVALID REG NAME     00628500
.ZG84P              ANOP  ,                                             00628600
                    AIF   (T'&ZCGPR NE 'N').ZG84R  NON NUMERIC          00628700
                    AIF   ('&ZCGPR' LT '2').ZG84Q                       00628800
                    AIF   ('&ZCGPR' LE '12').ZG84R                      00628900
.ZG84Q              ANOP  ,                                             00629000
&ZMS                SETC  '"DESCRIPTION='                               00629100
&ZMS                SETC  '&ZMS.&DESCRIPTION"'                          00629200
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00629300
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00629400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00629500
.ZG84R              ANOP  ,                                             00629600
.*----------------------------------------------------------------***   00629700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00629800
                    AIF   (N'&INFO LE 1).ZG87A  CK NUM                  00629900
&ZMS                SETC  '"INFO='                                      00630000
&ZMS                SETC  '&ZMS.&INFO"'                                 00630100
&ZMS                SETC  '&ZMS "INFO"'                                 00630200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00630300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00630400
.ZG87A              ANOP  ,                                             00630500
.*-------------------------------------------------------------------   00630600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00630700
&ZXINFO             SETC  'INPUT'     SET IN/OUTPUT                     00630800
&XINFO              SETC  '0'                                           00630900
                    AIF   (K'&INFO(1) LE 0).ZG87B  PARM                 00631000
&XINFO              SETC  '&INFO(1)'  SET XVARIABLE                     00631100
                    AIF   (N'&INFO GT 1).ZG87B  MULTI                   00631200
&XINFO              SETC  '&INFO'     SET XVARIABLE                     00631300
.ZG87B              ANOP  ,                                             00631400
.*-------------------------------------------------------------------   00631500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00631600
                    AIF   (K'&ZXINFO LE 0).ZG87R  NOT I/O               00631700
                    AIF   ('&XINFO'(1,1) NE '(').ZG87R                  00631800
&ZCGPR              SETC  '&XINFO'(2,K'&XINFO-2)                        00631900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG87P                  00632000
                    AIF   (K'&ZCGPR GT 2).ZG87Q                         00632100
                    AIF   ('&ZCGPR' EQ '0').ZG87Q                       00632200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00632300
                    AIF   (T'&ZCGPR NE 'N').ZG87Q  INVALID REG NAME     00632400
.ZG87P              ANOP  ,                                             00632500
                    AIF   (T'&ZCGPR NE 'N').ZG87R  NON NUMERIC          00632600
                    AIF   ('&ZCGPR' LT '2').ZG87Q                       00632700
                    AIF   ('&ZCGPR' LE '12').ZG87R                      00632800
.ZG87Q              ANOP  ,                                             00632900
&ZMS                SETC  '"INFO='                                      00633000
&ZMS                SETC  '&ZMS.&INFO"'                                 00633100
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00633200
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00633300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00633400
.ZG87R              ANOP  ,                                             00633500
.*------------------------------------------------------------------    00633600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00633700
&XACCESS            SETC  ''          INITIALIZE XVARIABLE              00633800
.*-------------------------------------------------------------------   00633900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00634000
.ZG91               ANOP  ,                                             00634100
                    AIF   (K'&ACCESS(1) LE 0).ZG91A                     00634200
&ZTLC               SETC 'UPDATE'                                       00634300
                    AIF   ('&ACCESS(1)' NE '&ZTLC').ZG92                00634400
&XACCESS            SETC  'UPDATE'    SET KEYWORD                       00634500
                    AIF   (N'&ACCESS LE 1).ZG91A  CK NUM                00634600
&ZMS                SETC  '"ACCESS='                                    00634700
&ZMS                SETC  '&ZMS.&ACCESS"'                               00634800
&ZMS                SETC  '&ZMS "ACCESS"'                               00634900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00635000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00635100
.ZG91A              ANOP  ,                                             00635200
.*-------------------------------------------------------------------   00635300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00635400
.ZG92               ANOP  ,                                             00635500
&ZTLC               SETC 'READ'                                         00635600
                    AIF   ('&ACCESS(1)' NE '&ZTLC').ZG93                00635700
&XACCESS            SETC  'READ'      SET KEYWORD                       00635800
                    AIF   (N'&ACCESS LE 1).ZG92A  CK NUM                00635900
&ZMS                SETC  '"ACCESS='                                    00636000
&ZMS                SETC  '&ZMS.&ACCESS"'                               00636100
&ZMS                SETC  '&ZMS "ACCESS"'                               00636200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00636300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00636400
.ZG92A              ANOP  ,                                             00636500
.*------------------------------------------------------------------    00636600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00636700
.ZG93               ANOP  ,                                             00636800
&ZXACCESS           SETC  'INPUT'     SET IN/OUTPUT                     00636900
                    AIF   (K'&XACCESS GT 0).ZG93E  VALID ARG            00637000
                    AIF   (T'&ACCESS EQ 'O').ZG93D  OMITTED             00637100
&ZASYSLNDX          SETA  0                                             00637200
.ZG93A              ANOP  ,           POSITIONAL MACRO KEY              00637300
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00637400
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG93C              00637500
&ZTLC               SETC 'ACCESS'                                       00637600
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG93A     00637700
.ZG93B              ANOP  ,                                             00637800
&ZXACCESS           SETC  ''          RESET IN/OUTPUT                   00637900
&ZMS                SETC  'THE "ACCESS" KEY'                            00638000
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00638100
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00638200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00638300
                    AGO   .ZG93E                                        00638400
.ZG93C              ANOP  ,                                             00638500
&ZXACCESS           SETC  ''          RESET IN/OUTPUT                   00638600
&ZMS                SETC  '"ACCESS='                                    00638700
&ZMS                SETC  '&ZMS.&ACCESS"'                               00638800
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00638900
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00639000
&ZMS                SETC  '&ZMS "UPDATE"'                               00639100
&ZMS                SETC  '&ZMS OR "READ".'                             00639200
                    MNOTE 8,' &ZMS '                                    00639300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00639400
                    AGO   .ZG93E                                        00639500
.ZG93D              ANOP  ,                                             00639600
&XACCESS            SETC  'UPDATE'    SET DEFAULT KEYWORD               00639700
.ZG93E              ANOP  ,                                             00639800
.*------------------------------------------------------------------    00639900
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00640000
&XTERMSCOPE         SETC  ''          INITIALIZE XVARIABLE              00640100
.*-------------------------------------------------------------------   00640200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00640300
.ZG96               ANOP  ,                                             00640400
                    AIF   (K'&TERMSCOPE(1) LE 0).ZG96A                  00640500
&ZTLC               SETC 'TASK'                                         00640600
                    AIF   ('&TERMSCOPE(1)' NE '&ZTLC').ZG100            00640700
&XTERMSCOPE         SETC  'TASK'      SET KEYWORD                       00640800
                    AIF   (N'&TERMSCOPE LE 1).ZG96A  CK NUM             00640900
&ZMS                SETC  '"TERMSCOPE='                                 00641000
&ZMS                SETC  '&ZMS.&TERMSCOPE"'                            00641100
&ZMS                SETC  '&ZMS "TERMSCOPE"'                            00641200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00641300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00641400
.ZG96A              ANOP  ,                                             00641500
.*----------------------------------------------------------------***   00641600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00641700
                    AIF   (N'&TTOKEN LE 1).ZG98A  CK NUM                00641800
&ZMS                SETC  '"TTOKEN='                                    00641900
&ZMS                SETC  '&ZMS.&TTOKEN"'                               00642000
&ZMS                SETC  '&ZMS "TTOKEN"'                               00642100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00642200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00642300
.ZG98A              ANOP  ,                                             00642400
.*-------------------------------------------------------------------   00642500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00642600
&ZXTTOKEN           SETC  'INPUT'     SET IN/OUTPUT                     00642700
&XTTOKEN            SETC  'CURRENT'                                     00642800
                    AIF   (K'&TTOKEN(1) LE 0).ZG98B  PARM               00642900
&XTTOKEN            SETC  '&TTOKEN(1)'          SET XVARIABLE           00643000
                    AIF   (N'&TTOKEN GT 1).ZG98B  MULTI                 00643100
&XTTOKEN            SETC  '&TTOKEN'   SET XVARIABLE                     00643200
.ZG98B              ANOP  ,                                             00643300
.*-------------------------------------------------------------------   00643400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00643500
                    AIF   (K'&ZXTTOKEN LE 0).ZG98R  NOT I/O             00643600
         AIF   ('&XTTOKEN' EQ 'CURRENT').ZG98R                          00643700
                    AIF   ('&XTTOKEN'(1,1) NE '(').ZG98R                00643800
&ZCGPR              SETC  '&XTTOKEN'(2,K'&XTTOKEN-2)                    00643900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG98P                  00644000
                    AIF   (K'&ZCGPR GT 2).ZG98Q                         00644100
                    AIF   ('&ZCGPR' EQ '0').ZG98Q                       00644200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00644300
                    AIF   (T'&ZCGPR NE 'N').ZG98Q  INVALID REG NAME     00644400
.ZG98P              ANOP  ,                                             00644500
                    AIF   (T'&ZCGPR NE 'N').ZG98R  NON NUMERIC          00644600
                    AIF   ('&ZCGPR' LT '2').ZG98Q                       00644700
                    AIF   ('&ZCGPR' LE '12').ZG98R                      00644800
.ZG98Q              ANOP  ,                                             00644900
&ZMS                SETC  '"TTOKEN='                                    00645000
&ZMS                SETC  '&ZMS.&TTOKEN"'                               00645100
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00645200
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00645300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00645400
.ZG98R              ANOP  ,                                             00645500
.*-------------------------------------------------------------------   00645600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00645700
.ZG100              ANOP  ,                                             00645800
&ZTLC               SETC 'HOME'                                         00645900
                    AIF   ('&TERMSCOPE(1)' NE '&ZTLC').ZG101            00646000
&XTERMSCOPE         SETC  'HOME'      SET KEYWORD                       00646100
                    AIF   (N'&TERMSCOPE LE 1).ZG100A  CK NUM            00646200
&ZMS                SETC  '"TERMSCOPE='                                 00646300
&ZMS                SETC  '&ZMS.&TERMSCOPE"'                            00646400
&ZMS                SETC  '&ZMS "TERMSCOPE"'                            00646500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00646600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00646700
.ZG100A             ANOP  ,                                             00646800
.*------------------------------------------------------------------    00646900
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00647000
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00647100
.ZG100A0            AIF   (K'&TTOKEN LE 0).ZG100A1  OK                  00647200
&ZCVAL              SETC '&ZCVAL TTOKEN'        INCORRECT KEY USED      00647300
.ZG100A1            AIF   (K'&ZCVAL LE 0).ZG100A2  OK                   00647400
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00647500
&ZMS                SETC  '"TERMSCOPE'                                  00647600
&ZMS                SETC  '&ZMS.=&TERMSCOPE"'                           00647700
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00647800
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00647900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00648000
.ZG100A2            ANOP  ,                                             00648100
.*-------------------------------------------------------------------   00648200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00648300
.ZG101              ANOP  ,                                             00648400
&ZTLC               SETC 'PRIMARY'                                      00648500
                    AIF   ('&TERMSCOPE(1)' NE '&ZTLC').ZG102            00648600
&XTERMSCOPE         SETC  'PRIMARY'   SET KEYWORD                       00648700
                    AIF   (N'&TERMSCOPE LE 1).ZG101A  CK NUM            00648800
&ZMS                SETC  '"TERMSCOPE='                                 00648900
&ZMS                SETC  '&ZMS.&TERMSCOPE"'                            00649000
&ZMS                SETC  '&ZMS "TERMSCOPE"'                            00649100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00649200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00649300
.ZG101A             ANOP  ,                                             00649400
.*------------------------------------------------------------------    00649500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00649600
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00649700
.ZG101A0            AIF   (K'&TTOKEN LE 0).ZG101A1  OK                  00649800
&ZCVAL              SETC '&ZCVAL TTOKEN'        INCORRECT KEY USED      00649900
.ZG101A1            AIF   (K'&ZCVAL LE 0).ZG101A2  OK                   00650000
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00650100
&ZMS                SETC  '"TERMSCOPE'                                  00650200
&ZMS                SETC  '&ZMS.=&TERMSCOPE"'                           00650300
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00650400
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00650500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00650600
.ZG101A2            ANOP  ,                                             00650700
.*------------------------------------------------------------------    00650800
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00650900
.ZG102              ANOP  ,                                             00651000
&ZXTERMSCOPE        SETC  'INPUT'     SET IN/OUTPUT                     00651100
                    AIF   (K'&XTERMSCOPE GT 0).ZG102E  VALID ARG        00651200
                    AIF   (T'&TERMSCOPE EQ 'O').ZG102D  OMITTED         00651300
&ZASYSLNDX          SETA  0                                             00651400
.ZG102A             ANOP  ,           POSITIONAL MACRO KEY              00651500
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00651600
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG102C             00651700
&ZTLC               SETC 'TERMSCOPE'                                    00651800
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG102A    00651900
.ZG102B             ANOP  ,                                             00652000
&ZXTERMSCOPE        SETC  ''          RESET IN/OUTPUT                   00652100
&ZMS                SETC  'THE "TERMSCOPE" KEY'                         00652200
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00652300
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00652400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00652500
                    AGO   .ZG102E                                       00652600
.ZG102C             ANOP  ,                                             00652700
&ZXTERMSCOPE        SETC  ''          RESET IN/OUTPUT                   00652800
&ZMS                SETC  '"TERMSCOPE='                                 00652900
&ZMS                SETC  '&ZMS.&TERMSCOPE"'                            00653000
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00653100
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00653200
&ZMS                SETC  '&ZMS "TASK",'                                00653300
&ZMS                SETC  '&ZMS "HOME",'                                00653400
&ZMS                SETC  '&ZMS OR "PRIMARY".'                          00653500
                    MNOTE 8,' &ZMS '                                    00653600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00653700
                    AGO   .ZG102E                                       00653800
.ZG102D             ANOP  ,                                             00653900
&XTERMSCOPE         SETC  'TASK'      SET DEFAULT KEYWORD               00654000
.ZG102E             ANOP  ,                                             00654100
.*------------------------------------------------------------------    00654200
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00654300
                    AIF   (K'&TERMSCOPE(1) GT 0).ZG102F  PARM           00654400
&XTERMSCOPE         SETC  ''          ENSURE NULL KEYWORD               00654500
&ZXTERMSCOPE        SETC  ''          RESET IN/OUTPUT                   00654600
&ZMS                SETC  'THE'                                         00654700
&ZMS                SETC  '&ZMS "TERMSCOPE" KEY AND ITS'                00654800
&ZMS                SETC  '&ZMS ARGUMENT ARE REQUIRED.'                 00654900
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00655000
&ZMS                SETC  '&ZMS "TASK",'                                00655100
&ZMS                SETC  '&ZMS "HOME",'                                00655200
&ZMS                SETC  '&ZMS OR "PRIMARY".'                          00655300
                    MNOTE 8,' &ZMS '                                    00655400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00655500
.ZG102F             ANOP  ,                                             00655600
.*------------------------------------------------------------------    00655700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00655800
&XUSAGE             SETC  ''          INITIALIZE XVARIABLE              00655900
.*-------------------------------------------------------------------   00656000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00656100
.ZG105              ANOP  ,                                             00656200
                    AIF   (K'&USAGE(1) LE 0).ZG105A                     00656300
&ZTLC               SETC 'CONNECTOR'                                    00656400
                    AIF   ('&USAGE(1)' NE '&ZTLC').ZG106                00656500
&XUSAGE             SETC  'CONNECTOR'           SET KEYWORD             00656600
                    AIF   (N'&USAGE LE 1).ZG105A  CK NUM                00656700
&ZMS                SETC  '"USAGE='                                     00656800
&ZMS                SETC  '&ZMS.&USAGE"'                                00656900
&ZMS                SETC  '&ZMS "USAGE"'                                00657000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00657100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00657200
.ZG105A             ANOP  ,                                             00657300
.*-------------------------------------------------------------------   00657400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00657500
.ZG106              ANOP  ,                                             00657600
&ZTLC               SETC 'SERVER'                                       00657700
                    AIF   ('&USAGE(1)' NE '&ZTLC').ZG107                00657800
&XUSAGE             SETC  'SERVER'    SET KEYWORD                       00657900
                    AIF   (N'&USAGE LE 1).ZG106A  CK NUM                00658000
&ZMS                SETC  '"USAGE='                                     00658100
&ZMS                SETC  '&ZMS.&USAGE"'                                00658200
&ZMS                SETC  '&ZMS "USAGE"'                                00658300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00658400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00658500
.ZG106A             ANOP  ,                                             00658600
.*-------------------------------------------------------------------   00658700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00658800
.ZG107              ANOP  ,                                             00658900
&ZTLC               SETC 'CLIENT'                                       00659000
                    AIF   ('&USAGE(1)' NE '&ZTLC').ZG108                00659100
&XUSAGE             SETC  'CLIENT'    SET KEYWORD                       00659200
                    AIF   (N'&USAGE LE 1).ZG107A  CK NUM                00659300
&ZMS                SETC  '"USAGE='                                     00659400
&ZMS                SETC  '&ZMS.&USAGE"'                                00659500
&ZMS                SETC  '&ZMS "USAGE"'                                00659600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00659700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00659800
.ZG107A             ANOP  ,                                             00659900
.*------------------------------------------------------------------    00660000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00660100
.ZG108              ANOP  ,                                             00660200
&ZXUSAGE            SETC  'INPUT'     SET IN/OUTPUT                     00660300
                    AIF   (K'&XUSAGE GT 0).ZG108E  VALID ARG            00660400
                    AIF   (T'&USAGE EQ 'O').ZG108D  OMITTED             00660500
&ZASYSLNDX          SETA  0                                             00660600
.ZG108A             ANOP  ,           POSITIONAL MACRO KEY              00660700
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00660800
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG108C             00660900
&ZTLC               SETC 'USAGE'                                        00661000
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG108A    00661100
.ZG108B             ANOP  ,                                             00661200
&ZXUSAGE            SETC  ''          RESET IN/OUTPUT                   00661300
&ZMS                SETC  'THE "USAGE" KEY'                             00661400
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00661500
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00661600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00661700
                    AGO   .ZG108E                                       00661800
.ZG108C             ANOP  ,                                             00661900
&ZXUSAGE            SETC  ''          RESET IN/OUTPUT                   00662000
&ZMS                SETC  '"USAGE='                                     00662100
&ZMS                SETC  '&ZMS.&USAGE"'                                00662200
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00662300
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00662400
&ZMS                SETC  '&ZMS "CONNECTOR",'                           00662500
&ZMS                SETC  '&ZMS "SERVER",'                              00662600
&ZMS                SETC  '&ZMS OR "CLIENT".'                           00662700
                    MNOTE 8,' &ZMS '                                    00662800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00662900
                    AGO   .ZG108E                                       00663000
.ZG108D             ANOP  ,                                             00663100
&XUSAGE             SETC  'CONNECTOR'           SET DEFAULT KEYWORD     00663200
.ZG108E             ANOP  ,                                             00663300
.*-------------------------------------------------------------------   00663400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00663500
.ZG109              ANOP  ,                                             00663600
&ZTLC               SETC 'DELETE'                                       00663700
                    AIF   ('&REQTYPE(1)' NE '&ZTLC').ZG110              00663800
&XREQTYPE           SETC  'DELETE'    SET KEYWORD                       00663900
                    AIF   (N'&REQTYPE LE 1).ZG109A  CK NUM              00664000
&ZMS                SETC  '"REQTYPE='                                   00664100
&ZMS                SETC  '&ZMS.&REQTYPE"'                              00664200
&ZMS                SETC  '&ZMS "REQTYPE"'                              00664300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00664400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00664500
.ZG109A             ANOP  ,                                             00664600
.*------------------------------------------------------------------    00664700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00664800
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00664900
.ZG109A0            AIF   (K'&NOTEPAD LE 0).ZG109A1  OK                 00665000
&ZCVAL              SETC '&ZCVAL NOTEPAD'       INCORRECT KEY USED      00665100
.ZG109A1            AIF   (K'&DESCRIPTION LE 0).ZG109A2  OK             00665200
&ZCVAL              SETC '&ZCVAL DESCRIPTION'   INCORRECT KEY USED      00665300
.ZG109A2            AIF   (K'&INFO LE 0).ZG109A3  OK                    00665400
&ZCVAL              SETC '&ZCVAL INFO'          INCORRECT KEY USED      00665500
.ZG109A3            AIF   (K'&ACCESS LE 0).ZG109A4  OK                  00665600
&ZCVAL              SETC '&ZCVAL ACCESS'        INCORRECT KEY USED      00665700
.ZG109A4            AIF   (K'&TERMSCOPE LE 0).ZG109A5  OK               00665800
&ZCVAL              SETC '&ZCVAL TERMSCOPE'     INCORRECT KEY USED      00665900
.ZG109A5            AIF   (K'&TTOKEN LE 0).ZG109A6  OK                  00666000
&ZCVAL              SETC '&ZCVAL TTOKEN'        INCORRECT KEY USED      00666100
.ZG109A6            AIF   (K'&USAGE LE 0).ZG109A7  OK                   00666200
&ZCVAL              SETC '&ZCVAL USAGE'         INCORRECT KEY USED      00666300
.ZG109A7            AIF   (K'&ZCVAL LE 0).ZG109A8  OK                   00666400
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00666500
&ZMS                SETC  '"REQTYPE'                                    00666600
&ZMS                SETC  '&ZMS.=&REQTYPE"'                             00666700
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00666800
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00666900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00667000
.ZG109A8            ANOP  ,                                             00667100
.*-------------------------------------------------------------------   00667200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00667300
.ZG110              ANOP  ,                                             00667400
&ZTLC               SETC 'PAUSE'                                        00667500
                    AIF   ('&REQTYPE(1)' NE '&ZTLC').ZG111              00667600
&XREQTYPE           SETC  'PAUSE'     SET KEYWORD                       00667700
                    AIF   (N'&REQTYPE LE 1).ZG110A  CK NUM              00667800
&ZMS                SETC  '"REQTYPE='                                   00667900
&ZMS                SETC  '&ZMS.&REQTYPE"'                              00668000
&ZMS                SETC  '&ZMS "REQTYPE"'                              00668100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00668200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00668300
.ZG110A             ANOP  ,                                             00668400
.*------------------------------------------------------------------    00668500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00668600
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00668700
.ZG110A0            AIF   (K'&NOTEPAD LE 0).ZG110A1  OK                 00668800
&ZCVAL              SETC '&ZCVAL NOTEPAD'       INCORRECT KEY USED      00668900
.ZG110A1            AIF   (K'&DESCRIPTION LE 0).ZG110A2  OK             00669000
&ZCVAL              SETC '&ZCVAL DESCRIPTION'   INCORRECT KEY USED      00669100
.ZG110A2            AIF   (K'&INFO LE 0).ZG110A3  OK                    00669200
&ZCVAL              SETC '&ZCVAL INFO'          INCORRECT KEY USED      00669300
.ZG110A3            AIF   (K'&ACCESS LE 0).ZG110A4  OK                  00669400
&ZCVAL              SETC '&ZCVAL ACCESS'        INCORRECT KEY USED      00669500
.ZG110A4            AIF   (K'&TERMSCOPE LE 0).ZG110A5  OK               00669600
&ZCVAL              SETC '&ZCVAL TERMSCOPE'     INCORRECT KEY USED      00669700
.ZG110A5            AIF   (K'&TTOKEN LE 0).ZG110A6  OK                  00669800
&ZCVAL              SETC '&ZCVAL TTOKEN'        INCORRECT KEY USED      00669900
.ZG110A6            AIF   (K'&USAGE LE 0).ZG110A7  OK                   00670000
&ZCVAL              SETC '&ZCVAL USAGE'         INCORRECT KEY USED      00670100
.ZG110A7            AIF   (K'&ZCVAL LE 0).ZG110A8  OK                   00670200
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00670300
&ZMS                SETC  '"REQTYPE'                                    00670400
&ZMS                SETC  '&ZMS.=&REQTYPE"'                             00670500
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00670600
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00670700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00670800
.ZG110A8            ANOP  ,                                             00670900
.*-------------------------------------------------------------------   00671000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00671100
.ZG111              ANOP  ,                                             00671200
&ZTLC               SETC 'RESUME'                                       00671300
                    AIF   ('&REQTYPE(1)' NE '&ZTLC').ZG112              00671400
&XREQTYPE           SETC  'RESUME'    SET KEYWORD                       00671500
                    AIF   (N'&REQTYPE LE 1).ZG111A  CK NUM              00671600
&ZMS                SETC  '"REQTYPE='                                   00671700
&ZMS                SETC  '&ZMS.&REQTYPE"'                              00671800
&ZMS                SETC  '&ZMS "REQTYPE"'                              00671900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00672000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00672100
.ZG111A             ANOP  ,                                             00672200
.*------------------------------------------------------------------    00672300
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00672400
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00672500
.ZG111A0            AIF   (K'&NOTEPAD LE 0).ZG111A1  OK                 00672600
&ZCVAL              SETC '&ZCVAL NOTEPAD'       INCORRECT KEY USED      00672700
.ZG111A1            AIF   (K'&DESCRIPTION LE 0).ZG111A2  OK             00672800
&ZCVAL              SETC '&ZCVAL DESCRIPTION'   INCORRECT KEY USED      00672900
.ZG111A2            AIF   (K'&INFO LE 0).ZG111A3  OK                    00673000
&ZCVAL              SETC '&ZCVAL INFO'          INCORRECT KEY USED      00673100
.ZG111A3            AIF   (K'&ACCESS LE 0).ZG111A4  OK                  00673200
&ZCVAL              SETC '&ZCVAL ACCESS'        INCORRECT KEY USED      00673300
.ZG111A4            AIF   (K'&TERMSCOPE LE 0).ZG111A5  OK               00673400
&ZCVAL              SETC '&ZCVAL TERMSCOPE'     INCORRECT KEY USED      00673500
.ZG111A5            AIF   (K'&TTOKEN LE 0).ZG111A6  OK                  00673600
&ZCVAL              SETC '&ZCVAL TTOKEN'        INCORRECT KEY USED      00673700
.ZG111A6            AIF   (K'&USAGE LE 0).ZG111A7  OK                   00673800
&ZCVAL              SETC '&ZCVAL USAGE'         INCORRECT KEY USED      00673900
.ZG111A7            AIF   (K'&ZCVAL LE 0).ZG111A8  OK                   00674000
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00674100
&ZMS                SETC  '"REQTYPE'                                    00674200
&ZMS                SETC  '&ZMS.=&REQTYPE"'                             00674300
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00674400
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00674500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00674600
.ZG111A8            ANOP  ,                                             00674700
.*------------------------------------------------------------------    00674800
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00674900
.ZG112              ANOP  ,                                             00675000
&ZXREQTYPE          SETC  'INPUT'     SET IN/OUTPUT                     00675100
                    AIF   (K'&XREQTYPE GT 0).ZG112E  VALID ARG          00675200
                    AIF   (T'&REQTYPE EQ 'O').ZG112D  OMITTED           00675300
&ZASYSLNDX          SETA  0                                             00675400
.ZG112A             ANOP  ,           POSITIONAL MACRO KEY              00675500
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00675600
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG112C             00675700
&ZTLC               SETC 'REQTYPE'                                      00675800
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG112A    00675900
.ZG112B             ANOP  ,                                             00676000
&ZXREQTYPE          SETC  ''          RESET IN/OUTPUT                   00676100
&ZMS                SETC  'THE "REQTYPE" KEY'                           00676200
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00676300
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00676400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00676500
                    AGO   .ZG112E                                       00676600
.ZG112C             ANOP  ,                                             00676700
&ZXREQTYPE          SETC  ''          RESET IN/OUTPUT                   00676800
&ZMS                SETC  '"REQTYPE='                                   00676900
&ZMS                SETC  '&ZMS.&REQTYPE"'                              00677000
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00677100
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00677200
&ZMS                SETC  '&ZMS "CREATE",'                              00677300
&ZMS                SETC  '&ZMS "DELETE",'                              00677400
&ZMS                SETC  '&ZMS "PAUSE",'                               00677500
&ZMS                SETC  '&ZMS OR "RESUME".'                           00677600
                    MNOTE 8,' &ZMS '                                    00677700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00677800
                    AGO   .ZG112E                                       00677900
.ZG112D             ANOP  ,                                             00678000
&XREQTYPE           SETC  'CREATE'    SET DEFAULT KEYWORD               00678100
.ZG112E             ANOP  ,                                             00678200
.*------------------------------------------------------------------    00678300
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00678400
                    AIF   (K'&REQTYPE(1) GT 0).ZG112F  PARM             00678500
&XREQTYPE           SETC  ''          ENSURE NULL KEYWORD               00678600
&ZXREQTYPE          SETC  ''          RESET IN/OUTPUT                   00678700
&ZMS                SETC  'THE'                                         00678800
&ZMS                SETC  '&ZMS "REQTYPE" KEY AND ITS'                  00678900
&ZMS                SETC  '&ZMS ARGUMENT ARE REQUIRED.'                 00679000
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00679100
&ZMS                SETC  '&ZMS "CREATE",'                              00679200
&ZMS                SETC  '&ZMS "DELETE",'                              00679300
&ZMS                SETC  '&ZMS "PAUSE",'                               00679400
&ZMS                SETC  '&ZMS OR "RESUME".'                           00679500
                    MNOTE 8,' &ZMS '                                    00679600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00679700
.ZG112F             ANOP  ,                                             00679800
.*----------------------------------------------------------------***   00679900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00680000
                    AIF   (N'&TIMEOUT LE 1).ZG114A  CK NUM              00680100
&ZMS                SETC  '"TIMEOUT='                                   00680200
&ZMS                SETC  '&ZMS.&TIMEOUT"'                              00680300
&ZMS                SETC  '&ZMS "TIMEOUT"'                              00680400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00680500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00680600
.ZG114A             ANOP  ,                                             00680700
.*-------------------------------------------------------------------   00680800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00680900
&ZXTIMEOUT          SETC  'INPUT'     SET IN/OUTPUT                     00681000
&XTIMEOUT           SETC  'XCF'                                         00681100
                    AIF   (K'&TIMEOUT(1) LE 0).ZG114B  PARM             00681200
&XTIMEOUT           SETC  '&TIMEOUT(1)'         SET XVARIABLE           00681300
                    AIF   (N'&TIMEOUT GT 1).ZG114B  MULTI               00681400
&XTIMEOUT           SETC  '&TIMEOUT'  SET XVARIABLE                     00681500
.ZG114B             ANOP  ,                                             00681600
.*-------------------------------------------------------------------   00681700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00681800
                    AIF   (K'&ZXTIMEOUT LE 0).ZG114R  NOT I/O           00681900
         AIF   ('&XTIMEOUT' EQ 'XCF').ZG114R                            00682000
                    AIF   ('&XTIMEOUT'(1,1) NE '(').ZG114R              00682100
&ZCGPR              SETC  '&XTIMEOUT'(2,K'&XTIMEOUT-2)                  00682200
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG114P                 00682300
                    AIF   (K'&ZCGPR GT 2).ZG114Q                        00682400
                    AIF   ('&ZCGPR' EQ '0').ZG114Q                      00682500
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00682600
                    AIF   (T'&ZCGPR NE 'N').ZG114Q  INVALID REG NAME    00682700
.ZG114P             ANOP  ,                                             00682800
                    AIF   (T'&ZCGPR NE 'N').ZG114R  NON NUMERIC         00682900
                    AIF   ('&ZCGPR' LT '2').ZG114Q                      00683000
                    AIF   ('&ZCGPR' LE '12').ZG114R                     00683100
.ZG114Q             ANOP  ,                                             00683200
&ZMS                SETC  '"TIMEOUT='                                   00683300
&ZMS                SETC  '&ZMS.&TIMEOUT"'                              00683400
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00683500
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00683600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00683700
.ZG114R             ANOP  ,                                             00683800
.*-------------------------------------------------------------------   00683900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00684000
.ZG116              ANOP  ,                                             00684100
&ZTLC               SETC 'NOTE'                                         00684200
                    AIF   ('&REQUEST(1)' NE '&ZTLC').ZG157              00684300
&XREQUEST           SETC  'NOTE'      SET KEYWORD                       00684400
                    AIF   (N'&REQUEST LE 1).ZG116A  CK NUM              00684500
&ZMS                SETC  '"REQUEST='                                   00684600
&ZMS                SETC  '&ZMS.&REQUEST"'                              00684700
&ZMS                SETC  '&ZMS "REQUEST"'                              00684800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00684900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00685000
.ZG116A             ANOP  ,                                             00685100
.*------------------------------------------------------------------    00685200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00685300
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00685400
.ZG116A0            AIF   (K'&NOTEPAD LE 0).ZG116A1  OK                 00685500
&ZCVAL              SETC '&ZCVAL NOTEPAD'       INCORRECT KEY USED      00685600
.ZG116A1            AIF   (K'&DESCRIPTION LE 0).ZG116A2  OK             00685700
&ZCVAL              SETC '&ZCVAL DESCRIPTION'   INCORRECT KEY USED      00685800
.ZG116A2            AIF   (K'&INFO LE 0).ZG116A3  OK                    00685900
&ZCVAL              SETC '&ZCVAL INFO'          INCORRECT KEY USED      00686000
.ZG116A3            AIF   (K'&#NOTES LE 0).ZG116A4  OK                  00686100
&ZCVAL              SETC '&ZCVAL #NOTES'        INCORRECT KEY USED      00686200
.ZG116A4            AIF   (K'&MULTIWRITE LE 0).ZG116A5  OK              00686300
&ZCVAL              SETC '&ZCVAL MULTIWRITE'    INCORRECT KEY USED      00686400
.ZG116A5            AIF   (K'&DUPLEX LE 0).ZG116A6  OK                  00686500
&ZCVAL              SETC '&ZCVAL DUPLEX'        INCORRECT KEY USED      00686600
.ZG116A6            AIF   (K'&INSTCOMP LE 0).ZG116A7  OK                00686700
&ZCVAL              SETC '&ZCVAL INSTCOMP'      INCORRECT KEY USED      00686800
.ZG116A7            AIF   (K'&TRACKTAG LE 0).ZG116A8  OK                00686900
&ZCVAL              SETC '&ZCVAL TRACKTAG'      INCORRECT KEY USED      00687000
.ZG116A8            AIF   (K'&LOSSCONNDELETE LE 0).ZG116A9  OK          00687100
&ZCVAL              SETC '&ZCVAL LOSSCONNDELETE'  INCORRECT KEY USED    00687200
.ZG116A9            AIF   (K'&ETODCREATED LE 0).ZG116A10  OK            00687300
&ZCVAL              SETC '&ZCVAL ETODCREATED'   INCORRECT KEY USED      00687400
.ZG116A10           AIF   (K'&CONDITIONS LE 0).ZG116A11  OK             00687500
&ZCVAL              SETC '&ZCVAL CONDITIONS'    INCORRECT KEY USED      00687600
.ZG116A11           AIF   (K'&MUSTBE LE 0).ZG116A12  OK                 00687700
&ZCVAL              SETC '&ZCVAL MUSTBE'        INCORRECT KEY USED      00687800
.ZG116A12           AIF   (K'&TIMEOUT LE 0).ZG116A13  OK                00687900
&ZCVAL              SETC '&ZCVAL TIMEOUT'       INCORRECT KEY USED      00688000
.ZG116A13           AIF   (K'&ACCESS LE 0).ZG116A14  OK                 00688100
&ZCVAL              SETC '&ZCVAL ACCESS'        INCORRECT KEY USED      00688200
.ZG116A14           AIF   (K'&TERMSCOPE LE 0).ZG116A15  OK              00688300
&ZCVAL              SETC '&ZCVAL TERMSCOPE'     INCORRECT KEY USED      00688400
.ZG116A15           AIF   (K'&TTOKEN LE 0).ZG116A16  OK                 00688500
&ZCVAL              SETC '&ZCVAL TTOKEN'        INCORRECT KEY USED      00688600
.ZG116A16           AIF   (K'&USAGE LE 0).ZG116A17  OK                  00688700
&ZCVAL              SETC '&ZCVAL USAGE'         INCORRECT KEY USED      00688800
.ZG116A17           AIF   (K'&RESUMETOKEN LE 0).ZG116A18  OK            00688900
&ZCVAL              SETC '&ZCVAL RESUMETOKEN'   INCORRECT KEY USED      00689000
.ZG116A18           AIF   (K'&MAXTAG LE 0).ZG116A19  OK                 00689100
&ZCVAL              SETC '&ZCVAL MAXTAG'        INCORRECT KEY USED      00689200
.ZG116A19           AIF   (K'&CHOOSE LE 0).ZG116A20  OK                 00689300
&ZCVAL              SETC '&ZCVAL CHOOSE'        INCORRECT KEY USED      00689400
.ZG116A20           AIF   (K'&CRITERIA LE 0).ZG116A21  OK               00689500
&ZCVAL              SETC '&ZCVAL CRITERIA'      INCORRECT KEY USED      00689600
.ZG116A21           AIF   (K'&ZCVAL LE 0).ZG116A22  OK                  00689700
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00689800
                    AIF  (K'&ZCVAL LE 160).ZG116A22A                    00689900
&ZCVAL              SETC '&ZCVAL'(1,160)                                00690000
&ZCVAL              SETC '&ZCVAL....'                                   00690100
.ZG116A22A          ANOP                                                00690200
&ZMS                SETC  '"REQUEST'                                    00690300
&ZMS                SETC  '&ZMS.=&REQUEST"'                             00690400
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00690500
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00690600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00690700
.ZG116A22           ANOP  ,                                             00690800
.*----------------------------------------------------------------***   00690900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00691000
                    AIF   (N'&CONNECTION LE 1).ZG118A  CK NUM           00691100
&ZMS                SETC  '"CONNECTION='                                00691200
&ZMS                SETC  '&ZMS.&CONNECTION"'                           00691300
&ZMS                SETC  '&ZMS "CONNECTION"'                           00691400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00691500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00691600
.ZG118A             ANOP  ,                                             00691700
.*-------------------------------------------------------------------   00691800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00691900
&ZXCONNECTION       SETC  'INPUT'     SET IN/OUTPUT                     00692000
&XCONNECTION        SETC  '&CONNECTION(1)'      SET XVARIABLE           00692100
                    AIF   (N'&CONNECTION GT 1).ZG118B  MULTI            00692200
&XCONNECTION        SETC  '&CONNECTION'         SET XVARIABLE           00692300
.ZG118B             AIF   (K'&CONNECTION(1) GT 0).ZG118C                00692400
&ZXCONNECTION       SETC  ''          RESET IN/OUTPUT                   00692500
&ZMS                SETC  ' '                                           00692600
&ZMS                SETC  '&ZMS "CONNECTION" KEY AND ITS'               00692700
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00692800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00692900
.ZG118C             ANOP  ,                                             00693000
.*-------------------------------------------------------------------   00693100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00693200
                    AIF   (K'&ZXCONNECTION LE 0).ZG118R  NOT I/O        00693300
                    AIF   ('&XCONNECTION'(1,1) NE '(').ZG118R           00693400
&ZCGPR              SETC  '&XCONNECTION'(2,K'&XCONNECTION-2)            00693500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG118P                 00693600
                    AIF   (K'&ZCGPR GT 2).ZG118Q                        00693700
                    AIF   ('&ZCGPR' EQ '0').ZG118Q                      00693800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00693900
                    AIF   (T'&ZCGPR NE 'N').ZG118Q  INVALID REG NAME    00694000
.ZG118P             ANOP  ,                                             00694100
                    AIF   (T'&ZCGPR NE 'N').ZG118R  NON NUMERIC         00694200
                    AIF   ('&ZCGPR' LT '2').ZG118Q                      00694300
                    AIF   ('&ZCGPR' LE '12').ZG118R                     00694400
.ZG118Q             ANOP  ,                                             00694500
&ZMS                SETC  '"CONNECTION='                                00694600
&ZMS                SETC  '&ZMS.&CONNECTION"'                           00694700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00694800
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00694900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00695000
.ZG118R             ANOP  ,                                             00695100
.*------------------------------------------------------------------    00695200
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00695300
&XREQTYPE           SETC  ''          INITIALIZE XVARIABLE              00695400
.*-------------------------------------------------------------------   00695500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00695600
.ZG122              ANOP  ,                                             00695700
                    AIF   (K'&REQTYPE(1) LE 0).ZG122A                   00695800
&ZTLC               SETC 'CREATE'                                       00695900
                    AIF   ('&REQTYPE(1)' NE '&ZTLC').ZG123              00696000
&XREQTYPE           SETC  'CREATE'    SET KEYWORD                       00696100
                    AIF   (N'&REQTYPE LE 1).ZG122A  CK NUM              00696200
&ZMS                SETC  '"REQTYPE='                                   00696300
&ZMS                SETC  '&ZMS.&REQTYPE"'                              00696400
&ZMS                SETC  '&ZMS "REQTYPE"'                              00696500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00696600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00696700
.ZG122A             ANOP  ,                                             00696800
.*-------------------------------------------------------------------   00696900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00697000
.ZG123              ANOP  ,                                             00697100
&ZTLC               SETC 'WRITE'                                        00697200
                    AIF   ('&REQTYPE(1)' NE '&ZTLC').ZG124              00697300
&XREQTYPE           SETC  'WRITE'     SET KEYWORD                       00697400
                    AIF   (N'&REQTYPE LE 1).ZG123A  CK NUM              00697500
&ZMS                SETC  '"REQTYPE='                                   00697600
&ZMS                SETC  '&ZMS.&REQTYPE"'                              00697700
&ZMS                SETC  '&ZMS "REQTYPE"'                              00697800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00697900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00698000
.ZG123A             ANOP  ,                                             00698100
.*-------------------------------------------------------------------   00698200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00698300
.ZG124              ANOP  ,                                             00698400
&ZTLC               SETC 'REPLACE'                                      00698500
                    AIF   ('&REQTYPE(1)' NE '&ZTLC').ZG125              00698600
&XREQTYPE           SETC  'REPLACE'   SET KEYWORD                       00698700
                    AIF   (N'&REQTYPE LE 1).ZG124A  CK NUM              00698800
&ZMS                SETC  '"REQTYPE='                                   00698900
&ZMS                SETC  '&ZMS.&REQTYPE"'                              00699000
&ZMS                SETC  '&ZMS "REQTYPE"'                              00699100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00699200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00699300
.ZG124A             ANOP  ,                                             00699400
.*-------------------------------------------------------------------   00699500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00699600
.ZG125              ANOP  ,                                             00699700
&ZTLC               SETC 'READ'                                         00699800
                    AIF   ('&REQTYPE(1)' NE '&ZTLC').ZG126              00699900
&XREQTYPE           SETC  'READ'      SET KEYWORD                       00700000
                    AIF   (N'&REQTYPE LE 1).ZG125A  CK NUM              00700100
&ZMS                SETC  '"REQTYPE='                                   00700200
&ZMS                SETC  '&ZMS.&REQTYPE"'                              00700300
&ZMS                SETC  '&ZMS "REQTYPE"'                              00700400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00700500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00700600
.ZG125A             ANOP  ,                                             00700700
.*-------------------------------------------------------------------   00700800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00700900
.ZG126              ANOP  ,                                             00701000
&ZTLC               SETC 'DELETE'                                       00701100
                    AIF   ('&REQTYPE(1)' NE '&ZTLC').ZG127              00701200
&XREQTYPE           SETC  'DELETE'    SET KEYWORD                       00701300
                    AIF   (N'&REQTYPE LE 1).ZG126A  CK NUM              00701400
&ZMS                SETC  '"REQTYPE='                                   00701500
&ZMS                SETC  '&ZMS.&REQTYPE"'                              00701600
&ZMS                SETC  '&ZMS "REQTYPE"'                              00701700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00701800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00701900
.ZG126A             ANOP  ,                                             00702000
.*------------------------------------------------------------------    00702100
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00702200
.ZG127              ANOP  ,                                             00702300
&ZXREQTYPE          SETC  'INPUT'     SET IN/OUTPUT                     00702400
                    AIF   (K'&XREQTYPE GT 0).ZG127E  VALID ARG          00702500
                    AIF   (T'&REQTYPE EQ 'O').ZG127D  OMITTED           00702600
&ZASYSLNDX          SETA  0                                             00702700
.ZG127A             ANOP  ,           POSITIONAL MACRO KEY              00702800
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00702900
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG127C             00703000
&ZTLC               SETC 'REQTYPE'                                      00703100
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG127A    00703200
.ZG127B             ANOP  ,                                             00703300
&ZXREQTYPE          SETC  ''          RESET IN/OUTPUT                   00703400
&ZMS                SETC  'THE "REQTYPE" KEY'                           00703500
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00703600
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00703700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00703800
                    AGO   .ZG127E                                       00703900
.ZG127C             ANOP  ,                                             00704000
&ZXREQTYPE          SETC  ''          RESET IN/OUTPUT                   00704100
&ZMS                SETC  '"REQTYPE='                                   00704200
&ZMS                SETC  '&ZMS.&REQTYPE"'                              00704300
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00704400
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00704500
&ZMS                SETC  '&ZMS "CREATE",'                              00704600
&ZMS                SETC  '&ZMS "WRITE",'                               00704700
&ZMS                SETC  '&ZMS "REPLACE",'                             00704800
&ZMS                SETC  '&ZMS "READ",'                                00704900
&ZMS                SETC  '&ZMS OR "DELETE".'                           00705000
                    MNOTE 8,' &ZMS '                                    00705100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00705200
                    AGO   .ZG127E                                       00705300
.ZG127D             ANOP  ,                                             00705400
&XREQTYPE           SETC  'CREATE'    SET DEFAULT KEYWORD               00705500
.ZG127E             ANOP  ,                                             00705600
.*------------------------------------------------------------------    00705700
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00705800
                    AIF   (K'&REQTYPE(1) GT 0).ZG127F  PARM             00705900
&XREQTYPE           SETC  ''          ENSURE NULL KEYWORD               00706000
&ZXREQTYPE          SETC  ''          RESET IN/OUTPUT                   00706100
&ZMS                SETC  'THE'                                         00706200
&ZMS                SETC  '&ZMS "REQTYPE" KEY AND ITS'                  00706300
&ZMS                SETC  '&ZMS ARGUMENT ARE REQUIRED.'                 00706400
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00706500
&ZMS                SETC  '&ZMS "CREATE",'                              00706600
&ZMS                SETC  '&ZMS "WRITE",'                               00706700
&ZMS                SETC  '&ZMS "REPLACE",'                             00706800
&ZMS                SETC  '&ZMS "READ",'                                00706900
&ZMS                SETC  '&ZMS OR "DELETE".'                           00707000
                    MNOTE 8,' &ZMS '                                    00707100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00707200
.ZG127F             ANOP  ,                                             00707300
.*----------------------------------------------------------------***   00707400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00707500
                    AIF   (N'&NAME LE 1).ZG129A  CK NUM                 00707600
&ZMS                SETC  '"NAME='                                      00707700
&ZMS                SETC  '&ZMS.&NAME"'                                 00707800
&ZMS                SETC  '&ZMS "NAME"'                                 00707900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00708000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00708100
.ZG129A             ANOP  ,                                             00708200
.*-------------------------------------------------------------------   00708300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00708400
&ZXNAME             SETC  'INPUT'     SET IN/OUTPUT                     00708500
&XNAME              SETC  '&NAME(1)'  SET XVARIABLE                     00708600
                    AIF   (N'&NAME GT 1).ZG129B  MULTI                  00708700
&XNAME              SETC  '&NAME'     SET XVARIABLE                     00708800
.ZG129B             AIF   (K'&NAME(1) GT 0).ZG129C                      00708900
&ZXNAME             SETC  ''          RESET IN/OUTPUT                   00709000
&ZMS                SETC  ' '                                           00709100
&ZMS                SETC  '&ZMS "NAME" KEY AND ITS'                     00709200
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00709300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00709400
.ZG129C             ANOP  ,                                             00709500
.*-------------------------------------------------------------------   00709600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00709700
                    AIF   (K'&ZXNAME LE 0).ZG129R  NOT I/O              00709800
                    AIF   ('&XNAME'(1,1) NE '(').ZG129R                 00709900
&ZCGPR              SETC  '&XNAME'(2,K'&XNAME-2)                        00710000
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG129P                 00710100
                    AIF   (K'&ZCGPR GT 2).ZG129Q                        00710200
                    AIF   ('&ZCGPR' EQ '0').ZG129Q                      00710300
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00710400
                    AIF   (T'&ZCGPR NE 'N').ZG129Q  INVALID REG NAME    00710500
.ZG129P             ANOP  ,                                             00710600
                    AIF   (T'&ZCGPR NE 'N').ZG129R  NON NUMERIC         00710700
                    AIF   ('&ZCGPR' LT '2').ZG129Q                      00710800
                    AIF   ('&ZCGPR' LE '12').ZG129R                     00710900
.ZG129Q             ANOP  ,                                             00711000
&ZMS                SETC  '"NAME='                                      00711100
&ZMS                SETC  '&ZMS.&NAME"'                                 00711200
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00711300
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00711400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00711500
.ZG129R             ANOP  ,                                             00711600
.*------------------------------------------------------------------    00711700
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00711800
&XTAGGING           SETC  ''          INITIALIZE XVARIABLE              00711900
.*-------------------------------------------------------------------   00712000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00712100
.ZG133              ANOP  ,                                             00712200
                    AIF   (K'&TAGGING(1) LE 0).ZG133A                   00712300
&ZTLC               SETC 'USER'                                         00712400
                    AIF   ('&TAGGING(1)' NE '&ZTLC').ZG137              00712500
&XTAGGING           SETC  'USER'      SET KEYWORD                       00712600
                    AIF   (N'&TAGGING LE 1).ZG133A  CK NUM              00712700
&ZMS                SETC  '"TAGGING='                                   00712800
&ZMS                SETC  '&ZMS.&TAGGING"'                              00712900
&ZMS                SETC  '&ZMS "TAGGING"'                              00713000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00713100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00713200
.ZG133A             ANOP  ,                                             00713300
.*----------------------------------------------------------------***   00713400
.***AG.KXVAR05 NAME, OPT INOUT, KEYS -XVARIABLE KEY                     00713500
                    AIF   (N'&TAG LE 1).ZG135A  CK NUM                  00713600
&ZMS                SETC  '"TAG='                                       00713700
&ZMS                SETC  '&ZMS.&TAG"'                                  00713800
&ZMS                SETC  '&ZMS "TAG"'                                  00713900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00714000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00714100
.ZG135A             ANOP  ,                                             00714200
.*-------------------------------------------------------------------   00714300
.***AG.KXVAR13 NAME, OPT INOUT, KEYS -XVARIABLE                         00714400
&ZXTAG              SETC  'INOUT'     SET IN/OUTPUT                     00714500
&XTAG               SETC  'KEEP'                                        00714600
                    AIF   (K'&TAG(1) LE 0).ZG135B  PARM                 00714700
&XTAG               SETC  '&TAG(1)'   SET XVARIABLE                     00714800
                    AIF   (N'&TAG GT 1).ZG135B  MULTI                   00714900
&XTAG               SETC  '&TAG'      SET XVARIABLE                     00715000
.ZG135B             ANOP  ,                                             00715100
.*-------------------------------------------------------------------   00715200
.***AG.KCK02 NAME, OPT INOUT, KEYS -GPR OUT OF RANGE                    00715300
                    AIF   (K'&ZXTAG LE 0).ZG135R  NOT I/O               00715400
         AIF   ('&XTAG' EQ 'KEEP').ZG135R                               00715500
                    AIF   ('&XTAG'(1,1) NE '(').ZG135R                  00715600
&ZCGPR              SETC  '&XTAG'(2,K'&XTAG-2)                          00715700
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG135P                 00715800
                    AIF   (K'&ZCGPR GT 2).ZG135Q                        00715900
                    AIF   ('&ZCGPR' EQ '0').ZG135Q                      00716000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00716100
                    AIF   (T'&ZCGPR NE 'N').ZG135Q  INVALID REG NAME    00716200
.ZG135P             ANOP  ,                                             00716300
                    AIF   (T'&ZCGPR NE 'N').ZG135R  NON NUMERIC         00716400
                    AIF   ('&ZCGPR' LT '2').ZG135Q                      00716500
                    AIF   ('&ZCGPR' LE '12').ZG135R                     00716600
.ZG135Q             ANOP  ,                                             00716700
&ZMS                SETC  '"TAG='                                       00716800
&ZMS                SETC  '&ZMS.&TAG"'                                  00716900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00717000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00717100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00717200
.ZG135R             ANOP  ,                                             00717300
.*-------------------------------------------------------------------   00717400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00717500
.ZG137              ANOP  ,                                             00717600
&ZTLC               SETC 'XCF'                                          00717700
                    AIF   ('&TAGGING(1)' NE '&ZTLC').ZG141              00717800
&XTAGGING           SETC  'XCF'       SET KEYWORD                       00717900
                    AIF   (N'&TAGGING LE 1).ZG137A  CK NUM              00718000
&ZMS                SETC  '"TAGGING='                                   00718100
&ZMS                SETC  '&ZMS.&TAGGING"'                              00718200
&ZMS                SETC  '&ZMS "TAGGING"'                              00718300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00718400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00718500
.ZG137A             ANOP  ,                                             00718600
.*----------------------------------------------------------------***   00718700
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00718800
                    AIF   (N'&TAG LE 1).ZG139A  CK NUM                  00718900
&ZMS                SETC  '"TAG='                                       00719000
&ZMS                SETC  '&ZMS.&TAG"'                                  00719100
&ZMS                SETC  '&ZMS "TAG"'                                  00719200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00719300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00719400
.ZG139A             ANOP  ,                                             00719500
.*-------------------------------------------------------------------   00719600
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00719700
                    AIF   (K'&TAG(1) LE 0).ZG139C  NO PARM              00719800
&ZXTAG              SETC  'OUTPUT'    SET OUTPUT                        00719900
&XTAG               SETC  '&TAG(1)'   SET XVARIABLE                     00720000
                    AIF   (N'&TAG GT 1).ZG139C                          00720100
&XTAG               SETC  '&TAG'      SET XVARIABLE                     00720200
.ZG139C             ANOP  ,                                             00720300
.*-------------------------------------------------------------------   00720400
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00720500
                    AIF   (K'&ZXTAG LE 0).ZG139R  NOT I/O               00720600
                    AIF   ('&XTAG'(1,1) NE '(').ZG139R                  00720700
&ZCGPR              SETC  '&XTAG'(2,K'&XTAG-2)                          00720800
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG139P                 00720900
                    AIF   (K'&ZCGPR GT 2).ZG139Q                        00721000
                    AIF   ('&ZCGPR' EQ '0').ZG139Q                      00721100
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00721200
                    AIF   (T'&ZCGPR NE 'N').ZG139Q  INVALID REG NAME    00721300
.ZG139P             ANOP  ,                                             00721400
                    AIF   (T'&ZCGPR NE 'N').ZG139R  NON NUMERIC         00721500
                    AIF   ('&ZCGPR' LT '2').ZG139Q                      00721600
                    AIF   ('&ZCGPR' LE '12').ZG139R                     00721700
.ZG139Q             ANOP  ,                                             00721800
&ZMS                SETC  '"TAG='                                       00721900
&ZMS                SETC  '&ZMS.&TAG"'                                  00722000
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00722100
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00722200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00722300
.ZG139R             ANOP  ,                                             00722400
.*------------------------------------------------------------------    00722500
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00722600
.ZG141              ANOP  ,                                             00722700
&ZXTAGGING          SETC  'INPUT'     SET IN/OUTPUT                     00722800
                    AIF   (K'&XTAGGING GT 0).ZG141E  VALID ARG          00722900
                    AIF   (T'&TAGGING EQ 'O').ZG141D  OMITTED           00723000
&ZASYSLNDX          SETA  0                                             00723100
.ZG141A             ANOP  ,           POSITIONAL MACRO KEY              00723200
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00723300
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG141C             00723400
&ZTLC               SETC 'TAGGING'                                      00723500
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG141A    00723600
.ZG141B             ANOP  ,                                             00723700
&ZXTAGGING          SETC  ''          RESET IN/OUTPUT                   00723800
&ZMS                SETC  'THE "TAGGING" KEY'                           00723900
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00724000
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00724100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00724200
                    AGO   .ZG141E                                       00724300
.ZG141C             ANOP  ,                                             00724400
&ZXTAGGING          SETC  ''          RESET IN/OUTPUT                   00724500
&ZMS                SETC  '"TAGGING='                                   00724600
&ZMS                SETC  '&ZMS.&TAGGING"'                              00724700
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00724800
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00724900
&ZMS                SETC  '&ZMS "USER"'                                 00725000
&ZMS                SETC  '&ZMS OR "XCF".'                              00725100
                    MNOTE 8,' &ZMS '                                    00725200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00725300
                    AGO   .ZG141E                                       00725400
.ZG141D             ANOP  ,                                             00725500
&XTAGGING           SETC  'USER'      SET DEFAULT KEYWORD               00725600
.ZG141E             ANOP  ,                                             00725700
.*------------------------------------------------------------------    00725800
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00725900
                    AIF   (K'&TAGGING(1) GT 0).ZG141F  PARM             00726000
&XTAGGING           SETC  ''          ENSURE NULL KEYWORD               00726100
&ZXTAGGING          SETC  ''          RESET IN/OUTPUT                   00726200
&ZMS                SETC  'THE'                                         00726300
&ZMS                SETC  '&ZMS "TAGGING" KEY AND ITS'                  00726400
&ZMS                SETC  '&ZMS ARGUMENT ARE REQUIRED.'                 00726500
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00726600
&ZMS                SETC  '&ZMS "USER"'                                 00726700
&ZMS                SETC  '&ZMS OR "XCF".'                              00726800
                    MNOTE 8,' &ZMS '                                    00726900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00727000
.ZG141F             ANOP  ,                                             00727100
.*----------------------------------------------------------------***   00727200
.***AG.KXVAR05 NAME, OPT INOUT, KEYS -XVARIABLE KEY                     00727300
                    AIF   (N'&INSTANCE# LE 1).ZG143A  CK NUM            00727400
&ZMS                SETC  '"INSTANCE#='                                 00727500
&ZMS                SETC  '&ZMS.&INSTANCE#"'                            00727600
&ZMS                SETC  '&ZMS "INSTANCE#"'                            00727700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00727800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00727900
.ZG143A             ANOP  ,                                             00728000
.*-------------------------------------------------------------------   00728100
.***AG.KXVAR13 NAME, OPT INOUT, KEYS -XVARIABLE                         00728200
&ZXINSTANCE#        SETC  'INOUT'     SET IN/OUTPUT                     00728300
&XINSTANCE#         SETC  'IGNORE'                                      00728400
                    AIF   (K'&INSTANCE#(1) LE 0).ZG143B  PARM           00728500
&XINSTANCE#         SETC  '&INSTANCE#(1)'       SET XVARIABLE           00728600
                    AIF   (N'&INSTANCE# GT 1).ZG143B  MULTI             00728700
&XINSTANCE#         SETC  '&INSTANCE#'          SET XVARIABLE           00728800
.ZG143B             ANOP  ,                                             00728900
.*-------------------------------------------------------------------   00729000
.***AG.KCK02 NAME, OPT INOUT, KEYS -GPR OUT OF RANGE                    00729100
                    AIF   (K'&ZXINSTANCE# LE 0).ZG143R  NOT I/O         00729200
         AIF   ('&XINSTANCE#' EQ 'IGNORE').ZG143R                       00729300
                    AIF   ('&XINSTANCE#'(1,1) NE '(').ZG143R            00729400
&ZCGPR              SETC  '&XINSTANCE#'(2,K'&XINSTANCE#-2)              00729500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG143P                 00729600
                    AIF   (K'&ZCGPR GT 2).ZG143Q                        00729700
                    AIF   ('&ZCGPR' EQ '0').ZG143Q                      00729800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00729900
                    AIF   (T'&ZCGPR NE 'N').ZG143Q  INVALID REG NAME    00730000
.ZG143P             ANOP  ,                                             00730100
                    AIF   (T'&ZCGPR NE 'N').ZG143R  NON NUMERIC         00730200
                    AIF   ('&ZCGPR' LT '2').ZG143Q                      00730300
                    AIF   ('&ZCGPR' LE '12').ZG143R                     00730400
.ZG143Q             ANOP  ,                                             00730500
&ZMS                SETC  '"INSTANCE#='                                 00730600
&ZMS                SETC  '&ZMS.&INSTANCE#"'                            00730700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00730800
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00730900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00731000
.ZG143R             ANOP  ,                                             00731100
.*------------------------------------------------------------------    00731200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00731300
&XKEEPNOTE          SETC  ''          INITIALIZE XVARIABLE              00731400
.*-------------------------------------------------------------------   00731500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00731600
.ZG147              ANOP  ,                                             00731700
                    AIF   (K'&KEEPNOTE(1) LE 0).ZG147A                  00731800
&ZTLC               SETC 'NO'                                           00731900
                    AIF   ('&KEEPNOTE(1)' NE '&ZTLC').ZG148             00732000
&XKEEPNOTE          SETC  'NO'        SET KEYWORD                       00732100
                    AIF   (N'&KEEPNOTE LE 1).ZG147A  CK NUM             00732200
&ZMS                SETC  '"KEEPNOTE='                                  00732300
&ZMS                SETC  '&ZMS.&KEEPNOTE"'                             00732400
&ZMS                SETC  '&ZMS "KEEPNOTE"'                             00732500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00732600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00732700
.ZG147A             ANOP  ,                                             00732800
.*-------------------------------------------------------------------   00732900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00733000
.ZG148              ANOP  ,                                             00733100
&ZTLC               SETC 'YES'                                          00733200
                    AIF   ('&KEEPNOTE(1)' NE '&ZTLC').ZG149             00733300
&XKEEPNOTE          SETC  'YES'       SET KEYWORD                       00733400
                    AIF   (N'&KEEPNOTE LE 1).ZG148A  CK NUM             00733500
&ZMS                SETC  '"KEEPNOTE='                                  00733600
&ZMS                SETC  '&ZMS.&KEEPNOTE"'                             00733700
&ZMS                SETC  '&ZMS "KEEPNOTE"'                             00733800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00733900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00734000
.ZG148A             ANOP  ,                                             00734100
.*------------------------------------------------------------------    00734200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00734300
.ZG149              ANOP  ,                                             00734400
&ZXKEEPNOTE         SETC  'INPUT'     SET IN/OUTPUT                     00734500
                    AIF   (K'&XKEEPNOTE GT 0).ZG149E  VALID ARG         00734600
                    AIF   (T'&KEEPNOTE EQ 'O').ZG149D  OMITTED          00734700
&ZASYSLNDX          SETA  0                                             00734800
.ZG149A             ANOP  ,           POSITIONAL MACRO KEY              00734900
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00735000
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG149C             00735100
&ZTLC               SETC 'KEEPNOTE'                                     00735200
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG149A    00735300
.ZG149B             ANOP  ,                                             00735400
&ZXKEEPNOTE         SETC  ''          RESET IN/OUTPUT                   00735500
&ZMS                SETC  'THE "KEEPNOTE" KEY'                          00735600
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00735700
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00735800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00735900
                    AGO   .ZG149E                                       00736000
.ZG149C             ANOP  ,                                             00736100
&ZXKEEPNOTE         SETC  ''          RESET IN/OUTPUT                   00736200
&ZMS                SETC  '"KEEPNOTE='                                  00736300
&ZMS                SETC  '&ZMS.&KEEPNOTE"'                             00736400
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00736500
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00736600
&ZMS                SETC  '&ZMS "NO"'                                   00736700
&ZMS                SETC  '&ZMS OR "YES".'                              00736800
                    MNOTE 8,' &ZMS '                                    00736900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00737000
                    AGO   .ZG149E                                       00737100
.ZG149D             ANOP  ,                                             00737200
&XKEEPNOTE          SETC  'NO'        SET DEFAULT KEYWORD               00737300
.ZG149E             ANOP  ,                                             00737400
.*-------------------------------------------------------------------   00737500
.***AG.KMEKY05 NAME, RQD INPUT, ME KEYS -NO ARGUMENTS                   00737600
&XBUFFORDESC        SETC  ''          INITIALIZE XVARIABLE              00737700
&ZASYSLNDX          SETA  0                                             00737800
.ZG151A             ANOP  ,           POSITIONAL KEY SEARCH             00737900
&ZASYSLNDX          SETA  &ZASYSLNDX+1          NEXT POSITIONAL         00738000
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG151B  DONE                  00738100
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG151A           00738200
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'NOBUFFER').ZG151A            00738300
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00738400
&ZXBUFFORDESC       SETC  'INPUT'     SET IN/OUTPUT                     00738500
&XBUFFORDESC        SETC  'NOBUFFER'  SET XVARIABLE                     00738600
&ZXNOBUFFER         SETC  'INPUT'     SET IN/OUTPUT                     00738700
&XNOBUFFER          SETC  'NOBUFFER'  SET XVARIABLE PARM                00738800
.ZG151B             ANOP  ,                                             00738900
.*----------------------------------------------------------------***   00739000
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00739100
                    AIF   (K'&BUFFER LE 0).ZG152D  NO ME KEY            00739200
                    AIF   (N'&BUFFER LE 1).ZG152A  CK NUM               00739300
&ZMS                SETC  '"BUFFER='                                    00739400
&ZMS                SETC  '&ZMS.&BUFFER"'                               00739500
&ZMS                SETC  '&ZMS "BUFFER"'                               00739600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00739700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00739800
.ZG152A             AIF   (K'&XBUFFORDESC LE 0).ZG152B                  00739900
&ZMS                SETC  '"BUFFER'                                     00740000
&ZMS                SETC  '&ZMS.=&BUFFER"'                              00740100
&ZMS                SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'         00740200
&ZMS                SETC  '&ZMS "&XBUFFORDESC"'                         00740300
                    MNOTE 8,' &ZMS KEY.'                                00740400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00740500
                    AGO   .ZG152D                                       00740600
.*                                                                      00740700
.ZG152B             ANOP  ,                                             00740800
&ZXBUFFORDESC       SETC  'INPUT'     SET IN/OUTPUT                     00740900
&XBUFFORDESC        SETC  'BUFFER'    SET XVARIABLE                     00741000
&ZXBUFFER           SETC  'INPUT'     SET IN/OUTPUT                     00741100
&XBUFFER            SETC  '&BUFFER(1)'          SET XVARIABLE PARM      00741200
                    AIF   (N'&BUFFER GT 1).ZG152C                       00741300
&XBUFFER            SETC  '&BUFFER'   SET XVARIABLE PARM                00741400
.ZG152C             AIF   (K'&XBUFFER GT 0).ZG152D  ONE PARM            00741500
&ZXBUFFORDESC       SETC  ''          RESET IN/OUTPUT                   00741600
&ZXBUFFER           SETC  ''          RESET IN/OUTPUT                   00741700
&ZMS                SETC  ' '                                           00741800
&ZMS                SETC  '&ZMS "BUFFER" KEY AND ITS'                   00741900
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00742000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00742100
.ZG152D             ANOP  ,                                             00742200
.*------------------------------------------------------------------    00742300
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00742400
                    AIF   (K'&XBUFFORDESC GT 0).ZG156B                  00742500
&ZXBUFFORDESC       SETC  ''          RESET IN/OUTPUT                   00742600
&ZXNOBUFFER         SETC  ''          RESET IN/OUTPUT                   00742700
&XBUFFORDESC        SETC  ''          ENSURE NULL                       00742800
&XNOBUFFER          SETC  ''          ENSURE NULL                       00742900
&ZMS                SETC  'ONE OF THE FOLLOWING'                        00743000
&ZMS                SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'           00743100
&ZMS                SETC  '&ZMS REQUIRED:'                              00743200
&ZMS                SETC  '&ZMS "NOBUFFER"'     VALID ME KEY            00743300
&ZMS                SETC  '&ZMS OR "BUFFER".'   VALID ME KEY            00743400
                    MNOTE 8,' &ZMS '                                    00743500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00743600
.ZG156B             ANOP  ,                                             00743700
.*-------------------------------------------------------------------   00743800
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00743900
.ZG151ZY  AIF    ('&XBUFFORDESC' NE 'NOBUFFER').ZG152ZY                 00744000
.*-------------------------------------------------------------------   00744100
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                00744200
&ZCVAL              SETC ''           ERROR KEY FIELD                   00744300
.ZG151I0            AIF   (K'&BUFLEN LE 0).ZG151I1                      00744400
&ZCVAL              SETC '&ZCVAL BUFLEN'        DISALLOWED KEY          00744500
.ZG151I1            AIF   (K'&ZCVAL LE 0).ZG151J  KEY                   00744600
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00744700
&ZMS                SETC  '"NOBUFFER'                                   00744800
&ZMS                SETC  '&ZMS."'                                      00744900
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00745000
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00745100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00745200
.ZG151J             ANOP  ,                                             00745300
.*-------------------------------------------------------------------   00745400
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00745500
.ZG152ZY  AIF    ('&XBUFFORDESC' NE 'BUFFER').ZG156ZY                   00745600
.*-------------------------------------------------------------------   00745700
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00745800
                    AIF   (K'&ZXBUFFER LE 0).ZG152R  NOT I/O            00745900
                    AIF   ('&XBUFFER'(1,1) NE '(').ZG152R               00746000
&ZCGPR              SETC  '&XBUFFER'(2,K'&XBUFFER-2)                    00746100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG152P                 00746200
                    AIF   (K'&ZCGPR GT 2).ZG152Q                        00746300
                    AIF   ('&ZCGPR' EQ '0').ZG152Q                      00746400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00746500
                    AIF   (T'&ZCGPR NE 'N').ZG152Q  INVALID REG NAME    00746600
.ZG152P             ANOP  ,                                             00746700
                    AIF   (T'&ZCGPR NE 'N').ZG152R  NON NUMERIC         00746800
                    AIF   ('&ZCGPR' LT '2').ZG152Q                      00746900
                    AIF   ('&ZCGPR' LE '12').ZG152R                     00747000
.ZG152Q             ANOP  ,                                             00747100
&ZMS                SETC  '"BUFFER='                                    00747200
&ZMS                SETC  '&ZMS.&BUFFER"'                               00747300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00747400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00747500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00747600
.ZG152R             ANOP  ,                                             00747700
.*----------------------------------------------------------------***   00747800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00747900
                    AIF   (N'&BUFLEN LE 1).ZG154A  CK NUM               00748000
&ZMS                SETC  '"BUFLEN='                                    00748100
&ZMS                SETC  '&ZMS.&BUFLEN"'                               00748200
&ZMS                SETC  '&ZMS "BUFLEN"'                               00748300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00748400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00748500
.ZG154A             ANOP  ,                                             00748600
.*-------------------------------------------------------------------   00748700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00748800
&ZXBUFLEN           SETC  'INPUT'     SET IN/OUTPUT                     00748900
&XBUFLEN            SETC  '&BUFLEN(1)'          SET XVARIABLE           00749000
                    AIF   (N'&BUFLEN GT 1).ZG154B  MULTI                00749100
&XBUFLEN            SETC  '&BUFLEN'   SET XVARIABLE                     00749200
.ZG154B             AIF   (K'&BUFLEN(1) GT 0).ZG154C                    00749300
&ZXBUFLEN           SETC  ''          RESET IN/OUTPUT                   00749400
&ZMS                SETC  ' '                                           00749500
&ZMS                SETC  '&ZMS "BUFLEN" KEY AND ITS'                   00749600
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00749700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00749800
.ZG154C             ANOP  ,                                             00749900
.*-------------------------------------------------------------------   00750000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00750100
                    AIF   (K'&ZXBUFLEN LE 0).ZG154R  NOT I/O            00750200
                    AIF   ('&XBUFLEN'(1,1) NE '(').ZG154R               00750300
&ZCGPR              SETC  '&XBUFLEN'(2,K'&XBUFLEN-2)                    00750400
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG154P                 00750500
                    AIF   (K'&ZCGPR GT 2).ZG154Q                        00750600
                    AIF   ('&ZCGPR' EQ '0').ZG154Q                      00750700
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00750800
                    AIF   (T'&ZCGPR NE 'N').ZG154Q  INVALID REG NAME    00750900
.ZG154P             ANOP  ,                                             00751000
                    AIF   (T'&ZCGPR NE 'N').ZG154R  NON NUMERIC         00751100
                    AIF   ('&ZCGPR' LT '2').ZG154Q                      00751200
                    AIF   ('&ZCGPR' LE '12').ZG154R                     00751300
.ZG154Q             ANOP  ,                                             00751400
&ZMS                SETC  '"BUFLEN='                                    00751500
&ZMS                SETC  '&ZMS.&BUFLEN"'                               00751600
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00751700
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00751800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00751900
.ZG154R             ANOP  ,                                             00752000
.*-------------------------------------------------------------------   00752100
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00752200
.ZG156ZY            ANOP ,            END MUTUALLY EXCLUSIVE KEYS       00752300
.*-------------------------------------------------------------------   00752400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00752500
.ZG157              ANOP  ,                                             00752600
&ZTLC               SETC 'NOTES'                                        00752700
                    AIF   ('&REQUEST(1)' NE '&ZTLC').ZG187              00752800
&XREQUEST           SETC  'NOTES'     SET KEYWORD                       00752900
                    AIF   (N'&REQUEST LE 1).ZG157A  CK NUM              00753000
&ZMS                SETC  '"REQUEST='                                   00753100
&ZMS                SETC  '&ZMS.&REQUEST"'                              00753200
&ZMS                SETC  '&ZMS "REQUEST"'                              00753300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00753400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00753500
.ZG157A             ANOP  ,                                             00753600
.*------------------------------------------------------------------    00753700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00753800
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00753900
.ZG157A0            AIF   (K'&NOTEPAD LE 0).ZG157A1  OK                 00754000
&ZCVAL              SETC '&ZCVAL NOTEPAD'       INCORRECT KEY USED      00754100
.ZG157A1            AIF   (K'&DESCRIPTION LE 0).ZG157A2  OK             00754200
&ZCVAL              SETC '&ZCVAL DESCRIPTION'   INCORRECT KEY USED      00754300
.ZG157A2            AIF   (K'&INFO LE 0).ZG157A3  OK                    00754400
&ZCVAL              SETC '&ZCVAL INFO'          INCORRECT KEY USED      00754500
.ZG157A3            AIF   (K'&#NOTES LE 0).ZG157A4  OK                  00754600
&ZCVAL              SETC '&ZCVAL #NOTES'        INCORRECT KEY USED      00754700
.ZG157A4            AIF   (K'&MULTIWRITE LE 0).ZG157A5  OK              00754800
&ZCVAL              SETC '&ZCVAL MULTIWRITE'    INCORRECT KEY USED      00754900
.ZG157A5            AIF   (K'&DUPLEX LE 0).ZG157A6  OK                  00755000
&ZCVAL              SETC '&ZCVAL DUPLEX'        INCORRECT KEY USED      00755100
.ZG157A6            AIF   (K'&INSTCOMP LE 0).ZG157A7  OK                00755200
&ZCVAL              SETC '&ZCVAL INSTCOMP'      INCORRECT KEY USED      00755300
.ZG157A7            AIF   (K'&TAGGING LE 0).ZG157A8  OK                 00755400
&ZCVAL              SETC '&ZCVAL TAGGING'       INCORRECT KEY USED      00755500
.ZG157A8            AIF   (K'&TRACKTAG LE 0).ZG157A9  OK                00755600
&ZCVAL              SETC '&ZCVAL TRACKTAG'      INCORRECT KEY USED      00755700
.ZG157A9            AIF   (K'&LOSSCONNDELETE LE 0).ZG157A10  OK         00755800
&ZCVAL              SETC '&ZCVAL LOSSCONNDELETE'  INCORRECT KEY USED    00755900
.ZG157A10           AIF   (K'&ETODCREATED LE 0).ZG157A11  OK            00756000
&ZCVAL              SETC '&ZCVAL ETODCREATED'   INCORRECT KEY USED      00756100
.ZG157A11           AIF   (K'&CONDITIONS LE 0).ZG157A12  OK             00756200
&ZCVAL              SETC '&ZCVAL CONDITIONS'    INCORRECT KEY USED      00756300
.ZG157A12           AIF   (K'&MUSTBE LE 0).ZG157A13  OK                 00756400
&ZCVAL              SETC '&ZCVAL MUSTBE'        INCORRECT KEY USED      00756500
.ZG157A13           AIF   (K'&TIMEOUT LE 0).ZG157A14  OK                00756600
&ZCVAL              SETC '&ZCVAL TIMEOUT'       INCORRECT KEY USED      00756700
.ZG157A14           AIF   (K'&ACCESS LE 0).ZG157A15  OK                 00756800
&ZCVAL              SETC '&ZCVAL ACCESS'        INCORRECT KEY USED      00756900
.ZG157A15           AIF   (K'&TERMSCOPE LE 0).ZG157A16  OK              00757000
&ZCVAL              SETC '&ZCVAL TERMSCOPE'     INCORRECT KEY USED      00757100
.ZG157A16           AIF   (K'&TTOKEN LE 0).ZG157A17  OK                 00757200
&ZCVAL              SETC '&ZCVAL TTOKEN'        INCORRECT KEY USED      00757300
.ZG157A17           AIF   (K'&USAGE LE 0).ZG157A18  OK                  00757400
&ZCVAL              SETC '&ZCVAL USAGE'         INCORRECT KEY USED      00757500
.ZG157A18           AIF   (K'&NAME LE 0).ZG157A19  OK                   00757600
&ZCVAL              SETC '&ZCVAL NAME'          INCORRECT KEY USED      00757700
.ZG157A19           AIF   (K'&TAG LE 0).ZG157A20  OK                    00757800
&ZCVAL              SETC '&ZCVAL TAG'           INCORRECT KEY USED      00757900
.ZG157A20           AIF   (K'&INSTANCE# LE 0).ZG157A21  OK              00758000
&ZCVAL              SETC '&ZCVAL INSTANCE#'     INCORRECT KEY USED      00758100
.ZG157A21           AIF   (K'&KEEPNOTE LE 0).ZG157A22  OK               00758200
&ZCVAL              SETC '&ZCVAL KEEPNOTE'      INCORRECT KEY USED      00758300
.ZG157A22           AIF   (K'&ZCVAL LE 0).ZG157A23  OK                  00758400
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00758500
                    AIF  (K'&ZCVAL LE 160).ZG157A23A                    00758600
&ZCVAL              SETC '&ZCVAL'(1,160)                                00758700
&ZCVAL              SETC '&ZCVAL....'                                   00758800
.ZG157A23A          ANOP                                                00758900
&ZMS                SETC  '"REQUEST'                                    00759000
&ZMS                SETC  '&ZMS.=&REQUEST"'                             00759100
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00759200
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00759300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00759400
.ZG157A23           ANOP  ,                                             00759500
.*----------------------------------------------------------------***   00759600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00759700
                    AIF   (N'&CONNECTION LE 1).ZG159A  CK NUM           00759800
&ZMS                SETC  '"CONNECTION='                                00759900
&ZMS                SETC  '&ZMS.&CONNECTION"'                           00760000
&ZMS                SETC  '&ZMS "CONNECTION"'                           00760100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00760200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00760300
.ZG159A             ANOP  ,                                             00760400
.*-------------------------------------------------------------------   00760500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00760600
&ZXCONNECTION       SETC  'INPUT'     SET IN/OUTPUT                     00760700
&XCONNECTION        SETC  '&CONNECTION(1)'      SET XVARIABLE           00760800
                    AIF   (N'&CONNECTION GT 1).ZG159B  MULTI            00760900
&XCONNECTION        SETC  '&CONNECTION'         SET XVARIABLE           00761000
.ZG159B             AIF   (K'&CONNECTION(1) GT 0).ZG159C                00761100
&ZXCONNECTION       SETC  ''          RESET IN/OUTPUT                   00761200
&ZMS                SETC  ' '                                           00761300
&ZMS                SETC  '&ZMS "CONNECTION" KEY AND ITS'               00761400
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00761500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00761600
.ZG159C             ANOP  ,                                             00761700
.*-------------------------------------------------------------------   00761800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00761900
                    AIF   (K'&ZXCONNECTION LE 0).ZG159R  NOT I/O        00762000
                    AIF   ('&XCONNECTION'(1,1) NE '(').ZG159R           00762100
&ZCGPR              SETC  '&XCONNECTION'(2,K'&XCONNECTION-2)            00762200
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG159P                 00762300
                    AIF   (K'&ZCGPR GT 2).ZG159Q                        00762400
                    AIF   ('&ZCGPR' EQ '0').ZG159Q                      00762500
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00762600
                    AIF   (T'&ZCGPR NE 'N').ZG159Q  INVALID REG NAME    00762700
.ZG159P             ANOP  ,                                             00762800
                    AIF   (T'&ZCGPR NE 'N').ZG159R  NON NUMERIC         00762900
                    AIF   ('&ZCGPR' LT '2').ZG159Q                      00763000
                    AIF   ('&ZCGPR' LE '12').ZG159R                     00763100
.ZG159Q             ANOP  ,                                             00763200
&ZMS                SETC  '"CONNECTION='                                00763300
&ZMS                SETC  '&ZMS.&CONNECTION"'                           00763400
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00763500
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00763600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00763700
.ZG159R             ANOP  ,                                             00763800
.*------------------------------------------------------------------    00763900
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00764000
&XREQTYPE           SETC  ''          INITIALIZE XVARIABLE              00764100
.*-------------------------------------------------------------------   00764200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00764300
.ZG163              ANOP  ,                                             00764400
                    AIF   (K'&REQTYPE(1) LE 0).ZG163A                   00764500
&ZTLC               SETC 'READ'                                         00764600
                    AIF   ('&REQTYPE(1)' NE '&ZTLC').ZG174              00764700
&XREQTYPE           SETC  'READ'      SET KEYWORD                       00764800
                    AIF   (N'&REQTYPE LE 1).ZG163A  CK NUM              00764900
&ZMS                SETC  '"REQTYPE='                                   00765000
&ZMS                SETC  '&ZMS.&REQTYPE"'                              00765100
&ZMS                SETC  '&ZMS "REQTYPE"'                              00765200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00765300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00765400
.ZG163A             ANOP  ,                                             00765500
.*------------------------------------------------------------------    00765600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00765700
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00765800
.ZG163A0            AIF   (K'&MAXTAG LE 0).ZG163A1  OK                  00765900
&ZCVAL              SETC '&ZCVAL MAXTAG'        INCORRECT KEY USED      00766000
.ZG163A1            AIF   (K'&ZCVAL LE 0).ZG163A2  OK                   00766100
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00766200
&ZMS                SETC  '"REQTYPE'                                    00766300
&ZMS                SETC  '&ZMS.=&REQTYPE"'                             00766400
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00766500
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00766600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00766700
.ZG163A2            ANOP  ,                                             00766800
.*----------------------------------------------------------------***   00766900
.***AG.KXVAR05 NAME, RQD INOUT, KEYS -XVARIABLE KEY                     00767000
                    AIF   (N'&RESUMETOKEN LE 1).ZG165A  CK NUM          00767100
&ZMS                SETC  '"RESUMETOKEN='                               00767200
&ZMS                SETC  '&ZMS.&RESUMETOKEN"'                          00767300
&ZMS                SETC  '&ZMS "RESUMETOKEN"'                          00767400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00767500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00767600
.ZG165A             ANOP  ,                                             00767700
.*-------------------------------------------------------------------   00767800
.***AG.KXVAR06 NAME, RQD INOUT, KEYS -XVARIABLE                         00767900
&ZXRESUMETOKEN      SETC  'INOUT'     SET IN/OUTPUT                     00768000
&XRESUMETOKEN       SETC  '&RESUMETOKEN(1)'     SET XVARIABLE           00768100
                    AIF   (N'&RESUMETOKEN GT 1).ZG165B  MULTI           00768200
&XRESUMETOKEN       SETC  '&RESUMETOKEN'        SET XVARIABLE           00768300
.ZG165B             AIF   (K'&RESUMETOKEN(1) GT 0).ZG165C               00768400
&ZXRESUMETOKEN      SETC  ''          RESET IN/OUTPUT                   00768500
&ZMS                SETC  ' '                                           00768600
&ZMS                SETC  '&ZMS "RESUMETOKEN" KEY AND ITS'              00768700
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00768800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00768900
.ZG165C             ANOP  ,                                             00769000
.*-------------------------------------------------------------------   00769100
.***AG.KCK02 NAME, RQD INOUT, KEYS -GPR OUT OF RANGE                    00769200
                    AIF   (K'&ZXRESUMETOKEN LE 0).ZG165R  NOT I/O       00769300
                    AIF   ('&XRESUMETOKEN'(1,1) NE '(').ZG165R          00769400
&ZCGPR              SETC  '&XRESUMETOKEN'(2,K'&XRESUMETOKEN-2)          00769500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG165P                 00769600
                    AIF   (K'&ZCGPR GT 2).ZG165Q                        00769700
                    AIF   ('&ZCGPR' EQ '0').ZG165Q                      00769800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00769900
                    AIF   (T'&ZCGPR NE 'N').ZG165Q  INVALID REG NAME    00770000
.ZG165P             ANOP  ,                                             00770100
                    AIF   (T'&ZCGPR NE 'N').ZG165R  NON NUMERIC         00770200
                    AIF   ('&ZCGPR' LT '2').ZG165Q                      00770300
                    AIF   ('&ZCGPR' LE '12').ZG165R                     00770400
.ZG165Q             ANOP  ,                                             00770500
&ZMS                SETC  '"RESUMETOKEN='                               00770600
&ZMS                SETC  '&ZMS.&RESUMETOKEN"'                          00770700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00770800
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00770900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00771000
.ZG165R             ANOP  ,                                             00771100
.*-------------------------------------------------------------------   00771200
.***AG.KMEKY05 NAME, RQD INPUT, ME KEYS -NO ARGUMENTS                   00771300
&XBUFFORDESC        SETC  ''          INITIALIZE XVARIABLE              00771400
&ZASYSLNDX          SETA  0                                             00771500
.ZG168A             ANOP  ,           POSITIONAL KEY SEARCH             00771600
&ZASYSLNDX          SETA  &ZASYSLNDX+1          NEXT POSITIONAL         00771700
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG168B  DONE                  00771800
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG168A           00771900
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'NOBUFFER').ZG168A            00772000
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00772100
&ZXBUFFORDESC       SETC  'INPUT'     SET IN/OUTPUT                     00772200
&XBUFFORDESC        SETC  'NOBUFFER'  SET XVARIABLE                     00772300
&ZXNOBUFFER         SETC  'INPUT'     SET IN/OUTPUT                     00772400
&XNOBUFFER          SETC  'NOBUFFER'  SET XVARIABLE PARM                00772500
.ZG168B             ANOP  ,                                             00772600
.*----------------------------------------------------------------***   00772700
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00772800
                    AIF   (K'&BUFFER LE 0).ZG169D  NO ME KEY            00772900
                    AIF   (N'&BUFFER LE 1).ZG169A  CK NUM               00773000
&ZMS                SETC  '"BUFFER='                                    00773100
&ZMS                SETC  '&ZMS.&BUFFER"'                               00773200
&ZMS                SETC  '&ZMS "BUFFER"'                               00773300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00773400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00773500
.ZG169A             AIF   (K'&XBUFFORDESC LE 0).ZG169B                  00773600
&ZMS                SETC  '"BUFFER'                                     00773700
&ZMS                SETC  '&ZMS.=&BUFFER"'                              00773800
&ZMS                SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'         00773900
&ZMS                SETC  '&ZMS "&XBUFFORDESC"'                         00774000
                    MNOTE 8,' &ZMS KEY.'                                00774100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00774200
                    AGO   .ZG169D                                       00774300
.*                                                                      00774400
.ZG169B             ANOP  ,                                             00774500
&ZXBUFFORDESC       SETC  'INPUT'     SET IN/OUTPUT                     00774600
&XBUFFORDESC        SETC  'BUFFER'    SET XVARIABLE                     00774700
&ZXBUFFER           SETC  'INPUT'     SET IN/OUTPUT                     00774800
&XBUFFER            SETC  '&BUFFER(1)'          SET XVARIABLE PARM      00774900
                    AIF   (N'&BUFFER GT 1).ZG169C                       00775000
&XBUFFER            SETC  '&BUFFER'   SET XVARIABLE PARM                00775100
.ZG169C             AIF   (K'&XBUFFER GT 0).ZG169D  ONE PARM            00775200
&ZXBUFFORDESC       SETC  ''          RESET IN/OUTPUT                   00775300
&ZXBUFFER           SETC  ''          RESET IN/OUTPUT                   00775400
&ZMS                SETC  ' '                                           00775500
&ZMS                SETC  '&ZMS "BUFFER" KEY AND ITS'                   00775600
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00775700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00775800
.ZG169D             ANOP  ,                                             00775900
.*------------------------------------------------------------------    00776000
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00776100
                    AIF   (K'&XBUFFORDESC GT 0).ZG173B                  00776200
&ZXBUFFORDESC       SETC  ''          RESET IN/OUTPUT                   00776300
&ZXNOBUFFER         SETC  ''          RESET IN/OUTPUT                   00776400
&XBUFFORDESC        SETC  ''          ENSURE NULL                       00776500
&XNOBUFFER          SETC  ''          ENSURE NULL                       00776600
&ZMS                SETC  'ONE OF THE FOLLOWING'                        00776700
&ZMS                SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'           00776800
&ZMS                SETC  '&ZMS REQUIRED:'                              00776900
&ZMS                SETC  '&ZMS "NOBUFFER"'     VALID ME KEY            00777000
&ZMS                SETC  '&ZMS OR "BUFFER".'   VALID ME KEY            00777100
                    MNOTE 8,' &ZMS '                                    00777200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00777300
.ZG173B             ANOP  ,                                             00777400
.*-------------------------------------------------------------------   00777500
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00777600
.ZG168ZY  AIF    ('&XBUFFORDESC' NE 'NOBUFFER').ZG169ZY                 00777700
.*-------------------------------------------------------------------   00777800
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                00777900
&ZCVAL              SETC ''           ERROR KEY FIELD                   00778000
.ZG168I0            AIF   (K'&BUFLEN LE 0).ZG168I1                      00778100
&ZCVAL              SETC '&ZCVAL BUFLEN'        DISALLOWED KEY          00778200
.ZG168I1            AIF   (K'&ZCVAL LE 0).ZG168J  KEY                   00778300
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00778400
&ZMS                SETC  '"NOBUFFER'                                   00778500
&ZMS                SETC  '&ZMS."'                                      00778600
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00778700
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00778800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00778900
.ZG168J             ANOP  ,                                             00779000
.*-------------------------------------------------------------------   00779100
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00779200
.ZG169ZY  AIF    ('&XBUFFORDESC' NE 'BUFFER').ZG173ZY                   00779300
.*-------------------------------------------------------------------   00779400
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00779500
                    AIF   (K'&ZXBUFFER LE 0).ZG169R  NOT I/O            00779600
                    AIF   ('&XBUFFER'(1,1) NE '(').ZG169R               00779700
&ZCGPR              SETC  '&XBUFFER'(2,K'&XBUFFER-2)                    00779800
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG169P                 00779900
                    AIF   (K'&ZCGPR GT 2).ZG169Q                        00780000
                    AIF   ('&ZCGPR' EQ '0').ZG169Q                      00780100
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00780200
                    AIF   (T'&ZCGPR NE 'N').ZG169Q  INVALID REG NAME    00780300
.ZG169P             ANOP  ,                                             00780400
                    AIF   (T'&ZCGPR NE 'N').ZG169R  NON NUMERIC         00780500
                    AIF   ('&ZCGPR' LT '2').ZG169Q                      00780600
                    AIF   ('&ZCGPR' LE '12').ZG169R                     00780700
.ZG169Q             ANOP  ,                                             00780800
&ZMS                SETC  '"BUFFER='                                    00780900
&ZMS                SETC  '&ZMS.&BUFFER"'                               00781000
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00781100
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00781200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00781300
.ZG169R             ANOP  ,                                             00781400
.*----------------------------------------------------------------***   00781500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00781600
                    AIF   (N'&BUFLEN LE 1).ZG171A  CK NUM               00781700
&ZMS                SETC  '"BUFLEN='                                    00781800
&ZMS                SETC  '&ZMS.&BUFLEN"'                               00781900
&ZMS                SETC  '&ZMS "BUFLEN"'                               00782000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00782100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00782200
.ZG171A             ANOP  ,                                             00782300
.*-------------------------------------------------------------------   00782400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00782500
&ZXBUFLEN           SETC  'INPUT'     SET IN/OUTPUT                     00782600
&XBUFLEN            SETC  '&BUFLEN(1)'          SET XVARIABLE           00782700
                    AIF   (N'&BUFLEN GT 1).ZG171B  MULTI                00782800
&XBUFLEN            SETC  '&BUFLEN'   SET XVARIABLE                     00782900
.ZG171B             AIF   (K'&BUFLEN(1) GT 0).ZG171C                    00783000
&ZXBUFLEN           SETC  ''          RESET IN/OUTPUT                   00783100
&ZMS                SETC  ' '                                           00783200
&ZMS                SETC  '&ZMS "BUFLEN" KEY AND ITS'                   00783300
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00783400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00783500
.ZG171C             ANOP  ,                                             00783600
.*-------------------------------------------------------------------   00783700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00783800
                    AIF   (K'&ZXBUFLEN LE 0).ZG171R  NOT I/O            00783900
                    AIF   ('&XBUFLEN'(1,1) NE '(').ZG171R               00784000
&ZCGPR              SETC  '&XBUFLEN'(2,K'&XBUFLEN-2)                    00784100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG171P                 00784200
                    AIF   (K'&ZCGPR GT 2).ZG171Q                        00784300
                    AIF   ('&ZCGPR' EQ '0').ZG171Q                      00784400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00784500
                    AIF   (T'&ZCGPR NE 'N').ZG171Q  INVALID REG NAME    00784600
.ZG171P             ANOP  ,                                             00784700
                    AIF   (T'&ZCGPR NE 'N').ZG171R  NON NUMERIC         00784800
                    AIF   ('&ZCGPR' LT '2').ZG171Q                      00784900
                    AIF   ('&ZCGPR' LE '12').ZG171R                     00785000
.ZG171Q             ANOP  ,                                             00785100
&ZMS                SETC  '"BUFLEN='                                    00785200
&ZMS                SETC  '&ZMS.&BUFLEN"'                               00785300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00785400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00785500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00785600
.ZG171R             ANOP  ,                                             00785700
.*-------------------------------------------------------------------   00785800
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00785900
.ZG173ZY            ANOP ,            END MUTUALLY EXCLUSIVE KEYS       00786000
.*-------------------------------------------------------------------   00786100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00786200
.ZG174              ANOP  ,                                             00786300
&ZTLC               SETC 'DELETE'                                       00786400
                    AIF   ('&REQTYPE(1)' NE '&ZTLC').ZG178              00786500
&XREQTYPE           SETC  'DELETE'    SET KEYWORD                       00786600
                    AIF   (N'&REQTYPE LE 1).ZG174A  CK NUM              00786700
&ZMS                SETC  '"REQTYPE='                                   00786800
&ZMS                SETC  '&ZMS.&REQTYPE"'                              00786900
&ZMS                SETC  '&ZMS "REQTYPE"'                              00787000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00787100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00787200
.ZG174A             ANOP  ,                                             00787300
.*------------------------------------------------------------------    00787400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00787500
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00787600
.ZG174A0            AIF   (K'&RESUMETOKEN LE 0).ZG174A1  OK             00787700
&ZCVAL              SETC '&ZCVAL RESUMETOKEN'   INCORRECT KEY USED      00787800
.ZG174A1            AIF   (K'&XNOBUFFER LE 0).ZG174A2  OK               00787900
&ZCVAL              SETC '&ZCVAL NOBUFFER'      INCORRECT KEY USED      00788000
.ZG174A2            AIF   (K'&BUFFER LE 0).ZG174A3  OK                  00788100
&ZCVAL              SETC '&ZCVAL BUFFER'        INCORRECT KEY USED      00788200
.ZG174A3            AIF   (K'&BUFLEN LE 0).ZG174A4  OK                  00788300
&ZCVAL              SETC '&ZCVAL BUFLEN'        INCORRECT KEY USED      00788400
.ZG174A4            AIF   (K'&ZCVAL LE 0).ZG174A5  OK                   00788500
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00788600
&ZMS                SETC  '"REQTYPE'                                    00788700
&ZMS                SETC  '&ZMS.=&REQTYPE"'                             00788800
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00788900
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00789000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00789100
.ZG174A5            ANOP  ,                                             00789200
.*----------------------------------------------------------------***   00789300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00789400
                    AIF   (N'&MAXTAG LE 1).ZG176A  CK NUM               00789500
&ZMS                SETC  '"MAXTAG='                                    00789600
&ZMS                SETC  '&ZMS.&MAXTAG"'                               00789700
&ZMS                SETC  '&ZMS "MAXTAG"'                               00789800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00789900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00790000
.ZG176A             ANOP  ,                                             00790100
.*-------------------------------------------------------------------   00790200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00790300
&ZXMAXTAG           SETC  'INPUT'     SET IN/OUTPUT                     00790400
&XMAXTAG            SETC  'NONE'                                        00790500
                    AIF   (K'&MAXTAG(1) LE 0).ZG176B  PARM              00790600
&XMAXTAG            SETC  '&MAXTAG(1)'          SET XVARIABLE           00790700
                    AIF   (N'&MAXTAG GT 1).ZG176B  MULTI                00790800
&XMAXTAG            SETC  '&MAXTAG'   SET XVARIABLE                     00790900
.ZG176B             ANOP  ,                                             00791000
.*-------------------------------------------------------------------   00791100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00791200
                    AIF   (K'&ZXMAXTAG LE 0).ZG176R  NOT I/O            00791300
         AIF   ('&XMAXTAG' EQ 'NONE').ZG176R                            00791400
                    AIF   ('&XMAXTAG'(1,1) NE '(').ZG176R               00791500
&ZCGPR              SETC  '&XMAXTAG'(2,K'&XMAXTAG-2)                    00791600
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG176P                 00791700
                    AIF   (K'&ZCGPR GT 2).ZG176Q                        00791800
                    AIF   ('&ZCGPR' EQ '0').ZG176Q                      00791900
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00792000
                    AIF   (T'&ZCGPR NE 'N').ZG176Q  INVALID REG NAME    00792100
.ZG176P             ANOP  ,                                             00792200
                    AIF   (T'&ZCGPR NE 'N').ZG176R  NON NUMERIC         00792300
                    AIF   ('&ZCGPR' LT '2').ZG176Q                      00792400
                    AIF   ('&ZCGPR' LE '12').ZG176R                     00792500
.ZG176Q             ANOP  ,                                             00792600
&ZMS                SETC  '"MAXTAG='                                    00792700
&ZMS                SETC  '&ZMS.&MAXTAG"'                               00792800
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00792900
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00793000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00793100
.ZG176R             ANOP  ,                                             00793200
.*------------------------------------------------------------------    00793300
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00793400
.ZG178              ANOP  ,                                             00793500
&ZXREQTYPE          SETC  'INPUT'     SET IN/OUTPUT                     00793600
                    AIF   (K'&XREQTYPE GT 0).ZG178E  VALID ARG          00793700
                    AIF   (T'&REQTYPE EQ 'O').ZG178D  OMITTED           00793800
&ZASYSLNDX          SETA  0                                             00793900
.ZG178A             ANOP  ,           POSITIONAL MACRO KEY              00794000
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00794100
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG178C             00794200
&ZTLC               SETC 'REQTYPE'                                      00794300
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG178A    00794400
.ZG178B             ANOP  ,                                             00794500
&ZXREQTYPE          SETC  ''          RESET IN/OUTPUT                   00794600
&ZMS                SETC  'THE "REQTYPE" KEY'                           00794700
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00794800
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00794900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00795000
                    AGO   .ZG178E                                       00795100
.ZG178C             ANOP  ,                                             00795200
&ZXREQTYPE          SETC  ''          RESET IN/OUTPUT                   00795300
&ZMS                SETC  '"REQTYPE='                                   00795400
&ZMS                SETC  '&ZMS.&REQTYPE"'                              00795500
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00795600
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00795700
&ZMS                SETC  '&ZMS "READ"'                                 00795800
&ZMS                SETC  '&ZMS OR "DELETE".'                           00795900
                    MNOTE 8,' &ZMS '                                    00796000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00796100
                    AGO   .ZG178E                                       00796200
.ZG178D             ANOP  ,                                             00796300
&XREQTYPE           SETC  'READ'      SET DEFAULT KEYWORD               00796400
.ZG178E             ANOP  ,                                             00796500
.*------------------------------------------------------------------    00796600
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00796700
                    AIF   (K'&REQTYPE(1) GT 0).ZG178F  PARM             00796800
&XREQTYPE           SETC  ''          ENSURE NULL KEYWORD               00796900
&ZXREQTYPE          SETC  ''          RESET IN/OUTPUT                   00797000
&ZMS                SETC  'THE'                                         00797100
&ZMS                SETC  '&ZMS "REQTYPE" KEY AND ITS'                  00797200
&ZMS                SETC  '&ZMS ARGUMENT ARE REQUIRED.'                 00797300
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00797400
&ZMS                SETC  '&ZMS "READ"'                                 00797500
&ZMS                SETC  '&ZMS OR "DELETE".'                           00797600
                    MNOTE 8,' &ZMS '                                    00797700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00797800
.ZG178F             ANOP  ,                                             00797900
.*------------------------------------------------------------------    00798000
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00798100
&XCHOOSE            SETC  ''          INITIALIZE XVARIABLE              00798200
.*-------------------------------------------------------------------   00798300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00798400
.ZG181              ANOP  ,                                             00798500
                    AIF   (K'&CHOOSE(1) LE 0).ZG181A                    00798600
&ZTLC               SETC 'ALL'                                          00798700
                    AIF   ('&CHOOSE(1)' NE '&ZTLC').ZG182               00798800
&XCHOOSE            SETC  'ALL'       SET KEYWORD                       00798900
                    AIF   (N'&CHOOSE LE 1).ZG181A  CK NUM               00799000
&ZMS                SETC  '"CHOOSE='                                    00799100
&ZMS                SETC  '&ZMS.&CHOOSE"'                               00799200
&ZMS                SETC  '&ZMS "CHOOSE"'                               00799300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00799400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00799500
.ZG181A             ANOP  ,                                             00799600
.*------------------------------------------------------------------    00799700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00799800
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00799900
.ZG181A0            AIF   (K'&CRITERIA LE 0).ZG181A1  OK                00800000
&ZCVAL              SETC '&ZCVAL CRITERIA'      INCORRECT KEY USED      00800100
.ZG181A1            AIF   (K'&ZCVAL LE 0).ZG181A2  OK                   00800200
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00800300
&ZMS                SETC  '"CHOOSE'                                     00800400
&ZMS                SETC  '&ZMS.=&CHOOSE"'                              00800500
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00800600
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00800700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00800800
.ZG181A2            ANOP  ,                                             00800900
.*-------------------------------------------------------------------   00801000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00801100
.ZG182              ANOP  ,                                             00801200
&ZTLC               SETC 'BYCRITERIA'                                   00801300
                    AIF   ('&CHOOSE(1)' NE '&ZTLC').ZG186               00801400
&XCHOOSE            SETC  'BYCRITERIA'          SET KEYWORD             00801500
                    AIF   (N'&CHOOSE LE 1).ZG182A  CK NUM               00801600
&ZMS                SETC  '"CHOOSE='                                    00801700
&ZMS                SETC  '&ZMS.&CHOOSE"'                               00801800
&ZMS                SETC  '&ZMS "CHOOSE"'                               00801900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00802000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00802100
.ZG182A             ANOP  ,                                             00802200
.*----------------------------------------------------------------***   00802300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00802400
                    AIF   (N'&CRITERIA LE 1).ZG184A  CK NUM             00802500
&ZMS                SETC  '"CRITERIA='                                  00802600
&ZMS                SETC  '&ZMS.&CRITERIA"'                             00802700
&ZMS                SETC  '&ZMS "CRITERIA"'                             00802800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00802900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00803000
.ZG184A             ANOP  ,                                             00803100
.*-------------------------------------------------------------------   00803200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00803300
&ZXCRITERIA         SETC  'INPUT'     SET IN/OUTPUT                     00803400
&XCRITERIA          SETC  '&CRITERIA(1)'        SET XVARIABLE           00803500
                    AIF   (N'&CRITERIA GT 1).ZG184B  MULTI              00803600
&XCRITERIA          SETC  '&CRITERIA'           SET XVARIABLE           00803700
.ZG184B             AIF   (K'&CRITERIA(1) GT 0).ZG184C                  00803800
&ZXCRITERIA         SETC  ''          RESET IN/OUTPUT                   00803900
&ZMS                SETC  ' '                                           00804000
&ZMS                SETC  '&ZMS "CRITERIA" KEY AND ITS'                 00804100
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00804200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00804300
.ZG184C             ANOP  ,                                             00804400
.*-------------------------------------------------------------------   00804500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00804600
                    AIF   (K'&ZXCRITERIA LE 0).ZG184R  NOT I/O          00804700
                    AIF   ('&XCRITERIA'(1,1) NE '(').ZG184R             00804800
&ZCGPR              SETC  '&XCRITERIA'(2,K'&XCRITERIA-2)                00804900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG184P                 00805000
                    AIF   (K'&ZCGPR GT 2).ZG184Q                        00805100
                    AIF   ('&ZCGPR' EQ '0').ZG184Q                      00805200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00805300
                    AIF   (T'&ZCGPR NE 'N').ZG184Q  INVALID REG NAME    00805400
.ZG184P             ANOP  ,                                             00805500
                    AIF   (T'&ZCGPR NE 'N').ZG184R  NON NUMERIC         00805600
                    AIF   ('&ZCGPR' LT '2').ZG184Q                      00805700
                    AIF   ('&ZCGPR' LE '12').ZG184R                     00805800
.ZG184Q             ANOP  ,                                             00805900
&ZMS                SETC  '"CRITERIA='                                  00806000
&ZMS                SETC  '&ZMS.&CRITERIA"'                             00806100
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00806200
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00806300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00806400
.ZG184R             ANOP  ,                                             00806500
.*------------------------------------------------------------------    00806600
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00806700
.ZG186              ANOP  ,                                             00806800
&ZXCHOOSE           SETC  'INPUT'     SET IN/OUTPUT                     00806900
                    AIF   (K'&XCHOOSE GT 0).ZG186E  VALID ARG           00807000
                    AIF   (T'&CHOOSE EQ 'O').ZG186D  OMITTED            00807100
&ZASYSLNDX          SETA  0                                             00807200
.ZG186A             ANOP  ,           POSITIONAL MACRO KEY              00807300
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00807400
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG186C             00807500
&ZTLC               SETC 'CHOOSE'                                       00807600
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG186A    00807700
.ZG186B             ANOP  ,                                             00807800
&ZXCHOOSE           SETC  ''          RESET IN/OUTPUT                   00807900
&ZMS                SETC  'THE "CHOOSE" KEY'                            00808000
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00808100
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00808200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00808300
                    AGO   .ZG186E                                       00808400
.ZG186C             ANOP  ,                                             00808500
&ZXCHOOSE           SETC  ''          RESET IN/OUTPUT                   00808600
&ZMS                SETC  '"CHOOSE='                                    00808700
&ZMS                SETC  '&ZMS.&CHOOSE"'                               00808800
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00808900
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00809000
&ZMS                SETC  '&ZMS "ALL"'                                  00809100
&ZMS                SETC  '&ZMS OR "BYCRITERIA".'                       00809200
                    MNOTE 8,' &ZMS '                                    00809300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00809400
                    AGO   .ZG186E                                       00809500
.ZG186D             ANOP  ,                                             00809600
&XCHOOSE            SETC  'ALL'       SET DEFAULT KEYWORD               00809700
.ZG186E             ANOP  ,                                             00809800
.*------------------------------------------------------------------    00809900
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00810000
                    AIF   (K'&CHOOSE(1) GT 0).ZG186F  PARM              00810100
&XCHOOSE            SETC  ''          ENSURE NULL KEYWORD               00810200
&ZXCHOOSE           SETC  ''          RESET IN/OUTPUT                   00810300
&ZMS                SETC  'THE'                                         00810400
&ZMS                SETC  '&ZMS "CHOOSE" KEY AND ITS'                   00810500
&ZMS                SETC  '&ZMS ARGUMENT ARE REQUIRED.'                 00810600
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00810700
&ZMS                SETC  '&ZMS "ALL"'                                  00810800
&ZMS                SETC  '&ZMS OR "BYCRITERIA".'                       00810900
                    MNOTE 8,' &ZMS '                                    00811000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00811100
.ZG186F             ANOP  ,                                             00811200
.*------------------------------------------------------------------    00811300
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00811400
.ZG187              ANOP  ,                                             00811500
&ZXREQUEST          SETC  'INPUT'     SET IN/OUTPUT                     00811600
                    AIF   (K'&XREQUEST GT 0).ZG187E  VALID ARG          00811700
                    AIF   (T'&REQUEST EQ 'O').ZG187D  OMITTED           00811800
&ZASYSLNDX          SETA  0                                             00811900
.ZG187A             ANOP  ,           POSITIONAL MACRO KEY              00812000
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00812100
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG187C             00812200
&ZTLC               SETC 'REQUEST'                                      00812300
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG187A    00812400
.ZG187B             ANOP  ,                                             00812500
&ZXREQUEST          SETC  ''          RESET IN/OUTPUT                   00812600
&ZMS                SETC  'THE "REQUEST" KEY'                           00812700
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00812800
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00812900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00813000
                    AGO   .ZG187E                                       00813100
.ZG187C             ANOP  ,                                             00813200
&ZXREQUEST          SETC  ''          RESET IN/OUTPUT                   00813300
&ZMS                SETC  '"REQUEST='                                   00813400
&ZMS                SETC  '&ZMS.&REQUEST"'                              00813500
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00813600
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00813700
&ZMS                SETC  '&ZMS "NOTEPAD",'                             00813800
&ZMS                SETC  '&ZMS "CONNECTION",'                          00813900
&ZMS                SETC  '&ZMS "NOTE",'                                00814000
&ZMS                SETC  '&ZMS OR "NOTES".'                            00814100
                    MNOTE 8,' &ZMS '                                    00814200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00814300
                    AGO   .ZG187E                                       00814400
.ZG187D             ANOP  ,                                             00814500
&XREQUEST           SETC  'NOTEPAD'   SET DEFAULT KEYWORD               00814600
.ZG187E             ANOP  ,                                             00814700
.*------------------------------------------------------------------    00814800
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00814900
                    AIF   (K'&REQUEST(1) GT 0).ZG187F  PARM             00815000
&XREQUEST           SETC  ''          ENSURE NULL KEYWORD               00815100
&ZXREQUEST          SETC  ''          RESET IN/OUTPUT                   00815200
&ZMS                SETC  'THE'                                         00815300
&ZMS                SETC  '&ZMS "REQUEST" KEY AND ITS'                  00815400
&ZMS                SETC  '&ZMS ARGUMENT ARE REQUIRED.'                 00815500
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00815600
&ZMS                SETC  '&ZMS "NOTEPAD",'                             00815700
&ZMS                SETC  '&ZMS "CONNECTION",'                          00815800
&ZMS                SETC  '&ZMS "NOTE",'                                00815900
&ZMS                SETC  '&ZMS OR "NOTES".'                            00816000
                    MNOTE 8,' &ZMS '                                    00816100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00816200
.ZG187F             ANOP  ,                                             00816300
.*-------------------------------------------------------------------   00816400
.***AG.KMEKY05 NAME, RQD INPUT, ME KEYS -NO ARGUMENTS                   00816500
&XANSORNO           SETC  ''          INITIALIZE XVARIABLE              00816600
&ZASYSLNDX          SETA  0                                             00816700
.ZG189A             ANOP  ,           POSITIONAL KEY SEARCH             00816800
&ZASYSLNDX          SETA  &ZASYSLNDX+1          NEXT POSITIONAL         00816900
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG189B  DONE                  00817000
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG189A           00817100
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'NOANSAREA').ZG189A           00817200
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00817300
&ZXANSORNO          SETC  'INPUT'     SET IN/OUTPUT                     00817400
&XANSORNO           SETC  'NOANSAREA'           SET XVARIABLE           00817500
&ZXNOANSAREA        SETC  'INPUT'     SET IN/OUTPUT                     00817600
&XNOANSAREA         SETC  'NOANSAREA'           SET XVARIABLE PARM      00817700
.ZG189B             ANOP  ,                                             00817800
.*----------------------------------------------------------------***   00817900
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00818000
                    AIF   (K'&ANSAREA LE 0).ZG190D  NO ME KEY           00818100
                    AIF   (N'&ANSAREA LE 1).ZG190A  CK NUM              00818200
&ZMS                SETC  '"ANSAREA='                                   00818300
&ZMS                SETC  '&ZMS.&ANSAREA"'                              00818400
&ZMS                SETC  '&ZMS "ANSAREA"'                              00818500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00818600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00818700
.ZG190A             AIF   (K'&XANSORNO LE 0).ZG190B                     00818800
&ZMS                SETC  '"ANSAREA'                                    00818900
&ZMS                SETC  '&ZMS.=&ANSAREA"'                             00819000
&ZMS                SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'         00819100
&ZMS                SETC  '&ZMS "&XANSORNO"'                            00819200
                    MNOTE 8,' &ZMS KEY.'                                00819300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00819400
                    AGO   .ZG190D                                       00819500
.*                                                                      00819600
.ZG190B             ANOP  ,                                             00819700
&ZXANSORNO          SETC  'INPUT'     SET IN/OUTPUT                     00819800
&XANSORNO           SETC  'ANSAREA'   SET XVARIABLE                     00819900
&ZXANSAREA          SETC  'INPUT'     SET IN/OUTPUT                     00820000
&XANSAREA           SETC  '&ANSAREA(1)'         SET XVARIABLE PARM      00820100
                    AIF   (N'&ANSAREA GT 1).ZG190C                      00820200
&XANSAREA           SETC  '&ANSAREA'  SET XVARIABLE PARM                00820300
.ZG190C             AIF   (K'&XANSAREA GT 0).ZG190D  ONE PARM           00820400
&ZXANSORNO          SETC  ''          RESET IN/OUTPUT                   00820500
&ZXANSAREA          SETC  ''          RESET IN/OUTPUT                   00820600
&ZMS                SETC  ' '                                           00820700
&ZMS                SETC  '&ZMS "ANSAREA" KEY AND ITS'                  00820800
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00820900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00821000
.ZG190D             ANOP  ,                                             00821100
.*------------------------------------------------------------------    00821200
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00821300
                    AIF   (K'&XANSORNO GT 0).ZG194B                     00821400
&ZXANSORNO          SETC  ''          RESET IN/OUTPUT                   00821500
&ZXNOANSAREA        SETC  ''          RESET IN/OUTPUT                   00821600
&XANSORNO           SETC  ''          ENSURE NULL                       00821700
&XNOANSAREA         SETC  ''          ENSURE NULL                       00821800
&ZMS                SETC  'ONE OF THE FOLLOWING'                        00821900
&ZMS                SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'           00822000
&ZMS                SETC  '&ZMS REQUIRED:'                              00822100
&ZMS                SETC  '&ZMS "NOANSAREA"'    VALID ME KEY            00822200
&ZMS                SETC  '&ZMS OR "ANSAREA".'  VALID ME KEY            00822300
                    MNOTE 8,' &ZMS '                                    00822400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00822500
.ZG194B             ANOP  ,                                             00822600
.*-------------------------------------------------------------------   00822700
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00822800
.ZG189ZY  AIF    ('&XANSORNO' NE 'NOANSAREA').ZG190ZY                   00822900
.*-------------------------------------------------------------------   00823000
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                00823100
&ZCVAL              SETC ''           ERROR KEY FIELD                   00823200
.ZG189I0            AIF   (K'&ANSLEN LE 0).ZG189I1                      00823300
&ZCVAL              SETC '&ZCVAL ANSLEN'        DISALLOWED KEY          00823400
.ZG189I1            AIF   (K'&ZCVAL LE 0).ZG189J  KEY                   00823500
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00823600
&ZMS                SETC  '"NOANSAREA'                                  00823700
&ZMS                SETC  '&ZMS."'                                      00823800
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00823900
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00824000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00824100
.ZG189J             ANOP  ,                                             00824200
.*-------------------------------------------------------------------   00824300
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00824400
.ZG190ZY  AIF    ('&XANSORNO' NE 'ANSAREA').ZG194ZY                     00824500
.*-------------------------------------------------------------------   00824600
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00824700
                    AIF   (K'&ZXANSAREA LE 0).ZG190R  NOT I/O           00824800
                    AIF   ('&XANSAREA'(1,1) NE '(').ZG190R              00824900
&ZCGPR              SETC  '&XANSAREA'(2,K'&XANSAREA-2)                  00825000
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG190P                 00825100
                    AIF   (K'&ZCGPR GT 2).ZG190Q                        00825200
                    AIF   ('&ZCGPR' EQ '0').ZG190Q                      00825300
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00825400
                    AIF   (T'&ZCGPR NE 'N').ZG190Q  INVALID REG NAME    00825500
.ZG190P             ANOP  ,                                             00825600
                    AIF   (T'&ZCGPR NE 'N').ZG190R  NON NUMERIC         00825700
                    AIF   ('&ZCGPR' LT '2').ZG190Q                      00825800
                    AIF   ('&ZCGPR' LE '12').ZG190R                     00825900
.ZG190Q             ANOP  ,                                             00826000
&ZMS                SETC  '"ANSAREA='                                   00826100
&ZMS                SETC  '&ZMS.&ANSAREA"'                              00826200
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00826300
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00826400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00826500
.ZG190R             ANOP  ,                                             00826600
.*----------------------------------------------------------------***   00826700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00826800
                    AIF   (N'&ANSLEN LE 1).ZG192A  CK NUM               00826900
&ZMS                SETC  '"ANSLEN='                                    00827000
&ZMS                SETC  '&ZMS.&ANSLEN"'                               00827100
&ZMS                SETC  '&ZMS "ANSLEN"'                               00827200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00827300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00827400
.ZG192A             ANOP  ,                                             00827500
.*-------------------------------------------------------------------   00827600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00827700
&ZXANSLEN           SETC  'INPUT'     SET IN/OUTPUT                     00827800
&XANSLEN            SETC  '&ANSLEN(1)'          SET XVARIABLE           00827900
                    AIF   (N'&ANSLEN GT 1).ZG192B  MULTI                00828000
&XANSLEN            SETC  '&ANSLEN'   SET XVARIABLE                     00828100
.ZG192B             AIF   (K'&ANSLEN(1) GT 0).ZG192C                    00828200
&ZXANSLEN           SETC  ''          RESET IN/OUTPUT                   00828300
&ZMS                SETC  ' '                                           00828400
&ZMS                SETC  '&ZMS "ANSLEN" KEY AND ITS'                   00828500
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00828600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00828700
.ZG192C             ANOP  ,                                             00828800
.*-------------------------------------------------------------------   00828900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00829000
                    AIF   (K'&ZXANSLEN LE 0).ZG192R  NOT I/O            00829100
                    AIF   ('&XANSLEN'(1,1) NE '(').ZG192R               00829200
&ZCGPR              SETC  '&XANSLEN'(2,K'&XANSLEN-2)                    00829300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG192P                 00829400
                    AIF   (K'&ZCGPR GT 2).ZG192Q                        00829500
                    AIF   ('&ZCGPR' EQ '0').ZG192Q                      00829600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00829700
                    AIF   (T'&ZCGPR NE 'N').ZG192Q  INVALID REG NAME    00829800
.ZG192P             ANOP  ,                                             00829900
                    AIF   (T'&ZCGPR NE 'N').ZG192R  NON NUMERIC         00830000
                    AIF   ('&ZCGPR' LT '2').ZG192Q                      00830100
                    AIF   ('&ZCGPR' LE '12').ZG192R                     00830200
.ZG192Q             ANOP  ,                                             00830300
&ZMS                SETC  '"ANSLEN='                                    00830400
&ZMS                SETC  '&ZMS.&ANSLEN"'                               00830500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00830600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00830700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00830800
.ZG192R             ANOP  ,                                             00830900
.*-------------------------------------------------------------------   00831000
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00831100
.ZG194ZY            ANOP ,            END MUTUALLY EXCLUSIVE KEYS       00831200
.*----------------------------------------------------------------***   00831300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00831400
                    AIF   (N'&RETCODE LE 1).ZG196A  CK NUM              00831500
&ZMS                SETC  '"RETCODE='                                   00831600
&ZMS                SETC  '&ZMS.&RETCODE"'                              00831700
&ZMS                SETC  '&ZMS "RETCODE"'                              00831800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00831900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00832000
.ZG196A             ANOP  ,                                             00832100
.*-------------------------------------------------------------------   00832200
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00832300
                    AIF   (K'&RETCODE(1) LE 0).ZG196C  NO PARM          00832400
&ZXRETCODE          SETC  'OUTPUT'    SET OUTPUT                        00832500
&XRETCODE           SETC  '&RETCODE(1)'         SET XVARIABLE           00832600
                    AIF   (N'&RETCODE GT 1).ZG196C                      00832700
&XRETCODE           SETC  '&RETCODE'  SET XVARIABLE                     00832800
.ZG196C             ANOP  ,                                             00832900
.*-------------------------------------------------------------------   00833000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00833100
                    AIF   (K'&ZXRETCODE LE 0).ZG196R  NOT I/O           00833200
                    AIF   ('&XRETCODE'(1,1) NE '(').ZG196R              00833300
&ZCGPR              SETC  '&XRETCODE'(2,K'&XRETCODE-2)                  00833400
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG196P                 00833500
                    AIF   (K'&ZCGPR GT 2).ZG196Q                        00833600
                    AIF   ('&ZCGPR' EQ '0').ZG196Q                      00833700
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00833800
                    AIF   (T'&ZCGPR NE 'N').ZG196Q  INVALID REG NAME    00833900
.ZG196P             ANOP  ,                                             00834000
                    AIF   (T'&ZCGPR NE 'N').ZG196R  NON NUMERIC         00834100
                    AIF   ('&ZCGPR' EQ '15').ZG196R                     00834200
                    AIF   ('&ZCGPR' LT '2').ZG196Q                      00834300
                    AIF   ('&ZCGPR' LE '12').ZG196R                     00834400
.ZG196Q             ANOP  ,                                             00834500
&ZMS                SETC  '"RETCODE='                                   00834600
&ZMS                SETC  '&ZMS.&RETCODE"'                              00834700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00834800
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'      00834900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00835000
.ZG196R             ANOP  ,                                             00835100
.*----------------------------------------------------------------***   00835200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00835300
                    AIF   (N'&RSNCODE LE 1).ZG199A  CK NUM              00835400
&ZMS                SETC  '"RSNCODE='                                   00835500
&ZMS                SETC  '&ZMS.&RSNCODE"'                              00835600
&ZMS                SETC  '&ZMS "RSNCODE"'                              00835700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00835800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00835900
.ZG199A             ANOP  ,                                             00836000
.*-------------------------------------------------------------------   00836100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00836200
                    AIF   (K'&RSNCODE(1) LE 0).ZG199C  NO PARM          00836300
&ZXRSNCODE          SETC  'OUTPUT'    SET OUTPUT                        00836400
&XRSNCODE           SETC  '&RSNCODE(1)'         SET XVARIABLE           00836500
                    AIF   (N'&RSNCODE GT 1).ZG199C                      00836600
&XRSNCODE           SETC  '&RSNCODE'  SET XVARIABLE                     00836700
.ZG199C             ANOP  ,                                             00836800
.*-------------------------------------------------------------------   00836900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00837000
                    AIF   (K'&ZXRSNCODE LE 0).ZG199R  NOT I/O           00837100
                    AIF   ('&XRSNCODE'(1,1) NE '(').ZG199R              00837200
&ZCGPR              SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                  00837300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG199P                 00837400
                    AIF   (K'&ZCGPR GT 2).ZG199Q                        00837500
                    AIF   ('&ZCGPR' EQ '0').ZG199R                      00837600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00837700
                    AIF   (T'&ZCGPR NE 'N').ZG199Q  INVALID REG NAME    00837800
.ZG199P             ANOP  ,                                             00837900
                    AIF   (T'&ZCGPR NE 'N').ZG199R  NON NUMERIC         00838000
                    AIF   ('&ZCGPR' EQ '0').ZG199R                      00838100
                    AIF   ('&ZCGPR' LT '2').ZG199Q                      00838200
                    AIF   ('&ZCGPR' LE '12').ZG199R                     00838300
.ZG199Q             ANOP  ,                                             00838400
&ZMS                SETC  '"RSNCODE='                                   00838500
&ZMS                SETC  '&ZMS.&RSNCODE"'                              00838600
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00838700
                    MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'       00838800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00838900
.ZG199R             ANOP  ,                                             00839000
.******************************************************************     00839100
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00839200
.******************************************************************     00839300
                    ACTR  10000                                         00839400
.*-------------------------------------------------------------------   00839500
.***AH.P03 EXTRA POSITIONALS AMONG NON-X KEYS                           00839600
&ZCVAL              SETC  ''          ERROR FIELD                       00839700
&ZAWRK              SETA  0           POSITIONAL COUNTER                00839800
&ZASYSLNDX          SETA  0           NON-X KEY COUNTER                 00839900
.ZGLIST2            ANOP  ,                                             00840000
&ZASYSLNDX          SETA  &ZASYSLNDX+1          NEXT NON-X KEY          00840100
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZGLIST3  DONE                 00840200
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZGLIST2          00840300
&ZAWRK              SETA  &ZAWRK+1    NEXT POSITIONAL                   00840400
                    AIF   (&ZAWRK LE 0).ZGLIST2                         00840500
&ZCVAL              SETC '&ZCVAL,&SYSLIST(&ZASYSLNDX)'  EXTRA           00840600
                    AGO   .ZGLIST2                                      00840700
.*                                                                      00840800
.ZGLIST3  AIF  (K'&ZCVAL LE 0).ZGLISTX                                  00840900
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA            00841000
&ZMS                SETC  'POSITIONAL ARGUMENT(S),'                     00841100
&ZMS                SETC  '&ZMS "&ZCVAL"'                               00841200
&ZMS                SETC  '&ZMS CANNOT BE USED.'                        00841300
&ZMS                SETC  '&ZMS NO POSITIONAL ARGUMENTS'                00841400
                    MNOTE 8,' &ZMS ARE ALLOWED.'                        00841500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00841600
.ZGLISTX            ANOP  ,                                             00841700
&ZASYSLNDX          SETA  0                                             00841800
.*-------------------------------------------------------------------   00841900
.***AG.MF04 MF=(SLE)                                                    00842000
.ZGMFX              ANOP  ,           END OF FULL SYNTAX CHECK          00842100
.*******************************************************************    00842200
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00842300
.*******************************************************************    00842400
                    AIF   (&ZMACRET NE 0).ZLX2  ERROR DETECTED          00842500
.*******************************************************************    00842600
.***AE.01  START OF IXCNOTE MACRO CODE                                  00842700
.*******************************************************************    00842800
                    LCLC  &M0M0001                 NAME                 00842900
&M0M0001            SETC  '&XLABEL'                SET NAME             00843000
                    AIF   (K'&XLABEL NE 0).XLAB2                        00843100
&M0M0001            SETC  'M00M&SYSNDX'            DEFAULT NAME         00843200
.*                                                                      00843300
.XLAB2              ANOP  ,                                             00843400
                    AIF   ('&XMF' EQ 'L').XLAB3                         00843500
&M0M0001 DS    0H                             IXCNOTE-0                 00843600
.XLAB3              ANOP  ,                                             00843700
.*******************************************************************    00843800
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00843900
.*******************************************************************    00844000
              PUSH  PRINT                                               00844100
                    AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON    00844200
                    PRINT OFF         ++ PR01                           00844300
                    AGO   .ZPRNTXX                                      00844400
.ZPRINTX            PRINT ON                                            00844500
.ZPRNTXX            ANOP  ,                                             00844600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00844700
.* Generate assembler macro code to change the inout nature of the      00844800
.* CONNECTION keyword to be INPUT for all REQUEST=CONNECTION requests   00844900
.* other than REQTYPE=CREATE, for which it should be OUTPUT.            00845000
.*                                                                      00845100
         AIF   ('&XREQUEST' NE 'CONNECTION').ZZMAB1X                    00845200
         AIF   ('&XREQTYPE' EQ 'CREATE').ZZMAB1O                        00845300
&ZXCONNECTION     SETC  'INPUT'    INPUT if not CREATE                  00845400
                  AGO   .ZZMAB1X                                        00845500
.ZZMAB1O          ANOP                                                  00845600
&ZXCONNECTION     SETC  'OUTPUT'   OUTPUT if CREATE                     00845700
.ZZMAB1X          ANOP                                                  00845800
.*                                                                      00845900
.* Generate assembler macro code to change the inout nature of the      00846000
.* INSTANCE# keyword to reflect specific request types                  00846100
.*    OUTPUT for CREATE requests, default INOUT for all others          00846200
.*                                                                      00846300
         AIF   ('&XREQUEST' NE 'NOTE').ZZMAB3X                          00846400
         AIF   ('&XREQTYPE' NE 'CREATE').ZZMAB3X                        00846500
&ZXINSTANCE#      SETC  'OUTPUT'   NOT INOUT BUT OUTPUT                 00846600
.ZZMAB3X          ANOP                                                  00846700
.*                                                                      00846800
.* Generate assembler macro code to change the inout nature of the      00846900
.* TAG keyword to reflect specific request types                        00847000
.*   If REQUEST=NOTE and TAGGING=USER                                   00847100
.*   Then Select REQTYPE                                                00847200
.*      READ   -->  TAGGING = OUTPUT                                    00847300
.*      Otherwise                                                       00847400
.*        TAGGING=INOUT (which is the default)                          00847500
.*                                                                      00847600
         AIF   ('&XREQUEST' NE 'NOTE').ZZMAB4X                          00847700
         AIF   ('&XTAGGING' NE 'USER').ZZMAB4X                          00847800
         AIF   ('&XREQTYPE' NE 'READ').ZZMAB4X                          00847900
&ZXTAG            SETC  'OUTPUT'   TAG is OUTPUT for READ NOTE          00848000
                  AGO       .ZZMAB4X                                    00848100
.ZZMAB4X          ANOP                                                  00848200
.*                                                                      00848300
.* Generate assembler macro code to indicate that READ NOTES needs      00848400
.* an ANSAREA                                                           00848500
.*                                                                      00848600
         AIF   ('&XREQUEST' NE 'NOTES').ZZMAB5X                         00848700
         AIF   ('&XREQTYPE' NE 'READ').ZZMAB5X                          00848800
         AIF   ('&XANSORNO' EQ 'ANSAREA').ZZMAB5X                       00848900
&ZMS             SETC  'THE "ANSAREA" KEY'                              00849000
&ZMS             SETC  '&ZMS IS REQUIRED FOR'                           00849100
&ZMS             SETC  '&ZMS REQUEST=NOTES REQTYPE=READ.'               00849200
                 MNOTE 8,' &ZMS '                                       00849300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00849400
.ZZMAB5X          ANOP                                                  00849500
.*                                                                      00849600
.*                                                                      00849700
.* Generate assembler macro code to indicate that KEEPNOTE keyword      00849800
.* cannot be specified with REQUEST=NOTE REQTYPE=READ!DELETE            00849900
.*                                                                      00850000
         AIF   ('&XREQUEST' NE 'NOTE').ZZMAB6X                          00850100
         AIF   (K'&KEEPNOTE(1) LE 0).ZZMAB6X    KEEPNOTE not coded'     00850200
         AIF   ('&XREQTYPE' EQ 'READ').ZZMAB6B                          00850300
         AIF   ('&XREQTYPE' EQ 'DELETE').ZZMAB6B                        00850400
                 AGO       .ZZMAB6X                                     00850500
.ZZMAB6B          ANOP                                                  00850600
&ZMS             SETC  'THE "KEEPNOTE" KEY'                             00850700
&ZMS             SETC  '&ZMS IS NOT VALID WITH'                         00850800
&ZMS             SETC  '&ZMS REQUEST=NOTE REQTYPE='                     00850900
&ZMS             SETC  '&ZMS&XREQTYPE'                                  00851000
                 MNOTE 8,' &ZMS '                                       00851100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00851200
.ZZMAB6X          ANOP                                                  00851300
.*                                                                      00851400
.*                                                                      00851500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00851600
.********************************************************************   00851700
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00851800
.********************************************************************   00851900
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00852000
                      LCLA  &ZOPN1         INVOCATION INDEX             00852100
                      LCLC  &ZOPL(4095)    LABEL                        00852200
                      LCLC  &ZOPO(4095)    OPERATION                    00852300
                      LCLC  &ZOPV(4095)    VALUE                        00852400
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00852500
.*                                                                      00852600
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00852700
.******************************************************************     00852800
.***AL.L10 IXCNOTE FMT=LIST MF=S!L PARAMETERS                           00852900
.******************************************************************     00853000
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00853100
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00853200
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00853300
&XMFATTR              SETC  '0D'                                        00853400
.*                                                                      00853500
&ZOPN                 SETA  &ZOPN+1                                     00853600
&ZOPL(&ZOPN)          SETC  ' '                                         00853700
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00853800
&ZOPV(&ZOPN)          SETC  '4,8'                                       00853900
&ZOPN                 SETA  &ZOPN+1                                     00854000
&ZOPL(&ZOPN)          SETC  ' '                                         00854100
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00854200
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00854300
&ZOPD(&ZOPN)          SETC  '++ IXCNOTE ARG PARMS'                      00854400
.*                                                                      00854500
&ZOPN                 SETA  &ZOPN+1                                     00854600
&ZOPL(&ZOPN)          SETC  ' '                                         00854700
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00854800
&ZOPV(&ZOPN)          SETC  '1'                                         00854900
&ZOPD(&ZOPN)          SETC  ' '                                         00855000
.*                                                                      00855100
.ZLMFSL2              ANOP  ,                                           00855200
.*-------------------------------------------------------------------   00855300
.***AM.L00  IXCNOTE FMT=LIST name                                       00855400
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00855500
&ZOPN                 SETA &ZOPN+1                                      00855600
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00855700
&ZOPO(&ZOPN)          SETC 'EQU'                                        00855800
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00855900
&ZOPD(&ZOPN)          SETC '++ IXCNOTE NAME'                            00856000
.ZLMFSL2M             ANOP  ,                                           00856100
.*-------------------------------------------------------------------   00856200
.***AM.L01  IXCNOTE FMT=LIST PARAMETERS                                 00856300
&ZOPN                 SETA &ZOPN+1                                      00856400
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00856500
&ZOPO(&ZOPN)          SETC 'DS'                                         00856600
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00856700
&ZOPD(&ZOPN)          SETC '++ IXCNOTE PARM LIST'                       00856800
.*-------------------------------------------------------------------   00856900
.***AM.L02 XVERSION XL1                                                 00857000
&ZOPN                 SETA &ZOPN+1                                      00857100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00857200
&ZOPO(&ZOPN)          SETC 'DS'                                         00857300
&ZOPV(&ZOPN)          SETC 'XL1'                                        00857400
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00857500
.*-------------------------------------------------------------------   00857600
.***AM.L09  XSERVICE XL1                                                00857700
&ZOPN                 SETA &ZOPN+1                                      00857800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSERVICE'                         00857900
&ZOPO(&ZOPN)          SETC 'DS'                                         00858000
&ZOPV(&ZOPN)          SETC 'XL1'                                        00858100
&ZOPD(&ZOPN)          SETC '++ CONSTANT '                               00858200
.*-------------------------------------------------------------------   00858300
.***AM.L05 XREQUEST XL1                                                 00858400
&ZOPN                 SETA &ZOPN+1                                      00858500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQUEST'                         00858600
&ZOPO(&ZOPN)          SETC 'DS'                                         00858700
&ZOPV(&ZOPN)          SETC 'XL1'                                        00858800
&ZOPD(&ZOPN)          SETC '++ &ZXREQUEST XREQUEST'                     00858900
.*                                                                      00859000
&ZOPN                 SETA  &ZOPN+1                                     00859100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_NOTE'                   00859200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00859300
&ZOPV(&ZOPN)          SETC  '1'                                         00859400
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              00859500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NOTE'                         00859600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00859700
.*                                                                      00859800
&ZOPN                 SETA  &ZOPN+1                                     00859900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_NOTES'                  00860000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00860100
&ZOPV(&ZOPN)          SETC  '2'                                         00860200
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              00860300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NOTES'                        00860400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00860500
.*                                                                      00860600
&ZOPN                 SETA  &ZOPN+1                                     00860700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_CONNECTION'             00860800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00860900
&ZOPV(&ZOPN)          SETC  '3'                                         00861000
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              00861100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CONNECTION'                   00861200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00861300
.*                                                                      00861400
&ZOPN                 SETA  &ZOPN+1                                     00861500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_NOTEPAD'                00861600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00861700
&ZOPV(&ZOPN)          SETC  '4'                                         00861800
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              00861900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NOTEPAD'                      00862000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00862100
.*-------------------------------------------------------------------   00862200
.***AM.L05 XREQTYPE XL1                                                 00862300
&ZOPN                 SETA &ZOPN+1                                      00862400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQTYPE'                         00862500
&ZOPO(&ZOPN)          SETC 'DS'                                         00862600
&ZOPV(&ZOPN)          SETC 'XL1'                                        00862700
&ZOPD(&ZOPN)          SETC '++ &ZXREQTYPE XREQTYPE'                     00862800
.*                                                                      00862900
&ZOPN                 SETA  &ZOPN+1                                     00863000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQTYPE_CREATE'                 00863100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00863200
&ZOPV(&ZOPN)          SETC  '1'                                         00863300
&ZOPD(&ZOPN)          SETC  '++ XREQTYPE.'                              00863400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CREATE'                       00863500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00863600
.*                                                                      00863700
&ZOPN                 SETA  &ZOPN+1                                     00863800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQTYPE_WRITE'                  00863900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00864000
&ZOPV(&ZOPN)          SETC  '2'                                         00864100
&ZOPD(&ZOPN)          SETC  '++ XREQTYPE.'                              00864200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).WRITE'                        00864300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00864400
.*                                                                      00864500
&ZOPN                 SETA  &ZOPN+1                                     00864600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQTYPE_REPLACE'                00864700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00864800
&ZOPV(&ZOPN)          SETC  '3'                                         00864900
&ZOPD(&ZOPN)          SETC  '++ XREQTYPE.'                              00865000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).REPLACE'                      00865100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00865200
.*                                                                      00865300
&ZOPN                 SETA  &ZOPN+1                                     00865400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQTYPE_DELETE'                 00865500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00865600
&ZOPV(&ZOPN)          SETC  '4'                                         00865700
&ZOPD(&ZOPN)          SETC  '++ XREQTYPE.'                              00865800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DELETE'                       00865900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00866000
.*                                                                      00866100
&ZOPN                 SETA  &ZOPN+1                                     00866200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQTYPE_READ'                   00866300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00866400
&ZOPV(&ZOPN)          SETC  '5'                                         00866500
&ZOPD(&ZOPN)          SETC  '++ XREQTYPE.'                              00866600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).READ'                         00866700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00866800
.*                                                                      00866900
&ZOPN                 SETA  &ZOPN+1                                     00867000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQTYPE_QUERY'                  00867100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00867200
&ZOPV(&ZOPN)          SETC  '6'                                         00867300
&ZOPD(&ZOPN)          SETC  '++ XREQTYPE.'                              00867400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).QUERY'                        00867500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00867600
.*                                                                      00867700
&ZOPN                 SETA  &ZOPN+1                                     00867800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQTYPE_PAUSE'                  00867900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00868000
&ZOPV(&ZOPN)          SETC  '7'                                         00868100
&ZOPD(&ZOPN)          SETC  '++ XREQTYPE.'                              00868200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).PAUSE'                        00868300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00868400
.*                                                                      00868500
&ZOPN                 SETA  &ZOPN+1                                     00868600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQTYPE_RESUME'                 00868700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00868800
&ZOPV(&ZOPN)          SETC  '8'                                         00868900
&ZOPD(&ZOPN)          SETC  '++ XREQTYPE.'                              00869000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).RESUME'                       00869100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00869200
.*                                                                      00869300
&ZOPN                 SETA  &ZOPN+1                                     00869400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQTYPE_MODIFY'                 00869500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00869600
&ZOPV(&ZOPN)          SETC  '9'                                         00869700
&ZOPD(&ZOPN)          SETC  '++ XREQTYPE.'                              00869800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MODIFY'                       00869900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00870000
.*-------------------------------------------------------------------   00870100
.***AM.L03 XFLAGS4 BL.8                                                 00870200
&ZOPN                 SETA &ZOPN+1                                      00870300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS4'                          00870400
&ZOPO(&ZOPN)          SETC 'DS'                                         00870500
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00870600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00870700
.*                                                                      00870800
&ZOPN                 SETA  &ZOPN+1                                     00870900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTAGGING_USER'                   00871000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00871100
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00871200
&ZOPD(&ZOPN)          SETC  '++ XTAGGING.'                              00871300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).USER'                         00871400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00871500
.*                                                                      00871600
&ZOPN                 SETA  &ZOPN+1                                     00871700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTAGGING_XCF'                    00871800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00871900
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00872000
&ZOPD(&ZOPN)          SETC  '++ XTAGGING.'                              00872100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).XCF'                          00872200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00872300
.*                                                                      00872400
&ZOPN                 SETA  &ZOPN+1                                     00872500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_BUFFER'                  00872600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00872700
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00872800
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00872900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BUFFER'                       00873000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00873100
.*                                                                      00873200
&ZOPN                 SETA  &ZOPN+1                                     00873300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_TAG'                     00873400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00873500
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00873600
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00873700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).TAG'                          00873800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00873900
.*                                                                      00874000
&ZOPN                 SETA  &ZOPN+1                                     00874100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_ANSAREA'                 00874200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00874300
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00874400
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00874500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ANSAREA'                      00874600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00874700
.*                                                                      00874800
&ZOPN                 SETA  &ZOPN+1                                     00874900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XKEEPNOTE_YES'                   00875000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00875100
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00875200
&ZOPD(&ZOPN)          SETC  '++ XKEEPNOTE.'                             00875300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00875400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00875500
.*-------------------------------------------------------------------   00875600
.***AM.L03 XFLAGS5 BL.8                                                 00875700
&ZOPN                 SETA &ZOPN+1                                      00875800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS5'                          00875900
&ZOPO(&ZOPN)          SETC 'DS'                                         00876000
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00876100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00876200
.*                                                                      00876300
&ZOPN                 SETA  &ZOPN+1                                     00876400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XDUPLEX_FAVOR'                   00876500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00876600
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00876700
&ZOPD(&ZOPN)          SETC  '++ XDUPLEX.'                               00876800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).FAVOR'                        00876900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00877000
.*                                                                      00877100
&ZOPN                 SETA  &ZOPN+1                                     00877200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XINSTCOMP_REQUIRED'              00877300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00877400
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00877500
&ZOPD(&ZOPN)          SETC  '++ XINSTCOMP.'                             00877600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).REQUIRED'                     00877700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00877800
.*                                                                      00877900
&ZOPN                 SETA  &ZOPN+1                                     00878000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTERMSCOPE_HOME'                 00878100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00878200
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00878300
&ZOPD(&ZOPN)          SETC  '++ XTERMSCOPE.'                            00878400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).HOME'                         00878500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00878600
.*                                                                      00878700
&ZOPN                 SETA  &ZOPN+1                                     00878800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTERMSCOPE_PRIMARY'              00878900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00879000
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00879100
&ZOPD(&ZOPN)          SETC  '++ XTERMSCOPE.'                            00879200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).PRIMARY'                      00879300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00879400
.*                                                                      00879500
&ZOPN                 SETA  &ZOPN+1                                     00879600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XACCESS_READ'                    00879700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00879800
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00879900
&ZOPD(&ZOPN)          SETC  '++ XACCESS.'                               00880000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).READ'                         00880100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00880200
.*-------------------------------------------------------------------   00880300
.***AM.L03 XFLAGS6 BL.8                                                 00880400
&ZOPN                 SETA &ZOPN+1                                      00880500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS6'                          00880600
&ZOPO(&ZOPN)          SETC 'DS'                                         00880700
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00880800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00880900
.*                                                                      00881000
&ZOPN                 SETA  &ZOPN+1                                     00881100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTRACKTAG_CURRENT'               00881200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00881300
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00881400
&ZOPD(&ZOPN)          SETC  '++ XTRACKTAG.'                             00881500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CURRENT'                      00881600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00881700
.*                                                                      00881800
&ZOPN                 SETA  &ZOPN+1                                     00881900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTRACKTAG_LIFETIME'              00882000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00882100
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00882200
&ZOPD(&ZOPN)          SETC  '++ XTRACKTAG.'                             00882300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LIFETIME'                     00882400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00882500
.*                                                                      00882600
&ZOPN                 SETA  &ZOPN+1                                     00882700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMULTIWRITE_YES'                 00882800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00882900
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00883000
&ZOPD(&ZOPN)          SETC  '++ XMULTIWRITE.'                           00883100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00883200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00883300
.*                                                                      00883400
&ZOPN                 SETA  &ZOPN+1                                     00883500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLOSSCONNDELETE_YES'             00883600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00883700
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00883800
&ZOPD(&ZOPN)          SETC  '++ XLOSSCONNDELETE.'                       00883900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00884000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00884100
.*                                                                      00884200
&ZOPN                 SETA  &ZOPN+1                                     00884300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMUSTBE_EMPTY'                   00884400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00884500
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00884600
&ZOPD(&ZOPN)          SETC  '++ XMUSTBE.'                               00884700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).EMPTY'                        00884800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00884900
.*                                                                      00885000
&ZOPN                 SETA  &ZOPN+1                                     00885100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMUSTBE_UNUSED'                  00885200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00885300
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00885400
&ZOPD(&ZOPN)          SETC  '++ XMUSTBE.'                               00885500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).UNUSED'                       00885600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00885700
.*                                                                      00885800
&ZOPN                 SETA  &ZOPN+1                                     00885900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_INFO'                    00886000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00886100
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00886200
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00886300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).INFO'                         00886400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00886500
.*-------------------------------------------------------------------   00886600
.***AM.L03 XFLAGS7 BL.8                                                 00886700
&ZOPN                 SETA &ZOPN+1                                      00886800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS7'                          00886900
&ZOPO(&ZOPN)          SETC 'DS'                                         00887000
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00887100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00887200
.*                                                                      00887300
&ZOPN                 SETA  &ZOPN+1                                     00887400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCHOOSE_BYCRITERIA'              00887500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00887600
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00887700
&ZOPD(&ZOPN)          SETC  '++ XCHOOSE.'                               00887800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BYCRITERIA'                   00887900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00888000
.*                                                                      00888100
&ZOPN                 SETA  &ZOPN+1                                     00888200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XUSAGE_SERVER'                   00888300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00888400
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00888500
&ZOPD(&ZOPN)          SETC  '++ XUSAGE.'                                00888600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SERVER'                       00888700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00888800
.*                                                                      00888900
&ZOPN                 SETA  &ZOPN+1                                     00889000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XUSAGE_CLIENT'                   00889100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00889200
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00889300
&ZOPD(&ZOPN)          SETC  '++ XUSAGE.'                                00889400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CLIENT'                       00889500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00889600
.*                                                                      00889700
&ZOPN                 SETA  &ZOPN+1                                     00889800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_MAXTAG'                  00889900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00890000
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00890100
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00890200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MAXTAG'                       00890300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00890400
.*-------------------------------------------------------------------   00890500
.***AM.L09  XNOTEPAD CL32                                               00890600
&ZOPN                 SETA &ZOPN+1                                      00890700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNOTEPAD'                         00890800
&ZOPO(&ZOPN)          SETC 'DS'                                         00890900
&ZOPV(&ZOPN)          SETC 'CL32'                                       00891000
&ZOPD(&ZOPN)          SETC '++ &ZXNOTEPAD '                             00891100
.*-------------------------------------------------------------------   00891200
.***AM.L09 ADDR64 XBUFFER AD                                            00891300
&ZOPN                 SETA &ZOPN+1                                      00891400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFFER_ADDR64'                   00891500
&ZOPO(&ZOPN)          SETC 'DS'                                         00891600
&ZOPV(&ZOPN)          SETC 'AD'                                         00891700
&ZOPD(&ZOPN)          SETC '++ &ZXBUFFER ADDR64'                        00891800
.*-------------------------------------------------------------------   00891900
.***AM.L09 ALET XBUFFER F                                               00892000
&ZOPN                 SETA &ZOPN+1                                      00892100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFFER_ALET'                     00892200
&ZOPO(&ZOPN)          SETC 'DS'                                         00892300
&ZOPV(&ZOPN)          SETC 'F'                                          00892400
&ZOPD(&ZOPN)          SETC '++ &ZXBUFFER ALET'                          00892500
.*-------------------------------------------------------------------   00892600
.***AM.L09  XBUFLEN F                                                   00892700
&ZOPN                 SETA &ZOPN+1                                      00892800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFLEN'                          00892900
&ZOPO(&ZOPN)          SETC 'DS'                                         00893000
&ZOPV(&ZOPN)          SETC 'F'                                          00893100
&ZOPD(&ZOPN)          SETC '++ &ZXBUFLEN '                              00893200
.*-------------------------------------------------------------------   00893300
.***AM.L09 ADDR64 XANSAREA AD                                           00893400
&ZOPN                 SETA &ZOPN+1                                      00893500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSAREA_ADDR64'                  00893600
&ZOPO(&ZOPN)          SETC 'DS'                                         00893700
&ZOPV(&ZOPN)          SETC 'AD'                                         00893800
&ZOPD(&ZOPN)          SETC '++ &ZXANSAREA ADDR64'                       00893900
.*-------------------------------------------------------------------   00894000
.***AM.L09 ALET XANSAREA F                                              00894100
&ZOPN                 SETA &ZOPN+1                                      00894200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSAREA_ALET'                    00894300
&ZOPO(&ZOPN)          SETC 'DS'                                         00894400
&ZOPV(&ZOPN)          SETC 'F'                                          00894500
&ZOPD(&ZOPN)          SETC '++ &ZXANSAREA ALET'                         00894600
.*-------------------------------------------------------------------   00894700
.***AM.L09  XANSLEN F                                                   00894800
&ZOPN                 SETA &ZOPN+1                                      00894900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSLEN'                          00895000
&ZOPO(&ZOPN)          SETC 'DS'                                         00895100
&ZOPV(&ZOPN)          SETC 'F'                                          00895200
&ZOPD(&ZOPN)          SETC '++ &ZXANSLEN '                              00895300
.*-------------------------------------------------------------------   00895400
.***AM.L09  XREQPARMS CL54                                              00895500
&ZOPN                 SETA &ZOPN+1                                      00895600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQPARMS'                        00895700
&ZOPO(&ZOPN)          SETC 'DS'                                         00895800
&ZOPV(&ZOPN)          SETC 'CL54'                                       00895900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            00896000
.*-------------------------------------------------------------------   00896100
.***AM.L09  XTIMEOUT XL2                                                00896200
&ZOPN                 SETA &ZOPN+1                                      00896300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTIMEOUT'                         00896400
&ZOPO(&ZOPN)          SETC 'DS'                                         00896500
&ZOPV(&ZOPN)          SETC 'XL2'                                        00896600
&ZOPD(&ZOPN)          SETC '++ &ZXTIMEOUT '                             00896700
.*-------------------------------------------------------------------   00896800
.***AM.MLM1 SAVED LOCATION COUNTER                                      00896900
                      AIF  ('&ZENDBASEPL' NE '').ZL52LB                 00897000
&ZENDBASEPL           SETC 'YES'                                        00897100
&ZOPN                 SETA &ZOPN+1                                      00897200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00897300
&ZOPO(&ZOPN)          SETC 'EQU'                                        00897400
&ZOPV(&ZOPN)          SETC '*'                                          00897500
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00897600
.ZL52LB               ANOP  ,                                           00897700
.*-------------------------------------------------------------------   00897800
.***AM.PJR1 DEFINED ON XREQPARMS                                        00897900
&ZOPN                 SETA &ZOPN+1                                      00898000
&ZOPL(&ZOPN)          SETC ' '                                          00898100
&ZOPO(&ZOPN)          SETC 'ORG'                                        00898200
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+72'                               00898300
&ZOPD(&ZOPN)          SETC ' '                                          00898400
.*-------------------------------------------------------------------   00898500
.***AM.L09  XTAG CL16                                                   00898600
&ZOPN                 SETA &ZOPN+1                                      00898700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTAG'                             00898800
&ZOPO(&ZOPN)          SETC 'DS'                                         00898900
&ZOPV(&ZOPN)          SETC 'CL16'                                       00899000
&ZOPD(&ZOPN)          SETC '++ &ZXTAG '                                 00899100
.*-------------------------------------------------------------------   00899200
.***AM.L09  XNAME CL8                                                   00899300
&ZOPN                 SETA &ZOPN+1                                      00899400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNAME'                            00899500
&ZOPO(&ZOPN)          SETC 'DS'                                         00899600
&ZOPV(&ZOPN)          SETC 'CL8'                                        00899700
&ZOPD(&ZOPN)          SETC '++ &ZXNAME '                                00899800
.*-------------------------------------------------------------------   00899900
.***AM.L09  XINSTANCE# CL8                                              00900000
&ZOPN                 SETA &ZOPN+1                                      00900100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XINSTANCE#'                       00900200
&ZOPO(&ZOPN)          SETC 'DS'                                         00900300
&ZOPV(&ZOPN)          SETC 'CL8'                                        00900400
&ZOPD(&ZOPN)          SETC '++ &ZXINSTANCE# '                           00900500
.*-------------------------------------------------------------------   00900600
.***AM.L09  XRSVNOTE CL22                                               00900700
&ZOPN                 SETA &ZOPN+1                                      00900800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSVNOTE'                         00900900
&ZOPO(&ZOPN)          SETC 'DS'                                         00901000
&ZOPV(&ZOPN)          SETC 'CL22'                                       00901100
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00901200
.*-------------------------------------------------------------------   00901300
.***AM.PJR1 DEFINED ON XREQPARMS                                        00901400
&ZOPN                 SETA &ZOPN+1                                      00901500
&ZOPL(&ZOPN)          SETC ' '                                          00901600
&ZOPO(&ZOPN)          SETC 'ORG'                                        00901700
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+72'                               00901800
&ZOPD(&ZOPN)          SETC ' '                                          00901900
.*-------------------------------------------------------------------   00902000
.***AM.L09  XRESUMETOKEN CL32                                           00902100
&ZOPN                 SETA &ZOPN+1                                      00902200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRESUMETOKEN'                     00902300
&ZOPO(&ZOPN)          SETC 'DS'                                         00902400
&ZOPV(&ZOPN)          SETC 'CL32'                                       00902500
&ZOPD(&ZOPN)          SETC '++ &ZXRESUMETOKEN '                         00902600
.*-------------------------------------------------------------------   00902700
.***AM.L09 ADDR64 XCRITERIA AD                                          00902800
&ZOPN                 SETA &ZOPN+1                                      00902900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCRITERIA_ADDR64'                 00903000
&ZOPO(&ZOPN)          SETC 'DS'                                         00903100
&ZOPV(&ZOPN)          SETC 'AD'                                         00903200
&ZOPD(&ZOPN)          SETC '++ &ZXCRITERIA ADDR64'                      00903300
.*-------------------------------------------------------------------   00903400
.***AM.L09 ALET XCRITERIA F                                             00903500
&ZOPN                 SETA &ZOPN+1                                      00903600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCRITERIA_ALET'                   00903700
&ZOPO(&ZOPN)          SETC 'DS'                                         00903800
&ZOPV(&ZOPN)          SETC 'F'                                          00903900
&ZOPD(&ZOPN)          SETC '++ &ZXCRITERIA ALET'                        00904000
.*-------------------------------------------------------------------   00904100
.***AM.L09  XRSVNOTESR CL10                                             00904200
&ZOPN                 SETA &ZOPN+1                                      00904300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSVNOTESR'                       00904400
&ZOPO(&ZOPN)          SETC 'DS'                                         00904500
&ZOPV(&ZOPN)          SETC 'CL10'                                       00904600
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00904700
.*-------------------------------------------------------------------   00904800
.***AM.PJR1 DEFINED ON XREQPARMS                                        00904900
&ZOPN                 SETA &ZOPN+1                                      00905000
&ZOPL(&ZOPN)          SETC ' '                                          00905100
&ZOPO(&ZOPN)          SETC 'ORG'                                        00905200
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+72'                               00905300
&ZOPD(&ZOPN)          SETC ' '                                          00905400
.*-------------------------------------------------------------------   00905500
.***AM.L09  XMAXTAG CL16                                                00905600
&ZOPN                 SETA &ZOPN+1                                      00905700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMAXTAG'                          00905800
&ZOPO(&ZOPN)          SETC 'DS'                                         00905900
&ZOPV(&ZOPN)          SETC 'CL16'                                       00906000
&ZOPD(&ZOPN)          SETC '++ &ZXMAXTAG '                              00906100
.*-------------------------------------------------------------------   00906200
.***AM.L09  XRSVNOTESD CL16                                             00906300
&ZOPN                 SETA &ZOPN+1                                      00906400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSVNOTESD'                       00906500
&ZOPO(&ZOPN)          SETC 'DS'                                         00906600
&ZOPV(&ZOPN)          SETC 'CL16'                                       00906700
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00906800
.*-------------------------------------------------------------------   00906900
.***AM.PJR1 DEFINED ON XREQPARMS                                        00907000
&ZOPN                 SETA &ZOPN+1                                      00907100
&ZOPL(&ZOPN)          SETC ' '                                          00907200
&ZOPO(&ZOPN)          SETC 'ORG'                                        00907300
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+72'                               00907400
&ZOPD(&ZOPN)          SETC ' '                                          00907500
.*-------------------------------------------------------------------   00907600
.***AM.L09 ADDR64 XDESCRIPTION AD                                       00907700
&ZOPN                 SETA &ZOPN+1                                      00907800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDESCRIPTION_ADDR64'              00907900
&ZOPO(&ZOPN)          SETC 'DS'                                         00908000
&ZOPV(&ZOPN)          SETC 'AD'                                         00908100
&ZOPD(&ZOPN)          SETC '++ &ZXDESCRIPTION ADDR64'                   00908200
.*-------------------------------------------------------------------   00908300
.***AM.L09 ALET XDESCRIPTION F                                          00908400
&ZOPN                 SETA &ZOPN+1                                      00908500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDESCRIPTION_ALET'                00908600
&ZOPO(&ZOPN)          SETC 'DS'                                         00908700
&ZOPV(&ZOPN)          SETC 'F'                                          00908800
&ZOPD(&ZOPN)          SETC '++ &ZXDESCRIPTION ALET'                     00908900
.*-------------------------------------------------------------------   00909000
.***AM.L09 ALET XINFO F                                                 00909100
&ZOPN                 SETA &ZOPN+1                                      00909200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XINFO_ALET'                       00909300
&ZOPO(&ZOPN)          SETC 'DS'                                         00909400
&ZOPV(&ZOPN)          SETC 'F'                                          00909500
&ZOPD(&ZOPN)          SETC '++ &ZXINFO ALET'                            00909600
.*-------------------------------------------------------------------   00909700
.***AM.L09 ADDR64 XINFO AD                                              00909800
&ZOPN                 SETA &ZOPN+1                                      00909900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XINFO_ADDR64'                     00910000
&ZOPO(&ZOPN)          SETC 'DS'                                         00910100
&ZOPV(&ZOPN)          SETC 'AD'                                         00910200
&ZOPD(&ZOPN)          SETC '++ &ZXINFO ADDR64'                          00910300
.*-------------------------------------------------------------------   00910400
.***AM.L09  XCREATEPARMS CL30                                           00910500
&ZOPN                 SETA &ZOPN+1                                      00910600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCREATEPARMS'                     00910700
&ZOPO(&ZOPN)          SETC 'DS'                                         00910800
&ZOPV(&ZOPN)          SETC 'CL30'                                       00910900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            00911000
.*-------------------------------------------------------------------   00911100
.***AM.PJR1 DEFINED ON XCREATEPARMS                                     00911200
&ZOPN                 SETA &ZOPN+1                                      00911300
&ZOPL(&ZOPN)          SETC ' '                                          00911400
&ZOPO(&ZOPN)          SETC 'ORG'                                        00911500
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+96'                               00911600
&ZOPD(&ZOPN)          SETC ' '                                          00911700
.*-------------------------------------------------------------------   00911800
.***AM.L09  X#NOTES F                                                   00911900
&ZOPN                 SETA &ZOPN+1                                      00912000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._X#NOTES'                          00912100
&ZOPO(&ZOPN)          SETC 'DS'                                         00912200
&ZOPV(&ZOPN)          SETC 'F'                                          00912300
&ZOPD(&ZOPN)          SETC '++ &ZX#NOTES '                              00912400
.*-------------------------------------------------------------------   00912500
.***AM.L09  XRSVNPC CL26                                                00912600
&ZOPN                 SETA &ZOPN+1                                      00912700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSVNPC'                          00912800
&ZOPO(&ZOPN)          SETC 'DS'                                         00912900
&ZOPV(&ZOPN)          SETC 'CL26'                                       00913000
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00913100
.*-------------------------------------------------------------------   00913200
.***AM.PJR1 DEFINED ON XCREATEPARMS                                     00913300
&ZOPN                 SETA &ZOPN+1                                      00913400
&ZOPL(&ZOPN)          SETC ' '                                          00913500
&ZOPO(&ZOPN)          SETC 'ORG'                                        00913600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+96'                               00913700
&ZOPD(&ZOPN)          SETC ' '                                          00913800
.*-------------------------------------------------------------------   00913900
.***AM.L09  XTTOKEN CL16                                                00914000
&ZOPN                 SETA &ZOPN+1                                      00914100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTTOKEN'                          00914200
&ZOPO(&ZOPN)          SETC 'DS'                                         00914300
&ZOPV(&ZOPN)          SETC 'CL16'                                       00914400
&ZOPD(&ZOPN)          SETC '++ &ZXTTOKEN '                              00914500
.*-------------------------------------------------------------------   00914600
.***AM.L09  XRSVCC CL14                                                 00914700
&ZOPN                 SETA &ZOPN+1                                      00914800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSVCC'                           00914900
&ZOPO(&ZOPN)          SETC 'DS'                                         00915000
&ZOPV(&ZOPN)          SETC 'CL14'                                       00915100
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00915200
.*-------------------------------------------------------------------   00915300
.***AM.PJR1 DEFINED ON XREQPARMS                                        00915400
&ZOPN                 SETA &ZOPN+1                                      00915500
&ZOPL(&ZOPN)          SETC ' '                                          00915600
&ZOPO(&ZOPN)          SETC 'ORG'                                        00915700
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+72'                               00915800
&ZOPD(&ZOPN)          SETC ' '                                          00915900
.*-------------------------------------------------------------------   00916000
.***AM.L09  XETODCREATED CL16                                           00916100
&ZOPN                 SETA &ZOPN+1                                      00916200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XETODCREATED'                     00916300
&ZOPO(&ZOPN)          SETC 'DS'                                         00916400
&ZOPV(&ZOPN)          SETC 'CL16'                                       00916500
&ZOPD(&ZOPN)          SETC '++ &ZXETODCREATED '                         00916600
.*-------------------------------------------------------------------   00916700
.***AM.L09  XRSVNPD CL38                                                00916800
&ZOPN                 SETA &ZOPN+1                                      00916900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSVNPD'                          00917000
&ZOPO(&ZOPN)          SETC 'DS'                                         00917100
&ZOPV(&ZOPN)          SETC 'CL38'                                       00917200
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00917300
.*-------------------------------------------------------------------   00917400
.***AM.PJR1 DEFINED ON XNOTEPAD                                         00917500
&ZOPN                 SETA &ZOPN+1                                      00917600
&ZOPL(&ZOPN)          SETC ' '                                          00917700
&ZOPO(&ZOPN)          SETC 'ORG'                                        00917800
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+8'                                00917900
&ZOPD(&ZOPN)          SETC ' '                                          00918000
.*-------------------------------------------------------------------   00918100
.***AM.L09  XCONNECTION CL32                                            00918200
&ZOPN                 SETA &ZOPN+1                                      00918300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONNECTION'                      00918400
&ZOPO(&ZOPN)          SETC 'DS'                                         00918500
&ZOPV(&ZOPN)          SETC 'CL32'                                       00918600
&ZOPD(&ZOPN)          SETC '++ &ZXCONNECTION '                          00918700
&ZOPN                 SETA &ZOPN+1                                      00918800
&ZOPL(&ZOPN)          SETC ' '                                          00918900
&ZOPO(&ZOPN)          SETC 'ORG'                                        00919000
&ZOPV(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00919100
&ZOPD(&ZOPN)          SETC 'RESET LOCATION COUNTER'                     00919200
.*-------------------------------------------------------------------   00919300
.***AM.L10 END OF IXCNOTE LIST PARAMETERS                               00919400
&ZOPN                 SETA &ZOPN+1                                      00919500
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00919600
&ZOPO(&ZOPN)          SETC 'EQU'                                        00919700
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00919800
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00919900
.*                                                                      00920000
&ZOPN                 SETA &ZOPN+1                                      00920100
&ZOPL(&ZOPN)          SETC ' '                                          00920200
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00920300
&ZOPV(&ZOPN)          SETC '1'                                          00920400
&ZOPD(&ZOPN)          SETC ' '                                          00920500
.*-------------------------------------------------------------------   00920600
.***AL.L12 IXCNOTE FMT=LIST MF=S!L PARAMETERS                           00920700
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00920800
.*                                                                      00920900
&ZOPN                 SETA  &ZOPN+1                                     00921000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00921100
&ZOPO(&ZOPN)          SETC  'DC'                                        00921200
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00921300
&ZOPD(&ZOPN)          SETC  '++ IXCNOTE ARG PARMS'                      00921400
.*                                                                      00921500
.ZLMFSLX              ANOP  ,                                           00921600
.*-------------------------------------------------------------------   00921700
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00921800
&ZPLLEN               SETA 128                                          00921900
.*                                                                      00922000
.******************************************************************     00922100
.***AI.L01 IXCNOTE FMT=LIST FILL IN PARAMETER AREA                      00922200
.******************************************************************     00922300
                      ACTR  10000                                       00922400
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00922500
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00922600
&ZCVAL                SETC  'LAE'          XAX MODE                     00922700
.ZIMFXA               ANOP ,                                            00922800
.*                                                                      00922900
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00923000
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00923100
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00923200
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00923300
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00923400
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00923500
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00923600
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00923700
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00923800
&ZOPN                 SETA  &ZOPN+1                                     00923900
&ZOPL(&ZOPN)          SETC  ' '                                         00924000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00924100
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00924200
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00924300
                      AGO   .ZIMFNX                                     00924400
.*                                                                      00924500
.ZIMFN2               ANOP ,                                            00924600
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00924700
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00924800
&ZOPN                 SETA  &ZOPN+1                                     00924900
&ZOPL(&ZOPN)          SETC  ' '                                         00925000
&ZOPO(&ZOPN)          SETC  'LAE'                                       00925100
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00925200
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00925300
                      AGO   .ZIMFNX                                     00925400
.ZIMFNX1              ANOP ,                                            00925500
&ZOPN                 SETA  &ZOPN+1                                     00925600
&ZOPL(&ZOPN)          SETC  ' '                                         00925700
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00925800
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00925900
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00926000
.ZIMFNX               ANOP ,                                            00926100
.********************************************************************   00926200
.***AI.L02 IXCNOTE FMT=LIST INITIALIZE PARAMETER AREA                   00926300
.********************************************************************   00926400
.***AI.L03 MF=(SLE)                                                     00926500
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00926600
.*                                                                      00926700
&ZOPN                 SETA  &ZOPN+1                                     00926800
&ZOPL(&ZOPN)          SETC  ' '                                         00926900
&ZOPO(&ZOPN)          SETC  'XC'                                        00927000
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00927100
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00927200
.ZIMFLX               ANOP  ,                                           00927300
.*-------------------------------------------------------------------   00927400
.***AI.L53 XSERVICE XL1                                                 00927500
&ZOPN                 SETA  &ZOPN+1                                     00927600
&ZOPL(&ZOPN)          SETC  ' '                                         00927700
&ZOPO(&ZOPN)          SETC  'MVI'                                       00927800
&ZOPV(&ZOPN)          SETC  '1(1),9'                                    00927900
&ZOPD(&ZOPN)          SETC  '++ XL1 CONSTANT'                           00928000
.*-------------------------------------------------------------------   00928100
.***AI.L07 XREQUEST AL1                                                 00928200
&ZW                   SETC  ''                                          00928300
.*-------------------------------------------------------------------   00928400
.***AI.L15 XREQUEST "NOTE" AL1                                          00928500
         AIF   ('&XREQUEST' NE 'NOTE').ZI4A                             00928600
&ZW                   SETC  '1'                                         00928700
.ZI4A                 ANOP  ,                                           00928800
.*-------------------------------------------------------------------   00928900
.***AI.L15 XREQUEST "NOTES" AL1                                         00929000
         AIF   ('&XREQUEST' NE 'NOTES').ZI5A                            00929100
&ZW                   SETC  '2'                                         00929200
.ZI5A                 ANOP  ,                                           00929300
.*-------------------------------------------------------------------   00929400
.***AI.L15 XREQUEST "CONNECTION" AL1                                    00929500
         AIF   ('&XREQUEST' NE 'CONNECTION').ZI6A                       00929600
&ZW                   SETC  '3'                                         00929700
.ZI6A                 ANOP  ,                                           00929800
.*-------------------------------------------------------------------   00929900
.***AI.L15 XREQUEST "NOTEPAD" AL1                                       00930000
         AIF   ('&XREQUEST' NE 'NOTEPAD').ZI7A                          00930100
&ZW                   SETC  '4'                                         00930200
.ZI7A                 ANOP  ,                                           00930300
.*-------------------------------------------------------------------   00930400
.***AI.L17 XREQUEST AL1                                                 00930500
                      AIF   ('&ZW' EQ '0').ZI7B                         00930600
                      AIF   ('&ZW' EQ '').ZI7B                          00930700
.*                                                                      00930800
&ZOPN                 SETA  &ZOPN+1                                     00930900
&ZOPL(&ZOPN)          SETC  ' '                                         00931000
&ZOPO(&ZOPN)          SETC  'MVI'                                       00931100
&ZOPV(&ZOPN)          SETC  '2(1),&ZW'                                  00931200
&ZOPD(&ZOPN)          SETC  '++ &ZXREQUEST XREQUEST'                    00931300
.ZI7B                 ANOP  ,                                           00931400
.*-------------------------------------------------------------------   00931500
.***AI.L07 XREQTYPE AL1                                                 00931600
&ZW                   SETC  ''                                          00931700
.*-------------------------------------------------------------------   00931800
.***AI.L15 XREQTYPE "CREATE" AL1                                        00931900
         AIF   ('&XREQTYPE' NE 'CREATE').ZI9A                           00932000
&ZW                   SETC  '1'                                         00932100
.ZI9A                 ANOP  ,                                           00932200
.*-------------------------------------------------------------------   00932300
.***AI.L15 XREQTYPE "WRITE" AL1                                         00932400
         AIF   ('&XREQTYPE' NE 'WRITE').ZI10A                           00932500
&ZW                   SETC  '2'                                         00932600
.ZI10A                ANOP  ,                                           00932700
.*-------------------------------------------------------------------   00932800
.***AI.L15 XREQTYPE "REPLACE" AL1                                       00932900
         AIF   ('&XREQTYPE' NE 'REPLACE').ZI11A                         00933000
&ZW                   SETC  '3'                                         00933100
.ZI11A                ANOP  ,                                           00933200
.*-------------------------------------------------------------------   00933300
.***AI.L15 XREQTYPE "DELETE" AL1                                        00933400
         AIF   ('&XREQTYPE' NE 'DELETE').ZI12A                          00933500
&ZW                   SETC  '4'                                         00933600
.ZI12A                ANOP  ,                                           00933700
.*-------------------------------------------------------------------   00933800
.***AI.L15 XREQTYPE "READ" AL1                                          00933900
         AIF   ('&XREQTYPE' NE 'READ').ZI13A                            00934000
&ZW                   SETC  '5'                                         00934100
.ZI13A                ANOP  ,                                           00934200
.*-------------------------------------------------------------------   00934300
.***AI.L15 XREQTYPE "QUERY" AL1                                         00934400
         AIF   ('&XREQTYPE' NE 'QUERY').ZI14A                           00934500
&ZW                   SETC  '6'                                         00934600
.ZI14A                ANOP  ,                                           00934700
.*-------------------------------------------------------------------   00934800
.***AI.L15 XREQTYPE "PAUSE" AL1                                         00934900
         AIF   ('&XREQTYPE' NE 'PAUSE').ZI15A                           00935000
&ZW                   SETC  '7'                                         00935100
.ZI15A                ANOP  ,                                           00935200
.*-------------------------------------------------------------------   00935300
.***AI.L15 XREQTYPE "RESUME" AL1                                        00935400
         AIF   ('&XREQTYPE' NE 'RESUME').ZI16A                          00935500
&ZW                   SETC  '8'                                         00935600
.ZI16A                ANOP  ,                                           00935700
.*-------------------------------------------------------------------   00935800
.***AI.L15 XREQTYPE "MODIFY" AL1                                        00935900
         AIF   ('&XREQTYPE' NE 'MODIFY').ZI17A                          00936000
&ZW                   SETC  '9'                                         00936100
.ZI17A                ANOP  ,                                           00936200
.*-------------------------------------------------------------------   00936300
.***AI.L17 XREQTYPE AL1                                                 00936400
                      AIF   ('&ZW' EQ '0').ZI17B                        00936500
                      AIF   ('&ZW' EQ '').ZI17B                         00936600
.*                                                                      00936700
&ZOPN                 SETA  &ZOPN+1                                     00936800
&ZOPL(&ZOPN)          SETC  ' '                                         00936900
&ZOPO(&ZOPN)          SETC  'MVI'                                       00937000
&ZOPV(&ZOPN)          SETC  '3(1),&ZW'                                  00937100
&ZOPD(&ZOPN)          SETC  '++ &ZXREQTYPE XREQTYPE'                    00937200
.ZI17B                ANOP  ,                                           00937300
.*-------------------------------------------------------------------   00937400
.***AI.L05 XFLAGS4 BL1                                                  00937500
&ZW                   SETC  ''                                          00937600
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00937700
.*-------------------------------------------------------------------   00937800
.***AI.L08 XFLAGS4 "USER"                                               00937900
.***      BL1'X1XXXXXX'                                                 00938000
         AIF   ('&XTAGGING' NE 'USER').ZI19A                            00938100
&ZW                   SETC  '&ZW.01'                                    00938200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00938300
                      AGO   .ZI19C                                      00938400
.*                                                                      00938500
.ZI19A                ANOP  ,                                           00938600
&ZW                   SETC  '&ZW.00'                                    00938700
.ZI19C                ANOP  ,                                           00938800
.*-------------------------------------------------------------------   00938900
.***AI.L08 XFLAGS4 "XCF"                                                00939000
.***      BL1'XX1XXXXX'                                                 00939100
         AIF   ('&XTAGGING' NE 'XCF').ZI20A                             00939200
&ZW                   SETC  '&ZW.1'                                     00939300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00939400
                      AGO   .ZI20C                                      00939500
.*                                                                      00939600
.ZI20A                ANOP  ,                                           00939700
&ZW                   SETC  '&ZW.0'                                     00939800
.ZI20C                ANOP  ,                                           00939900
.*-------------------------------------------------------------------   00940000
.***AI.L08 XFLAGS4 "BUFFER"                                             00940100
.***      BL1'XXX1XXXX'                                                 00940200
         AIF   ('&BUFFER' EQ '').ZI21A                                  00940300
&ZW                   SETC  '&ZW.1'                                     00940400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00940500
                      AGO   .ZI21C                                      00940600
.*                                                                      00940700
.ZI21A                ANOP  ,                                           00940800
&ZW                   SETC  '&ZW.0'                                     00940900
.ZI21C                ANOP  ,                                           00941000
.*-------------------------------------------------------------------   00941100
.***AI.L08 XFLAGS4 "TAG"                                                00941200
.***      BL1'XXXX1XXX'                                                 00941300
         AIF   ('&TAG' EQ '').ZI22A                                     00941400
         AIF   ('&TAG' EQ 'KEEP').ZI22A                                 00941500
&ZW                   SETC  '&ZW.1'                                     00941600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00941700
                      AGO   .ZI22C                                      00941800
.*                                                                      00941900
.ZI22A                ANOP  ,                                           00942000
&ZW                   SETC  '&ZW.0'                                     00942100
.ZI22C                ANOP  ,                                           00942200
.*-------------------------------------------------------------------   00942300
.***AI.L08 XFLAGS4 "ANSAREA"                                            00942400
.***      BL1'XXXXX1XX'                                                 00942500
         AIF   ('&ANSAREA' EQ '').ZI23A                                 00942600
&ZW                   SETC  '&ZW.1'                                     00942700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00942800
                      AGO   .ZI23C                                      00942900
.*                                                                      00943000
.ZI23A                ANOP  ,                                           00943100
&ZW                   SETC  '&ZW.0'                                     00943200
.ZI23C                ANOP  ,                                           00943300
.*-------------------------------------------------------------------   00943400
.***AI.L08 XFLAGS4 "YES"                                                00943500
.***      BL1'XXXXXX1X'                                                 00943600
         AIF   ('&XKEEPNOTE' NE 'YES').ZI24A                            00943700
&ZW                   SETC  '&ZW.10'                                    00943800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00943900
                      AGO   .ZI24C                                      00944000
.*                                                                      00944100
.ZI24A                ANOP  ,                                           00944200
&ZW                   SETC  '&ZW.00'                                    00944300
.ZI24C                ANOP  ,                                           00944400
.*-------------------------------------------------------------------   00944500
.***AI.L11 XFLAGS4 BL1                                                  00944600
                      AIF   ('&ZCLNG' NE 'YES').ZI24E  ALL ZERO BITS    00944700
&ZOPN                 SETA  &ZOPN+1                                     00944800
&ZOPL(&ZOPN)          SETC  ' '                                         00944900
&ZOPO(&ZOPN)          SETC  'OI'                                        00945000
&ZOPV(&ZOPN)          SETC  '4(1),B''&ZW'''                             00945100
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00945200
.ZI24E                ANOP  ,                                           00945300
.*-------------------------------------------------------------------   00945400
.***AI.L05 XFLAGS5 BL1                                                  00945500
&ZW                   SETC  ''                                          00945600
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00945700
.*-------------------------------------------------------------------   00945800
.***AI.L08 XFLAGS5 "FAVOR"                                              00945900
.***      BL1'XX1XXXXX'                                                 00946000
         AIF   ('&XDUPLEX' NE 'FAVOR').ZI26A                            00946100
&ZW                   SETC  '&ZW.001'                                   00946200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00946300
                      AGO   .ZI26C                                      00946400
.*                                                                      00946500
.ZI26A                ANOP  ,                                           00946600
&ZW                   SETC  '&ZW.000'                                   00946700
.ZI26C                ANOP  ,                                           00946800
.*-------------------------------------------------------------------   00946900
.***AI.L08 XFLAGS5 "REQUIRED"                                           00947000
.***      BL1'XXX1XXXX'                                                 00947100
         AIF   ('&XINSTCOMP' NE 'REQUIRED').ZI27A                       00947200
&ZW                   SETC  '&ZW.1'                                     00947300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00947400
                      AGO   .ZI27C                                      00947500
.*                                                                      00947600
.ZI27A                ANOP  ,                                           00947700
&ZW                   SETC  '&ZW.0'                                     00947800
.ZI27C                ANOP  ,                                           00947900
.*-------------------------------------------------------------------   00948000
.***AI.L08 XFLAGS5 "HOME"                                               00948100
.***      BL1'XXXX1XXX'                                                 00948200
         AIF   ('&XTERMSCOPE' NE 'HOME').ZI28A                          00948300
&ZW                   SETC  '&ZW.1'                                     00948400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00948500
                      AGO   .ZI28C                                      00948600
.*                                                                      00948700
.ZI28A                ANOP  ,                                           00948800
&ZW                   SETC  '&ZW.0'                                     00948900
.ZI28C                ANOP  ,                                           00949000
.*-------------------------------------------------------------------   00949100
.***AI.L08 XFLAGS5 "PRIMARY"                                            00949200
.***      BL1'XXXXX1XX'                                                 00949300
         AIF   ('&XTERMSCOPE' NE 'PRIMARY').ZI29A                       00949400
&ZW                   SETC  '&ZW.1'                                     00949500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00949600
                      AGO   .ZI29C                                      00949700
.*                                                                      00949800
.ZI29A                ANOP  ,                                           00949900
&ZW                   SETC  '&ZW.0'                                     00950000
.ZI29C                ANOP  ,                                           00950100
.*-------------------------------------------------------------------   00950200
.***AI.L08 XFLAGS5 "READ"                                               00950300
.***      BL1'XXXXXX1X'                                                 00950400
         AIF   ('&XACCESS' NE 'READ').ZI30A                             00950500
&ZW                   SETC  '&ZW.10'                                    00950600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00950700
                      AGO   .ZI30C                                      00950800
.*                                                                      00950900
.ZI30A                ANOP  ,                                           00951000
&ZW                   SETC  '&ZW.00'                                    00951100
.ZI30C                ANOP  ,                                           00951200
.*-------------------------------------------------------------------   00951300
.***AI.L11 XFLAGS5 BL1                                                  00951400
                      AIF   ('&ZCLNG' NE 'YES').ZI30E  ALL ZERO BITS    00951500
&ZOPN                 SETA  &ZOPN+1                                     00951600
&ZOPL(&ZOPN)          SETC  ' '                                         00951700
&ZOPO(&ZOPN)          SETC  'OI'                                        00951800
&ZOPV(&ZOPN)          SETC  '5(1),B''&ZW'''                             00951900
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00952000
.ZI30E                ANOP  ,                                           00952100
.*-------------------------------------------------------------------   00952200
.***AI.L05 XFLAGS6 BL1                                                  00952300
&ZW                   SETC  ''                                          00952400
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00952500
.*-------------------------------------------------------------------   00952600
.***AI.L08 XFLAGS6 "CURRENT"                                            00952700
.***      BL1'1XXXXXXX'                                                 00952800
         AIF   ('&XTRACKTAG' NE 'CURRENT').ZI32A                        00952900
&ZW                   SETC  '&ZW.1'                                     00953000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00953100
                      AGO   .ZI32C                                      00953200
.*                                                                      00953300
.ZI32A                ANOP  ,                                           00953400
&ZW                   SETC  '&ZW.0'                                     00953500
.ZI32C                ANOP  ,                                           00953600
.*-------------------------------------------------------------------   00953700
.***AI.L08 XFLAGS6 "LIFETIME"                                           00953800
.***      BL1'X1XXXXXX'                                                 00953900
         AIF   ('&XTRACKTAG' NE 'LIFETIME').ZI33A                       00954000
&ZW                   SETC  '&ZW.1'                                     00954100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00954200
                      AGO   .ZI33C                                      00954300
.*                                                                      00954400
.ZI33A                ANOP  ,                                           00954500
&ZW                   SETC  '&ZW.0'                                     00954600
.ZI33C                ANOP  ,                                           00954700
.*-------------------------------------------------------------------   00954800
.***AI.L08 XFLAGS6 "YES"                                                00954900
.***      BL1'XX1XXXXX'                                                 00955000
         AIF   ('&XMULTIWRITE' NE 'YES').ZI34A                          00955100
&ZW                   SETC  '&ZW.1'                                     00955200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00955300
                      AGO   .ZI34C                                      00955400
.*                                                                      00955500
.ZI34A                ANOP  ,                                           00955600
&ZW                   SETC  '&ZW.0'                                     00955700
.ZI34C                ANOP  ,                                           00955800
.*-------------------------------------------------------------------   00955900
.***AI.L08 XFLAGS6 "YES"                                                00956000
.***      BL1'XXX1XXXX'                                                 00956100
         AIF   ('&XLOSSCONNDELETE' NE 'YES').ZI35A                      00956200
&ZW                   SETC  '&ZW.1'                                     00956300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00956400
                      AGO   .ZI35C                                      00956500
.*                                                                      00956600
.ZI35A                ANOP  ,                                           00956700
&ZW                   SETC  '&ZW.0'                                     00956800
.ZI35C                ANOP  ,                                           00956900
.*-------------------------------------------------------------------   00957000
.***AI.L09 XFLAGS6 "EMPTY"                                              00957100
.***      BL1'XXXX1XXX'                                                 00957200
&ZI                   SETA  0              RESET ARRAY INDEX            00957300
.ZI36A                ANOP  ,                                           00957400
&ZI                   SETA  &ZI+1          NEXT ARRAY ENTRY             00957500
                      AIF   (K'&XMUSTBE(&ZI) LE 0).ZI36B                00957600
         AIF   ('&XMUSTBE(&ZI)' NE 'EMPTY').ZI36A                       00957700
&ZW                   SETC  '&ZW.1'                                     00957800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00957900
                      AGO   .ZI36C                                      00958000
.*                                                                      00958100
.ZI36B                ANOP  ,                                           00958200
&ZW                   SETC  '&ZW.0'                                     00958300
.ZI36C                ANOP  ,                                           00958400
.*-------------------------------------------------------------------   00958500
.***AI.L09 XFLAGS6 "UNUSED"                                             00958600
.***      BL1'XXXXX1XX'                                                 00958700
&ZI                   SETA  0              RESET ARRAY INDEX            00958800
.ZI37A                ANOP  ,                                           00958900
&ZI                   SETA  &ZI+1          NEXT ARRAY ENTRY             00959000
                      AIF   (K'&XMUSTBE(&ZI) LE 0).ZI37B                00959100
         AIF   ('&XMUSTBE(&ZI)' NE 'UNUSED').ZI37A                      00959200
&ZW                   SETC  '&ZW.1'                                     00959300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00959400
                      AGO   .ZI37C                                      00959500
.*                                                                      00959600
.ZI37B                ANOP  ,                                           00959700
&ZW                   SETC  '&ZW.0'                                     00959800
.ZI37C                ANOP  ,                                           00959900
.*-------------------------------------------------------------------   00960000
.***AI.L08 XFLAGS6 "INFO"                                               00960100
.***      BL1'XXXXXX1X'                                                 00960200
         AIF   ('&INFO' EQ '').ZI38A                                    00960300
         AIF   ('&INFO' EQ '0').ZI38A                                   00960400
         AIF   ('&INFO' EQ '0').ZI38A                                   00960500
&ZW                   SETC  '&ZW.10'                                    00960600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00960700
                      AGO   .ZI38C                                      00960800
.*                                                                      00960900
.ZI38A                ANOP  ,                                           00961000
&ZW                   SETC  '&ZW.00'                                    00961100
.ZI38C                ANOP  ,                                           00961200
.*-------------------------------------------------------------------   00961300
.***AI.L11 XFLAGS6 BL1                                                  00961400
                      AIF   ('&ZCLNG' NE 'YES').ZI38E  ALL ZERO BITS    00961500
&ZOPN                 SETA  &ZOPN+1                                     00961600
&ZOPL(&ZOPN)          SETC  ' '                                         00961700
&ZOPO(&ZOPN)          SETC  'OI'                                        00961800
&ZOPV(&ZOPN)          SETC  '6(1),B''&ZW'''                             00961900
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00962000
.ZI38E                ANOP  ,                                           00962100
.*-------------------------------------------------------------------   00962200
.***AI.L05 XFLAGS7 BL1                                                  00962300
&ZW                   SETC  ''                                          00962400
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00962500
.*-------------------------------------------------------------------   00962600
.***AI.L08 XFLAGS7 "BYCRITERIA"                                         00962700
.***      BL1'X1XXXXXX'                                                 00962800
         AIF   ('&XCHOOSE' NE 'BYCRITERIA').ZI40A                       00962900
&ZW                   SETC  '&ZW.01'                                    00963000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00963100
                      AGO   .ZI40C                                      00963200
.*                                                                      00963300
.ZI40A                ANOP  ,                                           00963400
&ZW                   SETC  '&ZW.00'                                    00963500
.ZI40C                ANOP  ,                                           00963600
.*-------------------------------------------------------------------   00963700
.***AI.L08 XFLAGS7 "SERVER"                                             00963800
.***      BL1'XX1XXXXX'                                                 00963900
         AIF   ('&XUSAGE' NE 'SERVER').ZI41A                            00964000
&ZW                   SETC  '&ZW.1'                                     00964100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00964200
                      AGO   .ZI41C                                      00964300
.*                                                                      00964400
.ZI41A                ANOP  ,                                           00964500
&ZW                   SETC  '&ZW.0'                                     00964600
.ZI41C                ANOP  ,                                           00964700
.*-------------------------------------------------------------------   00964800
.***AI.L08 XFLAGS7 "CLIENT"                                             00964900
.***      BL1'XXX1XXXX'                                                 00965000
         AIF   ('&XUSAGE' NE 'CLIENT').ZI42A                            00965100
&ZW                   SETC  '&ZW.1'                                     00965200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00965300
                      AGO   .ZI42C                                      00965400
.*                                                                      00965500
.ZI42A                ANOP  ,                                           00965600
&ZW                   SETC  '&ZW.0'                                     00965700
.ZI42C                ANOP  ,                                           00965800
.*-------------------------------------------------------------------   00965900
.***AI.L08 XFLAGS7 "MAXTAG"                                             00966000
.***      BL1'XXXX1XXX'                                                 00966100
         AIF   ('&MAXTAG' EQ '').ZI43A                                  00966200
         AIF   ('&MAXTAG' EQ 'NONE').ZI43A                              00966300
&ZW                   SETC  '&ZW.1000'                                  00966400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00966500
                      AGO   .ZI43C                                      00966600
.*                                                                      00966700
.ZI43A                ANOP  ,                                           00966800
&ZW                   SETC  '&ZW.0000'                                  00966900
.ZI43C                ANOP  ,                                           00967000
.*-------------------------------------------------------------------   00967100
.***AI.L11 XFLAGS7 BL1                                                  00967200
                      AIF   ('&ZCLNG' NE 'YES').ZI43E  ALL ZERO BITS    00967300
&ZOPN                 SETA  &ZOPN+1                                     00967400
&ZOPL(&ZOPN)          SETC  ' '                                         00967500
&ZOPO(&ZOPN)          SETC  'OI'                                        00967600
&ZOPV(&ZOPN)          SETC  '7(1),B''&ZW'''                             00967700
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00967800
.ZI43E                ANOP  ,                                           00967900
.*-------------------------------------------------------------------   00968000
.***AI.L25  XNOTEPAD CL32                                               00968100
                      AIF   ('&ZXNOTEPAD' EQ '').ZI44E                  00968200
                      AIF   ('&ZXNOTEPAD' EQ 'OUTPUT').ZI44E            00968300
&ZCGPR                SETC  '&XNOTEPAD'                                 00968400
.*                                                                      00968500
                      AIF   ('&XNOTEPAD'(1,1) NE '(').ZI44B             00968600
&ZCGPR   SETC  '0('.'&XNOTEPAD'(2,K'&XNOTEPAD-2).')'                    00968700
.ZI44B                ANOP  ,                                           00968800
.*                                                                      00968900
&ZOPN                 SETA  &ZOPN+1                                     00969000
&ZOPL(&ZOPN)          SETC  ' '                                         00969100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00969200
&ZOPV(&ZOPN)          SETC  '8(32,1),&ZCGPR'                            00969300
&ZOPD(&ZOPN)          SETC  '++ &ZXNOTEPAD XNOTEPAD'                    00969400
.*                                                                      00969500
.ZI44E                ANOP  ,                                           00969600
.*-------------------------------------------------------------------   00969700
.***AI.L19 ADDR64 XBUFFER AD                                            00969800
                      AIF   ('&ZXBUFFER' EQ '').ZI45H                   00969900
&ZCLNG                SETC  '&XBUFFER'                                  00970000
&ZCGPR                SETC  '14'                                        00970100
         AIF   ('&XBUFFER'(1,1) EQ '(').ZI45F  IN GPR                   00970200
.*                                                                      00970300
&ZOPN                 SETA  &ZOPN+1                                     00970400
&ZOPL(&ZOPN)          SETC  ' '                                         00970500
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00970600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00970700
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFFER XBUFFER'                      00970800
.*                                                                      00970900
                      AGO   .ZI45G                                      00971000
.*                                                                      00971100
.ZI45F                ANOP  ,                                           00971200
&ZCGPR   SETC  '&XBUFFER'(2,K'&XBUFFER-2)                               00971300
.*                                                                      00971400
.ZI45G                ANOP  ,                                           00971500
                      AIF   ('&SYSAM64' EQ 'YES').ZI45H1A               00971600
.*                                                                      00971700
&ZOPN                 SETA  &ZOPN+1                                     00971800
&ZOPL(&ZOPN)          SETC  ' '                                         00971900
&ZOPO(&ZOPN)          SETC  'ST'                                        00972000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+40(,1)'                           00972100
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFFER XBUFFER'                      00972200
.*                                                                      00972300
                      AGO   .ZI45H                                      00972400
.ZI45H1A              ANOP  ,                                           00972500
.*                                                                      00972600
&ZOPN                 SETA  &ZOPN+1                                     00972700
&ZOPL(&ZOPN)          SETC  ' '                                         00972800
&ZOPO(&ZOPN)          SETC  'STG'                                       00972900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,40(,1)'                             00973000
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFFER XBUFFER'                      00973100
.*                                                                      00973200
.ZI45H                ANOP  ,                                           00973300
.*-------------------------------------------------------------------   00973400
.***AI.L23 ALET XBUFFER F                                               00973500
         AIF   ('&ZXBUFFER' EQ '').ZI46G                                00973600
         AIF   ('&SYSASCE' EQ 'P').ZI46G   SYSSTATE PRIMARY             00973700
&ZCLNG                SETC  '&XBUFFER'                                  00973800
         AIF   ('&XBUFFER'(1,1) EQ '(').ZI46E  IN AR                    00973900
.*                                                                      00974000
&ZCGPR                SETC  '14'                                        00974100
                      AGO   .ZI46F                                      00974200
.*                                                                      00974300
.ZI46E                ANOP  ,                                           00974400
&ZCGPR   SETC  '&XBUFFER'(2,K'&XBUFFER-2)                               00974500
.*                                                                      00974600
.ZI46F                ANOP  ,                                           00974700
.*                                                                      00974800
&ZOPN                 SETA  &ZOPN+1                                     00974900
&ZOPL(&ZOPN)          SETC  ' '                                         00975000
&ZOPO(&ZOPN)          SETC  'STAM'                                      00975100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,48(1)'                       00975200
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFFER XBUFFER'                      00975300
.*                                                                      00975400
.ZI46G                ANOP  ,                                           00975500
.*-------------------------------------------------------------------   00975600
.***AI.L25  XBUFLEN F                                                   00975700
                      AIF   ('&ZXBUFLEN' EQ '').ZI47E                   00975800
                      AIF   ('&ZXBUFLEN' EQ 'OUTPUT').ZI47E             00975900
&ZCGPR                SETC  '&XBUFLEN'                                  00976000
.*                                                                      00976100
                      AIF   ('&XBUFLEN'(1,1) NE '(').ZI47B              00976200
&ZCGPR   SETC  '0('.'&XBUFLEN'(2,K'&XBUFLEN-2).')'                      00976300
                      AGO   .ZI47D                                      00976400
.ZI47B                ANOP  ,                                           00976500
.*                                                                      00976600
&ZC                   SETC  '&XBUFLEN'(1,1)                             00976700
                      AIF   (T'&ZC NE 'N').ZI47D                        00976800
&ZC                   SETC  '&XBUFLEN'                                  00976900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI47D               00977000
&ZCGPR                SETC  '=AL4(&XBUFLEN)'                            00977100
.*                                                                      00977200
.ZI47D                ANOP  ,                                           00977300
.*                                                                      00977400
&ZOPN                 SETA  &ZOPN+1                                     00977500
&ZOPL(&ZOPN)          SETC  ' '                                         00977600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00977700
&ZOPV(&ZOPN)          SETC  '52(4,1),&ZCGPR'                            00977800
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFLEN XBUFLEN'                      00977900
.*                                                                      00978000
.ZI47E                ANOP  ,                                           00978100
.*-------------------------------------------------------------------   00978200
.***AI.L19 ADDR64 XANSAREA AD                                           00978300
                      AIF   ('&ZXANSAREA' EQ '').ZI48H                  00978400
&ZCLNG                SETC  '&XANSAREA'                                 00978500
&ZCGPR                SETC  '14'                                        00978600
         AIF   ('&XANSAREA'(1,1) EQ '(').ZI48F  IN GPR                  00978700
.*                                                                      00978800
&ZOPN                 SETA  &ZOPN+1                                     00978900
&ZOPL(&ZOPN)          SETC  ' '                                         00979000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00979100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00979200
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    00979300
.*                                                                      00979400
                      AGO   .ZI48G                                      00979500
.*                                                                      00979600
.ZI48F                ANOP  ,                                           00979700
&ZCGPR   SETC  '&XANSAREA'(2,K'&XANSAREA-2)                             00979800
.*                                                                      00979900
.ZI48G                ANOP  ,                                           00980000
                      AIF   ('&SYSAM64' EQ 'YES').ZI48H1A               00980100
.*                                                                      00980200
&ZOPN                 SETA  &ZOPN+1                                     00980300
&ZOPL(&ZOPN)          SETC  ' '                                         00980400
&ZOPO(&ZOPN)          SETC  'ST'                                        00980500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+56(,1)'                           00980600
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    00980700
.*                                                                      00980800
                      AGO   .ZI48H                                      00980900
.ZI48H1A              ANOP  ,                                           00981000
.*                                                                      00981100
&ZOPN                 SETA  &ZOPN+1                                     00981200
&ZOPL(&ZOPN)          SETC  ' '                                         00981300
&ZOPO(&ZOPN)          SETC  'STG'                                       00981400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,56(,1)'                             00981500
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    00981600
.*                                                                      00981700
.ZI48H                ANOP  ,                                           00981800
.*-------------------------------------------------------------------   00981900
.***AI.L23 ALET XANSAREA F                                              00982000
         AIF   ('&ZXANSAREA' EQ '').ZI49G                               00982100
         AIF   ('&SYSASCE' EQ 'P').ZI49G   SYSSTATE PRIMARY             00982200
&ZCLNG                SETC  '&XANSAREA'                                 00982300
         AIF   ('&XANSAREA'(1,1) EQ '(').ZI49E  IN AR                   00982400
.*                                                                      00982500
&ZCGPR                SETC  '14'                                        00982600
                      AGO   .ZI49F                                      00982700
.*                                                                      00982800
.ZI49E                ANOP  ,                                           00982900
&ZCGPR   SETC  '&XANSAREA'(2,K'&XANSAREA-2)                             00983000
.*                                                                      00983100
.ZI49F                ANOP  ,                                           00983200
.*                                                                      00983300
&ZOPN                 SETA  &ZOPN+1                                     00983400
&ZOPL(&ZOPN)          SETC  ' '                                         00983500
&ZOPO(&ZOPN)          SETC  'STAM'                                      00983600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,64(1)'                       00983700
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    00983800
.*                                                                      00983900
.ZI49G                ANOP  ,                                           00984000
.*-------------------------------------------------------------------   00984100
.***AI.L25  XANSLEN F                                                   00984200
                      AIF   ('&ZXANSLEN' EQ '').ZI50E                   00984300
                      AIF   ('&ZXANSLEN' EQ 'OUTPUT').ZI50E             00984400
&ZCGPR                SETC  '&XANSLEN'                                  00984500
.*                                                                      00984600
                      AIF   ('&XANSLEN'(1,1) NE '(').ZI50B              00984700
&ZCGPR   SETC  '0('.'&XANSLEN'(2,K'&XANSLEN-2).')'                      00984800
                      AGO   .ZI50D                                      00984900
.ZI50B                ANOP  ,                                           00985000
.*                                                                      00985100
&ZC                   SETC  '&XANSLEN'(1,1)                             00985200
                      AIF   (T'&ZC NE 'N').ZI50D                        00985300
&ZC                   SETC  '&XANSLEN'                                  00985400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI50D               00985500
&ZCGPR                SETC  '=AL4(&XANSLEN)'                            00985600
.*                                                                      00985700
.ZI50D                ANOP  ,                                           00985800
.*                                                                      00985900
&ZOPN                 SETA  &ZOPN+1                                     00986000
&ZOPL(&ZOPN)          SETC  ' '                                         00986100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00986200
&ZOPV(&ZOPN)          SETC  '68(4,1),&ZCGPR'                            00986300
&ZOPD(&ZOPN)          SETC  '++ &ZXANSLEN XANSLEN'                      00986400
.*                                                                      00986500
.ZI50E                ANOP  ,                                           00986600
.*-------------------------------------------------------------------   00986700
.***AI.L18  XTIMEOUT XL2                                                00986800
         AIF   ('&XTIMEOUT' NE 'XCF').ZI52                              00986900
&ZXTIMEOUT            SETC  ''             RESET INPUT/OUTPUT           00987000
.ZI52                 ANOP  ,                                           00987100
.*-------------------------------------------------------------------   00987200
.***AI.L25  XTIMEOUT XL2                                                00987300
                      AIF   ('&ZXTIMEOUT' EQ '').ZI52E                  00987400
                      AIF   ('&ZXTIMEOUT' EQ 'OUTPUT').ZI52E            00987500
&ZCGPR                SETC  '&XTIMEOUT'                                 00987600
.*                                                                      00987700
                      AIF   ('&XTIMEOUT'(1,1) NE '(').ZI52B             00987800
&ZCGPR   SETC  '0('.'&XTIMEOUT'(2,K'&XTIMEOUT-2).')'                    00987900
                      AGO   .ZI52D                                      00988000
.ZI52B                ANOP  ,                                           00988100
.*                                                                      00988200
&ZC                   SETC  '&XTIMEOUT'(1,1)                            00988300
                      AIF   (T'&ZC NE 'N').ZI52D                        00988400
&ZC                   SETC  '&XTIMEOUT'                                 00988500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI52D               00988600
&ZCGPR                SETC  '=AL2(&XTIMEOUT)'                           00988700
.*                                                                      00988800
.ZI52D                ANOP  ,                                           00988900
.*                                                                      00989000
&ZOPN                 SETA  &ZOPN+1                                     00989100
&ZOPL(&ZOPN)          SETC  ' '                                         00989200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00989300
&ZOPV(&ZOPN)          SETC  '126(2,1),&ZCGPR'                           00989400
&ZOPD(&ZOPN)          SETC  '++ &ZXTIMEOUT XTIMEOUT'                    00989500
.*                                                                      00989600
.ZI52E                ANOP  ,                                           00989700
.*-------------------------------------------------------------------   00989800
.***AI.L18  XTAG CL16                                                   00989900
         AIF   ('&XTAG' NE 'KEEP').ZI54                                 00990000
&ZXTAG                SETC  ''             RESET INPUT/OUTPUT           00990100
.ZI54                 ANOP  ,                                           00990200
.*-------------------------------------------------------------------   00990300
.***AI.L25  XTAG CL16                                                   00990400
                      AIF   ('&ZXTAG' EQ '').ZI54E                      00990500
                      AIF   ('&ZXTAG' EQ 'OUTPUT').ZI54E                00990600
&ZCGPR                SETC  '&XTAG'                                     00990700
.*                                                                      00990800
                      AIF   ('&XTAG'(1,1) NE '(').ZI54B                 00990900
&ZCGPR   SETC  '0('.'&XTAG'(2,K'&XTAG-2).')'                            00991000
.ZI54B                ANOP  ,                                           00991100
.*                                                                      00991200
&ZOPN                 SETA  &ZOPN+1                                     00991300
&ZOPL(&ZOPN)          SETC  ' '                                         00991400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00991500
&ZOPV(&ZOPN)          SETC  '72(16,1),&ZCGPR'                           00991600
&ZOPD(&ZOPN)          SETC  '++ &ZXTAG XTAG'                            00991700
.*                                                                      00991800
.ZI54E                ANOP  ,                                           00991900
.*-------------------------------------------------------------------   00992000
.***AI.L25  XNAME CL8                                                   00992100
                      AIF   ('&ZXNAME' EQ '').ZI55E                     00992200
                      AIF   ('&ZXNAME' EQ 'OUTPUT').ZI55E               00992300
&ZCGPR                SETC  '&XNAME'                                    00992400
.*                                                                      00992500
                      AIF   ('&XNAME'(1,1) NE '(').ZI55B                00992600
&ZCGPR   SETC  '0('.'&XNAME'(2,K'&XNAME-2).')'                          00992700
.ZI55B                ANOP  ,                                           00992800
.*                                                                      00992900
&ZOPN                 SETA  &ZOPN+1                                     00993000
&ZOPL(&ZOPN)          SETC  ' '                                         00993100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00993200
&ZOPV(&ZOPN)          SETC  '88(8,1),&ZCGPR'                            00993300
&ZOPD(&ZOPN)          SETC  '++ &ZXNAME XNAME'                          00993400
.*                                                                      00993500
.ZI55E                ANOP  ,                                           00993600
.*-------------------------------------------------------------------   00993700
.***AI.L18  XINSTANCE# CL8                                              00993800
         AIF   ('&XINSTANCE#' NE 'IGNORE').ZI56                         00993900
&ZXINSTANCE#          SETC  ''             RESET INPUT/OUTPUT           00994000
.ZI56                 ANOP  ,                                           00994100
.*-------------------------------------------------------------------   00994200
.***AI.L25  XINSTANCE# CL8                                              00994300
                      AIF   ('&ZXINSTANCE#' EQ '').ZI56E                00994400
                      AIF   ('&ZXINSTANCE#' EQ 'OUTPUT').ZI56E          00994500
&ZCGPR                SETC  '&XINSTANCE#'                               00994600
.*                                                                      00994700
                      AIF   ('&XINSTANCE#'(1,1) NE '(').ZI56B           00994800
&ZCGPR   SETC  '0('.'&XINSTANCE#'(2,K'&XINSTANCE#-2).')'                00994900
.ZI56B                ANOP  ,                                           00995000
.*                                                                      00995100
&ZOPN                 SETA  &ZOPN+1                                     00995200
&ZOPL(&ZOPN)          SETC  ' '                                         00995300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00995400
&ZOPV(&ZOPN)          SETC  '96(8,1),&ZCGPR'                            00995500
&ZOPD(&ZOPN)          SETC  '++ &ZXINSTANCE# XINSTANCE#'                00995600
.*                                                                      00995700
.ZI56E                ANOP  ,                                           00995800
.*-------------------------------------------------------------------   00995900
.***AI.L25  XRESUMETOKEN CL32                                           00996000
                      AIF   ('&ZXRESUMETOKEN' EQ '').ZI59E              00996100
                      AIF   ('&ZXRESUMETOKEN' EQ 'OUTPUT').ZI59E        00996200
&ZCGPR                SETC  '&XRESUMETOKEN'                             00996300
.*                                                                      00996400
                      AIF   ('&XRESUMETOKEN'(1,1) NE '(').ZI59B         00996500
&ZCGPR   SETC  '0('.'&XRESUMETOKEN'(2,K'&XRESUMETOKEN-2).')'            00996600
.ZI59B                ANOP  ,                                           00996700
.*                                                                      00996800
&ZOPN                 SETA  &ZOPN+1                                     00996900
&ZOPL(&ZOPN)          SETC  ' '                                         00997000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00997100
&ZOPV(&ZOPN)          SETC  '72(32,1),&ZCGPR'                           00997200
&ZOPD(&ZOPN)          SETC  '++ &ZXRESUMETOKEN XRESUMETOKEN'            00997300
.*                                                                      00997400
.ZI59E                ANOP  ,                                           00997500
.*-------------------------------------------------------------------   00997600
.***AI.L19 ADDR64 XCRITERIA AD                                          00997700
                      AIF   ('&ZXCRITERIA' EQ '').ZI60H                 00997800
&ZCLNG                SETC  '&XCRITERIA'                                00997900
&ZCGPR                SETC  '14'                                        00998000
         AIF   ('&XCRITERIA'(1,1) EQ '(').ZI60F  IN GPR                 00998100
.*                                                                      00998200
&ZOPN                 SETA  &ZOPN+1                                     00998300
&ZOPL(&ZOPN)          SETC  ' '                                         00998400
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00998500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00998600
&ZOPD(&ZOPN)          SETC  '++ &ZXCRITERIA XCRITERIA'                  00998700
.*                                                                      00998800
                      AGO   .ZI60G                                      00998900
.*                                                                      00999000
.ZI60F                ANOP  ,                                           00999100
&ZCGPR   SETC  '&XCRITERIA'(2,K'&XCRITERIA-2)                           00999200
.*                                                                      00999300
.ZI60G                ANOP  ,                                           00999400
                      AIF   ('&SYSAM64' EQ 'YES').ZI60H1A               00999500
.*                                                                      00999600
&ZOPN                 SETA  &ZOPN+1                                     00999700
&ZOPL(&ZOPN)          SETC  ' '                                         00999800
&ZOPO(&ZOPN)          SETC  'ST'                                        00999900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+104(,1)'                          01000000
&ZOPD(&ZOPN)          SETC  '++ &ZXCRITERIA XCRITERIA'                  01000100
.*                                                                      01000200
                      AGO   .ZI60H                                      01000300
.ZI60H1A              ANOP  ,                                           01000400
.*                                                                      01000500
&ZOPN                 SETA  &ZOPN+1                                     01000600
&ZOPL(&ZOPN)          SETC  ' '                                         01000700
&ZOPO(&ZOPN)          SETC  'STG'                                       01000800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,104(,1)'                            01000900
&ZOPD(&ZOPN)          SETC  '++ &ZXCRITERIA XCRITERIA'                  01001000
.*                                                                      01001100
.ZI60H                ANOP  ,                                           01001200
.*-------------------------------------------------------------------   01001300
.***AI.L23 ALET XCRITERIA F                                             01001400
         AIF   ('&ZXCRITERIA' EQ '').ZI61G                              01001500
         AIF   ('&SYSASCE' EQ 'P').ZI61G   SYSSTATE PRIMARY             01001600
&ZCLNG                SETC  '&XCRITERIA'                                01001700
         AIF   ('&XCRITERIA'(1,1) EQ '(').ZI61E  IN AR                  01001800
.*                                                                      01001900
&ZCGPR                SETC  '14'                                        01002000
                      AGO   .ZI61F                                      01002100
.*                                                                      01002200
.ZI61E                ANOP  ,                                           01002300
&ZCGPR   SETC  '&XCRITERIA'(2,K'&XCRITERIA-2)                           01002400
.*                                                                      01002500
.ZI61F                ANOP  ,                                           01002600
.*                                                                      01002700
&ZOPN                 SETA  &ZOPN+1                                     01002800
&ZOPL(&ZOPN)          SETC  ' '                                         01002900
&ZOPO(&ZOPN)          SETC  'STAM'                                      01003000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,112(1)'                      01003100
&ZOPD(&ZOPN)          SETC  '++ &ZXCRITERIA XCRITERIA'                  01003200
.*                                                                      01003300
.ZI61G                ANOP  ,                                           01003400
.*-------------------------------------------------------------------   01003500
.***AI.L18  XMAXTAG CL16                                                01003600
         AIF   ('&XMAXTAG' NE 'NONE').ZI64                              01003700
&ZXMAXTAG             SETC  ''             RESET INPUT/OUTPUT           01003800
.ZI64                 ANOP  ,                                           01003900
.*-------------------------------------------------------------------   01004000
.***AI.L25  XMAXTAG CL16                                                01004100
                      AIF   ('&ZXMAXTAG' EQ '').ZI64E                   01004200
                      AIF   ('&ZXMAXTAG' EQ 'OUTPUT').ZI64E             01004300
&ZCGPR                SETC  '&XMAXTAG'                                  01004400
.*                                                                      01004500
                      AIF   ('&XMAXTAG'(1,1) NE '(').ZI64B              01004600
&ZCGPR   SETC  '0('.'&XMAXTAG'(2,K'&XMAXTAG-2).')'                      01004700
.ZI64B                ANOP  ,                                           01004800
.*                                                                      01004900
&ZOPN                 SETA  &ZOPN+1                                     01005000
&ZOPL(&ZOPN)          SETC  ' '                                         01005100
&ZOPO(&ZOPN)          SETC  'MVC'                                       01005200
&ZOPV(&ZOPN)          SETC  '72(16,1),&ZCGPR'                           01005300
&ZOPD(&ZOPN)          SETC  '++ &ZXMAXTAG XMAXTAG'                      01005400
.*                                                                      01005500
.ZI64E                ANOP  ,                                           01005600
.*-------------------------------------------------------------------   01005700
.***AI.L19 ADDR64 XDESCRIPTION AD                                       01005800
                      AIF   ('&ZXDESCRIPTION' EQ '').ZI67H              01005900
&ZCLNG                SETC  '&XDESCRIPTION'                             01006000
&ZCGPR                SETC  '14'                                        01006100
         AIF   ('&XDESCRIPTION'(1,1) EQ '(').ZI67F  IN GPR              01006200
.*                                                                      01006300
&ZOPN                 SETA  &ZOPN+1                                     01006400
&ZOPL(&ZOPN)          SETC  ' '                                         01006500
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01006600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01006700
&ZOPD(&ZOPN)          SETC  '++ &ZXDESCRIPTION XDESCRIPTION'            01006800
.*                                                                      01006900
                      AGO   .ZI67G                                      01007000
.*                                                                      01007100
.ZI67F                ANOP  ,                                           01007200
&ZCGPR   SETC  '&XDESCRIPTION'(2,K'&XDESCRIPTION-2)                     01007300
.*                                                                      01007400
.ZI67G                ANOP  ,                                           01007500
                      AIF   ('&SYSAM64' EQ 'YES').ZI67H1A               01007600
.*                                                                      01007700
&ZOPN                 SETA  &ZOPN+1                                     01007800
&ZOPL(&ZOPN)          SETC  ' '                                         01007900
&ZOPO(&ZOPN)          SETC  'ST'                                        01008000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+72(,1)'                           01008100
&ZOPD(&ZOPN)          SETC  '++ &ZXDESCRIPTION XDESCRIPTION'            01008200
.*                                                                      01008300
                      AGO   .ZI67H                                      01008400
.ZI67H1A              ANOP  ,                                           01008500
.*                                                                      01008600
&ZOPN                 SETA  &ZOPN+1                                     01008700
&ZOPL(&ZOPN)          SETC  ' '                                         01008800
&ZOPO(&ZOPN)          SETC  'STG'                                       01008900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,72(,1)'                             01009000
&ZOPD(&ZOPN)          SETC  '++ &ZXDESCRIPTION XDESCRIPTION'            01009100
.*                                                                      01009200
.ZI67H                ANOP  ,                                           01009300
.*-------------------------------------------------------------------   01009400
.***AI.L23 ALET XDESCRIPTION F                                          01009500
         AIF   ('&ZXDESCRIPTION' EQ '').ZI68G                           01009600
         AIF   ('&SYSASCE' EQ 'P').ZI68G   SYSSTATE PRIMARY             01009700
&ZCLNG                SETC  '&XDESCRIPTION'                             01009800
         AIF   ('&XDESCRIPTION'(1,1) EQ '(').ZI68E  IN AR               01009900
.*                                                                      01010000
&ZCGPR                SETC  '14'                                        01010100
                      AGO   .ZI68F                                      01010200
.*                                                                      01010300
.ZI68E                ANOP  ,                                           01010400
&ZCGPR   SETC  '&XDESCRIPTION'(2,K'&XDESCRIPTION-2)                     01010500
.*                                                                      01010600
.ZI68F                ANOP  ,                                           01010700
.*                                                                      01010800
&ZOPN                 SETA  &ZOPN+1                                     01010900
&ZOPL(&ZOPN)          SETC  ' '                                         01011000
&ZOPO(&ZOPN)          SETC  'STAM'                                      01011100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,80(1)'                       01011200
&ZOPD(&ZOPN)          SETC  '++ &ZXDESCRIPTION XDESCRIPTION'            01011300
.*                                                                      01011400
.ZI68G                ANOP  ,                                           01011500
.*-------------------------------------------------------------------   01011600
.***AI.L23 ALET XINFO F                                                 01011700
         AIF   ('&ZXINFO' EQ '').ZI69G                                  01011800
         AIF   ('&SYSASCE' EQ 'P').ZI69G   SYSSTATE PRIMARY             01011900
&ZCLNG                SETC  '&XINFO'                                    01012000
         AIF   ('&XINFO'(1,1) EQ '(').ZI69E  IN AR                      01012100
        AIF   ('&XINFO' EQ '0').ZI69G                                   01012200
.*                                                                      01012300
&ZCGPR                SETC  '14'                                        01012400
&ZOPN                 SETA  &ZOPN+1                                     01012500
&ZOPL(&ZOPN)          SETC  ' '                                         01012600
&ZOPO(&ZOPN)          SETC  'LAE'                                       01012700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01012800
&ZOPD(&ZOPN)          SETC  '++ &ZXINFO XINFO'                          01012900
                      AGO   .ZI69F                                      01013000
.*                                                                      01013100
.ZI69E                ANOP  ,                                           01013200
&ZCGPR   SETC  '&XINFO'(2,K'&XINFO-2)                                   01013300
.*                                                                      01013400
.ZI69F                ANOP  ,                                           01013500
.*                                                                      01013600
&ZOPN                 SETA  &ZOPN+1                                     01013700
&ZOPL(&ZOPN)          SETC  ' '                                         01013800
&ZOPO(&ZOPN)          SETC  'STAM'                                      01013900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,84(1)'                       01014000
&ZOPD(&ZOPN)          SETC  '++ &ZXINFO XINFO'                          01014100
.*                                                                      01014200
.ZI69G                ANOP  ,                                           01014300
.*-------------------------------------------------------------------   01014400
.***AI.L19 ADDR64 XINFO AD                                              01014500
                      AIF   ('&ZXINFO' EQ '').ZI70H                     01014600
&ZCLNG                SETC  '&XINFO'                                    01014700
&ZCGPR                SETC  '14'                                        01014800
         AIF   ('&XINFO'(1,1) EQ '(').ZI70F  IN GPR                     01014900
        AIF   ('&XINFO' EQ '0').ZI70H                                   01015000
.*                                                                      01015100
         AIF   ('&SYSASCE' NE 'P').ZI70G   SYSSTATE PRIMARY             01015200
.*                                                                      01015300
&ZOPN                 SETA  &ZOPN+1                                     01015400
&ZOPL(&ZOPN)          SETC  ' '                                         01015500
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01015600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             01015700
&ZOPD(&ZOPN)          SETC  '++ &ZXINFO XINFO'                          01015800
.*                                                                      01015900
                      AGO   .ZI70G                                      01016000
.*                                                                      01016100
.ZI70F                ANOP  ,                                           01016200
&ZCGPR   SETC  '&XINFO'(2,K'&XINFO-2)                                   01016300
.*                                                                      01016400
.ZI70G                ANOP  ,                                           01016500
                      AIF   ('&SYSAM64' EQ 'YES').ZI70H1A               01016600
.*                                                                      01016700
&ZOPN                 SETA  &ZOPN+1                                     01016800
&ZOPL(&ZOPN)          SETC  ' '                                         01016900
&ZOPO(&ZOPN)          SETC  'ST'                                        01017000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+88(,1)'                           01017100
&ZOPD(&ZOPN)          SETC  '++ &ZXINFO XINFO'                          01017200
.*                                                                      01017300
                      AGO   .ZI70H                                      01017400
.ZI70H1A              ANOP  ,                                           01017500
.*                                                                      01017600
&ZOPN                 SETA  &ZOPN+1                                     01017700
&ZOPL(&ZOPN)          SETC  ' '                                         01017800
&ZOPO(&ZOPN)          SETC  'STG'                                       01017900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,88(,1)'                             01018000
&ZOPD(&ZOPN)          SETC  '++ &ZXINFO XINFO'                          01018100
.*                                                                      01018200
.ZI70H                ANOP  ,                                           01018300
.*-------------------------------------------------------------------   01018400
.***AI.L25  X#NOTES F                                                   01018500
                      AIF   ('&ZX#NOTES' EQ '').ZI73E                   01018600
                      AIF   ('&ZX#NOTES' EQ 'OUTPUT').ZI73E             01018700
&ZCGPR                SETC  '&X#NOTES'                                  01018800
.*                                                                      01018900
                      AIF   ('&X#NOTES'(1,1) NE '(').ZI73B              01019000
&ZCGPR   SETC  '0('.'&X#NOTES'(2,K'&X#NOTES-2).')'                      01019100
                      AGO   .ZI73D                                      01019200
.ZI73B                ANOP  ,                                           01019300
.*                                                                      01019400
&ZC                   SETC  '&X#NOTES'(1,1)                             01019500
                      AIF   (T'&ZC NE 'N').ZI73D                        01019600
&ZC                   SETC  '&X#NOTES'                                  01019700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI73D               01019800
&ZCGPR                SETC  '=AL4(&X#NOTES)'                            01019900
.*                                                                      01020000
.ZI73D                ANOP  ,                                           01020100
.*                                                                      01020200
&ZOPN                 SETA  &ZOPN+1                                     01020300
&ZOPL(&ZOPN)          SETC  ' '                                         01020400
&ZOPO(&ZOPN)          SETC  'MVC'                                       01020500
&ZOPV(&ZOPN)          SETC  '96(4,1),&ZCGPR'                            01020600
&ZOPD(&ZOPN)          SETC  '++ &ZX#NOTES X#NOTES'                      01020700
.*                                                                      01020800
.ZI73E                ANOP  ,                                           01020900
.*-------------------------------------------------------------------   01021000
.***AI.L18  XTTOKEN CL16                                                01021100
         AIF   ('&XTTOKEN' NE 'CURRENT').ZI76                           01021200
&ZXTTOKEN             SETC  ''             RESET INPUT/OUTPUT           01021300
.ZI76                 ANOP  ,                                           01021400
.*-------------------------------------------------------------------   01021500
.***AI.L25  XTTOKEN CL16                                                01021600
                      AIF   ('&ZXTTOKEN' EQ '').ZI76E                   01021700
                      AIF   ('&ZXTTOKEN' EQ 'OUTPUT').ZI76E             01021800
&ZCGPR                SETC  '&XTTOKEN'                                  01021900
.*                                                                      01022000
                      AIF   ('&XTTOKEN'(1,1) NE '(').ZI76B              01022100
&ZCGPR   SETC  '0('.'&XTTOKEN'(2,K'&XTTOKEN-2).')'                      01022200
.ZI76B                ANOP  ,                                           01022300
.*                                                                      01022400
&ZOPN                 SETA  &ZOPN+1                                     01022500
&ZOPL(&ZOPN)          SETC  ' '                                         01022600
&ZOPO(&ZOPN)          SETC  'MVC'                                       01022700
&ZOPV(&ZOPN)          SETC  '96(16,1),&ZCGPR'                           01022800
&ZOPD(&ZOPN)          SETC  '++ &ZXTTOKEN XTTOKEN'                      01022900
.*                                                                      01023000
.ZI76E                ANOP  ,                                           01023100
.*-------------------------------------------------------------------   01023200
.***AI.L18  XETODCREATED CL16                                           01023300
         AIF   ('&XETODCREATED' NE 'ANY').ZI79                          01023400
&ZXETODCREATED        SETC  ''             RESET INPUT/OUTPUT           01023500
.ZI79                 ANOP  ,                                           01023600
.*-------------------------------------------------------------------   01023700
.***AI.L25  XETODCREATED CL16                                           01023800
                      AIF   ('&ZXETODCREATED' EQ '').ZI79E              01023900
                      AIF   ('&ZXETODCREATED' EQ 'OUTPUT').ZI79E        01024000
&ZCGPR                SETC  '&XETODCREATED'                             01024100
.*                                                                      01024200
                      AIF   ('&XETODCREATED'(1,1) NE '(').ZI79B         01024300
&ZCGPR   SETC  '0('.'&XETODCREATED'(2,K'&XETODCREATED-2).')'            01024400
.ZI79B                ANOP  ,                                           01024500
.*                                                                      01024600
&ZOPN                 SETA  &ZOPN+1                                     01024700
&ZOPL(&ZOPN)          SETC  ' '                                         01024800
&ZOPO(&ZOPN)          SETC  'MVC'                                       01024900
&ZOPV(&ZOPN)          SETC  '72(16,1),&ZCGPR'                           01025000
&ZOPD(&ZOPN)          SETC  '++ &ZXETODCREATED XETODCREATED'            01025100
.*                                                                      01025200
.ZI79E                ANOP  ,                                           01025300
.*-------------------------------------------------------------------   01025400
.***AI.L25  XCONNECTION CL32                                            01025500
                      AIF   ('&ZXCONNECTION' EQ '').ZI82E               01025600
                      AIF   ('&ZXCONNECTION' EQ 'OUTPUT').ZI82E         01025700
&ZCGPR                SETC  '&XCONNECTION'                              01025800
.*                                                                      01025900
                      AIF   ('&XCONNECTION'(1,1) NE '(').ZI82B          01026000
&ZCGPR   SETC  '0('.'&XCONNECTION'(2,K'&XCONNECTION-2).')'              01026100
.ZI82B                ANOP  ,                                           01026200
.*                                                                      01026300
&ZOPN                 SETA  &ZOPN+1                                     01026400
&ZOPL(&ZOPN)          SETC  ' '                                         01026500
&ZOPO(&ZOPN)          SETC  'MVC'                                       01026600
&ZOPV(&ZOPN)          SETC  '8(32,1),&ZCGPR'                            01026700
&ZOPD(&ZOPN)          SETC  '++ &ZXCONNECTION XCONNECTION'              01026800
.*                                                                      01026900
.ZI82E                ANOP  ,                                           01027000
.*-------------------------------------------------------------------   01027100
&ZOPN1                SETA &ZOPN                                        01027200
.*******************************************************************    01027300
.***  PROCESS IXCNOTE OUTPUT PARAMETERS                                 01027400
.*******************************************************************    01027500
                      ACTR  10000                                       01027600
.*------------------------------------------------------------------    01027700
.***AO.L01 XTAG CL16                                                    01027800
        AIF   ('&XTAG' NE 'KEEP').ZO54                                  01027900
&ZXTAG                SETC  ''             RESET OUTPUT/INOUT           01028000
.ZO54                 ANOP  ,                                           01028100
.*------------------------------------------------------------------    01028200
.***AO.L02 XTAG CL16                                                    01028300
         AIF   ('&XTAG' NE 'KEEP').ZO54D   CK DEF                       01028400
         AIF   ('&ZXTAG' NE 'OUTPUT').ZO54C  CK DEF                     01028500
.ZO54D                ANOP  ,                                           01028600
         AIF   ('&ZXTAG' EQ 'OUTPUT').ZO54A  OUTPUT                     01028700
         AIF   ('&ZXTAG' NE 'INOUT').ZO54C  INOUT                       01028800
.ZO54A    AIF   ('&XTAG'(1,1) NE '(').ZO54B  ADDR IN GPR                01028900
&ZCGPR   SETC  '&XTAG'(2,K'&XTAG-2)                                     01029000
&ZOPN                 SETA  &ZOPN+1                                     01029100
&ZOPL(&ZOPN)          SETC  ' '                                         01029200
&ZOPO(&ZOPN)          SETC  'MVC'                                       01029300
&ZOPV(&ZOPN)          SETC  '0(16,&ZCGPR),72(1)'                        01029400
&ZOPD(&ZOPN)          SETC  '++ XTAG CL16'                              01029500
                      AGO   .ZO54C                                      01029600
.*                                                                      01029700
.ZO54B                ANOP  ,                                           01029800
&ZAWRK   SETA  K'&XTAG                                                  01029900
         AIF   ('&XTAG'(&ZAWRK,1) NE ')').ZO54G                         01030000
&ZN      SETA  2                                                        01030100
.ZO54H    ANOP                                                          01030200
         AIF   (&ZN GE &ZAWRK).ZO54G                                    01030300
         AIF   ('&XTAG'(&ZN,1) NE '(').ZO54I                            01030400
&ZC      SETC  '&XTAG'(1,&ZN).'16'.','                                  01030500
&ZC      SETC  '&ZC'.'&XTAG'(&ZN+1,&ZAWRK-&ZN).',72(1)'                 01030600
         AGO   .ZO54J                                                   01030700
.ZO54I    ANOP                                                          01030800
&ZN      SETA  &ZN+1                                                    01030900
         AGO   .ZO54H                                                   01031000
.ZO54G    ANOP                                                          01031100
&ZC      SETC  '&XTAG.(16),72(1)'                                       01031200
.ZO54J    ANOP                                                          01031300
&ZOPN                 SETA  &ZOPN+1                                     01031400
&ZOPL(&ZOPN)          SETC  ' '                                         01031500
&ZOPO(&ZOPN)          SETC  'MVC'                                       01031600
&ZOPV(&ZOPN)          SETC  '&ZC'                                       01031700
&ZOPD(&ZOPN)          SETC  '++ XTAG CL16'                              01031800
.ZO54C                ANOP  ,                                           01031900
.*------------------------------------------------------------------    01032000
.***AO.L01 XINSTANCE# CL8                                               01032100
        AIF   ('&XINSTANCE#' NE 'IGNORE').ZO56                          01032200
&ZXINSTANCE#          SETC  ''             RESET OUTPUT/INOUT           01032300
.ZO56                 ANOP  ,                                           01032400
.*------------------------------------------------------------------    01032500
.***AO.L02 XINSTANCE# CL8                                               01032600
         AIF   ('&XINSTANCE#' NE 'IGNORE').ZO56D  CK DEF                01032700
         AIF   ('&ZXINSTANCE#' NE 'OUTPUT').ZO56C  CK DEF               01032800
.ZO56D                ANOP  ,                                           01032900
         AIF   ('&ZXINSTANCE#' EQ 'OUTPUT').ZO56A  OUTPUT               01033000
         AIF   ('&ZXINSTANCE#' NE 'INOUT').ZO56C  INOUT                 01033100
.ZO56A    AIF   ('&XINSTANCE#'(1,1) NE '(').ZO56B  ADDR IN GPR          01033200
&ZCGPR   SETC  '&XINSTANCE#'(2,K'&XINSTANCE#-2)                         01033300
&ZOPN                 SETA  &ZOPN+1                                     01033400
&ZOPL(&ZOPN)          SETC  ' '                                         01033500
&ZOPO(&ZOPN)          SETC  'MVC'                                       01033600
&ZOPV(&ZOPN)          SETC  '0(8,&ZCGPR),96(1)'                         01033700
&ZOPD(&ZOPN)          SETC  '++ XINSTANCE# CL8'                         01033800
                      AGO   .ZO56C                                      01033900
.*                                                                      01034000
.ZO56B                ANOP  ,                                           01034100
&ZAWRK   SETA  K'&XINSTANCE#                                            01034200
         AIF   ('&XINSTANCE#'(&ZAWRK,1) NE ')').ZO56G                   01034300
&ZN      SETA  2                                                        01034400
.ZO56H    ANOP                                                          01034500
         AIF   (&ZN GE &ZAWRK).ZO56G                                    01034600
         AIF   ('&XINSTANCE#'(&ZN,1) NE '(').ZO56I                      01034700
&ZC      SETC  '&XINSTANCE#'(1,&ZN).'8'.','                             01034800
&ZC      SETC  '&ZC'.'&XINSTANCE#'(&ZN+1,&ZAWRK-&ZN).',96(1)'           01034900
         AGO   .ZO56J                                                   01035000
.ZO56I    ANOP                                                          01035100
&ZN      SETA  &ZN+1                                                    01035200
         AGO   .ZO56H                                                   01035300
.ZO56G    ANOP                                                          01035400
&ZC      SETC  '&XINSTANCE#.(8),96(1)'                                  01035500
.ZO56J    ANOP                                                          01035600
&ZOPN                 SETA  &ZOPN+1                                     01035700
&ZOPL(&ZOPN)          SETC  ' '                                         01035800
&ZOPO(&ZOPN)          SETC  'MVC'                                       01035900
&ZOPV(&ZOPN)          SETC  '&ZC'                                       01036000
&ZOPD(&ZOPN)          SETC  '++ XINSTANCE# CL8'                         01036100
.ZO56C                ANOP  ,                                           01036200
.*------------------------------------------------------------------    01036300
.***AO.L02 XRESUMETOKEN CL32                                            01036400
         AIF   ('&ZXRESUMETOKEN' EQ 'OUTPUT').ZO59A  OUTPUT             01036500
         AIF   ('&ZXRESUMETOKEN' NE 'INOUT').ZO59C  INOUT               01036600
.ZO59A    AIF   ('&XRESUMETOKEN'(1,1) NE '(').ZO59B  ADDR IN GPR        01036700
&ZCGPR   SETC  '&XRESUMETOKEN'(2,K'&XRESUMETOKEN-2)                     01036800
&ZOPN                 SETA  &ZOPN+1                                     01036900
&ZOPL(&ZOPN)          SETC  ' '                                         01037000
&ZOPO(&ZOPN)          SETC  'MVC'                                       01037100
&ZOPV(&ZOPN)          SETC  '0(32,&ZCGPR),72(1)'                        01037200
&ZOPD(&ZOPN)          SETC  '++ XRESUMETOKEN CL32'                      01037300
                      AGO   .ZO59C                                      01037400
.*                                                                      01037500
.ZO59B                ANOP  ,                                           01037600
&ZAWRK   SETA  K'&XRESUMETOKEN                                          01037700
         AIF   ('&XRESUMETOKEN'(&ZAWRK,1) NE ')').ZO59G                 01037800
&ZN      SETA  2                                                        01037900
.ZO59H    ANOP                                                          01038000
         AIF   (&ZN GE &ZAWRK).ZO59G                                    01038100
         AIF   ('&XRESUMETOKEN'(&ZN,1) NE '(').ZO59I                    01038200
&ZC      SETC  '&XRESUMETOKEN'(1,&ZN).'32'.','                          01038300
&ZC      SETC  '&ZC'.'&XRESUMETOKEN'(&ZN+1,&ZAWRK-&ZN).',72(1)'         01038400
         AGO   .ZO59J                                                   01038500
.ZO59I    ANOP                                                          01038600
&ZN      SETA  &ZN+1                                                    01038700
         AGO   .ZO59H                                                   01038800
.ZO59G    ANOP                                                          01038900
&ZC      SETC  '&XRESUMETOKEN.(32),72(1)'                               01039000
.ZO59J    ANOP                                                          01039100
&ZOPN                 SETA  &ZOPN+1                                     01039200
&ZOPL(&ZOPN)          SETC  ' '                                         01039300
&ZOPO(&ZOPN)          SETC  'MVC'                                       01039400
&ZOPV(&ZOPN)          SETC  '&ZC'                                       01039500
&ZOPD(&ZOPN)          SETC  '++ XRESUMETOKEN CL32'                      01039600
.ZO59C                ANOP  ,                                           01039700
.*------------------------------------------------------------------    01039800
.***AO.L02 XCONNECTION CL32                                             01039900
         AIF   ('&ZXCONNECTION' EQ 'OUTPUT').ZO82A  OUTPUT              01040000
         AIF   ('&ZXCONNECTION' NE 'INOUT').ZO82C  INOUT                01040100
.ZO82A    AIF   ('&XCONNECTION'(1,1) NE '(').ZO82B  ADDR IN GPR         01040200
&ZCGPR   SETC  '&XCONNECTION'(2,K'&XCONNECTION-2)                       01040300
&ZOPN                 SETA  &ZOPN+1                                     01040400
&ZOPL(&ZOPN)          SETC  ' '                                         01040500
&ZOPO(&ZOPN)          SETC  'MVC'                                       01040600
&ZOPV(&ZOPN)          SETC  '0(32,&ZCGPR),8(1)'                         01040700
&ZOPD(&ZOPN)          SETC  '++ XCONNECTION CL32'                       01040800
                      AGO   .ZO82C                                      01040900
.*                                                                      01041000
.ZO82B                ANOP  ,                                           01041100
&ZAWRK   SETA  K'&XCONNECTION                                           01041200
         AIF   ('&XCONNECTION'(&ZAWRK,1) NE ')').ZO82G                  01041300
&ZN      SETA  2                                                        01041400
.ZO82H    ANOP                                                          01041500
         AIF   (&ZN GE &ZAWRK).ZO82G                                    01041600
         AIF   ('&XCONNECTION'(&ZN,1) NE '(').ZO82I                     01041700
&ZC      SETC  '&XCONNECTION'(1,&ZN).'32'.','                           01041800
&ZC      SETC  '&ZC'.'&XCONNECTION'(&ZN+1,&ZAWRK-&ZN).',8(1)'           01041900
         AGO   .ZO82J                                                   01042000
.ZO82I    ANOP                                                          01042100
&ZN      SETA  &ZN+1                                                    01042200
         AGO   .ZO82H                                                   01042300
.ZO82G    ANOP                                                          01042400
&ZC      SETC  '&XCONNECTION.(32),8(1)'                                 01042500
.ZO82J    ANOP                                                          01042600
&ZOPN                 SETA  &ZOPN+1                                     01042700
&ZOPL(&ZOPN)          SETC  ' '                                         01042800
&ZOPO(&ZOPN)          SETC  'MVC'                                       01042900
&ZOPV(&ZOPN)          SETC  '&ZC'                                       01043000
&ZOPD(&ZOPN)          SETC  '++ XCONNECTION CL32'                       01043100
.ZO82C                ANOP  ,                                           01043200
.*******************************************************************    01043300
.***AO.X02  RETURN CODE PROCESSING                                      01043400
.*******************************************************************    01043500
                      AIF   (N'&RETCODE LE 0).ZMRETX                    01043600
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            01043700
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             01043800
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             01043900
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               01044000
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                01044100
&ZOPN                 SETA  &ZOPN+1                                     01044200
&ZOPL(&ZOPN)          SETC  ' '                                         01044300
&ZOPO(&ZOPN)          SETC  'ST'                                        01044400
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              01044500
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        01044600
                      AGO   .ZMRETX                                     01044700
.*                                                                      01044800
.ZMRET2               ANOP  ,                                           01044900
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                01045000
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                01045100
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                01045200
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  01045300
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   01045400
&ZOPN                 SETA  &ZOPN+1                                     01045500
&ZOPL(&ZOPN)          SETC  ' '                                         01045600
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  01045700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 01045800
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        01045900
.ZMRETX               ANOP  ,                                           01046000
.*******************************************************************    01046100
.***AO.X03  REASON CODE PROCESSING                                      01046200
.*******************************************************************    01046300
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    01046400
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            01046500
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              01046600
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             01046700
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              01046800
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             01046900
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                01047000
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 01047100
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                01047200
&ZOPN                 SETA  &ZOPN+1                                     01047300
&ZOPL(&ZOPN)          SETC  ' '                                         01047400
&ZOPO(&ZOPN)          SETC  'ST'                                        01047500
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               01047600
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        01047700
                      AGO   .ZMRSNX                                     01047800
.*                                                                      01047900
.ZMRSN2               ANOP  ,                                           01048000
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                01048100
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 01048200
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                01048300
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 01048400
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                01048500
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   01048600
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    01048700
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   01048800
&ZOPN                 SETA  &ZOPN+1                                     01048900
&ZOPL(&ZOPN)          SETC  ' '                                         01049000
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  01049100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  01049200
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        01049300
.ZMRSNX               ANOP  ,                                           01049400
.*******************************************************************    01049500
.***AO.X04  LABEL FOR MF=L PROCESSING                                   01049600
.*******************************************************************    01049700
.ZMFLX                ANOP  ,              MF=L PROCESSING              01049800
.*******************************************************************    01049900
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               01050000
.*******************************************************************    01050100
                      ACTR  10000                                       01050200
.*                                                                      01050300
                      LCLA  &ZLC           COLUMN POSITION              01050400
                      LCLA  &ZOPX          LIST TABLE INDEX             01050500
                      LCLC  &ZLL           LABEL                        01050600
                      LCLC  &ZLOP          OPERATION                    01050700
                      LCLC  &ZLV           VALUE                        01050800
                      LCLC  &ZLD           DESCRIPTION                  01050900
.*                                                                      01051000
&ZOPX                 SETA  1                                           01051100
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            01051200
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              01051300
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              01051400
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              01051500
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              01051600
                      AIF   (K'&ZLD LE 0).ZL5                           01051700
&ZLC                  SETA  35             COMMENT COLUMN               01051800
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    01051900
&ZLC                  SETA  33             COMMMENT COLUMN              01052000
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   01052100
&ZLV                  SETC  '&ZLV'.' '                                  01052200
                      AGO   .ZL3                                        01052300
.*                                                                      01052400
.ZL4                  ANOP  ,                                           01052500
&ZLV                  SETC  '&ZLV'.' '                                  01052600
.ZL5                  ANOP  ,                                           01052700
&ZLV                  SETC  '&ZLV'.'&ZLD'                               01052800
.*                                                                      01052900
&ZLL     &ZLOP &ZLV                                                     01053000
.*                                                                      01053100
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               01053200
                      AGO   .ZL2           CONTINUE LOOPING             01053300
.*                                                                      01053400
.ZLX                  ANOP  ,                                           01053500
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                01053600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  01053700
&ZMS     SETC  'L'                                                      01053800
         AIF   ('&SYSAM64' NE 'YES').NOTAM64                            01053900
&ZMS     SETC  'LLGT'                                                   01054000
         LLGTR 14,14                   CLEAR HIGH HALF                  01054100
.NOTAM64 L     14,16(0,0)              GET CVT ADDRESS                  01054200
         L     14,772(14,0)            GET SFT ADDRESS                  01054300
         L     14,220(14,0)            GET LX FOR SERVICE ROUTINE       01054400
         LA    15,31                   GET EX FOR SERVICE ROUTINE       01054500
         OR    14,15                   GET PC NUMBER                    01054600
         &ZMS. 0,0(,1)                 R0 = PL.Word1                    01054700
         PC    0(14)                                                    01054800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  01054900
.ZLINKX               ANOP  ,                                           01055000
.*******************************************************************    01055100
.***AP.X01  FORMAT GENERATED CODE                                       01055200
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            01055300
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              01055400
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              01055500
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              01055600
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              01055700
                      AIF   (K'&ZLD LE 0).ZL51                          01055800
&ZLC                  SETA  35             COMMENT COLUMN               01055900
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   01056000
&ZLC                  SETA  33             COMMENT COLUMN               01056100
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  01056200
&ZLV                  SETC  '&ZLV'.' '                                  01056300
                      AGO   .ZL31                                       01056400
.*                                                                      01056500
.ZL41                 ANOP  ,                                           01056600
&ZLV                  SETC  '&ZLV'.' '                                  01056700
.ZL51                 ANOP  ,                                           01056800
&ZLV                  SETC  '&ZLV'.'&ZLD'                               01056900
.*                                                                      01057000
&ZLL     &ZLOP &ZLV                                                     01057100
.*                                                                      01057200
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               01057300
                      AGO   .ZL21          CONTINUE LOOPING             01057400
.*                                                                      01057500
.ZLX1                 ANOP  ,                                           01057600
.*******************************************************************    01057700
.***AP.X02  END OF IXCNOTE MACRO                                        01057800
&ZIXCNOTE             SETC  'YES'          SET IXCNOTE USED             01057900
         POP   PRINT                                                    01058000
*                                            IXCNOTE-0                  01058100
         SPACE 1                                                        01058200
.ZLX2                 ANOP  ,                                           01058300
         MEND                                                           01058400
**********************************************************************/ 01058500
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  01058600
*%IXCNOTE: MACRO KEYS(REQUEST,NOTEPAD,REQTYPE,DESCRIPTION,INFO,#NOTES,  01058700
*                 MULTIWRITE,DUPLEX,INSTCOMP,TAGGING,TRACKTAG,          01058800
*                 LOSSCONNDELETE,ETODCREATED,CONDITIONS,MUSTBE,         01058900
*                 TIMEOUT,CONNECTION,ACCESS,TERMSCOPE,TTOKEN,USAGE,     01059000
*                 NAME,TAG,INSTANCE#,KEEPNOTE,NOBUFFER,BUFFER,BUFLEN,   01059100
*                 RESUMETOKEN,MAXTAG,CHOOSE,CRITERIA,NOANSAREA,         01059200
*                 ANSAREA,ANSLEN,RETCODE,RSNCODE,PLISTVER,MF);          01059300
*  ANS('?'!!MACLABEL!!' '!!'IXCNOTEP '!!MACLIST!!                       01059400
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              01059500
*%END IXCNOTE;                                                          01059600
