* %GOTO DEVTYP1; /*                                                     00010001
         MACRO                                                          00020001
&NAME    DEVTYPE &DDLOC,                                               *00030001
               &A,                                                     *00040001
               &DEVTAB,                                                *00050001
               &RPS,                                               @L1C*00060001
               &UCBLIST=,                                          @L1A*00070001
               &PLISTVER=,                                         @03A*00080001
               &INFOLIST=,                                         @L2A*00090001
               &INFO=,                                             @02C*00100001
               &XTIOT=,                                            @L6A*00110001
               &MF=I                                               @L1A 00120001
.**** START OF SPECIFICATIONS ***************************************** 00130001
.*                                                                    * 00140001
.*$MAC(DEVTYPE): DEVTYPE INVOCATION MACRO.                            * 00150001
.*                                                                    * 00160001
.********************************************************************** 00170001
.*                                                                    * 00180001
.*PROPRIETARY V3 STATEMENT                                              00190001
.*Licensed Materials - Property of IBM                                  00200001
.*"Restricted Materials of IBM"                                         00210001
.*5650-ZOS                                                              00220001
.*Copyright IBM Corp. 1986,2017                                         00230001
.*END PROPRIETARY V3 STATEMENT                                          00240001
.*                                                                    * 00250001
.********************************************************************** 00260001
.*                                                                    * 00270001
.* CHANGE ACTIVITY =                                                  * 00280001
.*                                                                    * 00290001
.* $L1=DISNEW,JDP2220,,STLJAK: SUPPORT FOR DEVICE INFO. SERVICES  @L1A* 00300001
.* $01=OY09880,HDP2230,,PJS088: FIX ABEND118 IN UCBLIST FORM      @01A* 00310001
.*     CHANGES FOR DFSMS/MVS                                      @02A* 00320001
.* $L2=INFOLIST,JDZ1110,,SJPLJAH: ADD INFOLIST SUPPORT            @L2A* 00330001
.* $02=OW09880,HDZ11B0,SJPLSYW: PICK UP OY60658 FROM JDZ1110      @02A* 00340001
.* $L3=UCBVSCR,HDZ11C0,950620,SJPLSYW: ADD ANY/BELOW TO UCBLIST   @L3A* 00350001
.* $03=OW13554,HDZ11C0,950620,SJPLSYW: ADD PLISTVER               @03A* 00360001
.* $L4=>32KBLK,HDZ11F0,990126,SJPLWER: INFO=AMCAP, PL/X INFO=     @L4A* 00370001
.* $04=OA23239,HDZ11K0,071130,SJPLJBC: ADD WORD ALIGNMENT IN LIST @04A* 00380001
.*                                     FORM FOR PLISTVER=0        @04A* 00390001
.* $L5=DASD2  ,HDZ1D10,10Sep11,SJPLJBC: ADD DASD2 INFO keyword    @L5A* 00400001
.* $L6=OA52704,HDZ2230,APR2017,SVLTHN: Add XTIOT keyword (YES/NO) @L6A* 00410001
.* $05=OA55318,HDZ2230,APR2018,SVLTHN: Add XTIOT=NO MF=L(253764)  @05A* 00411009
.*                                                                    * 00420001
.********************************************************************** 00430001
.*                                                                    * 00440001
.*   FUNCTION =                                                       * 00450001
.*      The DEVTYPE macro is used to invoke device type services      * 00460001
.*      which will return the following information for the device or * 00470001
.*      devices specified in the request if INFOLIST is omitted.   @02C 00480001
.*        WORD 0 - DESCRIBES THE DEVICE AS DEFINED IN THE UCBTYP      * 00490001
.*                 FIELD OF THE UCB.                                  * 00500001
.*        WORD 1 - MAXIMUM BLOCK SIZE (WITH UCBLIST OR DEVTAB).       * 00510001
.*        WORD 2 - (WITH UCBLIST OR DEVTAB FOR DASD DEVICES ONLY).    * 00520001
.*             BYTES 0-1 - THE NUMBER OF PHYSICAL CYLINDERS ON THE    * 00530001
.*                          DEVICE.                                   * 00540001
.*             BYTES 2-3 - THE NUMBER OF TRACKS PER CYLINDER.         * 00550001
.*        WORD 3 - (WITH UCBLIST OR DEVTAB FOR DASD DEVICES ONLY).    * 00560001
.*             BYTES 0-1 - MAXIMUM TRACK LENGTH                       * 00570001
.*             BYTES 2,3 OR 2-3 - BLOCK OVERHEAD. SEE WORD 4.         * 00580001
.*        WORD 4 - (WITH UCBLIST OR DEVTAB FOR DASD DEVICES ONLY).    * 00590001
.*             BYTE  0   - BLOCK OVERHEAD OR MODULO FACTOR.           * 00600001
.*             BYTE  1   -                                            * 00610001
.*                 BIT  0   - IF ON, THE NUMBER OF CYLINDERS IN       * 00620001
.*                            WORD 2, BYTES 0-1 IS INVALID.           * 00630001
.*                 BITS 1-2 - RESERVED.                               * 00640001
.*                 BIT  3   - IF ON, THIS IS A MODULO DEVICE.         * 00650001
.*                 BIT  4   - IF ON, BYTES 2 AND 3 OF WORD 3 CONTAIN  * 00660001
.*                            A HALFWORD GIVING THE BLOCK OVERHEAD    * 00670001
.*                            FOR ANY BLOCK ON A TRACK, INCLUDING THE * 00680001
.*                            LAST BLOCK                              * 00690001
.*                 BITS 5-6 - RESERVED.                               * 00700001
.*                 BIT  7   - IF ON, A TOLERANCE FACTOR MUST BE       * 00710001
.*                            APPLIED TO ALL BLOCKS EXCEPT THE LAST   * 00720001
.*                            BLOCK ON THE TRACK.                     * 00730001
.*             BYTES 2-3 - TOLERANCE FACTOR.                          * 00740001
.*        WORD 5 - (WITH UCBLIST OR RPS FOR DASD DEVICES ONLY).       * 00750001
.*             BYTES 0-1 - R0 OVERHEAD FOR SECTOR CALCULATIONS.       * 00760001
.*             BYTE  2   - NUMBER OF SECTORS FOR THE DEVICE.          * 00770001
.*             BYTE  3   - NUMBER OF DATA SECTORS FOR THE DEVICE.     * 00780001
.*                                                                    * 00790001
.*      Most of the forms of invocation are shown below:              * 00800001
.*                                                                    * 00810001
.*           LABEL DEVTYPE DDLOC,AREAADDR,DEVTAB,RPS                  * 00820001
.*                                                                    * 00830001
.*           LABEL DEVTYPE,(AREAADDR,AREALEN),UCBLIST=YES,MF=L     @02C 00840001
.*                                                                    * 00850001
.*           LABEL DEVTYPE,(AREAADDR,AREALEN),                     @02C 00860001
.*                       UCBLIST=(UCBLADR,UCBLSIZE)                   * 00870001
.*                                                                    * 00880001
.*           LABEL DEVTYPE,(AREAADDR,AREALEN),                     @02C 00890001
.*                       UCBLIST=(UCBLADR,UCBLSIZE),                  * 00900001
.*                       MF=(E,NAME1)                                 * 00910001
.*                                                                    * 00920001
.*           LABEL DEVTYPE DDLOC,(AREAADDR,AREALEN),INFOLIST=ILIST @02A 00930001
.*                                                                 @02A 00940001
.*           LABEL DEVTYPE,(AREAADDR,AREALEN),INFOLIST=ILIST,      @02A 00950001
.*                       UCBLIST=(UCBLADR,UCBLSIZE)                @02A 00960001
.*                                                                 @02A 00970001
.*           LABEL DEVTYPE INFO=(SUFFIX,DASD,DEVTYPE,AMCAP,DASD2)  @L5C 00980001
.*                                                                    * 00990001
.*      THE MACRO POSITIONAL OPERANDS ARE:                            * 01000001
.*         DDLOC    - NAME OF THE FIELD CONTAINING A DD NAME.         * 01010001
.*         A        - NAME OF THE STORAGE TO RECEIVE THE RESULTS.     * 01020001
.*                    FOR UCBLIST FORM, NAME AND SIZE OF THE STORAGE  * 01030001
.*                    TO RECEIVE THE RESULTS.                         * 01040001
.*         DEVTAB   - RETURN DASD INFORMATION (5 WORDS).              * 01050001
.*         RPS      - RETURN RPS INFORMATION (6TH WORD).              * 01060001
.*                                                                    * 01070001
.*      THE MACRO KEYWORDS ARE:                                       * 01080001
.*         MF       - LIST, EXECUTE, AND INLINE FORMS.                * 01090001
.*         UCBLIST  - Name of a list of UCB addresses and the         * 01100001
.*                    number of addresses in the list.  Mutually   @02C 01110001
.*                    exclusive with DDLOC above.                  @02A 01120001
.*                    XTIOT keyword is not allowed with UCBLIST.   @L6A 01121001
.*                                                                 @L6A 01122001
.*         INFOLIST - Name of an invocation of DEVTYPE with INFO=. @02A 01123001
.*         PLISTVER - Control format of parameter list.            @03A 01125001
.*         INFO     - One or more codes identifying the type of    @02A 01126001
.*                    information to retrieve.                     @02A 01127001
.*         XTIOT    - YES: Standard TIOT entries and XTIOTs are    @L6A 01128001
.*                         searched to find a matching DD name.    @L6A 01129001
.*                  - NO : Only entries in the standard TIOTs are  @L6A 01130001
.*                         searched to find a matching DD name.    @L6A 01140001
.*                   Note: On this form of the macro, XTIOT keyword@L6A 01150001
.*                    can only be allowed if UCBLIST is not coded. @L6A 01160001
.*                                                                    * 01170001
.*      UCBLIST provides a list service where the caller passes a  @02C 01180001
.*      list and count of the addresses of UCBs.  The information  @02C 01190001
.*      returned will be six words per device regardless of device @02C 01200001
.*      type if INFOLIST is not coded.  If INFOLIST is coded, then @02C 01210001
.*      the amount of information returned depends on the codes    @02C 01220001
.*      specified with INFO=.                                      @02C 01230001
.*                                                                    * 01240001
.*      PLISTVER=0 generates a 20-byte parameter list, which       @03A 01250001
.*      allows execution on MVS/DFP version 3.  This is assumed    @03A 01260001
.*      if INFOLIST is omitted on the standard form.  PLISTVER=0   @03A 01270001
.*      is invalid if INFOLIST or INFO is coded.                   @03A 01280001
.*      PLISTVER=1 or "MAX" or omitted on list form will generate  @03A 01290001
.*      a 24-byte parameter list.                                  @03A 01300001
.*                                                                    * 01310001
.*      If parameters are specified in the invocation that are not @02C 01320001
.*      needed for the request, those parameters are diagnosed     @02C 01330001
.*      with an error message and ignored.  This is to let the     @02C 01340001
.*      user know which of the contradiction was assumed.          @02A 01350001
.*                                                                    * 01360001
.*   PROCESSOR = PL/X, High Level Assembler                        @L4C 01370001
.*                                                                    * 01380001
.********************************************************************** 01390001
         LCLA  &I,&J                                               @L2A 01400001
         LCLB  &LOCANY,&LOCANYX                                    @L3A 01410001
         LCLB  &XTIOTOff,&XTIOTOn                                  @L6A 01411001
&LOCANY  SETB  0         LOCANY IS 0 (BELOW) FOR DEFAULT           @L3A 01412001
&LOCANYX SETB  0         3RD PARAMETER IS EXPLICITILY SPECIFIED    @L3A 01413001
&XTIOTOff SETB 1         0: turn XTIOT bit off, 1: leave it alone  @L6A 01414001
&XTIOTOn SETB 0          0: leave XTIOT bit alone, 1: turn it on   @05C 01415002
         LCLB  &SWERR    Error switch, suppress expansion if on    @02A 01416001
         LCLC  &LABEL    Symbol to generate in expansion           @02A 01417001
&LABEL   SETC  '&NAME'   Prepare name to generate                  @02A 01418001
.*                                                                 @03A 01419001
.* Do syntax checking for PLISTVER                                 @03A 01420001
         AIF   (T'&PLISTVER EQ 'O').NOPLVER   IF PLISTVER OMITTED  @03A 01430001
         AIF   ('&PLISTVER' EQ '0' OR '&PLISTVER' EQ '1' OR            X01440001
               '&PLISTVER' EQ 'MAX').PLVER1                        @03A 01450001
         MNOTE 8,'KEYWORD PLISTVER MUST BE "0", "1" OR "MAX".'     @03A 01460001
&SWERR   SETB  1              SUPPRESS EXPANSION                   @03A 01470001
         AGO   .NOPLVER       CONTINUE                             @03A 01480001
.PLVER1  ANOP                                                      @03A 01490001
         AIF   ('&PLISTVER' EQ '0' AND '&INFOLIST' NE '').PLVER2   @03A 01500001
         AIF   ('&PLISTVER' EQ '0' AND '&INFO' NE '').PLVER2       @03A 01510001
         AGO   .NOPLVER       CONTINUE                             @03A 01520001
.PLVER2  ANOP                                                      @03A 01530001
         MNOTE 8,'KEYWORD PLISTVER=0 IS INVALID WITH INFO OR INFOLIST K*01540001
               EYWORD PARAMETER'                                   @03A 01550001
&SWERR   SETB  1              SUPPRESS EXPANSION                   @03A 01560001
.*                                                                 @03A 01570001
.NOPLVER ANOP                                                      @03A 01580001
         AIF   ('&INFO' NE '').INFOKL    Go if coded, even ()      @02A 01590001
         AIF   (T'&UCBLIST NE 'O').UCBLIST NEW MACRO FORMAT        @L1A 01600001
         AIF   (T'&INFOLIST NE 'O').TESTDD                         @02C 01610001
         AIF   ('&MF' NE 'I').TESTDD    Go if list or execute form @02C 01620001
.* It is the old form with no keywords.                            @02C 01630001
         AIF   ('&DDLOC' EQ '').E1                                      01640001
         AIF   ('&A' EQ '').E2                                          01650001
         AIF   (T'&XTIOT EQ 'O').MINFORM If TIOT not coded, continu@L6A 01660001
         MNOTE 8,'The XTIOT keyword must not be coded with the minimum *01670002
               type of call.'                                      @05C 01680002
.MINFORM ANOP                                                      @L6A 01690001
&NAME    IHBINNRA &DDLOC,&A                                             01700001
         AIF   ('&DEVTAB' EQ '').SVC                                    01710001
         AIF   ('&DEVTAB' NE 'DEVTAB').E3                               01711001
         AIF   ('&RPS' EQ '').NORP      NO RPS REQUESTED                01711101
         AIF   ('&RPS' NE 'RPS').NORP   CORRECTLY                       01711201
         LCR   1,1            COMPLEMENT TO INDICATE RPS         S20201 01711301
.NORP    LCR   0,0            COMPLEMENT TO INDICATE DEVTAB      S20201 01711401
.SVC     SVC   24                                                       01711501
         MEXIT                                                          01711601
.* Do all syntax checking before starting the expansion.           @02A 01711701
.*** Check the UCBLIST parameter.                                  @02A 01711801
.UCBLIST ANOP                 Examine                              @L1A 01711901
         AIF   ('&UCBLIST' EQ 'YES' AND '&MF(1)' NE 'I').UCBLOK    @L1A 01712001
         AIF   (N'&UCBLIST EQ 2).UCBLOK1                           @L1A 01713001
         AIF   (N'&UCBLIST EQ 3).UCBLOK2                           @L3A 01714001
         MNOTE 8,'KEYWORD UCBLIST MUST BE "YES" OR HAVE TWO OR THREE OP*01715001
               ERANDS.'                                            @L3C 01716001
&SWERR   SETB  1              Suppress expansion                   @02C 01717001
         AGO   .UCBLOK        Avoid another error on UCBLIST       @02A 01718001
.UCBLOK2 ANOP                                                      @L3A 01719001
&LOCANYX SETB  1              THIRD PARAMETER EXISTS               @L3A 01720001
         AIF   ('&UCBLIST(3)' EQ 'BELOW').UCBLOK1                  @L3A 01730001
         AIF   ('&UCBLIST(3)' EQ 'ANY').UCBLOK3                    @L3A 01740001
         MNOTE 8,'UCBLIST THIRD VALUE MUST BE BELOW OR ANY.'       @L3A 01750001
&SWERR   SETB  1              SUPPRESS EXPANSION                   @L3A 01760001
         AGO   .UCBLOK        AVOID ANOTHER ERROR ON UCBLIST       @L3A 01770001
.UCBLOK3 ANOP                                                      @L3A 01780001
&LOCANY  SETB  1              ANY IS SPECIFIED IN UCBLIST          @L3A 01790001
.UCBLOK1 ANOP                                                      @L1A 01800001
         AIF   ('&MF(1)' NE 'L').UCBLOK                            @L1A 01810001
         AIF   ('&UCBLIST(1)'(1,1) EQ '(').UCBLBAD                 @L1A 01820001
         AIF   ('&UCBLIST(2)'(1,1) NE '(').UCBLOK                  @L1A 01830001
.UCBLBAD ANOP                                                      @L1A 01840001
         IHBERMAC 69                                               @L1A 01850001
&SWERR   SETB  1              Suppress expansion                   @02C 01860001
.*** Check the first positional parameter, DD name.                @02A 01870001
.UCBLOK  ANOP                 UCBLIST was coded.                   @02C 01880001
         AIF   (T'&DDLOC EQ 'O').TESTA                             @02A 01890001
         MNOTE 8,'DO NOT CODE THE FIRST POSITIONAL PARAMETER WITH UCBLI*01900001
               ST= OR INFO='  Complain and ignore                  @02A 01910001
         AGO   .TESTA                                              @02A 01920001
.TESTDD  ANOP                 UCBLIST was not coded.               @02A 01930001
         AIF   (T'&DDLOC NE 'O' OR '&MF' NE 'I').TESTDD1           @02A 01940001
         MNOTE 8,'ON THE STANDARD FORM YOU MUST CODE DD NAME LOCATION O*01950001
               R UCBLIST='                                         @02A 01960001
&SWERR   SETB  1              Suppress expansion                   @02A 01970001
         AGO   .TESTA                                              @02A 01980001
.TESTDD1 AIF   (T'&DDLOC EQ 'O' OR '&MF' NE 'L').TESTA             @02A 01990001
         AIF   ('&DDLOC'(1,1) NE '(').TESTA                        @02A 02000001
         MNOTE 8,'WITH MF=L, DD NAME AREA MUST NOT BE IN PARENTHESES'   02010001
&SWERR   SETB  1              Suppress expansion                   @02A 02020001
.*** Check the second positional parameter, return area.           @02A 02030001
.TESTA   AIF   (T'&A EQ 'O' AND '&MF(1)' NE 'I').ADROK             @L1A 02040001
         AIF   (N'&A EQ 2).ADROK1                                  @L1A 02050001
         MNOTE 8,'SECOND POSITIONAL OPERAND MUST HAVE 2 SUBOPERANDS.'  *02060001
                                                                   @L1A 02070001
&SWERR   SETB  1              Suppress expansion                   @02C 02080001
         AGO   .ADROK         Avoid an extra error message         @02A 02090001
.ADROK1  ANOP                                                      @L1A 02100001
         AIF   ('&MF(1)' NE 'L').ADROK                             @L1A 02110001
         AIF   (T'&A EQ 'O').ADROK                                 @L1A 02120001
         AIF   ('&A(1)'(1,1) EQ '(').ADRBAD                        @L1A 02130001
         AIF   ('&A(2)'(1,1) NE '(').ADROK                         @L1A 02140001
.ADRBAD  ANOP                                                      @L1A 02150001
         IHBERMAC 69                                               @L1A 02160001
&SWERR   SETB  1              Suppress expansion                   @L1A 02170001
.*** Test the INFOLIST parameter.                                  @02A 02180001
.ADROK   AIF   (T'&INFOLIST EQ 'O').TestXT Go if INFOLIST omitted  @L6C 02190001
         AIF   ('&INFOLIST'(1,1) NE '(' OR '&MF' NE 'L').TestXT    @L6C 02200001
         MNOTE 8,'WITH MF=L, INFOLIST MUST NOT BE IN PARENTHESES'  @02A 02210001
&SWERR   SETB  1              Suppress expansion                   @02A 02220001
.*** Test the XTIOT parameter                                      @L6A 02230001
.TestXT  AIF   (T'&XTIOT EQ 'O').TESTL   Go if XTIOT omitted       @L6A 02240001
         AIF   ('YES' NE UPPER('&XTIOT')).TestXTN Go if not YES    @L6A 02250001
&XTIOTOff SETB 0         Make XTIOT bit get set off                @L6A 02260001
         AGO   .TESTXTU                                            @L6A 02270001
.TestXTN AIF   ('NO' NE UPPER('&XTIOT')).TestXTE  Go if not NO     @L6A 02280001
&XTIOTOn SETB  1         Make XTIOT Bit get set on                 @L6A 02281001
.TestXTU AIF   (T'&UCBLIST EQ 'O').TestL   Go if UCBLIST not coded @L6A 02282001
         IHBERMAC 1304,UCBLIST,TIOT  UCBLIST & XTIOT mutually excl @L6A 02283001
&SWERR   SETB  1              Suppress expansion                   @L6A 02284001
         AGO   .TestL                                              @L6A 02285001
.*  Write "IGG205  THE XTIOT KEYWORD VALUE MUST BE YES OR NO"      @L6A 02286001
.TestXTE IGGERMAC 205,'XTIOT','YES OR NO'                          @L6A 02287001
&SWERR   SETB  1              Suppress expansion                   @L6A 02288001
.*** Test the MF parameter.                                        @02A 02289001
.TESTL   AIF   ('&MF(1)' NE 'L').MFOK1    Go if not list form      @02C 02290001
         AIF   (N'&MF NE 1).MFBAD  Go if too many MF values        @L1A 02300001
         AGO   .SKIPIL2                                            @L1A 02310001
.MFOK1   ANOP                                                      @L1A 02320001
         AIF   ('&MF' EQ 'I').MFOK     Go if standard form (no MF) @02C 02330001
         AIF   ('&MF(1)' NE 'E').MFBAD                             @L1A 02340001
         AIF   (N'&MF EQ 2).NOLIST     Go if valid execute form    @L1A 02350001
.MFBAD   ANOP                                                      @L1A 02360001
         IHBERMAC 35                                               @L1A 02370001
.MEXIT   ANOP                Define label to prevent spurious msgs @02A 02380001
&LABEL   DC    0H'0'                                               @02A 02390001
         MEXIT                                                     @02C 02400001
.*** Begin standard form of expansion                              @02A 02410001
.MFOK    ANOP                                                      @L1A 02420001
         AIF   (&SWERR).MEXIT           Go if any syntax error     @02C 02430001
         CNOP  0,4            ENSURE PARAMETER LIST ALIGNMENT      @L1A 02440001
&LABEL   BAS   1,IHB&SYSNDX   SKIP OVER PARAMETER LIST             @02C 02450001
&LABEL   SETC  ''             Prevent duplicate labels             @02C 02460001
.*** Begin list form of expansion.                                 @02C 02470001
.SKIPIL2 AIF   (&SWERR).MEXIT           Go if any syntax error     @02C 02480001
.* Make a full-length parameter list unless INFOLIST omitted and   @02A 02490001
.* this is the standard form.  Otherwise we would need a way for   @02A 02500001
.* the user to cause a long form and he would have to remember to  @02A 02510001
.* code it.                                                        @02A 02520001
.* If PLISTVER=0 is coded, then use length code of 16              @03A 02530001
         AIF   ('&PLISTVER' EQ '0').LNGTH1                         @03A 02540001
.*  PLISTVER=1 or MAX or omitted will come to here                 @03A 02550001
         AIF   ('&PLISTVER' EQ '1' OR '&PLISTVER' EQ 'MAX').LNGTHA @03A 02560001
         AIF   (T'&INFOLIST EQ 'O' AND '&MF' EQ 'I').LNGTH1        @02C 02570001
.LNGTHA  ANOP                                                      @03A 02580001
&LABEL   DC    0F'0',AL1(24)  LENGTH OF PARAMETER LIST             @02C 02590001
         AGO   .LNGTH2                                             @L2A 02600001
.* Standarm Form(Instruction+Data):                                @L6A 02610001
.* Generate a short list for compatibility with old code.  Use a   @02A 02620001
.* length code of 16 even though the list is 20 bytes.             @02A 02630001
.LNGTH1  ANOP                                                      @03C 02640001
&LABEL   DC    0F'0',AL1(16)  LENGTH CODE FOR PARAMETER LIST       @04C 02650001
.LNGTH2  DC    AL1(1)         VERSION OF PARAMETER LIST            @L1A 02660001
.*   Go if XTIOT= not coded at all and DD name not coded.          @05A 02672108
         AIF   ('&XTIOT' EQ '' AND '&DDLOC' EQ '').DDLNO           @05A 02673008
.*   Go if XTIOT= not coded at all and DD name coded.              @05A 02673308
         AIF   ('&DDLOC' NE '').DDLYES If DD Name is not omitted   @05A 02673407
.*   Generate flags if XTIOT= coded and DD name not coded.         @05A 02674007
         DC    B'00&XTIOTOn.00000',x'00' XTIOT=NO(x20,), YES(x00,) @05C 02680007
         AGO   .DD4           Generate zero address DDname         @05A 02680107
.DDLYES  DC    B'10&XTIOTOn.00000',x'00'  DDname(x10,00)           @05A 02681007
         AIF   ('&DDLOC'(1,1) EQ '(').DD4                          @02A 02690001
         AIF   (T'&DDLOC EQ 'O').UCBLST1 Go if DD loc omitted      @05A 02692006
         DC    A(&DDLOC)      ADDRESS OF DD NAME                        02700001
         AGO   .DD5                                                @02A 02710001
.DD4     DC    A(0)           ADDRESS OF DD NAME                        02720001
.DD5     DC    A(0)           RESERVED OR UCB LIST LENGTH               02730001
         AGO   .LIST4         Skip over UCBLIST expanding          @02A 02740001
.DDLNO   DC    B'0&LOCANY.000000',X'00'  Flags & reserved          @L4C 02750001
.UCBLST1 AIF   ('&UCBLIST' EQ 'YES' OR '&UCBLIST' EQ '').LIST1     @05C 02760006
         AIF   ('&UCBLIST(1)'(1,1) EQ '(').LIST1                   @L1A 02770001
         DC    A(&UCBLIST(1)) ADDRESS OF UCB LIST                  @L1A 02780001
         AGO   .LIST2                                              @L1A 02790001
.LIST1   ANOP                                                      @L1A 02800001
         DC    A(0)           ADDRESS OF UCB LIST OR DD NAME       @L1A 02810001
.LIST2   ANOP                                                      @L1A 02820001
         AIF   ('&UCBLIST' EQ 'YES' OR '&UCBLIST' EQ '').LIST3     @02C 02830001
         AIF   ('&UCBLIST(2)'(1,1) EQ '(').LIST3                   @L1A 02840001
         DC    A(&UCBLIST(2)) NUMBER OF UCBS IN LIST               @L1A 02850001
         AGO   .LIST4                                              @L1A 02860001
.LIST3   ANOP                                                      @L1A 02870001
         DC    A(0)           NUMBER OF UCBS IN LIST               @L1A 02880001
.LIST4   ANOP                                                      @L1A 02890001
         AIF   (T'&A EQ 'O').LIST5                                 @L1A 02900001
         AIF   (T'&A(1) EQ 'O').LIST5                              @L1A 02910001
         AIF   ('&A(1)'(1,1) EQ '(').LIST5                         @L1A 02920001
         DC    A(&A(1))       ADDRESS OF RESULT AREA               @L1A 02930001
         AGO   .LIST6                                              @L1A 02940001
.LIST5   ANOP                                                      @L1A 02950001
         DC    A(0)           ADDRESS OF RESULT AREA               @L1A 02960001
.LIST6   ANOP                                                      @L1A 02970001
         AIF   (T'&A EQ 'O').LIST7                                 @L1A 02980001
         AIF   (T'&A(2) EQ 'O').LIST7                              @L1A 02990001
         AIF   ('&A(2)'(1,1) EQ '(').LIST7                         @L1A 03000001
         DC    A(&A(2))       SIZE OF RESULT AREA                  @L1A 03010001
         AGO   .LIST8                                              @L1A 03020001
.LIST7   ANOP                                                      @L1A 03030001
         DC    A(0)           SIZE OF RESULT AREA                  @L1A 03040001
.LIST8   ANOP                                                      @L2A 03050001
         AIF   ('&PLISTVER' EQ '0').LIST10                         @03A 03060001
         AIF   ('&PLISTVER' EQ '1' OR '&PLISTVER' EQ 'MAX').LIST9A @03A 03070001
         AIF   (T'&INFOLIST EQ 'O' AND '&MF' EQ 'I').LIST10        @02C 03080001
.LIST9A  ANOP                                                      @03A 03090001
         AIF   ('&INFOLIST' EQ '').LIST9                           @02C 03100001
         AIF   ('&INFOLIST'(1,1) EQ '(').LIST9                     @L2A 03110001
         DC    A(&INFOLIST)   ADDRESS OF INFO LIST (DEVTYPE INFO=) @02C 03120001
         AGO   .LIST10                                             @L2A 03130001
.LIST9   ANOP                                                      @L2A 03140001
         DC    A(0)           ADDRESS OF INFO LIST (DEVTYPE INFO=) @L2A 03150001
.LIST10  ANOP                 We are finished generating the list. @L1A 03160001
         AIF   ('&MF(1)' EQ 'L').SKIPIL9                           @L1A 03170001
IHB&SYSNDX DS  0H                                                  @02C 03180001
         AGO   .NOLIST1                                            @02A 03190001
.*** Start generating the execute form, and continue Standard Form @L6C 03200001
.NOLIST  AIF   (&SWERR).MEXIT           Go if any syntax error     @02C 03210001
&LABEL   IHBINNRA &MF(2)      Point register 1 to parameter list   @L1A 03220001
.*** Continue generating the STANDARD form or the EXECUTE form.    @L6C 03230001
.NOLIST1 ANOP                                                      @L1A 03240001
.*** Store DD name address or UCB list address and length.         @02A 03250001
         AIF   ('&DDLOC' EQ '').EFORM1                             @02A 03260001
         AIF   ('&DDLOC'(1,1) EQ '(').EFORM1R                      @02A 03270001
         AIF   ('&MF(1)' NE 'E').EFORM5  Go if we already have it  @02A 03280001
         LA    0,&DDLOC            GET ADDRESS OF DD NAME AREA          03290001
         ST    0,4(,1)             DD NAME LOCATION ADDR IN LIST        03300001
         AGO   .EFORM1S                                            @02A 03310001
.EFORM1R ST    &DDLOC(1),4(,1)     DD NAME LOCATION ADDR IN A LIST      03320001
.EFORM1S AIF   ('&MF(1)' NE 'E').EFORM5  Go if we already have it  @02A 03330001
.*** If DDname omitted, XTIOT=NO should be allow but ignore it.    @L6A 03330101
         AIF   (&XTIOTOff).SetDD   Go if leaving bit alone         @L6A 03330201
         NI    2(1),X'DF'          XTIOT=YES by default(bitx20 OFF)@L6A 03330301
.SetDD   OI    2(1),B'10&XTIOTOn.00000'  DD name indicator & XTIOT @05C 03330501
         AGO   .EFORM5                                             @02A 03330601
.* Handle UCBLIST.                                                      03330701
.EFORM1  AIF   ('&UCBLIST' EQ 'YES' OR '&UCBLIST' EQ '').EFORM4Z   @L3C 03330801
         AIF   ('&UCBLIST(1)'(1,1) EQ '(').EFORM2R                 @02C 03330901
         AIF   ('&MF(1)' NE 'E').EFORM3  Go if already have it     @02C 03331001
         LA    0,&UCBLIST(1)       GET ADDRESS OF UCB LIST              03331101
         ST    0,4(,1)             UCB LIST ADDRESS                     03332001
         AGO   .EFORM3                                             @02C 03333001
.EFORM2R ST    &UCBLIST(1),4(,1)   STORE UCB LIST ADDRESS               03334001
.EFORM3  AIF   ('&UCBLIST(2)'(1,1) EQ '(').EFORM3R                 @02C 03335001
         AIF   ('&MF(1)' NE 'E').EFORM4  Go if already have it     @02A 03336001
         LA    0,&UCBLIST(2)       GET NUMBER OF UCBS                   03337001
         ST    0,8(,1)             STORE NUMBER OF UCBS IN LIST         03338001
         AGO   .EFORM4                                             @02A 03339001
.EFORM3R ST    &UCBLIST(2),8(,1)   STORE NUMBER OF UCB'S IN LIST        03340001
.*** CHECK FOR LOC ANY AND BELOW                                   @L3A 03350001
.EFORM4  AIF   ('&MF(1)' NE 'E').EFORM5   Go if already set bits   @L3C 03360001
         AIF   (&LOCANY EQ 0).EFORM4M                              @L3A 03370001
         NI    2(1),X'5F'          UCBLIST INDICATOR+CLEAR XTIOT=NO@L6A 03380001
         OI    2(1),X'40'          UCBLIST ANY FLAG                @L3A 03390001
         AGO   .EFORM5                                             @L3A 03400001
.EFORM4M ANOP                                                      @L3A 03410001
.*       IF THE THIRD PARAMETER IS OMITTED, BELOW IS ASSUMED       @L3A 03420001
.EFORM4Z AIF   ('&MF(1)' NE 'E').EFORM5  Go if warning not needed  @L3C 03430001
*        DD NAME OR UCB LIST IS ALREADY IN THE PARAMETER LIST.          03440001
.*** Store the address and length of the output area.              @02A 03450001
.EFORM5  ANOP                                                      @L3A 03460001
         AIF   (T'&A EQ 'O').EFORM6X                               @02C 03470001
         AIF   ('&A(1)'(1,1) EQ '(').EFORM5R                       @02C 03480001
         AIF   ('&MF(1)' NE 'E').EFORM6  Go if already have it     @02A 03490001
         LA    0,&A(1)             ADDRESS OF OUTPUT AREA               03500001
         ST    0,12(,1)            STORE ADDRESS OF OUTPUT AREA         03510001
         AGO   .EFORM6                                             @02C 03520001
.EFORM5R ST    &A(1),12(,1)        PUT AREA ADDRESS INTO PARMS          03530001
.EFORM6  AIF   ('&A(2)'(1,1) EQ '(').EFORM6R                       @02C 03540001
         AIF   ('&MF(1)' NE 'E').EFORM7   Go if already have it    @02C 03550001
         LA    0,&A(2)             LENGTH OF OUTPUT AREA                03560001
         ST    0,16(,1)            STORE LENGTH OF OUTPUT AREA          03570001
         AGO   .EFORM7                                             @02A 03580001
.EFORM6R ST    &A(2),16(,1)        PUT AREA SIZE INTO PARMS        @02C 03590001
         AGO   .EFORM7                                             @02A 03600001
.EFORM6X AIF   ('&MF(1)' NE 'E').EFORM7  Go if warning not needed  @02A 03610001
*        OUTPUT AREA AND LENGTH ARE ALREADY IN THE PARAMETER LIST.      03620001
.*** Store address of the area coded via the INFOLIST parameter.   @02A 03630001
.EFORM7  ANOP                                                      @L2A 03640001
         AIF   (T'&INFOLIST EQ 'O').INLINEX                        @L2A 03650001
         AIF   ('&INFOLIST'(1,1) EQ '(').EFORM7R                   @02C 03660001
         AIF   ('&MF(1)' NE 'E').INLINEX   Go if already have it   @02C 03670001
         LA    0,&INFOLIST         GET ADDRESS OF DEVTYPE INFO=XXX @02C 03680001
         ST    0,20(,1)            STORE INFOLIST ADDRESS          @02C 03690001
         AGO   .EFORM7S                                            @L6C 03700001
.EFORM7R ST    &INFOLIST(1),20(,1) STORE INFOLIST ADDRESS          @02A 03710001
.*** Handle XTIOT=NO or YES keyword for INFOLIST keyword           @L6A 03711001
.*** DD PARM and XTIOT keywords are processed below.               @L6A 03712001
.EFORM7S AIF   (&XTIOTOn).SetXT    Go if XTIOT=NO specified        @L6A 03713001
         AGO   .INLINEX            Skip around setting XTIOT=NO    @L6A 03714001
.SetXT   OI    2(1),X'20'          Set XTIOT=NO indicator(DEVTIOTN)@L6A 03715001
.* Cannot give warning about no INFOLIST.  List may be short.      @L3C 03716001
.INLINEX ANOP                                                      @L1A 03717001
         SR    0,0                 SHOW PARAMETER LIST IS PROVIDED @02C 03718001
         SVC   24                  CALL DEVTYPE SERVICE ROUTINE    @L1A 03719001
.SKIPIL9 ANOP                                                      @L1A 03720001
         MEXIT                                                     @L1A 03730001
.*** Process the INFO keyword.  No other parameter except maybe    @02C 03740001
.*** MF=L may be coded with it.                                    @02C 03750001
.*** UCBLIST and XTIOT are mutually exclusive for List Form.       @L6A 03760001
.INFOKL  ANOP                 (N'&SYSLIST is num. of positionals)  @02C 03770001
         AIF   (N'&SYSLIST GT 0 OR '&UCBLIST' NE '' OR                 *03780001
               '&INFOLIST' NE '' OR '&XTIOT' NE '').ITOOMCH        @L6C 03790001
         AIF   ('&MF' EQ 'I' OR '&MF' EQ 'L').INFOKE               @02C 03800001
.ITOOMCH MNOTE 8,'IF YOU CODE THE INFO KEYWORD, CODE NO OTHER PARAMETER*03810001
                EXCEPT MAYBE MF=L OR PLISTVER.'                    @03C 03820001
.INFOKE  ANOP                                                      @02C 03830001
&J       SETA  N'&INFO        Get number of values or nulls        @02C 03840001
&NAME    DC    H'&J'          NUMBER OF ENTRIES IN INFO LIST       @02C 03850001
&I       SETA  1              Initialize loop counter              @02C 03860001
.INFOL   AIF   ('&INFO(&I)' EQ 'DEVTYPE').DTYPE                    @02C 03870001
         AIF   ('&INFO(&I)' EQ 'DASD2').DASD2                      @L5A 03880001
         AIF   ('&INFO(&I)' EQ 'DASD').DASD                        @02C 03890001
         AIF   ('&INFO(&I)' EQ 'SUFFIX').SUFIX                     @02C 03900001
         AIF   ('&INFO(&I)' EQ 'AMCAP').AMCAP                      @L4A 03910001
         MNOTE 8,'INFO VALUES MUST BE DEVTYPE, DASD, SUFFIX, AMCAP OR D*03920001
               ASD2'                                               @L5C 03930001
         MEXIT                                                     @02C 03940001
.DTYPE   DC    X'0104'        DEVTYPE CODE                         @02C 03950001
         AGO   .BUMPI                                              @02C 03960001
.DASD2   DC    X'0220'        DASD2 (extended dasd code, len x20)  @L5A 03970001
         AGO   .BUMPI                                              @L5A 03980001
.DASD    DC    X'0210'        DASD CODE                            @02C 03990001
         AGO   .BUMPI                                              @02C 04000001
.SUFIX   DC    X'0302'        SUFFIX CODE                          @02C 04010001
         AGO   .BUMPI                                              @L4C 04020001
.AMCAP   DC    X'0420'        AMCAP (access method capability)     @L4A 04030001
.BUMPI   ANOP                                                      @02C 04040001
&I       SETA  &I+1           Increment to next INFO= value        @02C 04050001
         AIF   (&I LE &J).INFOL  Loop if another entry in the list @02C 04060001
         MEXIT                                                     @02C 04070001
.*** Error processing when UCBLIST, INFOLIST and MF are omitted.   @02C 04080001
.E1      IHBERMAC 2                                                     04090001
         MEXIT                                                          04100001
.E2      IHBERMAC 3                                                     04110001
         MEXIT                                                          04120001
.E3      IHBERMAC 38,,&DEVTAB                                           04130001
         MEND                                        */                 04140001
* %DEVTYP1: ;                                                  /*@L1A*/ 04150001
* %DEVTYPE: MACRO KEYS(UCBLIST,  /* CONTAINS THE ADDR OF THE LIST OF    04160001
*                                            UCBS                @L1A*/ 04170001
*                      INFO, ]Information list of codes           @L4A  04180004
*                      MF);  /* MACRO FORMAT                     @L1A*/ 04190001
*         /* ALSO, POSITIONAL (MACLIST) OPERANDS                        04200001
*                      DDLOC,  ADDRESS OF DD STATEMENT NAME             04210001
*                      A,      ADDRESS (AND SIZE, IF UCBLIST USED)      04220001
*                              OF AREA TO RECEIVE RESULTS               04230001
*                      DEVTAB, NUMBER OF WORDS RETURNED IS 2 OR 5       04240001
*                      RPS     NUMBER OF WORDS RETURNED IS 6     @L1A*/ 04250001
*  DCL EHAREGS CHAR EXTERNAL;  /* REGISTERS FOR EPILOG TO DCL    @L1A*/ 04260001
*  DCL DEVTRC FIXED;  /* RETURN CODE FROM DEVTYPE MACRO          @L1A*/ 04270001
*  DEVTRC = 0;                                                 /*@L1A*/ 04280001
*  ANS('/* '!!MACLABEL!!' DEVTYPE '!!MACLIST!!' '!!MACKEYS!!' */')      04290001
*      NORESCAN SKIP COL(MACLMAR+1);                           /*@L1A*/ 04300001
*  IF NUMBER(UCBLIST) < 1 THEN                                 /*@L1A*/ 04310001
*    DO;  /* OLD FORM OF MACRO CALL                              @L1A*/ 04320001
*      IF NUMBER(MACLIST(1)) < 1 THEN                          /*@L1A*/ 04330001
*        DO;                                                   /*@L1A*/ 04340001
*          ANS MSG('FIRST POSITIONAL OPERAND REQUIRED')        /*@L1A*/ 04350001
*              NORESCAN;                                       /*@L1A*/ 04360001
*          ANS('/* FIRST POSITIONAL OPERAND REQUIRED */')      /*@L1A*/ 04370001
*              NORESCAN SKIP COL(MACLMAR);                     /*@L1A*/ 04380001
*          IF DEVTRC < 12 THEN                                 /*@L1A*/ 04390001
*            DEVTRC = 12;                                      /*@L1A*/ 04400001
*          ELSE;                                               /*@L1A*/ 04410001
*        END;                                                  /*@L1A*/ 04420001
*      ELSE;                                                   /*@L1A*/ 04430001
*      IF NUMBER(MACLIST(2)) < 1 THEN                          /*@L1A*/ 04440001
*        DO;                                                   /*@L1A*/ 04450001
*          ANS MSG('SECOND POSITIONAL OPERAND REQUIRED')       /*@L1A*/ 04460001
*              NORESCAN;                                       /*@L1A*/ 04470001
*          ANS('/* SECOND POSITIONAL OPERAND REQUIRED */')     /*@L1A*/ 04480001
*              NORESCAN SKIP COL(MACLMAR);                     /*@L1A*/ 04490001
*          IF DEVTRC < 12 THEN                                 /*@L1A*/ 04500001
*            DEVTRC = 12;                                      /*@L1A*/ 04510001
*          ELSE;                                               /*@L1A*/ 04520001
*        END;                                                  /*@L1A*/ 04530001
*      ELSE;                                                   /*@L1A*/ 04540001
*      IF NUMBER(MACLIST(3)) >= 1 & MACLIST(3) ^= 'DEVTAB'     /*@L1A*/ 04550001
*          THEN                                                /*@L1A*/ 04560001
*        DO;                                                   /*@L1A*/ 04570001
*          ANS MSG('THIRD POSITIONAL OPERAND INVALID')         /*@L1A*/ 04580001
*              NORESCAN;                                       /*@L1A*/ 04590001
*          ANS('/* THIRD POSITIONAL OPERAND INVALID */')       /*@L1A*/ 04600001
*              NORESCAN SKIP COL(MACLMAR);                     /*@L1A*/ 04610001
*          IF DEVTRC < 8 THEN                                  /*@L1A*/ 04620001
*            DEVTRC = 8;                                       /*@L1A*/ 04630001
*          ELSE;                                               /*@L1A*/ 04640001
*        END;                                                  /*@L1A*/ 04650001
*      ELSE;                                                   /*@L1A*/ 04660001
*      IF NUMBER(MACLIST(4)) >= 1 & MACLIST(4) ^= 'RPS' THEN   /*@L1A*/ 04670001
*        DO;                                                   /*@L1A*/ 04680001
*          ANS MSG('FOURTH POSITIONAL OPERAND INVALID')        /*@L1A*/ 04690001
*              NORESCAN;                                       /*@L1A*/ 04700001
*          ANS('/* FOURTH POSITIONAL OPERAND INVALID */')      /*@L1A*/ 04710001
*              NORESCAN SKIP COL(MACLMAR);                     /*@L1A*/ 04720001
*          IF DEVTRC < 4 THEN                                  /*@L1A*/ 04730001
*            DEVTRC = 4;                                       /*@L1A*/ 04740001
*          ELSE;                                               /*@L1A*/ 04750001
*        END;                                                  /*@L1A*/ 04760001
*      ELSE;                                                   /*@L1A*/ 04770001
*      IF DEVTRC > 4 THEN                                      /*@L1A*/ 04780001
*        RETURN CODE(DEVTRC);                                  /*@L1A*/ 04790001
*      ELSE;                                                   /*@L1A*/ 04800001
*      IF INDEX(EHAREGS,'01P') = 0 THEN                        /*@L1A*/ 04810001
*        EHAREGS = EHAREGS !! '01P';                           /*@L1A*/ 04820001
*      ELSE;                                                   /*@L1A*/ 04830001
*      IF INDEX(EHAREGS,'00P') = 0 THEN                        /*@L1A*/ 04840001
*        EHAREGS = EHAREGS !! '00P';                           /*@L1A*/ 04850001
*      ELSE;                                                   /*@L1A*/ 04860001
*      ANS('DO; ')                                             /*@L1A*/ 04870001
*          NORESCAN SKIP COL(MACCOL);                          /*@L1A*/ 04880001
*      ANS('RFY (GPR00P,GPR01P) RSTD; ')                       /*@L1A*/ 04890001
*          NORESCAN SKIP COL(MACCOL + 2);                      /*@L1A*/ 04900001
*      IF MACLIST(1,1:1) = '(' THEN                            /*@L1A*/ 04910001
*        ANS('GPR01P = '!!MACLIST(1)!!'; ')                    /*@L1A*/ 04920001
*            NORESCAN SKIP COL(MACCOL + 2);                    /*@L1A*/ 04930001
*      ELSE                                                    /*@L1A*/ 04940001
*        ANS('GPR01P = ADDR('!!MACLIST(1)!!'); ')              /*@L1A*/ 04950001
*            NORESCAN SKIP COL(MACCOL + 2);                    /*@L1A*/ 04960001
*      IF MACLIST(2,1:1) = '(' THEN                            /*@L1A*/ 04970001
*        ANS('GPR00P = '!!MACLIST(2)!!'; ')                    /*@L1A*/ 04980001
*            NORESCAN SKIP COL(MACCOL + 2);                    /*@L1A*/ 04990001
*      ELSE                                                    /*@L1A*/ 05000001
*        ANS('GPR00P = ADDR('!!MACLIST(2)!!'); ')              /*@L1A*/ 05010001
*            NORESCAN SKIP COL(MACCOL + 2);                    /*@L1A*/ 05020001
*      IF MACLIST(3) = 'DEVTAB' THEN                           /*@L1A*/ 05030001
*        ANS('GPR00P = 0 - GPR00P; ')                          /*@L1A*/ 05040001
*            NORESCAN SKIP COL(MACCOL + 2);                    /*@L1A*/ 05050001
*      ELSE;                                                   /*@L1A*/ 05060001
*      IF MACLIST(4) = 'RPS' THEN                              /*@L1A*/ 05070001
*        ANS('GPR01P = 0 - GPR01P; ')                          /*@L1A*/ 05080001
*            NORESCAN SKIP COL(MACCOL + 2);                    /*@L1A*/ 05090001
*      ELSE;                                                   /*@L1A*/ 05100001
*      ANS('SVC(24); ')                                        /*@L1A*/ 05110001
*          NORESCAN SKIP COL(MACCOL + 2);                      /*@L1A*/ 05120001
*      ANS('RFY (GPR00P,GPR01P) UNRSTD; ')                     /*@L1A*/ 05130001
*          NORESCAN SKIP COL(MACCOL + 2);                      /*@L1A*/ 05140001
*      ANS('END; ')                                            /*@L1A*/ 05150001
*          NORESCAN SKIP COL(MACCOL);                          /*@L1A*/ 05160001
*      RETURN CODE(DEVTRC);                                    /*@L1A*/ 05170001
*    END;                                                      /*@L1A*/ 05180001
*  ELSE                                                        /*@L1A*/ 05190001
*    DO;  /* UCB LIST FORM OF MACRO CALL                         @L1A*/ 05200001
*      IF NUMBER(UCBLIST) = 2 !                                /*@L1A*/ 05210001
*         NUMBER(UCBLIST) = 3 !                                /*@L3A*/ 05220001
*          (NUMBER(MF) > 0 &                                   /*@L1A*/ 05230001
*           NUMBER(UCBLIST) = 1 & UCBLIST(1) = 'YES') THEN;    /*@L1A*/ 05240001
*      ELSE                                                    /*@L1A*/ 05250001
*        DO;                                                   /*@L1A*/ 05260001
*          ANS MSG('KEYWORD UCBLIST MUST BE "YES" OR HAVE TWO '!!       05270001
*              'OR THREE OPERANDS. ')                          /*@L3C*/ 05280001
*              NORESCAN;                                       /*@L1A*/ 05290001
*          ANS('/* KEYWORD UCBLIST MUST BE "YES" OR HAVE TWO ')         05300001
*              NORESCAN SKIP COL(MACLMAR);                     /*@L1A*/ 05310001
*          ANS('OR THREE OPERANDS. */')                        /*@L3C*/ 05320001
*              NORESCAN;                                       /*@L1A*/ 05330001
*          IF DEVTRC < 8 THEN                                  /*@L1A*/ 05340001
*            DEVTRC = 8;                                       /*@L1A*/ 05350001
*          ELSE;                                               /*@L1A*/ 05360001
*        END;                                                  /*@L1A*/ 05370001
*      IF NUMBER(UCBLIST) = 3 &                                /*@L3A*/ 05380001
*         (UCBLIST(3) ^= 'ANY' &                               /*@L3A*/ 05390001
*          UCBLIST(3) ^= 'BELOW')                              /*@L3A*/ 05400001
*      THEN                                                    /*@L3A*/ 05410001
*        DO;                                                   /*@L3A*/ 05420001
*          ANS MSG('THIRD VALUE UCBLIST MUST BE "ANY" '!!      /*@L3A*/ 05430001
*              'OR "BELOW". ')                                 /*@L3A*/ 05440001
*              NORESCAN;                                       /*@L3A*/ 05450001
*          ANS('/* THIRD VALUE UCBLIST MUST BE "ANY" OR ')     /*@L3A*/ 05460001
*              NORESCAN SKIP COL(MACLMAR);                     /*@L3A*/ 05470001
*          ANS('OR "BELOW". */')                               /*@L3C*/ 05480001
*              NORESCAN;                                       /*@L3A*/ 05490001
*          IF DEVTRC < 8 THEN                                  /*@L3A*/ 05500001
*            DEVTRC = 8;                                       /*@L3A*/ 05510001
*          ELSE;                                               /*@L3A*/ 05520001
*        END;                                                  /*@L3A*/ 05530001
*      ELSE;                                                   /*@L3A*/ 05540001
*      IF (NUMBER(MF) < 1 & NUMBER(MACLIST(2)) ^= 2) !         /*@L1A*/ 05550001
*          (NUMBER(MACLIST(2)) > 1 & NUMBER(MACLIST(2)) ^= 2)  /*@L1A*/ 05560001
*          THEN                                                /*@L1A*/ 05570001
*        DO;                                                   /*@L1A*/ 05580001
*          ANS MSG('SECOND POSITIONAL OPERAND MUST HAVE '!!    /*@L1A*/ 05590001
*              'TWO OPERANDS. ')                               /*@L1A*/ 05600001
*              NORESCAN;                                       /*@L1A*/ 05610001
*          ANS('/* SECOND POSITIONAL OPERAND MUST HAVE TWO ')  /*@L1A*/ 05620001
*              NORESCAN SKIP COL(MACLMAR);                     /*@L1A*/ 05630001
*          ANS('OPERANDS. */')                                 /*@L1A*/ 05640001
*              NORESCAN;                                       /*@L1A*/ 05650001
*          IF DEVTRC < 8 THEN                                  /*@L1A*/ 05660001
*            DEVTRC = 8;                                       /*@L1A*/ 05670001
*          ELSE;                                               /*@L1A*/ 05680001
*        END;                                                  /*@L1A*/ 05690001
*      ELSE;                                                   /*@L1A*/ 05700001
*      IF NUMBER(MF) > 0 & MF(1) ^= 'L' & MF(1) ^= 'E' THEN    /*@L1A*/ 05710001
*        DO;                                                   /*@L1A*/ 05720001
*          ANS MSG('KEYWORD MF MUST BE "L" OR "E". ')                   05730001
*              NORESCAN;                                       /*@L1A*/ 05740001
*          ANS('/* KEYWORD MF MUST BE "L" OR "E". */')                  05750001
*              NORESCAN SKIP COL(MACLMAR);                     /*@L1A*/ 05760001
*          IF DEVTRC < 8 THEN                                  /*@L1A*/ 05770001
*            DEVTRC = 8;                                       /*@L1A*/ 05780001
*          ELSE;                                               /*@L1A*/ 05790001
*        END;                                                  /*@L1A*/ 05800001
*      ELSE;                                                   /*@L1A*/ 05810001
*      IF NUMBER(MF) > 0 & MF(1) = 'L' THEN                    /*@L1A*/ 05820001
*        DO;                                                   /*@L1A*/ 05830001
*          IF UCBLIST(1,1:1) = '(' !                           /*@L1A*/ 05840001
*              (NUMBER(UCBLIST) > 1 & UCBLIST(2,1:1) = '(') !  /*@L1A*/ 05850001
*              (NUMBER(MACLIST(2)) > 0 &                       /*@L1A*/ 05860001
*                 MACLIST(2,1,1:1) = '(') !                    /*@L1A*/ 05870001
*              (NUMBER(MACLIST(2)) > 1 &                       /*@L1A*/ 05880001
*                 MACLIST(2,2,1:1) = '(') THEN                 /*@L1A*/ 05890001
*            DO;                                               /*@L1A*/ 05900001
*              ANS MSG('REGISTER NOTATION IS NOT PERMITED WITH MF(L) ') 05910001
*                  NORESCAN;                                   /*@L1A*/ 05920001
*              ANS('/* REGISTER NOTATION IS NOT PERMITED WITH ')        05930001
*                  NORESCAN SKIP COL(MACLMAR);                 /*@L1A*/ 05940001
*              ANS('MF(L). */')                                /*@L1A*/ 05950001
*                  NORESCAN;                                   /*@L1A*/ 05960001
*              IF DEVTRC < 8 THEN                              /*@L1A*/ 05970001
*                DEVTRC = 8;                                   /*@L1A*/ 05980001
*              ELSE;                                           /*@L1A*/ 05990001
*            END;                                              /*@L1A*/ 06000001
*          ELSE;                                               /*@L1A*/ 06010001
*        END;                                                  /*@L1A*/ 06020001
*      ELSE;                                                   /*@L1A*/ 06030001
*      IF NUMBER(MF) > 0 & MF(1) = 'E' & NUMBER(MF) < 2 THEN   /*@L1A*/ 06040001
*        DO;                                                   /*@L1A*/ 06050001
*          ANS MSG('KEYWORD MF'!!MF!!' IS INVALID. ')                   06060001
*              NORESCAN;                                       /*@L1A*/ 06070001
*          ANS('/* KEYWORD MF'!!MF!!' IS INVALID. */')                  06080001
*              NORESCAN SKIP COL(MACLMAR);                     /*@L1A*/ 06090001
*          IF DEVTRC < 8 THEN                                  /*@L1A*/ 06100001
*            DEVTRC = 8;                                       /*@L1A*/ 06110001
*          ELSE;                                               /*@L1A*/ 06120001
*        END;                                                  /*@L1A*/ 06130001
*      ELSE;                                                   /*@L1A*/ 06140001
*      IF NUMBER(MF) > 0 & MF(1) = 'L' &                       /*@L1A*/ 06150001
*          LENGTH(MACLABEL) < 1 THEN                           /*@L1A*/ 06160001
*        DO;                                                   /*@L1A*/ 06170001
*          ANS MSG('LABEL REQUIRED BUT NOT SUPPLIED. ')                 06180001
*              NORESCAN;                                       /*@L1A*/ 06190001
*          ANS('/* LABEL REQUIRED BUT NOT SUPPLIED. */')                06200001
*              NORESCAN SKIP COL(MACLMAR);                     /*@L1A*/ 06210001
*          IF DEVTRC < 8 THEN                                  /*@L1A*/ 06220001
*            DEVTRC = 8;                                       /*@L1A*/ 06230001
*          ELSE;                                               /*@L1A*/ 06240001
*        END;                                                  /*@L1A*/ 06250001
*      ELSE;                                                   /*@L1A*/ 06260001
*      IF DEVTRC > 4 THEN                                      /*@L1A*/ 06270001
*        RETURN CODE(DEVTRC);                                  /*@L1A*/ 06280001
*      ELSE;                                                   /*@L1A*/ 06290001
*      IF NUMBER(MF) = 0 ! MF(1) = 'L' THEN                    /*@L1A*/ 06300001
*        DO;                                                   /*@L1A*/ 06310001
*          ANS('DCL 1 '!!MACLABEL(1:LENGTH(MACLABEL)-1))       /*@L1A*/ 06320001
*              NORESCAN SKIP COL(MACCOL);                      /*@L1A*/ 06330001
*          ANS(' BDY(WORD) STATIC, ')                          /*@L1A*/ 06340001
*              NORESCAN;                                       /*@L1A*/ 06350001
*          ANS('2 * FIXED(8) INIT(16), ')                      /*@L1A*/ 06360001
*              NORESCAN SKIP COL(MACCOL+6);                    /*@L1A*/ 06370001
*          ANS('2 * FIXED(8) INIT(1), ')                       /*@L1A*/ 06380001
*              NORESCAN SKIP COL(MACCOL+6);                    /*@L1A*/ 06390001
*          IF NUMBER(UCBLIST) = 3 &                            /*@L3A*/ 06400001
*              UCBLIST(3,1:3) = 'ANY' THEN                     /*@L3A*/ 06410001
*             ANS('2 * BIT(16) INIT(''4000''X), ')             /*@L3A*/ 06420001
*                 NORESCAN SKIP COL(MACCOL+6);                 /*@L3A*/ 06430001
*          ELSE                                                /*@L3A*/ 06440001
*             ANS('2 * FIXED(16) INIT(0), ')                   /*@L3C*/ 06450001
*                 NORESCAN SKIP COL(MACCOL+6);                 /*@L3C*/ 06460001
*          IF NUMBER(UCBLIST) > 1 &                            /*@L1A*/ 06470001
*              UCBLIST(1,1:1) ^= '(' THEN                      /*@L1A*/ 06480001
*            ANS('2 * PTR(31) INIT(ADDR('!!UCBLIST(1)!!')), ')          06490001
*                NORESCAN SKIP COL(MACCOL+6);                  /*@L1A*/ 06500001
*          ELSE                                                /*@L1A*/ 06510001
*            ANS('2 * PTR(31) INIT(0), ')                      /*@L1A*/ 06520001
*                NORESCAN SKIP COL(MACCOL+6);                  /*@L1A*/ 06530001
*          IF NUMBER(UCBLIST) > 1 &                            /*@L1A*/ 06540001
*              UCBLIST(2,1:1) ^= '(' THEN                      /*@L1A*/ 06550001
*            ANS('2 * FIXED(31) INIT('!!UCBLIST(2)!!'), ')     /*@L1A*/ 06560001
*                NORESCAN SKIP COL(MACCOL+6);                  /*@L1A*/ 06570001
*          ELSE                                                /*@L1A*/ 06580001
*            ANS('2 * FIXED(31) INIT(0), ')                    /*@L1A*/ 06590001
*                NORESCAN SKIP COL(MACCOL+6);                  /*@L1A*/ 06600001
*          IF NUMBER(MACLIST(2)) > 0 &                         /*@L1A*/ 06610001
*              MACLIST(2,1,1:1) ^= '(' THEN                    /*@L1A*/ 06620001
*            ANS('2 * PTR(31) INIT(ADDR('!!MACLIST(2,1)!!')), ')        06630001
*                NORESCAN SKIP COL(MACCOL+6);                  /*@L1A*/ 06640001
*          ELSE                                                /*@L1A*/ 06650001
*            ANS('2 * PTR(31) INIT(0), ')                      /*@L1A*/ 06660001
*                NORESCAN SKIP COL(MACCOL+6);                  /*@L1A*/ 06670001
*          IF NUMBER(MACLIST(2)) > 0 &                         /*@L1A*/ 06680001
*              MACLIST(2,2,1:1) ^= '(' THEN                    /*@L1A*/ 06690001
*            ANS('2 * FIXED(31) INIT('!!MACLIST(2,2)!!'); ')   /*@L1A*/ 06700001
*                NORESCAN SKIP COL(MACCOL+6);                  /*@L1A*/ 06710001
*          ELSE                                                /*@L1A*/ 06720001
*            ANS('2 * FIXED(31) INIT(0); ')                    /*@L1A*/ 06730001
*                NORESCAN SKIP COL(MACCOL+6);                  /*@L1A*/ 06740001
*        END;                                                  /*@L1A*/ 06750001
*      ELSE;                                                   /*@L1A*/ 06760001
*      IF NUMBER(MF) = 0 ! MF(1) = 'E' THEN                    /*@L1A*/ 06770001
*        DO;                                                   /*@L1A*/ 06780001
*          ANS('DO; ')                                         /*@L1A*/ 06790001
*              NORESCAN SKIP COL(MACCOL);                      /*@L1A*/ 06800001
*          IF INDEX(EHAREGS,'01P') = 0 THEN                    /*@L1A*/ 06810001
*            EHAREGS = EHAREGS !! '01P';                       /*@L1A*/ 06820001
*          ELSE;                                               /*@L1A*/ 06830001
*          IF INDEX(EHAREGS,'00P') = 0 THEN                    /*@L1A*/ 06840001
*            EHAREGS = EHAREGS !! '00P';                       /*@L1A*/ 06850001
*          ELSE;                                               /*@L1A*/ 06860001
*          ANS('RFY (GPR00P,GPR01P) RSTD; ')                   /*@L1A*/ 06870001
*              NORESCAN SKIP COL(MACCOL + 2);                  /*@L1A*/ 06880001
*          IF MF(2,1:1) = '(' THEN                             /*@L1A*/ 06890001
*            ANS('GPR01P = '!!MF(2,2:LENGTH(MF(2))-1)!!'; ')   /*@L1A*/ 06900001
*                NORESCAN SKIP COL(MACCOL+2);                  /*@L1A*/ 06910001
*          ELSE                                                /*@L1A*/ 06920001
*            ANS('GPR01P = ADDR('!!MF(2)!!'); ')               /*@L1A*/ 06930001
*                NORESCAN SKIP COL(MACCOL+2);                  /*@L1A*/ 06940001
*          IF NUMBER(UCBLIST) > 1 THEN                         /*@L1A*/ 06950001
*            DO;                                               /*@L1A*/ 06960001
*              IF UCBLIST(1,1:1) = '(' THEN                    /*@L1A*/ 06970001
*                DO;                                           /*@L1A*/ 06980001
*                  ANS('(GPR01P + 4) -> I031P = ')             /*@L1A*/ 06990001
*                      NORESCAN SKIP COL(MACCOL+2);            /*@L1A*/ 07000001
*                  ANS(UCBLIST(1,2:LENGTH(UCBLIST(1))-1))      /*@L1A*/ 07010001
*                      NORESCAN;                               /*@L1A*/ 07020001
*                  ANS('; ')                                   /*@L1A*/ 07030001
*                      NORESCAN;                               /*@L1A*/ 07040001
*                END;                                          /*@L1A*/ 07050001
*              ELSE                                            /*@L1A*/ 07060001
*                IF NUMBER(MF) > 0 & MF(1) = 'E' THEN          /*@L1A*/ 07070001
*                  DO;                                         /*@L1A*/ 07080001
*                    ANS('(GPR01P + 4) -> I031P = ADDR(')      /*@L1A*/ 07090001
*                        NORESCAN SKIP COL(MACCOL+2);          /*@L1A*/ 07100001
*                    ANS(UCBLIST(1)!!'); ')                    /*@L1A*/ 07110001
*                        NORESCAN;                             /*@L1A*/ 07120001
*                  END;                                        /*@L1A*/ 07130001
*                ELSE;                                         /*@L1A*/ 07140001
*              IF NUMBER(MF) > 0 & MF(1) = 'E' THEN            /*@L1A*/ 07150001
*                DO;                                           /*@L1A*/ 07160001
*                  ANS('(GPR01P + 8) -> I031P = ')             /*@L1A*/ 07170001
*                      NORESCAN SKIP COL(MACCOL+2);            /*@L1A*/ 07180001
*                  ANS(UCBLIST(2))                             /*@L1A*/ 07190001
*                      NORESCAN;                               /*@L1A*/ 07200001
*                  ANS('; ')                                   /*@L1A*/ 07210001
*                      NORESCAN;                               /*@L1A*/ 07220001
*                END;                                          /*@L1A*/ 07230001
*              ELSE;                                           /*@L1A*/ 07240001
*              IF NUMBER(MF) > 0 & MF(1) = 'E' &               /*@L3A*/ 07250001
*                 NUMBER(UCBLIST) = 3 &                        /*@L3A*/ 07260001
*                 UCBLIST(3,1:3) = 'ANY' THEN                  /*@L3A*/ 07270001
*                DO;                                           /*@L3A*/ 07280001
*                  ANS('(GPR01P + 2) -> I001C = ')             /*@L3A*/ 07290001
*                      NORESCAN SKIP COL(MACCOL+2);            /*@L3A*/ 07300001
*                  ANS("'40'X")                                /*@L3A*/ 07310001
*                      NORESCAN;                               /*@L3A*/ 07320001
*                  ANS('; ')                                   /*@L3A*/ 07330001
*                      NORESCAN;                               /*@L3A*/ 07340001
*                END;                                          /*@L3A*/ 07350001
*                ELSE;                                         /*@L3A*/ 07360001
*            /*  ELSE DO;                                        @L3A*/ 07370001
*            /*    ANS('(GPR01P + 2) -> I001C = ')               @L3A*/ 07380001
*            /*        NORESCAN SKIP COL(MACCOL+2);              @L3A*/ 07390001
*            /*    ANS("'00'X")                                  @L3A*/ 07400001
*            /*        NORESCAN;                                 @L3A*/ 07410001
*            /*    ANS('; ')                                     @L3A*/ 07420001
*            /*        NORESCAN;                                 @L3A*/ 07430001
*            /*  END;                                            @L3A*/ 07440001
*            END;                                              /*@L1A*/ 07450001
*          ELSE;                                               /*@L1A*/ 07460001
*          IF NUMBER(MACLIST(2)) > 0 THEN                      /*@L1A*/ 07470001
*            DO;                                               /*@L1A*/ 07480001
*              IF MACLIST(2,1,1:1) = '(' THEN                  /*@L1A*/ 07490001
*                DO;                                           /*@L1A*/ 07500001
*                  ANS('(GPR01P + 12) -> I031P = ')            /*@L1A*/ 07510001
*                      NORESCAN SKIP COL(MACCOL+2);            /*@L1A*/ 07520001
*                  ANS(MACLIST(2,1,2:LENGTH(MACLIST(2,1))-1))  /*@L1A*/ 07530001
*                      NORESCAN;                               /*@L1A*/ 07540001
*                  ANS('; ')                                   /*@L1A*/ 07550001
*                      NORESCAN;                               /*@L1A*/ 07560001
*                END;                                          /*@L1A*/ 07570001
*              ELSE                                            /*@L1A*/ 07580001
*                IF NUMBER(MF) > 0 & MF(1) = 'E' THEN          /*@L1A*/ 07590001
*                  DO;                                         /*@L1A*/ 07600001
*                    ANS('(GPR01P + 12) -> I031P = ADDR(')     /*@L1A*/ 07610001
*                        NORESCAN SKIP COL(MACCOL+2);          /*@L1A*/ 07620001
*                    ANS(MACLIST(2,1)!!'); ')                  /*@L1A*/ 07630001
*                        NORESCAN;                             /*@L1A*/ 07640001
*                  END;                                        /*@L1A*/ 07650001
*                ELSE;                                         /*@L1A*/ 07660001
*              IF NUMBER(MF) > 0 & MF(1) = 'E' THEN            /*@L1A*/ 07670001
*                DO;                                           /*@L1A*/ 07680001
*                  ANS('(GPR01P + 16) -> I031P = ')            /*@L1A*/ 07690001
*                      NORESCAN SKIP COL(MACCOL+2);            /*@L1A*/ 07700001
*                  ANS(MACLIST(2,2))                           /*@L1A*/ 07710001
*                      NORESCAN;                               /*@L1A*/ 07720001
*                  ANS('; ')                                   /*@L1A*/ 07730001
*                      NORESCAN;                               /*@L1A*/ 07740001
*                END;                                          /*@L1A*/ 07750001
*              ELSE;                                           /*@L1A*/ 07760001
*            END;                                              /*@L1A*/ 07770001
*          ELSE;                                               /*@L1A*/ 07780001
*          ANS('GPR00P = 0; ')                                 /*@L1A*/ 07790001
*              NORESCAN SKIP COL(MACCOL + 2);                  /*@L1A*/ 07800001
*          ANS('SVC(24); ')                                    /*@L1A*/ 07810001
*              NORESCAN SKIP COL(MACCOL + 2);                  /*@L1A*/ 07820001
*          ANS('RFY (GPR00P,GPR01P) UNRSTD; ')                 /*@L1A*/ 07830001
*              NORESCAN SKIP COL(MACCOL + 2);                  /*@L1A*/ 07840001
*          ANS('END; ')                                        /*@L1A*/ 07850001
*              NORESCAN SKIP COL(MACCOL);                      /*@L1A*/ 07860001
*        END;                                                  /*@L1A*/ 07870001
*      ELSE;                                                   /*@L1A*/ 07880001
*    END;         ]Of ELSE for IF NUMBER(UCBLIST) < 1              @L4C 07890001
*  %END DEVTYPE;                                               /*@L1A*/ 07900001
