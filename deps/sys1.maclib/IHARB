*                                                                               
*        %GOTO RBCML1;  /*                                                      
         MACRO                                                                  
         IHARB &SYS=AOS2,&DSECT=YES,&LIST=NO,&IKJRBPROLOG=YES     @L3A          
         GBLA  &IHARB                                                           
&IHARB   SETA  1           */                                                   
*%RBCML1 : ;                                                                    
*                                                                               
*/* START OF SPECIFICATIONS **************************************** */         
*/*                                                                  */         
*/*01* MACRO NAME = IHARB                                            */         
*/*                                                                  */         
*/*01* DESCRIPTIVE NAME = REQUEST BLOCKS                             */         
*/*                                                                  */         
*/*01* COPYRIGHT=                                                    */         
*/*      5650-ZOS                                                    */         
*/*      COPYRIGHT IBM CORP. 1977, 2021                              */         
*/*      LICENSED MATERIALS - PROPERTY OF IBM                        */         
*/*                                                                  */         
*/*01* STATUS= HBB77d0                                               */         
*/*                                                                  */         
*/*01* EXTERNAL CLASSIFICATION:                                      */         
*/*                                                                  */         
*/*02* GUPI: FIELDS                                                  */         
*/*          RBFEPARM                                                */         
*/*          RBGRSAVE                                                */         
*/*          RBINTCDA                                                */         
*/*          RBLINKB                                                 */         
*/*          RBNEXAV                                                 */         
*/*          RBOPSW                                                  */         
*/*          RBPPSAV1                                                */         
*/*02* PSPI: BASE                                                    */         
*/*                                                                  */         
*/*01* END OF EXTERNAL CLASSIFICATION:                               */         
*/*                                                                  */         
*/*01* DSECT NAME:                                                   */         
*/*      RBPRFX (DSECT card precedes prefix). RBBASIC should be      */         
*/*      used for USING for basic section.                           */         
*/*                                                                  */         
*/*01* METHOD OF ACCESS                                              */         
*/*      BAL  - A DSECT IS PRODUCED UNLESS DSECT=NO IS SPECIFIED.    */         
*/*             USING ON RBPRFX GIVES ADDRESSABILITY FOR ALL SYMBOLS.*/         
*/*                                                                  */         
*/*             THIS MACRO ASSUMES A DEFAULT OF SYS=AOS2 WHICH MEANS */         
*/*             A MAPPING OF OS/VS2 RB'S IS DESIRED.  IF A MAPPING   */         
*/*             OF OS/VS1 RB'S IS DESIRED, SPECIFY SYS=AOS1 ON MACRO */         
*/*             CALL.                                                */         
*/*                                                                  */         
*/*      BAL LISTING - SPECIFY LIST=YES ON MACRO CALL.               */         
*/*                                                                  */         
*/*      PL/S - DCL RBSECPTR PTR                                     */         
*/*             IF %RBSYSTM='AOS1', ALSO SPECIFY                     */         
*/*             DCL CDBPTR PTR  AND                                  */         
*/*             DCL XRBPTR PTR OR %XRBPTR='RBSECPTR'                 */         
*/*                                                                  */         
*/*             THIS MACRO ASSUMES IT IS MAPPING OS/VS2 RB'S.  IF A  */         
*/*             MAPPING OF OS/VS1 RB'S IS DESIRED, SPECIFY           */         
*/*             %RBSYSTM='AOS1' BEFORE THE INCLUDE FOR THIS MACRO.   */         
*/*             DO NOT SET RBSYSTM TO 'AOS2' BECAUSE NULL MEANS      */         
*/*             OS/VS2.                                              */         
*/*                                                                  */         
*/*      PL/S LISTING - SPECIFY %IHALIST='YES' BEFORE %INCLUDE.      */         
*/*                                                                  */         
*/*  NOTE                                                            */         
*/*      THIS MACRO MAPS THE RB FIELDS WHICH ARE COMMON BETWEEN      */         
*/*      OS/VS1 AND OS/VS2.  IF SYS=AOS2 OR %RBSYSTM='', IKJRB IS    */         
*/*      INVOKED TO MAP THE OS/VS2 FIELDS.  IF SYS=AOS1 OR           */         
*/*      %RBSYSTM='AOS1', IEZXRB IS INVOKED TO MAP THE OS/VS1 FIELDS.*/         
*/*      THE PL/S INCLUDE STATEMENTS SPECIFY DDNAME OF SYSLIB.       */         
*/*                                                                  */         
*/*01* COMPONENT = Task Management (SC1CL)                           */         
*/*                                                                  */         
*/*01* EYE-CATCHER:  NONE                                            */         
*/*                                                                  */         
*/*01* STORAGE ATTRIBUTES:                                           */         
*/*02*  SUBPOOL:                                                     */         
*/*               For IRBs, subpool 253.                             */         
*/*               For PRBs, SVRBs, and SIRBs, subpool 255            */         
*/*02*  KEY:  0                                                      */         
*/*02*  RESIDENCY:  Below 16M                                        */         
*/*                                                                  */         
*/*01* SIZE:                                                         */         
*/*          For PRBs: 136 bytes.                                    */         
*/*          For TIRBs: 136 bytes.                                   */         
*/*          For SIRBs: 200 bytes.                                   */         
*/*          For SVRBs: 240 bytes.                                   */         
*/*          For IRBs: 128 bytes plus the length of optional fields. */         
*/*                                                                  */         
*/*01* CREATED BY:                                                   */         
*/*          For IRBs: CIRB (Create IRB) macro.                      */         
*/*          For PRBs: SYSGEN, address space initialization,         */         
*/*          ATTACH, LINK, SYNCH, and XCTL.                          */         
*/*          For SIRBs: SYSGEN, address space initialization.        */         
*/*          For SVRBs: SVC first level interruption handler.        */         
*/*                                                                  */         
*/*01* POINTED TO BY:                                                */         
*/*       TCBRBP field of the TCB data area                          */         
*/*       CDRRBP field of the CDE data area (associated RB)          */         
*/*       EVNTRBP field of the EVNT data area (waiting RB)           */         
*/*       PCBRB field of the PCB data area (associated RB)           */         
*/*       RBLINK field of the RB data area (previous RB)             */         
*/*       TAXEIRB field of the TAXE data area (associated RB)        */         
*/*       TIQEIRB field of the TAXE data area (IRB to be scheduled)  */         
*/*                                                                  */         
*/*01* SERIALIZATION:                                                */         
*/*       If the task is running, from the point of view of a        */         
*/*       program running under that task, the chain is serialized.  */         
*/*                                                                  */         
*/*       If the task is not running and the local lock is held, the */         
*/*       RB chain will not change. To ensure the task will not be   */         
*/*       dispatched, the task must be nondispatchable.              */         
*/*                                                                  */         
*/*01* FUNCTION:                                                     */         
*/*       Part of the RB is mapped by IHARB and part is mapped by    */         
*/*       IKJRB.                                                     */         
*/*       Maps out the following Request Blocks:                     */         
*/*       - IRB (Interrupt Request Block), which is not the          */         
*/*         same as an Interruption Response Block. See the          */         
*/*         IRB data area description.                               */         
*/*       - PRB (Program Request Block)                              */         
*/*       - SIRB (System Interrupt Request Block)                    */         
*/*       - SVRB (SuperVisor Request Block for SVC routines)         */         
*/*       - TIRB (Task Interrupt Request Block)                      */         
*/*       The RB control block contains information needed by        */         
*/*       the supervisor concerning programs and routines,           */         
*/*       including save areas for all general registers,            */         
*/*       extended registers, a save area for SVC routines,          */         
*/*       and additional data needed for control.                    */         
*/*                                                                  */         
*/*01* DISTRIBUTION LIBRARY = AMACLIB                                */         
*/*                                                                  */         
*/* END OF SPECIFICATIONS ****************************************** */         
*%GOTO RBCML2;  /*                                                              
.*                                                                              
.*********************************************************************          
.*   CHANGE ACTIVITY =                                                          
.*                                                                              
.*  $L1=PLAS     JBB2214  840409  PD16XK:  PLAS SUPPORT                         
.*  $P1=PR20030  HBB6601  951005  B7VBXZ:  Add SHOWHDR, comment                 
.*                                         changes only.                        
.*  $P2=PSD0529  JBB6602  951130  B7VBXZ:  Update SHOWHDR formatting.           
.*  $L2=64BITNIP HBB7703 981204 PD00XB: ESAME                                   
.*  $L3=ME28030  HBB77A0 140812 PD00XB: IKJRBNOPROLOG for data areas            
.*                                                                              
.*********************************************************************          
.*                                                                              
         PUSH  PRINT                                              @L1A          
         AIF   ('&LIST' EQ 'YES').RBCMLST                         @L1A          
         PRINT OFF                                                @L1A          
.RBCMLST ANOP                                                     @L1A          
         SPACE 1                                                                
         IEZBITS , -          SYMBOLIC BIT DEFINITIONS                          
         AIF   ('&DSECT' EQ 'NO').NODSCT1                                       
RBPRFX   DSECT , -            RBSECPTR-64                                       
         AGO   .CONT1                                                           
.NODSCT1 ANOP                                                                   
         DS    0D                                                               
RBPRFX   EQU   * -            RBSECPTR-64                                       
.CONT1   ANOP                                                                   
         DS    8D -           PREFIX IS SYSTEM DEPENDENT                        
RBBASIC  EQU   * -            START OF BASIC SECTION OF RB                      
RBEXRTNM DS    0CL8 -         EIGHT-CHARACTER NAME OF ERROR EXIT                
*                             ROUTINE (SIRB)                                    
RBTMFLD  DS    B -            INDICATORS FOR TIMER ROUTINES.  WHEN              
*                             THERE ARE NO TIMER ROUTINES, THIS FIELD           
*                             IS ZERO.  (IRB)                                   
RBTMQUE  EQU   BIT0 -         TIMER ELEMENT NOT ON QUEUE                        
RBTMTOD  EQU   BIT1 -         LOCAL TIME-OF-DAY OPTION IS USED                  
RBRSV005 EQU   BIT2,,C'X' -   RESERVED                                          
RBWLIM   EQU   BIT3 -         WAIT LIMIT EXCEEDED                MDC001         
RBTMCMP  EQU   BIT4 -         INTERVAL HAS EXPIRED                              
RBTMIND2 EQU   BIT5 -         EXIT SPECIFIED WITH TASK OR REAL REQUEST          
RBTMIND3 EQU   BIT6+BIT7 -    TYPE OF REQUEST                                   
RBTREQ   EQU   X'00' -        TASK REQUEST                                      
RBWREQ   EQU   BIT7 -         WAIT REQUEST                                      
RBRREQ   EQU   BIT6+BIT7 -    REAL REQUEST                                      
         DS    XL7 -          LAST 7 BYTES OF RBEXRTNM                          
         DS    H -            SYSTEM-DEPENDENT FIELD                            
RBSTAB   DS    0BL2 -         STATUS AND ATTRIBUTE BITS  (ALL RB'S)             
XSTAB    DS    0BL2 -         SAME AS RBSTAB                                    
RBSTAB1  DS    0B -           FIRST BYTE OF STATUS AND ATTRIBUTE BITS           
XSTAB1   DS    B -            SAME AS RBSTAB1                                   
*              BITS 0-4 ARE SYSTEM-DEPENDENT BITS                               
RBFTCKPT EQU   BIT5 -         A CHECKPOINT MAY BE TAKEN IN A USER EXIT          
*                             FROM THIS SVC ROUTINE (SVRB-BOTH)                 
XRBCKPT  EQU   BIT5 -         SAME AS RBFTCKPT                                  
*              BITS 6-7 ARE SYSTEM-DEPENDENT BITS                               
RBSTAB2  DS    0B -           SECOND BYTE OF STATUS AND ATTRIBUTE BITS          
XSTAB2   DS    B -            SAME AS RBSTAB2                                   
RBTCBNXT EQU   BIT0 -         RBLINK FIELD POINTS TO TCB (ALL RB'S)             
XRBTCBP  EQU   BIT0 -         SAME AS RBTCBNXT                                  
RBFACTV  EQU   BIT1 -         IRB OR SIRB IS QUEUED TO TCB - PROGRAM IS         
*                             ACTIVE                                            
XRBACTV  EQU   BIT1 -         ACTIVE PROGRAM (ALL RB'S EXCEPT LPRB AND          
*                             LRB FOR OS/VS1)  (MDC300)        @X04EE9A         
*              BITS 2-5 ARE SYSTEM-DEPENDENT BITS                               
RBFDYN   EQU   BIT6 -         RB STORAGE CAN BE FREED AT EXIT                   
XRBFRRB  EQU   BIT6 -         SAME AS RBFDYN                                    
RBECBWT  EQU   BIT7 -         IF ZERO, WAIT FOR A SINGLE EVENT OR ALL           
*                             OF A NUMBER OF EVENTS ---                         
*                             IF ONE, WAIT FOR A NUMBER OF EVENTS THAT          
*                             IS LESS THAN THE TOTAL NUMBER OF EVENTS           
*                             WAITING                                           
XRBWAIT  EQU   BIT7 -         SAME AS RBECBWT                                   
         DS    A -            SYSTEM-DEPENDENT FIELD                            
RBOPSW   DS    0CL8 -         USER'S OLD PSW.  THIS OFFSET FIXED BY             
*                             ARCHITECTURE.  (ALL RB'S EXCEPT FRB)              
*                             (MDC306)                         @G50EP9A         
XRBPSW   DS    0CL8 -         SAME AS RBOPSW                   @X50AD9A         
RBOPSWB1 DS    B -            OLD PSW BYTE 1  (MDC309)         @G65RP9A         
RBOPER   EQU   X'40' -        PER BIT IN RBOPSWB1  (MDC310)    @G65RP9A         
RBOPSWB2 DS    B -            OLD PSW BYTE 2  (MDC304)         @X50AD9A         
RBOPSWPS EQU   X'01' -        PROBLEM STATE BIT IN OLD PSW                      
*                             (MDC305)                         @X50AD9A         
         DS    CL1 -          OLD PSW BYTE 3                   @G860PVB         
RBOPSWB4 DS    B -            OLD PSW BYTE 4                       @L2A         
RBOPSW64 EQU   X'01'          AMODE 64                             @L2A         
RBOPSWA  DS    A -            OLD PSW BYTES 5-8 (ADDRESS)      @G860PVB         
RBOPSWM  EQU   X'80' -        ADDRESSING MODE OF OLD PSW       @G860PVB         
RBOPSW31 EQU   X'80' -        ADDRESSING MODE OF OLD PSW           @L2A         
         DS    A -            SYSTEM-DEPENDENT FIELD                            
RBLINK   DS    0A -           SAME AS RBLINKB BELOW.  THIS OFFSET FIXED         
*                             BY ARCHITECTURE.  (MDC307)       @G50EP9A         
XRBLNK   DS    0A -           SAME AS RBLINKB BELOW                             
RBWCF    DS    0FL1 -         NUMBER OF REQUESTS WAITING (WAIT COUNT)           
*                             (ALL RB'S FOR OS/VS2)                             
XRBWT    DS    FL1 -          SAME AS RBWCF (ALL RB'S EXCEPT LPRB AND           
*                             LRB FOR OS/VS1)  (MDC301)        @X04DJ9A         
RBLINKB  DS    0AL3 -         ADDRESS OF PREVIOUS RB, OR ADDRESS OF TCB         
*                             WHEN THIS IS FIRST RB ON THE QUEUE                
*                             (ALL RB'S FOR OS/VS2)                             
XRBLNKA  DS    AL3 -          SAME AS RBLINKB (ALL RB'S EXCEPT LPRB AND         
*                             LRB FOR OS/VS1)  (MDC302)        @X04DJ9A         
RBGRSAVE DS    0CL64 -        GENERAL REGISTER SAVE AREA.  THIS OFFSET          
*                             FIXED BY ARCHITECTURE.  (SVRB-BOTH, IRB,          
*                             TIRB FOR OS/VS2)  (MDC308)       @G50EP9A         
XRBREG   DS    0CL64 -        SAME AS RBGRSAVE                                  
*                             (IRB, SIRB, SVRB FOR OS/VS1)                      
RBGRS0   DS    0F -           SAVE AREA FOR GENERAL REGISTER 0                  
XRBREG0  DS    F -            SAME AS RBGRS0                                    
RBGRS1   DS    0F -           SAVE AREA FOR GENERAL REGISTER 1                  
XRBREG1  DS    F -            SAME AS RBGRS1                                    
RBGRS2   DS    0F -           SAVE AREA FOR GENERAL REGISTER 2                  
XRBREG2  DS    F -            SAME AS RBGRS2                                    
RBGRS3   DS    0F -           SAVE AREA FOR GENERAL REGISTER 3                  
XRBREG3  DS    F -            SAME AS RBGRS3                                    
RBGRS4   DS    0F -           SAVE AREA FOR GENERAL REGISTER 4                  
XRBREG4  DS    F -            SAME AS RBGRS4                                    
RBGRS5   DS    0F -           SAVE AREA FOR GENERAL REGISTER 5                  
XRBREG5  DS    F -            SAME AS RBGRS5                                    
RBGRS6   DS    0F -           SAVE AREA FOR GENERAL REGISTER 6                  
XRBREG6  DS    F -            SAME AS RBGRS6                                    
RBGRS7   DS    0F -           SAVE AREA FOR GENERAL REGISTER 7                  
XRBREG7  DS    F -            SAME AS RBGRS7                                    
RBGRS8   DS    0F -           SAVE AREA FOR GENERAL REGISTER 8                  
XRBREG8  DS    F -            SAME AS RBGRS8                                    
RBGRS9   DS    0F -           SAVE AREA FOR GENERAL REGISTER 9                  
XRBREG9  DS    F -            SAME AS RBGRS9                                    
RBGRS10  DS    0F -           SAVE AREA FOR GENERAL REGISTER 10                 
XRBREG10 DS    F -            SAME AS RBGRS10                                   
RBGRS11  DS    0F -           SAVE AREA FOR GENERAL REGISTER 11                 
XRBREG11 DS    F -            SAME AS RBGRS11                                   
RBGRS12  DS    0F -           SAVE AREA FOR GENERAL REGISTER 12                 
XRBREG12 DS    F -            SAME AS RBGRS12                                   
RBGRS13  DS    0F -           SAVE AREA FOR GENERAL REGISTER 13                 
XRBREG13 DS    F -            SAME AS RBGRS13                                   
RBGRS14  DS    0F -           SAVE AREA FOR GENERAL REGISTER 14                 
XRBREG14 DS    F -            SAME AS RBGRS14                                   
RBGRS15  DS    0F -           SAVE AREA FOR GENERAL REGISTER 15                 
XRBREG15 DS    F -            SAME AS RBGRS15                                   
         DS    0D                                                               
RBEXSAVE DS    0CL48 -        EXTENDED SAVE AREA FOR SVC ROUTINES               
*                             (SVRB-BOTH) (OS/VS2)                              
XRBESA   DS    10D -          SVRB - EXTENDED SAVE AREA OF UP TO TEN            
*                             DOUBLEWORDS REQUESTED FOR SVC ROUTINE             
*                             (OS/VS1)  (MDC303)               @X04DJ9A         
         SPACE 2                                                                
         AIF   ('&SYS' EQ 'AOS2').RBCMA2                                        
         IEZXRB DSECT=NO,COM=YES                                                
         MEXIT                                                                  
.RBCMA2  ANOP                                                                   
         IKJRB DSECT=NO,COM=YES,LIST=&LIST,PROLOG=&IKJRBPROLOG     @L3C         
         POP   PRINT                                               @L1A         
         MEND  ,  */                                                            
*%RBCML2 : ;                                                                    
*                                                                               
*  @LISTPUSH;                                                  /*@L1A*/         
*  %IF IHALIST='YES'  %THEN                                    /*@L1A*/         
*     %GOTO RBCMLST;                                           /*@L1A*/         
*  @LISTOFF;                                                   /*@L1A*/         
*  %RBCMLST:;                                                  /*@L1A*/         
*                                                                               
*                                                                               
*DECLARE                                                                        
*  1 RBPRFX   BASED(RBSECPTR-64) BDY(DWORD),                                    
*   2 *           CHAR(64) BDY(DWORD);   /* PREFIX IS                           
*                                           SYSTEM-DEPENDENT         */         
*                                                                               
*DECLARE                                                                        
*  1 RBBASIC  BASED(RBSECPTR) BDY(DWORD),                                       
*   2 RBEXRTNM    CHAR(8)  BDY(WORD),    /* EIGHT-CHARACTER NAME OF             
*                                           ERROR EXIT  ROUTINE                 
*                                           (SIRB)                   */         
*    3 RBTMFLD     CHAR(1),              /* INDICATORS FOR TIMER                
*                                           ROUTINES. WHEN  THERE               
*                                           ARE NO TIMER ROUTINES,              
*                                           THIS FIELD  IS ZERO.                
*                                           (IRB)                    */         
*     4 RBTMQUE  BIT(1),                 /* TIMER ELEMENT NOT ON                
*                                           QUEUE                    */         
*     4 RBTMTOD  BIT(1),                 /* LOCAL TIME-OF-DAY OPTION            
*                                           IS USED                  */         
*     4 RBRSV005 BIT(1),                 /* RESERVED                 */         
*     4 RBWLIM   BIT(1),                 /* WAIT LIMIT EXCEEDED                 
*                                                              MDC001*/         
*     4 RBTMCMP  BIT(1),                 /* INTERVAL HAS EXPIRED     */         
*     4 RBTMIND2 BIT(1),                 /* EXIT SPECIFIED WITH TASK            
*                                           OR REAL REQUEST          */         
*     4 RBTMIND3 BIT(2),                 /* TYPE OF REQUEST          */         
*%DCL RBTREQ   CHAR;                                                            
*%RBTREQ  ='''00''B';                    /* TASK REQUEST             */         
*%DCL RBWREQ   CHAR;                                                            
*%RBWREQ  ='''01''B';                    /* WAIT REQUEST             */         
*%DCL RBRREQ   CHAR;                                                            
*%RBRREQ  ='''11''B';                    /* REAL REQUEST             */         
*    3 *           CHAR(7),              /* LAST 7 BYTES OF RBEXRTNM */         
*   2 *           FIXED(15),             /* SYSTEM-DEPENDENT FIELD   */         
*   2 RBSTAB      BIT(16),               /* STATUS AND ATTRIBUTE                
*                                           BITS  (ALL RB'S)         */         
*    3 XSTAB       BIT(16),              /* SAME AS RBSTAB           */         
*     4 RBSTAB1     BIT(8),              /* FIRST BYTE OF STATUS AND            
*                                           ATTRIBUTE BITS           */         
*      5 XSTAB1      BIT(8),             /* SAME AS RBSTAB1          */         
*       6 *        BIT(5),               /* SYSTEM-DEPENDENT BITS    */         
*       6 RBFTCKPT BIT(1),               /* A CHECKPOINT MAY BE                 
*                                           TAKEN IN A USER EXIT                
*                                           FROM THIS SVC ROUTINE               
*                                           (SVRB-BOTH)              */         
*        7 XRBCKPT  BIT(1),              /* SAME AS RBFTCKPT         */         
*       6 *        BIT(2),               /* SYSTEM-DEPENDENT BITS    */         
*     4 RBSTAB2     BIT(8),              /* SECOND BYTE OF STATUS               
*                                           AND ATTRIBUTE BITS       */         
*      5 XSTAB2      BIT(8),             /* SAME AS RBSTAB2          */         
*       6 RBTCBNXT BIT(1),               /* RBLINK FIELD POINTS TO              
*                                           TCB (ALL RB'S)           */         
*        7 XRBTCBP  BIT(1),              /* SAME AS RBTCBNXT         */         
*       6 RBFACTV  BIT(1),               /* IRB OR SIRB IS QUEUED TO            
*                                           TCB - PROGRAM IS ACTIVE  */         
*        7 XRBACTV  BIT(1),              /* ACTIVE PROGRAM (ALL RB'S            
*                                           EXCEPT LPRB AND LRB FOR             
*                                           OS/VS1) (MDC300) @X04EE9A*/         
*       6 *        BIT(4),               /* SYSTEM-DEPENDENT BITS    */         
*       6 RBFDYN   BIT(1),               /* RB STORAGE CAN BE FREED             
*                                           AT EXIT                  */         
*        7 XRBFRRB  BIT(1),              /* SAME AS RBFDYN           */         
*       6 RBECBWT  BIT(1),               /* IF ZERO, WAIT FOR A                 
*                                           SINGLE EVENT OR ALL OF              
*                                           A NUMBER OF EVENTS ---              
*                                           IF ONE, WAIT FOR A                  
*                                           NUMBER OF EVENTS THAT               
*                                           IS LESS THAN THE TOTAL              
*                                           NUMBER OF EVENTS WAITING */         
*        7 XRBWAIT  BIT(1),              /* SAME AS RBECBWT          */         
*   2 *           PTR(31),               /* SYSTEM-DEPENDENT FIELD   */         
*   2 RBOPSW      CHAR(8)  BDY(DWORD),   /* USER'S OLD PSW.  THIS               
*                                           OFFSET FIXED BY                     
*                                           ARCHITECTURE.  (ALL RB'S            
*                                           EXCEPT FRB)                         
*                                           (MDC306)         @G50EP9A*/         
*    3 XRBPSW      CHAR(8) BDY(DWORD),   /* SAME AS RBOPSW           */         
*     4 RBOPSWB1    BIT(8),              /* OLD PSW BYTE 1                      
*                                           (MDC309)         @G65RP9A*/         
*      5 *        BIT(1),                /* BIT0 OF RBOPSWB1 @G65RP9A*/         
*      5 RBOPER   BIT(1),                /* PER BIT (MDC310) @G65RP9A*/         
*      5 *        BIT(3),                /* Bits 2-4             @L2A*/         
*     4 RBOPSWB2    BIT(8),              /* OLD PSW BYTE 2                      
*                                           (MDC304)         @X50AD9A*/         
*      5 *        BIT(7),                /* BITS 0-6 OF OLD PSW                 
*                                           BYTE 2           @X50AD9A*/         
*      5 RBOPSWPS BIT(1),                /* PROBLEM STATE BIT IN OLD            
*                                           PSW  (MDC305)    @X50AD9A*/         
*     4 * CHAR(1),                       /* OLD PSW BYTE 3           */         
*     4 RBOPSWB4 BIT(8),                 /* OLD PSW BYTE 4       @L2A*/         
*      5 * BIT(7),                       /*                      @L2A*/         
*      5 RBOPSW64 BIT(1),                /* AMODE 64             @L2A*/         
*     4 RBOPSWA PTR(31),                 /* BYTES 5-8 (ADDRESS)                 
*                                                            @G860PVB*/         
*      5 RBOPSWM BIT(1),                 /* ADDRESSING MODE  @G860PVB*/         
*        7 RBOPSW31 BIT(1),              /* ADDRESSING MODE      @L2A*/         
*   2 *           PTR(31),               /* SYSTEM-DEPENDENT FIELD   */         
*   2 RBLINK      PTR(31),               /* SAME AS RBLINKB BELOW.              
*                                           THIS OFFSET FIXED BY                
*                                           ARCHITECTURE.                       
*                                           (MDC307)         @G50EP9A*/         
*    3 XRBLNK      PTR(31),              /* SAME AS RBLINKB BELOW    */         
*     4 RBWCF       PTR(8),              /* NUMBER OF REQUESTS                  
*                                           WAITING (WAIT COUNT)                
*                                           (ALL RB'S FOR OS/VS2)    */         
*      5 XRBWT       PTR(8),             /* SAME AS RBWCF (ALL RB'S             
*                                           EXCEPT LPRB AND LRB FOR             
*                                           OS/VS1) (MDC301) @X04DJ9A*/         
*     4 RBLINKB     PTR(24),             /* ADDRESS OF PREVIOUS RB,             
*                                           OR ADDRESS OF TCB WHEN              
*                                           THIS IS FIRST RB ON THE             
*                                           QUEUE  (ALL RB'S FOR                
*                                           OS/VS2)                  */         
*      5 XRBLNKA     PTR(24),            /* SAME AS RBLINKB (ALL RB'S           
*                                           EXCEPT LPRB AND LRB FOR             
*                                           OS/VS1) (MDC302) @X04DJ9A*/         
*   2 RBGRSAVE    CHAR(64)  BDY(WORD),   /* GENERAL REGISTER SAVE               
*                                           AREA.  THIS OFFSET FIXED            
*                                           BY ARCHITECTURE.                    
*                                           (SVRB-BOTH, IRB, TIRB FOR           
*                                           OS/VS2) (MDC308) @G50EP9A*/         
*    3 XRBREG      CHAR(64) BDY(WORD),   /* SAME AS RBGRSAVE (IRB,              
*                                           SIRB, SVRB FOR OS/VS1)   */         
*     4 RBGRS0      FIXED(31),           /* SAVE AREA FOR GENERAL               
*                                           REGISTER 0               */         
*      5 XRBREG0     FIXED(31),          /* SAME AS RBGRS0           */         
*     4 RBGRS1      FIXED(31),           /* SAVE AREA FOR GENERAL               
*                                           REGISTER 1               */         
*      5 XRBREG1     FIXED(31),          /* SAME AS RBGRS1           */         
*     4 RBGRS2      FIXED(31),           /* SAVE AREA FOR GENERAL               
*                                           REGISTER 2               */         
*      5 XRBREG2     FIXED(31),          /* SAME AS RBGRS2           */         
*     4 RBGRS3      FIXED(31),           /* SAVE AREA FOR GENERAL               
*                                           REGISTER 3               */         
*      5 XRBREG3     FIXED(31),          /* SAME AS RBGRS3           */         
*     4 RBGRS4      FIXED(31),           /* SAVE AREA FOR GENERAL               
*                                           REGISTER 4               */         
*      5 XRBREG4     FIXED(31),          /* SAME AS RBGRS4           */         
*     4 RBGRS5      FIXED(31),           /* SAVE AREA FOR GENERAL               
*                                           REGISTER 5               */         
*      5 XRBREG5     FIXED(31),          /* SAME AS RBGRS5           */         
*     4 RBGRS6      FIXED(31),           /* SAVE AREA FOR GENERAL               
*                                           REGISTER 6               */         
*      5 XRBREG6     FIXED(31),          /* SAME AS RBGRS6           */         
*     4 RBGRS7      FIXED(31),           /* SAVE AREA FOR GENERAL               
*                                           REGISTER 7               */         
*      5 XRBREG7     FIXED(31),          /* SAME AS RBGRS7           */         
*     4 RBGRS8      FIXED(31),           /* SAVE AREA FOR GENERAL               
*                                           REGISTER 8               */         
*      5 XRBREG8     FIXED(31),          /* SAME AS RBGRS8           */         
*     4 RBGRS9      FIXED(31),           /* SAVE AREA FOR GENERAL               
*                                           REGISTER 9               */         
*      5 XRBREG9     FIXED(31),          /* SAME AS RBGRS9           */         
*     4 RBGRS10     FIXED(31),           /* SAVE AREA FOR GENERAL               
*                                           REGISTER 10              */         
*      5 XRBREG10    FIXED(31),          /* SAME AS RBGRS10          */         
*     4 RBGRS11     FIXED(31),           /* SAVE AREA FOR GENERAL               
*                                           REGISTER 11              */         
*      5 XRBREG11    FIXED(31),          /* SAME AS RBGRS11          */         
*     4 RBGRS12     FIXED(31),           /* SAVE AREA FOR GENERAL               
*                                           REGISTER 12              */         
*      5 XRBREG12    FIXED(31),          /* SAME AS RBGRS12          */         
*     4 RBGRS13     FIXED(31),           /* SAVE AREA FOR GENERAL               
*                                           REGISTER 13              */         
*      5 XRBREG13    FIXED(31),          /* SAME AS RBGRS13          */         
*     4 RBGRS14     FIXED(31),           /* SAVE AREA FOR GENERAL               
*                                           REGISTER 14              */         
*      5 XRBREG14    FIXED(31),          /* SAME AS RBGRS14          */         
*     4 RBGRS15     FIXED(31),           /* SAVE AREA FOR GENERAL               
*                                           REGISTER 15              */         
*      5 XRBREG15    FIXED(31),          /* SAME AS RBGRS15          */         
*   2 XRBESA      CHAR(80) BDY(DWORD),   /* SVRB - EXTENDED SAVE AREA           
*                                           OF UP TO TEN DOUBLEWORDS            
*                                           REQUESTED FOR SVC ROUTINE           
*                                           (OS/VS1)                            
*                                           (MDC303)         @X04DJ9A*/         
*    3 RBEXSAVE    CHAR(48) BDY(DWORD);  /* EXTENDED SAVE AREA FOR              
*                                           SVC ROUTINES (SVRB-BOTH)            
*                                           (OS/VS2)                 */         
*%IF RBSYSTM=''  %THEN                                                          
*    %GOTO RBCMA2;                                                              
*%INCLUDE SYSLIB(IEZXRB) NOSEG;                                                 
*%GOTO RBCMA3;                                                                  
*%RBCMA2 : ;                                                                    
*%IF IBM_CBGENC='YES' %THEN                                                     
*    %GOTO RBCMA3;                                                              
*%INCLUDE SYSLIB(IKJRB) NOSEG;                                                  
*%RBCMA3 : ;                                                                    
*  @LISTPOP;                                                   /*@L1A*/         
