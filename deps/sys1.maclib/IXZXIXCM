*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXZXIXCM                              -11/13/03-<1> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Checkpoint a previously received msg          * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5694-A01 (C) COPYRIGHT IBM CORP. 1993, 2004                     * 00001200
*                                                                     * 00001300
* STATUS= HBB7709                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      Purpose:  The IXZXIXCM is invoked after a message has been     * 00002100
*      received and updates have been made to the users data in the   * 00002200
*      envelope. This service will take those updates and include     * 00002300
*      them into the JESXCF copy of the message. If the receiver      * 00002400
*      abnormally terminates, it will receive the updated messages    * 00002500
*      once it recovers.                                              * 00002600
*                                                                     * 00002700
*      IBM use of this interface:  JES3 will use this service to      * 00002800
*      update the JESXCF copy of the massage after the local copy has * 00002900
*      been updated. JES3 updates these control blocks to indicate    * 00003000
*      what processing steps the message has gone through.            * 00003100
*                                                                     * 00003200
*      Customer use of this interface:  None, this is an internal     * 00003300
*      macro.                                                         * 00003400
*                                                                     * 00003500
*      CDPI Implications:                                             * 00003600
*                                                                     * 00003700
*      This macro is an internal macro and is not part of the general * 00003800
*      use programming interface.                                     * 00003900
*                                                                     * 00004000
*      EEC Implications:  This macro is not an EEC interface.         * 00004100
*                                                                     * 00004200
*      Related Macros:  The following macros are required in order to * 00004300
*      use this macro service:                                        * 00004400
*                                                                     * 00004500
*                                                                     * 00004600
*      o   JES2:                                                      * 00004700
*                                                                     * 00004800
*                                                                     * 00004900
*          -   $MODULE - must be included in the module and must have * 00005000
*              been invoked before the IXZXIXCM macro service.        * 00005100
*                                                                     * 00005200
*                                                                     * 00005300
*                                                                     * 00005400
*      o   JES3:                                                      * 00005500
*                                                                     * 00005600
*                                                                     * 00005700
*          -   IATYMOD - must be included in the module and must have * 00005800
*              been invoked before the IXZXIXCM macro service.        * 00005900
*                                                                     * 00006000
*                                                                     * 00006100
*                                                                     * 00006200
*                                                                     * 00006300
*                                                                     * 00006400
*      Requirements                                                   * 00006500
*                                                                     * 00006600
*                                                                     * 00006700
*      o   Authorization: Authorized                                  * 00006800
*                                                                     * 00006900
*      o   Dispatchable unit mode: Task                               * 00007000
*                                                                     * 00007100
*      o   Cross memory mode: PASN = HASN = SASN                      * 00007200
*                                                                     * 00007300
*      o   AMODE: 31                                                  * 00007400
*                                                                     * 00007500
*      o   ASC mode: Primary                                          * 00007600
*                                                                     * 00007700
*      o   Serialization: Enabled for interrupts                      * 00007800
*                                                                     * 00007900
*      o   Locks:  This service assumes no locks are held by the      * 00008000
*          user.                                                      * 00008100
*                                                                     * 00008200
*      o   Control Parameters:  None                                  * 00008300
*                                                                     * 00008400
*      o   JES Environments:                                          * 00008500
*                                                                     * 00008600
*                                                                     * 00008700
*          -   JES2 Main Task                                         * 00008800
*                                                                     * 00008900
*          -   JES3 Main Task                                         * 00009000
*                                                                     * 00009100
*          -   JES2 Subtask                                           * 00009200
*                                                                     * 00009300
*          -   JES3 Subtask                                           * 00009400
*                                                                     * 00009500
*          -   JES3 FSS                                               * 00009600
*                                                                     * 00009700
*                                                                     * 00009800
*                                                                     * 00009900
*                                                                     * 00010000
*                                                                     * 00010100
*      Register Information                                           * 00010200
*                                                                     * 00010300
*                                                                     * 00010400
*      o   Input registers                                            * 00010500
*                                                                     * 00010600
*                                                                     * 00010700
*          -   R0-R15 - Undefined                                     * 00010800
*                                                                     * 00010900
*                                                                     * 00011000
*                                                                     * 00011100
*      o   Output registers                                           * 00011200
*                                                                     * 00011300
*                                                                     * 00011400
*          -   R0 - Reason code                                       * 00011500
*                                                                     * 00011600
*          -   R1 - Unpredictable                                     * 00011700
*                                                                     * 00011800
*          -   R2-R13 - Unchanged                                     * 00011900
*                                                                     * 00012000
*          -   R14 - Unpredictable                                    * 00012100
*                                                                     * 00012200
*          -   R15 - Return code                                      * 00012300
*                                                                     * 00012400
*                                                                     * 00012500
*                                                                     * 00012600
*                                                                     * 00012700
*                                                                     * 00012800
*      Programming Notes/Requirements:  The programmer must supply    * 00012900
*      the MSGTOKEN that is returned on the receive message service   * 00013000
*      IXZXIXRM.                                                      * 00013100
*                                                                     * 00013200
*      Restrictions                                                   * 00013300
*                                                                     * 00013400
*                                                                     * 00013500
*      o   Can not be issued until JES initialization has attached    * 00013600
*          and initializes the JES Common XCF Task.                   * 00013700
*                                                                     * 00013800
*      o   Must be done under the same task the issued the mailbox    * 00013900
*          build.                                                     * 00014000
*                                                                     * 00014100
*                                                                     * 00014200
*                                                                     * 00014300
*      Performance Implications:  This macro has minimal performance  * 00014400
*      impact, the service routine causes a subtasked function to be  * 00014500
*      performed.                                                     * 00014600
*                                                                     * 00014700
*01* EXTERNAL CLASSIFICATION:  NONE                                   * 00014800
*                                                                     * 00014900
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00015000
*                                                                     * 00015100
*01* SYNTAX:                                                          * 00015200
*                                                                     * 00015300
*Ýxlabel¨  IXZXIXCM     MSGTOKEN=xmsgtoken                            * 00015400
*                      ,GROUPTOKEN=xgrouptoken                        * 00015500
*                     Ý,RTNCODE=xrtncode¨                             * 00015600
*                     Ý,RSNCODE=xrsncode¨                             * 00015700
*                     Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨         * 00015800
*                    ÐÝ,MF=S¨                                         * 00015900
*                    ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                  * 00016000
*                    ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                    * 00016100
*                                                                     * 00016200
*                                                                     * 00016300
*      Where:                                                         * 00016400
*                                                                     * 00016500
*                                                                     * 00016600
*      Ýxlabel¨                                                       * 00016700
*          is an optional symbol, starting in column 1, that is the   * 00016800
*          name on the IXZXIXCM macro invocation.  The name must      * 00016900
*          conform to the rules for an ordinary assembler language    * 00017000
*          symbol.                                                    * 00017100
*          DEFAULT: No name.                                          * 00017200
*                                                                     * 00017300
*                                                                     * 00017400
*                                                                     * 00017500
*                                                                     * 00017600
*      MSGTOKEN=xmsgtoken                                             * 00017700
*          is the name (RS-type), or address in register (2)-(12), of * 00017800
*          a required 64 bit input that contains the message token    * 00017900
*          returned from the message receive service (IXZXIXRM).      * 00018000
*                                                                     * 00018100
*                                                                     * 00018200
*                                                                     * 00018300
*                                                                     * 00018400
*      GROUPTOKEN=xgrouptoken                                         * 00018500
*          is the name (RS-type), or address in register (2)-(12), of * 00018600
*          a required fullword input that contains the JES XCF group  * 00018700
*          token.                                                     * 00018800
*                                                                     * 00018900
*                                                                     * 00019000
*                                                                     * 00019100
*                                                                     * 00019200
*      ÝRTNCODE=xrtncode¨                                             * 00019300
*          is the name (RS-type) of an optional fullword output       * 00019400
*          variable, or register (2)-(12), into which the return code * 00019500
*          is to be copied from GPR 15.                               * 00019600
*                                                                     * 00019700
*                                                                     * 00019800
*                                                                     * 00019900
*                                                                     * 00020000
*      ÝRSNCODE=xrsncode¨                                             * 00020100
*          is the name (RS-type) of an optional fullword output       * 00020200
*          variable, or register (2)-(12), into which the reason code * 00020300
*          is to be copied from GPR 0.                                * 00020400
*                                                                     * 00020500
*                                                                     * 00020600
*                                                                     * 00020700
*                                                                     * 00020800
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00020900
*          is an optional byte input decimal value in the "1-1" range * 00021000
*          that specifies the macro version.  PLISTVER is the only    * 00021100
*          key allowed on the list form of MF and determines which    * 00021200
*          parameter list is generated.  Note that MAX may be         * 00021300
*          specified instead of a number, and the parameter list will * 00021400
*          be of the largest size currently supported. This size may  * 00021500
*          grow from release to release (thus possibly affecting the  * 00021600
*          amount of storage needed by your program).  If your        * 00021700
*          program can tolerate this, IBM recommends that you always  * 00021800
*          specify MAX when creating the list form parameter list as  * 00021900
*          that will ensure that the list form parameter list is      * 00022000
*          always long enough to hold whatever parameters might be    * 00022100
*          specified on the execute form.                             * 00022200
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00022300
*          default is the lowest version which allows all of the      * 00022400
*          parameters specified on the invocation to be processed.    * 00022500
*                                                                     * 00022600
*                                                                     * 00022700
*                                                                     * 00022800
*                                                                     * 00022900
*      ÝMF=»S!L!Eº¨                                                   * 00023000
*          is an optional keyword input which specifies the macro     * 00023100
*          form.                                                      * 00023200
*          DEFAULT: S                                                 * 00023300
*                                                                     * 00023400
*                                                                     * 00023500
*          ÝMF=S¨                                                     * 00023600
*              specifies the standard form of the macro.  The "S"     * 00023700
*              form generates code to put the parameters into an      * 00023800
*              in-line parameter list and invoke the desired service. * 00023900
*              Full checking for required macro keys is done along    * 00024000
*              with supplying defaults for omitted optional           * 00024100
*              parameters.                                            * 00024200
*                                                                     * 00024300
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00024400
*              specifies the list form of the macro.  The "L" form    * 00024500
*              defines an area to be used for the parameter list.     * 00024600
*              Only the PLISTVER key may be specified on the          * 00024700
*              invocation.  All other macro parameters are flagged as * 00024800
*              errors.  If PLISTVER is not specified, the original    * 00024900
*              parameter list definition is used.                     * 00025000
*                                                                     * 00025100
*            ,xmfctrl                                                 * 00025200
*              is a required input.  It is the name of a storage area * 00025300
*              for the parameter list.                                * 00025400
*                                                                     * 00025500
*            »,xmfattr!0Dº                                            * 00025600
*              is an optional 60 character input string that varies   * 00025700
*              from 1 to 60 characters. Use it to force boundary      * 00025800
*              alignment of the parameter list. Use only 0F or 0D.    * 00025900
*              DEFAULT: 0D which forces the parameter list to a       * 00026000
*              doubleword boundary.                                   * 00026100
*                                                                     * 00026200
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00026300
*              specifies the execute form of the macro.  The "E" form * 00026400
*              generates code to put the parameters into the          * 00026500
*              parameter list specified by xmfctrl and provides full  * 00026600
*              syntax checking with default setting.                  * 00026700
*                                                                     * 00026800
*            ,xmfctrl                                                 * 00026900
*              is a required input.  It is the name (RS-type), or     * 00027000
*              address in register (1)-(12), of a storage area for    * 00027100
*              the parameter list.                                    * 00027200
*                                                                     * 00027300
*            »,COMPLETEº                                              * 00027400
*              is an optional keyword input which specifies the       * 00027500
*              degree of macro parameter syntax checking.             * 00027600
*              DEFAULT: COMPLETE                                      * 00027700
*                                                                     * 00027800
*                                                                     * 00027900
*              COMPLETE                                               * 00028000
*                  Checking for required macro keys is done and       * 00028100
*                  defaults are supplied for omitted optional         * 00028200
*                  parameters.                                        * 00028300
*                                                                     * 00028400
*                                                                     * 00028500
*                                                                     * 00028600
*                                                                     * 00028700
*                                                                     * 00028800
*                                                                     * 00028900
*                                                                     * 00029000
*01* RETURN CODES:                                                    * 00029100
*                                                                     * 00029200
*                                                                     * 00029300
*            0    Processing successful. Message was updated.         * 00029400
*                                                                     * 00029500
*            4    Processing did not complete do to user error.       * 00029600
*                                                                     * 00029700
*            8    Processing did not complete due to system error.    * 00029800
*                                                                     * 00029900
*            C    Processing did not complete due to a system abend.  * 00030000
*                                                                     * 00030100
*                                                                     * 00030200
*                                                                     * 00030300
*01* REASON CODES:                                                    * 00030400
*                                                                     * 00030500
*       REASON    RETURN                                              * 00030600
*       CODE      CODE      DESCRIPTION                               * 00030700
*       ××××××××  ××××××××  ×××××××××××                               * 00030800
*                                                                     * 00030900
*                                                                     * 00031000
*              0  0         Processing was sucessful, the message was * 00031100
*                           updated.                                  * 00031200
*                                                                     * 00031300
*              4  4         Processing failed because, the  parameter * 00031400
*                           list    passed      to  IXZXIXCM  service * 00031500
*                           routine does not have a valid eyecatcher  * 00031600
*                                                                     * 00031700
*              8  4         Processing  failed because, the parameter * 00031800
*                           list   passed  to  the  IXZXIXCM  service * 00031900
*                           routine had an invalid version indicator. * 00032000
*                           The caller may need to be recompiled.     * 00032100
*                                                                     * 00032200
*              C  4         Processing failed because, the grouptoken * 00032300
*                           passed  to  the  IXZXIXCM service routine * 00032400
*                           was not valid.                            * 00032500
*                                                                     * 00032600
*             10  4         Processing   failed  because,the  IXZIXCM * 00032700
*                           service  routine  was  called on a member * 00032800
*                           that is detaching.                        * 00032900
*                                                                     * 00033000
*             14  4         Processing  failed  because, the msgtoken * 00033100
*                           passed   to   the  IXZXIXCM  service  was * 00033200
*                           invalid or the message has been overlaid. * 00033300
*                                                                     * 00033400
*              0  C         Processing  failed due to a system abend. * 00033500
*                           The request is rejected.                  * 00033600
*                                                                     * 00033700
*                                                                     * 00033800
*                                                                     * 00033900
*01* MODULE TYPE:  ASSEM MACRO                                        * 00034000
*                                                                     * 00034100
*02*   PROCESSOR:  ASSEM                                              * 00034200
*                                                                     * 00034300
*01* COMPONENT:  SCJSC                                                * 00034400
*                                                                     * 00034500
*01* MACRO USAGE NOTES:                                               * 00034600
*                                                                     * 00034700
*                                                                     * 00034800
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00034900
*        global macro variable.  Any value other than 'NO' will       * 00035000
*        result in the macro expansion being printed.  The default is * 00035100
*        'YES'.  The following examples illustrate how the ZPRINT     * 00035200
*        variable should be set.                                      * 00035300
*                                                                     * 00035400
*                    GBLC &ZPRINT                                     * 00035500
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00035600
*                                                                     * 00035700
*                                                                     * 00035800
*    2.  All   keys   currently   contained  in  the  IXZXIXCM  macro * 00035900
*        correspond  to  version  1.   If you specify PLISTVER, use a * 00036000
*        value of 1 or MAX.                                           * 00036100
*                                                                     * 00036200
*                                                                     * 00036300
*                                                                     * 00036400
*                                                                     * 00036500
*01* CHANGE ACTIVITY:                                                 * 00036600
*                                                                     * 00036700
*   Flag LineItem  FMID    Date   ID    Comment                       * 00036800
*                                                                     * 00036900
*    $N0=JESXCF   HBB5510 921201 PD0AL:                               * 00037000
*    $SP=JESXCF   HBB7709 031105 PD0RF:                               * 00037100
****** END OF SPECIFICATIONS *****************************************/ 00037200
*/* TLINE 1 *********************************************************** 00037300
         MACRO                                                          00037400
&XLABEL  IXZXIXCM &MSGTOKEN=,&GROUPTOKEN=,&RTNCODE=,&RSNCODE=,         *00037500
               &PLISTVER=,&MF=                                          00037600
.*                                                                      00037700
*                MACDATE -11/13/03-<1>                                  00037800
.*                                                                      00037900
.*******************************************************************    00038000
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00038100
.*******************************************************************    00038200
                GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                 00038300
                GBLC  &ZTEST      YES=TEST NO=NO TEST                   00038400
                GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX           00038500
.*                                                                      00038600
                GBLC  &ZIXZXIXCM  YES=MACRO USED AT LEAST ONCE          00038700
.*******************************************************************    00038800
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00038900
.*******************************************************************    00039000
                LCLC  &ZMS        ERROR MESSAGE WORK AREA               00039100
                LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS          00039200
                LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED            00039300
                LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR           00039400
                LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE           00039500
                LCLA  &ZAWRK      USED AS A WORK AREA                   00039600
                LCLA  &ZASIZ      USED FOR SIZE OF VALUE                00039700
                LCLA  &ZN         NUMERIC WORK VARIABLE                 00039800
                LCLC  &ZC         CHARACTER WORK VARIABLE               00039900
                LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE           00040000
                LCLA  &ZTLA       VALUE TOO LONG VARIABLE               00040100
                LCLC  &ZMAC_G     "G" or null                           00040200
&ZMAC_G         SETC  ''                                                00040300
                LCLC  &ZMAC_LR                                          00040400
&ZMAC_LR        SETC  'LR'                                              00040500
                LCLC  &ZMAC_L                                           00040600
&ZMAC_L         SETC  'L'                                               00040700
                LCLC  &ZMAC_ST                                          00040800
&ZMAC_ST        SETC  'ST'                                              00040900
                LCLA  &ZMACRET    MACRO RETURN CODE                     00041000
&ZMACRET        SETA  0           ASSUME NO ERRORS                      00041100
.*                                                                      00041200
                LCLC  &ZCSYSLIST(255)           NONXKEY, POS ARRAY      00041300
                LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()            00041400
                LCLA  &ZPLLEN     PARAMETER LIST LENGTH                 00041500
                LCLC  &ZENDBASEPL               End of base PL          00041600
                LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                 00041700
.*******************************************************************    00041800
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00041900
.*******************************************************************    00042000
                LCLA  &ZI         INDEX FOR ARRAY                       00042100
                LCLA  &ZJ         INDEX FOR PARMS                       00042200
                LCLA  &ZK         INDEX FOR PARSE                       00042300
                LCLA  &ZLO        LOW RANGE VALUE                       00042400
                LCLA  &ZHI        HIGH RANGE VALUE                      00042500
                LCLC  &ZW         WORK AREA FOR PARM                    00042600
.********************************************************************   00042700
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00042800
.********************************************************************   00042900
                GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL               00043000
                GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE        00043100
                GBLA  &SYSALVL    SYSSTATE ARCHLVL                      00043200
                GBLC  &SYSAM64    SYSSTATE AMODE64                      00043300
.*                                                                      00043400
                AIF   (K'&SYSASCE GT 0).ZSYS4   SYS STATE DEFINED       00043500
                AIF   (K'&SYSSPLV GT 0).ZSYS2   SP LEVEL DEFINED        00043600
                SPLEVEL  TEST                                           00043700
.ZSYS2          ANOP  ,                                                 00043800
                AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1             00043900
                AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1             00044000
                SYSSTATE TEST                                           00044100
                AGO   .ZSYS4                                            00044200
.ZSYS3          ANOP  ,                                                 00044300
&SYSASCE        SETC  'P'         ASSUME SYSSTATE PRIMARY               00044400
.ZSYS4          ANOP  ,                                                 00044500
.*******************************************************************    00044600
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00044700
.*******************************************************************    00044800
                LCLC  &XMSGTOKEN  ++ NAME                               00044900
                LCLC  &XGROUPTOKEN              ++ NAME                 00045000
                LCLC  &XRTNCODE   ++ NAME                               00045100
                LCLC  &XRSNCODE   ++ NAME                               00045200
                LCLA  &XPLISTVER  ++ VALUE                              00045300
                LCLC  &XMF        ++ VALUE                              00045400
                LCLC  &XMFCTRL    ++ NAME                               00045500
                LCLC  &XMFATTR    ++ VALUE                              00045600
                LCLC  &XMFSCK     ++ VALUE                              00045700
.*******************************************************************    00045800
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00045900
.*******************************************************************    00046000
                LCLC  &ZXMSGTOKEN               ++ INPUT NAME           00046100
                LCLC  &ZXGROUPTOKEN             ++ INPUT NAME           00046200
                LCLC  &ZXRTNCODE  ++ OUTPUT NAME                        00046300
                LCLC  &ZXRSNCODE  ++ OUTPUT NAME                        00046400
                LCLC  &ZXPLISTVER               ++ INPUT VALUE          00046500
                LCLC  &ZXMF       ++ INPUT VALUE                        00046600
                LCLC  &ZXMFCTRL   ++ INPUT NAME                         00046700
                LCLC  &ZXMFATTR   ++ INPUT VALUE                        00046800
                LCLC  &ZXMFSCK    ++ INPUT VALUE                        00046900
.********************************************************************   00047000
.***AC.PLV01  PROCESS PLISTVER                                      *   00047100
.********************************************************************   00047200
&XPLISTVER      SETA  1                                                 00047300
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00047400
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00047500
&XPLISTVER      SETA  1                                                 00047600
.ZPLV0          ANOP  ,                                                 00047700
.*                                                                      00047800
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00047900
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00048000
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00048100
.*-------------------------------------------------------------------   00048200
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00048300
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00048400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00048500
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00048600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00048700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00048800
                AGO   .ZPVCK2                                           00048900
.ZPVCK3         ANOP  ,                                                 00049000
.*-------------------------------------------------------------------   00049100
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00049200
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00049300
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00049400
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00049500
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00049600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00049700
                AGO   .ZPVCKE                                           00049800
.ZPVCK2         ANOP  ,                                                 00049900
.*-------------------------------------------------------------------   00050000
&ZCVAL          SETC  '&PLISTVER(1)'                                    00050100
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00050200
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00050300
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00050400
                AIF   (&ZN LT 1).ZPVCK6    TOO LOW                      00050500
                AIF   (&ZN LE 1).ZPVCK4A   NOT HIGH                     00050600
.ZPVCK6         ANOP  ,                                                 00050700
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00050800
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00050900
&ZMS            SETC  '&ZMS THE RANGE IS "1-1"'                         00051000
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00051100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00051200
&XPLISTVER      SETA  1                                                 00051300
                AGO   .ZPVCKE                                           00051400
.*-------------------------------------------------------------------   00051500
.ZPVCK4A        ANOP  ,                                                 00051600
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00051700
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00051800
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00051900
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00052000
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00052100
                MNOTE 8,' &ZMS IS REQUIRED.'                            00052200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00052300
                AGO   .ZPVCK5                                           00052400
.ZPVCK4         ANOP  ,                                                 00052500
&XPLISTVER      SETA  &PLISTVER(1)                                      00052600
.ZPVCK5         ANOP  ,                                                 00052700
.ZPVCKE         ANOP  ,                                                 00052800
.********************************************************************   00052900
.***AG.MF01 PROCESS MF MACRO FORMS                                      00053000
.********************************************************************   00053100
                ACTR  10000                                             00053200
.*------------------------------------------------------------------    00053300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00053400
&XMF            SETC  ''          INITIALIZE XVARIABLE                  00053500
.*-------------------------------------------------------------------   00053600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00053700
.ZG18           ANOP  ,                                                 00053800
&ZTLC           SETC 'S'                                                00053900
                AIF   ('&MF(1)' NE '&ZTLC').ZG19                        00054000
&XMF            SETC  'S'         SET KEYWORD                           00054100
                AIF   (N'&MF LE 1).ZG18A        CK NUM                  00054200
&ZMS            SETC  '"MF='      *KPOSA* MNOTE                         00054300
&ZMS            SETC  '&ZMS.&MF"'                                       00054400
&ZMS            SETC  '&ZMS "MF"'                                       00054500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00054600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00054700
.ZG18A          ANOP  ,                                                 00054800
.*-------------------------------------------------------------------   00054900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00055000
.ZG19           ANOP  ,                                                 00055100
&ZTLC           SETC 'L'                                                00055200
                AIF   ('&MF(1)' NE '&ZTLC').ZG26                        00055300
&XMF            SETC  'L'         SET KEYWORD                           00055400
                AIF   (N'&MF LE 3).ZG19A        CK NUM                  00055500
&ZMS            SETC  '"MF='      *KPOSA* MNOTE                         00055600
&ZMS            SETC  '&ZMS.&MF"'                                       00055700
&ZMS            SETC  '&ZMS "MF"'                                       00055800
                MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'              00055900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00056000
.ZG19A          ANOP  ,                                                 00056100
.*-------------------------------------------------------------------   00056200
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00056300
                AIF   (N'&SYSLIST NE 0).ZG19B   POSITIONALS?            00056400
                AIF   ('&MSGTOKEN' NE '').ZG19B  KEYS?                  00056500
                AIF   ('&GROUPTOKEN' NE '').ZG19B  KEYS?                00056600
                AIF   ('&RTNCODE' NE '').ZG19B  KEYS?                   00056700
                AIF   ('&RSNCODE' NE '').ZG19B  KEYS?                   00056800
                AGO    .ZG19C     INVOCATION OKAY                       00056900
.ZG19B          ANOP  ,                                                 00057000
&ZMS            SETC  'THE "L" FORM OF "MF"'    *MFLA* MNOTE            00057100
&ZMS            SETC  '&ZMS CAN ONLY HAVE'                              00057200
&ZMS            SETC  '&ZMS THE "PLISTVER" KEY'                         00057300
                MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'            00057400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00057500
.ZG19C          ANOP  ,                                                 00057600
.*-------------------------------------------------------------------   00057700
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00057800
&ZXMFCTRL       SETC  'INPUT'     SET IN/OUTPUT                         00057900
&XMFCTRL        SETC  '&MF(2,1)'  SET XVARIABLE                         00058000
                AIF   (N'&MF(2) GT 1).ZG21B     MULTI PARMS             00058100
&XMFCTRL        SETC  '&MF(2)'    SET XVARIABLE                         00058200
.ZG21B          AIF   (K'&MF(2) GT 0).ZG21C                             00058300
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00058400
&ZMS            SETC  'WHEN "L" IS SPECIFIED'   *KRQDA*                 00058500
&ZMS            SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'               00058600
                MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                      00058700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00058800
.ZG21C          ANOP  ,                                                 00058900
.*-------------------------------------------------------------------   00059000
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00059100
                AIF   (K'&ZXMFCTRL LE 0).ZG21P  NOT I/O                 00059200
                AIF   ('&XMFCTRL'(1,1) NE '(').ZG21P                    00059300
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00059400
&ZMS            SETC  '"MF='      *KGPRA* MNOTE                         00059500
&ZMS            SETC  '&ZMS.&MF"'                                       00059600
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00059700
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                 00059800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00059900
.ZG21P          ANOP  ,                                                 00060000
.*-------------------------------------------------------------------   00060100
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00060200
&ZXMFATTR       SETC  'INPUT'     SET IN/OUTPUT                         00060300
&XMFATTR        SETC  '0D'                                              00060400
                AIF   (K'&MF(3) LE 0).ZG24B     PARM                    00060500
&XMFATTR        SETC  '&MF(3,1)'  SET XVARIABLE                         00060600
                AIF   (N'&MF(3) GT 1).ZG24B     MULTI PARMS             00060700
&XMFATTR        SETC  '&MF(3)'    SET XVARIABLE                         00060800
.ZG24B          ANOP  ,                                                 00060900
.*-------------------------------------------------------------------   00061000
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00061100
                AIF   (K'&ZXMFATTR LE 0).ZG24P  NOT I/O                 00061200
                AIF   ('&XMFATTR'(1,1) NE '(').ZG24P                    00061300
&ZXMFATTR       SETC  ''          RESET IN/OUTPUT                       00061400
&ZMS            SETC  '"MF='      *KGPRA* MNOTE                         00061500
&ZMS            SETC  '&ZMS.&MF"'                                       00061600
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00061700
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                 00061800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00061900
.ZG24P          ANOP  ,                                                 00062000
.*-------------------------------------------------------------------   00062100
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00062200
                AIF   (K'&ZXMFATTR LE 0).ZG24S  NOT I/O                 00062300
                AIF   (K'&XMFATTR LE 60).ZG24S  LNG OK                  00062400
&ZXMFATTR       SETC  ''          RESET IN/OUTPUT                       00062500
&ZMS            SETC  '"MF='      *KLNGA* MNOTE                         00062600
&ZMS            SETC  '&ZMS.&MF"'                                       00062700
&ZMS            SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'             00062800
                MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                00062900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00063000
.ZG24S          ANOP  ,                                                 00063100
.*-------------------------------------------------------------------   00063200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00063300
.ZG26           ANOP  ,                                                 00063400
&ZTLC           SETC 'E'                                                00063500
                AIF   ('&MF(1)' NE '&ZTLC').ZG34                        00063600
&XMF            SETC  'E'         SET KEYWORD                           00063700
                AIF   (N'&MF LE 3).ZG26A        CK NUM                  00063800
&ZMS            SETC  '"MF='      *KPOSA* MNOTE                         00063900
&ZMS            SETC  '&ZMS.&MF"'                                       00064000
&ZMS            SETC  '&ZMS "MF"'                                       00064100
                MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'              00064200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00064300
.ZG26A          ANOP  ,                                                 00064400
.*-------------------------------------------------------------------   00064500
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00064600
&ZXMFCTRL       SETC  'INPUT'     SET IN/OUTPUT                         00064700
&XMFCTRL        SETC  '&MF(2,1)'  SET XVARIABLE                         00064800
                AIF   (N'&MF(2) GT 1).ZG28B     MULTI PARMS             00064900
&XMFCTRL        SETC  '&MF(2)'    SET XVARIABLE                         00065000
.ZG28B          AIF   (K'&MF(2) GT 0).ZG28C                             00065100
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00065200
&ZMS            SETC  'WHEN "E" IS SPECIFIED'   *KRQDA*                 00065300
&ZMS            SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'               00065400
                MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                      00065500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00065600
.ZG28C          ANOP  ,                                                 00065700
.*-------------------------------------------------------------------   00065800
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00065900
                AIF   (K'&ZXMFCTRL LE 0).ZG28R  NOT I/O                 00066000
                AIF   ('&XMFCTRL'(1,1) NE '(').ZG28R                    00066100
&ZCGPR          SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                        00066200
                AIF   ('&ZCGPR'(1,1) NE '0').ZG28P                      00066300
                AIF   (K'&ZCGPR GT 2).ZG28Q                             00066400
                AIF   ('&ZCGPR' EQ '0').ZG28Q                           00066500
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00066600
                AIF   (T'&ZCGPR NE 'N').ZG28Q   INVALID REG NAME        00066700
.ZG28P          ANOP  ,                                                 00066800
                AIF   (T'&ZCGPR NE 'N').ZG28R   NON NUMERIC             00066900
                AIF   ('&ZCGPR' LT '1').ZG28Q                           00067000
                AIF   ('&ZCGPR' LE '12').ZG28R                          00067100
.ZG28Q          ANOP  ,                                                 00067200
&ZMS            SETC  '"MF='      *KGPRA* MNOTE                         00067300
&ZMS            SETC  '&ZMS.&MF"'                                       00067400
&ZMS            SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'         00067500
                MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                  00067600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00067700
.ZG28R          ANOP  ,                                                 00067800
.*-------------------------------------------------------------------   00067900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00068000
&XMFSCK         SETC  ''          INITIALIZE XVARIABLE                  00068100
.ZG32A   AIF   ('&MF(3)' NE 'COMPLETE').ZG33A                           00068200
&XMFSCK         SETC  'COMPLETE'  SET KEYWORD                           00068300
.*-------------------------------------------------------------------   00068400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00068500
.ZG33A          AIF   (K'&XMFSCK GT 0).ZG33C    KEYWORD                 00068600
                AIF   (K'&MF(3) LE 0).ZG33B                             00068700
&ZMS            SETC  '"MF='      *KUKWA* MNOTE                         00068800
&ZMS            SETC  '&ZMS.&MF"'                                       00068900
&ZMS            SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '         00069000
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00069100
&ZMS            SETC  '&ZMS "COMPLETE".'                                00069200
                MNOTE 8,' &ZMS '                                        00069300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00069400
.ZG33B          ANOP  ,                                                 00069500
&XMFSCK         SETC  'COMPLETE'  SET DEFAULT KEYWORD                   00069600
.ZG33C          ANOP  ,                                                 00069700
&ZXMFSCK        SETC  'INPUT'     SET IN/OUTPUT                         00069800
.*------------------------------------------------------------------    00069900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00070000
.ZG34           ANOP  ,                                                 00070100
&ZXMF           SETC  'INPUT'     SET IN/OUTPUT                         00070200
                AIF   (K'&XMF GT 0).ZG34E       VALID ARG               00070300
                AIF   (T'&MF EQ 'O').ZG34D      OMITTED                 00070400
&ZASYSLNDX      SETA  0                                                 00070500
.ZG34A          ANOP  ,           POSITIONAL MACRO KEY                  00070600
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00070700
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG34C                  00070800
&ZTLC           SETC 'MF'                                               00070900
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG34A         00071000
.ZG34B          ANOP  ,                                                 00071100
&ZXMF           SETC  ''          RESET IN/OUTPUT                       00071200
&ZMS            SETC  'THE "MF" KEY'            *KOPTA* MNOTE           00071300
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00071400
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00071500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00071600
                AGO   .ZG34E                                            00071700
.ZG34C          ANOP  ,                                                 00071800
&ZXMF           SETC  ''          RESET IN/OUTPUT                       00071900
&ZMS            SETC  '"MF='      *KUKWA* MNOTE                         00072000
&ZMS            SETC  '&ZMS.&MF"'                                       00072100
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00072200
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00072300
&ZMS            SETC  '&ZMS "S",'                                       00072400
&ZMS            SETC  '&ZMS "L",'                                       00072500
&ZMS            SETC  '&ZMS OR "E".'                                    00072600
                MNOTE 8,' &ZMS '                                        00072700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00072800
                AGO   .ZG34E                                            00072900
.ZG34D          ANOP  ,                                                 00073000
&XMF            SETC  'S'         SET DEFAULT KEYWORD                   00073100
&XMFSCK         SETC  'COMPLETE'  COMPLETE CHECKING                     00073200
.ZG34E          ANOP  ,                                                 00073300
.********************************************************************   00073400
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00073500
.********************************************************************   00073600
                ACTR  10000                                             00073700
.*-------------------------------------------------------------------   00073800
.***AG.MF03 MF=(SLE)                                                    00073900
                AIF   ('&XMF' EQ 'L').ZGMFX                             00074000
.*----------------------------------------------------------------***   00074100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00074200
                AIF   (N'&MSGTOKEN LE 1).ZG2A   CK NUM                  00074300
&ZMS            SETC  '"MSGTOKEN='              *KPOSA* MNOTE           00074400
&ZMS            SETC  '&ZMS.&MSGTOKEN"'                                 00074500
&ZMS            SETC  '&ZMS "MSGTOKEN"'                                 00074600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00074700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00074800
.ZG2A           ANOP  ,                                                 00074900
.*-------------------------------------------------------------------   00075000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00075100
&ZXMSGTOKEN     SETC  'INPUT'     SET IN/OUTPUT                         00075200
&XMSGTOKEN      SETC  '&MSGTOKEN(1)'            SET XVARIABLE           00075300
                AIF   (N'&MSGTOKEN GT 1).ZG2B   MULTI PARMS             00075400
&XMSGTOKEN      SETC  '&MSGTOKEN'               SET XVARIABLE           00075500
.ZG2B           AIF   (K'&MSGTOKEN(1) GT 0).ZG2C                        00075600
&ZXMSGTOKEN     SETC  ''          RESET IN/OUTPUT                       00075700
&ZMS            SETC  ' '         *KRQDA*                               00075800
&ZMS            SETC  '&ZMS "MSGTOKEN" KEY AND ITS'                     00075900
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00076000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00076100
.ZG2C           ANOP  ,                                                 00076200
.*-------------------------------------------------------------------   00076300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00076400
                AIF   (K'&ZXMSGTOKEN LE 0).ZG2R  NOT I/O                00076500
                AIF   ('&XMSGTOKEN'(1,1) NE '(').ZG2R                   00076600
&ZCGPR          SETC  '&XMSGTOKEN'(2,K'&XMSGTOKEN-2)                    00076700
                AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                       00076800
                AIF   (K'&ZCGPR GT 2).ZG2Q                              00076900
                AIF   ('&ZCGPR' EQ '0').ZG2Q                            00077000
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00077100
                AIF   (T'&ZCGPR NE 'N').ZG2Q    INVALID REG NAME        00077200
.ZG2P           ANOP  ,                                                 00077300
                AIF   (T'&ZCGPR NE 'N').ZG2R    NON NUMERIC             00077400
                AIF   ('&ZCGPR' LT '2').ZG2Q                            00077500
                AIF   ('&ZCGPR' LE '12').ZG2R                           00077600
.ZG2Q           ANOP  ,                                                 00077700
&ZMS            SETC  '"MSGTOKEN='              *KGPRA* MNOTE           00077800
&ZMS            SETC  '&ZMS.&MSGTOKEN"'                                 00077900
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00078000
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00078100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00078200
.ZG2R           ANOP  ,                                                 00078300
.*----------------------------------------------------------------***   00078400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00078500
                AIF   (N'&GROUPTOKEN LE 1).ZG5A  CK NUM                 00078600
&ZMS            SETC  '"GROUPTOKEN='            *KPOSA* MNOTE           00078700
&ZMS            SETC  '&ZMS.&GROUPTOKEN"'                               00078800
&ZMS            SETC  '&ZMS "GROUPTOKEN"'                               00078900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00079000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00079100
.ZG5A           ANOP  ,                                                 00079200
.*-------------------------------------------------------------------   00079300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00079400
&ZXGROUPTOKEN   SETC  'INPUT'     SET IN/OUTPUT                         00079500
&XGROUPTOKEN    SETC  '&GROUPTOKEN(1)'          SET XVARIABLE           00079600
                AIF   (N'&GROUPTOKEN GT 1).ZG5B  MULTI PARMS            00079700
&XGROUPTOKEN    SETC  '&GROUPTOKEN'             SET XVARIABLE           00079800
.ZG5B           AIF   (K'&GROUPTOKEN(1) GT 0).ZG5C                      00079900
&ZXGROUPTOKEN   SETC  ''          RESET IN/OUTPUT                       00080000
&ZMS            SETC  ' '         *KRQDA*                               00080100
&ZMS            SETC  '&ZMS "GROUPTOKEN" KEY AND ITS'                   00080200
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00080300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00080400
.ZG5C           ANOP  ,                                                 00080500
.*-------------------------------------------------------------------   00080600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00080700
                AIF   (K'&ZXGROUPTOKEN LE 0).ZG5R  NOT I/O              00080800
                AIF   ('&XGROUPTOKEN'(1,1) NE '(').ZG5R                 00080900
&ZCGPR          SETC  '&XGROUPTOKEN'(2,K'&XGROUPTOKEN-2)                00081000
                AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                       00081100
                AIF   (K'&ZCGPR GT 2).ZG5Q                              00081200
                AIF   ('&ZCGPR' EQ '0').ZG5Q                            00081300
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00081400
                AIF   (T'&ZCGPR NE 'N').ZG5Q    INVALID REG NAME        00081500
.ZG5P           ANOP  ,                                                 00081600
                AIF   (T'&ZCGPR NE 'N').ZG5R    NON NUMERIC             00081700
                AIF   ('&ZCGPR' LT '2').ZG5Q                            00081800
                AIF   ('&ZCGPR' LE '12').ZG5R                           00081900
.ZG5Q           ANOP  ,                                                 00082000
&ZMS            SETC  '"GROUPTOKEN='            *KGPRA* MNOTE           00082100
&ZMS            SETC  '&ZMS.&GROUPTOKEN"'                               00082200
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00082300
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00082400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00082500
.ZG5R           ANOP  ,                                                 00082600
.*----------------------------------------------------------------***   00082700
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00082800
                AIF   (N'&RTNCODE LE 1).ZG8A    CK NUM                  00082900
&ZMS            SETC  '"RTNCODE='               *KPOSA* MNOTE           00083000
&ZMS            SETC  '&ZMS.&RTNCODE"'                                  00083100
&ZMS            SETC  '&ZMS "RTNCODE"'                                  00083200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00083300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00083400
.ZG8A           ANOP  ,                                                 00083500
.*-------------------------------------------------------------------   00083600
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00083700
                AIF   (K'&RTNCODE(1) LE 0).ZG8C  NO PARM                00083800
&ZXRTNCODE      SETC  'OUTPUT'    SET OUTPUT                            00083900
&XRTNCODE       SETC  '&RTNCODE(1)'             SET XVARIABLE           00084000
                AIF   (N'&RTNCODE GT 1).ZG8C                            00084100
&XRTNCODE       SETC  '&RTNCODE'  SET XVARIABLE                         00084200
.ZG8C           ANOP  ,                                                 00084300
.*-------------------------------------------------------------------   00084400
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00084500
                AIF   (K'&ZXRTNCODE LE 0).ZG8R  NOT I/O                 00084600
                AIF   ('&XRTNCODE'(1,1) NE '(').ZG8R                    00084700
&ZCGPR          SETC  '&XRTNCODE'(2,K'&XRTNCODE-2)                      00084800
                AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                       00084900
                AIF   (K'&ZCGPR GT 2).ZG8Q                              00085000
                AIF   ('&ZCGPR' EQ '0').ZG8Q                            00085100
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00085200
                AIF   (T'&ZCGPR NE 'N').ZG8Q    INVALID REG NAME        00085300
.ZG8P           ANOP  ,                                                 00085400
                AIF   (T'&ZCGPR NE 'N').ZG8R    NON NUMERIC             00085500
                AIF   ('&ZCGPR' LT '2').ZG8Q                            00085600
                AIF   ('&ZCGPR' LE '12').ZG8R                           00085700
.ZG8Q           ANOP  ,                                                 00085800
&ZMS            SETC  '"RTNCODE='               *KGPRA* MNOTE           00085900
&ZMS            SETC  '&ZMS.&RTNCODE"'                                  00086000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00086100
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00086200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00086300
.ZG8R           ANOP  ,                                                 00086400
.*----------------------------------------------------------------***   00086500
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00086600
                AIF   (N'&RSNCODE LE 1).ZG11A   CK NUM                  00086700
&ZMS            SETC  '"RSNCODE='               *KPOSA* MNOTE           00086800
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00086900
&ZMS            SETC  '&ZMS "RSNCODE"'                                  00087000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00087100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00087200
.ZG11A          ANOP  ,                                                 00087300
.*-------------------------------------------------------------------   00087400
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00087500
                AIF   (K'&RSNCODE(1) LE 0).ZG11C  NO PARM               00087600
&ZXRSNCODE      SETC  'OUTPUT'    SET OUTPUT                            00087700
&XRSNCODE       SETC  '&RSNCODE(1)'             SET XVARIABLE           00087800
                AIF   (N'&RSNCODE GT 1).ZG11C                           00087900
&XRSNCODE       SETC  '&RSNCODE'  SET XVARIABLE                         00088000
.ZG11C          ANOP  ,                                                 00088100
.*-------------------------------------------------------------------   00088200
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00088300
                AIF   (K'&ZXRSNCODE LE 0).ZG11R  NOT I/O                00088400
                AIF   ('&XRSNCODE'(1,1) NE '(').ZG11R                   00088500
&ZCGPR          SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                      00088600
                AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                      00088700
                AIF   (K'&ZCGPR GT 2).ZG11Q                             00088800
                AIF   ('&ZCGPR' EQ '0').ZG11Q                           00088900
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00089000
                AIF   (T'&ZCGPR NE 'N').ZG11Q   INVALID REG NAME        00089100
.ZG11P          ANOP  ,                                                 00089200
                AIF   (T'&ZCGPR NE 'N').ZG11R   NON NUMERIC             00089300
                AIF   ('&ZCGPR' LT '2').ZG11Q                           00089400
                AIF   ('&ZCGPR' LE '12').ZG11R                          00089500
.ZG11Q          ANOP  ,                                                 00089600
&ZMS            SETC  '"RSNCODE='               *KGPRA* MNOTE           00089700
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00089800
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00089900
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00090000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00090100
.ZG11R          ANOP  ,                                                 00090200
.******************************************************************     00090300
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00090400
.******************************************************************     00090500
                ACTR  10000                                             00090600
.*----------------------------------------------------------------***   00090700
.***AH.P02 EXTRA POSITIONALS                                            00090800
                AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS              00090900
                AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL              00091000
                AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL          00091100
                AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL           00091200
.ZGLISTX1       ANOP  ,                                                 00091300
&ZCVAL          SETC  ''          ERROR FIELD                           00091400
&ZAWRK          SETA  0           POSITIONAL NUMBER                     00091500
.ZGLIST2        ANOP  ,                                                 00091600
&ZAWRK          SETA  &ZAWRK+1    NEXT POSITIONAL                       00091700
                AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE              00091800
&ZCVAL          SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                   00091900
                AGO   .ZGLIST2                                          00092000
.*                                                                      00092100
.ZGLIST3        ANOP  ,                                                 00092200
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)     STRIP COMMA             00092300
&ZMS            SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE          00092400
&ZMS            SETC  '&ZMS "&ZCVAL"'                                   00092500
&ZMS            SETC  '&ZMS CANNOT BE USED.'                            00092600
&ZMS            SETC  '&ZMS NO POSITIONAL ARGUMENTS'                    00092700
                MNOTE 8,' &ZMS ARE ALLOWED.'                            00092800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00092900
.ZGLISTX        ANOP  ,                                                 00093000
&ZASYSLNDX      SETA  0                                                 00093100
.*-------------------------------------------------------------------   00093200
.***AG.MF04 MF=(SLE)                                                    00093300
.ZGMFX          ANOP  ,           END OF FULL SYNTAX CHECK              00093400
.*******************************************************************    00093500
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00093600
.*******************************************************************    00093700
                AIF   (&ZMACRET NE 0).ZLX2      ERROR DETECTED          00093800
.*******************************************************************    00093900
.***AE.01  START OF IXZXIXCM MACRO CODE                                 00094000
.*******************************************************************    00094100
                LCLC  &M0M0001                 NAME                     00094200
&M0M0001        SETC  '&XLABEL'                SET NAME                 00094300
                AIF   (K'&XLABEL NE 0).XLAB2                            00094400
&M0M0001        SETC  'M00M&SYSNDX'            DEFAULT NAME             00094500
.*                                                                      00094600
.XLAB2          ANOP  ,                                                 00094700
                AIF   ('&XMF' EQ 'L').XLAB3                             00094800
&M0M0001 DS    0H                             IXZXIXCM-1                00094900
.XLAB3          ANOP  ,                                                 00095000
.*******************************************************************    00095100
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00095200
.*******************************************************************    00095300
              PUSH  PRINT                                               00095400
                AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON        00095500
                PRINT OFF         ++ PR01                               00095600
                AGO   .ZPRNTXX                                          00095700
.ZPRINTX        PRINT ON                                                00095800
.ZPRNTXX        ANOP  ,                                                 00095900
.********************************************************************   00096000
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00096100
.********************************************************************   00096200
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00096300
                      LCLA  &ZOPN1         INVOCATION INDEX             00096400
                      LCLC  &ZOPL(4095)    LABEL                        00096500
                      LCLC  &ZOPO(4095)    OPERATION                    00096600
                      LCLC  &ZOPV(4095)    VALUE                        00096700
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00096800
.*                                                                      00096900
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00097000
.******************************************************************     00097100
.***AL.L10 IXZXIXCM FMT=LIST MF=S!L PARAMETERS                          00097200
.******************************************************************     00097300
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00097400
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00097500
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00097600
&XMFATTR              SETC  '0D'                                        00097700
.*                                                                      00097800
&ZOPN                 SETA  &ZOPN+1                                     00097900
&ZOPL(&ZOPN)          SETC  ' '                                         00098000
                      AIF   (&SYSALVL NE 0).ZALVL6A                     00098100
&ZOPO(&ZOPN)          SETC  'B'                                         00098200
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00098300
                      AGO   .ZALVL6B                                    00098400
.ZALVL6A              ANOP                                              00098500
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00098600
&ZOPV(&ZOPN)          SETC  '4,8'                                       00098700
&ZOPN                 SETA  &ZOPN+1                                     00098800
&ZOPL(&ZOPN)          SETC  ' '                                         00098900
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00099000
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00099100
.ZALVL6B              ANOP                                              00099200
&ZOPD(&ZOPN)          SETC  '++ IXZXIXCM ARG PARMS'                     00099300
.*                                                                      00099400
&ZOPN                 SETA  &ZOPN+1                                     00099500
&ZOPL(&ZOPN)          SETC  ' '                                         00099600
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00099700
&ZOPV(&ZOPN)          SETC  '1'                                         00099800
&ZOPD(&ZOPN)          SETC  ' '                                         00099900
.*                                                                      00100000
.ZLMFSL2              ANOP  ,                                           00100100
.*-------------------------------------------------------------------   00100200
.***AM.L00  IXZXIXCM FMT=LIST name                                      00100300
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00100400
&ZOPN                 SETA &ZOPN+1                                      00100500
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00100600
&ZOPO(&ZOPN)          SETC 'EQU'                                        00100700
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00100800
&ZOPD(&ZOPN)          SETC '++ IXZXIXCM NAME'                           00100900
.ZLMFSL2M             ANOP  ,                                           00101000
.*-------------------------------------------------------------------   00101100
.***AM.L01  IXZXIXCM FMT=LIST PARAMETERS                                00101200
&ZOPN                 SETA &ZOPN+1                                      00101300
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00101400
&ZOPO(&ZOPN)          SETC 'DS'                                         00101500
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00101600
&ZOPD(&ZOPN)          SETC '++ IXZXIXCM PARM LIST'                      00101700
.*-------------------------------------------------------------------   00101800
.***AM.L02 XVERSION XL1                                                 00101900
&ZOPN                 SETA &ZOPN+1                                      00102000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00102100
&ZOPO(&ZOPN)          SETC 'DS'                                         00102200
&ZOPV(&ZOPN)          SETC 'XL1'                                        00102300
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00102400
.*-------------------------------------------------------------------   00102500
.***AM.L09  XEYECATCH CL6                                               00102600
&ZOPN                 SETA &ZOPN+1                                      00102700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEYECATCH'                        00102800
&ZOPO(&ZOPN)          SETC 'DS'                                         00102900
&ZOPV(&ZOPN)          SETC 'CL6'                                        00103000
&ZOPD(&ZOPN)          SETC '++ CONSTANT  XEYECATCH'                     00103100
.*-------------------------------------------------------------------   00103200
.***AM.L09  XRSV0001 CL1                                                00103300
&ZOPN                 SETA &ZOPN+1                                      00103400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0001'                         00103500
&ZOPO(&ZOPN)          SETC 'DS'                                         00103600
&ZOPV(&ZOPN)          SETC 'CL1'                                        00103700
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0001'                      00103800
.*-------------------------------------------------------------------   00103900
.***AM.L09  XMSGTOKEN BL.64                                             00104000
&ZOPN                 SETA &ZOPN+1                                      00104100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGTOKEN'                        00104200
&ZOPO(&ZOPN)          SETC 'DS'                                         00104300
&ZOPV(&ZOPN)          SETC 'BL.64'                                      00104400
&ZOPD(&ZOPN)          SETC '++ &ZXMSGTOKEN  XMSGTOKEN'                  00104500
.*-------------------------------------------------------------------   00104600
.***AM.L09  XGROUPTOKEN F                                               00104700
&ZOPN                 SETA &ZOPN+1                                      00104800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XGROUPTOKEN'                      00104900
&ZOPO(&ZOPN)          SETC 'DS'                                         00105000
&ZOPV(&ZOPN)          SETC 'F'                                          00105100
&ZOPD(&ZOPN)          SETC '++ &ZXGROUPTOKEN  XGROUPTOKEN'              00105200
.*-------------------------------------------------------------------   00105300
.***AM.L10 END OF IXZXIXCM LIST PARAMETERS                              00105400
&ZOPN                 SETA &ZOPN+1                                      00105500
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00105600
&ZOPO(&ZOPN)          SETC 'EQU'                                        00105700
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00105800
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00105900
.*                                                                      00106000
&ZOPN                 SETA &ZOPN+1                                      00106100
&ZOPL(&ZOPN)          SETC ' '                                          00106200
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00106300
&ZOPV(&ZOPN)          SETC '1'                                          00106400
&ZOPD(&ZOPN)          SETC ' '                                          00106500
.*-------------------------------------------------------------------   00106600
.***AL.L12 IXZXIXCM FMT=LIST MF=S!L PARAMETERS                          00106700
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00106800
.*                                                                      00106900
&ZOPN                 SETA  &ZOPN+1                                     00107000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00107100
&ZOPO(&ZOPN)          SETC  'DC'                                        00107200
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00107300
&ZOPD(&ZOPN)          SETC  '++ IXZXIXCM ARG PARMS'                     00107400
.*                                                                      00107500
.ZLMFSLX              ANOP  ,                                           00107600
.*-------------------------------------------------------------------   00107700
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00107800
&ZPLLEN               SETA 20                                           00107900
.*                                                                      00108000
.******************************************************************     00108100
.***AI.L01 IXZXIXCM FMT=LIST FILL IN PARAMETER AREA                     00108200
.******************************************************************     00108300
                      ACTR  10000                                       00108400
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00108500
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00108600
&ZCVAL                SETC  'LAE'          XAX MODE                     00108700
.ZIMFXA               ANOP ,                                            00108800
.*                                                                      00108900
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00109000
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00109100
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00109200
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00109300
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00109400
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00109500
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00109600
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00109700
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00109800
&ZOPN                 SETA  &ZOPN+1                                     00109900
&ZOPL(&ZOPN)          SETC  ' '                                         00110000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00110100
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00110200
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00110300
                      AGO   .ZIMFNX                                     00110400
.*                                                                      00110500
.ZIMFN2               ANOP ,                                            00110600
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     00110700
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00110800
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00110900
&ZOPN                 SETA  &ZOPN+1                                     00111000
&ZOPL(&ZOPN)          SETC  ' '                                         00111100
&ZOPO(&ZOPN)          SETC  'LAE'                                       00111200
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00111300
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00111400
                      AGO   .ZIMFNX                                     00111500
.ZIMFNX1              ANOP ,                                            00111600
&ZOPN                 SETA  &ZOPN+1                                     00111700
&ZOPL(&ZOPN)          SETC  ' '                                         00111800
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00111900
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00112000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00112100
.ZIMFNX               ANOP ,                                            00112200
.********************************************************************   00112300
.***AI.L02 IXZXIXCM FMT=LIST INITIALIZE PARAMETER AREA                  00112400
.********************************************************************   00112500
.***AI.L03 MF=(SLE)                                                     00112600
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00112700
.*                                                                      00112800
&ZOPN                 SETA  &ZOPN+1                                     00112900
&ZOPL(&ZOPN)          SETC  ' '                                         00113000
&ZOPO(&ZOPN)          SETC  'XC'                                        00113100
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00113200
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00113300
.ZIMFLX               ANOP  ,                                           00113400
.*-------------------------------------------------------------------   00113500
.***AI.L04B XVERSION XL1                                                00113600
                      AIF   (&XPLISTVER EQ 0).ZIMFVZ                    00113700
&ZOPN                 SETA  &ZOPN+1                                     00113800
&ZOPL(&ZOPN)          SETC  ' '                                         00113900
&ZOPO(&ZOPN)          SETC  'MVI'                                       00114000
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00114100
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00114200
.ZIMFVZ               ANOP  ,                                           00114300
.*-------------------------------------------------------------------   00114400
.***AI.L60 XEYECATCH CL6                                                00114500
&ZOPN                 SETA  &ZOPN+1                                     00114600
&ZOPL(&ZOPN)          SETC  ' '                                         00114700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00114800
&ZOPV(&ZOPN)          SETC  '1(6,1),=CL6''YIXCM '''                     00114900
&ZOPD(&ZOPN)          SETC  '++ CL6 CONSTANT'                           00115000
.*-------------------------------------------------------------------   00115100
.***AI.L25  XMSGTOKEN XL8                                               00115200
                      AIF   ('&ZXMSGTOKEN' EQ '').ZI4E                  00115300
                      AIF   ('&ZXMSGTOKEN' EQ 'OUTPUT').ZI4E            00115400
&ZCGPR                SETC  '&XMSGTOKEN'                                00115500
.*                                                                      00115600
                      AIF   ('&XMSGTOKEN'(1,1) NE '(').ZI4B             00115700
&ZCGPR   SETC  '0('.'&XMSGTOKEN'(2,K'&XMSGTOKEN-2).')'                  00115800
                      AGO   .ZI4D                                       00115900
.ZI4B                 ANOP  ,                                           00116000
.*                                                                      00116100
&ZC                   SETC  '&XMSGTOKEN'(1,1)                           00116200
                      AIF   (T'&ZC NE 'N').ZI4D                         00116300
&ZC                   SETC  '&XMSGTOKEN'                                00116400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI4D                00116500
&ZCGPR                SETC  '=BL8''&XMSGTOKEN'''                        00116600
.*                                                                      00116700
.ZI4D                 ANOP  ,                                           00116800
.*                                                                      00116900
&ZOPN                 SETA  &ZOPN+1                                     00117000
&ZOPL(&ZOPN)          SETC  ' '                                         00117100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00117200
&ZOPV(&ZOPN)          SETC  '8(8,1),&ZCGPR'                             00117300
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGTOKEN XMSGTOKEN'                  00117400
.*                                                                      00117500
.ZI4E                 ANOP  ,                                           00117600
.*-------------------------------------------------------------------   00117700
.***AI.L25  XGROUPTOKEN F                                               00117800
                      AIF   ('&ZXGROUPTOKEN' EQ '').ZI5E                00117900
                      AIF   ('&ZXGROUPTOKEN' EQ 'OUTPUT').ZI5E          00118000
&ZCGPR                SETC  '&XGROUPTOKEN'                              00118100
.*                                                                      00118200
                      AIF   ('&XGROUPTOKEN'(1,1) NE '(').ZI5B           00118300
&ZCGPR   SETC  '0('.'&XGROUPTOKEN'(2,K'&XGROUPTOKEN-2).')'              00118400
                      AGO   .ZI5D                                       00118500
.ZI5B                 ANOP  ,                                           00118600
.*                                                                      00118700
&ZC                   SETC  '&XGROUPTOKEN'(1,1)                         00118800
                      AIF   (T'&ZC NE 'N').ZI5D                         00118900
&ZC                   SETC  '&XGROUPTOKEN'                              00119000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI5D                00119100
&ZCGPR                SETC  '=FL4''&XGROUPTOKEN'''                      00119200
.*                                                                      00119300
.ZI5D                 ANOP  ,                                           00119400
.*                                                                      00119500
&ZOPN                 SETA  &ZOPN+1                                     00119600
&ZOPL(&ZOPN)          SETC  ' '                                         00119700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00119800
&ZOPV(&ZOPN)          SETC  '16(4,1),&ZCGPR'                            00119900
&ZOPD(&ZOPN)          SETC  '++ &ZXGROUPTOKEN XGROUPTOKEN'              00120000
.*                                                                      00120100
.ZI5E                 ANOP  ,                                           00120200
.*-------------------------------------------------------------------   00120300
&ZOPN1                SETA &ZOPN                                        00120400
.*******************************************************************    00120500
.***  PROCESS IXZXIXCM OUTPUT PARAMETERS                                00120600
.*******************************************************************    00120700
                      ACTR  10000                                       00120800
.*******************************************************************    00120900
.***AO.X01  LABEL TO BYPASS INVOCATION                                  00121000
.*******************************************************************    00121100
&ZOPN                 SETA  &ZOPN+1                                     00121200
&ZOPL(&ZOPN)          SETC  'AMGE&SYSNDX'                               00121300
&ZOPO(&ZOPN)          SETC  'DS'                                        00121400
&ZOPV(&ZOPN)          SETC  '0H'                                        00121500
&ZOPD(&ZOPN)          SETC  '++ BYPASS INVOCATION'                      00121600
.*******************************************************************    00121700
.***AO.X02  RETURN CODE PROCESSING                                      00121800
.*******************************************************************    00121900
                      AIF   (N'&RTNCODE LE 0).ZMRETX                    00122000
                      AIF   ('&XRTNCODE'(1,1) EQ '(').ZMRET2            00122100
                      AIF   ('&XRTNCODE' EQ 'GPR15').ZMRETX             00122200
                      AIF   ('&XRTNCODE' EQ 'REG15').ZMRETX             00122300
                      AIF   ('&XRTNCODE' EQ 'R15').ZMRETX               00122400
                      AIF   ('&XRTNCODE' EQ '15').ZMRETX                00122500
&ZOPN                 SETA  &ZOPN+1                                     00122600
&ZOPL(&ZOPN)          SETC  ' '                                         00122700
&ZOPO(&ZOPN)          SETC  'ST'                                        00122800
&ZOPV(&ZOPN)          SETC  '15,&XRTNCODE'                              00122900
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00123000
                      AGO   .ZMRETX                                     00123100
.*                                                                      00123200
.ZMRET2               ANOP  ,                                           00123300
&ZCGPR                SETC  '&XRTNCODE'(2,K'&XRTNCODE-2)                00123400
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00123500
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00123600
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00123700
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00123800
&ZOPN                 SETA  &ZOPN+1                                     00123900
&ZOPL(&ZOPN)          SETC  ' '                                         00124000
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00124100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00124200
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00124300
.ZMRETX               ANOP  ,                                           00124400
.*******************************************************************    00124500
.***AO.X03  REASON CODE PROCESSING                                      00124600
.*******************************************************************    00124700
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00124800
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00124900
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00125000
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00125100
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00125200
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00125300
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00125400
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00125500
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00125600
&ZOPN                 SETA  &ZOPN+1                                     00125700
&ZOPL(&ZOPN)          SETC  ' '                                         00125800
&ZOPO(&ZOPN)          SETC  'ST'                                        00125900
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00126000
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00126100
                      AGO   .ZMRSNX                                     00126200
.*                                                                      00126300
.ZMRSN2               ANOP  ,                                           00126400
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00126500
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00126600
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00126700
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00126800
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00126900
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00127000
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00127100
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00127200
&ZOPN                 SETA  &ZOPN+1                                     00127300
&ZOPL(&ZOPN)          SETC  ' '                                         00127400
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00127500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00127600
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00127700
.ZMRSNX               ANOP  ,                                           00127800
.*******************************************************************    00127900
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00128000
.*******************************************************************    00128100
.ZMFLX                ANOP  ,              MF=L PROCESSING              00128200
.*******************************************************************    00128300
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00128400
.*******************************************************************    00128500
                      ACTR  10000                                       00128600
.*                                                                      00128700
                      LCLA  &ZLC           COLUMN POSITION              00128800
                      LCLA  &ZOPX          LIST TABLE INDEX             00128900
                      LCLC  &ZLL           LABEL                        00129000
                      LCLC  &ZLOP          OPERATION                    00129100
                      LCLC  &ZLV           VALUE                        00129200
                      LCLC  &ZLD           DESCRIPTION                  00129300
.*                                                                      00129400
&ZOPX                 SETA  1                                           00129500
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00129600
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00129700
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00129800
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00129900
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00130000
                      AIF   (K'&ZLD LE 0).ZL5                           00130100
&ZLC                  SETA  35             COMMENT COLUMN               00130200
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00130300
&ZLC                  SETA  33             COMMMENT COLUMN              00130400
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00130500
&ZLV                  SETC  '&ZLV'.' '                                  00130600
                      AGO   .ZL3                                        00130700
.*                                                                      00130800
.ZL4                  ANOP  ,                                           00130900
&ZLV                  SETC  '&ZLV'.' '                                  00131000
.ZL5                  ANOP  ,                                           00131100
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00131200
.*                                                                      00131300
&ZLL     &ZLOP &ZLV                                                     00131400
.*                                                                      00131500
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00131600
                      AGO   .ZL2           CONTINUE LOOPING             00131700
.*                                                                      00131800
.ZLX                  ANOP  ,                                           00131900
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00132000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00132100
         GBLC  &ANVIRON           JES2 environment variable             00132200
         GBLB  &J3MN              JES3 Main Task environment            00132300
         GBLB  &J3ST              JES3 Subtask environment              00132400
         GBLB  &J3FSS             JES3 FSS environment                  00132500
         GBLB  &JSXCF             JESXCF environment                    00132600
         AIF   ('&ANVIRON' EQ 'JES2').IXCM050  Are we running under     00132700
.*                                JES2 Main task                        00132800
         AIF   ('&ANVIRON' EQ 'SUBTASK').IXCM050 Are we running under   00132900
.*                                JES2 Subtask                          00133000
         AIF   (&J3MN).IXCM050    Are we running under JES3 Main task   00133100
         AIF   (&J3ST).IXCM050    Are we running under JES3 Sub task    00133200
         AIF   (&J3FSS).IXCM050   Are we running under JES3 FSS         00133300
         MNOTE 8,'IXZ0001 Running in an invalid environment'            00133400
.IXCM050 ANOP                                                           00133500
         AIF   ('&GROUPTOKEN'(1,1) NE '(').IXCM100                      00133600
         LR    14,&GROUPTOKEN     Load the address of the group token   00133700
         L     14,0(14)           Load the group token                  00133800
         AGO   .IXCM150                                                 00133900
.IXCM100 ANOP                                                           00134000
         L     14,&GROUPTOKEN     Load the group token                  00134100
.IXCM150 ANOP                                                           00134200
         L     14,96(14)          Load the PC number of the             00134300
*                                 routine to be called                  00134400
         PC    0(14)              Call the acknowledge message          00134500
*                                 routine                               00134600
         AIF   ('&XMFCTRL'(1,1) NE '(').IXCM200                         00134700
         LR    1,&XMFCTRL         Restore the parameter list address    00134800
         AGO   .IXCM250                                                 00134900
.IXCM200 ANOP                                                           00135000
         LA    1,&XMFCTRL         Restore the parameter list address    00135100
.IXCM250 ANOP                                                           00135200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00135300
.ZLINKX               ANOP  ,                                           00135400
.*******************************************************************    00135500
.***AP.X01  FORMAT GENERATED CODE                                       00135600
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00135700
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00135800
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00135900
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00136000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00136100
                      AIF   (K'&ZLD LE 0).ZL51                          00136200
&ZLC                  SETA  35             COMMENT COLUMN               00136300
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00136400
&ZLC                  SETA  33             COMMENT COLUMN               00136500
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00136600
&ZLV                  SETC  '&ZLV'.' '                                  00136700
                      AGO   .ZL31                                       00136800
.*                                                                      00136900
.ZL41                 ANOP  ,                                           00137000
&ZLV                  SETC  '&ZLV'.' '                                  00137100
.ZL51                 ANOP  ,                                           00137200
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00137300
.*                                                                      00137400
&ZLL     &ZLOP &ZLV                                                     00137500
.*                                                                      00137600
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00137700
                      AGO   .ZL21          CONTINUE LOOPING             00137800
.*                                                                      00137900
.ZLX1                 ANOP  ,                                           00138000
.*******************************************************************    00138100
.***AP.X02  END OF IXZXIXCM MACRO                                       00138200
&ZIXZXIXCM            SETC  'YES'          SET IXZXIXCM USED            00138300
         POP   PRINT                                                    00138400
*                                            IXZXIXCM-1                 00138500
         SPACE 1                                                        00138600
.ZLX2                 ANOP  ,                                           00138700
         MEND                                                           00138800
**********************************************************************/ 00138900
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00139000
*%IXZXIXCM: MACRO KEYS(MSGTOKEN,GROUPTOKEN,RTNCODE,RSNCODE,PLISTVER,    00139100
*                 MF);                                                  00139200
*  ANS('?'!!MACLABEL!!' '!!'IXZPIXCM '!!MACLIST!!                       00139300
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00139400
*%END IXZXIXCM;                                                         00139500
