*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWMSCORF                              -01/31/13-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Set Correlator Flags                          * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 2007, 2013                         * 00001200
*                                                                     * 00001300
* STATUS= HBB7790                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      This service allows to set or clear certain correlator flags   * 00002100
*      in a provided EWLM correlator. These flags are contained in    * 00002200
*      byte 3 of the architected Application Response Measurement     * 00002300
*      (ARM) correlator format.                                       * 00002400
*                                                                     * 00002500
*      Note: for more details about ARM refer to the ARM V4 OpenGroup * 00002600
*      standard at http://www.opengroup.org/arm                       * 00002700
*                                                                     * 00002800
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00002900
*                                                                     * 00003000
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00003100
*                                                                     * 00003200
*01* ENVIRONMENT:                                                     * 00003300
*                                                                     * 00003400
*                                                                     * 00003500
*      Dispatchable unit mode: Task or SRB mode.                      * 00003600
*                                                                     * 00003700
*      Minimum authorization: Problem state or supervisor state.      * 00003800
*                                                                     * 00003900
*      AMODE:            31- or 64-bit.  If in 64-Bit addressing      * 00004000
*                        mode, code SYSSTATE AMODE64=YES before       * 00004100
*                        invoking this macro.                         * 00004200
*                                                                     * 00004300
*      ASC mode:         Primary.                                     * 00004400
*                                                                     * 00004500
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00004600
*                                                                     * 00004700
*      Interrupt status: Enabled for I/O and external interrupts.     * 00004800
*                                                                     * 00004900
*      Locks:            No locks held.  No restriction.              * 00005000
*                                                                     * 00005100
*      Control parameters: Control parameters must be in the primary  * 00005200
*                        address space.                               * 00005300
*                                                                     * 00005400
*                                                                     * 00005500
*                                                                     * 00005600
*01* PROGRAMMING REQUIREMENTS:                                        * 00005700
*    None.                                                            * 00005800
*                                                                     * 00005900
*01* RESTRICTIONS:                                                    * 00006000
*                                                                     * 00006100
*                                                                     * 00006200
*    1.  The caller is responsible for error recovery.                * 00006300
*                                                                     * 00006400
*    2.  The caller must serialize to prevent any correlator from     * 00006500
*        being accessed concurrently.                                 * 00006600
*                                                                     * 00006700
*                                                                     * 00006800
*                                                                     * 00006900
*01* INPUT REGISTER INFORMATION:                                      * 00007000
*                                                                     * 00007100
*    Before issuing the IWMSCORF macro, the caller does not have to   * 00007200
*    place any information into any register unless using it in       * 00007300
*    register notation for a particular parameter, or using it as a   * 00007400
*    base register.                                                   * 00007500
*                                                                     * 00007600
*01* OUTPUT REGISTER INFORMATION:                                     * 00007700
*                                                                     * 00007800
*    When control returns to the caller, the GPRs contain:            * 00007900
*                                                                     * 00008000
*                                                                     * 00008100
*    REGISTER  CONTENTS                                               * 00008200
*                                                                     * 00008300
*    0-1       Used as work register by the system                    * 00008400
*                                                                     * 00008500
*    2-13      Unchanged                                              * 00008600
*                                                                     * 00008700
*    14-15     Used as work register by the system                    * 00008800
*                                                                     * 00008900
*                                                                     * 00009000
*                                                                     * 00009100
*    When control returns to the caller, the ARs contain:             * 00009200
*                                                                     * 00009300
*                                                                     * 00009400
*    REGISTER  CONTENTS                                               * 00009500
*                                                                     * 00009600
*    0-1       Used as work registers by the system                   * 00009700
*                                                                     * 00009800
*    2-13      Unchanged                                              * 00009900
*                                                                     * 00010000
*    14-15     Used as work registers by the system.                  * 00010100
*                                                                     * 00010200
*                                                                     * 00010300
*                                                                     * 00010400
*    Some callers depend on register contents remaining the same      * 00010500
*    before and after issuing a service.  If the system changes the   * 00010600
*    contents of registers on which the caller depends, the caller    * 00010700
*    must save them before issuing the service, and restore them      * 00010800
*    after the system returns control.                                * 00010900
*                                                                     * 00011000
*01* PERFORMANCE IMPLICATIONS:                                        * 00011100
*                                                                     * 00011200
*    None                                                             * 00011300
*                                                                     * 00011400
*01* SYNTAX:                                                          * 00011500
*                                                                     * 00011600
*Ýxlabel¨  IWMSCORF     EWLM_CORR=xewlm_corr                          * 00011700
*                     Ý,SET_ASYNC_FLAG=»NO_SET_ASYNC!OFF!ONº¨         * 00011800
*                     Ý,SET_INDEP_FLAG=»NO_SET_INDEP!OFF!ONº¨         * 00011900
*                                                                     * 00012000
*                                                                     * 00012100
*      Where:                                                         * 00012200
*                                                                     * 00012300
*                                                                     * 00012400
*      Ýxlabel¨                                                       * 00012500
*          is an optional symbol, starting in column 1, that is the   * 00012600
*          name on the IWMSCORF macro invocation.  The name must      * 00012700
*          conform to the rules for an ordinary assembler language    * 00012800
*          symbol.                                                    * 00012900
*          DEFAULT: No name.                                          * 00013000
*                                                                     * 00013100
*                                                                     * 00013200
*                                                                     * 00013300
*                                                                     * 00013400
*      EWLM_CORR=xewlm_corr                                           * 00013500
*          is the name (RS-type), or address in register (2)-(12), of * 00013600
*          a required character input/output which contains an EWLM   * 00013700
*          (ARM) correlator. If the correlator is invalid             * 00013800
*          (architected length in the first two bytes is less than 4  * 00013900
*          or greater than 512) a call to this macro acts as a        * 00014000
*          no-operation and no change to the EWLM_CORR field is made. * 00014100
*                                                                     * 00014200
*                                                                     * 00014300
*                                                                     * 00014400
*                                                                     * 00014500
*      ÝSET_ASYNC_FLAG=»NO_SET_ASYNC!OFF!ONº¨                         * 00014600
*          is an optional keyword input which requests to update the  * 00014700
*          asynchronous flow flag.                                    * 00014800
*          DEFAULT: NO_SET_ASYNC                                      * 00014900
*                                                                     * 00015000
*                                                                     * 00015100
*          SET_ASYNC_FLAG=NO_SET_ASYNC                                * 00015200
*                                                                     * 00015300
*              indicates that parameter SET_ASYNC_FLAG has not been   * 00015400
*              specified and the asynchronous flow flag in the EWLM   * 00015500
*              correlator will not be changed.                        * 00015600
*                                                                     * 00015700
*          SET_ASYNC_FLAG=OFF                                         * 00015800
*                                                                     * 00015900
*              requests to clear the asynchronous flow flag. The      * 00016000
*              independent flag is also cleared, since the            * 00016100
*              independent flag may only be ON, if the asynchronous   * 00016200
*              flag is ON.                                            * 00016300
*                                                                     * 00016400
*          SET_ASYNC_FLAG=ON                                          * 00016500
*                                                                     * 00016600
*              requests to set the asynchronous flow flag to ON.      * 00016700
*                                                                     * 00016800
*                                                                     * 00016900
*                                                                     * 00017000
*                                                                     * 00017100
*                                                                     * 00017200
*                                                                     * 00017300
*      ÝSET_INDEP_FLAG=»NO_SET_INDEP!OFF!ONº¨                         * 00017400
*          is an optional keyword input which requests to update the  * 00017500
*          independent flag.                                          * 00017600
*          DEFAULT: NO_SET_INDEP                                      * 00017700
*                                                                     * 00017800
*                                                                     * 00017900
*          SET_INDEP_FLAG=NO_SET_INDEP                                * 00018000
*                                                                     * 00018100
*              indicates that parameter SET_INDEP_FLAG has not been   * 00018200
*              specified and the independent flag in the EWLM         * 00018300
*              correlator will not be changed.                        * 00018400
*                                                                     * 00018500
*          SET_INDEP_FLAG=OFF                                         * 00018600
*                                                                     * 00018700
*              requests to clear the independent flag.                * 00018800
*                                                                     * 00018900
*          SET_INDEP_FLAG=ON                                          * 00019000
*                                                                     * 00019100
*              requests to set the independent flag to ON. The        * 00019200
*              independent flag should be set only if the             * 00019300
*              asynchronous flag is already set or will be set by     * 00019400
*              this request.                                          * 00019500
*                                                                     * 00019600
*                                                                     * 00019700
*                                                                     * 00019800
*                                                                     * 00019900
*                                                                     * 00020000
*01* ABEND CODES:  None.                                              * 00020100
*                                                                     * 00020200
*01* RETURN CODES:  None.                                             * 00020300
*                                                                     * 00020400
*01* REASON CODES:  None.                                             * 00020500
*                                                                     * 00020600
*01* MODULE TYPE:  ASSEM MACRO                                        * 00020700
*                                                                     * 00020800
*02*   PROCESSOR:  ASSEM                                              * 00020900
*                                                                     * 00021000
*01* COMPONENT:  SCWLM                                                * 00021100
*                                                                     * 00021200
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00021300
*                                                                     * 00021400
*01* EXAMPLES:                                                        * 00021500
*                                                                     * 00021600
*01* MACRO USAGE NOTES:                                               * 00021700
*                                                                     * 00021800
*                                                                     * 00021900
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00022000
*        global macro variable.  Any value other than 'NO' will       * 00022100
*        result in the macro expansion being printed.  The default is * 00022200
*        'YES'.  The following examples illustrate how the ZPRINT     * 00022300
*        variable should be set.                                      * 00022400
*                                                                     * 00022500
*                    GBLC &ZPRINT                                     * 00022600
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00022700
*                                                                     * 00022800
*                                                                     * 00022900
*                                                                     * 00023000
*01* CHANGE ACTIVITY:                                                 * 00023100
*                                                                     * 00023200
*   Flag LineItem  FMID    Date   ID    Comment                       * 00023300
*                                                                     * 00023400
*    $L0=LEWLMQ   HBB7740 060814 3241KK:  Initial version             * 00023500
*    $L1=ME07735  HBB7740 060906 3241GB:  Minor updates to            * 00023600
*                                         description and code        * 00023700
*    $P1=ME24605  HBB7790 120815 3241MG:  Fixes AMG definitions       * 00023800
****** END OF SPECIFICATIONS *****************************************/ 00023900
*/********************************************************************* 00024000
         MACRO                                                          00024100
&XLABEL  IWMSCORF &EWLM_CORR=,&SET_ASYNC_FLAG=,&SET_INDEP_FLAG=         00024200
.*                                                                      00024300
*                    MACDATE -01/31/13-<0>                              00024400
.*                                                                      00024500
.*******************************************************************    00024600
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00024700
.*******************************************************************    00024800
                    GBLC  &ZPRINT     YES=PRINT NO=NO PRINT             00024900
                    GBLC  &ZTEST      YES=TEST NO=NO TEST               00025000
                    GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX       00025100
.*                                                                      00025200
                    GBLC  &ZIWMSCORF  YES=MACRO USED AT LEAST ONCE      00025300
.*******************************************************************    00025400
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00025500
.*******************************************************************    00025600
                    LCLC  &ZMS        ERROR MESSAGE WORK AREA           00025700
                    LCLC  &ZCNDX      SYSNDX CHARACTERS                 00025800
                    LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED        00025900
                    LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR       00026000
                    LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE       00026100
                    LCLA  &ZAWRK      USED AS A WORK AREA               00026200
                    LCLA  &ZASIZ      USED FOR SIZE OF VALUE            00026300
                    LCLA  &ZN         NUMERIC WORK VARIABLE             00026400
                    LCLC  &ZC         CHARACTER WORK VARIABLE           00026500
                    LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE       00026600
                    LCLA  &ZTLA       VALUE TOO LONG VARIABLE           00026700
                    LCLC  &ZMAC_G     "G" or null                       00026800
&ZMAC_G             SETC  ''                                            00026900
                    LCLC  &ZMAC_LR                                      00027000
&ZMAC_LR            SETC  'LR'                                          00027100
                    LCLC  &ZMAC_L                                       00027200
&ZMAC_L             SETC  'L'                                           00027300
                    LCLC  &ZMAC_ST                                      00027400
&ZMAC_ST            SETC  'ST'                                          00027500
                    LCLC  &ZMAC_LLGT                                    00027600
&ZMAC_LLGT          SETC  'L'                                           00027700
                    LCLC  &ZMAC_LGR                                     00027800
&ZMAC_LGR           SETC  'LR'                                          00027900
                    LCLC  &ZMAC_LG                                      00028000
&ZMAC_LG            SETC  'L'                                           00028100
                    LCLC  &ZMAC_STG                                     00028200
&ZMAC_STG           SETC  'ST'                                          00028300
                    LCLA  &ZMACRET    MACRO RETURN CODE                 00028400
&ZMACRET            SETA  0           ASSUME NO ERRORS                  00028500
.*                                                                      00028600
                    LCLC  &ZCSYSLIST(255)       NONXKEY, POS ARRAY      00028700
                    LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()        00028800
                    LCLA  &ZPLLEN     PARAMETER LIST LENGTH             00028900
                    LCLC  &ZENDBASEPL           End of base PL          00029000
.*******************************************************************    00029100
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00029200
.*******************************************************************    00029300
                    LCLC  &XEWLM_CORR           ++ NAME                 00029400
                    LCLC  &XSET_ASYNC_FLAG      ++ VALUE                00029500
                    LCLC  &XSET_INDEP_FLAG      ++ VALUE                00029600
.*******************************************************************    00029700
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00029800
.*******************************************************************    00029900
                    LCLC  &ZXEWLM_CORR          ++ INOUT NAME           00030000
                    LCLC  &ZXSET_ASYNC_FLAG     ++ INPUT VALUE          00030100
                    LCLC  &ZXSET_INDEP_FLAG     ++ INPUT VALUE          00030200
.********************************************************************   00030300
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00030400
.********************************************************************   00030500
                    ACTR  10000                                         00030600
.*----------------------------------------------------------------***   00030700
.***AG.KXVAR05 NAME, RQD INOUT, KEYS -XVARIABLE KEY                     00030800
                    AIF   (N'&EWLM_CORR LE 1).ZG2A  CK NUM              00030900
&ZMS                SETC  '"EWLM_CORR='                                 00031000
&ZMS                SETC  '&ZMS.&EWLM_CORR"'                            00031100
&ZMS                SETC  '&ZMS "EWLM_CORR"'                            00031200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00031300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00031400
.ZG2A               ANOP  ,                                             00031500
.*-------------------------------------------------------------------   00031600
.***AG.KXVAR06 NAME, RQD INOUT, KEYS -XVARIABLE                         00031700
&ZXEWLM_CORR        SETC  'INOUT'     SET IN/OUTPUT                     00031800
&XEWLM_CORR         SETC  '&EWLM_CORR(1)'       SET XVARIABLE           00031900
                    AIF   (N'&EWLM_CORR GT 1).ZG2B  MULTI PARMS         00032000
&XEWLM_CORR         SETC  '&EWLM_CORR'          SET XVARIABLE           00032100
.ZG2B               AIF   (K'&EWLM_CORR(1) GT 0).ZG2C                   00032200
&ZXEWLM_CORR        SETC  ''          RESET IN/OUTPUT                   00032300
&ZMS                SETC  ' '                                           00032400
&ZMS                SETC  '&ZMS "EWLM_CORR" KEY AND ITS'                00032500
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00032600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00032700
.ZG2C               ANOP  ,                                             00032800
.*-------------------------------------------------------------------   00032900
.***AG.KCK02 NAME, RQD INOUT, KEYS -GPR OUT OF RANGE                    00033000
                    AIF   (K'&ZXEWLM_CORR LE 0).ZG2R  NOT I/O           00033100
                    AIF   ('&XEWLM_CORR'(1,1) NE '(').ZG2R              00033200
&ZCGPR              SETC  '&XEWLM_CORR'(2,K'&XEWLM_CORR-2)              00033300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                   00033400
                    AIF   (K'&ZCGPR GT 2).ZG2Q                          00033500
                    AIF   ('&ZCGPR' EQ '0').ZG2Q                        00033600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00033700
                    AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME      00033800
.ZG2P               ANOP  ,                                             00033900
                    AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC           00034000
                    AIF   ('&ZCGPR' LT '2').ZG2Q                        00034100
                    AIF   ('&ZCGPR' LE '12').ZG2R                       00034200
.ZG2Q               ANOP  ,                                             00034300
&ZMS                SETC  '"EWLM_CORR='                                 00034400
&ZMS                SETC  '&ZMS.&EWLM_CORR"'                            00034500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00034600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00034700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00034800
.ZG2R               ANOP  ,                                             00034900
.*----------------------------------------------------------------***   00035000
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00035100
                    AIF   (N'&SET_ASYNC_FLAG LE 1).ZG5A  CK NUM         00035200
&ZMS                SETC  '"SET_ASYNC_FLAG='                            00035300
&ZMS                SETC  '&ZMS.&SET_ASYNC_FLAG"'                       00035400
&ZMS                SETC  '&ZMS "SET_ASYNC_FLAG"'                       00035500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00035600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00035700
.ZG5A               ANOP  ,                                             00035800
.*-------------------------------------------------------------------   00035900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00036000
&XSET_ASYNC_FLAG    SETC  ''          INITIALIZE XVARIABLE              00036100
.ZG6A   AIF   ('&SET_ASYNC_FLAG(1)' NE 'NO_SET_ASYNC').ZG7A             00036200
&XSET_ASYNC_FLAG    SETC  'NO_SET_ASYNC'        SET KEYWORD             00036300
.*-------------------------------------------------------------------   00036400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00036500
.ZG7A   AIF   ('&SET_ASYNC_FLAG(1)' NE 'OFF').ZG8A                      00036600
&XSET_ASYNC_FLAG    SETC  'OFF'       SET KEYWORD                       00036700
.*-------------------------------------------------------------------   00036800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00036900
.ZG8A   AIF   ('&SET_ASYNC_FLAG(1)' NE 'ON').ZG9A                       00037000
&XSET_ASYNC_FLAG    SETC  'ON'        SET KEYWORD                       00037100
.*-------------------------------------------------------------------   00037200
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00037300
.ZG9A               AIF   (K'&XSET_ASYNC_FLAG GT 0).ZG9C  KEYWORD       00037400
                    AIF   (K'&SET_ASYNC_FLAG(1) LE 0).ZG9B              00037500
&ZMS                SETC  '"SET_ASYNC_FLAG='                            00037600
&ZMS                SETC  '&ZMS.&SET_ASYNC_FLAG"'                       00037700
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00037800
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00037900
&ZMS                SETC  '&ZMS "NO_SET_ASYNC",'                        00038000
&ZMS                SETC  '&ZMS "OFF",'                                 00038100
&ZMS                SETC  '&ZMS OR "ON".'                               00038200
                    MNOTE 8,' &ZMS '                                    00038300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00038400
.ZG9B               ANOP  ,                                             00038500
&XSET_ASYNC_FLAG    SETC  'NO_SET_ASYNC'        SET DEFAULT KEYWORD     00038600
.ZG9C               ANOP  ,                                             00038700
&ZXSET_ASYNC_FLAG   SETC  'INPUT'     SET IN/OUTPUT                     00038800
.*----------------------------------------------------------------***   00038900
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00039000
                    AIF   (N'&SET_INDEP_FLAG LE 1).ZG11A  CK NUM        00039100
&ZMS                SETC  '"SET_INDEP_FLAG='                            00039200
&ZMS                SETC  '&ZMS.&SET_INDEP_FLAG"'                       00039300
&ZMS                SETC  '&ZMS "SET_INDEP_FLAG"'                       00039400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00039500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00039600
.ZG11A              ANOP  ,                                             00039700
.*-------------------------------------------------------------------   00039800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00039900
&XSET_INDEP_FLAG    SETC  ''          INITIALIZE XVARIABLE              00040000
.ZG12A   AIF   ('&SET_INDEP_FLAG(1)' NE 'NO_SET_INDEP').ZG13A           00040100
&XSET_INDEP_FLAG    SETC  'NO_SET_INDEP'        SET KEYWORD             00040200
.*-------------------------------------------------------------------   00040300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00040400
.ZG13A   AIF   ('&SET_INDEP_FLAG(1)' NE 'OFF').ZG14A                    00040500
&XSET_INDEP_FLAG    SETC  'OFF'       SET KEYWORD                       00040600
.*-------------------------------------------------------------------   00040700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00040800
.ZG14A   AIF   ('&SET_INDEP_FLAG(1)' NE 'ON').ZG15A                     00040900
&XSET_INDEP_FLAG    SETC  'ON'        SET KEYWORD                       00041000
.*-------------------------------------------------------------------   00041100
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00041200
.ZG15A              AIF   (K'&XSET_INDEP_FLAG GT 0).ZG15C  KEYWORD      00041300
                    AIF   (K'&SET_INDEP_FLAG(1) LE 0).ZG15B             00041400
&ZMS                SETC  '"SET_INDEP_FLAG='                            00041500
&ZMS                SETC  '&ZMS.&SET_INDEP_FLAG"'                       00041600
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00041700
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00041800
&ZMS                SETC  '&ZMS "NO_SET_INDEP",'                        00041900
&ZMS                SETC  '&ZMS "OFF",'                                 00042000
&ZMS                SETC  '&ZMS OR "ON".'                               00042100
                    MNOTE 8,' &ZMS '                                    00042200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00042300
.ZG15B              ANOP  ,                                             00042400
&XSET_INDEP_FLAG    SETC  'NO_SET_INDEP'        SET DEFAULT KEYWORD     00042500
.ZG15C              ANOP  ,                                             00042600
&ZXSET_INDEP_FLAG   SETC  'INPUT'     SET IN/OUTPUT                     00042700
.******************************************************************     00042800
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00042900
.******************************************************************     00043000
                    ACTR  10000                                         00043100
.*----------------------------------------------------------------***   00043200
.***AH.P02 EXTRA POSITIONALS                                            00043300
                    AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS          00043400
                    AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL          00043500
                    AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL      00043600
                    AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL       00043700
.ZGLISTX1           ANOP  ,                                             00043800
&ZCVAL              SETC  ''          ERROR FIELD                       00043900
&ZAWRK              SETA  0           POSITIONAL NUMBER                 00044000
.ZGLIST2            ANOP  ,                                             00044100
&ZAWRK              SETA  &ZAWRK+1    NEXT POSITIONAL                   00044200
                    AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE          00044300
&ZCVAL              SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA               00044400
                    AGO   .ZGLIST2                                      00044500
.*                                                                      00044600
.ZGLIST3            ANOP  ,                                             00044700
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA            00044800
&ZMS                SETC  'POSITIONAL ARGUMENT(S),'                     00044900
&ZMS                SETC  '&ZMS "&ZCVAL"'                               00045000
&ZMS                SETC  '&ZMS CANNOT BE USED.'                        00045100
&ZMS                SETC  '&ZMS NO POSITIONAL ARGUMENTS'                00045200
                    MNOTE 8,' &ZMS ARE ALLOWED.'                        00045300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00045400
.ZGLISTX            ANOP  ,                                             00045500
&ZASYSLNDX          SETA  0                                             00045600
.*******************************************************************    00045700
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00045800
.*******************************************************************    00045900
                    AIF   (&ZMACRET NE 0).ZLX2  ERROR DETECTED          00046000
.*******************************************************************    00046100
.***AE.01  START OF IWMSCORF MACRO CODE                                 00046200
.*******************************************************************    00046300
                    LCLC  &M0M0001                 NAME                 00046400
&M0M0001            SETC  '&XLABEL'                SET NAME             00046500
                    AIF   (K'&XLABEL NE 0).XLAB2                        00046600
&M0M0001            SETC  'M00M&SYSNDX'            DEFAULT NAME         00046700
.*                                                                      00046800
.XLAB2              ANOP  ,                                             00046900
&M0M0001 DS    0H                             IWMSCORF-0                00047000
.*******************************************************************    00047100
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00047200
.*******************************************************************    00047300
              PUSH  PRINT                                               00047400
                    AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON    00047500
                    PRINT OFF         ++ PR01                           00047600
                    AGO   .ZPRNTXX                                      00047700
.ZPRINTX            PRINT ON                                            00047800
.ZPRNTXX            ANOP  ,                                             00047900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00048000
         LCLC  &T1,&CR1                                                 00048100
         LCLA  &E1                                                      00048200
&E1      SETA  0                                                        00048300
         AIF   ('&XSET_ASYNC_FLAG' NE 'OFF').CHECKOK                    00048400
         AIF   ('&XSET_INDEP_FLAG' NE 'ON').CHECKOK                     00048500
&T1      SETC  'INDEP_FLAG MAY BE SET ONLY, IF ASYNC_FLAG IS SET'       00048600
&E1      SETA  8                                                        00048700
         MNOTE &E1,'&T1'                                                00048800
         MEXIT                                                          00048900
.CHECKOK ANOP                                                           00049000
         AIF   ('&XEWLM_CORR'(1,1) EQ '(').CORRREG                      00049100
.*       Correlator is provided in variable                             00049200
&CR1     SETC  '14'                                                     00049300
         LA    14,&XEWLM_CORR          ADDRESS CORRELATOR               00049400
         AGO   .CHECKLENGTH                                             00049500
.CORRREG       ANOP                                                     00049600
.*       Address of correlator is provided in register                  00049700
&CR1     SETC  '&XEWLM_CORR'(2,K'&XEWLM_CORR-2)                         00049800
.CHECKLENGTH   ANOP                                                     00049900
.*       Check correlator length                                        00050000
         LH    15,0(,&CR1)             FIRST TWO BYTES CONTAIN LENGTH   00050100
         CHI   15,4                                                     00050200
         JL    END&SYSNDX              CORR LENGTH MUST BE >= 4         00050300
         CHI   15,512                                                   00050400
         JH    END&SYSNDX              CORR LENGTH MUST BE <= 512       00050500
.*                                                                      00050600
.*       Correlator length is >= 4 and <= 512                           00050700
         AIF   ('&XSET_ASYNC_FLAG' NE 'ON').ASYNCFLAG1                  00050800
         AIF   ('&XSET_INDEP_FLAG' NE 'ON').SETASYNC                    00050900
.*       SET_ASYNC_FLAG=ON and SET_INDEP_FLAG=ON                        00051000
         OI    3(&CR1),B'00110000'     SET ASYNC_FLAG and INDEP_FLAG    00051100
         AGO   .ASYNCFLAG2                                              00051200
.SETASYNC      ANOP                                                     00051300
.*       SET_ASYNC_FLAG=ON and SET_INDEP_FLAG<>ON                       00051400
         OI    3(&CR1),B'00100000'     SET ASYNC FLAG                   00051500
         AGO   .ASYNCFLAG2                                              00051600
.ASYNCFLAG1    ANOP                                                     00051700
         AIF   ('&XSET_ASYNC_FLAG' NE 'OFF').ASYNCFLAG2                 00051800
.*       SET_ASYNC_FLAG=OFF specified                                   00051900
         NI    3(&CR1),B'11001111'     CLEAR ASYNC and INDEP FLAG       00052000
.ASYNCFLAG2    ANOP                                                     00052100
.*                                                                      00052200
.*                                                                      00052300
         AIF   ('&XSET_INDEP_FLAG' NE 'ON').INDEPFLAG1                  00052400
         AIF   ('&XSET_ASYNC_FLAG' EQ 'ON').INDEPFLAG2                  00052500
.*       SET_INDEP_FLAG=ON and SET_ASYNC_FLAG<>ON                       00052600
         OI    3(&CR1),B'00010000'     SET INDEP FLAG                   00052700
.INDEPFLAG1    ANOP                                                     00052800
         AIF   ('&XSET_INDEP_FLAG' NE 'OFF').INDEPFLAG2                 00052900
         AIF   ('&XSET_ASYNC_FLAG' EQ 'OFF').INDEPFLAG2                 00053000
.*       SET_INDEP_FLAG=OFF AND SET_ASYNC<>OFF                          00053100
         NI    3(&CR1),B'11101111'     CLEAR INDEP FLAG                 00053200
.INDEPFLAG2    ANOP                                                     00053300
.*                                                                      00053400
.*                                                                      00053500
END&SYSNDX DS  0H                      LABEL END PROCESSING             00053600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00053700
.********************************************************************   00053800
.***AL.A01  INTERNAL ARRAY TO PRODUCE FORMATTED CODE                    00053900
.********************************************************************   00054000
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00054100
                      LCLA  &ZOPN1         INVOCATION INDEX             00054200
                      LCLC  &ZOPL(4095)    LABEL                        00054300
                      LCLC  &ZOPO(4095)    OPERATION                    00054400
                      LCLC  &ZOPV(4095)    VALUE                        00054500
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00054600
.*                                                                      00054700
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00054800
.*******************************************************************    00054900
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00055000
.*******************************************************************    00055100
                      ACTR  10000                                       00055200
.*                                                                      00055300
                      LCLA  &ZLC           COLUMN POSITION              00055400
                      LCLA  &ZOPX          LIST TABLE INDEX             00055500
                      LCLC  &ZLL           LABEL                        00055600
                      LCLC  &ZLOP          OPERATION                    00055700
                      LCLC  &ZLV           VALUE                        00055800
                      LCLC  &ZLD           DESCRIPTION                  00055900
.*                                                                      00056000
&ZOPX                 SETA  1                                           00056100
.*******************************************************************    00056200
.***AP.X01  FORMAT GENERATED CODE                                       00056300
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00056400
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00056500
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00056600
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00056700
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00056800
                      AIF   (K'&ZLD LE 0).ZL51                          00056900
&ZLC                  SETA  35             COMMENT COLUMN               00057000
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00057100
&ZLC                  SETA  33             COMMENT COLUMN               00057200
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00057300
&ZLV                  SETC  '&ZLV'.' '                                  00057400
                      AGO   .ZL31                                       00057500
.*                                                                      00057600
.ZL41                 ANOP  ,                                           00057700
&ZLV                  SETC  '&ZLV'.' '                                  00057800
.ZL51                 ANOP  ,                                           00057900
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00058000
.*                                                                      00058100
&ZLL     &ZLOP &ZLV                                                     00058200
.*                                                                      00058300
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00058400
                      AGO   .ZL21          CONTINUE LOOPING             00058500
.*                                                                      00058600
.ZLX1                 ANOP  ,                                           00058700
.*******************************************************************    00058800
.***AP.X02  END OF IWMSCORF MACRO                                       00058900
&ZIWMSCORF            SETC  'YES'          SET IWMSCORF USED            00059000
         POP   PRINT                                                    00059100
*                                            IWMSCORF-0                 00059200
         SPACE 1                                                        00059300
.ZLX2                 ANOP  ,                                           00059400
         MEND                                                           00059500
**********************************************************************/ 00059600
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00059700
*%IWMSCORF: MACRO KEYS(EWLM_CORR,SET_ASYNC_FLAG,SET_INDEP_FLAG);        00059800
*  ANS('?'!!MACLABEL!!' '!!'IWMSCORP '!!MACLIST!!                       00059900
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00060000
*%END IWMSCORF;                                                         00060100
