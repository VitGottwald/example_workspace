*                                                                       00050000
* %DCL BPXYTHDQ_INCLUDED CHAR EXT;                                      00100000
* %DEACTIVATE BPXYTHDQ_INCLUDED;                                        00150000
* %IF BPXYTHDQ_INCLUDED = '' %THEN                                      00200000
* %DO;                                                                  00250000
*/* Macro made bi-lingual on 01087. CBGEN compile date 00290         */ 00300000
*% /*                                                                   00350000
         MACRO                                                          00400000
         BPXYTHDQ &DSECT=YES,&LIST=YES,&TITLE=YES,&THDQ=YES             00450000
         GBLC  &BPXYTHDQ_INCLUDED                                       00500000
         GBLC  &ZCBPRINT                                                00550000
&BPXYTHDQ_INCLUDED SETC 'YES'                                           00600000
         AIF   ('&LIST' EQ 'NONE').P0                                   00650000
         AIF   ('&TITLE' EQ 'NO').P5                                    00700000
 TITLE   'BPXYTHDQ  - Mapping of THDQ structure for the BPX1PQG       '*00750000
                                                                        00800000
.P5      ANOP                                                           00850000
**/ BPXYTHDQ_1:;                                                        00900000
*/****START OF SPECIFICATIONS****************************************** 00950000
*                                                                       01000000
*    $MAC (BPXYTHDQ) COMP(SCPX1) PROD(BPX):                             01050000
*                                                                       01100000
*01* MACRO NAME: BPXYTHDQ                                               01150000
*                                                                       01200000
*01* DSECT NAME: THDQ                                                   01250000
*                                                                       01300000
*01* DESCRIPTIVE NAME: Mapping of THDQ structure for the BPX1PQG        01350000
*                      callable service                                 01400000
*                                                                       01450000
*02*   ACRONYM: THDQ                                                    01500000
**/                                                                     01550000
*/*01* PROPRIETARY STATEMENT=                                        */ 01600000
*/***PROPRIETARY_STATEMENT********************************************/ 01650000
*/*                                                                  */ 01700000
*/*                                                                  */ 01750000
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */ 01800000
*/* THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      */ 01850000
*/* 5694-A01 (C) COPYRIGHT IBM CORP. 2001, 2003                      */ 01900000
*/*                                                                  */ 01950000
*/* STATUS= HBB7709                                                  */ 02000000
*/*                                                                  */ 02050000
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 02100000
*/*                                                                     02150000
*01* EXTERNAL CLASSIFICATION:  GUPI                                     02200000
*01* END OF EXTERNAL CLASSIFICATION:                                    02250000
*                                                                       02300000
*01* FUNCTION:                                                          02350000
*                                                                       02400000
*      The THDQ maps the THDQ structure that is supplied to the         02450000
*      BPX1PQG callable service.                                        02500000
*                                                                       02550000
*                                                                       02600000
*01* METHOD OF ACCESS:                                                  02650000
*                                                                       02700000
*02*   PL/X:                                                            02750000
*                                                                       02800000
*        %INCLUDE SYSLIB(BPXYTHDQ)                                      02850000
*        By default, the THDQ is based on ThdqPtrG. If                  02900000
*        other basing is desired, use %THDQBASE='BASED(XXXXXX)'.        02950000
*        If %THDQBASE='BASED(ThdqPtrG)' is coded, a Declare for         03000000
*        ThdqPtrG is also generated.                                    03050000
*                                                                       03100000
*                                                                       03150000
*02*   ASM:                                                             03200000
*        With DSECT=NO, storage is allocated in line                    03250000
*        and addressability is provided thru that DSECT or CSECT.       03300000
*        With DSECT=YES, a DSECT is produced and "USING THDQ,reg"       03350000
*        is required for addressability.  Here "reg" contains the       03400000
*        address of THDQ#LENGTH bytes of storage.                       03450000
*        The default is DSECT=YES.                                      03500000
*                                                                       03550000
*01* SIZE: THDQ#LENGTH                                                  03600000
*            THDQ -- X'0130' bytes                                      03650000
*                                                                       03700000
*01* POINTED TO BY: ThdqPtrG,ThdqPtr, FqwaThdqptr/64                    03750000
*                                                                       03800000
*01* CREATED BY: Storage obtained by caller of BPX1PQG callable service 03850000
*                                                                       03900000
*01* DELETED BY: Caller of BPX1PQG callable service                     03950000
*                                                                       04000000
*01* STORAGE ATTRIBUTES:                                                04050000
*02*   SUBPOOL/DATASPACE:  User Subpool                                 04100000
*02*   KEY:                Key of Caller of BPX1PQG                     04150000
*02*   RESIDENCY:          Anywhere                                     04200000
*                                                                       04250000
*01* FREQUENCY: 1 per call to BPX1PQG                                   04300000
*                                                                       04350000
*01* SERIALIZATION: N/A                                                 04400000
*                                                                       04450000
*01* DEPENDENCIES: None                                                 04500000
*                                                                       04550000
*01* NOTES: None                                                        04600000
*                                                                       04650000
*01* COMPONENT:  OpenMVS (SCPX1)                                        04700000
*                                                                       04750000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     04800000
*                                                                       04850000
*01* EYE-CATCHER: THDQ                                                  04900000
*02*   OFFSET:  0                                                       04950000
*02*   LENGTH:  4                                                       05000000
*                                                                       05050000
*01* CHANGE-ACTIVITY:                                                   05100000
*    $D0=DXVA409  HBB7704 000315 PDI6: Fast Pthread Quiesce A409.01     05150000
*    $P1=DXV0206  HBB7704 000605 PDJI: Add ThdqNoData                   05200000
*    $D1=DYN0519  HBB7708 001031 PDJZ: 64 bit support                   05250000
*    $D2=DYVA551  HBB7707 010221 PDJI: A551.00 Enhanced pthread quiesce 05275000
*    $P2=PYN0220  HBB7708 020301 PDFO: Bilingual fixup                  05287500
*                                                                       05300000
****END OF SPECIFICATIONS*********************************************/ 05350000
*% /*                                                                   05400000
.P0      ANOP                                                           05450000
         AIF   ('&ZCBPRINT' EQ 'NO').P1                                 05500000
         AIF   ('&LIST' EQ 'YES').P2                                    05550000
.P1      ANOP                                                           05600000
         PUSH  PRINT                                                    05650000
         PRINT OFF                                                      05700000
.P2      ANOP                                                           05750000
         AIF   ('&THDQ' EQ 'NO').L0002                                  05800000
         AIF   ('&DSECT' EQ 'YES').L0003                                05850000
         AIF   ('&THDQ' NE 'YES').L0002                                 05900000
THDQ     DS    0F        THDQ - THDQ structure for BPX1PQG callable    *05950000
                         service                                        06000000
         AGO   .L0004                                                   06050000
.L0003   ANOP                                                           06100000
THDQ     DSECT           THDQ - THDQ structure for BPX1PQG callable    *06150000
                         service                                        06200000
.L0004   ANOP                                                           06250000
THDQHDR  DS    1CL0048   +0 Header section                              06283300
         ORG   THDQHDR                                                  06316600
THDQEYE  DS    1CL0004   +0 eye catcher - 'THDQ'                        06350000
THDQLENGTH DS  1FL2      +4 Length of THDQ structure                    06400000
THDQVERSION DS 1FL2      +6 Version number                              06450000
THDQNUMENTS DS 1FL4      +8 Number of entries in thread array          *06500000
                         ThdqArray                                      06550000
THDQFLAGS DS   1FL4      +C Flags relating to contents of structure     06580000
         ORG   THDQFLAGS                                                06610000
THDQFLAGS1 DS  1FL1      +C 1st flag byte                               06640000
         ORG   THDQFLAGS1                                               06670000
THDQALLSAFE EQU X'80'    All threads are frozen in a safe state         06700000
         ORG   THDQFLAGS1+X'00000001'                                   06750000
THDQFLAGS2 DS  1FL1      +D 2nd flag byte                               06791600
THDQFLAGS3 DS  1FL1      +E 3rd flag byte (used by exit). Cleared on   *06833200
                         initial call to LE exit                        06874800
THDQFLAGS4 DS  1FL1      +F 4th flag byte                               06916400
         ORG   THDQFLAGS4                                               06958000
THDQGETSTATE EQU X'80'   Get State Data requested by caller (input to  *07000000
                         exit)                                          07050000
         ORG   THDQFLAGS+X'00000004'                                    07100000
THDQEXITWKA DS 1CL0016   +10 Reserved for registered LE exit            07150000
         DS    1CL0016   +20 Reserved                                   07200000
THDQDYN  DS    0C        +30 Dynamic section                            07250000
*                                                                       07300000
*      ***************************************************************  07350000
*      *                                                             *  07400000
*      * Declare array of thread areas                               *  07450000
*      *                                                             *  07500000
*      ***************************************************************  07550000
*                                                                       07600000
*                                                                       07650000
THDQARRAY DS   1CL0256   Array of Thread Areas                          07683300
         ORG   THDQARRAY                                                07716600
THDQATHID DS   1CL0008   Thread ID of target thread                     07750000
THDQAFLAGS DS  1FL4      Flags returned for target thread               07780000
         ORG   THDQAFLAGS                                               07810000
THDQAFLAGS1 DS 1FL1      Flag1 returned for target thread               07840000
         ORG   THDQAFLAGS1                                              07870000
THDQANOTFOUND EQU X'80'  Thread was not found, no data was returned     07900000
THDQAQFRZSAFE EQU X'40'  Thread is now frozen in a safe state          *07950000
                         determined by Language Env Exit                08000000
THDQAOTHERLE EQU X'20'   Thread is part of other language environment  *08050000
                         process                                        08100000
THDQANODATA EQU X'10'    Status data is not available for this thread  *08150000
                         (if Get State is requested). The PSW/Regs and *08200000
                         other status info are not valid. The thread   *08250000
                         may be in the process of being created.        08300000
THDQACONDWAIT EQU X'08'  Task is in Condition Wait.                    *08314200
                         If this bit is set, only the DSA ptr --       *08328400
                         Reg13 or Reg4 -- is returned. ThdQAPswIA      *08342600
                         and all the other regs in ThdQARegs are set   *08356800
                         to 0.  (Caller should already have properly   *08371000
                         saved the PSW and registers information.)      08385200
         ORG   THDQAFLAGS1+X'00000001'                                  08400000
THDQAFLAGS2 DS 1FL1      Flag2 returned for target thread               08450000
THDQAFLAGS3 DS 1FL1      Flag3 returned for target thread               08500000
THDQAFLAGS4 DS 1FL1      Flag4 -- internal flags used by system         08533300
         ORG   THDQAFLAGS4                                              08566600
THDQAQUICKFRZ EQU X'80'  Thread was frozen without going through the   *08600000
                         RTL SIR or the slow freeze exit routine.      *08650000
                         1=quick freeze (Status stopped) 0=traditional *08700000
                         freeze                                         08750000
THDQAREGSOK EQU X'40'    Registers and PSW retrieved OK                 08800000
THDQASKIP EQU  X'20'     1 = LE exit should not look at this thread.    08825000
         ORG   THDQAFLAGS+X'00000004'                                   08850000
THDQAREGSSRC DS 1FL2     (Internal) Source from which the regs are     *08900000
                         retrieved. Valid if ThdqARegsOK set.           08950000
         DS    1CL0002   Reserved                                       09000000
THDQAREGS DS   1CL0128   Registers of target thread                     09033300
         ORG   THDQAREGS                                                09066600
THDQAREGSH DS  1CL0064   High registers 0-15                            09100000
THDQAREGSL DS  1CL0064   Low registers 0-15                             09150000
THDQADOWNSTACKPTR DS 1CL0008 Down Stack start address of target thread *09200000
                         (For XPLINK)                                   09250000
         ORG   THDQADOWNSTACKPTR                                        09275000
THDQADSTACKPTRH DS 1AL4  High part of Stack address                     09300000
THDQADSTACKPTRL DS 1AL4  Low part of Stack address                      09350000
THDQAUPSTACKPTR DS 1CL0008 Up Stack start address of target thread      09383300
         ORG   THDQAUPSTACKPTR                                          09416600
THDQAUSTACKPTRH DS 1AL4  High part of Stack address                     09450000
THDQAUSTACKPTRL DS 1AL4  Low part of Stack address                      09500000
THDQAPSWIA DS  1CL0008   Instruction address of target thread           09533300
         ORG   THDQAPSWIA                                               09566600
THDQAPSWIAH DS 1AL4      High part of instruction addr                  09600000
THDQAPSWIAL DS 1AL4      Low part of instruction addr                   09650000
THDQACAAPTR DS 1CL0008   LE CAA pointer for thread                      09683300
         ORG   THDQACAAPTR                                              09716600
THDQACAAPTRH DS 1AL4     High part of CAA pointer                       09750000
THDQACAAPTRL DS 1AL4     Low part of CAA pointer                        09800000
         DS    1CL0004   Reserved                                       09850000
THDQATCBPTR DS 1AL4      TCB Pointer for target thread                  09900000
THDQAEXITWKA DS 1CL0008  Thread work area used by LE exit (for PD)      09950000
         DS    1CL0064   Reserved                                       10000000
*                                                                       10050000
*   Declare constants                                                   10100000
*                                                                       10150000
*                                                                       10200000
THDQ#REGSPPSD EQU 1      Regs from PPSD                                 10250000
THDQ#REGSIRB EQU 2       Regs from IRB                                  10300000
THDQ#REGSUSTA EQU 3      Regs from USTA                                 10350000
THDQ#REGSLS EQU 4        Regs from link stack                           10400000
THDQ#REGSTCB EQU 5       Regs from TCB/STCB                             10450000
THDQ#REGSRB EQU 6        Regs from RB/XSB                               10500000
THDQ#REGSCW EQU 7        Regs for CondWait. Status returned as zeroes   10525000
THDQ#ID  EQU   C'THDQ'   Eye catcher                                    10550000
THDQ#VER EQU   1         Current version of control block               10600000
THDQ#VER01 EQU 1         Version 1 of control block                     10650000
THDQ_LEN EQU   *-THDQ                                                   10700000
.L0002   ANOP                                                           10750000
         AIF   ('&ZCBPRINT' EQ 'NO').P3                                 10800000
         AIF   ('&LIST' EQ 'YES').P4                                    10850000
.P3      ANOP                                                           10900000
         POP   PRINT                                                    10950000
.P4      ANOP                                                           11000000
.P_EXIT  ANOP                                                           11050000
         MEND  ,                  Terminating PL/X comment           */ 11087500
*                                                                       11125000
* BPXYTHDQ_2:;                                                          11162500
* %BPXYTHDQ_INCLUDED = 'YES';                                           11200000
* %DCL ZCBPRINT CHAR EXT;                                               11250000
* %DEACTIVATE ZCBPRINT;                                                 11300000
* %DCL BPXYTHDQ_LIST CHAR EXT;                                          11350000
* %DEACTIVATE BPXYTHDQ_LIST;                                            11400000
* %IF BPXYTHDQ_LIST ^= 'NO' &                                           11450000
*    ZCBPRINT ^= 'NO' %THEN                                             11500000
*   %GOTO BPXYTHDQ_3;                                                   11550000
*   @LIST PUSH NOECHO;                                                  11600000
*   @LIST NOASSEMBLE NOECHO;                                            11650000
*   @LIST OFF C NOECHO;                                                 11700000
* %BPXYTHDQ_3:;                                                         11750000
*/* Start of PL/X Source                                             */ 11800000
*%IF THDQBASE='' %THEN                                                  11850000
*  %DO;                                                                 11900000
*    %THDQBASE='BASED(ThdqPtrG)';                                       11950000
*  %END;                                                                12000000
* %IF THDQBASE='BASED(ThdqPtrG)' %THEN                                  12050000
*   %DO;                                                                12100000
*     DCL                                                               12150000
*       1 ThdqPtrC Char(8) BDY(DWORD),           /* Thdq  addr  @D1A*/  12200000
*         3 ThdqPtrG  Ptr(64),                                          12250000
*           5 *       Fixed(32),                                        12300000
*           5 ThdqPtr Ptr(31);                                          12350000
*   %END;                                                               12400000
*DCL                                                                    12450000
* 1 THDQ THDQBASE,                /* THDQ - THDQ structure for          12500000
*                                    BPX1PQG callable service        */ 12550000
*  2 ThdqHdr,                     /* +0 Header section               */ 12600000
*   3 ThdqEye       Char(4),      /* +0 eye catcher - 'THDQ'         */ 12650000
*   3 ThdqLength    Fixed(16),    /* +4 Length of THDQ structure     */ 12700000
*   3 ThdqVersion   Fixed(16),    /* +6 Version number               */ 12750000
*   3 ThdqNumEnts   Fixed(32),    /* +8 Number of entries in thread     12800000
*                                    array ThdqArray                 */ 12850000
*   3 ThdqFlags     Fixed(32),    /* +C Flags relating to contents of   12900000
*                                    structure                       */ 12950000
*    5 ThdqFlags1  Fixed(8),      /* +C 1st flag byte              */   13000000
*     7 ThdqAllSafe   Bit(1),     /* All threads are frozen in a        13050000
*                                    safe state                      */ 13100000
*    5 ThdqFlags2   Fixed(8),     /* +D 2nd flag byte                */ 13150000
*    5 ThdqFlags3   Fixed(8),     /* +E 3rd flag byte (used by exit).   13200000
*                                    Cleared on initial call to LE      13250000
*                                    exit                            */ 13300000
*    5 ThdqFlags4   Fixed(8),     /* +F 4th flag byte                */ 13350000
*     7 ThdqGetState  Bit(1),     /* Get State Data requested by        13400000
*                                    caller (input to exit)          */ 13450000
*   3 ThdqExitWkA   Char(16),     /* +10 Reserved for registered LE     13500000
*                                    exit                            */ 13550000
*   3 *             Char(16),     /* +20 Reserved                    */ 13600000
*  2 ThdqDyn,                     /* +30 Dynamic section             */ 13650000
*   /*****************************************************************/ 13700000
*   /* Declare array of thread areas                                 */ 13750000
*   /*****************************************************************/ 13800000
*   3 ThdqArray(*),              /* Array of Thread Areas            */ 13850000
*    5 ThdqAThid     Char(8),    /* Thread ID of target thread       */ 13900000
*    5 ThdqAFlags   Fixed(32),   /* Flags returned for target thread */ 13950000
*     7 ThdqAFlags1 Fixed(8),    /* Flag1 returned for target thread */ 14000000
*      9 ThdqANotFound Bit(1),   /* Thread was not found, no data was   14050000
*                                   returned                         */ 14100000
*      9 ThdqAQFrzSafe Bit(1),   /* Thread is now frozen in a safe      14150000
*                                   state determined by Language        14200000
*                                   Env Exit                         */ 14250000
*      9 ThdqAOtherLE  Bit(1),   /* Thread is part of other language    14300000
*                                   environment process              */ 14350000
*      9 ThdqANoData   Bit(1),   /* Status data is not available for    14400000
*                                   this thread (if Get State is        14450000
*                                   requested).  The PSW/Regs and       14500000
*                                   other status info are not valid.    14550000
*                                   The thread may be in the process    14600000
*                                   of being created.            @P1A*/ 14650000
*      9 ThdqACondWait Bit(1),   /* Task is in Condition Wait.          14657100
*                                   If this bit is set, only the        14662400
*                                   DSA ptr -- Reg13 or Reg4 -- is      14667700
*                                   returned. ThdQAPswIA and all the    14673000
*                                   other regs in ThdQARegs are set     14678300
*                                   to 0.  (Caller should already       14683600
*                                   have properly saved the PSW and     14688900
*                                   registers information.)      @D2A*/ 14694200
*     7 ThdqAFlags2 Fixed(8),    /* Flag2 returned for target thread */ 14700000
*     7 ThdqAFlags3 Fixed(8),    /* Flag3 returned for target thread */ 14750000
*     7 ThdqAFlags4 Fixed(8),    /* Flag4 -- internal flags used by     14800000
*                                   system                           */ 14850000
*      9 ThdqAQuickFrz Bit(1),   /* Thread was frozen without going     14900000
*                                   through the RTL SIR or the slow     14950000
*                                   freeze exit routine.                15000000
*                                   1=quick freeze (Status stopped)     15050000
*                                   0=traditional freeze             */ 15100000
*      9 ThdqARegsOK   Bit(1),   /* Registers and PSW retrieved OK   */ 15150000
*      9 ThdqASkip     Bit(1),   /* 1 = LE exit should not look at      15166600
*                                   this thread.                 @D2A*/ 15183200
*    5 ThdqARegsSrc  Fixed(16),  /* (Internal) Source from which the    15200000
*                                   regs are retrieved. Valid if        15250000
*                                   ThdqARegsOK set.                 */ 15300000
*    5 *           Char(2),      /* Reserved                         */ 15350000
*    5 ThdqARegs,                /* Registers of target thread       */ 15400000
*     7 ThdqARegsH Char(64),     /* High registers 0-15              */ 15450000
*     7 ThdqARegsL Char(64),     /* Low registers 0-15               */ 15500000
*    5 ThdqADownStackPtr,        /* Down Stack start address of target  15550000
*                                   thread (For XPLINK)              */ 15600000
*     7 ThdqADStackPtrH Ptr(31), /* High part of Stack address       */ 15650000
*     7 ThdqADStackPtrL Ptr(31), /* Low part of Stack address        */ 15700000
*    5 ThdqAUpStackPtr,          /* Up Stack start address of target    15750000
*                                   thread                           */ 15800000
*     7 ThdqAUStackPtrH Ptr(31), /* High part of Stack address       */ 15850000
*     7 ThdqAUStackPtrL Ptr(31), /* Low part of Stack address        */ 15900000
*    5 ThdqAPSWIA,               /* Instruction address of target       15950000
*                                   thread                           */ 16000000
*     7 ThdqAPswIAH     Ptr(31), /* High part of instruction addr    */ 16050000
*     7 ThdqAPswIAL     Ptr(31), /* Low part of instruction addr     */ 16100000
*    5 ThdqACaaPtr,              /* LE CAA pointer for thread        */ 16150000
*     7 ThdqACaaPtrH    Ptr(31), /* High part of CAA pointer         */ 16200000
*     7 ThdqACaaPtrL    Ptr(31), /* Low part of CAA pointer          */ 16250000
*    5 *                Char(4), /* Reserved                         */ 16300000
*    5 ThdqATcbPtr      Ptr(31), /* TCB Pointer for target thread    */ 16350000
*    5 ThdqAExitWkA     Char(8), /* Thread work area used by LE         16400000
*                                   exit (for PD)                    */ 16450000
*    5 *               Char(64); /* Reserved                         */ 16500000
*                                                                       16550000
*/* Declare constants                                                */ 16600000
*DCL                             /* Declare values for ThdqARegsSrc  */ 16650000
* Thdq#RegsPPSD Fixed(16)  Constant(1), /* Regs from PPSD            */ 16700000
* Thdq#RegsIRB  Fixed(16)  Constant(2), /* Regs from IRB             */ 16750000
* Thdq#RegsUSTA Fixed(16)  Constant(3), /* Regs from USTA            */ 16800000
* Thdq#RegsLS   Fixed(16)  Constant(4), /* Regs from link stack      */ 16850000
* Thdq#RegsTCB  Fixed(16)  Constant(5), /* Regs from TCB/STCB        */ 16900000
* Thdq#RegsRB   Fixed(16)  Constant(6), /* Regs from RB/XSB      @D2C*/ 16925000
* Thdq#RegsCW   Fixed(16)  Constant(7); /* Regs for CondWait. Status    16950000
*                                          returned as zeroes    @D2A*/ 16975000
*DCL                                                                    17000000
* Thdq#ID  Char(4)   Constant('THDQ'),  /* Eye catcher               */ 17050000
* Thdq#Ver Fixed(16) Constant(Thdq#Ver01), /* Current version of        17100000
*                                   control block                    */ 17150000
* Thdq#Ver01 Fixed(16) Constant(1);   /* Version 1 of control block  */ 17200000
*/* End of PL/X Source                                               */ 17250000
* %IF BPXYTHDQ_LIST ^= 'NO' &                                           17300000
*    ZCBPRINT ^= 'NO' %THEN                                             17350000
*   %GOTO BPXYTHDQ_4;                                                   17400000
*   @LIST POP NOECHO;                                                   17450000
* %BPXYTHDQ_4:;                                                         17500000
* %END;                                                                 17550000
