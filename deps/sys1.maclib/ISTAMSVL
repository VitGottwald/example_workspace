*/********************* START OF SPECIFICATIONS **********************/         
*/*                                                                  */         
*/* MAPPING NAME: ISTAMSVL                                           */         
*/*                                                                  */         
*/* DESCRIPTIVE NAME:  Access Method Support Vector List             */         
*/*                                                                  */         
*/*                                                                  */         
*/* COPYRIGHT = LICENSED MATERIALS - PROPERTY OF IBM                 */         
*/*                                                                  */         
*/*             THIS PRODUCT CONTAINS                                */         
*/*             "RESTRICTED MATERIALS OF IBM"                        */         
*/*                                                                  */         
*/*             Licensed Materials - Property of IBM                 */         
*/*             5650-ZOS Copyright IBM Corp. 1996,  2016             */         
*/*             Status = CSV2R2                                      */         
*/*                                                                  */         
*/*             U.S. GOVERNMENT USERS RESTRICTED RIGHTS -            */         
*/*             USE, DUPLICATION OR DISCLOSURE RESTRICTED            */         
*/*             BY GSA ADP SCHEDULE CONTRACT WITH IBM CORP.          */         
*/*                                                                  */         
*/*             SEE COPYRIGHT INSTRUCTIONS.                          */         
*/*                                                                  */         
*/*                                                                  */         
*/* MAPPING USER'S GUIDE:                                            */         
*/*                                                                  */         
*/*    FUNCTION:                                                     */         
*/*       ISTAMSVL contains mappings for a collection of vectors     */         
*/*       provided by VTAM to the application in the Access Method   */         
*/*       Support Vector List.                                       */         
*/*                                                                  */         
*/*       Vectors are addressible via ACBAMSVL after OPEN for        */         
*/*       the ACB has completed.                                     */         
*/*                                                                  */         
*/*    METHOD OF INCLUSION:                                          */         
*/*       By invocation as a mapping macro in assembler programs.    */         
*/*       By ATBUILD or %INCLUDE in PL/X programs.                   */         
*/*                                                                  */         
*/*                                                                  */         
*/*    RESTRICTIONS / DEPENDENCIES: None.                            */         
*/*                                                                  */         
*/*    NOTES:  None                                                  */         
*/*                                                                  */         
*/* EXTERNAL REFERENCES:  None.                                      */         
*/*                                                                  */         
*/*                                                                  */         
*/* CHANGE ACTIVITY:                                                 */         
*/*                                                                  */         
*/* $MAC(ISTAMSVL),COMP(O/C),PROD(VTAM): ACCESS METHOD SUPPORT VECTOR*/         
*/*                                     LIST                         */         
*/*                                                                  */         
*/* FLAG REASON   RELEASE DATE   ORIGIN  FLAG DESCRIPTORS            */         
*/* ---- -------- ------- ------ ------  --------------------------- */         
*/* $W0= P116769  VMAPPN  941010 879315: Create AMSVL mapping        */         
*/* $D1= IA@@@MST V51APPC 941102 941213: APPCCMD enhancements        */         
*/* $D2= IT@@@MST TSOGR   941118 062811: TSO-Generic Resource        */         
*/* $D3= ID@@@MST FPAPI   941128 510689: Fast Path API for APPC      */         
*/* $D4= IL@@@MST LUOWN   950124 941213: LU = OWN                    */         
*/* $D5= IB@@@MST PWSUB   950508 941213: Password substitution       */         
*/* $S1= P119332  VMAPPN  950706 879315: Fix DISTLIB (UNIMOD change) */         
*/* $D6= IE@@@MST V44DCE  951110 349121: DCE Security Services       */         
*/* $N1= P126308  POLARIS 970918 879315: EXITFRR= on ACB PARMS       */         
*/*                                                                  */         
*/* Flag Reason   Release  Date   Origin    Description              */         
*/* ---- -------- -------- ------ --------  ------------------------ */         
*/* $R1= X16MNPRT CSV1R6   031006 GIERLACH: MNPS Predatory Takeover  */         
*/* $H1= RCTELMAC CSV1R12  091112 Cruse   : User CV support          */         
*/* $A1= OA49911  HVT6220  161013 Cruse   : 3270 Data Stream         */         
*/*                                         Monitoring API           */         
*/*                                         (Sysroute of OA48802)    */         
*/********************** END OF SPECIFICATIONS ***********************/         
*@LISTPUSH;                                                                     
*@LISTOFF;                                                                      
*                                   /* BILINGUAL HEADER                         
*                                                                               
         MACRO                                                                  
         ISTAMSVL                                                               
ISTAMSVL DSECT                      MAPPING FOR RESOURCE INFORMATION            
*                                   VECTOR LIST POINTED TO BY ACVAMSVL          
AMSLLEN  DS    HL2                  TOTAL LENGTH OF VECTORS                     
AMSLDATA DS    0X                   VECTOR DATA                                 
*                                                                               
***********************************************************************         
***  GENERALIZED MAPPING FOR EXAMINING COMMON FIELDS IN ALL ACB      **         
***  VECTORS IN THE VECTOR LIST POINTED TO BY ACBAMSVL               **         
***********************************************************************         
ISTAMSVT DSECT                      VECTOR FIELDS                               
AMSVTLEN DS    X                    VECTOR LENGTH                               
AMSVTKEY DS    X                    VECTOR KEY                                  
AMSVTDAT DS    0X                   VECTOR DATA                                 
*                                                                               
*                                                                               
***********************************************************************         
*** ISTAMS01 - maps the RELEASE LEVEL vector.                        **         
***          - Contains identification codes for the access method   **         
***            product and its version, release, and modification    **         
***            level.                                                **         
***********************************************************************         
ISTAMS01 DSECT                      RELEASE LEVEL VECTOR                        
AMS01LEN DS    X                    VECTOR LENGTH                               
AMS01KEY DS    X                    VECTOR KEY                                  
AMS01KYC EQU   X'01'                KEY IS X'01'                                
AMS01DTA DS    0CL4                 VECTOR DATA                                 
AMS01PRD DS    CL1                  PRODUCT CODE                                
AMS01VTM EQU   C'0'                 VTAM PRODUCT CODE                           
AMS01VER DS    CL1                  VERSION CODE                                
AMS01REL DS    CL1                  RELEASE CODE                                
AMS01MDF DS    CL1                  MODIFICATION CODE                           
*                                                                               
***********************************************************************         
*** ISTAMS04 - maps the COMPONENT IDENTIFICATION vector.             **         
***          - This vector may be repeated.                          **         
***          - Each component identification vector contains product **         
***            identification information about a major component or **         
***            feature of the VTAM licensed program.  When multiple  **         
***            component identification vectors are present, the     **         
***            first one designates the base VTAM product and later  **         
***            vectors are features or other major VTAM components.  **         
***          - The vector data is in the form: C'xxxx-xxxxx-xxx'.    **         
***********************************************************************         
ISTAMS04 DSECT                      COMPONENT IDENTIFICATION VECTOR             
AMS04LEN DS    X                    VECTOR LENGTH                               
AMS04KEY DS    X                    VECTOR KEY                                  
AMS04KYC EQU   X'04'                KEY IS X'04'                                
AMS04DTA DS    CL14                 VECTOR DATA                                 
*                                                                               
***********************************************************************         
*** ISTAMS05 - maps the FUNCTION LIST vector.                        **         
***          - The vector data is a variable-length bit string, in   **         
***            which each bit corresponds to a particular VTAM       **         
***            function.  If a bit is on, the corresponding function **         
***            is present in the executing release of VTAM.  If a    **         
***            bit is off, the function is not available.  If the    **         
***            vector is not present or if the bit string is shorter **         
***            than expected, you may assume that the missing bits   **         
***            are zero and their corresponding functions are not    **         
***            available.                                            **         
***          - These indicator bits correspond to the compile-time   **         
***            global indicator bits in the ISTGLBAL macro.          **         
***********************************************************************         
ISTAMS05 DSECT                      FUNCTION LIST VECTOR                        
AMS05LEN DS    X                    VECTOR LENGTH                               
AMS05KEY DS    X                    VECTOR KEY                                  
AMS05KYC EQU   X'05'                KEY IS X'05'                                
AMS05DTA DS    0X                   VECTOR DATA                                 
AMS05DT0 DS    X                    BYTE 0 OF INDICATORS                        
AMS05B00 EQU   X'80'                NIB ENCR AND RPL CRYPT                      
*                                   (CRYPTOGRAPHY)                              
AMS05B01 EQU   X'40'                ACB PARMS=NIB (COMMUNICATION                
*                                   NETWORK MANAGEMENT INTERFACE)               
AMS05B02 EQU   X'20'                MULTIPLE-ADDRESS-SPACE                      
*                                   APPLICATIONS PROGRAMS                       
AMS05B03 EQU   X'10'                AUTHORIZED PATH FOR                         
*                                   COMMUNICATIONS MACROS                       
AMS05B04 EQU   X'08'                AUTHORIZED PATH FOR ALL                     
*                                   RPL-BASED MACROS                            
AMS05B05 EQU   X'04'                SRBEXIT (ON APPL DEFINITION                 
*                                   STATEMENT)                                  
AMS05B06 EQU   X'02'                SONSCIP (ON APPL DEFINITION                 
*                                   STATEMENT)                                  
AMS05B07 EQU   X'01'                VTAMFRR (ON APPL DEFINITION                 
*                                   STATEMENT)                                  
*                                                                               
AMS05DT1 DS    X                    BYTE 1 OF INDICATORS                        
AMS05B10 EQU   X'80'                SSCP TRACKING OF DEVICE-LU                  
*                                   SESSION CAPABILITY VIA NOTIFY               
*                                   (ENABLED/DISABLED/INHIBITED)                
AMS05B11 EQU   X'40'                RPL OPTCD=LMPEO                             
AMS05B12 EQU   X'20'                RPL OPTCD=BUFFLST                           
AMS05B13 EQU   X'10'                RPL OPTCD=USERRH                            
AMS05B14 EQU   X'08'                ACB PARMS=USERFLD                           
AMS05B15 EQU   X'04'                RPL BRACKET=CEB                             
AMS05B16 EQU   X'02'                APPLICATION PROGRAM ASSIGNMENT OF           
*                                   SEQUENCE NUMBERS FOR EXPEDITED DFC          
AMS05B17 EQU   X'01'                RESOURCE-IDENTIFICATION VECTOR LIST         
*                                                                               
AMS05DT2 DS    X                    BYTE 2 OF INDICATORS                        
AMS05B20 EQU   X'80'                ACCESS-METHOD-SUPPORT VECTOR LIST           
AMS05B21 EQU   X'40'                RETURN OF SYSTEM RESPONSE BYTE AND          
*                                   EXTENDED RESPONSE BYTE FOR BSC 3270         
*                                   TERMINALS ATTACHED TO ACF/NCP               
AMS05B22 EQU   X'20'                INTRPRET                                    
AMS05B23 EQU   X'10'                VTAM API IS XRF CAPABLE                     
AMS05B24 EQU   X'08'                SENSE ON -RSP(CINIT). CLSDST                
*                                   OPTCD=(RELEASE,SENSE)                       
AMS05B25 EQU   X'04'                UNBIND SON CODE AND SENSE.                  
*                                   CLSDST OPTCD=(RELEASE,SONCODE),             
*                                   TERMSESS OPTCD=(UNBIND,SONCODE)             
AMS05B26 EQU   X'02'                HOLD/RELEASE LOGON/SCIP EXIT FOR            
*                                   SESSION SETUP.                              
*                                   SETLOGON OPTCD=(START!HOLD)                 
AMS05B27 EQU   X'01'                CINIT - NETWORK ADDRESSES IN                
*                                   VECTOR KEY X'15'                            
*                                                                               
AMS05DT3 DS    X                    BYTE 3 OF INDICATORS                        
AMS05B30 EQU   X'80'                31-BIT API                                  
AMS05B31 EQU   X'40'                NOTIFICATION OF QUEUED RESPONSES            
*                                   SUPPORTED.  SEND OPTCD=(RSPQUED)            
AMS05B32 EQU   X'20'                APPC IS SUPPORTED                           
AMS05B33 EQU   X'10'                ADD SUPPORT FOR USERVAR                     
AMS05B34 EQU   X'08'                VCNS API SUPPORT FOR X.25                   
AMS05B35 EQU   X'04'                VCNS API SUPPORT FOR TOKEN BUS,             
*                                   TOKEN RING,                                 
AMS05B36 EQU   X'02'                CROSS-MEMORY API IS SUPPORTED               
AMS05B37 EQU   X'01'                KEEPFRR SUPPORT (ON ACB STATEMENT)          
*                                                                               
AMS05DT4 DS    X                    BYTE 4 OF INDICATORS                        
AMS05B40 EQU   X'80'                SRBEXIT SUPPORT (ON ACB STATEMENT)          
AMS05B41 EQU   X'40'                PERSISTENT LU-LU SESSIONS                   
AMS05B42 EQU   X'20'                V.25BIS SUPPORT                             
AMS05B43 EQU   X'10'                VTAM/NPM INTERFACE SUPPORT                  
AMS05B44 EQU   X'08'                LU6 PLUS TRACKING SUPPORTED                 
AMS05B45 EQU   X'04'                EXITFRR SUPPORT (ON ACB STATEMENT)          
*                                                                  @N1C         
AMS05B46 EQU   X'02'                BYTE 4, BIT 6: RESERVED                     
AMS05B47 EQU   X'01'                NETWORK QUALIFIED NAMES SUPPORTED           
*                                                                               
AMS05DT5 DS    X                    BYTE 5 OF INDICATORS                        
AMS05B50 EQU   X'80'                MS TRANSPORT SUPPORTED                      
AMS05B51 EQU   X'40'                PERFORMANCE MONITOR INTERFACE               
*                                   SUPPORTED                                   
AMS05B52 EQU   X'20'                QUEUED SESSION TERMINATION                  
*                                   SUPPPORTED                                  
AMS05B53 EQU   X'10'                VTAM AGENT SUPPORTED                        
AMS05B54 EQU   X'08'                GENERIC RESOURCES SUPPORTED                 
AMS05B55 EQU   X'04'                OPTCD=KEEPSRB FOR SYNC SRB                  
*                                   SUSPEND/RESUME                              
AMS05B56 EQU   X'02'                APPLICATION VECTORS SUPPORTED ON            
*                                   ACB MACRO                                   
AMS05B57 EQU   X'01'                SETLOGON GNAMESUB SUPPORTED    @D2C         
*                                                                               
AMS05DT6 DS    X                    BYTE 6 OF INDICATORS                        
AMS05B60 EQU   X'80'                FORCETKO Support             @R1C           
AMS05B61 EQU   X'40'                USER CV support              @H1C           
AMS05B62 EQU   X'20'                SEND OPTCD=IDS3270 support   @A1C           
AMS05B63 EQU   X'10'                BYTE 6, BIT 3: RESERVED                     
AMS05B64 EQU   X'08'                BYTE 6, BIT 4: RESERVED                     
AMS05B65 EQU   X'04'                BYTE 6, BIT 5: RESERVED                     
AMS05B66 EQU   X'02'                BYTE 6, BIT 6: RESERVED                     
AMS05B67 EQU   X'01'                BYTE 6, BIT 7: RESERVED                     
*                                                                               
AMS05DT7 DS    X                    BYTE 7 OF INDICATORS                        
AMS05B70 EQU   X'80'                BYTE 7, BIT 0: RESERVED                     
AMS05B71 EQU   X'40'                BYTE 7, BIT 1: RESERVED                     
AMS05B72 EQU   X'20'                BYTE 7, BIT 2: RESERVED                     
AMS05B73 EQU   X'10'                BYTE 7, BIT 3: RESERVED                     
AMS05B74 EQU   X'08'                BYTE 7, BIT 4: RESERVED                     
AMS05B75 EQU   X'04'                BYTE 7, BIT 5: RESERVED                     
AMS05B76 EQU   X'02'                BYTE 7, BIT 6: RESERVED                     
AMS05B77 EQU   X'01'                BYTE 7, BIT 7: RESERVED                     
*                                                                               
***********************************************************************         
*** ISTAMS06 - maps the LU6.2 SUPPORT FUNCTION LIST vector.          **         
***          - The vector data is a variable-length string of byte   **         
***            indicators, each byte corresponding to a particular   **         
***            LU6.2 function.  Each byte will have a value showing  **         
***            that its corresponding function is either supported,  **         
***            not supported, or supported on a "pass-through" basis.**         
***            (Pass-through functions are those which VTAM does not **         
***            directly provide but provides the ability for the     **         
***            application to create the support itself.)            **         
***            If the vector is not present or if the byte string    **         
***            is shorter than expected, you may assume that the     **         
***            missing bytes are zero and their corresponding        **         
***            functions are not supported.                          **         
***          - These indicator bytes correspond to the compile-time  **         
***            global indicators in the ISTGAPPC macro.              **         
***********************************************************************         
ISTAMS06 DSECT                      LU6.2 SUPPORT FUNCTION LIST VECTOR          
AMS06LEN DS    X                    VECTOR LENGTH                               
AMS06KEY DS    X                    VECTOR KEY                                  
AMS06KYC EQU   X'06'                KEY IS X'06'                                
AMS06DTA DS    0X                   VECTOR DATA                                 
AMS06D01 DS    X                    01. CONVERSATIONS BETWEEN TPS               
*                                       AT SAME LU                              
AMS06D02 DS    X                    02. DELAYED SESSION                         
*                                       ALLOCATION                              
AMS06D03 DS    X                    03. IMMEDIATE SESSION                       
*                                       ALLOCATION                              
AMS06D04 DS    X                    04. SYNC POINT SERVICES                     
AMS06D05 DS    X                    05. PROGRAM RECONNECT                       
AMS06D06 DS    X                    06. RESERVED                                
AMS06D07 DS    X                    07. SESSION-LEVEL LU-LU                     
*                                       VERIFICATION                            
AMS06D08 DS    X                    08. USERID VERIFICATION                     
AMS06D09 DS    X                    09. PROGRAM SUPPLIED USERID                 
*                                       AND PASSWORD                            
AMS06D10 DS    X                    10. USERID AUTHORIZATION                    
AMS06D11 DS    X                    11. PROFILE VERIFICATION AND                
*                                       AUTHORIZATION                           
AMS06D12 DS    X                    12. RESERVED                                
AMS06D13 DS    X                    13. PROFILE PASSTHROUGH                     
AMS06D14 DS    X                    14. PROGRAM-SUPPLIED PROFILE                
AMS06D15 DS    X                    15. SEND PERSISTENT                         
*                                       VERIFICATION                            
AMS06D16 DS    X                    16. RECEIVE PERSISTENT                      
*                                       VERIFICATION                            
AMS06D17 DS    X                    17. PIP DATA                                
AMS06D18 DS    X                    18. LOGGING OF DATA IN SYSTEM               
*                                       LOG                                     
AMS06D19 DS    X                    19. FLUSH LU SEND BUFFER                    
AMS06D20 DS    X                    20. LUW IDENTIFIER                          
AMS06D21 DS    X                    21. PREPARE TO RECEIVE                      
AMS06D22 DS    X                    22. LONG LOCKS                              
AMS06D23 DS    X                    23. POST ON RECEIPT WITH WAIT               
AMS06D24 DS    X                    24. POST ON RECEIPT WITH TEST               
*                                       FOR POSTING                             
AMS06D25 DS    X                    25. RECEIVE-IMMEDIATE                       
AMS06D26 DS    X                    26. TEST FOR REQUEST-TO-SEND                
*                                       RECEIVED                                
AMS06D27 DS    X                    27. DATA MAPPING                            
AMS06D28 DS    X                    28. FMH APPLICATION-DATA                    
AMS06D29 DS    X                    29. GET ATTRIBUTES                          
AMS06D30 DS    X                    30. GET CONVERSATION-TYPE                   
AMS06D31 DS    X                    31. MAPPED CONVERSATION LU                  
*                                       SERVICES COMPONENT                      
AMS06D32 DS    X                    32. CHANGE_SESSION_LIMIT VERB               
AMS06D33 DS    X                    33. MIN_CONWINNERS_TARGET                   
*                                       PARAMETER                               
AMS06D34 DS    X                    34. RESPONSIBLE(TARGET)                     
*                                       PARAMETER                               
AMS06D35 DS    X                    35. DRAIN_TARGET(NO) PARAMETER              
AMS06D36 DS    X                    36. FORCE PARAMETER                         
AMS06D37 DS    X                    37. ACTIVATE_SESSION VERB                   
AMS06D38 DS    X                    38. DEACTIVATE_SESSION VERB                 
AMS06D39 DS    X                    39. LU-PARAMETER VERBS                      
AMS06D40 DS    X                    40. LU-LU SESSION LIMIT                     
AMS06D41 DS    X                    41. LOCALLY-KNOWN LU NAMES                  
AMS06D42 DS    X                    42. UNINTERPRETED LU NAMES                  
AMS06D43 DS    X                    43. SINGLE-SESSION                          
*                                       RE-INITIATION                           
AMS06D44 DS    X                    44. ALTERNATE CODE PROCESSING               
AMS06D45 DS    X                    45. MAXIMUM RU SIZE BOUNDS                  
AMS06D46 DS    X                    46. SESSION-LEVEL MANDATORY                 
*                                       CRYPTOGRAPHY                            
AMS06D47 DS    X                    47. CONTENTION WINNER                       
*                                       AUTOMATIC ACTIVATION LIMIT              
AMS06D48 DS    X                    48. CONWINNER SESSION                       
*                                       ALLOCATION                              
AMS06D49 DS    X                    49. ENHANCED SECURITY (SAME)                
AMS06D50 DS    X                    50. SESSION-LEVEL SELECTIVE                 
*                                       CRYPTOGRAPHY                            
AMS06D51 DS    X                    51. CONVERSATION GROUP SUPPORT              
AMS06D52 DS    X                    52. ALLOCATE WHEN SESSION FREE              
AMS06D53 DS    X                    53. FULL-DUPLEX                             
AMS06D54 DS    X                    54. APPCCMD VECTOR LISTS                    
AMS06D55 DS    X                    55. QUEUED RCVFMH5             @D1A         
AMS06D56 DS    X                    56. HIGH PERFORMANCE DATA                   
*                                       TRANSFER                   @D3A         
AMS06D57 DS    X                    57. APPCCMD SENDRCV            @D1A         
AMS06D58 DS    X                    58. INTRA-LU CONVERSATIONS     @D4A         
AMS06D59 DS    X                    59. PASSWORD SUBSTITUTION      @D5A         
AMS06D60 DS    X                    60. EXTENDED SECURITY SENSE    @D5A         
AMS06D61 DS    X                    61. DCE SECURITY SERVICES      @D6A         
*                                                                               
         MEND                                                        */         
*                                                                               
*@LISTPOP;                          /* Begin PL/X mapping            */         
*/********************************************************************/         
*/* ISTAMSVL - maps the Resource Information Vector List header.     */         
*/*            The vector list contains information about the        */         
*/*            application program that opened an ACB at execution   */         
*/*            time.                                                 */         
*/********************************************************************/         
*  DCL                                                                          
*    1 ISTAMSVL  BDY(BYTE) BASED,   /* RESOURCE INFORMATION VECTOR              
*                                      LIST                          */         
*      2 AMSLLEN  FIXED(16) BDY(BYTE), /* TOTAL LENGTH OF VECTORS    */         
*      2 AMSLDATA CHAR(0);          /* VECTOR DATA                   */         
*                                                                               
*/********************************************************************/         
*/*  GENERALIZED MAPPING FOR EXAMINING COMMON FIELDS IN ALL ACB      */         
*/*  VECTORS IN THE VECTOR LIST POINTED TO BY ACBAMSVL               */         
*/********************************************************************/         
*  DCL                                                                          
*    1 ISTAMSVT  BDY(BYTE) BASED,   /* VECTOR FIELDS                 */         
*      2 AMSVTLEN       FIXED(8) BDY(BYTE), /* VECTOR LENGTH         */         
*      2 AMSVTKEY       CHAR(1),    /* VECTOR KEY                    */         
*      2 AMSVTDAT       CHAR(0);    /* VECTOR DATA                   */         
*                                                                               
*                                                                               
*/********************************************************************/         
*/* ISTAMS01 - maps the RELEASE LEVEL vector.                        */         
*/*          - Contains identification codes for the access method   */         
*/*            product and its version, release, and modification    */         
*/*            level.                                                */         
*/********************************************************************/         
*  DCL                                                                          
*    1 ISTAMS01 BDY(BYTE) BASED,    /* RELEASE LEVEL VECTOR          */         
*      2 AMS01LEN FIXED(8),         /* VECTOR LENGTH                 */         
*      2 AMS01KEY BIT(8),           /* VECTOR KEY X'02'              */         
*      2 AMS01DTA CHAR(4),          /* VECTOR DATA                   */         
*        3 AMS01PRD CHAR(1),        /* PRODUCT CODE                  */         
*        3 AMS01VER CHAR(1),        /* VERSION CODE                  */         
*        3 AMS01REL CHAR(1),        /* RELEASE CODE                  */         
*        3 AMS01MDF CHAR(1);        /* MODIFICATION CODE             */         
*  DCL                                                                          
*    AMS01KYC BIT(8) CONSTANT('01'X); /* AMS01KEY - X'01'            */         
*  DCL                                                                          
*    AMS01VTM CHAR(1) CONSTANT('0');  /* VTAM PRODUCT CODE           */         
*                                                                               
*/********************************************************************/         
*/* ISTAMS04 - maps the COMPONENT IDENTIFICATION vector.             */         
*/*          - This vector may be repeated.                          */         
*/*          - Each component identification vector contains product */         
*/*            identification information about a major component or */         
*/*            feature of the VTAM licensed program.  When multiple  */         
*/*            component identification vectors are present, the     */         
*/*            first one designates the base VTAM product and later  */         
*/*            vectors are features or other major VTAM components.  */         
*/*          - The vector data is in the form: C'xxxx-xxxxx-xxx'.    */         
*/********************************************************************/         
*  DCL                                                                          
*    1 ISTAMS04 BDY(BYTE) BASED,    /* COMPONENT IDENTIFICATION                 
*                                      VECTOR                        */         
*      2 AMS04LEN FIXED(8),         /* VECTOR LENGTH                 */         
*      2 AMS04KEY BIT(8),           /* VECTOR KEY X'04'              */         
*      2 AMS04DTA CHAR(14);         /* VECTOR DATA                   */         
*  DCL                                                                          
*    AMS04KYC BIT(8) CONSTANT('04'X); /* AMS01KEY - X'04'            */         
*                                                                               
*/********************************************************************/         
*/* ISTAMS05 - maps the FUNCTION LIST vector.                        */         
*/*          - The vector data is a variable-length bit string, in   */         
*/*            which each bit corresponds to a particular VTAM       */         
*/*            function.  If a bit is on, the corresponding function */         
*/*            is present in the executing release of VTAM.  If a    */         
*/*            bit is off, the function is not available.  If the    */         
*/*            vector is not present or if the bit string is shorter */         
*/*            than expected, you may assume that the missing bits   */         
*/*            are zero and their corresponding functions are not    */         
*/*            available.                                            */         
*/*          - These indicator bits correspond to the compile-time   */         
*/*            global indicator bits in the ISTGLBAL macro.          */         
*/********************************************************************/         
*  DCL                                                                          
*    1 ISTAMS05 BDY(BYTE) BASED,    /* FUNCTION LIST VECTOR          */         
*      2 AMS05LEN FIXED(8),         /* VECTOR LENGTH                 */         
*      2 AMS05KEY BIT(8),           /* VECTOR KEY X'05'              */         
*      2 AMS05DTA,                  /* VECTOR DATA                   */         
*        3 AMS05DT0 BIT(8),         /* INDICATOR BYTE 0              */         
*          4 AMS05B00 BIT(1),       /* NIB ENCR AND RPL CRYPT                   
*                                      (CRYPTOGRAPHY)                */         
*          4 AMS05B01 BIT(1),       /* ACB PARMS=NIB (COMMUNICATION             
*                                      NETWORK                       */         
*          4 AMS05B02 BIT(1),       /* MULTIPLE-ADDRESS-SPACE                   
*                                      APPLICATIONS PROGRAMS         */         
*          4 AMS05B03 BIT(1),       /* AUTHORIZED PATH FOR                      
*                                      COMMUNICATIONS MACROS         */         
*          4 AMS05B04 BIT(1),       /* AUTHORIZED PATH FOR ALL                  
*                                      RPL-BASED MACROS              */         
*          4 AMS05B05 BIT(1),       /* SRBEXIT (ON APPL DEFINITION              
*                                      STATEMENT)                    */         
*          4 AMS05B06 BIT(1),       /* SONSCIP (ON APPL DEFINITION              
*                                      STATEMENT)                    */         
*          4 AMS05B07 BIT(1),       /* VTAMFRR (ON APPL DEFINITION              
*                                      STATEMENT)                    */         
*        3 AMS05DT1 BIT(8),         /* INDICATOR BYTE 1              */         
*          4 AMS05B10 BIT(1),       /* SSCP TRACKING OF DEVICE-LU               
*                                      SESSION CAPABILITY            */         
*          4 AMS05B11 BIT(1),       /* RPL OPTCD=LMPEO               */         
*          4 AMS05B12 BIT(1),       /* RPL OPTCD=BUFFLST             */         
*          4 AMS05B13 BIT(1),       /* RPL OPTCD=USERRH              */         
*          4 AMS05B14 BIT(1),       /* ACB PARMS=USERFLD             */         
*          4 AMS05B15 BIT(1),       /* RPL BRACKET=CEB               */         
*          4 AMS05B16 BIT(1),       /* APPLICATION PROGRAM ASSIGNMENT           
*                                      OF SEQUENCE                   */         
*          4 AMS05B17 BIT(1),       /* RESOURCE-IDENTIFICATION VECTOR           
*                                      LIST                          */         
*        3 AMS05DT2 BIT(8),         /* INDICATOR BYTE 2              */         
*          4 AMS05B20 BIT(1),       /* ACCESS-METHOD-SUPPORT VECTOR             
*                                      LIST                          */         
*          4 AMS05B21 BIT(1),       /* RETURN OF SYSTEM RESPONSE BYTE           
*                                      AND EXTENDED                  */         
*          4 AMS05B22 BIT(1),       /* INTRPRET                      */         
*          4 AMS05B23 BIT(1),       /* VTAM API IS XRF CAPABLE       */         
*          4 AMS05B24 BIT(1),       /* SENSE ON -RSP(CINIT). CLSDST  */         
*          4 AMS05B25 BIT(1),       /* UNBIND SON CODE AND SENSE.    */         
*          4 AMS05B26 BIT(1),       /* HOLD/RELEASE LOGON/SCIP EXIT             
*                                      FOR SESSION                   */         
*          4 AMS05B27 BIT(1),       /* CINIT - NETWORK ADDRESSES IN             
*                                      VECTOR KEY X'15'              */         
*        3 AMS05DT3 BIT(8),         /* INDICATOR BYTE 3              */         
*          4 AMS05B30 BIT(1),       /* 31-BIT API                    */         
*          4 AMS05B31 BIT(1),       /* NOTIFICATION OF QUEUED                   
*                                      RESPONSES IS SUPPORTED        */         
*          4 AMS05B32 BIT(1),       /* APPC IS SUPPORTED             */         
*          4 AMS05B33 BIT(1),       /* ADD SUPPORT FOR USERVAR       */         
*          4 AMS05B34 BIT(1),       /* VCNS API SUPPORT FOR X.25     */         
*          4 AMS05B35 BIT(1),       /* VCNS API SUPPORT FOR TOKEN               
*                                      BUS, TOKEN RING,              */         
*          4 AMS05B36 BIT(1),       /* CROSS-MEMORY API IS SUPPORTED */         
*          4 AMS05B37 BIT(1),       /* KEEPFRR SUPPORT                          
*                                      (ON ACB STATEMENT)            */         
*        3 AMS05DT4 BIT(8),         /* INDICATOR BYTE 4              */         
*          4 AMS05B40 BIT(1),       /* SRBEXIT SUPPORT                          
*                                      (ON ACB STATEMENT)            */         
*          4 AMS05B41 BIT(1),       /* PERSISTENT LU-LU SESSIONS     */         
*          4 AMS05B42 BIT(1),       /* V.25BIS SUPPORT               */         
*          4 AMS05B43 BIT(1),       /* VTAM/NPM INTERFACE SUPPORT    */         
*          4 AMS05B44 BIT(1),       /* LU6 PLUS TRACKING SUPPORTED   */         
*          4 AMS05B45 BIT(1),       /* EXITFRR SUPPORT                          
*                                      (ON ACB STATEMENT)        @N1C*/         
*          4 AMS05B46 BIT(1),       /* BYTE 4, BIT 6: RESERVED       */         
*          4 AMS05B47 BIT(1),       /* NETWORK QUALIFIED NAMES                  
*                                      SUPPORTED                     */         
*        3 AMS05DT5 BIT(8),         /* INDICATOR BYTE 5              */         
*          4 AMS05B50 BIT(1),       /* MS TRANSPORT SUPPORTED        */         
*          4 AMS05B51 BIT(1),       /* PERFORMANCE MONITOR INTERFACE            
*                                      SUPPORTED                     */         
*          4 AMS05B52 BIT(1),       /* QUEUED SESSION TERMINATION               
*                                      SUPPPORTED                    */         
*          4 AMS05B53 BIT(1),       /* VTAM AGENT SUPPORTED          */         
*          4 AMS05B54 BIT(1),       /* GENERIC RESOURCES SUPPORTED   */         
*          4 AMS05B55 BIT(1),       /* OPTCD=KEEPSRB FOR SYNC SRB               
*                                      SUSPEND/RESUME                */         
*          4 AMS05B56 BIT(1),       /* APPLICATION VECTORS SUPPORTED            
*                                      ON ACB MACRO                  */         
*          4 AMS05B57 BIT(1),       /* SETLOGON GNAMESUB SUPPORTED              
*                                                                @D2C*/         
*        3 AMS05DT6 BIT(8),         /* INDICATOR BYTE 6              */         
*          4 AMS05B60 BIT(1),       /* FORCETKO Support          @R1C*/         
*          4 AMS05B61 BIT(1),       /* USER CV Support           @H1C*/         
*          4 AMS05B62 BIT(1),       /* BYTE 6, BIT 2: RESERVED       */         
*          4 AMS05B63 BIT(1),       /* BYTE 6, BIT 3: RESERVED       */         
*          4 AMS05B64 BIT(1),       /* BYTE 6, BIT 4: RESERVED       */         
*          4 AMS05B65 BIT(1),       /* BYTE 6, BIT 5: RESERVED       */         
*          4 AMS05B66 BIT(1),       /* BYTE 6, BIT 6: RESERVED       */         
*          4 AMS05B67 BIT(1),       /* BYTE 6, BIT 7: RESERVED       */         
*        3 AMS05DT7 BIT(8),         /* INDICATOR BYTE 7              */         
*          4 AMS05B70 BIT(1),       /* BYTE 7, BIT 0: RESERVED       */         
*          4 AMS05B71 BIT(1),       /* BYTE 7, BIT 1: RESERVED       */         
*          4 AMS05B72 BIT(1),       /* BYTE 7, BIT 2: RESERVED       */         
*          4 AMS05B73 BIT(1),       /* BYTE 7, BIT 3: RESERVED       */         
*          4 AMS05B74 BIT(1),       /* BYTE 7, BIT 4: RESERVED       */         
*          4 AMS05B75 BIT(1),       /* BYTE 7, BIT 5: RESERVED       */         
*          4 AMS05B76 BIT(1),       /* BYTE 7, BIT 6: RESERVED       */         
*          4 AMS05B77 BIT(1),       /* BYTE 7, BIT 7: RESERVED       */         
*      2 *        CHAR(0);          /* End of function list vector   */         
*  DCL                                                                          
*    AMS05KYC BIT(8) CONSTANT('05'X); /* AMS05KEY - X'05'            */         
*                                                                               
*/********************************************************************/         
*/* ISTAMS06 - maps the LU6.2 SUPPORT FUNCTION LIST vector.          */         
*/*          - The vector data is a variable-length string of byte   */         
*/*            indicators, each byte corresponding to a particular   */         
*/*            LU6.2 function.  Each byte will have a value showing  */         
*/*            that its corresponding function is either supported,  */         
*/*            not supported, or supported on a "pass-through" basis.*/         
*/*            (Pass-through functions are those which VTAM does not */         
*/*            directly provide but provides the ability for the     */         
*/*            application to create the support itself.)            */         
*/*            If the vector is not present or if the byte string    */         
*/*            is shorter than expected, you may assume that the     */         
*/*            missing bytes are zero and their corresponding        */         
*/*            functions are not supported.                          */         
*/*          - These indicator bytes correspond to the compile-time  */         
*/*            global indicators in the ISTGAPPC macro.              */         
*/********************************************************************/         
*  DCL                                                                          
*    1 ISTAMS06 BDY(BYTE) BASED,    /* LU6.2 SUPPORT FUNCTION LIST              
*                                      VECTOR                        */         
*      2 AMS06LEN FIXED(8),         /* VECTOR LENGTH                 */         
*      2 AMS06KEY BIT(8),           /* VECTOR KEY X'06'              */         
*      2 AMS06DTA,                  /* VECTOR DATA                   */         
*        3 AMS06D01 FIXED(8),       /* 01. CONVERSATIONS BETWEEN TPS            
*                                          AT SAME LU                */         
*        3 AMS06D02 FIXED(8),       /* 02. DELAYED SESSION                      
*                                          ALLOCATION                */         
*        3 AMS06D03 FIXED(8),       /* 03. IMMEDIATE SESSION                    
*                                          ALLOCATION                */         
*        3 AMS06D04 FIXED(8),       /* 04. SYNC POINT SERVICES       */         
*        3 AMS06D05 FIXED(8),       /* 05. PROGRAM RECONNECT         */         
*        3 AMS06D06 FIXED(8),       /* 06. RESERVED                  */         
*        3 AMS06D07 FIXED(8),       /* 07. SESSION-LEVEL LU-LU                  
*                                          VERIFICATION              */         
*        3 AMS06D08 FIXED(8),       /* 08. USERID VERIFICATION       */         
*        3 AMS06D09 FIXED(8),       /* 09. PROGRAM SUPPLIED USERID              
*                                          AND PASSWORD              */         
*        3 AMS06D10 FIXED(8),       /* 10. USERID AUTHORIZATION      */         
*        3 AMS06D11 FIXED(8),       /* 11. PROFILE VERIFICATION AND             
*                                          AUTHORIZATION             */         
*        3 AMS06D12 FIXED(8),       /* 12. RESERVED                  */         
*        3 AMS06D13 FIXED(8),       /* 13. PROFILE PASSTHROUGH       */         
*        3 AMS06D14 FIXED(8),       /* 14. PROGRAM-SUPPLIED PROFILE  */         
*        3 AMS06D15 FIXED(8),       /* 15. SEND PERSISTENT                      
*                                          VERIFICATION              */         
*        3 AMS06D16 FIXED(8),       /* 16. RECEIVE PERSISTENT                   
*                                          VERIFICATION              */         
*        3 AMS06D17 FIXED(8),       /* 17. PIP DATA                  */         
*        3 AMS06D18 FIXED(8),       /* 18. LOGGING OF DATA IN SYSTEM            
*                                          LOG                       */         
*        3 AMS06D19 FIXED(8),       /* 19. FLUSH LU SEND BUFFER      */         
*        3 AMS06D20 FIXED(8),       /* 20. LUW IDENTIFIER            */         
*        3 AMS06D21 FIXED(8),       /* 21. PREPARE TO RECEIVE        */         
*        3 AMS06D22 FIXED(8),       /* 22. LONG LOCKS                */         
*        3 AMS06D23 FIXED(8),       /* 23. POST ON RECEIPT WITH WAIT */         
*        3 AMS06D24 FIXED(8),       /* 24. POST ON RECEIPT WITH TEST            
*                                          FOR POSTING               */         
*        3 AMS06D25 FIXED(8),       /* 25. RECEIVE-IMMEDIATE         */         
*        3 AMS06D26 FIXED(8),       /* 26. TEST FOR REQUEST-TO-SEND             
*                                          RECEIVED                  */         
*        3 AMS06D27 FIXED(8),       /* 27. DATA MAPPING              */         
*        3 AMS06D28 FIXED(8),       /* 28. FMH APPLICATION-DATA      */         
*        3 AMS06D29 FIXED(8),       /* 29. GET ATTRIBUTES            */         
*        3 AMS06D30 FIXED(8),       /* 30. GET CONVERSATION-TYPE     */         
*        3 AMS06D31 FIXED(8),       /* 31. MAPPED CONVERSATION LU               
*                                          SERVICES COMPONENT        */         
*        3 AMS06D32 FIXED(8),       /* 32. CHANGE_SESSION_LIMIT VERB */         
*        3 AMS06D33 FIXED(8),       /* 33. MIN_CONWINNERS_TARGET                
*                                          PARAMETER                 */         
*        3 AMS06D34 FIXED(8),       /* 34. RESPONSIBLE(TARGET)                  
*                                          PARAMETER                 */         
*        3 AMS06D35 FIXED(8),       /* 35. DRAIN_TARGET(NO) PARAMETER*/         
*        3 AMS06D36 FIXED(8),       /* 36. FORCE PARAMETER           */         
*        3 AMS06D37 FIXED(8),       /* 37. ACTIVATE_SESSION VERB     */         
*        3 AMS06D38 FIXED(8),       /* 38. DEACTIVATE_SESSION VERB   */         
*        3 AMS06D39 FIXED(8),       /* 39. LU-PARAMETER VERBS        */         
*        3 AMS06D40 FIXED(8),       /* 40. LU-LU SESSION LIMIT       */         
*        3 AMS06D41 FIXED(8),       /* 41. LOCALLY-KNOWN LU NAMES    */         
*        3 AMS06D42 FIXED(8),       /* 42. UNINTERPRETED LU NAMES    */         
*        3 AMS06D43 FIXED(8),       /* 43. SINGLE-SESSION                       
*                                          RE-INITIATION             */         
*        3 AMS06D44 FIXED(8),       /* 44. ALTERNATE CODE PROCESSING */         
*        3 AMS06D45 FIXED(8),       /* 45. MAXIMUM RU SIZE BOUNDS    */         
*        3 AMS06D46 FIXED(8),       /* 46. SESSION-LEVEL MANDATORY              
*                                          CRYPTOGRAPHY              */         
*        3 AMS06D47 FIXED(8),       /* 47. CONTENTION WINNER                    
*                                          AUTOMATIC ACTIVATION LIMIT*/         
*        3 AMS06D48 FIXED(8),       /* 48. CONWINNER SESSION                    
*                                          ALLOCATION                */         
*        3 AMS06D49 FIXED(8),       /* 49. ENHANCED SECURITY (SAME)  */         
*        3 AMS06D50 FIXED(8),       /* 50. SESSION-LEVEL SELECTIVE              
*                                          CRYPTOGRAPHY              */         
*        3 AMS06D51 FIXED(8),       /* 51. CONVERSATION GROUP SUPPORT*/         
*        3 AMS06D52 FIXED(8),       /* 52. ALLOCATE WHEN SESSION FREE*/         
*        3 AMS06D53 FIXED(8),       /* 53. FULL-DUPLEX               */         
*        3 AMS06D54 FIXED(8),       /* 54. APPCCMD VECTOR LISTS      */         
*        3 AMS06D55 FIXED(8),       /* 55. QUEUED RCVFMH5        @D1A*/         
*        3 AMS06D56 FIXED(8),       /* 56. HIGH PERFORMANCE DATA                
*                                          TRANSFER              @D3A*/         
*        3 AMS06D57 FIXED(8),       /* 57. APPCCMD SENDRCV       @D1A*/         
*        3 AMS06D58 FIXED(8),       /* 58. INTRA-LU CONVERSATIONS               
                                                                 @D4A*/         
*        3 AMS06D59 FIXED(8),       /* 59. PASSWORD SUBSTITUTION @D5A*/         
*        3 AMS06D60 FIXED(8),       /* 60. EXTENDED SECURITY                    
                                           SENSE                 @D5A*/         
*        3 AMS06D61 FIXED(8),       /* 61. DCE SECURITY SERVICES @D6A*/         
*      2 *        CHAR(0);          /* End of function list vector   */         
*  DCL                                                                          
*    AMS06KYC BIT(8) CONSTANT('06'X); /* AMS06KEY - X'06'            */         
*                                                                               
*  /* Support level constants used with each function indicator byte */         
*  DCL                                                                          
*    AMS06NSP FIXED(8) CONSTANT(0), /* FUNCTION IS NOT SUPPORTED     */         
*    AMS06SPT FIXED(8) CONSTANT(1), /* FUNCTION IS SUPPORTED         */         
*    AMS06PTH FIXED(8) CONSTANT(2); /* FUNCTION SUPPORTED AS A                  
*                                      PASS-THROUGH FUNCTION         */         
