*%ERBHDR:                           /* HEADER FOR GENERAL MAPPING    */         
*        MACRO                                                                  
*        KEYS(                                                                  
*             TYPE,                 /* INVOKING SMF RECORD TYPE      */         
*             ATTRIBUT,             /* ATTRIBUTES OF THE STRUCTURE              
*                                      PRODUCED BY THIS MACRO.(THE              
*                                      BOUNDARY ATTRIBUTE IS APPENDED           
*                                      TO IT.)                       */         
*             SUBSTR                /* SUBSTR(YES) GENERATES THE                
*                                      SUBSTRUCTURE ONLY         @N1A*/         
*            );                                                                 
*        GOTO SPECS;   /*                                       @A03C           
         MACRO                                                                  
         ERBHDR &R                                              @A03C*/         
*/* Bilingual specifications section                            @A03A*/         
*SPECS:                                                       /*@A03A*/         
*   ANS(                                                              '         
*/***** START OF SPECIFICATIONS *************************************/          
*/*                                                                 */          
*/*   MODULE-NAME = ERBHDR                                          */          
*/*                                                                 */          
*/*   DESCRIPTIVE-NAME = GENERAL MAPPING OF RMF SMF RECORD HEADER   */          
*/*                                                                 */          
*/*   PROPRIETARY STATEMENT:                                        */          
*/*       LICENSED MATERIALS - PROPERTY OF IBM                  @61A*/          
*/*       "RESTRICTED MATERIALS OF IBM"                         @61A*/          
*/*       COPYRIGHT IBM CORP. 1991, 2021                            */          
*/*                                                                 */          
*/*       STATUS: z/OS V2R5 Data Gatherer (HRG77D0)            @A03C*/          
*/*                                                                 */          
*/*   FUNCTION : THIS MACRO MAPS THE GENERAL HEADER PART OF RMF     */          
*/*              SMF RECORDS DEPENDING ON THE MACRO CALL.           */          
*/*              IT IS CALLED BY MACRO ERBSMF                       */          
*/*                                    ERBSMF70                     */          
*/*                                       :                         */          
*/*                                    ERBSMF79                     */          
*/*                                                                 */          
*/*   MODULE-TYPE = BILINGUAL MAPPING MACRO                         */          
*/*                                                                 */          
*/*   METHOD OF INVOCATION = SEE BELOW                              */          
*/*                                                                 */          
*/*      PLX - .QUESTION MARK.ERBHDR ATTRIBUT(ATTRIBUTES)      @A03C*/          
*/*            .QUESTION MARK.ERBHDR TYPE(70) ATTRIBUT(ATTRIBUTES)  */          
*/*                                       :                         */          
*/*            .QUESTION MARK.ERBHDR TYPE(79) ATTRIBUT(ATTRIBUTES)  */          
*/*            WHERE ATTRIBUTES ARE ANY ACCEPTABLE PLX ATTRIBUTES   */          
*/*            FOR STRUCTURE DECLARATIONS.                     @A03C*/          
*/*                                                                 */          
*/*      BAL - ERBHDR                                               */          
*/*          - ERBHDR 70                                            */          
*/*                :                                                */          
*/*          - ERBHDR 79                                            */          
*/*                                                                 */          
*/*   DISTRIBUTION LIBRARY: AGRBMAC1                           @A03C*/          
*/*                                                                 */          
*/*   CHANGE-ACTIVITY = SEE BELOW                                   */          
*/* $N1=PP,HRM3102,,NEL: RMF 3.1 POST PROCESSOR ENHANCEMENTS        */          
*/* $P1=SP213,HRM3302,,HEN: SP213 support                       @P1A*/          
*/* $P1=MISC,HRM3302,,CIH: MACRO COMMENTARY ENHANCEMENTS        @P1A*/          
*/* $R0=220SUP,JRM3422,,WRC: Support for MVS/SP220              @R0A*/          
*/* $X0=OY11330,HRM4410,,WRC: Berryman support (PR/SM) BFY      @X0A*/          
*/* $W1=SP310E,JRM4411,,PAE: MVS/ESA support                    @W1A*/          
*/* $A1=SP420,JRM4421,,BGBO: MVS SP 4 support                   @A1A*/          
*/* $B1=R430,HRM4430,,THE: Distribution lib in prolog           @B1A*/          
*/* GBO: Cleanup of PADI-inconsistencies                    @WA05544*/          
*/* $61=R790,HRM7790,,MWe: explicit copyright for ext. macro    @61A*/          
*/* $A02=ZOSB,HRG77D0,,JBa: Rename prefix ERB to GRB           @A02A*/          
*/* $A03=ZOSB,HRG77D0,,JBa: Common specifications section      @A03A*/          
*/* $A04=REST: Update field description for REST services      @A04A*/          
*/*                                                                 */          
*/***** END OF SPECIFICATIONS ***************************************/          
*'      ) COL(2);                                            /*@A03C*/          
*        GOTO PLX;   /*                                        @A03C            
************** BEGIN OF ASSEMBLER PART ********************************         
         LCLC  &X                                                               
&X       SETC  T'&R                                                             
         AIF   ('&X' EQ 'O').ASSEM                                              
         AIF   (&R LT 70).ERROR                                                 
         AIF   (&R GT 79).ERROR                                                 
         AGO   .ASSEM                                                           
         SPACE 3                                                                
.ERROR   MNOTE 4,'&R INVALID RECORD TYPE SPECIFIED'                             
.CONTB   ANOP                                                                   
         MEXIT                                                                  
.ASSEM   ANOP                                                                   
SMF&R.HDR DSECT                                                                 
SMF&R.HDC DS    CL36     COMPLETE HEADER+PRODUCT SECTION TRIPL @WA05544         
          ORG   SMF&R.HDC                                      @WA05544         
SMF&R.LEN DS    BL2      RECORD LEN. 0 AFTER GRBSMFR RE-ASSEMBLY  @A04C         
SMF&R.SEG DS    BL2      SEGMENT DESCRIPTOR                                     
SMF&R.FLG DS    BL1      HEADER FLAG BYTE                                       
SMF&R.RRF EQU   X'80'    NEW RECORD FORMAT                                      
SMF&R.SUT EQU   X'40'    SUBTYPES USED                             @R0A         
SMF&R.V4  EQU   X'10'    MVS/ESA Version 4                         @A1A         
SMF&R.ESA EQU   X'08'    MVS/ESA VERSION                           @W1A         
SMF&R.VXA EQU   X'04'    MVS/XA VERSION                            @R0A         
SMF&R.OS  EQU   X'02'    OPERATING SYSTEM IS OS/VS2                             
SMF&R.BFY EQU   X'01'    System running in PR/SM mode              @J1C         
SMF&R.RTY DS    BL1      RECORD TYPE                                            
SMF&R.TME DS    BL4      TOD RECORD WRITTEN                                     
SMF&R.DTE DS    PL4      DATE RECORD WRITTEN                                    
SMF&R.SID DS    CL4      SYSTEM ID FROM INSTALLATION                            
SMF&R.SSI DS    CL4      SUBSYSTEM ID (RMF)                                     
SMF&R.STY DS    BL2      SUBTYPE                                                
SMF&R.TRN DS    BL2      NUMBER OF TRIPLETS IN THIS RECORD                      
          DS    BL2      RESERVED                                               
SMF&R.PRS DS    BL4      OFFSET TO RMF PRODUCT SECTION                          
SMF&R.PRL DS    BL2      LENGTH OF RMF PRODUCT SECTION                          
SMF&R.PRN DS    BL2      NUMBER OF RMF PRODUCT SECTIONS                         
         MEND                                                                   
************** END OF ASSEMBLER PART **********************************         
*                    */                                                         
*/************** BEGIN OF PLX PART *****************************@A03C*/         
*PLX:                                                         /*@A03C*/         
*    DCL KEY1 CHAR;                 /* KEYWORD 1 PRINTED IN COMMENT  */         
*    DCL KEY2 CHAR;                 /* KEYWORD 2 PRINTED IN COMMENT  */         
*    DCL KEY3 CHAR;                 /* KEYWORD 3 PRINTED IN COM. @N1A*/         
*    /* ANSWER BACK A COPY OF INVOKING STATEMENT                     */         
*    IF  TYPE='' THEN               /* IF NO RECORD TYPE WERE INPUT,            
*                                      DO NOT PRINT KEYWORD          */         
*        KEY1 = '';                 /* KEYWORD 1 IS BLANKS           */         
*    ELSE                                                                       
*        KEY1 = 'TYPE';             /* PRINT KEYWORD 1 NAME          */         
*    IF  ATTRIBUT='' THEN           /* IF NO STRUCTURE ATTRIBUTES               
*                                      WERE INPUT, DO NOT PRINT KEY             
*                                      WORD                          */         
*        KEY2 = '';                 /* KEYWORD 2 IS BLANKS           */         
*    ELSE                                                                       
*        KEY2='ATTRIBUT';           /* PRINT KEYWORD 2 NAME          */         
*    I=TYPE(2:3);                                                               
*    IF  SUBSTR='' THEN             /* IF NO SUBSTRUCTURE REQ.   @N1A*/         
*        KEY3 = '';                 /* KEYWORD 3 IS BLANKS       @N1A*/         
*    ELSE                                                                       
*        KEY3='SUBSTR';             /* PRINT KEYWORD 3 NAME      @N1A*/         
*    ANS('/* ?'!!MACLABEL!!MACNAME!!' '!!MACLIST!!                              
*         KEY1!!TYPE!!' '!!KEY2!!ATTRIBUT!!' '!!KEY3!!SUBSTR!!' */'             
*       ) SKIP;                                                                 
*    IF  SUBSTR='(YES)' THEN        /* IF SUBSTRUCTURE REQUESTED @N1A*/         
*        GOTO NOHDR;                /* SKIP HEADER DCL           @N1A*/         
*    ANS(                           /* ANSWER DECLARE STATEMENT      */         
*        'DCL 1 SMF'!!I!!'HDR'      /* GENERAL SMF HEADER            */         
*       ) COL(MACCOL);                                                          
*    ANS(                           /* GEN.INPUT ATTRIB. OF THE STRUC*/         
*              ATTRIBUT(1)                                                      
*       ) COL(MACCOL+8);                                                        
*    ANS(                           /* GENERATE BOUNDARY ON FULLWORD */         
*        '        BDY(WORD),                                          '         
*       ) COL(MACCOL);              /* INTENDED FROM INVOKING COLUMN */         
*    ANS(                                                                       
*        '     2 SMF'!!I!!'HDC, /* COMMON HEADER                */'             
*       ) SKIP;                                                                 
*    NOHDR:                         /* START OF SUBSTRUCTURE     @N1A*/         
*    ANS(                                                                       
*        '     3 SMF'!!I!!'LEN'                                                 
*       ) SKIP;                                                                 
*    ANS(                                                                       
*        '       FIXED(16), '!!                                                 
*        COMMENT('SMF RECORD LENGTH. ZERO AFTER GRBSMFR REASSEMBLY')            
*       ) SKIP;                     /*                          @A04C*/         
*    ANS(                                                                       
*        '     3 SMF'!!I!!'SEG'                                                 
*       ) SKIP;                                                                 
*    ANS(                                                                       
*        '       FIXED(15),         /* SEGMENT DESCRIPTOR           */'         
*       ) SKIP;                                                                 
*    ANS(                                                                       
*        '     3 SMF'!!I!!'FLG'                                                 
*       ) SKIP;                                                                 
*    ANS(                                                                       
*        '       BIT(8),            /* SYSTEM INDICATOR FLAGS       */'         
*       ) SKIP;                                                                 
*    ANS(                                                                       
*        '       5 SMF'!!I!!'RRF'                                               
*       ) SKIP;                                                                 
*    ANS(                                                                       
*        '       BIT(1),            /* NEW RECORD FORMAT            */'         
*       ) SKIP;                                                                 
*    ANS(                                                                       
*        '       5 SMF'!!I!!'SUT'                                               
*       ) SKIP;                                                /*@R0A*/         
*    ANS(                                                                       
*        '       BIT(1),            /* SUBTYPES USED                */'         
*       ) SKIP;                                                /*@R0A*/         
*    ANS(                                                                       
*        '       5 * '                                                          
*       ) SKIP;                                                                 
*    ANS(                                                                       
*        '       BIT(1),            /* RESERVED                 @A1C*/'         
*       ) SKIP;                                                /*@R0C*/         
*    ANS(                                                                       
*        '       5 SMF'!!I!!'V4'                                                
*       ) SKIP;                                                /*@R0A*/         
*    ANS(                                                                       
*        '       BIT(1),            /* MVS/ESA V4 IF ON             */'         
*       ) SKIP;                                                /*@A1A*/         
*    ANS(                                                                       
*        '       5 SMF'!!I!!'ESA'                                               
*       ) SKIP;                                                /*@W1A*/         
*    ANS(                                                                       
*        '       BIT(1),            /* MVS/ESA IF ON            @W1A*/'         
*       ) SKIP;                                                /*@W1A*/         
*    ANS(                                                                       
*        '       5 SMF'!!I!!'VXA'                                               
*       ) SKIP;                                                /*@R0A*/         
*    ANS(                                                                       
*        '       BIT(1),            /* MVS/XA IF ON                 */'         
*       ) SKIP;                                                /*@R0A*/         
*    ANS(                                                                       
*        '       5 SMF'!!I!!'OS'                                                
*       ) SKIP;                                                                 
*    ANS(                                                                       
*        '       BIT(1),            /* OPERATING SYSTEM IS OS/VS2   */'         
*       ) SKIP;                                                                 
*    ANS(                                                                       
*        '       5 SMF'!!I!!'BFY'                                               
*       ) SKIP;                                                /*@X0C*/         
*    ANS(                                                                       
*        '       BIT(1),            /* SYSTEM RUNNING IN PR/SM MODE */'         
*       ) SKIP;                                                                 
*    ANS(                                                                       
*        '     3 SMF'!!I!!'RTY'                                                 
*       ) SKIP;                                                                 
*    ANS(                                                                       
*        '       FIXED(8),          /* RECORD TYPE               */'            
*       ) SKIP;                                                                 
*    ANS(                                                                       
*        '     3 SMF'!!I!!'TME'                                                 
*       ) SKIP;                                                                 
*    ANS(                                                                       
*        '       FIXED(31)'                                                     
*       ) SKIP;                                                                 
*    ANS(                                                                       
*        '       BDY(HWORD),        /* TOD RECORD WRITTEN           */'         
*       ) SKIP;                                                                 
*    ANS(                                                                       
*        '     3 SMF'!!I!!'DTE'                                                 
*       ) SKIP;                                                                 
*    ANS(                                                                       
*        '       CHAR(4),           /* DATE RECORD WRITTEN          */'         
*       ) SKIP;                                                                 
*    ANS(                                                                       
*        '     3 SMF'!!I!!'SID'                                                 
*       ) SKIP;                                                                 
*    ANS(                                                                       
*        '       CHAR(4),           /* SYSTEM ID FROM INSTALLATION  */'         
*       ) SKIP;                                                                 
*    ANS(                                                                       
*        '     3 SMF'!!I!!'SSI'                                                 
*       ) SKIP;                                                                 
*    ANS(                                                                       
*        '       CHAR(4),           /* SUBSYSTEM ID (RMF )          */'         
*       ) SKIP;                                                                 
*    ANS(                                                                       
*        '     3 SMF'!!I!!'STY'                                                 
*       ) SKIP;                                                                 
*    ANS(                                                                       
*        '       FIXED(16),         /* SUBTYPE                      */'         
*       ) SKIP;                                                                 
*    ANS(                                                                       
*        '     3 SMF'!!I!!'TRN'                                                 
*       ) SKIP;                                                                 
*    ANS(                                                                       
*        '       FIXED(16),         /*NUMBER OF TRIPLETS IN THIS REC*/'         
*       ) SKIP;                                                                 
*    ANS(                                                                       
*        '     3 *  '                                                           
*       ) SKIP;                                                                 
*    ANS(                                                                       
*        '       CHAR(2),           /* RESERVED                     */'         
*       ) SKIP;                                                                 
*    ANS(                                                                       
*        '     3 SMF'!!I!!'PRS'                                                 
*       ) SKIP;                                                                 
*    ANS(                                                                       
*        '       FIXED(31),         /* OFFSET TO RMF PRODUCT SECTION*/'         
*       ) SKIP;                                                                 
*    ANS(                                                                       
*        '     3 SMF'!!I!!'PRL'                                                 
*       ) SKIP;                                                                 
*    ANS(                                                                       
*        '       FIXED(15),         /* LENGTH OF RMF PRODUCT SECTION*/'         
*       ) SKIP;                                                                 
*    ANS(                                                                       
*        '     3 SMF'!!I!!'PRN'                                                 
*       ) SKIP;                                                                 
*    IF  I=''                       /* CHECK IF SMF RECORD NUMBER IS            
*                                      PART OF INVOKATION            */         
*    THEN                           /* IF NO, END OF STRUCTURE       */         
*    ANS(                                                                       
*        '       FIXED(15);         /*NUMBER OF RMF PRODUCT SECTIONS*/'         
*       ) SKIP;                                                                 
*    ELSE                           /* IF YES, CONTINUE STRUCTURE    */         
*    ANS(                                                                       
*        '       FIXED(15),         /*NUMBER OF RMF PRODUCT SECTIONS*/'         
*       ) SKIP;                                                                 
*/************** END OF PL/AS PART ***********************************/         
*%END;                                                                          
