*                                                                       00001000
* %DCL IWMWRQAA_INCLUDED CHAR EXT;                                      00002000
* %DEACTIVATE IWMWRQAA_INCLUDED;                                        00003000
* %IF IWMWRQAA_INCLUDED = '' %THEN                                      00004000
* %DO;                                                                  00005000
*/* Macro made bi-lingual on 22122. CBGEN compile date 21138         */ 00006000
*% /*                                                                   00007000
         MACRO                                                          00008000
         IWMWRQAA &DSECT=YES,&LIST=YES,&TITLE=YES,&RQAA=YES,&RQAE=COND,*00009000
               &RQAESRV=COND,&RQAD=COND                                 00010000
         GBLC  &IWMWRQAA_INCLUDED                                       00011000
         GBLC  &ZCBPRINT                                                00012000
&IWMWRQAA_INCLUDED SETC 'YES'                                           00013000
         AIF   ('&LIST' EQ 'NONE').P0                                   00014000
         AIF   ('&TITLE' EQ 'NO').P5                                    00015000
 TITLE   'IWMWRQAA  - IWMRQRY Answer Area                         '     00016000
.P5      ANOP                                                           00017000
**/ ;                                                                   00018000
*/****START OF SPECIFICATIONS*****************************************/ 00019000
*/*                                                                  */ 00020000
*/*01* Proprietary statement:                                        */ 00021000
*/*                                                                  */ 00022000
*/*      Licensed Materials - Property of IBM                        */ 00023000
*/*      5650-ZOS     Copyright IBM Corp. 1993, 2022                 */ 00024000
*/*      Status = HBB77D0                                            */ 00025000
*/*                                                                  */ 00026000
*/*01* External classification: PSPI                                 */ 00027000
*/*01* End of External classification                                */ 00028000
*/*                                                                  */ 00029000
*/*01* Descriptive Name: IWMRQRY Answer Area                         */ 00030000
*/*                                                                  */ 00031000
*/*02*  Acronym: RQAA                                                */ 00032000
*/*                                                                  */ 00033000
*/*01* Macro Name: IWMWRQAA                                          */ 00034000
*/*                                                                  */ 00035000
*/*01* DSECT Name: RQAA, RQAE, RQAESRV, and RQAD                 @PAC*/ 00036000
*/*                                                                  */ 00037000
*/*01* Component: Workload Manager (SCWLM)                           */ 00038000
*/*                                                                  */ 00039000
*/*01* Eye-Catcher: RQAA                                             */ 00040000
*/*02*  Offset: 0                                                    */ 00041000
*/*02*  Length: CHAR(4)                                              */ 00042000
*/*                                                                  */ 00043000
*/*01* Storage Attributes:                                           */ 00044000
*/*02*  Subpool: Any                                                 */ 00045000
*/*02*  Key: 0                                                       */ 00046000
*/*02*  Residency: Above 16M line                                    */ 00047000
*/*                                                                  */ 00048000
*/*01* Size: Determined at run time                                  */ 00049000
*/*            RQAA    -- X'0064' bytes                              */ 00050000
*/*            RQAE    -- X'00A2' bytes                              */ 00051000
*/*            RQAESRV -- X'0004' bytes                              */ 00052000
*/*            RQAD    -- X'0098' bytes                              */ 00053000
*/*                                                                  */ 00054000
*/*01* Created by: Caller                                            */ 00055000
*/*                                                                  */ 00056000
*/*01* Pointed to by: Pointed to by the ANSAREA_ADDR field in the    */ 00057000
*/*     IWMRQRY parameter list                                       */ 00058000
*/*                                                                  */ 00059000
*/*01* Serialization: None                                           */ 00060000
*/*                                                                  */ 00061000
*/*01* Function: Contains workload activity reporting information    */ 00062000
*/*                                                                  */ 00063000
*/*01* Restrictions:                                                 */ 00064000
*/*              When used as input to IWMRQRY:                      */ 00065000
*/*              Storage for answer area must reside in caller's     */ 00066000
*/*              primary or in a dataspace accessible by the current */ 00067000
*/*              unit of work's dispatchable unit access list (DUal) */ 00068000
*/*                                                                  */ 00069000
*/*01* Notes:                                                        */ 00070000
*/*          *  This field may not be reused due to compatibility    */ 00071000
*/*             reasons.                                     @PYN0179*/ 00072000
*/*                                                                  */ 00073000
*/*01* Method of Access:                                             */ 00074000
*/*                                                                  */ 00075000
*/*02*  ASM:                                                         */ 00076000
*/*          Specify: IWMWRQAA                                       */ 00077000
*/*                                                                  */ 00078000
*/*02*  PLX:                                                         */ 00079000
*/*                                                                  */ 00080000
*/*          Declare RQAAPTR                                         */ 00081000
*/*          %INCLUDE SYSLIB(IWMWRQAA)                               */ 00082000
*/*                                                                  */ 00083000
*/*02*  VIA ATTRIBUTE:                                               */ 00084000
*/*                                                                  */ 00085000
*/*          Specify %RQAAVIA = 'YES'                                */ 00086000
*/*          prior to %INCLUDE statement.                            */ 00087000
*/*          Declare RQAAALET.                                       */ 00088000
*/*          For VIA(0) specify %GLOBALARMODE='YES'                  */ 00089000
*/*                                                                  */ 00090000
*/*------------------------------------------------------------------*/ 00091000
*/*                                                                  */ 00092000
*/*01* Change Activity:                                              */ 00093000
*/*                                                                  */ 00094000
*/*    $MAC(IWMWRQAA), COMP(SCWLM): IWMRQRY Answer Area              */ 00095000
*/*    $L0= WLMI,    HBB5510, 930315 PD88CR: WLM Stage I             */ 00096000
*/*    $P1= PIG2370, HBB5510, 930812 PD88DA: Synchronize the PL/X    */ 00097000
*/*                                          version with the ASM    */ 00098000
*/*                                          version.            @P1A*/ 00099000
*/*    $P2= PIG3454, HBB5510, 931105 PD88CT: Define new server data  */ 00100000
*/*                                          fields in header    @P2A*/ 00101000
*/*    $P3= PIG3458, HBB5510, 931120 PD88CT: Define new state token  */ 00102000
*/*                                          field in header     @P3A*/ 00103000
*/*    $P4= PIG3908, HBB5510, 931215 PD88CT: APAR OW00691 -          */ 00104000
*/*                                          eliminate duplicate     */ 00105000
*/*                                          assembler fields    @P4A*/ 00106000
*/*    $P5= PIG5045, HBB5510, 940117 PD88DA: OW01260 - Change        */ 00107000
*/*                                          external classification */ 00108000
*/*                                          to PSPI.                */ 00109000
*/*    $P6= PIG5053, HBB5510, 940117 PD88DA: OW01260 - Correct       */ 00110000
*/*                                          ASM RQAATIM field.  It  */ 00111000
*/*                                          should be 8 bytes, not  */ 00112000
*/*                                          64 bytes.           @P6A*/ 00113000
*/*    $P7= PIG5048, HBB5510, 940125 PD88DA: OW01260 - Complete      */ 00114000
*/*                                          DSECT names and clarify */ 00115000
*/*                                          "pointed to" text.      */ 00116000
*/*    $P8= PIG5137, HBB5510, 940215 PD88CT: OW02199 - Clarify       */ 00117000
*/*                                          "pointed to" text       */ 00118000
*/*    $P9= PIG5258, HBB5510, 940331 PD88CT: OW02792 - Clarify       */ 00119000
*/*                                          comments for RQAECCAP   */ 00120000
*/*    $L1=ENCLV,    HBB5520, 940315 PD88BG: Enclaves support        */ 00121000
*/*    $L2=CAPT2,    HBB5520, 940315 PD88BG: Captured storage        */ 00122000
*/*    $PA=PN71296   HBB5520  940908 PD88D5: Correct DSECT info  @PAA*/ 00123000
*/*    OW11082       HBB5520  950206 PD88DA: Update RQAA and RQAE    */ 00124000
*/*                                          version numbers @WA11082*/ 00125000
*/*    $WLMPESM      HBB6603, 950510 PD88DA: New Workload Reporting  */ 00126000
*/*                                          fields in support of    */ 00127000
*/*                                          HBB6603 line items.     */ 00128000
*/*                                                          @WLMPESM*/ 00129000
*/*    $WLMPIOP      HBB6603, 950510 PD88DA: New Workload Reporting  */ 00130000
*/*                                          fields in support of    */ 00131000
*/*                                          HBB6603 line items.     */ 00132000
*/*                                                          @WLMPIOP*/ 00133000
*/*    $WLMPASM      HBB6603, 950510 PD88DA: New Workload Reporting  */ 00134000
*/*                                          fields in support of    */ 00135000
*/*                                          HBB6603 line items.     */ 00136000
*/*                                                          @WLMPASM*/ 00137000
*/*    $DQC0023      HBB6603  960518 PDBB:   John Arwe               */ 00138000
*/*                                          Dependent enclaves      */ 00139000
*/*                                          Remove rqaecrit         */ 00140000
*/*                                          Add RQAD fields         */ 00141000
*/*                                                                  */ 00142000
*/*    $PQC1647      HBB6603  960627 PDDA:   Tak Chin:  Add RQAAOVEL */ 00143000
*/*                                          bit.  On = Pre-HBB6603  */ 00144000
*/*                                          definition of velocity  */ 00145000
*/*                                          is being used to manage */ 00146000
*/*                                          the system (I/O delay   */ 00147000
*/*                                          not included in the     */ 00148000
*/*                                          calculation of velocity)*/ 00149000
*/*    $PQC2588      HBB6603  960920 PDDZ:   Peter Yocom: Add        */ 00150000
*/*                                          RQAETOTS                */ 00151000
*/*                                                                  */ 00152000
*/*    $WLMPMES      JBB6609  981001 B9HACG: WLMMES - Stephen McGrath*/ 00153000
*/*                                          Multisystem enclaves    */ 00154000
*/*                                                                  */ 00155000
*/*    $WLMP32E      JBB6609  981001 B9HACG: Hiren Shah              */ 00156000
*/*                                          MQSeries/Workflow       */ 00157000
*/*                                                                  */ 00158000
*/*    $PWY0927      JBB6609  991007 PDCO:   Hiren Shah              */ 00159000
*/*                                          Add version constant for*/ 00160000
*/*                                          OS/390 release 6        */ 00161000
*/*                                          because macro is also   */ 00162000
*/*                                          shipped in R6 via       */ 00163000
*/*                                          APAR OW40548            */ 00164000
*/*                                                                  */ 00165000
*/*    $WLMPGMC      HBB7703  000216 B9HABB: John Arwe               */ 00166000
*/*                                          Goal mode inhibitors    */ 00167000
*/*                                          Cpu mgmt                */ 00168000
*/*                                                                  */ 00169000
*/*    $WLMPGMS      HBB7703  000216 B9HABB: John Arwe               */ 00170000
*/*                                          Goal mode inhibitors    */ 00171000
*/*                                          Storage mgmt            */ 00172000
*/*                                                                  */ 00173000
*/*    $WLMPGMT      HBB7703  000216 B9HABB: John Arwe       @OW43812*/ 00174000
*/*                                          Goal mode inhibitors    */ 00175000
*/*                                          CICS/IMS region mgmt    */ 00176000
*/*                                                                  */ 00177000
*/*    $WLMPGMY      HBB7703  000216 B9HABB: John Arwe       @OW43813*/ 00178000
*/*                                          Goal mode inhibitors    */ 00179000
*/*                                          Classification          */ 00180000
*/*                                                                  */ 00181000
*/*    $PYD0215    HBB7703  000620 3241MO:   Michael Ostmeyer@OW43812*/ 00182000
*/*                                          New state               */ 00183000
*/*                                          "managed_as_server"     */ 00184000
*/*                                                                  */ 00185000
*/*    $WLMPCRY    HBB7705  000712 3241JH:   Juergen Holtz           */ 00186000
*/*                                          Crypo Reporting         */ 00187000
*/*                                                                  */ 00188000
*/*    $WLMPECR    HBB7706  010312 3241JH:   Juergen Holtz           */ 00189000
*/*                                          Enclave Service Class   */ 00190000
*/*                                          Reset                   */ 00191000
*/*                                                                  */ 00192000
*/*    $WLMPEM2    HBB7707  010924 3241ST:   Ralf Streit             */ 00193000
*/*                                          Enqueue management      */ 00194000
*/*                                          enhancements - stage 2  */ 00195000
*/*                                                                  */ 00196000
*/*    $PYN0179    HBB7708  020426 3241ST:   Ralf Streit             */ 00197000
*/*                                          Goal mode, only         */ 00198000
*/*                                                                  */ 00199000
*/*    $WLMPIFA    HBB7709  031202 3241MO:   Michael Ostmeyer        */ 00200000
*/*                                          IFA Support             */ 00201000
*/*                                                                  */ 00202000
*/*    $WLMPSUP    HBB7730  050929 3241MO:   Michael Ostmeyer        */ 00203000
*/*                                          SUP Support             */ 00204000
*/*                                                                  */ 00205000
*/*    $LENQP3I    HBB7750  060208 3241RS:   Ralf Streit             */ 00206000
*/*                                          WLM Enqueue Management  */ 00207000
*/*                                          Phase 3                 */ 00208000
*/*                                                                  */ 00209000
*/*    $OA26104    HBB7760  080808 3241TB:   Thomas Blattmann        */ 00210000
*/*                                          work-dependent enclaves */ 00211000
*/*                                                                  */ 00212000
*/*    $ME20465    HBB7780  101129 3241KHH:  K-H. Holder             */ 00213000
*/*                                          Return Arrival Time for */ 00214000
*/*                                          Enclaves in RQAD        */ 00215000
*/*                                                                  */ 00216000
*/*    $LCRTME     HBB7780  110201 3241IS:   Irene Stahl             */ 00217000
*/*                                          CICS Response Time      */ 00218000
*/*                                          Management Enhancement  */ 00219000
*/*                                                                  */ 00220000
*/*    $LIOMGT     HBB7790  110706 3241MG:   Matthias Gubitz         */ 00221000
*/*                                          I/O priority group      */ 00222000
*/*                                                                  */ 00223000
*/*    $LEUSER     HBB77A0  131007 3241KHH:  K.-H. Holder            */ 00224000
*/*                                          Add enclave's userid to */ 00225000
*/*                                          RQAD.                   */ 00226000
*/*                                                                  */ 00227000
*/*    $WI104168   HBB77B0  160119 3241TO:   Tobias Orth             */ 00228000
*/*                                          Drop CAM (CCF) support  */ 00229000
*/*                                                                  */ 00230000
*/*    $OA50845    HBB7790  160520 3241KHH:  K.-H. Holder            */ 00231000
*/*                                          Force "Honorpriority"   */ 00232000
*/*                                          to NO for specialty     */ 00233000
*/*                                          processors              */ 00234000
*/*                                                                  */ 00235000
*/*    $OA52312    HBB77B0  170110 3241MG:   Matthias Gubitz @LWBGRP */ 00236000
*/*                                          Workload billing groups */ 00237000
*/*                                                                  */ 00238000
*/*    $LHWCON     HBB77C0  180110 3241MG:   Matthias Gubitz         */ 00239000
*/*                                          zCBP support            */ 00240000
*/*                                                                  */ 00241000
*/*    $LBOOS3     HBB77D0  210111 3241IS:   Irene Stahl     @OA60841*/ 00242000
*/*                                          System Recovery Boost   */ 00243000
*/*                                          stage 3                 */ 00244000
*/*                                                                  */ 00245000
*/****END OF SPECIFICATIONS*******************************************/ 00246000
*% /*                                                                   00247000
.P0      ANOP                                                           00248000
         AIF   ('&ZCBPRINT' EQ 'NO').P1                                 00249000
         AIF   ('&LIST' EQ 'YES').P2                                    00250000
.P1      ANOP                                                           00251000
         PUSH  PRINT                                                    00252000
         PRINT OFF                                                      00253000
.P2      ANOP                                                           00254000
         AIF   ('&RQAA' EQ 'NO').L0002                                  00255000
         AIF   ('&DSECT' EQ 'YES').L0003                                00256000
         AIF   ('&RQAA' NE 'YES').L0002                                 00257000
.L0003   ANOP                                                           00258000
*                                                                       00259000
*                                                                       00260000
*   Usage Note:                                                         00261000
*       The Workload Activity Query Answer Area contains multiple       00262000
*       subsections. Like for the answer area in total, the size of     00263000
*       these subsections is determined at runtime of the IWMRQRY WLM   00264000
*       service. To allow users to get the actual length of each of     00265000
*       these subsections, the RQAA contains a length field for each    00266000
*       of them.                                                        00267000
*       The length fields are:                                          00268000
*            RQAASCAL holds the length of an address space RQAE         00269000
*            RQAAXEEL holds the length of an enclave RQAE               00270000
*            RQAAXEDL holds the length of an enclave RQAD               00271000
*            RQAASRVL holds the length of an RQAESRV                    00272000
*                                                                       00273000
*                                                                       00274000
*                                                                       00275000
*                                                                       00276000
         AIF   ('&DSECT' EQ 'YES').L0004                                00277000
RQAA     DS    0F        Workload Activity Query Answer Area            00278000
         AGO   .L0005                                                   00279000
.L0004   ANOP                                                           00280000
RQAA     DSECT           Workload Activity Query Answer Area            00281000
.L0005   ANOP                                                           00282000
RQAAACRO DS    CL4       Acronym                                        00283000
RQAASIZ  DS    F         Size of RQAA and all of its subordinate parts  00284000
RQAAVERS DS    X         Version                                        00285000
RQAAMODE DS    B         System WLM mode                                00286000
*  Bit definitions:                                                     00287000
RQAAGOAL EQU   X'80'     System is in Goal mode                         00288000
RQAACOMP EQU   X'40'     System is in compatibility mode. Never on as  *00289000
                         of z/OS 1.3                                    00290000
RQAAOVEL EQU   X'20'     System is calculating velocity without using  *00291000
                         I/O delays.                                    00292000
RQAAZCBPDS EQU X'10'     1: zCBP processors run at different speed      00293000
RQAAIDS  EQU   X'10'     1: IFA processors run at different speed       00294000
RQAASDS  EQU   X'08'     1: SUP processors run at different speed       00295000
RQAAZCBP EQU   X'04'     1: Fields with both zCBP and IFA names        *00296000
                         contain data about zCBP processors             00297000
RQAARSV  EQU   X'03'     Reserved                                       00298000
RQAARSV2 DS    CL2       Reserved                                       00299000
RQAASCA# DS    H         Number of RQAEs within RQAA                    00300000
RQAASCAL DS    H         Length of a RQAE entry                         00301000
RQAASCOF DS    F         Offset from RQAA to array of RQAEs             00302000
RQAATIM  DS    BL8       Local time last sample was acquired by the    *00303000
                         WLM sampling code. (STCK format)               00304000
RQAANTVL DS    F         Current sample interval (in milliseconds).    *00305000
                         This is the frequency with which WLM samples  *00306000
                         delays. Issuing IWMRQRY more frequently than  *00307000
                         this may result in identical data              00308000
RQAASRVA DS    H         Number of server address spaces returned      *00309000
                         (i.e. number of RQAESRV arrays present)        00310000
RQAASRV# DS    H         Number of service class entries within the    *00311000
                         RQAESRV array.                                 00312000
RQAASRVL DS    H         Length of an entry in the RQAESRV array.       00313000
RQAARSV1 DS    H         Reserved                                       00314000
RQAASTKN DS    CL8       Token that uniquely identifies the state of   *00315000
                         the system at the time (value in field        *00316000
                         RQAATIM) the current data was collected. This *00317000
                         token is updated when a policy activation     *00318000
                         occurs and can be used across invocations of  *00319000
                         IWMRQRY to associate samples                   00320000
RQAAED#  DS    H         number of enclave descriptive entries (zero   *00321000
                         if enclave information not requested or no    *00322000
                         enclaves exist). With >32K enclave support,   *00323000
                         maximum value that could be set for this      *00324000
                         field is 32k. RQAAXED# should be used to get  *00325000
                         the number of enclave descriptive entries      00326000
RQAAEDL  DS    H         length of enclave descriptive entry            00327000
RQAAEDO  DS    F         offset to enclave descriptive array (zero if  *00328000
                         no enclave RQAD entries)                       00329000
RQAAEE#  DS    H         number of enclave RQAE entries (zero if       *00330000
                         enclave information not requested or no       *00331000
                         enclaves exist). With >32K enclave support,   *00332000
                         maximum value that could be set for this      *00333000
                         field is 32K. RQAAXEE# should be used to get  *00334000
                         the number of enclave RQAE entries             00335000
RQAAEEL  DS    H         length of enclave RQAE entry                   00336000
RQAAEEO  DS    F         offset to enclave RQAE entries (zero if no    *00337000
                         enclave RQAE entries)                          00338000
RQAAXED# DS    F         number of enclave descriptive entries (zero   *00339000
                         if enclave information not requested or no    *00340000
                         enclaves exist). With >32K Enclave support,   *00341000
                         the number of enclave descriptive entries     *00342000
                         could be more than 32K. This field should be  *00343000
                         used to obtain the number enclave descriptive *00344000
                         entries. Added for macro version 6 and above. *00345000
                         The array of RQADs is sparse. See note        *00346000
                         preceding the RQAD structure declare.          00347000
RQAAXEDL DS    F         length of enclave descriptive entry. Value of *00348000
                         this field is identical to RQAAEDL. Added for *00349000
                         macro version 6 and above.                     00350000
RQAAXEDO DS    F         offset to enclave descriptive array (zero if  *00351000
                         no enclave RQAD entries). Value of this field *00352000
                         is identical to RQAAEDO. Added for macro      *00353000
                         version 6 and above.                           00354000
RQAAXEE# DS    F         number of enclave RQAE entries (zero if       *00355000
                         enclave information not requested or no       *00356000
                         enclaves exist). With >32K enclave support,   *00357000
                         the number of enclave RQAE entries could be   *00358000
                         more than 32K. This field should be used to   *00359000
                         get the number of enclave RQAE entries. Added *00360000
                         for macro version 6 and above.                 00361000
RQAAXEEL DS    F         length of enclave RQAE entry. Value of this   *00362000
                         field is identical to RQAAEEL. Added for      *00363000
                         macro version 6 and above.                     00364000
RQAAXEEO DS    F         offset to enclave RQAE entries (zero if no    *00365000
                         enclave RQAE entries). Value of this field is *00366000
                         identical to RQAAEEO. Added for macro version *00367000
                         6 and above.                                   00368000
RQAACLVL DS    F         Current change level.                          00369000
RQAANFFZCBP DS F         Normalization factor for zCBP. Multiply zCBP  *00370000
                         times with this value and divide the result   *00371000
                         by 256 to obtain the equivalent time on a CP   00372000
         ORG   RQAANFFZCBP                                              00373000
RQAANFFI DS    F         Normalization factor for IFA                   00374000
RQAANFFS DS    F         Normalization factor for SUP. Multiply SUP    *00375000
                         times with this value and divide the result   *00376000
                         by 256 to obtain the equivalent time on a CP   00377000
RQAAEND  DS    0C        end of the RQAA                                00378000
RQAA_LEN EQU   *-RQAA                                                   00379000
.L0002   ANOP                                                           00380000
         AIF   ('&RQAE' EQ 'NO').L0006                                  00381000
         AIF   ('&DSECT' EQ 'YES').L0007                                00382000
         AIF   ('&RQAE' NE 'YES').L0006                                 00383000
RQAE     DS    0D        Workload Activity Query Entry (RQAE)           00384000
         AGO   .L0008                                                   00385000
.L0007   ANOP                                                           00386000
RQAE     DSECT           Workload Activity Query Entry (RQAE)           00387000
.L0008   ANOP                                                           00388000
RQAEACRO DS    CL4       Acronym                                        00389000
RQAEVERS DS    X         Version                                        00390000
RQAEFLGS DS    B         Flags                                          00391000
*  Bit definitions:                                                     00392000
RQAESVRR EQU   X'80'     This address space provides service to a      *00393000
                         different service class than the address      *00394000
                         space itself. If RqaeManagedAsServer is on,   *00395000
                         WLM will manage this space as needed to meet  *00396000
                         the transaction's goals and the goals         *00397000
                         specified in RQAESCLN will be ignored. If     *00398000
                         RqaeManagedAsServer is off, WLM will manage   *00399000
                         this address space to the goals specified in  *00400000
                         RQAESCLN                                       00401000
RQAEMPL  EQU   X'40'     MPL delay. Address space is ready, but        *00402000
                         swapped out.                                   00403000
RQAESWIN EQU   X'20'     Swap-in delay. Address space is being swapped *00404000
                         in.                                            00405000
RQAECCAP EQU   X'10'     Resource capping delay. Resource group        *00406000
                         maximum is being enforced for this address    *00407000
                         space. This delay is only returned if the     *00408000
                         address space is swapped in. Only valid in    *00409000
                         space                                          00410000
RQAECQUI EQU   X'08'     Quiesce delay. Address space or enclave has   *00411000
                         been reset. For enclaves, also see RQAEFLG2:  *00412000
                         If RqaeImplicitlyQuiesced is on, enclave is   *00413000
                         known to be running in an address space which *00414000
                         has been quiesced. If RqaeExplicitlyQuiesced  *00415000
                         is on, enclave is known to be reset quiesced   00416000
RQAECRIT EQU   X'04'     Critical path indicator. If on, address space *00417000
                         is on the critical path.                       00418000
RQAEMANAGEDASSERVER EQU X'02' WLM is managing this address space to    *00419000
                         meet the goals of work in other service       *00420000
                         classes. The goals specified in RQAESCLN will *00421000
                         be ignored.                                    00422000
RQAERSV1 EQU   X'01'     Reserved                                       00423000
RQAECLX  DS    H         RQAE index associated with this address       *00424000
                         space. This is the index into the service     *00425000
                         class list returned by IWMPQRY                 00426000
RQAERCLX DS    CL10      Array of RQAE indexes associated with this    *00427000
                         address space. Only RQAESRPG is valid and     *00428000
                         contains the index of a report class          *00429000
                         associated with this address space             00430000
         ORG   RQAERCLX                                                 00431000
RQAESRPG DS    H         This field contains the index of the report   *00432000
                         class associated with this address space       00433000
RQAENRPG DS    H         Reserved - Note *                              00434000
RQAEURPG DS    H         Reserved - Note *                              00435000
RQAECRPG DS    H         Reserved - Note *                              00436000
RQAEARPG DS    H         Reserved - Note *                              00437000
RQAEPER# DS    X         Service class period number. If this address  *00438000
                         space is a server, this value is always one    00439000
RQAEDMN  DS    X         Reserved - Note *                              00440000
RQAERSV2 DS    CL4       Reserved                                       00441000
RQAESCLN DS    CL8       Service class name associated with this       *00442000
                         address space.                                 00443000
RQAERCLN DS    CL8       Report class name associated with this        *00444000
                         address space.                                 00445000
RQAERGNN DS    CL8       Resource group name associated with this      *00446000
                         address space.                                 00447000
RQAEWKLN DS    CL8       Workload name associated with this address    *00448000
                         space.                                         00449000
RQAEVELC DS    CL8       Fields used to calculate execution velocity    00450000
         ORG   RQAEVELC                                                 00451000
RQAECUSE DS    F         CPU using. Increased for each TCB or SRB      *00452000
                         dispatched on any processor (or first in-line *00453000
                         after sampler.)                                00454000
RQAETOTD DS    F         Total delays for calculating execution        *00455000
                         velocity. Calculation is as follows: RQAETOTU *00456000
                         / (RQAETOTU+RQAETOTD)                          00457000
RQAEGDEL DS    CL24      General execution delays included in          *00458000
                         RQAETOTD. Each dispatchable unit can increase *00459000
                         one of the CPU or paging samples               00460000
         ORG   RQAEGDEL                                                 00461000
RQAECPUD DS    H         CPU delay. Increased for each TCB or SRB      *00462000
                         waiting to be dispatched (other than the      *00463000
                         first in-line behind sampler) or for a TCB    *00464000
                         waiting for a lock                             00465000
RQAECPUC DS    H         CPU capping delay. Increased for each TCB or  *00466000
                         SRB marked non-dispatchable because of a      *00467000
                         resource group maximum being enforced. Not a  *00468000
                         subset of RQAECPUD.                            00469000
RQAEAPRV DS    H         Waiting for paging I/O from private            00470000
RQAEACOM DS    H         Waiting for paging I/O from common             00471000
RQAEAXM1 DS    H         Waiting for cross memory page fault in        *00472000
                         address space identified by RQAESMX1           00473000
RQAEAXM2 DS    H         Waiting for cross memory page fault in        *00474000
                         address space identified by RQAESMX2           00475000
RQAEAXMO DS    H         Waiting for cross memory page fault in        *00476000
                         address space other than that identified by   *00477000
                         RQAESMX1 or RQAESMX2                           00478000
RQAEAVIO DS    H         Waiting for paging I/O from vio                00479000
RQAEAHSP DS    H         Waiting for paging I/O from standard          *00480000
                         hiperspaces. Includes waits during scroll     *00481000
                         write.                                         00482000
RQAEASPD DS    H         Waiting for shared paging from aux             00483000
RQAERSV3 DS    CL4       Reserved                                       00484000
RQAEUNKN DS    H         Unknown. Address space is waiting, but none   *00485000
                         of the above reasons apply. Value is 0 or 1.   00486000
RQAEIDLE DS    H         Idle. Work is in STIMER wait, TSO terminal    *00487000
                         wait, APPC wait, or is an initiator waiting   *00488000
                         for work. Value is 0 or 1.                     00489000
RQAESMX1 DS    H         ASID of address space associated with cross   *00490000
                         memory delays in RQAEAXM1                      00491000
RQAESMX2 DS    H         ASID of address space associated with cross   *00492000
                         memory delays in RQAEAXM2                      00493000
RQAESWOR DS    X         Swap reason code                               00494000
RQAERSV4 DS    CL7       Reserved                                       00495000
RQAESRVO DS    F         Offset from RQAE to RQAESRV array              00496000
RQAETOTU DS    H         Total usings for calculating execution        *00497000
                         velocity.                                      00498000
RQAEIOU  DS    H         Total I/O usings                               00499000
RQAEGDL2 DS    CL16      Additional general execution delays included  *00500000
                         in RQAETOTD                                    00501000
         ORG   RQAEGDL2                                                 00502000
RQAEIOD  DS    H         DASD I/O delay samples                         00503000
RQAEQ    DS    H         Queue delay samples. Work is waiting for a    *00504000
                         server.                                        00505000
RQAESPRV DS    H         Server private area paging delay samples.      00506000
RQAESVIO DS    H         Server space VIO paging delay samples.         00507000
RQAESHSP DS    H         Server hiperspace paging delay samples.        00508000
RQAESMPL DS    H         Server MPL delay samples.                      00509000
RQAESSWI DS    H         Server Swap-In delay samples.                  00510000
RQAERSV5 DS    CL2       Reserved                                       00511000
RQAETOTS DS    F         Total execution samples. Sum of RQAETOTU,     *00512000
                         RQAETOTD, RQAEUNKN, RQAEIDLE. Also always     *00513000
                         includes I/O using/delay samples whether or   *00514000
                         not I/O samples are included in               *00515000
                         RQAETOTU/RQAETOTD                              00516000
RQAEFLG1 DS    B         Flags                                          00517000
*  Bit definitions:                                                     00518000
RQAEASPROTSTG EQU X'80'  Same as RasdASProtStg                          00519000
RQAETRXNMGMTEXEMPT EQU X'40' Same as RasdTrxnMgmtExempt                 00520000
RQAECPUPROTECTED EQU X'20' Same as RasdCpuProtected                     00521000
RQAESTGPROTECTED EQU X'10' Same as RasdStgProtected                     00522000
RQAEPROMOTED EQU X'08'   The address space is currently promoted due   *00523000
                         to a chronic resource contention               00524000
RQAETRXNMGMTBOTH EQU X'04' Same as RasdTrxnMgmtBoth                     00525000
RQAEIOPRIORITYGROUP EQU X'02' Same as RasdIoPriorityGroup               00526000
RQAEINELIGHONORPRIORITY EQU X'01' Same as RasdInEligHonorPriority       00527000
RQAEFLG2 DS    B         Enclave flags                                  00528000
*  Bit definitions:                                                     00529000
RQAEISRESET EQU X'80'    Enclave is reset to another service class or  *00530000
                         reset quiesced                                 00531000
RQAEEXPLICITLYQUIESCED EQU X'40' If on, enclave is known to be reset   *00532000
                         quiesced.                                      00533000
RQAEIMPLICITLYQUIESCED EQU X'20' If on, enclave is known to be running *00534000
                         in an address space which has been quiesced.   00535000
RQAEREPORTSAMPLES DS CL14 Report samples                                00536000
         ORG   RQAEREPORTSAMPLES                                        00537000
RQAECRYPTOCAMU DS H      CAM crypto using samples. No longer used       00538000
RQAECRYPTOCAMD DS H      CAM crypto delay samples. No longer used       00539000
RQAECRYPTOAPU DS H       AP crypto using samples. Inreased for every   *00540000
                         TCB found executing on a Cryptographic Assist *00541000
                         Processor.                                     00542000
RQAECRYPTOAPD DS H       AP crypto delay samples. Inreased for every   *00543000
                         TCB found waiting for a Cryptographic Assist  *00544000
                         Processor.                                     00545000
RQAEFEATUREQD DS H       Feature queue delay samples. Inreased for     *00546000
                         every TCB or SRB found waiting on a processor *00547000
                         feature queue associated with a CPU. This is  *00548000
                         a subset of RQAECUSE.                          00549000
RQAERESOURCECONTENTIONDELAY DS H Contention delay samples. One sample  *00550000
                         is accumulated for each resource held. Only   *00551000
                         resource holders identified via IWMCNTN are   *00552000
                         reported.                                      00553000
RQAERESOURCECONTENTIONUSING DS H Contention using samples. One sample  *00554000
                         is accumulated for each resource in use. Only *00555000
                         resource users identified via IWMCNTN are     *00556000
                         reported.                                      00557000
RQAEFLG3 DS    BL2       Additional flags                               00558000
*  Bit definitions:                                                     00559000
RQAEINCLSPECIALTY EQU X'80' Same as RasdInclSpecialty                   00560000
RQAETENANTRESOURCEGROUP EQU X'40' Same as RasdTenantResourceGroup       00561000
RQAEHWCONTAINER EQU X'20' Same as RasdHwContainer                       00562000
RQAEASBOOST EQU X'10'    Same as RasdAsBoost                            00563000
RQAEIFASAMPLES DS CL6    IFA/zCBP samples                               00564000
         ORG   RQAEIFASAMPLES                                           00565000
RQAEZCBPU DS   H         zCBP Work running on zCBP                      00566000
         ORG   RQAEZCBPU                                                00567000
RQAEIFAU DS    H         IFA Work running on IFA                        00568000
RQAEZCBPUCP DS H         zCBP work running on regular CP                00569000
         ORG   RQAEZCBPUCP                                              00570000
RQAEIFAUCP DS  H         IFA work running on regular CP                 00571000
RQAEZCBPD DS   H         work waiting to run on zCBP                    00572000
         ORG   RQAEZCBPD                                                00573000
RQAEIFAD DS    H         work waiting to run on IFA                     00574000
RQAESUPSAMPLES DS CL6    SUP related samples                            00575000
         ORG   RQAESUPSAMPLES                                           00576000
RQAESUPU DS    H         SUP Work running on SUP                        00577000
RQAESUPUCP DS  H         SUP work running on regular CP                 00578000
RQAESUPD DS    H         work waiting to run on SUP                     00579000
RQAEEND  DS    0C        RQAE end                                       00580000
RQAE_LEN EQU   *-RQAE                                                   00581000
.L0006   ANOP                                                           00582000
         AIF   ('&RQAESRV' EQ 'NO').L0009                               00583000
         AIF   ('&DSECT' EQ 'YES').L000A                                00584000
         AIF   ('&RQAESRV' NE 'YES').L0009                              00585000
RQAESRV  DS    0F        RQAE - Service classes served array. The      *00586000
                         dimension of the RQAESRV array is the maximum *00587000
                         number of service classes defined. If a       *00588000
                         RQAESRVD entry is non-zero, the service class *00589000
                         number that corresponds to the index into the *00590000
                         array is being served by this address space.   00591000
         AGO   .L000B                                                   00592000
.L000A   ANOP                                                           00593000
RQAESRV  DSECT           RQAE - Service classes served array. The      *00594000
                         dimension of the RQAESRV array is the maximum *00595000
                         number of service classes defined. If a       *00596000
                         RQAESRVD entry is non-zero, the service class *00597000
                         number that corresponds to the index into the *00598000
                         array is being served by this address space.   00599000
.L000B   ANOP                                                           00600000
RQAESRVD DS    F         An entry in the RQAESRV array. Number of      *00601000
                         times the address space running with this     *00602000
                         service class (RQAECLX) served this service   *00603000
                         class                                          00604000
RQAESRV_LEN EQU *-RQAESRV                                               00605000
.L0009   ANOP                                                           00606000
         AIF   ('&RQAD' EQ 'NO').L000C                                  00607000
         AIF   ('&DSECT' EQ 'YES').L000D                                00608000
         AIF   ('&RQAD' NE 'YES').L000C                                 00609000
.L000D   ANOP                                                           00610000
*                                                                       00611000
*                                                                       00612000
*   Note: the RQADs are returned as a sparse array.  To find valid      00613000
*         (in use) RQADs, the caller must loop through the list of all  00614000
*         RQADs and process any that have a non-0 RQADETKN value.       00615000
*                                                                       00616000
*                                                                       00617000
*                                                                       00618000
         AIF   ('&DSECT' EQ 'YES').L000E                                00619000
RQAD     DS    0F        Enclave Descriptive Entry                      00620000
         AGO   .L000F                                                   00621000
.L000E   ANOP                                                           00622000
RQAD     DSECT           Enclave Descriptive Entry                      00623000
.L000F   ANOP                                                           00624000
RQADETKN DS    CL8       Enclave token                                  00625000
RQADQAEO DS    F         Offset to Enclave RQAE for this entry from    *00626000
                         the RQAD (zero when RQADETKN is zero since no *00627000
                         RQAE is provided                               00628000
RQADOWNERASID DS H       Asid of address space which owns the enclave. *00629000
                         This field is zero if the enclave is foreign  *00630000
                         or the information is unavailable due to a    *00631000
                         recovery problem.                              00632000
RQADFLAGS DS   BL2       Interesting tidbits                            00633000
         ORG   RQADFLAGS                                                00634000
RQADFLAGS_BYTE1 DS B     Byte boundary                                  00635000
*  Bit definitions:                                                     00636000
RQADDEPENDENT EQU X'80'  The enclave was created via IWMECREA and is a *00637000
                         continuation of the transaction for the       *00638000
                         owning address space                           00639000
RQADORIGINALINDEPENDENT EQU X'40' The enclave was created via IWMECREA *00640000
                         and is an independent transaction.             00641000
RQADFOREIGNINDEPENDENT EQU X'20' The enclave was created via IWMIMPT   *00642000
                         and is a continuation of an independent       *00643000
                         enclave on another system.                     00644000
RQADFOREIGNDEPENDENT EQU X'10' The enclave was created via IWMIMPT and *00645000
                         is a continuation of a dependent enclave on   *00646000
                         another system.                                00647000
RQADINACTIVEENCLAVE EQU X'08' The enclave is currently on inactive     *00648000
                         enclave queue because SRM did not find any    *00649000
                         workunit associated with the enclave. Enclave *00650000
                         will move back to active queue once a         *00651000
                         workunit joins the enclave                     00652000
RQADPROMOTED EQU X'04'   The enclave is currently promoted due to a    *00653000
                         chronic resource contention                    00654000
RQADWORKDEPENDENT EQU X'02' The enclave is a continuation of an        *00655000
                         independent enclave                            00656000
RQADFLAGS_BYTE2 DS B     Byte boundary                                  00657000
RQADTOTALCPUTIME DS BL8  Cumulative CPU time consumed by dispatchable  *00658000
                         units running in the enclave on the local     *00659000
                         system. For a multisystem enclave, CPU time   *00660000
                         consumed on other systems is not included.    *00661000
                         May decrease between IWMRQRY invocations if   *00662000
                         transaction is restarted to avoid an overflow *00663000
                         of internal accumulators. Same units as       *00664000
                         AscbEjst.                                      00665000
RQADOWNERSTOKEN DS BL8   Stoken of the address space that owns the     *00666000
                         enclave. If the enclave is foreign, this      *00667000
                         stoken refers to an address space on another  *00668000
                         system (RQADOwnerSystem), not the local       *00669000
                         system.                                        00670000
RQADOWNERSYSTEM DS CL8   System name on which the owner of the enclave *00671000
                         resides. If the enclave is foreign, this is   *00672000
                         the system where the original enclave is      *00673000
                         located. Otherwise it is the local system     *00674000
                         name.                                          00675000
RQADOWNERJOBNAME DS CL8  Job name of the address space that owns the   *00676000
                         enclave. If the enclave is foreign, this job  *00677000
                         name refers to a job on another system        *00678000
                         (RQADOwnerSystem), not the local system.       00679000
RQADEXPORTTOKEN DS CL32  Export token associated with the enclave if   *00680000
                         any. A monitor can collect IWMRQRY answer     *00681000
                         areas from multiple systems and match RQAD    *00682000
                         entries for a particular multisystem enclave  *00683000
                         using the export token.                        00684000
RQADSUBSYSTEMTYPE DS CL4 Subsystem type to which the enclave belongs.   00685000
RQADSUBSYSTEMNAME DS CL8 Subsystem name to which the enclave belongs.   00686000
RQADTOTALZCBPTIME DS BL8 Cumulative zCBP time consumed by dispatchable *00687000
                         units running in the enclave on the local     *00688000
                         system. For a multisystem enclave, zCBP time  *00689000
                         consumed on other systems is not included.    *00690000
                         May decrease between IWMRQRY invocations if   *00691000
                         transaction is restarted to avoid an overflow *00692000
                         of internal accumulators. Unit is zCBP time.  *00693000
                         Multiply with RQAANFFzCBP and divide by 256   *00694000
                         to calculate equivalent time on a CP           00695000
         ORG   RQADTOTALZCBPTIME                                        00696000
RQADTOTALIFATIME DS BL8  Same as above but for IFA                      00697000
RQADTOTALZCBPCPTIME DS BL8 Cumulative zCBP_on_CP time consumed by      *00698000
                         dispatchable units running in the enclave on  *00699000
                         the local system. For a multisystem system,   *00700000
                         zCBP_on_CP time consumed on other systems is  *00701000
                         not included. May decrease between IWMRQRY    *00702000
                         invocations if transaction is restarted to    *00703000
                         avoid an overflow of internal accumulators.    00704000
         ORG   RQADTOTALZCBPCPTIME                                      00705000
RQADTOTALIFACPTIME DS BL8 Same as above but for IFA                     00706000
RQADTOTALSUPTIME DS BL8  Cumulative SUP time consumed by dispatchable  *00707000
                         units running in the enclave on the local     *00708000
                         system. For a multisystem enclave, SUP time   *00709000
                         consumed on other systems is not included.    *00710000
                         May decrease between IWMRQRY invocations if   *00711000
                         transaction is restarted to avoid an overflow *00712000
                         of internal accumulators. Unit is SUP time.   *00713000
                         Multiply with RCAANFFS and divide by 256 to   *00714000
                         calculate the equivalent CP time               00715000
RQADTOTALSUPCPTIME DS BL8 Cumulative SUP_on_CP time consumed by        *00716000
                         dispatchable units running in the enclave on  *00717000
                         the local system. For a multisystem system,   *00718000
                         SUP_on_CP time consumed on other systems is   *00719000
                         not included. May decrease between IWMRQRY    *00720000
                         invocations if transaction is restarted to    *00721000
                         avoid an overflow of internal accumulators.    00722000
RQADOWNERETKN DS CL8     Enclave token of the owner of this            *00723000
                         'work-dependent' enclave. This field is       *00724000
                         invalid for non 'work-dependent' enclaves      00725000
RQADNUMWDENCLS DS H      Number of 'work-dependent' enclaves which are *00726000
                         owned by this independent enclave              00727000
         DS    CL2       reserved                                       00728000
RQADENCLARRIVALTIME DS BL8 Timestamp indicating when the work request  *00729000
                         arrived in the system. This time is in STCK   *00730000
                         format.                                        00731000
RQADENCLUSERID DS CL8    UserId used to classify the enclave.           00732000
RQAANAME EQU   C'RQAA'   'RQAA' ACRONYM                                 00733000
*                                                                       00734000
* ********************************************************************  00735000
* *                                                                  *  00736000
* * The RQAAVRID and RQAEVRID must be changed if new fields are      *  00737000
* * added to any area in the RQAA ouput area (see APAR OW11082).     *  00738000
* * This is to keep vendor products aware of changes to the output   *  00739000
* * area.                                                            *  00740000
* *                                                                  *  00741000
* * NOTE: Since there is no versioning for the RQAD, updating the    *  00742000
* *       RCAAVRID and RQAEVRID is sufficient.                       *  00743000
* *                                                                  *  00744000
* * RQAA_VERSION4,  RQAA_VERSION5                                    *  00745000
* * RQAA_VERSION7 and RQAA_VERSION8 are reserved.           @OW40548 *  00746000
* ********************************************************************  00747000
*                                                                       00748000
*                                                                       00749000
RQAA_VERSION1 EQU 1      RQAA version 1. 1=HBB5510                      00750000
RQAA_VERSION2 EQU 2      RQAA version 2. 2=HBB5520                      00751000
RQAA_VERSION3 EQU 3      RQAA version 3. 3=HBB6603                      00752000
RQAA_VERSION6 EQU 6      RQAA version 6. 6=HBB6606                      00753000
RQAA_VERSION9 EQU 9      RQAA version 9. 9=JBB6609                      00754000
RQAA_VERSION10 EQU 10    RQAA version 10 10=HBB7703                     00755000
RQAA_VERSION12 EQU 12    RQAA version 12 12=HBB7705                     00756000
RQAA_VERSION13 EQU 13    RQAA version 13 13=HBB7706                     00757000
RQAA_VERSION14 EQU 14    RQAA version 14 14=HBB7707                     00758000
RQAA_VERSION16 EQU 16    RQAA version 16 16=HBB7709                     00759000
RQAA_VERSION17 EQU 17    RQAA version 17 17=SUP Support                 00760000
RQAA_VERSION18 EQU 18    RQAA version 18 18=CRM Support                 00761000
RQAA_VERSION19 EQU 19    RQAA version 19 19=work-dep enclaves           00762000
RQAA_VERSION20 EQU 20    RQAA version 20 20=enclave userid              00763000
RQAAVRID EQU   20        Current version level                          00764000
RQAA_LEVEL1 EQU 1        RQAA level. 1=Crypto Reporting                 00765000
RQAA_LEVEL2 EQU 2        RQAA level. 2=Enclave SC Reset                 00766000
RQAALEVL EQU   2         Current level                                  00767000
RQAENAME EQU   C'RQAE'   'RQAE' ACRONYM                                 00768000
RQAE_VERSION1 EQU 1      RQAE version 1. 1=HBB5510                      00769000
RQAE_VERSION2 EQU 2      RQAE version 2. 2=HBB5520                      00770000
RQAE_VERSION3 EQU 3      RQAE version 3. 3=HBB6603                      00771000
RQAE_VERSION6 EQU 6      RQAE version 6. 6=HBB6606                      00772000
RQAE_VERSION9 EQU 9      RQAE version 9. 9=JBB6609                      00773000
RQAE_VERSION10 EQU 10    RQAE version 10 10=HBB7703                     00774000
RQAE_VERSION12 EQU 12    RQAE version 12 12=HBB7705                     00775000
RQAE_VERSION13 EQU 13    RQAE version 13 13=HBB7706                     00776000
RQAE_VERSION14 EQU 14    RQAE version 14 14=HBB7707                     00777000
RQAE_VERSION16 EQU 16    RQAE version 16 16=HBB7709                     00778000
RQAE_VERSION17 EQU 17    RQAE version 17 17=SUP Support                 00779000
RQAE_VERSION18 EQU 18    RQAE version 18 18=CRM Support                 00780000
RQAE_VERSION19 EQU 19    RQAE version 19 19=enclave userid              00781000
RQAEVRID EQU   19        Current version level                          00782000
RQAALEN  EQU   100       RQAA LENGTH                                    00783000
RQAELEN  EQU   162       RQAE LENGTH                                    00784000
MAX_RQAAED# EQU 32768    Maximum value that could be returned by       *00785000
                         RQAAED#                                        00786000
MAX_RQAAEE# EQU 32768    Maximum value that could be returned by       *00787000
                         RQAAEE#                                        00788000
RQAD_LEN EQU   *-RQAD                                                   00789000
.L000C   ANOP                                                           00790000
         AIF   ('&ZCBPRINT' EQ 'NO').P3                                 00791000
         AIF   ('&LIST' EQ 'YES').P4                                    00792000
.P3      ANOP                                                           00793000
         POP   PRINT                                                    00794000
.P4      ANOP                                                           00795000
.P_EXIT  ANOP                                                           00796000
         MEND                                                           00797000
**/ ;                                                                   00798000
* %IWMWRQAA_INCLUDED = 'YES';                                           00799000
* %DCL ZCBPRINT CHAR EXT;                                               00800000
* %DEACTIVATE ZCBPRINT;                                                 00801000
* %DCL IWMWRQAA_LIST CHAR EXT;                                          00802000
* %DEACTIVATE IWMWRQAA_LIST;                                            00803000
* %IF IWMWRQAA_LIST = 'NO' !                                            00804000
*    ZCBPRINT = 'NO' %THEN                                              00805000
* %DO;                                                                  00806000
*   @LIST PUSH NOECHO;                                                  00807000
*   @LIST NOASSEMBLE NOECHO;                                            00808000
*   @LIST OFF C NOECHO;                                                 00809000
* %END;                                                                 00810000
*/* Start of PL/X Source                                             */ 00811000
* %IF RQAAVIA = 'YES' %THEN          /* Check if RQAA ALET is           00812000
*                                       specified                    */ 00813000
*   %RQAAVIA = 'VIA(RQAAALET)';      /* Set VIA to specified value   */ 00814000
* %ELSE                                                                 00815000
*   %IF GLOBALARMODE = 'YES' %THEN   /* RQAA ALET not specified-check   00816000
*                                       if global default specified  */ 00817000
*     %RQAAVIA = 'VIA(0)';           /* If yes then set global       */ 00818000
*   %ELSE                                                               00819000
*     %RQAAVIA = '';                 /* If no then set to nulls      */ 00820000
*                                                                       00821000
*/*                                                                     00822000
*   Usage Note:                                                         00823000
*       The Workload Activity Query Answer Area contains multiple       00824000
*       subsections. Like for the answer area in total, the size of     00825000
*       these subsections is determined at runtime of the IWMRQRY WLM   00826000
*       service. To allow users to get the actual length of each of     00827000
*       these subsections, the RQAA contains a length field for each    00828000
*       of them.                                                        00829000
*       The length fields are:                                          00830000
*            RQAASCAL holds the length of an address space RQAE         00831000
*            RQAAXEEL holds the length of an enclave RQAE               00832000
*            RQAAXEDL holds the length of an enclave RQAD               00833000
*            RQAASRVL holds the length of an RQAESRV                    00834000
*                                                             @LEUSERA  00835000
**/                                                                     00836000
* DECLARE                                                               00837000
*  1 RQAA RQAAVIA BASED(RQAAPTR),    /* Workload Activity Query         00838000
*                                       Answer Area                  */ 00839000
*    3 RQAAACRO CHAR(4),             /* Acronym                      */ 00840000
*    3 RQAASIZ  FIXED(32),           /* Size of RQAA and all of its     00841000
*                                       subordinate parts            */ 00842000
*    3 RQAAVERS FIXED(8),            /* Version                      */ 00843000
*    3 RQAAMODE BIT(8),              /* System WLM mode              */ 00844000
*      5 RQAAGOAL BIT(1),            /* System is in Goal mode       */ 00845000
*      5 RQAACOMP BIT(1),            /* System is in compatibility      00846000
*                                       mode. Never on as of z/OS 1.3   00847000
*                                                            @PYN0179*/ 00848000
*      5 RQAAOVEL BIT(1),            /* System is calculating velocity  00849000
*                                       without using I/O delays.       00850000
*                                                            @PYN0179*/ 00851000
*      5 RQAAzCBPDS Bit(1),          /* 1: zCBP processors run at       00852000
*                                       different speed      @LHWCONA*/ 00853000
*       7 RQAAIDS Bit(1),            /* 1: IFA processors run at        00854000
*                                       different speed      @LHWCONC*/ 00855000
*      5 RQAASDS Bit(1),             /* 1: SUP processors run at        00856000
*                                       different speed      @WLMPSUP*/ 00857000
*      5 RQAAzCBP Bit(1),            /* 1: Fields with both zCBP and    00858000
*                                       IFA names contain data about    00859000
*                                       zCBP processors      @LHWCONA*/ 00860000
*      5 RQAARSV  BIT(2),            /* Reserved             @LHWCONC*/ 00861000
*    3 RQAARSV2 CHAR(2),             /* Reserved                     */ 00862000
*    3 RQAASCA# FIXED(16),           /* Number of RQAEs within RQAA  */ 00863000
*    3 RQAASCAL FIXED(16),           /* Length of a RQAE entry       */ 00864000
*    3 RQAASCOF FIXED(32),           /* Offset from RQAA to array of    00865000
*                                       RQAEs                        */ 00866000
*    3 RQAATIM  BIT(64),             /* Local time last sample was      00867000
*                                       acquired by the WLM sampling    00868000
*                                       code.  (STCK format)         */ 00869000
*    3 RQAANTVL FIXED(32),           /* Current sample interval (in     00870000
*                                       milliseconds).  This is the     00871000
*                                       frequency with which WLM        00872000
*                                       samples delays.  Issuing        00873000
*                                       IWMRQRY more frequently than    00874000
*                                       this may result in identical    00875000
*                                       data                         */ 00876000
*    3 RQAASRVA FIXED(16),           /* Number of server address spaces 00877000
*                                       returned (i.e. number of        00878000
*                                       RQAESRV arrays present)  @P2A*/ 00879000
*    3 RQAASRV# FIXED(16),           /* Number of service class entries 00880000
*                                       within the RQAESRV array.@P2A*/ 00881000
*    3 RQAASRVL FIXED(16),           /* Length of an entry in the       00882000
*                                       RQAESRV array.       @PYN0179*/ 00883000
*    3 RQAARSV1 FIXED(16),           /* Reserved             @PYN0179*/ 00884000
*    3 RQAASTKN CHAR(8),             /* Token that uniquely identifies  00885000
*                                       the state of the system at the  00886000
*                                       time (value in field RQAATIM)   00887000
*                                       the current data was collected. 00888000
*                                       This token is updated when a    00889000
*                                       policy activation occurs and    00890000
*                                       can be used across invocations  00891000
*                                       of IWMRQRY to associate samples 00892000
*                                                            @PYN0179*/ 00893000
*    3 RQAAED# fixed(16),            /* number of enclave descriptive   00894000
*                                       entries (zero if enclave        00895000
*                                       information not requested or    00896000
*                                       no enclaves exist). With >32K   00897000
*                                       enclave support, maximum value  00898000
*                                       that could be set for this      00899000
*                                       field is 32k.                   00900000
*                                       RQAAXED# should be used to      00901000
*                                       get the number of enclave       00902000
*                                       descriptive entries  @WLMP32E*/ 00903000
*    3 RQAAEDL fixed(16),            /* length of enclave descriptive   00904000
*                                       entry                    @L1A*/ 00905000
*    3 RQAAEDO fixed(32),            /* offset to enclave descriptive   00906000
*                                       array (zero if no enclave       00907000
*                                       RQAD entries)            @L1A*/ 00908000
*    3 RQAAEE# fixed(16),            /* number of enclave RQAE entries  00909000
*                                       (zero if enclave information    00910000
*                                       not requested or no enclaves    00911000
*                                       exist). With >32K enclave       00912000
*                                       support, maximum value that     00913000
*                                       could be set for this field is  00914000
*                                       32K. RQAAXEE# should be used to 00915000
*                                       get the number of enclave       00916000
*                                       RQAE entries         @WLMP32E*/ 00917000
*    3 RQAAEEL fixed(16),            /* length of enclave RQAE          00918000
*                                       entry                    @L1A*/ 00919000
*    3 RQAAEEO fixed(32),            /* offset to enclave RQAE entries  00920000
*                                       (zero if no enclave RQAE        00921000
*                                        entries)                @L1A*/ 00922000
*    3 RQAAXED# fixed(32),           /* number of enclave descriptive   00923000
*                                       entries (zero if enclave        00924000
*                                       information not requested or    00925000
*                                       no enclaves exist). With >32K   00926000
*                                       Enclave support, the number of  00927000
*                                       enclave descriptive entries     00928000
*                                       could be more than 32K. This    00929000
*                                       field should be used to obtain  00930000
*                                       the number enclave descriptive  00931000
*                                       entries. Added for macro        00932000
*                                       version 6 and above.            00933000
*                                       The array of RQADs is sparse.   00934000
*                                       See note preceding the RQAD     00935000
*                                       structure declare.              00936000
*                                                            @WLMP32E*/ 00937000
*    3 RQAAXEDL fixed(32),           /* length of enclave descriptive   00938000
*                                       entry. Value of this field is   00939000
*                                       identical to RQAAEDL. Added for 00940000
*                                       macro version 6 and above.      00941000
*                                                            @WLMP32E*/ 00942000
*    3 RQAAXEDO fixed(32),           /* offset to enclave descriptive   00943000
*                                       array (zero if no enclave       00944000
*                                       RQAD entries). Value of this    00945000
*                                       field is identical to RQAAEDO.  00946000
*                                       Added for macro version 6 and   00947000
*                                       above.               @WLMP32E*/ 00948000
*    3 RQAAXEE# fixed(32),           /* number of enclave RQAE entries  00949000
*                                       (zero if enclave information    00950000
*                                       not requested or no enclaves    00951000
*                                       exist). With >32K enclave       00952000
*                                       support, the number of enclave  00953000
*                                       RQAE entries could be more      00954000
*                                       than 32K. This field should     00955000
*                                       be used to get the number of    00956000
*                                       enclave RQAE entries. Added     00957000
*                                       for macro version 6 and above.  00958000
*                                                            @WLMP32E*/ 00959000
*    3 RQAAXEEL fixed(32),           /* length of enclave RQAE          00960000
*                                       entry. Value of this field is   00961000
*                                       identical to RQAAEEL. Added for 00962000
*                                       macro version 6 and above.      00963000
*                                                            @WLMP32E*/ 00964000
*    3 RQAAXEEO fixed(32),           /* offset to enclave RQAE entries  00965000
*                                       (zero if no enclave RQAE        00966000
*                                        entries). Value of this        00967000
*                                       field is identical to           00968000
*                                       RQAAEEO.  Added for macro       00969000
*                                       version 6 and above. @WLMP32E*/ 00970000
*    3 RQAACLVL Fixed(32),           /* Current change level.           00971000
*                                                            @WLMPCRY*/ 00972000
*    3 RQAANFFzCBP FIXED(31),        /* Normalization factor for zCBP.  00973000
*                                       Multiply zCBP times with this   00974000
*                                       value and divide the result by  00975000
*                                       256 to obtain the equivalent    00976000
*                                       time on a CP         @LHWCONA*/ 00977000
*      5 RQAANFFI FIXED(31),         /* Normalization factor for IFA    00978000
*                                                            @LHWCONC*/ 00979000
*    3 RQAANFFS FIXED(31),           /* Normalization factor for SUP.   00980000
*                                       Multiply SUP times with this    00981000
*                                       value and divide the result by  00982000
*                                       256 to obtain the equivalent    00983000
*                                       time on a CP         @WLMPSUP*/ 00984000
*    3 RQAAEND char(0);              /* end of the RQAA          @L1A*/ 00985000
*                                                                       00986000
* DECLARE                                                               00987000
*  1 RQAE RQAAVIA BDY(DWORD) BASED,  /* Workload Activity Query         00988000
*                                       Entry (RQAE)                 */ 00989000
*    3 RQAEACRO CHAR(4),             /* Acronym                      */ 00990000
*    3 RQAEVERS FIXED(8),            /* Version                      */ 00991000
*    3 RQAEFLGS BIT(8),              /* Flags                        */ 00992000
*      5 RQAESVRR BIT(1),            /* This address space provides     00993000
*                                       service to a different service  00994000
*                                       class than the address space    00995000
*                                       itself. If RqaeManagedAsServer  00996000
*                                       is on, WLM will manage this     00997000
*                                       space as needed to meet the     00998000
*                                       transaction's goals and the     00999000
*                                       goals specified in RQAESCLN     01000000
*                                       will be ignored. If             01001000
*                                       RqaeManagedAsServer is off,     01002000
*                                       WLM will manage this address    01003000
*                                       space to the goals specified in 01004000
*                                       RQAESCLN             @PYD0215*/ 01005000
*      5 RQAEMPL  BIT(1),            /* MPL delay.  Address space is    01006000
*                                       ready, but swapped out.      */ 01007000
*      5 RQAESWIN BIT(1),            /* Swap-in delay.  Address space   01008000
*                                       is being swapped in.         */ 01009000
*      5 RQAECCAP BIT(1),            /* Resource capping delay.         01010000
*                                       Resource group maximum is       01011000
*                                       being enforced for this         01012000
*                                       address space. This delay is    01013000
*                                       only returned if the address    01014000
*                                       space is swapped in. Only       01015000
*                                       valid in space       @PYN0179*/ 01016000
*      5 RQAECQUI BIT(1),            /* Quiesce delay.  Address space   01017000
*                                       or enclave has been reset. For  01018000
*                                       enclaves, also see RQAEFLG2:    01019000
*                                       If RqaeImplicitlyQuiesced is    01020000
*                                       on, enclave is known to be      01021000
*                                       running in an address space     01022000
*                                       which has been quiesced.        01023000
*                                       If RqaeExplicitlyQuiesced is    01024000
*                                       on, enclave is known to be      01025000
*                                       reset quiesced       @PYN0179*/ 01026000
*      5 RQAECRIT BIT(1),            /* Critical path indicator.        01027000
*                                       If on, address space is on the  01028000
*                                       critical path.       @WLMPOPC*/ 01029000
*      5 RQAEManagedAsServer Bit(1), /* WLM is managing this address    01030000
*                                       space to meet the goals of work 01031000
*                                       in other service classes. The   01032000
*                                       goals specified in RQAESCLN     01033000
*                                       will be ignored.     @PYD0215*/ 01034000
*      5 RQAERSV1 BIT(1),            /* Reserved             @PYD0215*/ 01035000
*    3 RQAECLX  FIXED(16),           /* RQAE index associated with this 01036000
*                                       address space.                  01037000
*                                       This is the index into the      01038000
*                                       service class list returned     01039000
*                                       by IWMPQRY           @PYN0179*/ 01040000
*    3 RQAERCLX,                     /* Array of RQAE indexes           01041000
*                                       associated with this address    01042000
*                                       space. Only RQAESRPG is valid   01043000
*                                       and contains the index of a     01044000
*                                       report class associated with    01045000
*                                       this address space   @PYN0179*/ 01046000
*      5 RQAESRPG FIXED(16),         /* This field contains the index   01047000
*                                       of the report class associated  01048000
*                                       with this address space         01049000
*                                                            @PYN0179*/ 01050000
*      5 RQAENRPG FIXED(16),         /* Reserved - Note *    @PYN0179*/ 01051000
*      5 RQAEURPG FIXED(16),         /* Reserved - Note *    @PYN0179*/ 01052000
*      5 RQAECRPG FIXED(16),         /* Reserved - Note *    @PYN0179*/ 01053000
*      5 RQAEARPG FIXED(16),         /* Reserved - Note *    @PYN0179*/ 01054000
*    3 RQAEPER# FIXED(8),            /* Service class period number.    01055000
*                                       If this address space is a      01056000
*                                       server, this value is always    01057000
*                                       one                  @PYN0179*/ 01058000
*    3 RQAEDMN  FIXED(8),            /* Reserved - Note *    @PYN0179*/ 01059000
*    3 RQAERSV2 CHAR(4),             /* Reserved                     */ 01060000
*    3 RQAESCLN CHAR(8),             /* Service class name associated   01061000
*                                       with this address space.        01062000
*                                                            @PYN0179*/ 01063000
*    3 RQAERCLN CHAR(8),             /* Report class name associated    01064000
*                                       with this address space.        01065000
*                                                            @PYN0179*/ 01066000
*    3 RQAERGNN CHAR(8),             /* Resource group name associated  01067000
*                                       with this address space.        01068000
*                                                            @PYN0179*/ 01069000
*    3 RQAEWKLN CHAR(8),             /* Workload name associated        01070000
*                                       with this address space.        01071000
*                                                            @PYN0179*/ 01072000
*    3 RQAEVELC,                     /* Fields used to calculate        01073000
*                                       execution velocity           */ 01074000
*      5 RQAECUSE FIXED(31),         /* CPU using.  Increased for each  01075000
*                                       TCB or SRB dispatched on any    01076000
*                                       processor (or first in-line     01077000
*                                       after sampler.)              */ 01078000
*      5 RQAETOTD FIXED(31),         /* Total delays for calculating    01079000
*                                       execution velocity.             01080000
*                                       Calculation is as follows:      01081000
*                                       RQAETOTU / (RQAETOTU+RQAETOTD)  01082000
*                                                            @WLMPIOP*/ 01083000
*    3 RQAEGDEL,                     /* General execution delays        01084000
*                                       included in RQAETOTD.  Each     01085000
*                                       dispatchable unit can increase  01086000
*                                       one of the CPU or paging        01087000
*                                       samples                      */ 01088000
*      5 RQAECPUD FIXED(16),         /* CPU delay.  Increased for each  01089000
*                                       TCB or SRB waiting to be        01090000
*                                       dispatched (other than the      01091000
*                                       first in-line behind sampler)   01092000
*                                       or for a TCB waiting for a      01093000
*                                       lock                         */ 01094000
*      5 RQAECPUC FIXED(16),         /* CPU capping delay.  Increased   01095000
*                                       for each TCB or SRB marked      01096000
*                                       non-dispatchable because of a   01097000
*                                       resource group maximum being    01098000
*                                       enforced.  Not a subset of      01099000
*                                       RQAECPUD.                    */ 01100000
*      5 RQAEAPRV FIXED(16),         /* Waiting for paging I/O from     01101000
*                                       private                      */ 01102000
*      5 RQAEACOM FIXED(16),         /* Waiting for paging I/O from     01103000
*                                       common                       */ 01104000
*      5 RQAEAXM1 FIXED(16),         /* Waiting for cross memory page   01105000
*                                       fault in address space          01106000
*                                       identified by RQAESMX1       */ 01107000
*      5 RQAEAXM2 FIXED(16),         /* Waiting for cross memory page   01108000
*                                       fault in address space          01109000
*                                       identified by RQAESMX2       */ 01110000
*      5 RQAEAXMO FIXED(16),         /* Waiting for cross memory page   01111000
*                                       fault in address space          01112000
*                                       other than that identified by   01113000
*                                       RQAESMX1 or RQAESMX2         */ 01114000
*      5 RQAEAVIO FIXED(16),         /* Waiting for paging I/O from     01115000
*                                       vio                          */ 01116000
*      5 RQAEAHSP FIXED(16),         /* Waiting for paging I/O from     01117000
*                                       standard hiperspaces.  Includes 01118000
*                                       waits during scroll write.   */ 01119000
*      5 RQAEASPD FIXED(16),         /* Waiting for shared paging       01120000
*                                       from aux                 @L2A*/ 01121000
*      5 RQAERSV3 CHAR(4),           /* Reserved                     */ 01122000
*    3 RQAEUNKN FIXED(16),           /* Unknown.  Address space is      01123000
*                                       waiting, but none of the above  01124000
*                                       reasons apply.  Value is 0 or   01125000
*                                       1.                           */ 01126000
*    3 RQAEIDLE FIXED(16),           /* Idle.  Work is in STIMER wait,  01127000
*                                       TSO terminal wait, APPC wait,   01128000
*                                       or is an initiator waiting for  01129000
*                                       work.  Value is 0 or 1.      */ 01130000
*    3 RQAESMX1 FIXED(16),           /* ASID of address space           01131000
*                                       associated with cross memory    01132000
*                                       delays in RQAEAXM1       @P1A*/ 01133000
*    3 RQAESMX2 FIXED(16),           /* ASID of address space           01134000
*                                       associated with cross memory    01135000
*                                       delays in RQAEAXM2       @P1A*/ 01136000
*    3 RQAESWOR FIXED(8),            /* Swap reason code         @P1A*/ 01137000
*    3 RQAERSV4 CHAR(7),             /* Reserved                 @P2C*/ 01138000
*    3 RQAESRVO FIXED(31),           /* Offset from RQAE to RQAESRV     01139000
*                                       array                @PYN0179*/ 01140000
*    3 RQAETOTU FIXED(16),           /* Total usings for calculating    01141000
*                                       execution velocity.  @WLMPIOP*/ 01142000
*    3 RQAEIOU  FIXED(16),           /* Total I/O usings     @WLMPIOP*/ 01143000
*    3 RQAEGDL2,                     /* Additional general execution    01144000
*                                       delays included in RQAETOTD     01145000
*                                                            @WLMPIOP*/ 01146000
*      5 RQAEIOD FIXED(16),          /* DASD I/O delay samples          01147000
*                                                            @WLMPIOP*/ 01148000
*      5 RQAEQ FIXED(16),            /* Queue delay samples.  Work is   01149000
*                                       waiting for a server.@WLMPASM*/ 01150000
*      5 RQAESPRV FIXED(16),         /* Server private area paging      01151000
*                                       delay samples.       @WLMPESM*/ 01152000
*      5 RQAESVIO FIXED(16),         /* Server space VIO paging delay   01153000
*                                       samples.             @WLMPESM*/ 01154000
*      5 RQAESHSP FIXED(16),         /* Server hiperspace paging delay  01155000
*                                       samples.             @WLMPESM*/ 01156000
*      5 RQAESMPL FIXED(16),         /* Server MPL delay samples.       01157000
*                                                            @WLMPESM*/ 01158000
*      5 RQAESSWI FIXED(16),         /* Server Swap-In delay samples.   01159000
*                                                            @WLMPESM*/ 01160000
*      5 RQAERSV5 CHAR(2),           /* Reserved             @PQC2588*/ 01161000
*    3 RQAETOTS FIXED(32),           /* Total execution samples. Sum    01162000
*                                       of RQAETOTU, RQAETOTD,          01163000
*                                       RQAEUNKN, RQAEIDLE. Also always 01164000
*                                       includes I/O using/delay        01165000
*                                       samples whether or not          01166000
*                                       I/O samples are included        01167000
*                                       in RQAETOTU/RQAETOTD            01168000
*                                                            @PQC2588*/ 01169000
*    3 RQAEFLG1 Bit(8),             /* Flags                 @WLMPECR*/ 01170000
*      5 RqaeASProtStg   Bit(1),    /* Same as                          01171000
*                                      RasdASProtStg         @WLMPGMS*/ 01172000
*      5 RqaeTrxnMgmtExempt Bit(1), /* Same as                          01173000
*                                      RasdTrxnMgmtExempt    @WLMPGMT*/ 01174000
*      5 RqaeCpuProtected Bit(1),   /* Same as                          01175000
*                                      RasdCpuProtected      @WLMPGMC*/ 01176000
*      5 RqaeStgProtected Bit(1),   /* Same as                          01177000
*                                      RasdStgProtected      @WLMPGMS*/ 01178000
*      5 RqaePromoted     Bit(1),   /* The address space is currently   01179000
*                                      promoted due to a chronic        01180000
*                                      resource contention   @LENQP3I*/ 01181000
*      5 RqaeTrxnMgmtBoth Bit(1),   /* Same as                          01182000
*                                      RasdTrxnMgmtBoth      @LCRTMEA*/ 01183000
*      5 RqaeIoPriorityGroup Bit(1),/* Same as                          01184000
*                                      RasdIoPriorityGroup   @LIOMGTA*/ 01185000
*      5 RqaeInEligHonorPriority Bit(1),/* Same as           @OA50845A  01186000
*                                      RasdInEligHonorPriority       */ 01187000
*    3 RqaeFlg2 Bit(8),             /* Enclave flags         @WLMPECR*/ 01188000
*      5 RqaeIsReset Bit(1),        /* Enclave is reset to another      01189000
*                                      service class or reset quiesced  01190000
*                                                            @WLMPECR*/ 01191000
*      5 RqaeExplicitlyQuiesced Bit(1), /* If on, enclave is known to   01192000
*                                      be reset quiesced.    @WLMPECR*/ 01193000
*      5 RqaeImplicitlyQuiesced Bit(1), /* If on, enclave is known to   01194000
*                                      be running in an address space   01195000
*                                      which has been quiesced.         01196000
*                                                            @WLMPECR*/ 01197000
*    3 RQAEReportSamples,           /* Report samples        @WLMPCRY*/ 01198000
*      5 RQAECryptoCAMU  Fixed(16), /* CAM crypto using samples.        01199000
*                                      No longer used      @WI104168C*/ 01200000
*      5 RQAECryptoCAMD  Fixed(16), /* CAM crypto delay samples.        01201000
*                                      No longer used      @WI104168C*/ 01202000
*      5 RQAECryptoAPU   Fixed(16), /* AP crypto using samples.         01203000
*                                      Inreased for every TCB found     01204000
*                                      executing on a Cryptographic     01205000
*                                      Assist Processor.     @WLMPCRY*/ 01206000
*      5 RQAECryptoAPD   Fixed(16), /* AP crypto delay samples.         01207000
*                                      Inreased for every TCB found     01208000
*                                      waiting for a Cryptographic      01209000
*                                      Assist Processor.     @WLMPCRY*/ 01210000
*      5 RQAEFeatureQD   Fixed(16), /* Feature queue delay samples.     01211000
*                                      Inreased for every TCB or SRB    01212000
*                                      found waiting on a processor     01213000
*                                      feature queue associated with    01214000
*                                      a CPU. This is a subset of       01215000
*                                      RQAECUSE.             @WLMPCRY*/ 01216000
*      5 RQAEResourceContentionDelay  Fixed(16),                 /*     01217000
*                                      Contention delay samples.        01218000
*                                      One sample is accumulated for    01219000
*                                      each resource held. Only         01220000
*                                      resource holders identified via  01221000
*                                      IWMCNTN are reported.            01222000
*                                                            @WLMPEM2*/ 01223000
*      5 RQAEResourceContentionUsing  Fixed(16),                 /*     01224000
*                                      Contention using samples.        01225000
*                                      One sample is accumulated for    01226000
*                                      each resource in use. Only       01227000
*                                      resource users identified via    01228000
*                                      IWMCNTN are reported.            01229000
*                                                            @WLMPEM2*/ 01230000
*    3 RqaeFlg3 Bit(16),            /* Additional flags      @LWBGRPC*/ 01231000
*      5 RqaeInclSpecialty Bit(1),  /* Same as                          01232000
*                                      RasdInclSpecialty     @LWBGRPA*/ 01233000
*      5 RqaeTenantResourceGroup Bit(1),  /* Same as                    01234000
*                                      RasdTenantResourceGroup          01235000
*                                                            @LWBGRPA*/ 01236000
*      5 RqaeHwContainer Bit(1),    /* Same as RasdHwContainer          01237000
*                                                            @LHWCONA*/ 01238000
*      5 RqaeAsBoost Bit(1),        /* Same as RasdAsBoost              01239000
*                                                            @LBOOS3A*/ 01240000
*    3 RQAEIFASamples,              /* IFA/zCBP samples      @LHWCONC*/ 01241000
*      5 RQAEzCBPU  FIXED(16),      /* zCBP Work running on zCBP        01242000
*                                                            @LHWCONA*/ 01243000
*        7 RQAEIFAU FIXED(16),      /* IFA Work running on IFA          01244000
*                                                            @LHWCONC*/ 01245000
*      5 RQAEzCBPUCP FIXED(16),     /* zCBP work running on regular CP  01246000
*                                                            @LHWCONA*/ 01247000
*        7 RQAEIFAUCP FIXED(16),    /* IFA work running on regular CP   01248000
*                                                            @LHWCONC*/ 01249000
*      5 RQAEzCBPD  FIXED(16),      /* work waiting to run on zCBP      01250000
*                                                            @LHWCONA*/ 01251000
*        7 RQAEIFAD FIXED(16),      /* work waiting to run on IFA       01252000
*                                                            @LHWCONC*/ 01253000
*    3 RQAESUPSamples,              /* SUP related samples   @WLMPIFA*/ 01254000
*      5 RQAESUPU   FIXED(16),      /* SUP Work running on SUP          01255000
*                                                            @WLMPSUP*/ 01256000
*      5 RQAESUPUCP FIXED(16),      /* SUP work running on regular CP   01257000
*                                                            @WLMPSUP*/ 01258000
*      5 RQAESUPD   FIXED(16),      /* work waiting to run on SUP       01259000
*                                                            @WLMPSUP*/ 01260000
*    3 RQAEEND CHAR(0);              /* RQAE end                 @L1A*/ 01261000
* DECLARE                                                               01262000
*  1 RQAESRV RQAAVIA BASED,          /* RQAE - Service classes served   01263000
*                                       array.  The                     01264000
*                                       dimension of the RQAESRV array  01265000
*                                       is the maximum number of        01266000
*                                       service classes defined.  If    01267000
*                                       a RQAESRVD entry is non-zero,   01268000
*                                       the service class number that   01269000
*                                       corresponds to the index into   01270000
*                                       the array is being served by    01271000
*                                       this address space.          */ 01272000
*    3 RQAESRVD FIXED(32);           /* An entry in the RQAESRV array.  01273000
*                                       Number of times the address     01274000
*                                       space running with this service 01275000
*                                       class (RQAECLX) served this     01276000
*                                       service class                */ 01277000
*/*                                                                     01278000
*   Note: the RQADs are returned as a sparse array.  To find valid      01279000
*         (in use) RQADs, the caller must loop through the list of all  01280000
*         RQADs and process any that have a non-0 RQADETKN value.       01281000
**/                                                                     01282000
*                                                                       01283000
* DECLARE                                                               01284000
*  1 RQAD RQAAVIA BASED              /* Enclave Descriptive             01285000
*                                       Entry                    @L1A*/ 01286000
*  , 3 RQADETKN char(8)              /* Enclave token            @L1A*/ 01287000
*  , 3 RQADQAEO fixed(32)            /* Offset to Enclave RQAE for      01288000
*                                       this entry from the RQAD (zero  01289000
*                                       when RQADETKN is zero since no  01290000
*                                       RQAE is provided         @L1A*/ 01291000
*  , 3 RQADOwnerAsid Fixed(16)       /* Asid of address space which     01292000
*                                       owns the enclave.  This field   01293000
*                                       is zero if the enclave is       01294000
*                                       foreign or the information is   01295000
*                                       unavailable due to a recovery   01296000
*                                       problem.             @WLMPMES*/ 01297000
*  , 3 RQADFlags Bit(16)             /* Interesting tidbits  @DQC0023*/ 01298000
*   , 4 RQADFlags_Byte1 Bit(8)       /* Byte boundary        @WLMPMES*/ 01299000
*    , 5 RQADDependent           Bit(1) /* The enclave was created      01300000
*                                       via IWMECREA and is a           01301000
*                                       continuation of the transaction 01302000
*                                       for the owning address space    01303000
*                                                            @PYN0179*/ 01304000
*    , 5 RQADOriginalIndependent Bit(1) /* The enclave was created      01305000
*                                       via IWMECREA and is an          01306000
*                                       independent transaction.        01307000
*                                                            @WLMPMES*/ 01308000
*    , 5 RQADForeignIndependent  Bit(1) /* The enclave was created      01309000
*                                       via IWMIMPT and is a            01310000
*                                       continuation of an independent  01311000
*                                       enclave on another system.      01312000
*                                                            @WLMPMES*/ 01313000
*    , 5 RQADForeignDependent    Bit(1) /* The enclave was created      01314000
*                                       via IWMIMPT and is a            01315000
*                                       continuation of a dependent     01316000
*                                       enclave on another system.      01317000
*                                                            @WLMPMES*/ 01318000
*    , 5 RQADInactiveEnclave     Bit(1) /* The enclave is currently on  01319000
*                                       inactive enclave queue because  01320000
*                                       SRM did not find any workunit   01321000
*                                       associated with the enclave.    01322000
*                                       Enclave will move back to       01323000
*                                       active queue once a workunit    01324000
*                                       joins the enclave    @WLMP32E*/ 01325000
*    , 5 RQADPromoted            Bit(1) /* The enclave is currently     01326000
*                                       promoted due to a chronic       01327000
*                                       resource contention  @LENQP3I*/ 01328000
*    , 5 RQADWorkDependent       Bit(1) /* The enclave is a             01329000
*                                       continuation of an independent  01330000
*                                       enclave              @OA26104*/ 01331000
*   , 4 RQADFlags_Byte2 Bit(8)       /* Byte boundary        @WLMPMES*/ 01332000
*  , 3 RQADTotalCpuTime Bit(64)      /* Cumulative CPU time consumed    01333000
*                                       by dispatchable units running   01334000
*                                       in the enclave on the local     01335000
*                                       system.  For a multisystem      01336000
*                                       enclave, CPU time consumed on   01337000
*                                       other systems is not included.  01338000
*                                       May decrease between IWMRQRY    01339000
*                                       invocations if transaction is   01340000
*                                       restarted to avoid an overflow  01341000
*                                       of internal accumulators.       01342000
*                                       Same units as AscbEjst.         01343000
*                                                            @WLMPMES*/ 01344000
*  , 3 RQADOwnerStoken  Bit(64)      /* Stoken of the address space     01345000
*                                       that owns the enclave.          01346000
*                                       If the enclave is foreign,      01347000
*                                       this stoken refers to an        01348000
*                                       address space on another        01349000
*                                       system (RQADOwnerSystem),       01350000
*                                       not the local system.           01351000
*                                                            @WLMPMES*/ 01352000
*  , 3 RQADOwnerSystem  char(8)      /* System name on which the owner  01353000
*                                       of the enclave resides.         01354000
*                                       If the enclave is foreign,      01355000
*                                       this is the system where the    01356000
*                                       original enclave is located.    01357000
*                                       Otherwise it is the local       01358000
*                                       system name.                    01359000
*                                                            @WLMPMES*/ 01360000
*  , 3 RQADOwnerJobName char(8)      /* Job name of the address space   01361000
*                                       that owns the enclave.          01362000
*                                       If the enclave is foreign,      01363000
*                                       this job name refers to a       01364000
*                                       job on another system           01365000
*                                       (RQADOwnerSystem),              01366000
*                                       not the local system.           01367000
*                                                            @WLMPMES*/ 01368000
*  , 3 RQADExportToken  char(32)     /* Export token associated with    01369000
*                                       the enclave if any.  A monitor  01370000
*                                       can collect IWMRQRY answer      01371000
*                                       areas from multiple systems     01372000
*                                       and match RQAD entries for a    01373000
*                                       particular multisystem enclave  01374000
*                                       using the export token.         01375000
*                                                            @WLMPMES*/ 01376000
*  , 3 RQADSubsystemType Char(4)     /* Subsystem type to which         01377000
*                                       the enclave belongs.            01378000
*                                                            @WLMPGMY*/ 01379000
*  , 3 RQADSubsystemName Char(8)     /* Subsystem name to which         01380000
*                                       the enclave belongs.            01381000
*                                                            @WLMPECR*/ 01382000
*  , 3 RQADTotalzCBPTime Bit(64)     /* Cumulative zCBP time consumed   01383000
*                                       by dispatchable units running   01384000
*                                       in the enclave on the local     01385000
*                                       system.  For a multisystem      01386000
*                                       enclave, zCBP time consumed on  01387000
*                                       other systems is not included.  01388000
*                                       May decrease between IWMRQRY    01389000
*                                       invocations if transaction is   01390000
*                                       restarted to avoid an overflow  01391000
*                                       of internal accumulators.       01392000
*                                       Unit is zCBP time. Multiply     01393000
*                                       with RQAANFFzCBP and divide     01394000
*                                       by 256 to calculate equivalent  01395000
*                                       time on a CP         @LHWCONA*/ 01396000
*    , 5 RQADTotalIFATime Bit(64)    /* Same as above but for IFA       01397000
*                                                            @LHWCONC*/ 01398000
*  , 3 RQADTotalzCBPCPTime Bit(64)   /* Cumulative zCBP_on_CP time      01399000
*                                       consumed by dispatchable units  01400000
*                                       running in the enclave on the   01401000
*                                       local system.                   01402000
*                                       For a multisystem system,       01403000
*                                       zCBP_on_CP time consumed on     01404000
*                                       other systems is not included.  01405000
*                                       May decrease between IWMRQRY    01406000
*                                       invocations if transaction is   01407000
*                                       restarted to avoid an overflow  01408000
*                                       of internal accumulators.       01409000
*                                                            @LHWCONA*/ 01410000
*    , 5 RQADTotalIFACPTime Bit(64)  /* Same as above but for IFA       01411000
*                                                            @LHWCONC*/ 01412000
*  , 3 RQADTotalSUPTime Bit(64)      /* Cumulative SUP time consumed    01413000
*                                       by dispatchable units running   01414000
*                                       in the enclave on the local     01415000
*                                       system.  For a multisystem      01416000
*                                       enclave, SUP time consumed on   01417000
*                                       other systems is not included.  01418000
*                                       May decrease between IWMRQRY    01419000
*                                       invocations if transaction is   01420000
*                                       restarted to avoid an overflow  01421000
*                                       of internal accumulators.       01422000
*                                       Unit is SUP time. Multiply      01423000
*                                       with RCAANFFS and divide by     01424000
*                                       256 to calculate the            01425000
*                                       equivalent CP time   @WLMPSUP*/ 01426000
*  , 3 RQADTotalSUPCPTime Bit(64)    /* Cumulative SUP_on_CP time       01427000
*                                       consumed by dispatchable units  01428000
*                                       running in the enclave on the   01429000
*                                       local system.                   01430000
*                                       For a multisystem system,       01431000
*                                       SUP_on_CP time consumed on      01432000
*                                       other systems is not included.  01433000
*                                       May decrease between IWMRQRY    01434000
*                                       invocations if transaction is   01435000
*                                       restarted to avoid an overflow  01436000
*                                       of internal accumulators.       01437000
*                                                            @WLMPSUP*/ 01438000
*  , 3 RQADOwnerETKN Char(8)         /* Enclave token of the owner of   01439000
*                                       this 'work-dependent'           01440000
*                                       enclave. This field is invalid  01441000
*                                       for non 'work-dependent'        01442000
*                                       enclaves             @OA26104*/ 01443000
*  , 3 RQADNumWDEncls Fixed(16)      /* Number of 'work-dependent'      01444000
*                                       enclaves which are owned by     01445000
*                                       this independent enclave        01446000
*                                                            @OA26104*/ 01447000
*  , 3 * Char(2)                     /* reserved            @ME20465A*/ 01448000
*  , 3 RQADEnclArrivalTime Bit(64)   /* Timestamp indicating when the   01449000
*                                       work request arrived in the     01450000
*                                       system. This time is in STCK    01451000
*                                       format.             @ME20465A*/ 01452000
*  , 3 RQADEnclUserID Char(8)       /*  UserId used to classify the     01453000
*                                       enclave.            @LEUSERA */ 01454000
*  ;                                                                    01455000
*                                                                       01456000
*DCL RQAANAME CHAR(4)  CONSTANT('RQAA');   /* 'RQAA' ACRONYM         */ 01457000
*/********************************************************************/ 01458000
*/*                                                                  */ 01459000
*/* The RQAAVRID and RQAEVRID must be changed if new fields are      */ 01460000
*/* added to any area in the RQAA ouput area (see APAR OW11082).     */ 01461000
*/* This is to keep vendor products aware of changes to the output   */ 01462000
*/* area.                                                            */ 01463000
*/*                                                                  */ 01464000
*/* NOTE: Since there is no versioning for the RQAD, updating the    */ 01465000
*/*       RCAAVRID and RQAEVRID is sufficient.                       */ 01466000
*/*                                                                  */ 01467000
*/* RQAA_VERSION4,  RQAA_VERSION5                                    */ 01468000
*/* RQAA_VERSION7 and RQAA_VERSION8 are reserved.           @OW40548 */ 01469000
*/********************************************************************/ 01470000
*DCL RQAA_VERSION1 FIXED(8) CONSTANT(1);   /* RQAA version 1.           01471000
*                                       1=HBB5510                    */ 01472000
*DCL RQAA_VERSION2 FIXED(8) CONSTANT(2);   /* RQAA version 2.           01473000
*                                       2=HBB5520            @WA11082*/ 01474000
*DCL RQAA_VERSION3 FIXED(8) CONSTANT(3);   /* RQAA version 3.           01475000
*                                       3=HBB6603            @WLMPIOP*/ 01476000
*DCL RQAA_VERSION6 FIXED(8) CONSTANT(6);   /* RQAA version 6.           01477000
*                                       6=HBB6606            @OW40548*/ 01478000
*DCL RQAA_VERSION9 FIXED(8) CONSTANT(9);   /* RQAA version 9.           01479000
*                                       9=JBB6609            @WLMPMES*/ 01480000
*DCL RQAA_VERSION10 FIXED(8) CONSTANT(10);   /* RQAA version 10         01481000
*                                       10=HBB7703           @WLMPGMC*/ 01482000
*DCL RQAA_VERSION12 FIXED(8) CONSTANT(12);   /* RQAA version 12         01483000
*                                       12=HBB7705           @WLMPCRY*/ 01484000
*DCL RQAA_VERSION13 FIXED(8) CONSTANT(13);   /* RQAA version 13         01485000
*                                       13=HBB7706           @WLMPECR*/ 01486000
*DCL RQAA_VERSION14 FIXED(8) CONSTANT(14);   /* RQAA version 14         01487000
*                                       14=HBB7707           @WLMPEM2*/ 01488000
*DCL RQAA_VERSION16 FIXED(8) CONSTANT(16);   /* RQAA version 16         01489000
*                                       16=HBB7709           @WLMPIFA*/ 01490000
*DCL RQAA_VERSION17 FIXED(8) CONSTANT(17);   /* RQAA version 17         01491000
*                                       17=SUP Support       @WLMPSUP*/ 01492000
*DCL RQAA_VERSION18 FIXED(8) CONSTANT(18);   /* RQAA version 18         01493000
*                                       18=CRM Support       @LENQP3I*/ 01494000
*DCL RQAA_VERSION19 FIXED(8) CONSTANT(19);   /* RQAA version 19         01495000
*                                       19=work-dep enclaves @OA26104*/ 01496000
*DCL RQAA_VERSION20 FIXED(8) CONSTANT(20);   /* RQAA version 20         01497000
*                                       20=enclave userid    @LEUSERA*/ 01498000
*DCL RQAAVRID FIXED(8) CONSTANT(RQAA_VERSION20);  /* Current version    01499000
*                                       level                @LEUSERC*/ 01500000
*DCL RQAA_LEVEL1   FIXED(32) CONSTANT(1);    /* RQAA level.             01501000
*                                       1=Crypto Reporting   @WLMPCRY*/ 01502000
*DCL RQAA_LEVEL2   FIXED(32) CONSTANT(2);    /* RQAA level.             01503000
*                                       2=Enclave SC Reset   @WLMPECR*/ 01504000
*DCL RQAALEVL FIXED(32) CONSTANT(RQAA_LEVEL2);    /* Current level      01505000
*                                                            @WLMPCRY*/ 01506000
*DCL RQAENAME CHAR(4)  CONSTANT('RQAE');   /* 'RQAE' ACRONYM         */ 01507000
*DCL RQAE_VERSION1 FIXED(8) CONSTANT(1);   /* RQAE version 1.           01508000
*                                       1=HBB5510                    */ 01509000
*DCL RQAE_VERSION2 FIXED(8) CONSTANT(2);   /* RQAE version 2.           01510000
*                                       2=HBB5520            @WA11082*/ 01511000
*DCL RQAE_VERSION3 FIXED(8) CONSTANT(3);   /* RQAE version 3.           01512000
*                                       3=HBB6603            @WLMPIOP*/ 01513000
*DCL RQAE_VERSION6 FIXED(8) CONSTANT(6);   /* RQAE version 6.           01514000
*                                       6=HBB6606            @OW40548*/ 01515000
*DCL RQAE_VERSION9 FIXED(8) CONSTANT(9);   /* RQAE version 9.           01516000
*                                       9=JBB6609            @WLMPMES*/ 01517000
*DCL RQAE_VERSION10 FIXED(8) CONSTANT(10);   /* RQAE version 10         01518000
*                                       10=HBB7703           @WLMPGMC*/ 01519000
*DCL RQAE_VERSION12 FIXED(8) CONSTANT(12);   /* RQAE version 12         01520000
*                                       12=HBB7705           @WLMPCRY*/ 01521000
*DCL RQAE_VERSION13 FIXED(8) CONSTANT(13);   /* RQAE version 13         01522000
*                                       13=HBB7706           @WLMPECR*/ 01523000
*DCL RQAE_VERSION14 FIXED(8) CONSTANT(14);   /* RQAE version 14         01524000
*                                       14=HBB7707           @WLMPEM2*/ 01525000
*DCL RQAE_VERSION16 FIXED(8) CONSTANT(16);   /* RQAE version 16         01526000
*                                       16=HBB7709           @WLMPIFA*/ 01527000
*DCL RQAE_VERSION17 FIXED(8) CONSTANT(17);   /* RQAE version 17         01528000
*                                       17=SUP Support       @WLMPSUP*/ 01529000
*DCL RQAE_VERSION18 FIXED(8) CONSTANT(18);   /* RQAE version 18         01530000
*                                       18=CRM Support       @LENQP3I*/ 01531000
*DCL RQAE_VERSION19 FIXED(8) CONSTANT(19);   /* RQAE version 19         01532000
*                                       19=enclave userid    @LEUSERA*/ 01533000
*DCL RQAEVRID FIXED(8) CONSTANT(RQAE_VERSION19);  /* Current version    01534000
*                                       level                @LEUSERC*/ 01535000
*DCL RQAALEN FIXED CONSTANT(LENGTH(RQAA)); /* RQAA LENGTH       @L1A */ 01536000
*DCL RQAELEN FIXED CONSTANT(LENGTH(RQAE)); /* RQAE LENGTH       @L1A */ 01537000
*DCL MAX_RQAAED# FIXED CONSTANT(32768);    /* Maximum value that        01538000
*                                       could be returned by            01539000
*                                       RQAAED#              @WLMP32E*/ 01540000
*DCL MAX_RQAAEE# FIXED CONSTANT(32768);    /* Maximum value that        01541000
*                                       could be returned by            01542000
*                                       RQAAEE#              @WLMP32E*/ 01543000
*/* End of PL/X Source                                               */ 01544000
* %IF IWMWRQAA_LIST = 'NO' !                                            01545000
*    ZCBPRINT = 'NO' %THEN                                              01546000
* %DO;                                                                  01547000
*   @LIST POP NOECHO;                                                   01548000
* %END;                                                                 01549000
* %END;                                                                 01550000
