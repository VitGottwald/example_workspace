*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IEANTRTR                              -04/22/13-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Name/Token Retrieve Register Interface        * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 2015                               * 00001200
*                                                                     * 00001300
* STATUS= HBB77A0                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*      The IEANTRTR macro provides the name/token retrieve service in * 00002000
*      a way that does not require the user to have storage prior to  * 00002100
*      the call.                                                      * 00002200
*                                                                     * 00002300
*01* EXTERNAL CLASSIFICATION:  PI                                     * 00002400
*                                                                     * 00002500
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00002600
*                                                                     * 00002700
*01* ENVIRONMENT:                                                     * 00002800
*                                                                     * 00002900
*                                                                     * 00003000
*      Minimum authorization: Problem state.  PSW key 8-15.           * 00003100
*                                                                     * 00003200
*      Dispatchable unit mode: Task or SRB mode.                      * 00003300
*                                                                     * 00003400
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00003500
*                                                                     * 00003600
*      AMODE:            31- or 64-bit.                               * 00003700
*                                                                     * 00003800
*                        If in AMODE 64, specify SYSSTATE AMODE64=YES * 00003900
*                        before invoking this macro.                  * 00004000
*                                                                     * 00004100
*      ASC mode:         Primary or Access Register.                  * 00004200
*                                                                     * 00004300
*                        If in Access Register ASC mode, specify      * 00004400
*                        SYSSTATE ASCENV=AR before invoking this      * 00004500
*                        macro.                                       * 00004600
*                                                                     * 00004700
*      Interrupt status: Enabled for I/O and external interrupts.     * 00004800
*                                                                     * 00004900
*      Locks:            The caller can hold a local, CML, or CMS     * 00005000
*                        lock; however, no locks are required.        * 00005100
*                                                                     * 00005200
*      Control parameters:     Input and output parameters may, for   * 00005300
*                        AMODE 64 callers, be above 2G.  The NAME     * 00005400
*                        parameter is assumed to be within the        * 00005500
*                        primary address space.  The LEVEL and TOKEN  * 00005600
*                        parameters may, for AR-mode callers, be in   * 00005700
*                        an ALET-qualified space.                     * 00005800
*                                                                     * 00005900
*                                                                     * 00006000
*                                                                     * 00006100
*01* PROGRAMMING REQUIREMENTS:                                        * 00006200
*                                                                     * 00006300
*                                                                     * 00006400
*    o   Before you use name/token services, you can optionally       * 00006500
*        include macro IEANTASM which includes name/token service     * 00006600
*        equates.                                                     * 00006700
*                                                                     * 00006800
*                                                                     * 00006900
*                                                                     * 00007000
*01* RESTRICTIONS:                                                    * 00007100
*                                                                     * 00007200
*                                                                     * 00007300
*    o   Do not use the IEANTRTR service unless you know that you are * 00007400
*        running on a release with z/OS 2.2 functions (as indicated   * 00007500
*        by bit CVTZOS_V2R2 in the CVT data area being on).           * 00007600
*                                                                     * 00007700
*    o   Do not use the IEANTRTR service in a RESMGR resource manager * 00007800
*        routine unless one of the following is true:                 * 00007900
*                                                                     * 00008000
*                                                                     * 00008100
*        -   The name/token pair is a system-level persistent         * 00008200
*            name/token pair.                                         * 00008300
*                                                                     * 00008400
*        -   The resource manager is running for a daughter task of   * 00008500
*            the task that owns the name/token pair.                  * 00008600
*                                                                     * 00008700
*        -   The resource manager is running for the task that owns   * 00008800
*            the name/token pair and that resource manager was        * 00008900
*            established for a specific address space and a specific  * 00009000
*            task.                                                    * 00009100
*                                                                     * 00009200
*                                                                     * 00009300
*                                                                     * 00009400
*    o   Do not call the IEANTRT callable service with name and token * 00009500
*        parameters being the same storage locations.                 * 00009600
*                                                                     * 00009700
*                                                                     * 00009800
*                                                                     * 00009900
*01* INPUT REGISTER INFORMATION:                                      * 00010000
*                                                                     * 00010100
*    Before issuing the IEANTRTR macro, the caller does not have to   * 00010200
*    place any information into any register unless using it in       * 00010300
*    register notation for a particular parameter, or using it as a   * 00010400
*    base register.                                                   * 00010500
*                                                                     * 00010600
*    Before issuing the IEANTRTR macro, the caller does not have to   * 00010700
*    place any information into any AR unless using it in register    * 00010800
*    notation for a particular parameter, or using it as a base       * 00010900
*    register.                                                        * 00011000
*                                                                     * 00011100
*01* OUTPUT REGISTER INFORMATION:                                     * 00011200
*                                                                     * 00011300
*    When control returns to the caller, the GPRs contain:            * 00011400
*                                                                     * 00011500
*                                                                     * 00011600
*    REGISTER  CONTENTS                                               * 00011700
*                                                                     * 00011800
*    0         When GR15=0, 64-bit GR0 contains bytes 0-7 of the      * 00011900
*              token of the requested name/token pair.  Otherwise,    * 00012000
*              used as a work register by the system.                 * 00012100
*                                                                     * 00012200
*    1         When GR15=0, 64-bit GR1 contains bytes 8-15 of the     * 00012300
*              token of the requested name/token pair.  Otherwise,    * 00012400
*              used as a work register by the system.                 * 00012500
*                                                                     * 00012600
*    2-13      Unchanged                                              * 00012700
*                                                                     * 00012800
*    14        Used as a work register by the system                  * 00012900
*                                                                     * 00013000
*    15        Return code                                            * 00013100
*                                                                     * 00013200
*                                                                     * 00013300
*                                                                     * 00013400
*    When control returns to the caller, the ARs contain:             * 00013500
*                                                                     * 00013600
*                                                                     * 00013700
*    REGISTER  CONTENTS                                               * 00013800
*                                                                     * 00013900
*    0-1       Used as work registers by the system                   * 00014000
*                                                                     * 00014100
*    2-13      Unchanged                                              * 00014200
*                                                                     * 00014300
*    14-15     Used as work registers by the system                   * 00014400
*                                                                     * 00014500
*                                                                     * 00014600
*                                                                     * 00014700
*    Some callers depend on register contents remaining the same      * 00014800
*    before and after issuing a service.  If the system changes the   * 00014900
*    contents of registers on which the caller depends, the caller    * 00015000
*    must save them before issuing the service, and restore them      * 00015100
*    after the system returns control.                                * 00015200
*                                                                     * 00015300
*01* PERFORMANCE IMPLICATIONS:                                        * 00015400
*    None.                                                            * 00015500
*                                                                     * 00015600
*01* SYNTAX:                                                          * 00015700
*                                                                     * 00015800
*Ýxlabel¨  IEANTRTR     LEVEL=xlevel                                  * 00015900
*                      ,NAME=xname                                    * 00016000
*                     Ý,TOKEN=xtoken¨                                 * 00016100
*                     Ý,RETCODE=xretcode¨                             * 00016200
*                                                                     * 00016300
*                                                                     * 00016400
*      Where:                                                         * 00016500
*                                                                     * 00016600
*                                                                     * 00016700
*      Ýxlabel¨                                                       * 00016800
*          is an optional symbol, starting in column 1, that is the   * 00016900
*          name on the IEANTRTR macro invocation.  The name must      * 00017000
*          conform to the rules for an ordinary assembler language    * 00017100
*          symbol.                                                    * 00017200
*          DEFAULT: No name.                                          * 00017300
*                                                                     * 00017400
*                                                                     * 00017500
*                                                                     * 00017600
*                                                                     * 00017700
*      LEVEL=xlevel                                                   * 00017800
*          is the name (RX-type), or address in register (2)-(12), of * 00017900
*          a required fullword input that specifies the level of the  * 00018000
*          name/token pair from which you want to retrieve the token  * 00018100
*          (each of these has a corresponding equate in IEANTASM):    * 00018200
*                                                                     * 00018300
*                                                                     * 00018400
*          1         Name: IEANT_TASK_LEVEL                           * 00018500
*                                                                     * 00018600
*                    Meaning: Task                                    * 00018700
*                                                                     * 00018800
*          2         Name: IEANT_HOME_LEVEL                           * 00018900
*                                                                     * 00019000
*                    Meaning: Home address space                      * 00019100
*                                                                     * 00019200
*          3         Name: IEANT_PRIMARY_LEVEL                        * 00019300
*                                                                     * 00019400
*                    Meaning: Primary address space                   * 00019500
*                                                                     * 00019600
*          4         Name: IEANT_SYSTEM_LEVEL                         * 00019700
*                                                                     * 00019800
*                    Meaning: System                                  * 00019900
*                                                                     * 00020000
*          11        Name: IEANT_TASKAUTH_LEVEL                       * 00020100
*                                                                     * 00020200
*                    Meaning: Task with authorization check           * 00020300
*                                                                     * 00020400
*          12        Name: IEANT_HOMEAUTH_LEVEL                       * 00020500
*                                                                     * 00020600
*                    Meaning: Home address space with authorization   * 00020700
*                    check                                            * 00020800
*                                                                     * 00020900
*          13        Name: IEANT_PRIMARYAUTH_LEVEL                    * 00021000
*                                                                     * 00021100
*                    Meaning: Primary address space with              * 00021200
*                    authorization check.                             * 00021300
*                                                                     * 00021400
*                                                                     * 00021500
*          Note: Levels IEANT_TASKAUTH_LEVEL (11),                    * 00021600
*          IEANT_HOMEAUTH_LEVEL (12), and IEANT_PRIMARYAUTH_LEVEL     * 00021700
*          (13) indicate that the IEANTRT callable service should     * 00021800
*          determine if the name/token pair being retrieved was       * 00021900
*          created by an authorized program.                          * 00022000
*                                                                     * 00022100
*                                                                     * 00022200
*                                                                     * 00022300
*                                                                     * 00022400
*      NAME=xname                                                     * 00022500
*          is the name (RX-type), or address in register (2)-(12), of * 00022600
*          a required 16 character input that specifies the name of   * 00022700
*          the requested name/token pair.                             * 00022800
*                                                                     * 00022900
*                                                                     * 00023000
*                                                                     * 00023100
*                                                                     * 00023200
*      ÝTOKEN=xtoken¨                                                 * 00023300
*          is the name (RS-type), or address in register (2)-(12), of * 00023400
*          an optional 16 character output that is to contain the     * 00023500
*          token of the requested name/token pair.  The token is also * 00023600
*          in 64-bit GRs 0 and 1.                                     * 00023700
*                                                                     * 00023800
*                                                                     * 00023900
*                                                                     * 00024000
*                                                                     * 00024100
*      ÝRETCODE=xretcode¨                                             * 00024200
*          is the name (RS-type) of an optional fullword output       * 00024300
*          variable, or register (2)-(12) or (15), into which the     * 00024400
*          return code is to be copied from GPR 15.  If you specify   * 00024500
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00024600
*          the value will be left in GPR 15.                          * 00024700
*                                                                     * 00024800
*                                                                     * 00024900
*                                                                     * 00025000
*01* ABEND CODES:  None.                                              * 00025100
*                                                                     * 00025200
*01* RETURN CODES:                                                    * 00025300
*                                                                     * 00025400
*                                                                     * 00025500
*                 Macro IEANTASM provides equate symbols for the      * 00025600
*                 return codes.                                       * 00025700
*                                                                     * 00025800
*       0         Name: IEANT_OK                                      * 00025900
*                                                                     * 00026000
*                 Meaning: The operation was successful.              * 00026100
*                                                                     * 00026200
*                 Action: None.                                       * 00026300
*                                                                     * 00026400
*       4         Name: IEANT_NOT_FOUND                               * 00026500
*                                                                     * 00026600
*                 Meaning:  The request is rejected because the       * 00026700
*                 system could not find the requested name/token      * 00026800
*                 pair.                                               * 00026900
*                                                                     * 00027000
*                 Action:  Check the name you specified.              * 00027100
*                                                                     * 00027200
*       16        Name: IEANT_NOT_AUTH                                * 00027300
*                                                                     * 00027400
*                 Meaning:  A request for a retrieval with            * 00027500
*                 authorization check attempted to retrieve a         * 00027600
*                 name/token pair created by an unauthorized caller.  * 00027700
*                                                                     * 00027800
*                 Action:  If your program is authorized, you need to * 00027900
*                 make sure that the name/token pair you are          * 00028000
*                 retrieving was created by another authorized        * 00028100
*                 program. You may retry the request, not requesting  * 00028200
*                 authorization check, and use the name/token pair if * 00028300
*                 it was created by an unauthorized program, but      * 00028400
*                 doing so might cause data integrity problems.       * 00028500
*                                                                     * 00028600
*       20        Name: IEANT_SRB_MODE                                * 00028700
*                                                                     * 00028800
*                 Meaning:  An SRB-mode caller attempted to retrieve  * 00028900
*                 a task-level name/token pair.                       * 00029000
*                                                                     * 00029100
*                 Action:  Check which level of name/token pair you   * 00029200
*                 are retrieving.                                     * 00029300
*                                                                     * 00029400
*       28        Name: IEANT_LEVEL_INVALID                           * 00029500
*                                                                     * 00029600
*                 Meaning:  The caller specified an incorrect level.  * 00029700
*                                                                     * 00029800
*                 Action:  Respecify the correct level. Valid values  * 00029900
*                 are 1, 2, 3, 4, 11, 12, and 13.                     * 00030000
*                                                                     * 00030100
*       64        Name: IEANT_UNEXPECTED_ERROR                        * 00030200
*                                                                     * 00030300
*                 Meaning:  A system error occurred while handling    * 00030400
*                 the request.                                        * 00030500
*                                                                     * 00030600
*                 Action:  Retry the request.                         * 00030700
*                                                                     * 00030800
*                                                                     * 00030900
*                                                                     * 00031000
*01* REASON CODES:  None.                                             * 00031100
*                                                                     * 00031200
*01* MODULE TYPE:  ASSEM MACRO                                        * 00031300
*                                                                     * 00031400
*02*   PROCESSOR:  ASSEM                                              * 00031500
*                                                                     * 00031600
*01* COMPONENT:  SC1C5                                                * 00031700
*                                                                     * 00031800
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00031900
*                                                                     * 00032000
*01* EXAMPLES:                                                        * 00032100
*                                                                     * 00032200
*    Example 1                                                        * 00032300
*                                                                     * 00032400
*    Operation:                                                       * 00032500
*                                                                     * 00032600
*                                                                     * 00032700
*        Retrieve the token but leave it in regs 0,1                  * 00032800
*                                                                     * 00032900
*                                                                     * 00033000
*                                                                     * 00033100
*    The code is as follows.                                          * 00033200
*                                                                     * 00033300
*    *************************************************************    * 00033400
*    * Retrieve the task level token for MY_NAME                 *    * 00033500
*    *************************************************************    * 00033600
*             IEANTRTR LEVEL=L,NAME=lName                             * 00033700
*             LTR   15,15           Check retcode                     * 00033800
*             JNZ   Error                                             * 00033900
*    *        Token in GR0,1 is valid                                 * 00034000
*             ....                                                    * 00034100
*    lName    DC   CL16'MY_NAME'                                      * 00034200
*    L        DC   A(IEANT_TASK_LEVEL)                                * 00034300
*             IEANTASM ,                                              * 00034400
*                                                                     * 00034500
*                                                                     * 00034600
*    Example 2                                                        * 00034700
*                                                                     * 00034800
*    Operation:                                                       * 00034900
*                                                                     * 00035000
*                                                                     * 00035100
*        Save the token into a variable                               * 00035200
*                                                                     * 00035300
*                                                                     * 00035400
*                                                                     * 00035500
*    The code is as follows.                                          * 00035600
*                                                                     * 00035700
*    *************************************************************    * 00035800
*    * Retrieve the system level token for MY_SYSNAME and        *    * 00035900
*    * save the token                                            *    * 00036000
*    *************************************************************    * 00036100
*             IEANTRTR LEVEL=L,NAME=lName,TOKEN=T                     * 00036200
*             LTR   15,15           Check retcode                     * 00036300
*             JNZ   Error                                             * 00036400
*    *        Token in T is valid                                     * 00036500
*             ....                                                    * 00036600
*    lName    DC   CL16'MY_SYSNAME'                                   * 00036700
*    L        DC   A(IEANT_SYSTEM_LEVEL)                              * 00036800
*    T        DS   CL16                                               * 00036900
*             IEANTASM ,                                              * 00037000
*                                                                     * 00037100
*                                                                     * 00037200
*01* MACRO USAGE NOTES:                                               * 00037300
*                                                                     * 00037400
*                                                                     * 00037500
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00037600
*        global macro variable.  Any value other than 'NO' will       * 00037700
*        result in the macro expansion being printed.  The default is * 00037800
*        'YES'.  The following examples illustrate how the ZPRINT     * 00037900
*        variable should be set.                                      * 00038000
*                                                                     * 00038100
*                    GBLC &ZPRINT                                     * 00038200
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00038300
*                                                                     * 00038400
*                                                                     * 00038500
*                                                                     * 00038600
*01* CHANGE ACTIVITY:                                                 * 00038700
*                                                                     * 00038800
*   Flag LineItem  FMID    Date   ID    Comment                       * 00038900
*                                                                     * 00039000
*    $L0=NTRENHAM HBB77A0 121101 PD00XB:                              * 00039100
*    $L1=NTRENH   HBB77A0 121101 PD00XB:                              * 00039200
****** END OF SPECIFICATIONS *****************************************/ 00039300
*/********************************************************************* 00039400
         MACRO                                                          00039500
&XLABEL  IEANTRTR &LEVEL=,&NAME=,&TOKEN=,&RETCODE=                      00039600
.*                                                                      00039700
*              MACDATE -04/22/13-<0>                                    00039800
.*                                                                      00039900
.*******************************************************************    00040000
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00040100
.*******************************************************************    00040200
              GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                   00040300
              GBLC  &ZTEST      YES=TEST NO=NO TEST                     00040400
              GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX             00040500
.*                                                                      00040600
              GBLC  &ZIEANTRTR  YES=MACRO USED AT LEAST ONCE            00040700
.*******************************************************************    00040800
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00040900
.*******************************************************************    00041000
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                 00041100
              LCLC  &ZCNDX      SYSNDX CHARACTERS                       00041200
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              00041300
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             00041400
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE             00041500
              LCLA  &ZAWRK      USED AS A WORK AREA                     00041600
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                  00041700
              LCLA  &ZN         NUMERIC WORK VARIABLE                   00041800
              LCLC  &ZC         CHARACTER WORK VARIABLE                 00041900
              LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE             00042000
              LCLA  &ZTLA       VALUE TOO LONG VARIABLE                 00042100
              LCLC  &ZMAC_G     "G" or null                             00042200
&ZMAC_G       SETC  ''                                                  00042300
              LCLC  &ZMAC_LR                                            00042400
&ZMAC_LR      SETC  'LR'                                                00042500
              LCLC  &ZMAC_L                                             00042600
&ZMAC_L       SETC  'L'                                                 00042700
              LCLC  &ZMAC_ST                                            00042800
&ZMAC_ST      SETC  'ST'                                                00042900
              LCLC  &ZMAC_LLGT                                          00043000
&ZMAC_LLGT    SETC  'L'                                                 00043100
              LCLC  &ZMAC_LGR                                           00043200
&ZMAC_LGR     SETC  'LR'                                                00043300
              LCLC  &ZMAC_LG                                            00043400
&ZMAC_LG      SETC  'L'                                                 00043500
              LCLC  &ZMAC_STG                                           00043600
&ZMAC_STG     SETC  'ST'                                                00043700
              LCLA  &ZMACRET    MACRO RETURN CODE                       00043800
&ZMACRET      SETA  0           ASSUME NO ERRORS                        00043900
.*                                                                      00044000
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY      00044100
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()              00044200
              LCLA  &ZPLLEN     PARAMETER LIST LENGTH                   00044300
              LCLC  &ZENDBASEPL                 End of base PL          00044400
.*******************************************************************    00044500
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00044600
.*******************************************************************    00044700
              LCLC  &XLEVEL     ++ NAME                                 00044800
              LCLC  &XNAME      ++ NAME                                 00044900
              LCLC  &XTOKEN     ++ NAME                                 00045000
              LCLC  &XRETCODE   ++ NAME                                 00045100
.*******************************************************************    00045200
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00045300
.*******************************************************************    00045400
              LCLC  &ZXLEVEL    ++ INPUT NAME                           00045500
              LCLC  &ZXNAME     ++ INPUT NAME                           00045600
              LCLC  &ZXTOKEN    ++ OUTPUT NAME                          00045700
              LCLC  &ZXRETCODE  ++ OUTPUT NAME                          00045800
.********************************************************************   00045900
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00046000
.********************************************************************   00046100
              ACTR  10000                                               00046200
.*----------------------------------------------------------------***   00046300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00046400
              AIF   (N'&LEVEL LE 1).ZG2A        CK NUM                  00046500
&ZMS          SETC  '"LEVEL='                                           00046600
&ZMS          SETC  '&ZMS.&LEVEL"'                                      00046700
&ZMS          SETC  '&ZMS "LEVEL"'                                      00046800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00046900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00047000
.ZG2A         ANOP  ,                                                   00047100
.*-------------------------------------------------------------------   00047200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00047300
&ZXLEVEL      SETC  'INPUT'     SET IN/OUTPUT                           00047400
&XLEVEL       SETC  '&LEVEL(1)'                 SET XVARIABLE           00047500
              AIF   (N'&LEVEL GT 1).ZG2B        MULTI PARMS             00047600
&XLEVEL       SETC  '&LEVEL'    SET XVARIABLE                           00047700
.ZG2B         AIF   (K'&LEVEL(1) GT 0).ZG2C                             00047800
&ZXLEVEL      SETC  ''          RESET IN/OUTPUT                         00047900
&ZMS          SETC  ' '                                                 00048000
&ZMS          SETC  '&ZMS "LEVEL" KEY AND ITS'                          00048100
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00048200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00048300
.ZG2C         ANOP  ,                                                   00048400
.*-------------------------------------------------------------------   00048500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00048600
              AIF   (K'&ZXLEVEL LE 0).ZG2R      NOT I/O                 00048700
              AIF   ('&XLEVEL'(1,1) NE '(').ZG2R                        00048800
&ZCGPR        SETC  '&XLEVEL'(2,K'&XLEVEL-2)                            00048900
              AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                         00049000
              AIF   (K'&ZCGPR GT 2).ZG2Q                                00049100
              AIF   ('&ZCGPR' EQ '0').ZG2Q                              00049200
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00049300
              AIF   (T'&ZCGPR NE 'N').ZG2Q      INVALID REG NAME        00049400
.ZG2P         ANOP  ,                                                   00049500
              AIF   (T'&ZCGPR NE 'N').ZG2R      NON NUMERIC             00049600
              AIF   ('&ZCGPR' LT '2').ZG2Q                              00049700
              AIF   ('&ZCGPR' LE '12').ZG2R                             00049800
.ZG2Q         ANOP  ,                                                   00049900
&ZMS          SETC  '"LEVEL='                                           00050000
&ZMS          SETC  '&ZMS.&LEVEL"'                                      00050100
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00050200
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00050300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00050400
.ZG2R         ANOP  ,                                                   00050500
.*----------------------------------------------------------------***   00050600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00050700
              AIF   (N'&NAME LE 1).ZG5A         CK NUM                  00050800
&ZMS          SETC  '"NAME='                                            00050900
&ZMS          SETC  '&ZMS.&NAME"'                                       00051000
&ZMS          SETC  '&ZMS "NAME"'                                       00051100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00051200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00051300
.ZG5A         ANOP  ,                                                   00051400
.*-------------------------------------------------------------------   00051500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00051600
&ZXNAME       SETC  'INPUT'     SET IN/OUTPUT                           00051700
&XNAME        SETC  '&NAME(1)'  SET XVARIABLE                           00051800
              AIF   (N'&NAME GT 1).ZG5B         MULTI PARMS             00051900
&XNAME        SETC  '&NAME'     SET XVARIABLE                           00052000
.ZG5B         AIF   (K'&NAME(1) GT 0).ZG5C                              00052100
&ZXNAME       SETC  ''          RESET IN/OUTPUT                         00052200
&ZMS          SETC  ' '                                                 00052300
&ZMS          SETC  '&ZMS "NAME" KEY AND ITS'                           00052400
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00052500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00052600
.ZG5C         ANOP  ,                                                   00052700
.*-------------------------------------------------------------------   00052800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00052900
              AIF   (K'&ZXNAME LE 0).ZG5R       NOT I/O                 00053000
              AIF   ('&XNAME'(1,1) NE '(').ZG5R                         00053100
&ZCGPR        SETC  '&XNAME'(2,K'&XNAME-2)                              00053200
              AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                         00053300
              AIF   (K'&ZCGPR GT 2).ZG5Q                                00053400
              AIF   ('&ZCGPR' EQ '0').ZG5Q                              00053500
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00053600
              AIF   (T'&ZCGPR NE 'N').ZG5Q      INVALID REG NAME        00053700
.ZG5P         ANOP  ,                                                   00053800
              AIF   (T'&ZCGPR NE 'N').ZG5R      NON NUMERIC             00053900
              AIF   ('&ZCGPR' LT '2').ZG5Q                              00054000
              AIF   ('&ZCGPR' LE '12').ZG5R                             00054100
.ZG5Q         ANOP  ,                                                   00054200
&ZMS          SETC  '"NAME='                                            00054300
&ZMS          SETC  '&ZMS.&NAME"'                                       00054400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00054500
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00054600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00054700
.ZG5R         ANOP  ,                                                   00054800
.*----------------------------------------------------------------***   00054900
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00055000
              AIF   (N'&TOKEN LE 1).ZG8A        CK NUM                  00055100
&ZMS          SETC  '"TOKEN='                                           00055200
&ZMS          SETC  '&ZMS.&TOKEN"'                                      00055300
&ZMS          SETC  '&ZMS "TOKEN"'                                      00055400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00055500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00055600
.ZG8A         ANOP  ,                                                   00055700
.*-------------------------------------------------------------------   00055800
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00055900
              AIF   (K'&TOKEN(1) LE 0).ZG8C     NO PARM                 00056000
&ZXTOKEN      SETC  'OUTPUT'    SET OUTPUT                              00056100
&XTOKEN       SETC  '&TOKEN(1)'                 SET XVARIABLE           00056200
              AIF   (N'&TOKEN GT 1).ZG8C                                00056300
&XTOKEN       SETC  '&TOKEN'    SET XVARIABLE                           00056400
.ZG8C         ANOP  ,                                                   00056500
.*-------------------------------------------------------------------   00056600
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00056700
              AIF   (K'&ZXTOKEN LE 0).ZG8R      NOT I/O                 00056800
              AIF   ('&XTOKEN'(1,1) NE '(').ZG8R                        00056900
&ZCGPR        SETC  '&XTOKEN'(2,K'&XTOKEN-2)                            00057000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                         00057100
              AIF   (K'&ZCGPR GT 2).ZG8Q                                00057200
              AIF   ('&ZCGPR' EQ '0').ZG8Q                              00057300
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00057400
              AIF   (T'&ZCGPR NE 'N').ZG8Q      INVALID REG NAME        00057500
.ZG8P         ANOP  ,                                                   00057600
              AIF   (T'&ZCGPR NE 'N').ZG8R      NON NUMERIC             00057700
              AIF   ('&ZCGPR' LT '2').ZG8Q                              00057800
              AIF   ('&ZCGPR' LE '12').ZG8R                             00057900
.ZG8Q         ANOP  ,                                                   00058000
&ZMS          SETC  '"TOKEN='                                           00058100
&ZMS          SETC  '&ZMS.&TOKEN"'                                      00058200
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00058300
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00058400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00058500
.ZG8R         ANOP  ,                                                   00058600
.*----------------------------------------------------------------***   00058700
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00058800
              AIF   (N'&RETCODE LE 1).ZG11A     CK NUM                  00058900
&ZMS          SETC  '"RETCODE='                                         00059000
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00059100
&ZMS          SETC  '&ZMS "RETCODE"'                                    00059200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00059300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00059400
.ZG11A        ANOP  ,                                                   00059500
.*-------------------------------------------------------------------   00059600
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00059700
              AIF   (K'&RETCODE(1) LE 0).ZG11C  NO PARM                 00059800
&ZXRETCODE    SETC  'OUTPUT'    SET OUTPUT                              00059900
&XRETCODE     SETC  '&RETCODE(1)'               SET XVARIABLE           00060000
              AIF   (N'&RETCODE GT 1).ZG11C                             00060100
&XRETCODE     SETC  '&RETCODE'  SET XVARIABLE                           00060200
.ZG11C        ANOP  ,                                                   00060300
.*-------------------------------------------------------------------   00060400
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00060500
              AIF   (K'&ZXRETCODE LE 0).ZG11R   NOT I/O                 00060600
              AIF   ('&XRETCODE'(1,1) NE '(').ZG11R                     00060700
&ZCGPR        SETC  '&XRETCODE'(2,K'&XRETCODE-2)                        00060800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                        00060900
              AIF   (K'&ZCGPR GT 2).ZG11Q                               00061000
              AIF   ('&ZCGPR' EQ '0').ZG11Q                             00061100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00061200
              AIF   (T'&ZCGPR NE 'N').ZG11Q     INVALID REG NAME        00061300
.ZG11P        ANOP  ,                                                   00061400
              AIF   (T'&ZCGPR NE 'N').ZG11R     NON NUMERIC             00061500
              AIF   ('&ZCGPR' EQ '15').ZG11R                            00061600
              AIF   ('&ZCGPR' LT '2').ZG11Q                             00061700
              AIF   ('&ZCGPR' LE '12').ZG11R                            00061800
.ZG11Q        ANOP  ,                                                   00061900
&ZMS          SETC  '"RETCODE='                                         00062000
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00062100
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00062200
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'            00062300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00062400
.ZG11R        ANOP  ,                                                   00062500
.******************************************************************     00062600
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00062700
.******************************************************************     00062800
              ACTR  10000                                               00062900
.*----------------------------------------------------------------***   00063000
.***AH.P02 EXTRA POSITIONALS                                            00063100
              AIF   (N'&SYSLIST LE 0).ZGLISTX   NO EXTRAS               00063200
              AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL                00063300
              AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL            00063400
              AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL             00063500
.ZGLISTX1     ANOP  ,                                                   00063600
&ZCVAL        SETC  ''          ERROR FIELD                             00063700
&ZAWRK        SETA  0           POSITIONAL NUMBER                       00063800
.ZGLIST2      ANOP  ,                                                   00063900
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                         00064000
              AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE                00064100
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                   00064200
              AGO   .ZGLIST2                                            00064300
.*                                                                      00064400
.ZGLIST3      ANOP  ,                                                   00064500
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA             00064600
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'                           00064700
&ZMS          SETC  '&ZMS "&ZCVAL"'                                     00064800
&ZMS          SETC  '&ZMS CANNOT BE USED.'                              00064900
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                      00065000
              MNOTE 8,' &ZMS ARE ALLOWED.'                              00065100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00065200
.ZGLISTX      ANOP  ,                                                   00065300
&ZASYSLNDX    SETA  0                                                   00065400
.*******************************************************************    00065500
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00065600
.*******************************************************************    00065700
              AIF   (&ZMACRET NE 0).ZLX2        ERROR DETECTED          00065800
.*******************************************************************    00065900
.***AE.01  START OF IEANTRTR MACRO CODE                                 00066000
.*******************************************************************    00066100
              LCLC  &M0M0001                 NAME                       00066200
&M0M0001      SETC  '&XLABEL'                SET NAME                   00066300
              AIF   (K'&XLABEL NE 0).XLAB2                              00066400
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT NAME               00066500
.*                                                                      00066600
.XLAB2        ANOP  ,                                                   00066700
&M0M0001 DS    0H                             IEANTRTR-0                00066800
.*******************************************************************    00066900
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00067000
.*******************************************************************    00067100
              PUSH  PRINT                                               00067200
              AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON          00067300
              PRINT OFF         ++ PR01                                 00067400
              AGO   .ZPRNTXX                                            00067500
.ZPRINTX      PRINT ON                                                  00067600
.ZPRNTXX      ANOP  ,                                                   00067700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00067800
         SYSSTATE TEST                                             @L1A 00067900
         GBLC  &SYSAM64                                            @L1A 00068000
         GBLC  &SYSASCE                                            @L1A 00068100
         LCLC  &LLGT                                               @L1A 00068200
         LCLC  &Offset                                             @L1A 00068300
&LLGT    SETC  'L   '                                              @L1A 00068400
&Offset  SETC '248'                                                @L1A 00068500
         AIF   ('&SYSAM64' NE 'YES').NotAM64                       @L1A 00068600
&LLGT    SETC  'LLGT'                                              @L1A 00068700
&Offset  SETC '252'                                                @L1A 00068800
.NotAM64 ANOP                                                      @L1A 00068900
.* Process Level                                                   @L1A 00069000
         AIF   ('&LEVEL'(1,1) EQ '(').LevelReg                     @L1A 00069100
         AIF   (T'&LEVEL EQ 'N').LevelLiteral                      @L1A 00069200
         L     0,&LEVEL                                            @L1A 00069300
         Ago   .EndLevelCheck                                      @L1A 00069400
.LevelReg ANOP                                                     @L1A 00069500
         L     0,0(,&LEVEL(1))                                     @L1A 00069600
         Ago   .EndLevelCheck                                      @L1A 00069700
.LevelLiteral ANOP                                                 @L1A 00069800
         LHI   0,&LEVEL                                            @L1A 00069900
.EndLevelCheck ANOP                                                @L1A 00070000
.* Process Name                                                    @L1A 00070100
         AIF   ('&NAME'(1,1) EQ '(').NameReg                       @L1A 00070200
         LA    1,&NAME                                             @L1A 00070300
         Ago   .EndNameCheck                                       @L1A 00070400
.NameReg ANOP                                                      @L1A 00070500
         LA    1,0&NAME                                            @L1A 00070600
.EndNameCheck ANOP                                                 @L1A 00070700
.* Call                                                            @L1A 00070800
         &LLGT 15,16(0,0)            CVT                           @L1A 00070900
         L     15,544(15,0)          CSRTABLE                      @L1A 00071000
         L     15,20(15,0)           IEACSTBL                      @L1A 00071100
         L     15,&Offset.(15,0)     Retrieve-Register service     @L1A 00071200
         BASR  14,15                                               @L1A 00071300
.* Process Token                                                   @L1A 00071400
         AIF   ('&TOKEN' EQ '').EndTokenCheck                      @L1A 00071500
         AIF   ('&TOKEN'(1,1) EQ '(').TokenReg                     @L1A 00071600
         STMG  0,1,&TOKEN                                          @L1A 00071700
         Ago   .EndTokenCheck                                      @L1A 00071800
.TokenReg ANOP                                                     @L1A 00071900
         STMG  0,1,0(&TOKEN(1))                                    @L1A 00072000
.EndTokenCheck ANOP                                                @L1A 00072100
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00072200
.********************************************************************   00072300
.***AL.A01  INTERNAL ARRAY TO PRODUCE FORMATTED CODE                    00072400
.********************************************************************   00072500
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00072600
                      LCLA  &ZOPN1         INVOCATION INDEX             00072700
                      LCLC  &ZOPL(4095)    LABEL                        00072800
                      LCLC  &ZOPO(4095)    OPERATION                    00072900
                      LCLC  &ZOPV(4095)    VALUE                        00073000
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00073100
.*                                                                      00073200
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00073300
.*******************************************************************    00073400
.***AO.X02  RETURN CODE PROCESSING                                      00073500
.*******************************************************************    00073600
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00073700
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00073800
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00073900
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00074000
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00074100
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00074200
&ZOPN                 SETA  &ZOPN+1                                     00074300
&ZOPL(&ZOPN)          SETC  ' '                                         00074400
&ZOPO(&ZOPN)          SETC  'ST'                                        00074500
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00074600
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00074700
                      AGO   .ZMRETX                                     00074800
.*                                                                      00074900
.ZMRET2               ANOP  ,                                           00075000
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00075100
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00075200
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00075300
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00075400
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00075500
&ZOPN                 SETA  &ZOPN+1                                     00075600
&ZOPL(&ZOPN)          SETC  ' '                                         00075700
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00075800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00075900
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00076000
.ZMRETX               ANOP  ,                                           00076100
.*******************************************************************    00076200
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00076300
.*******************************************************************    00076400
                      ACTR  10000                                       00076500
.*                                                                      00076600
                      LCLA  &ZLC           COLUMN POSITION              00076700
                      LCLA  &ZOPX          LIST TABLE INDEX             00076800
                      LCLC  &ZLL           LABEL                        00076900
                      LCLC  &ZLOP          OPERATION                    00077000
                      LCLC  &ZLV           VALUE                        00077100
                      LCLC  &ZLD           DESCRIPTION                  00077200
.*                                                                      00077300
&ZOPX                 SETA  1                                           00077400
.*******************************************************************    00077500
.***AP.X01  FORMAT GENERATED CODE                                       00077600
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00077700
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00077800
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00077900
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00078000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00078100
                      AIF   (K'&ZLD LE 0).ZL51                          00078200
&ZLC                  SETA  35             COMMENT COLUMN               00078300
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00078400
&ZLC                  SETA  33             COMMENT COLUMN               00078500
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00078600
&ZLV                  SETC  '&ZLV'.' '                                  00078700
                      AGO   .ZL31                                       00078800
.*                                                                      00078900
.ZL41                 ANOP  ,                                           00079000
&ZLV                  SETC  '&ZLV'.' '                                  00079100
.ZL51                 ANOP  ,                                           00079200
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00079300
.*                                                                      00079400
&ZLL     &ZLOP &ZLV                                                     00079500
.*                                                                      00079600
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00079700
                      AGO   .ZL21          CONTINUE LOOPING             00079800
.*                                                                      00079900
.ZLX1                 ANOP  ,                                           00080000
.*******************************************************************    00080100
.***AP.X02  END OF IEANTRTR MACRO                                       00080200
&ZIEANTRTR            SETC  'YES'          SET IEANTRTR USED            00080300
         POP   PRINT                                                    00080400
*                                            IEANTRTR-0                 00080500
         SPACE 1                                                        00080600
.ZLX2                 ANOP  ,                                           00080700
         MEND                                                           00080800
**********************************************************************/ 00080900
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00081000
*%IEANTRTR: MACRO KEYS(LEVEL,NAME,TOKEN,RETCODE);                       00081100
*  ANS('?'!!MACLABEL!!' '!!'IEANTRTP '!!MACLIST!!                       00081200
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00081300
*%END IEANTRTR;                                                         00081400
