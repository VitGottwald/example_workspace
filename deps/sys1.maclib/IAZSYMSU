*      % IAZSYMSU: MACRO KEYS(PARM,RC);                                 00020000
*        GOTO SYMSPLX;               /* Bilingual macro                 00030000
         MACRO                                                          00040000
&LABEL   IAZSYMSU &PARM=                                                00050000
.*                                                                      00060000
.****** START OF SPECIFICATIONS **************************************  00070000
.****PROPRIETARY-STATEMENT********************************************  00080000
.*01* PROPRIETARY STATEMENT:                                         *  00090000
.*                                                                   *  00100000
.*   LICENSED MATERIALS-PROPERTY OF IBM                              *  00110000
.*   5650-ZOS Copyright IBM Corp. 2013, 2021                         *  00120000
.*                                                                   *  00130000
.*   STATUS:  HBB77D0                                                *  00140000
.*                                                                   *  00150000
.****END-OF-PROPRIETARY-STATEMENT*************************************  00160000
.*                                                                   *  00170000
.*01* DESCRIPTIVE NAME: Invoke JCL Symbol Substitution service       *  00180000
.*                      IAZSYMSU                                     *  00190000
.*                                                                   *  00200000
.*01* EXTERNAL CLASSIFICATION:  NONE                                 *  00210000
.*01* END OF EXTERNAL CLASSIFICATION:                                *  00220000
.*                                                                   *  00230000
.*01* COMPONENT ID:  JES Common (SC141)                              *  00240000
.*                                                                   *  00250000
.*01* FUNCTION:                                                      *  00260000
.*                                                                   *  00270000
.*     This macro invokes JCL Symbol Substitution Service IAZSYMSU.  *  00280000
.*     Parameter structure of the JCL Symbol Substitution service    *  00290000
.*     is mapped by the IAZYSUDF macro.                              *  00300000
.*                                                                   *  00310000
.*     IAZSYMSU service performs substitution of symbols in          *  00320000
.*     the input string using JES symbols accessed via JES Symbol    *  00330000
.*     service and optionally MVS system symbols (from the execution *  00340000
.*     system or from the conversion system).                        *  00350000
.*                                                                   *  00360000
.*01* SYNTAX:                                                        *  00370000
.*                                                                   *  00380000
.*02*  ASM:                                                          *  00390000
.*                                                                   *  00400000
.*      IAZSYMSU PARM=prmlst                                         *  00410000
.*                                                                   *  00420000
.*        PARM=prmlst  RX-type address of the parameter list.        *  00430000
.*                     The parameter list structure and data         *  00440000
.*                     returned by the service are mapped            *  00450000
.*                     by IAZYSUDF macro.                            *  00460000
.*        or                                                         *  00470000
.*                                                                   *  00480000
.*        PARM=(reg)   Address of a parameter list was loaded        *  00490000
.*                     by the caller to register reg.                *  00500000
.*        or                                                         *  00510000
.*                                                                   *  00520000
.*        PARM=        If PARM keyword is omitted, it is assumed     *  00530000
.*                     that caller loaded parameter list address     *  00540000
.*                     in register 1.                                *  00550000
.*                                                                   *  00560000
.*        Invocation return code is in register 15.                  *  00570000
.*        If invocation was successful (R15 = 0), return code from   *  00580000
.*        the IAZSYMSU service is in JYSURETN in the parameter       *  00590000
.*        list.                                                      *  00600000
.*                                                                   *  00610000
.*02*  PL/X:                                                         *  00620000
.*                                                                   *  00630000
.*      ?IAZSYMSU PARM(prmlst)                                       *  00640000
.*                RC(rc)                                             *  00650000
.*                                                                   *  00660000
.*        PARM(prmlst) Optional keyword.                             *  00670000
.*                     prmlst is the parameter list passed           *  00680000
.*                     to the service.                               *  00690000
.*                     The parameter list structure and data         *  00700000
.*                     returned by the service are mapped            *  00710000
.*                     by ?IAZYSUDF macro.                           *  00720000
.*                                                                   *  00730000
.*                     If PARM keyword is omitted, it is assumed     *  00740000
.*                     that caller loaded parameter list address     *  00750000
.*                     in register 1.                                *  00760000
.*                                                                   *  00770000
.*        RC(rc)       Optional keyword.                             *  00780000
.*                     Invocation return code set in register 15     *  00790000
.*                     will be assigned to variable rc.              *  00800000
.*                     If invocation was successful (R15 = 0),       *  00810000
.*                     return code from the IAZSYMSU service is in   *  00820000
.*                     JYSURETN in the parameter list.               *  00830000
.*                                                                   *  00840000
.*01*  REGISTER USAGE (ENTRY/EXIT):                                  *  00850000
.*                                                                   *  00860000
.*     REG       VALUE ON ENTRY       VALUE ON EXIT                  *  00870000
.*               TO MACRO             FROM MACRO                     *  00880000
.*                                                                   *  00890000
.*     R0        n/a                  unchanged                      *  00900000
.*     R1        n/a                  destroyed                      *  00910000
.*     R2-R13    n/a                  unchanged                      *  00920000
.*     R14       n/a                  destroyed                      *  00930000
.*     R15       n/a                  return code                    *  00940000
.*                                                                   *  00950000
.*01*  RETURN CODES (R15 ON EXIT):                                   *  00960000
.*                                                                   *  00970000
.*     0  - Service was successfully called.                         *  00980000
.*          Result of the call is reflected in the parameter list.   *  00990000
.*          See return code in JYSURETN and reason code in JYSUREAS. *  01000000
.*     8  - Parameter list is unusable:                              *  01010000
.*           - no parameter passed                                   *  01020000
.*           - wrong eyecatcher                                      *  01030000
.*           - wrong version                                         *  01040000
.*           - wrong length                                          *  01050000
.*     12 - Not enough storage to invoke service                     *  01060000
.*     16 - Service not available.                                   *  01070000
.*                                                                   *  01080000
.*01* ENVIRONMENT:                                                   *  01090000
.*                                                                   *  01100000
.*    IAZSYMSU service should be called in primary access mode       *  01110000
.*    in 31-bit addressing mode.                                     *  01120000
.*                                                                   *  01130000
.*    Minimum authorization:                                         *  01140000
.*       Problem or Supervisor state. Any PSW key.                   *  01150000
.*                                                                   *  01160000
.*    Dispatchable unit mode:                                        *  01170000
.*       Task or SRB mode except INIT function which must be called  *  01180000
.*       in the task mode.                                           *  01190000
.*                                                                   *  01200000
.*    Cross Memory Mode: PASN=HASN=SASN.                             *  01210000
.*                                                                   *  01220000
.*    AMODE:       31-bit.                                           *  01230000
.*                                                                   *  01240000
.*    ASC mode:    Primary.                                          *  01250000
.*                                                                   *  01260000
.*    Locks:       Any locks can be held except INIT function which  *  01270000
.*                 must be called without any locks held.            *  01280000
.*                                                                   *  01300000
.*01* NOTES:                                                         *  01310000
.*                                                                   *  01320000
.*    1.Dependencies:                                                *  01330000
.*      - CVT and IHAECVT macros are required to map CVT and ECVT    *  01340000
.*        respectively.                                              *  01350000
.*      - In addition, for PL/X the following is required:           *  01360000
.*          - the EPILOG macro is required                           *  01370000
.*          - Pointer to CVT should be defined as                    *  01380000
.*              DECLARE CVTPTR PTR(31) LOCATION(16)                  *  01390000
.*                                                                   *  01400000
.****** END OF SPECIFICATIONS ****************************************  01410000
.*********************************************************************  01420000
.*01* CHANGE ACTIVITY:                                               *  01430000
.* $AP8LWSP=BASEQ    HBB7790 130213 ALP:  Various cleanup            *  01435000
.*                                                                   *  01436000
.* $Z25LENZ=ENCRYPT  HBB77D0 191119 TJW:  SPOOL encryption            * 01437000
.*                                                                   *  01440000
.*01* A000000-999999    Created for z/OS rel 2.1              @AP4LSYM  01450000
.*********************************************************************  01460000
.*                                                                      01470000
         GBLC  &SYSASCE,&SYSAM64                               @Z25LENZ 01475000
         LCLC  &LAB                                                     01480000
&LAB     SETC  '&LABEL'                                                 01490000
.*                                                             @Z25LENZ 01490400
         SYSSTATE TEST                                         @Z25LENZ 01491300
&L       SETC  'L'                                             @Z25LENZ 01492200
&LHI     SETC  'LHI'                                           @Z25LENZ 01493100
&LT      SETC  'LT'                                            @Z25LENZ 01494000
         AIF   ('&SYSAM64' EQ 'NO').A64DONE                    @Z25LENZ 01494900
&L       SETC  'LLGT'                                          @Z25LENZ 01495800
&LHI     SETC  'LGHI'                                          @Z25LENZ 01496700
&LT      SETC  'LTGF'                                          @Z25LENZ 01497600
.A64DONE ANOP                                                  @Z25LENZ 01498500
.*                                                                      01500000
         AIF   (N'&SYSLIST EQ 0).NOPOS                                  01510000
.*                                                                      01520000
&I       SETA  1                                                        01530000
.CHKPOS  AIF   ('&SYSLIST(&I)' EQ '').NEXTPOS                           01540000
         MNOTE 8,'IAZSYMSU - Invalid parameter ''&SYSLIST(&I)'''        01550000
         AGO   .NOPOS                                                   01560000
.NEXTPOS ANOP                                                           01570000
&I       SETA  &I+1                                                     01580000
         AIF   (&I LE N'&SYSLIST).CHKPOS                                01590000
.*                                                                      01600000
.NOPOS   AIF   ('&PARM' EQ '').INVOKE,                                 C01610000
               ('&PARM'(1,1) EQ '(').DOREG                              01620000
&LAB     LA    1,&PARM             Load parameter address               01630000
&LAB     SETC  ''                                                       01640000
         AGO   .INVOKE                                                  01650000
.*                                                                      01660000
.DOREG   ANOP                                                           01670000
         AIF   ('&PARM(1)' EQ '1').INVOKE,                             C01680000
               ('&PARM(1)' EQ 'R1').INVOKE,                            C01690000
               ('&PARM(1)' EQ 'GPR1').INVOKE                            01700000
&LAB     LR    1,&PARM(1)          Load parameter address               01710000
&LAB     SETC  ''                                                       01720000
.*                                                                      01730000
.INVOKE  ANOP                                                           01740000
&LAB     &LHI  15,16                   Assume no service       @Z25LENZ 01750000
         &L    14,CVTPTR(,0)           Point to the CVT        @Z25LENZ 01760000
         &L    14,CVTECVT-CVTMAP(14)   Point to the ECVT       @Z25LENZ 01770000
         &LT   14,ECVTJCCT-ECVT(14)    Point to JCCT           @Z25LENZ 01780000
         JZ    *+16                      None, failed          @Z25LENZ 01790000
         &LT   14,48(14)               Load LX/EX              @Z25LENZ 01800000
         JZ    *+8                       Not set, failure               01810000
         PC    0(14)                   Invoke IAZSYMSU service          01820000
.*                                                                      01830000
         MEND                                                           01840000
.*                                                                      01850000
**/                                                                     01860000
*  SYMSPLX: ;                                                           01870000
*                                                                       01880000
*  DCL MAC$RET FIXED;          /* macro return code                  */ 01890000
*  DCL IDENT CHAR;             /* macro invocation                   */ 01900000
*  DCL CMT CHAR;               /* field used to build comments       */ 01910000
*  DCL INDENT FIXED;           /* indentation column                 */ 01920000
*  DCL EHAREGS CHAR EXTERNAL;  /* Registers used                     */ 01930000
*                                                                       01940000
*/********************************************************************/ 01950000
*/*                                                                  */ 01960000
*/*      Initialize variables                                        */ 01970000
*/*                                                                  */ 01980000
*/********************************************************************/ 01990000
*                                                                       02000000
*  MAC$RET = 0;              /* start off assuming no compile errors */ 02010000
*  INDENT = MACCOL;          /* start where macro coded              */ 02020000
*  IDENT = MACLABEL!!MACNAME!!MACLIST!!' '!!MACKEYS;  /* macro          02030000
*                                                         invocation */ 02040000
*                                                                       02050000
*  ANS(MACLABEL) COL(MACLMAR);   /* label the answered code          */ 02060000
*  INDENT = INDENT + 2;                                                 02070000
*  ANS('DO; '!!COMMENT(IDENT)) COL(INDENT); /* bracket the answered     02080000
*                               code with DO/END and echo the           02090000
*                               invocation as a comment              */ 02100000
*  INDENT = INDENT + 2;                                                 02110000
*                                                                       02120000
*/********************************************************************/ 02130000
*/*                                                                  */ 02140000
*/*      Make sure there are no positional parameters                */ 02150000
*/*                                                                  */ 02160000
*/********************************************************************/ 02170000
*                                                                       02180000
*  IF NUMBER(MACLIST) > 0 THEN                                          02190000
*    DO;                                                                02200000
*      ANS MSG('IAZSYMSU - Invalid positional parameters '!!            02210000
*                    'are specified');                                  02220000
*      MAC$RET = 8;                                                     02230000
*    END;                                                               02240000
*                                                                       02250000
*/********************************************************************/ 02260000
*/*                                                                  */ 02270000
*/*      Restrict registers used by the service and make sure        */ 02280000
*/*      that they are declared by the EPILOG macro.                 */ 02290000
*/*                                                                  */ 02300000
*/********************************************************************/ 02310000
*                                                                       02320000
*  CMT = 'Restrict registers';                                          02330000
*  ANS('RFY (GPR01P,GPR14P,GPR15F) RSTD; ' !!COMMENT(CMT))              02340000
*    COL(INDENT) NORESCAN;                                              02350000
*  IF (INDEX(EHAREGS,'01P')=0) THEN      /* Make sure register 1 is  */ 02360000
*    EHAREGS = EHAREGS!!'01P';           /*  declared                */ 02370000
*  IF (INDEX(EHAREGS,'14P')=0) THEN      /* Make sure register 14 is */ 02380000
*    EHAREGS = EHAREGS!!'14P';           /*  declared                */ 02390000
*  IF (INDEX(EHAREGS,'15F')=0) THEN      /* Make sure register 15 is */ 02400000
*    EHAREGS = EHAREGS!!'15F';           /*  declared                */ 02410000
*                                                                       02420000
*/********************************************************************/ 02430000
*/*                                                                  */ 02440000
*/*      If PARM() keyword was specified, put parameter address      */ 02450000
*/*      in register 1.                                              */ 02460000
*/*                                                                  */ 02470000
*/********************************************************************/ 02480000
*  IF PARM ^= '' THEN                                                   02490000
*    DO;                                                                02500000
*      CMT = 'Load parameter address';                                  02510000
*      ANS('GPR01P = ADDR('!!PARM(1)!!');' !!COMMENT(CMT))              02520000
*      COL(INDENT) NORESCAN;                                            02530000
*    END;                                                               02540000
*                                                                       02550000
*  CMT = 'Assume invocation failure';                                   02560000
*  ANS('GPR15F = 16;' !!COMMENT(CMT)) COL(INDENT) NORESCAN;             02570000
*                                                                       02580000
*/********************************************************************/ 02590000
*/*                                                                  */ 02600000
*/*      Generate invocation sequence.                               */ 02610000
*/*                                                                  */ 02620000
*/********************************************************************/ 02630000
*                                                                       02640000
*  CMT = 'Get pointer to JCCT';                                         02650000
*  ANS('GPR14P = CVTPTR->CVTMAP.CVTECVT->ECVT.ECVTJCCT; ' !!            02660000
*    COMMENT(CMT)) COL(INDENT) NORESCAN;                                02670000
*                                                                       02680000
*  CMT = 'If JCCT is available';                                        02690000
*  ANS('IF GPR14P ^= 0 THEN '!!COMMENT(CMT))                            02700000
*    COL(INDENT) NORESCAN;                                              02710000
*  ANS('DO;') COL(INDENT) NORESCAN;                                     02720000
*  INDENT = INDENT + 2;                                                 02730000
*                                                                       02740000
*  CMT = 'Load service LX/EX';                                          02750000
*  ANS('GENERATE CODE(L  14,48(14)); ' !!COMMENT(CMT))                  02760000
*    COL(INDENT) NORESCAN;                                              02770000
*  CMT = 'If service registered';                                       02780000
*  ANS('IF GPR14P ^= 0 THEN ' !!COMMENT(CMT))                           02790000
*    COL(INDENT) NORESCAN;                                              02800000
*  CMT = 'Call the service';                                            02810000
*  ANS('GENERATE CODE(PC 0(14)); ' !!COMMENT(CMT))                      02820000
*    COL(INDENT) NORESCAN;                                              02830000
*                                                                       02840000
*  INDENT = INDENT - 2;                                                 02850000
*  CMT = 'End invocation sequence';                                     02860000
*  ANS('END; '!!COMMENT(CMT)) COL(INDENT) NORESCAN;                     02870000
*                                                                       02880000
*/********************************************************************/ 02890000
*/*                                                                  */ 02900000
*/*      If RC was specified, handle return code.                    */ 02910000
*/*                                                                  */ 02920000
*/********************************************************************/ 02930000
*                                                                       02940000
*  IF RC ^= '' THEN                                                     02950000
*  DO;                                                                  02960000
*    CMT = 'Save return code';                                          02970000
*    ANS(RC(1) !! ' = GPR15F; ' !!COMMENT(CMT))                         02980000
*      COL(INDENT) NORESCAN;                                            02990000
*  END;                                                                 03000000
*                                                                       03010000
*/********************************************************************/ 03020000
*/*                                                                  */ 03030000
*/*      Unrestrict registers.                                       */ 03040000
*/*                                                                  */ 03050000
*/********************************************************************/ 03060000
*                                                                       03070000
*  CMT = 'Unrestrict registers';                                        03080000
*  ANS('RFY (GPR01P,GPR14P,GPR15F) UNRSTD; ' !!COMMENT(CMT))            03090000
*    COL(INDENT) NORESCAN;                                              03100000
*                                                                       03110000
*  INDENT = INDENT - 2;                                                 03120000
*  ANS('END;'!!COMMENT(IDENT)) COL(INDENT); /* bracket answered         03130000
*                               code with DO/END and echo the           03140000
*                               invocation as a comment              */ 03150000
*  RETURN CODE(MAC$RET);                                                03160000
*                                                                       03170000
* % END;                                                                03180000
* @Logic;                                                               03190000
* #PRAGMA TOOL=PADI.                                                    03200000
* #ASMLINE.  CVT                                                        03210000
* #ASMLINE.  IHAECVT                                                    03220000
* #ASMLINE.  IEFSSOBH                                                   03230000
* #ASMLINE.  IAZSSST DSECT=YES                                          03240000
* #LINE.Dcl CVTPTR Pointer(31);                                         03250000
* #PADIDELETE.STTRXTYP                                                  03260000
*#EPRAGMA                                                               03270000
*@ENDLOGIC;                                                             03280000
*/*                                  End of macro                    */ 99999999
