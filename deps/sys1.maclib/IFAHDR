*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IFAHDR                                -11/19/18-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  SMF Record Header Service                     * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 2017                               * 00001200
*                                                                     * 00001300
* STATUS= HBB77B0                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The IFAHDR service provides SMF record header services.  The   * 00002100
*      IFAHDR service currently performs the following functions:     * 00002200
*                                                                     * 00002300
*                                                                     * 00002400
*      o   REQUEST=GETINFO - Retrieves information from the SMF       * 00002500
*          record header, and returns the requested information to    * 00002600
*          the caller.                                                * 00002700
*                                                                     * 00002800
*                                                                     * 00002900
*                                                                     * 00003000
*01* EXTERNAL CLASSIFICATION:                                         * 00003100
*                                                                     * 00003200
*02* PI:   BASE                                                       * 00003300
*                                                                     * 00003400
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00003500
*                                                                     * 00003600
*01* ENVIRONMENT:                                                     * 00003700
*                                                                     * 00003800
*                                                                     * 00003900
*      Minimum authorization: Problem or Supervisor state.  Any PSW   * 00004000
*                        key.                                         * 00004100
*                                                                     * 00004200
*      Dispatchable unit mode: Task mode.                             * 00004300
*                                                                     * 00004400
*      Cross Memory Mode: PASN=HASN=SASN.                             * 00004500
*                                                                     * 00004600
*      AMODE:            24- or 31-bit.                               * 00004700
*                                                                     * 00004800
*                        If in AMODE 64, specify SYSSTATE AMODE64=YES * 00004900
*                        before invoking this macro.                  * 00005000
*                                                                     * 00005100
*      ASC mode:         Primary.                                     * 00005200
*                                                                     * 00005300
*      Interrupt status: Enabled or disabled for I/O and external     * 00005400
*                        interrupts.                                  * 00005500
*                                                                     * 00005600
*                                                                     * 00005700
*                                                                     * 00005800
*01* PROGRAMMING REQUIREMENTS:                                        * 00005900
*                                                                     * 00006000
*    Include the IFASMFH mapping macro in the invoking program.       * 00006100
*                                                                     * 00006200
*01* RESTRICTIONS:                                                    * 00006300
*                                                                     * 00006400
*    No cross memory services.                                        * 00006500
*                                                                     * 00006600
*01* INPUT REGISTER INFORMATION:                                      * 00006700
*                                                                     * 00006800
*    Before issuing the IFAHDR macro, the caller does not have to     * 00006900
*    place any information into any register unless using it in       * 00007000
*    register notation for a particular parameter.                    * 00007100
*                                                                     * 00007200
*01* OUTPUT REGISTER INFORMATION:                                     * 00007300
*                                                                     * 00007400
*    When control returns to the caller, the GPRs contain:            * 00007500
*                                                                     * 00007600
*                                                                     * 00007700
*    REGISTER  CONTENTS                                               * 00007800
*                                                                     * 00007900
*    0         Used as work register by the system                    * 00008000
*                                                                     * 00008100
*    1         Used as work register by the system                    * 00008200
*                                                                     * 00008300
*    2-15      Unchanged                                              * 00008400
*                                                                     * 00008500
*                                                                     * 00008600
*                                                                     * 00008700
*    When control returns to the caller, the ARs contain:             * 00008800
*                                                                     * 00008900
*                                                                     * 00009000
*    REGISTER  CONTENTS                                               * 00009100
*                                                                     * 00009200
*    0-15      Unchanged                                              * 00009300
*                                                                     * 00009400
*                                                                     * 00009500
*                                                                     * 00009600
*01* PERFORMANCE IMPLICATIONS:                                        * 00009700
*                                                                     * 00009800
*    None.                                                            * 00009900
*                                                                     * 00010000
*01* SYNTAX:                                                          * 00010100
*                                                                     * 00010200
*Ýxlabel¨  IFAHDR  Ô  REQUEST=GETINFO                                 * 00010300
*                  !     ,RECPTR=xrecptr                              * 00010400
*                  !        Ý,TYPE=xtype¨                             * 00010500
*                  !        Ý,SUBTYPE=xsubtype¨                       * 00010600
*                                                                     * 00010700
*                                                                     * 00010800
*      Where:                                                         * 00010900
*                                                                     * 00011000
*                                                                     * 00011100
*      Ýxlabel¨                                                       * 00011200
*          is an optional symbol, starting in column 1, that is the   * 00011300
*          name on the IFAHDR macro invocation.  The name must        * 00011400
*          conform to the rules for an ordinary assembler language    * 00011500
*          symbol.                                                    * 00011600
*          DEFAULT: No name.                                          * 00011700
*                                                                     * 00011800
*                                                                     * 00011900
*                                                                     * 00012000
*                                                                     * 00012100
*      REQUEST=»GETINFO                                               * 00012200
*          is a required keyword input to specifiy the requested      * 00012300
*          function.                                                  * 00012400
*                                                                     * 00012500
*                                                                     * 00012600
*          REQUEST=GETINFO                                            * 00012700
*              Retrieve information from the SMF record header.       * 00012800
*                                                                     * 00012900
*                                                                     * 00013000
*              RECPTR=xrecptr                                         * 00013100
*                  is the name (RS-type), or address in register      * 00013200
*                  (2)-(12), of a required 8 byte input that contains * 00013300
*                  the address Pointer to the record header from      * 00013400
*                  which the data is to be retrieved.  The area is    * 00013500
*                  assumed to contain an SMF record with a correctly  * 00013600
*                  formed header and/or extended header.              * 00013700
*                                                                     * 00013800
*                                                                     * 00013900
*                  ÝTYPE=xtype¨                                       * 00014000
*                      is the name (RS-type) of an optional halfword  * 00014100
*                      output area where the requested data will be   * 00014200
*                      placed.                                        * 00014300
*                                                                     * 00014400
*                                                                     * 00014500
*                                                                     * 00014600
*                                                                     * 00014700
*                  ÝSUBTYPE=xsubtype¨                                 * 00014800
*                      is the name (RS-type) of an optional halfword  * 00014900
*                      output area where the requested data will be   * 00015000
*                      placed. If the X'40' bit of the flag byte at   * 00015100
*                      offset +4 into the record header is off,       * 00015200
*                      indicating that subtypes are not valid for the * 00015300
*                      record, the subtype value returned will be     * 00015400
*                      zero.                                          * 00015500
*                                                                     * 00015600
*                                                                     * 00015700
*                                                                     * 00015800
*                                                                     * 00015900
*                                                                     * 00016000
*                                                                     * 00016100
*                                                                     * 00016200
*                                                                     * 00016300
*                                                                     * 00016400
*01* RETURN CODES:  None.                                             * 00016500
*                                                                     * 00016600
*01* REASON CODES:  None.                                             * 00016700
*                                                                     * 00016800
*01* MODULE TYPE:  ASSEM MACRO                                        * 00016900
*                                                                     * 00017000
*02*   PROCESSOR:  ASSEM                                              * 00017100
*                                                                     * 00017200
*01* COMPONENT:  SC100                                                * 00017300
*                                                                     * 00017400
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00017500
*                                                                     * 00017600
*01* ABEND CODES:  None.                                              * 00017700
*                                                                     * 00017800
*01* EXAMPLES:                                                        * 00017900
*                                                                     * 00018000
*      RECADDR      DS   A                                            * 00018100
*      RECTYPE      DS   H                                            * 00018200
*      SUBTYPE      DS   H                                            * 00018300
*          IFAHDR ,REQUEST=GETINFO,                                   * 00018400
*                 RECPTR=RECADDR,TYPE=RECTYPE,SUBTYPE=SUBTYPE         * 00018500
*         or                                                          * 00018600
*          IFAHDR REQUEST=GETINFO,                                    * 00018700
*                 RECPTR=RECADDR,TYPE=RECTYPE                         * 00018800
*         or                                                          * 00018900
*          IFAHDR REQUEST=GETINFO,                                    * 00019000
*                 RECPTR=RECADDR,SUBTYPE=SUBTYPE                      * 00019100
*                                                                     * 00019200
*                                                                     * 00019300
*01* MACRO USAGE NOTES:                                               * 00019400
*                                                                     * 00019500
*                                                                     * 00019600
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00019700
*        global macro variable.  Any value other than 'NO' will       * 00019800
*        result in the macro expansion being printed.  The default is * 00019900
*        'YES'.  The following examples illustrate how the ZPRINT     * 00020000
*        variable should be set.                                      * 00020100
*                                                                     * 00020200
*                    GBLC &ZPRINT                                     * 00020300
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00020400
*                                                                     * 00020500
*                                                                     * 00020600
*                                                                     * 00020700
*01* CHANGE ACTIVITY:                                                 * 00020800
*                                                                     * 00020900
*   Flag LineItem  FMID    Date   ID    Comment                       * 00021000
*                                                                     * 00021100
*    $L0=SMFTYPEX HBB77B0 160202 PDOO:  SMF Extended Record Type      * 00021200
*                                         W105614                     * 00021300
*    $P1=W117811  HBB77B0 160616 PDOO:  SMFTYPEX Merge Extended       * 00021400
*                                         Headers                     * 00021500
*    $01=OA53289  HBB77B0 170712 PDOO:  Various Assembler fixes       * 00021600
*    $02=OA56390  HBB77B0 180901 PDOO:  Additional Assembler fixes    * 00021700
****** END OF SPECIFICATIONS *****************************************/ 00021800
*/********************************************************************* 00021900
         MACRO                                                          00022000
&XLABEL  IFAHDR &REQUEST=,&RECPTR=,&TYPE=,&SUBTYPE=                     00022100
.*                                                                      00022200
*              MACDATE -11/19/18-<0>                                    00022300
.*                                                                      00022400
.*******************************************************************    00022500
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00022600
.*******************************************************************    00022700
              GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                   00022800
              GBLC  &ZTEST      YES=TEST NO=NO TEST                     00022900
              GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX             00023000
.*                                                                      00023100
              GBLC  &ZIFAHDR    YES=MACRO USED AT LEAST ONCE            00023200
.*******************************************************************    00023300
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00023400
.*******************************************************************    00023500
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                 00023600
              LCLC  &ZCNDX      SYSNDX CHARACTERS                       00023700
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              00023800
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             00023900
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE             00024000
              LCLA  &ZAWRK      USED AS A WORK AREA                     00024100
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                  00024200
              LCLA  &ZN         NUMERIC WORK VARIABLE                   00024300
              LCLC  &ZC         CHARACTER WORK VARIABLE                 00024400
              LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE             00024500
              LCLA  &ZTLA       VALUE TOO LONG VARIABLE                 00024600
              LCLC  &ZMAC_G     "G" or null                             00024700
&ZMAC_G       SETC  ''                                                  00024800
              LCLC  &ZMAC_LR                                            00024900
&ZMAC_LR      SETC  'LR'                                                00025000
              LCLC  &ZMAC_L                                             00025100
&ZMAC_L       SETC  'L'                                                 00025200
              LCLC  &ZMAC_ST                                            00025300
&ZMAC_ST      SETC  'ST'                                                00025400
              LCLC  &ZMAC_LLGT                                          00025500
&ZMAC_LLGT    SETC  'L'                                                 00025600
              LCLC  &ZMAC_LGR                                           00025700
&ZMAC_LGR     SETC  'LR'                                                00025800
              LCLC  &ZMAC_LG                                            00025900
&ZMAC_LG      SETC  'L'                                                 00026000
              LCLC  &ZMAC_STG                                           00026100
&ZMAC_STG     SETC  'ST'                                                00026200
              LCLA  &ZMACRET    MACRO RETURN CODE                       00026300
&ZMACRET      SETA  0           ASSUME NO ERRORS                        00026400
.*                                                                      00026500
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY      00026600
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()              00026700
              LCLA  &ZPLLEN     PARAMETER LIST LENGTH                   00026800
              LCLC  &ZENDBASEPL                 End of base PL          00026900
.*******************************************************************    00027000
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00027100
.*******************************************************************    00027200
              LCLC  &XREQUEST   ++ VALUE                                00027300
              LCLC  &XRECPTR    ++ NAME                                 00027400
              LCLC  &XTYPE      ++ NAME                                 00027500
              LCLC  &XSUBTYPE   ++ NAME                                 00027600
.*******************************************************************    00027700
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00027800
.*******************************************************************    00027900
              LCLC  &ZXREQUEST  ++ INPUT VALUE                          00028000
              LCLC  &ZXRECPTR   ++ INPUT NAME                           00028100
              LCLC  &ZXTYPE     ++ OUTPUT NAME                          00028200
              LCLC  &ZXSUBTYPE  ++ OUTPUT NAME                          00028300
.********************************************************************   00028400
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00028500
.********************************************************************   00028600
              ACTR  10000                                               00028700
.*------------------------------------------------------------------    00028800
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00028900
&XREQUEST     SETC  ''          INITIALIZE XVARIABLE                    00029000
.*-------------------------------------------------------------------   00029100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00029200
.ZG3          ANOP  ,                                                   00029300
              AIF   (K'&REQUEST(1) LE 0).ZG3A                           00029400
&ZTLC         SETC 'GETINFO'                                            00029500
              AIF   ('&REQUEST(1)' NE '&ZTLC').ZG13                     00029600
&XREQUEST     SETC  'GETINFO'   SET KEYWORD                             00029700
              AIF   (N'&REQUEST LE 1).ZG3A      CK NUM                  00029800
&ZMS          SETC  '"REQUEST='                                         00029900
&ZMS          SETC  '&ZMS.&REQUEST"'                                    00030000
&ZMS          SETC  '&ZMS "REQUEST"'                                    00030100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00030200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00030300
.ZG3A         ANOP  ,                                                   00030400
.*----------------------------------------------------------------***   00030500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00030600
              AIF   (N'&RECPTR LE 1).ZG5A       CK NUM                  00030700
&ZMS          SETC  '"RECPTR='                                          00030800
&ZMS          SETC  '&ZMS.&RECPTR"'                                     00030900
&ZMS          SETC  '&ZMS "RECPTR"'                                     00031000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00031100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00031200
.ZG5A         ANOP  ,                                                   00031300
.*-------------------------------------------------------------------   00031400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00031500
&ZXRECPTR     SETC  'INPUT'     SET IN/OUTPUT                           00031600
&XRECPTR      SETC  '&RECPTR(1)'                SET XVARIABLE           00031700
              AIF   (N'&RECPTR GT 1).ZG5B       MULTI                   00031800
&XRECPTR      SETC  '&RECPTR'   SET XVARIABLE                           00031900
.ZG5B         AIF   (K'&RECPTR(1) GT 0).ZG5C                            00032000
&ZXRECPTR     SETC  ''          RESET IN/OUTPUT                         00032100
&ZMS          SETC  ' '                                                 00032200
&ZMS          SETC  '&ZMS "RECPTR" KEY AND ITS'                         00032300
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00032400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00032500
.ZG5C         ANOP  ,                                                   00032600
.*-------------------------------------------------------------------   00032700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00032800
              AIF   (K'&ZXRECPTR LE 0).ZG5R     NOT I/O                 00032900
              AIF   ('&XRECPTR'(1,1) NE '(').ZG5R                       00033000
&ZCGPR        SETC  '&XRECPTR'(2,K'&XRECPTR-2)                          00033100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                         00033200
              AIF   (K'&ZCGPR GT 2).ZG5Q                                00033300
              AIF   ('&ZCGPR' EQ '0').ZG5Q                              00033400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00033500
              AIF   (T'&ZCGPR NE 'N').ZG5Q      INVALID REG NAME        00033600
.ZG5P         ANOP  ,                                                   00033700
              AIF   (T'&ZCGPR NE 'N').ZG5R      NON NUMERIC             00033800
              AIF   ('&ZCGPR' LT '2').ZG5Q                              00033900
              AIF   ('&ZCGPR' LE '12').ZG5R                             00034000
.ZG5Q         ANOP  ,                                                   00034100
&ZMS          SETC  '"RECPTR='                                          00034200
&ZMS          SETC  '&ZMS.&RECPTR"'                                     00034300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00034400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00034500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00034600
.ZG5R         ANOP  ,                                                   00034700
.*----------------------------------------------------------------***   00034800
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00034900
              AIF   (N'&TYPE LE 1).ZG7A         CK NUM                  00035000
&ZMS          SETC  '"TYPE='                                            00035100
&ZMS          SETC  '&ZMS.&TYPE"'                                       00035200
&ZMS          SETC  '&ZMS "TYPE"'                                       00035300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00035400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00035500
.ZG7A         ANOP  ,                                                   00035600
.*-------------------------------------------------------------------   00035700
.***AG.KXVAR18 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00035800
              AIF   (K'&TYPE(1) LE 0).ZG7C      PARM                    00035900
&ZXTYPE       SETC  'OUTPUT'    SET OUTPUT                              00036000
&XTYPE        SETC  '&TYPE(1)'  SET XVARIABLE                           00036100
              AIF   (N'&TYPE GT 1).ZG7B                                 00036200
&XTYPE        SETC  '&TYPE'     SET XVARIABLE                           00036300
.ZG7B         AIF   (K'&RECPTR(1) GT 0).ZG7C    KEY                     00036400
&ZMS          SETC  '"TYPE'                                             00036500
&ZMS          SETC  '&ZMS.=&TYPE"'                                      00036600
&ZMS          SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                     00036700
&ZMS          SETC  '&ZMS '                                             00036800
&ZMS          SETC  '&ZMS "RECPTR"'                                     00036900
              MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                        00037000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00037100
.ZG7C         ANOP  ,                                                   00037200
.*-------------------------------------------------------------------   00037300
.***AG.KCK01 NAME, OPT OUTPUT, KEYS -GPR NOT ALLOWED                    00037400
              AIF   (K'&ZXTYPE LE 0).ZG7P       NOT I/O                 00037500
              AIF   ('&XTYPE'(1,1) NE '(').ZG7P                         00037600
&ZXTYPE       SETC  ''          RESET IN/OUTPUT                         00037700
&ZMS          SETC  '"TYPE='                                            00037800
&ZMS          SETC  '&ZMS.&TYPE"'                                       00037900
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00038000
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                   00038100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00038200
.ZG7P         ANOP  ,                                                   00038300
.*----------------------------------------------------------------***   00038400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00038500
              AIF   (N'&SUBTYPE LE 1).ZG10A     CK NUM                  00038600
&ZMS          SETC  '"SUBTYPE='                                         00038700
&ZMS          SETC  '&ZMS.&SUBTYPE"'                                    00038800
&ZMS          SETC  '&ZMS "SUBTYPE"'                                    00038900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00039000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00039100
.ZG10A        ANOP  ,                                                   00039200
.*-------------------------------------------------------------------   00039300
.***AG.KXVAR18 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00039400
              AIF   (K'&SUBTYPE(1) LE 0).ZG10C  PARM                    00039500
&ZXSUBTYPE    SETC  'OUTPUT'    SET OUTPUT                              00039600
&XSUBTYPE     SETC  '&SUBTYPE(1)'               SET XVARIABLE           00039700
              AIF   (N'&SUBTYPE GT 1).ZG10B                             00039800
&XSUBTYPE     SETC  '&SUBTYPE'  SET XVARIABLE                           00039900
.ZG10B        AIF   (K'&RECPTR(1) GT 0).ZG10C   KEY                     00040000
&ZMS          SETC  '"SUBTYPE'                                          00040100
&ZMS          SETC  '&ZMS.=&SUBTYPE"'                                   00040200
&ZMS          SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                     00040300
&ZMS          SETC  '&ZMS '                                             00040400
&ZMS          SETC  '&ZMS "RECPTR"'                                     00040500
              MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                        00040600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00040700
.ZG10C        ANOP  ,                                                   00040800
.*-------------------------------------------------------------------   00040900
.***AG.KCK01 NAME, OPT OUTPUT, KEYS -GPR NOT ALLOWED                    00041000
              AIF   (K'&ZXSUBTYPE LE 0).ZG10P   NOT I/O                 00041100
              AIF   ('&XSUBTYPE'(1,1) NE '(').ZG10P                     00041200
&ZXSUBTYPE    SETC  ''          RESET IN/OUTPUT                         00041300
&ZMS          SETC  '"SUBTYPE='                                         00041400
&ZMS          SETC  '&ZMS.&SUBTYPE"'                                    00041500
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00041600
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                   00041700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00041800
.ZG10P        ANOP  ,                                                   00041900
.*------------------------------------------------------------------    00042000
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00042100
.ZG13         ANOP  ,                                                   00042200
&ZXREQUEST    SETC  'INPUT'     SET IN/OUTPUT                           00042300
              AIF   (K'&XREQUEST GT 0).ZG13E    VALID ARG               00042400
              AIF   (T'&REQUEST EQ 'O').ZG13D   OMITTED                 00042500
&ZASYSLNDX    SETA  0                                                   00042600
.ZG13A        ANOP  ,           POSITIONAL MACRO KEY                    00042700
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        00042800
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG13C                    00042900
&ZTLC         SETC 'REQUEST'                                            00043000
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG13A           00043100
.ZG13B        ANOP  ,                                                   00043200
&ZXREQUEST    SETC  ''          RESET IN/OUTPUT                         00043300
&ZMS          SETC  'THE "REQUEST" KEY'                                 00043400
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             00043500
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    00043600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00043700
              AGO   .ZG13E                                              00043800
.ZG13C        ANOP  ,                                                   00043900
&ZXREQUEST    SETC  ''          RESET IN/OUTPUT                         00044000
&ZMS          SETC  '"REQUEST='                                         00044100
&ZMS          SETC  '&ZMS.&REQUEST"'                                    00044200
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00044300
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00044400
&ZMS          SETC  '&ZMS "GETINFO".'                                   00044500
              MNOTE 8,' &ZMS '                                          00044600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00044700
              AGO   .ZG13E                                              00044800
.ZG13D        ANOP  ,                                                   00044900
&XREQUEST     SETC  'GETINFO'   SET DEFAULT KEYWORD                     00045000
.ZG13E        ANOP  ,                                                   00045100
.*------------------------------------------------------------------    00045200
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00045300
              AIF   (K'&REQUEST(1) GT 0).ZG13F  PARM                    00045400
&XREQUEST     SETC  ''          ENSURE NULL KEYWORD                     00045500
&ZXREQUEST    SETC  ''          RESET IN/OUTPUT                         00045600
&ZMS          SETC  'THE'                                               00045700
&ZMS          SETC  '&ZMS "REQUEST" KEY AND ITS'                        00045800
&ZMS          SETC  '&ZMS ARGUMENT ARE REQUIRED.'                       00045900
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00046000
&ZMS          SETC  '&ZMS "GETINFO".'                                   00046100
              MNOTE 8,' &ZMS '                                          00046200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00046300
.ZG13F        ANOP  ,                                                   00046400
.******************************************************************     00046500
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00046600
.******************************************************************     00046700
              ACTR  10000                                               00046800
.*----------------------------------------------------------------***   00046900
.***AH.P02 EXTRA POSITIONALS                                            00047000
              AIF   (N'&SYSLIST LE 0).ZGLISTX   NO EXTRAS               00047100
              AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL                00047200
              AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL            00047300
              AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL             00047400
.ZGLISTX1     ANOP  ,                                                   00047500
&ZCVAL        SETC  ''          ERROR FIELD                             00047600
&ZAWRK        SETA  0           POSITIONAL NUMBER                       00047700
.ZGLIST2      ANOP  ,                                                   00047800
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                         00047900
              AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE                00048000
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                   00048100
              AGO   .ZGLIST2                                            00048200
.*                                                                      00048300
.ZGLIST3      ANOP  ,                                                   00048400
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA             00048500
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'                           00048600
&ZMS          SETC  '&ZMS "&ZCVAL"'                                     00048700
&ZMS          SETC  '&ZMS CANNOT BE USED.'                              00048800
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                      00048900
              MNOTE 8,' &ZMS ARE ALLOWED.'                              00049000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00049100
.ZGLISTX      ANOP  ,                                                   00049200
&ZASYSLNDX    SETA  0                                                   00049300
.*******************************************************************    00049400
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00049500
.*******************************************************************    00049600
              AIF   (&ZMACRET NE 0).ZLX2        ERROR DETECTED          00049700
.*******************************************************************    00049800
.***AE.01  START OF IFAHDR MACRO CODE                                   00049900
.*******************************************************************    00050000
              LCLC  &M0M0001                 NAME                       00050100
&M0M0001      SETC  '&XLABEL'                SET NAME                   00050200
              AIF   (K'&XLABEL NE 0).XLAB2                              00050300
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT NAME               00050400
.*                                                                      00050500
.XLAB2        ANOP  ,                                                   00050600
&M0M0001 DS    0H                             IFAHDR-0                  00050700
.*******************************************************************    00050800
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00050900
.*******************************************************************    00051000
              PUSH  PRINT                                               00051100
              AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON          00051200
              PRINT OFF         ++ PR01                                 00051300
              AGO   .ZPRNTXX                                            00051400
.ZPRINTX      PRINT ON                                                  00051500
.ZPRNTXX      ANOP  ,                                                   00051600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00051700
         LCLC  &L,&LR                                              @01C 00051800
         GBLC  &SYSAM64                                                 00051900
         SYSSTATE TEST                                                  00052000
         AIF   ('&SYSAM64' EQ 'YES').AM640                              00052100
&L       SETC  'L'                                                      00052200
&LR      SETC  'LR'                                                @01A 00052300
         AGO   .AM31640                                                 00052400
.AM640   ANOP                                                           00052500
&L       SETC  'LG'                                                     00052600
&LR      SETC  'LGR'                                               @01A 00052700
.AM31640 ANOP                                                           00052800
         LCLC  &SYX                                                     00052900
&SYX     SETC  '&SYSNDX'                                                00053000
         AIF   ('&XRECPTR'(1,1) EQ '(').RECPREG  RECPTR IN A REG?  @01A 00053100
         &L    1,&XRECPTR              LOAD RECORD ADDRESS              00053200
         AGO   .TYPE                   BRANCH AROUND LOAD REG      @01A 00053300
.RECPREG ANOP                          RECPTR IS IN A REGISTER     @01A 00053400
&RTREG   SETC  '&XRECPTR'(2,K'&XRECPTR-2) SET RTREG TO SPCFD REG   @01A 00053500
         &LR   1,&RTREG                LOAD RECORD ADDRESS         @01C 00053600
.TYPE    ANOP                                                      @01A 00053700
         AIF   ('&XTYPE' EQ '').SUBTYPE                                 00053800
         XR    0,0                     CLEAR WORK REGISTER              00053900
         LLC   0,SMFHDR1_RTY-SMFHDR1(,1)  LOAD RECORD TYPE         @02C 00054000
         CHI   0,126                   EXTENDED REC TYPE INDICATOR?     00054100
         JNE   STTYP&SYX               BRANCH IF NOT EXTENDED TYPE      00054200
         ICM   0,3,SMFHDR1_Ext_Rty-SMFHDR1(1) LOAD RECORD TYPE     @02C 00054300
STTYP&SYX DS    0H                                                      00054400
         STCM  0,3,&XTYPE              STORE TYPE VALUE            @01C 00054500
.SUBTYPE ANOP                                                           00054600
         AIF   ('&XSUBTYPE' EQ '').NOSUBT                               00054700
         XR    0,0                     CLEAR WORK REGISTER         @01A 00054800
         TM    SMFHDR1_FLAG-SMFHDR1(1),SMFHDR1_STV SUBTYPES VALID? @02C 00054900
         JNO   STSUBT&SYX              NO, GO STORE ZERO           @01A 00055000
         ICM   0,3,SMFHDR1_STP-SMFHDR1(1)     LOAD SUBTYPE         @02C 00055100
STSUBT&SYX  STCM 0,3,&XSUBTYPE        STORE SUBTYPE VALUE          @01C 00055200
.NOSUBT  ANOP                                                           00055300
         J     DONE&SYX                                                 00055400
RC12&SYX LA    15,12                                                    00055500
DONE&SYX DS    0H                                                       00055600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00055700
.********************************************************************   00055800
.***AL.A01  INTERNAL ARRAY TO PRODUCE FORMATTED CODE                    00055900
.********************************************************************   00056000
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00056100
                      LCLA  &ZOPN1         INVOCATION INDEX             00056200
                      LCLC  &ZOPL(4095)    LABEL                        00056300
                      LCLC  &ZOPO(4095)    OPERATION                    00056400
                      LCLC  &ZOPV(4095)    VALUE                        00056500
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00056600
.*                                                                      00056700
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00056800
.*******************************************************************    00056900
.***AO.X01  LABEL TO BYPASS INVOCATION                                  00057000
.*******************************************************************    00057100
&ZOPN     SETA  &ZOPN+1                                                 00057200
&ZOPL(&ZOPN)   SETC  'AMGE&SYSNDX'                                      00057300
&ZOPO(&ZOPN)   SETC  'DS'                                               00057400
&ZOPV(&ZOPN)   SETC  '0H'                                               00057500
&ZOPD(&ZOPN)   SETC  '++ BYPASS INVOCATION'                             00057600
.*******************************************************************    00057700
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00057800
.*******************************************************************    00057900
                      ACTR  10000                                       00058000
.*                                                                      00058100
                      LCLA  &ZLC           COLUMN POSITION              00058200
                      LCLA  &ZOPX          LIST TABLE INDEX             00058300
                      LCLC  &ZLL           LABEL                        00058400
                      LCLC  &ZLOP          OPERATION                    00058500
                      LCLC  &ZLV           VALUE                        00058600
                      LCLC  &ZLD           DESCRIPTION                  00058700
.*                                                                      00058800
&ZOPX                 SETA  1                                           00058900
.*******************************************************************    00059000
.***AP.X02  END OF IFAHDR MACRO                                         00059100
&ZIFAHDR              SETC  'YES'          SET IFAHDR USED              00059200
         POP   PRINT                                                    00059300
*                                            IFAHDR-0                   00059400
         SPACE 1                                                        00059500
.ZLX2                 ANOP  ,                                           00059600
         MEND                                                           00059700
**********************************************************************/ 00059800
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00059900
*%IFAHDR: MACRO KEYS(REQUEST,RECPTR,TYPE,SUBTYPE);                      00060000
*  ANS('?'!!MACLABEL!!' '!!'IFAHDRP '!!MACLIST!!                        00060100
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00060200
*%END IFAHDR;                                                           00060300
