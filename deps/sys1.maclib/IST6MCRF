         MACRO                                                                  
         IST6MCRF &AREA=,&AREALEN=,&USERFLD=,&BRANCH=,&OPTCD=,&ECB=,   X        
               &EXIT=,&CONMODE=,&CONXMOD=,&RTSRTRN=,&INVALP1=,         X        
               &INVALP2=,&QUALIFY=,&VTRINA=,&VTRINL=,&CD=,             X        
               &FILL=,&VTROUTA=,&VTROUTL=                @L1C @D1C @D2C         
.*                                                                              
.* /***** START OF SPECIFICATIONS ************************************/         
.* /*                                                                */         
.* /*  MACRO NAME: IST6MCRF                                          */         
.* /*                                                                */         
.* /*  DESCRIPTIVE NAME: CONTROL = RCVFMH5 PROCESSOR                 */         
.* /*                                                                */         
.* /*  COPYRIGHT: LICENSED MATERIALS - PROPERTY OF IBM               */         
.* /*                                                                */         
.* /*             THIS PRODUCT CONTAINS "RESTRICTED MATERIALS OF IBM"*/         
.* /*                                                                */         
.* /*             5695-117 (C) COPYRIGHT IBM CORP. 1987, 1994.       */         
.* /*             ALL RIGHTS RESERVED.                               */         
.* /*                                                                */         
.* /*             U.S. GOVERNMENT USERS RESTRICTED RIGHTS -          */         
.* /*             USE, DUPLICATION OR DISCLOSURE RESTRICTED BY       */         
.* /*             GSA ADP SCHEDULE CONTRACT WITH IBM CORP.           */         
.* /*                                                                */         
.* /*             SEE COPYRIGHT INSTRUCTIONS.                        */         
.* /*                                                                */         
.* /*                                                                */         
.* /*  FUNCTION:                                                     */         
.* /*      GENERATES IN-LINE CODE FOR PROCESSING THE                 */         
.* /*      CONTROL=RCVFMH5 PARAMETER ON THE APPCCMD MACRO.           */         
.* /*                                                                */         
.* /*  NOTES:                                                        */         
.* /*                                                                */         
.* /*  PROCESSOR: ASSEMBLER                                          */         
.* /*                                                                */         
.* /*  CREATED BY:                                                   */         
.* /*                                                                */         
.* /*  INTERNAL MACROS:                                              */         
.* /*      IST6MCUA,IST6MCUP,IST6MCUC,IST6MCUI                       */         
.* /*                                                                */         
.* /*  EXTERNAL REFERENCES: NONE                                     */         
.* /*                                                                */         
.* /*  CHANGE ACTIVITY:                                              */         
.* /*    05/27/86 - ZERO OUT THE QUALIFY FIELD               @P030472*/         
.* /*                                                                */         
.* /*  $MAC(IST6MCRF),COMP(API),PROD(VTAM): CONTROL=RCVFMH5 PROCESSOR*/         
.* /*                                                                */         
.* /*  FLAG REASON   RELEASE DATE   ORIGIN  FLAG DESCRIPTORS         */         
.* /*  ---- -------- ------- ------ ------  ---------------------    */         
.* /*  $BB= ACC@@AMS HVT3401 891025 615520: PL/AS CONVERSION         */         
.* /*  $T1= P100610  NQNAME2 920228 879315: ASSEMBLY ERROR ON ASMXF  */         
.* /*  $I1= FF@@@MST APPCFDX 911114 879315: APPC Full-Duplex support */         
.* /*  $L1= KA@@@PLD APPCRR  930726 446638: DCE Security Services    */         
.* /*  $L2= KA@DR006 APPCRR  940713 576146: Vector Format            */         
.* /*  $Y1= P115530  FREEDOM 940801 879315: Eliminate duplicate MVI  */         
.* /*  $D1= IA@@@MST V51APPC 941025 941213: Queued RCVFMH5 support   */         
.* /*  $D2= ID@@@MST FPAPI   950310 143576: Fast Path API for APPC   */         
.* /*                                                                */         
.* /***** END OF SPECIFICATIONS **************************************/         
.*                                                                              
.* A-000000-999999                                             @R495810         
.*                                                                              
         GBLB  &ISTGEN                                                          
         GBLB  &ISTRF                                                           
         AIF   (&ISTRF EQ 1).RFINVKW                                            
*                                                                               
*  IST6MCRF - ACF/VTAM                                                          
*                                                                               
*  COPYRIGHT: LICENSED MATERIALS - PROPERTY OF IBM                              
*                                                                               
*             THIS PRODUCT CONTAINS "RESTRICTED MATERIALS OF IBM"               
*                                                                               
*             5695-117 (C) COPYRIGHT IBM CORP. 1987, 1993.                      
*             ALL RIGHTS RESERVED.                                              
*                                                                               
*             U.S. GOVERNMENT USERS RESTRICTED RIGHTS -                         
*             USE, DUPLICATION OR DISCLOSURE RESTRICTED BY                      
*             GSA ADP SCHEDULE CONTRACT WITH IBM CORP.                          
*                                                                               
*             SEE COPYRIGHT INSTRUCTIONS.                                       
*                                                                               
&ISTRF   SETB  1                                                                
.RFINVKW ANOP                                                                   
         IST6MCUC RCVFMH5,CONTROL,INVALKW=&INVALP1                 @T1C         
         IST6MCUC RCVFMH5,CONTROL,INVALKW=&INVALP2                 @T1A         
.*                                              CHECK INVALID APPCCMD           
.RFAREA  ANOP                                                                   
         AIF   ('&AREA' EQ '').RFALEN                                           
         IST6MCUA KWVAL=&AREA,LOC=RPLAREA-IFGRPL,BASEREG=1,            X        
               KW=AREA_ADDRESS                                                  
.*                                              PUT AREA ADDRESS IN RPL         
.RFALEN  ANOP                                                                   
         AIF   ('&AREALEN' EQ '').RFUFLD                                        
         IST6MCUA KWVAL=&AREALEN,LOC=RPLBUFL-IFGRPL,BASEREG=1,         X        
               KW=AREA_LENGTH                                                   
.*                                               PUT AREA LENGTH IN RPL         
.RFUFLD  ANOP                                                                   
         AIF   ('&USERFLD' EQ '').RFVECT                           @L1C         
         IST6MCUI KW=USERFLD,KWVAL=&USERFLD,LEN=4,                     X        
               LOC=RPL6USR-ISTRPL6X,BASEREG=14                                  
.*                                             PUT USERFLD IN APPC AREA         
.RFVECT  ANOP                          ENSURE BOTH PARMS ARE CODED              
.*                                     OR BOTH ARE NOT CODED       @L1A         
         AIF   (('&VTRINA' EQ '') AND ('&VTRINL' EQ '')).RFVOUT    @D2C         
         AIF   (('&VTRINA' EQ '') OR ('&VTRINL' EQ '')).RFERVI     @D2C         
         IST6MCUA KW=VTAM_TO_APPL_VECTOR_ADDRESS,KWVAL=&VTRINA,        X        
               LOC=RPL6VAIA-ISTRPL6X,BASEREG=14                    @D2C         
.*                                     STORE VECTOR AREA INPUT ADDRESS          
.*                                                                 @L1A         
         IST6MCUA KW=VTAM_TO_APPL_VECTOR_LENGTH,KWVAL=&VTRINL,LEN=2,   X        
               LOC=RPL6VAIL-ISTRPL6X,BASEREG=14                    @D2C         
.*                                     STORE VECTOR AREA INPUT LENGTH           
.*                                                                 @L1A         
         AGO   .RFVOUT                                             @D2C         
.RFERVI  ANOP                                                      @L1A         
         IST6MCER 13,VTRINA,VTRINL     ONLY ONE PARM CODED         @D2C         
.RFVOUT  ANOP                          ENSURE BOTH PARMS ARE CODED              
.*                                     OR BOTH ARE NOT CODED       @D2A         
         AIF   (('&VTROUTA' EQ '') AND ('&VTROUTL' EQ '')).RFQFY   @D2A         
         AIF   (('&VTROUTA' EQ '') OR ('&VTROUTL' EQ '')).RFERVO   @D2A         
         IST6MCUA KWVAL=&VTROUTA,KW=APPL_TO_VTAM_VECTOR_ADDRESS,       X        
               LOC=RPL6VAOA-ISTRPL6X,BASEREG=14                    @D2A         
.*                                     PUT VECTOR AREA INPUT ADDRESS            
.*                                     IN APPC AREA                @D2A         
         IST6MCUA KWVAL=&VTROUTL,KW=APPL_TO_VTAM_VECTOR_LENGTH,LEN=2,  X        
               LOC=RPL6VAOL-ISTRPL6X,BASEREG=14                    @D2A         
.*                                     PUT VECTOR AREA INPUT LENGTH             
.*                                     IN APPC AREA                @D2A         
         AGO   .RFQFY                                                           
.RFERVO  ANOP                                                      @D2A         
         IST6MCER 13,VTROUTA,VTROUTL   ONLY ONE PARM CODED         @D2A         
.RFQFY   ANOP                       ** QUALIFY= PROCESSING **      @L1A         
         AIF   ('&QUALIFY' EQ '').RFNQUAL                          @Y1C         
         AIF   ('&QUALIFY' EQ 'NULL').RFNQUAL                      @L1A         
         AIF   ('&QUALIFY' NE 'DATAQUE').RFQFY1                    @D1A         
         AIF   (NOT &ISTGEN).RFCOMKW                               @D1A         
         MVI   RPL6QUAL-ISTRPL6X(14),RPL6DQUE                      @D1A         
*                                      SET QUALIFY TO DATAQUE      @D1A         
         AGO   .RFFILL                                             @D1A         
.RFQFY1  ANOP                                                      @D1A         
         AIF   ('&QUALIFY' NE 'QUEUE').RFQFYER                     @D1A         
         IST6MCUC QUEUE,QUALIFY,INVALKW=(FILL=&FILL,CD=&CD)        @D1A         
         AIF   (NOT &ISTGEN).RFCOMKW                               @D1A         
         MVI   RPL6QUAL-ISTRPL6X(14),RPL6QUE                       @D1A         
*                                      SET QUALIFY TO QUEUE        @D1A         
         AGO   .RFCOMKW                                            @D1A         
.RFQFYER ANOP                                                      @D1A         
         IST6MCER 5,QUALIFY,&QUALIFY                               @D1A         
         AGO   .RFCOMKW                                            @D1A         
.RFNQUAL ANOP                                                      @L1A         
         IST6MCUC NULL,QUALIFY,INVALKW=(FILL=&FILL,CD=&CD)         @D1A         
         AIF   (NOT &ISTGEN).RFEXIT                                @L1A         
         MVI   RPL6QUAL-ISTRPL6X(14),RPL6NQUA                      @L1A         
.*                                     SET QUALIFY TO NULL         @L1A         
         AGO   .RFCOMKW                                            @D1A         
.RFFILL  ANOP                       ** FILL= PROCESSING **         @D1A         
         AIF   ('&FILL' EQ '').RFCD                                @D1A         
         AIF   ('&FILL' NE 'LL').RFFIL1                            @D1A         
         AIF   (NOT &ISTGEN).RFCOMKW                               @D1A         
         OI    RPL6FLG1-ISTRPL6X(14),RPL6LL  SET FILL TO LL        @D1A         
         AGO   .RFCD                                               @D1A         
.RFFIL1  ANOP                                                      @D1A         
         AIF   ('&FILL' NE 'BUFF').RFFILER                         @D1A         
         AIF   (NOT &ISTGEN).RFCOMKW                               @D1A         
         NI    RPL6FLG1-ISTRPL6X(14),X'FF'-RPL6LL                  @D1A         
*                                            SET FILL TO BUFF      @D1A         
         AGO   .RFCD                                               @D1A         
.RFFILER ANOP                                                      @D1A         
         IST6MCER 5,FILL,&FILL                                     @D1A         
.RFCD    ANOP                       ** CD= PROCESSING **           @D1A         
         AIF   ('&CD' EQ '').RFCOMKW                               @D1A         
         AIF   ('&CD' NE 'IMMED').RFCD1                            @D1A         
.RFCD0   AIF   (NOT &ISTGEN).RFCOMKW                               @D1A         
         NI    RPL6FLG1-ISTRPL6X(14),X'FF'-RPL6CDDE                @D1A         
*                                            SET CD TO IMMED       @D1A         
         AGO   .RFCOMKW                                            @D1A         
.RFCD1   ANOP                                                      @D1A         
         AIF   ('&CD' NE 'DEFER').RFCD2                            @D1A         
         AIF   (NOT &ISTGEN).RFCOMKW                               @D1A         
         OI    RPL6FLG1-ISTRPL6X(14),RPL6CDDE                      @D1A         
*                                            SET CD TO DEFER       @D1A         
         AGO   .RFCOMKW                                            @D1A         
.RFCD2   ANOP                                                      @D1A         
         IST6MCER 5,CD,&CD                                         @D1A         
.RFCOMKW ANOP                                                                   
         AIF   (NOT &ISTGEN).RFEXIT                                             
         IST6MCUP EXIT=&EXIT,BRANCH=&BRANCH,OPTCD=&OPTCD,ECB=&ECB,     X        
               CONMODE=&CONMODE,CONXMOD=&CONXMOD,                      X        
               CKCMODE=YES,        CHECK CONMODE & CONXMOD PARAMETERS  X        
               CKSYN=YES,          ASY/SYN IS VALID FOR OPTCD PARAMETERX        
               CKBUFF=NO           BUFFLST/NBUFFLST IS INVALID     @I1C         
.*                                 OPTCD PARAMETER                              
         AIF   ('&RTSRTRN' EQ '').RFREQ                            @I1A         
         AIF   ('&RTSRTRN' NE 'BOTH').RFRTSRE                      @I1A         
         NI    RPL6FLG2-ISTRPL6X(14),X'FF'-RPL6RTSX   RESET FLAG   @I1A         
         AGO   .RFREQ                                              @I1A         
.RFRTSRE ANOP                                                      @I1A         
         AIF   ('&RTSRTRN' NE 'EXPD').RFRTSER                      @I1A         
         OI    RPL6FLG2-ISTRPL6X(14),RPL6RTSX         SET FLAG     @I1A         
         AGO   .RFREQ                                              @I1A         
.RFRTSER ANOP                                                      @I1A         
         IST6MCER 5,RTSRTRN,&RTSRTRN         REPORT BAD VALUE      @I1A         
.RFREQ   ANOP                                                                   
         AIF   (NOT &ISTGEN).RFEXIT                                             
         MVI   RPL6REQ-ISTRPL6X(14),RPL6RFH5                                    
*                              PUT RCVFMH5 REQUEST CODE IN APPC AREA            
.RFEXIT  MEND                                                                   
