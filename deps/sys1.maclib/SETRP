*/********************************************************************/ 00010006
*/*                                                                  */ 00020006
*/*01* MACRO NAME: SETRP                                             */ 00021006
*/*                                                                  */ 00022006
*/*01* DESCRIPTIVE NAME: Set Return Parameters                       */ 00023006
*/*                                                                  */ 00024006
*/*01* PROPRIETARY STATEMENT:                                        */ 00025006
*/*                                                                  */ 00026006
*/*            5650-ZOS                                              */ 00027006
*/*            LICENSED MATERIALS - PROPERTY OF IBM                  */ 00028006
*/*            COPYRIGHT IBM CORP. 1980, 2015                        */ 00029006
*/*                                                                  */ 00030006
*/* STATUS  = HBB77A0                                                */ 00040006
*/*                                                                  */ 00050006
*/*01* FUNCTION: Provides the interface for recovery routines to     */ 00060006
*/*              communicate with RTM                                */ 00070006
*/*                                                                  */ 00080006
*/*01* EXTERNAL CLASSIFICATION:                                      */ 00090006
*/*                                                                  */ 00100006
*/*02* PI: BASE                                                      */ 00110006
*/*                                                                  */ 00120006
*/*02* NONE: FIELDS                                                  */ 00130006
*/*          CPU                                                     */ 00140006
*/*                                                                  */ 00150006
*/*01* END OF EXTERNAL CLASSIFICATION:                               */ 00160006
*/*                                                                  */ 00170006
*/*01* MODULE TYPE:  ASSEM MACRO                                     */ 00180006
*/*                                                                  */ 00190006
*/*02*   PROCESSOR:  ASSEM                                           */ 00200006
*/*                                                                  */ 00210006
*/*01* COMPONENT:  SCRTM                                         @P7C*/ 00220006
*/*                                                                  */ 00230006
*/*01* DISTRIBUTION LIBRARY: AMACLIB                                 */ 00240006
*/*                                                                  */ 00250006
*/*01* CHANGE ACTIVITY:                                              */ 00260006
*/*                                                                  */ 00270006
*/* SU33(ENHANCED DUMP) 7/30/76                              @G33SPHW*/ 00280006
*/* MVS/SYSTEM PRODUCT RELEASE 2 6/26/79                     @G382P2F*/ 00290006
*/* MVS/SYSTEM PRODUCT HBB2102 03/27/81                      @G860P1C*/ 00300006
*/*          APAR OZ86653 - SET SDWAACF2 BIT ON TO FREE CML  @ZA86653*/ 00310006
*/*                         LOCK IF REQUESTED.               @ZA86653*/ 00320006
*/* $L1=RASENH ,JBB2220,840313,PDA8: RETRY ENHANCEMENTS          @L1C*/ 00330006
*/* $P1=PA20094,JBB2220,850214,PDA8: REMOVE SYSLIST CHECKING     @P1C*/ 00340006
*/* $L2 = AR    HBB3310 850901 PDXB: AR SUPPORT                      */ 00350006
*/* $D1=DCR0031,HBB3310,860423,PDT9: IOS LOCK SUPPORT            @D1A*/ 00360006
*/* $L3=DATASPAC,HBB3310,860728,PDA8: RSMDS LOCK SUPPORT         @L3A*/ 00370006
*/* $L4=DATASPAC,HBB3310,861029,PDT9: PROPAGATION OF DATA SPACE STRG */ 00380006
*/*                                   RANGES FOR ABDUMP          @L4A*/ 00390006
*/* $P2=PC40460,HBB3310,861215,PDT9: NO LOCKWORD FOR IOS LOCK    @P2A*/ 00400006
*/* $P3=PC40713,HBB3310,870225,PDT9: MOVE IOS LOCK BIT           @P3A*/ 00410006
*/* $L5=LOCKR  ,JBB3320,870916,PDT9: LOCK RESTRUCTURE            @L5A*/ 00420006
*/* $L6=CLOCK  ,JBB3320,870916,PDT9: NEW LOCK FOR ETR            @L6A*/ 00430006
*/* $L7=JUP03  ,HBB4410,870916,PDT9: NEW LOCKS FOR SMSX          @L7A*/ 00431006
*/* $L8=COUPLRTM,HBB4410,870916,PDT9: NEW LOCKS FOR XCF          @L8A*/ 00432006
*/* $L9=USERV   ,HBB4410,890626,PDCI: NEW IOSULUT LOCK           @L9A*/ 00433006
*/* $01=OY37687 ,HBB4410,901101,PDXB: FIX REASON 4095 CHECK          */ 00434006
*/* $LA=SYSLKRTM,HBB5510,900112,PD00XB: NEW LOCKS FOR SLM        @LAA*/ 00435006
*/* $P4=PIG0024,HBB5510,900112,PD00XB: REMOVE DUPLICATE ETRSET       */ 00436006
*/* $P5=PIG0063,HBB5510,900906,PD00CJ: @LAA IN CONTIUATION COLUMN    */ 00437006
*/* $LB=SUBSPRTM,HBB5510,930329,PDKD: ADD SSRESET OPTION FOR         */ 00438006
*/*                                   SUBSPACE SUPPORT           @LBA*/ 00439006
*/* $02=OW02796 ,HBB5510,931207,PDKD: NEW IXLREQST LOCK          @02A*/ 00440006
*/* $P6=PN71728  HBB5520 941007 PDKD: Fix up prolog              @P6A*/ 00441006
*/* $P7=PR20011  HBB6601 950908 PDKD: SC1CM compid split         @P7A*/ 00442006
*/* $LC=WLMPSAM  HBB6601 950929 PDKD: New locks for WLM and RRS  @LCA*/ 00443006
*/* $P8=PQC0553  HBB6603 951030 PDKD: Remove unsupported locks   @P8A*/ 00444006
*/* $P9=PQC0626  HBB6603 951204 PDKD: Rearrange locks            @P9A*/ 00445006
*/* $PA=PQC0643  HBB6603 951207 PDKD: Reinstate locks            @PAA*/ 00446006
*/* $LD=64BITRTM HBB7703 980223 PDKD: 64-bit regs                    */ 00447006
*/* $LE=PRSER    HBB7706 001015 B7HGH5:  SSD Lock                    */ 00448006
*/* $03=OA02360  HBB7706 030318 PDKD: RETRYAMODE addressability fix  */ 00449006
*/* $LF=GRSLOCK  HBB7740 060503 PDXZ: GRSINT lock                    */ 00450006
*/*    =ME08509  HBB7740 061115 PDKD: License update                 */ 00460006
*/*    =ME10058  HBB7750 070613 PDKD: Copyright update               */ 00470006
*/* $LG=DDMINF   HBB7760 080324 PDXZ: DDM locks                      */ 00480006
*/* $LH=ME15002  HBB7760 081115 PDXB: SDWANOPR=OK                    */ 00481006
*/*    =ME15741  HBB7760 090209 PDKD: remove SDWANOPR=OK, not needed */ 00482006
*/* $LI=SRMLOCK  HBB7780 091231 PDKP: SRMENQ lock                    */ 00483006
*/* $PB=ME23162  HBB7790 111201 PDXB: Fix RETRYAMODE                 */ 00484006
*/* $LJ=DYNEXITS HBB77A0 130430 PDXB: MISC lock                      */ 00484106
*/* $LK=RSMQ     HBB77A0 130901 PDXB: RSMQ                           */ 00484206
*/* $LL=MLTPAUSE HBB77A0 131004 PDKD: SSDGROUP lock                  */ 00484306
* %/*                                                                   00484406
        MACRO                                                           00484506
&NAME    SETRP &RETADDR=,&RETREGS=,&DUMP=,&RECORD=,&WKAREA=,&REGS=,    J00484606
               &DUMPOPT=,&DUMPOPX=,&RECPARM=,&RC=0,&FRELOCK=,&CPU=,    X00484706
               &COMPCOD=,&FRESDWA=,&RUB=,                              S00484806
               &SERIAL=,&RETRY=,&FRLKRTY=,&REMREC=,&RETRY15=,          S00484906
               &REASON=,&SSRESET=,&RETRYAMODE=                     @LBC 00485006
.*A000000                                                        Y02704 00485106
         LCLC  &A                                                       00486006
         LCLA  &B                                                       00487006
         LCLA  &I                                                       00488006
         LCLA  &J                                                       00489006
         LCLA  &K                                                       00490006
         LCLA  &L1                                                      00500006
         LCLA  &M                                                       00510006
         LCLC  &N                                                       00520006
         LCLA  &LFLAG1                                                  00530006
         LCLA  &LFLAG2                                                  00540006
         LCLA  &LFLAG3                                       @G860P1C   00550006
         LCLA  &LFLAG4                                       @G860P1C   00560006
         LCLA  &LFLAG5                                           @L5A   00570006
         LCLA  &LFLAG6                                           @L5A   00580006
         LCLA  &LFLAG7                                           @L5A   00590006
         LCLA  &LFLAG8                                           @L5A   00600006
         LCLB  &LOCKEXT                                      @G860P1C   00610006
         LCLB  &CCRC                                         @G860P1C   00620006
         LCLC  &LA                      "LA" OR "LAE" VIA SYSSTATE @L2A 00630006
         GBLC  &SYSASCE                                            @L2A 00640006
         SYSSTATE TEST                  TEST ASC ENVIRONMENT       @L2A 00650006
&LA      SETC  'LA'                     MUST USE LA INSTRUCTION    @L2A 00660006
         AIF   ('&SYSASCE' EQ 'P').NOLAE                           @L2A 00670006
&LA      SETC  'LAE'                    MUST USE LAE               @L2A 00680006
.NOLAE   ANOP                                                      @L2A 00690006
         LCLC  &L,&LR                                              @MXA 00700006
         GBLC  &SYSAM64                                            @MXA 00710006
         AIF   ('&SYSAM64' EQ 'YES').AM640                         @MXA 00720006
&L       SETC  'L'                                                 @MXA 00730006
&LR      SETC  'LR'                                                @MXA 00740006
         AGO   .AM31640                                            @MXA 00750006
.AM640   ANOP                                                      @MXA 00760006
&L       SETC  'LLGT'                                              @MXA 00770006
&LR      SETC  'LGR'                                               @MXA 00780006
.AM31640 ANOP                                                      @MXA 00790006
&B       SETA  &RC                                                      00800006
&I       SETA  1                                                        00810006
&J       SETA  N'&FRELOCK                                               00820006
&LFLAG1  SETA  0                                                        00830006
&LFLAG2  SETA  0                                                        00840006
&LFLAG3  SETA  0                                             @G860P1C   00850006
&LFLAG4  SETA  0                                             @G860P1C   00860006
&LFLAG5  SETA  0                                                        00870006
&LFLAG6  SETA  0                                                        00880006
&LFLAG7  SETA  0                                                 @L5A   00890006
&LFLAG8  SETA  0                                                 @L5A   00900006
&LOCKEXT SETB  0                                             @G860P1C   00910006
&CCRC    SETB  0                                             @G860P1C   00920006
         NOPR  SDWANOPR    IF THIS STATEMENT CAUSES ASSEMBLER ERROR     00930006
*                          IT IMPLIES THAT SETRP AND THE SDWA ARE       00940006
*                          BEING USED IMCOMPATIBLY           @G38AP2F   00950006
         ORG   *-2         OVERLAY THE PREVIOUS INSTRUCTION  @G38AP2F   00960006
         AIF   ('&WKAREA' NE '').CONT                                   00970006
         AIF   ('&NAME' EQ '').RC                                       00980006
&NAME    EQU   *                                                        00990006
         AGO   .RC                                                      01000006
.CONT    ANOP                                                           01010006
&A       SETC  'WKAREA'                                                 01020006
         AIF   ('&WKAREA'(1,1) NE '(').ERR1                             01030006
&NAME    &LR   1,&WKAREA(1) .           ACCESS POINTER TO SDWA          01040006
         AIF   ('&SYSASCE' EQ 'P').RC                              @L2A 01050006
         CPYA  1,&WKAREA(1)                                        @L2A 01060006
.RC      ANOP                                                           01070006
         AIF   ('&RC'(1,1) EQ '(').ERR17                                01080006
         AIF   (&B EQ 16 OR &B EQ 0).STRC                               01090006
         AIF   (&B EQ 4).RETA                                           01100006
         IHBERMAC 54,,&RC                                               01110006
         MEXIT                                                          01120006
.RETA    ANOP                                                           01130006
         AIF   ('&RETADDR' EQ '').ERR2                                  01140006
         AIF   ('&FRLKRTY' EQ '' AND '&REMREC' EQ '' AND               X01150006
               '&RETRYAMODE' EQ '' AND                                 X01160006
               '&RETRY15' EQ '').MVRC   CHECK FOR RETRY OPTIONS    @PBC 01170006
.********************************************************************** 01180006
.*              RETRY OPTIONS PROCESSING                          @L1A* 01190006
.********************************************************************** 01200006
         &L    15,SDWAXPAD-SDWA(0,1)      LIST OF EXTENSIONS PTR   @L1A 01210006
         AIF   ('&SYSASCE' EQ 'P').NOAR17                          @L2A 01220006
         CPYA  15,1                   SET UP ALET OF EXTENSION     @L2A 01230006
.NOAR17  ANOP                                                      @L2A 01240006
         L     15,SDWASRVP-SDWAPTRS(0,15) LOAD 1ST REC EXT PTR     @L1A 01250006
.*                                                                      01260006
.* Process RetryAmode                                              @06M 01270006
.*                                                                      01280006
         AIF   ('&RETRYAMODE' EQ '').ENDRETRYAMODE                 @06M 01290006
         AIF   ('&RETRYAMODE' EQ '24').RA24                        @06M 01300006
         AIF   ('&RETRYAMODE' EQ '31').RA31                        @06M 01310006
         AIF   ('&RETRYAMODE' EQ '64').RA64                        @06M 01320006
         AGO   .ERR3B                                              @06M 01330006
.RA24    ANOP                                                      @06M 01340006
         MVI   SDWARTAM-SDWARC1(15),SDWARA24                       @06M 01350006
         AGO   .ENDRETRYAMODE                                      @06M 01360006
.RA31    ANOP                                                      @06M 01370006
         MVI   SDWARTAM-SDWARC1(15),SDWARA31                       @06M 01380006
         AGO   .ENDRETRYAMODE                                      @06M 01390006
.RA64    ANOP                                                      @06M 01400006
         MVI   SDWARTAM-SDWARC1(15),SDWARA64                       @06M 01410006
         AGO   .ENDRETRYAMODE                                      @06M 01420006
.ENDRETRYAMODE ANOP                                                @06M 01430006
         AIF   ('&FRLKRTY' EQ '').TSTST15 SEE IF FRLKRTY IS USED   @L1A 01440006
         AIF   ('&FRLKRTY' EQ 'YES').SETFRLK TEST IF THERE IS REQUEST  X01450006
                                          TO FREE LOCKS            @L1A 01460006
         AIF   ('&FRLKRTY' EQ 'NO').NOFRLK TEST IF THERE IS A REQUEST  X01470006
                                          NOT TO FREE LOCKS        @L1A 01480006
         AGO   .ERR21                     ILLEGAL FRLKRTY VALUE    @L1A 01490006
.SETFRLK OI    SDWARETF-SDWARC1(15),SDWAFRLK FREE LOCKS ON RETRY   @L1A 01500006
         AGO   .TSTST15                   TEST RETRY15 KEYWORD     @L1A 01510006
.NOFRLK  NI    SDWARETF-SDWARC1(15),X'FF'-SDWAFRLK DONT FREE LOCKS @L1A 01520006
.TSTST15 AIF   ('&RETRY15' EQ '').TSTFRRD IF RETRY15 SPECIFIED     @L1A 01530006
         AIF   ('&RETRY15' EQ 'YES').SETRG TEST IF REQUEST TO SET      X01540006
                                          REGISTER 15 ON RETRY     @L1A 01550006
         AIF   ('&RETRY15' EQ 'NO').NOSETRG TEST TO SEE IF REGISTER 15 X01560006
                                          SHOULD NOT BE SET        @L1A 01570006
         AGO   .ERR22                     ILLEGAL RETRY15 VALUE    @L1A 01580006
.SETRG   OI    SDWARETF-SDWARC1(15),SDWART15 TURN BIT ON TO SET R15 TO X01590006
                                          THE VALUE IN SDWASR15    @L1A 01600006
         AGO   .TSTFRRD                   GO TEST REMREC           @L1A 01610006
.NOSETRG NI    SDWARETF-SDWARC1(15),X'FF'-SDWART15 TURN OFF BIT SO R15 X01620006
                                    WILL BE SET WITH RETRY ADDRESS @L1A 01630006
.TSTFRRD AIF   ('&REMREC' EQ '').MVRC     REMREC SPECIFIED         @L1A 01640006
         AIF   ('&REMREC' EQ 'YES').SETFRRD TEST REMREC=YES        @L1A 01650006
         AIF   ('&REMREC' EQ 'NO').NOFRRD TEST REMREC=NO           @L1A 01660006
         AGO   .ERR23                     ILLEGAL REMREC VALUE     @L1A 01670006
.SETFRRD OI    SDWARETF-SDWARC1(15),SDWAREMR INDICATE DELETE FRR   @L1A 01680006
         AGO   .MVRC                      GO TO RC PROCESSING      @L1A 01690006
.NOFRRD  NI    SDWARETF-SDWARC1(15),X'FF'-SDWAREMR KEEP FRR        @L1A 01700006
.MVRC    MVI   SDWARCDE-SDWA(1),&RC(1) . INITIALIZE RC FIELD            01710006
         AIF   ('&RETADDR'(1,1) EQ '(').RETAR                           01720006
         LA    15,&RETADDR(1) .        ACCESS RETRY ADDRESS             01730006
         AGO   .RETAB                                                   01740006
.RETAR   ANOP                                                           01750006
         LR    15,&RETADDR(1) .        ACCESS RETRY ADDRESS             01760006
.RETAB   ANOP                                                           01770006
         ST    15,SDWARTYA-SDWA(,1) .  INITIALIZE RETRY ADDRESS FIELD   01780006
.FSDWA   ANOP                                                           01790006
         AIF   ('&FRESDWA' EQ '' OR '&FRESDWA' EQ 'NO').RECORD          01800006
         AIF   ('&FRESDWA' NE 'YES').ERR11                              01810006
         OI    SDWAACF2-SDWA(1),SDWAFREE   TURN ON FREE SDWA            01820006
         AGO   .RECORD                                                  01830006
.STRC    ANOP                        THIS SECTION EXECUTED IF RC=0 @L1C 01840006
         MVI   SDWARCDE-SDWA(1),&RC(1) .       PUT RC IN SDWA           01850006
         AIF   ('&FRESDWA' NE '' AND '&FRESDWA' NE 'NO').ERR10          01860006
         AIF   ('&RETREGS' NE '' AND '&RETREGS' NE 'NO').ERR15          01870006
         AIF   ('&RETADDR' NE '').ERR3                                  01880006
         AIF   ('&RETRYAMODE' NE '').ERR3A                         @LxA 01890006
         AIF   ('&FRLKRTY' NE '').ERR16                            @L1A 01900006
         AIF   ('&REMREC' NE '').ERR24                             @L1A 01910006
         AIF   ('&RETRY15' NE '').ERR25                            @L1A 01920006
.RECORD  ANOP                                                           01930006
         AIF   ('&RECORD' EQ 'NO').TRECP                                01940006
         AIF   ('&RECORD' EQ 'IGNORE' OR '&RECORD' EQ '').RECPARM       01950006
         AIF   ('&RECORD' NE 'YES').ERR4                                01960006
         OI    SDWAACF2-SDWA(1),SDWARCRD   TURN ON RECORD INDICATOR     01970006
.RECPARM ANOP                                                           01980006
         AIF   ('&RECPARM' EQ '').DUMP                                  01990006
         AIF   ('&RECPARM'(1,1) EQ '(').RECPR                           02000006
         &LA   15,&RECPARM(1) .       ACCESS RECORD PARAMETER LIST @L2C 02010006
         AGO   .RECPCOM                                                 02020006
.RECPR   ANOP                                                           02030006
         &LA   15,0(,&RECPARM(1)) .   ACCESS RECORD PARAMETER LIST @L2C 02040006
.RECPCOM ANOP                                                           02050006
         MVC   SDWARECP-SDWA(24,1),0(15)                                02060006
*                                   MOVE RECORD PARAMETER INTO SDWA     02070006
         AGO   .DUMP                                                    02080006
.TRECP   ANOP                                                           02090006
         AIF   ('&RECPARM' NE '').ERR6                                  02100006
         NI    SDWAACF2-SDWA(1),X'FF'-SDWARCRD    TURN OFF RECORD FLAG  02110006
.DUMP    ANOP                                                           02120006
         AIF   ('&DUMP' EQ 'IGNORE' OR '&DUMP' EQ '').TDUMPOP           02130006
         AIF   ('&DUMP' EQ 'NO').TDOPTS                                 02140006
         AIF   ('&DUMP' NE 'YES').ERR7                                  02150006
         OI    SDWACMPF-SDWA(1),SDWAREQ   TURN ON DUMP INDICATOR        02160006
         AIF   ('&DUMPOPT' EQ '').RETREGS                               02170006
         AIF   ('&DUMPOPX' NE '').ERR26                            @L4A 02180006
         AIF   ('&DUMPOPT'(1,1) EQ '(').DUMPR                           02190006
         &LA   15,&DUMPOPT(1) .      ACCESS PTR TO DUMP PARAMETERS @L2C 02200006
         AGO   .DOPTCOM                                                 02210006
.DUMPR   ANOP                                                           02220006
         &LA   15,0(,&DUMPOPT(1)) .  ACCESS PTR TO DUMP PARAMETERS @L2C 02230006
.DOPTCOM ANOP                                                           02240006
         OI    SDWADPFS-SDWA(1),SDWADLST  TURN ON DUMP OPTION INDICATOR 02250006
         MVC   SDWADDAT-SDWA(4,1),4(15)  ACCESS SDATA AND PDATA FIELDS  02260006
         OI    SDWADPFS-SDWA(1),SDWAENSN  INDICATE ENHANCED DUMP        02270006
*                                                              @G382P2F 02280006
         OI    SDWADPF2-SDWA(1),SDWALVL2  INDICATE HBB2102 VERSION      02290006
*                                         OF SNAP PARMLIST     @G860P1C 02300006
         TM    1(15),X'02'             TEST FOR STORAGE LIST            02310006
         BO    M&SYSNDX                BRANCH IF STORAGE LIST SPECIFIED 02320006
         SR    14,14 .                 ZERO REGISTER FOR COMPARE        02330006
         CL    14,16(,15) .            FURTHER TEST FOR STORAGE LIST    02340006
         BE    Q&SYSNDX             BRANCH IF NO STORAGE LIST  @G860P1C 02350006
M&SYSNDX EQU   *                                               @G382P2F 02360006
         &L    14,SDWAXPAD-SDWA(0,1) ADDRESS OF EXTENSION PTRS @G382P2F 02370006
         AIF   ('&SYSASCE' EQ 'P').NOAR1                           @L2A 02380006
         CPYA  14,1                   SET UP ALET OF EXTENSION     @L2A 02390006
.NOAR1   ANOP                                                      @L2A 02400006
         L     14,SDWADSRP-SDWAPTRS(0,14) ADDR OF DUMP STORAGE RANGES   02410006
*                                         EXTENSION            @G382P2F 02420006
         LTR   14,14                  TEST IF EXTENSION EXISTS @G382P2F 02430006
         BZ    Q&SYSNDX               BRANCH IF NO DUMP STORAGE RANGES  02440006
*                                     EXTENSION                @G860P1C 02450006
         OI    SDWADPFS-SDWA(1),SDWASLST   TURN ON STORAGE LIST         02460006
*                                          FLAG                @G382P2F 02470006
         OI    SDWADPF2-SDWA(1),SDWADVS3   INDICATE RANGES ARE IN       02480006
*                                          SDWADSR             @G382P2F 02490006
         SLR   14,14                ZERO LENGTH REG            @G382P2F 02500006
         AIF   ('&SYSASCE' EQ 'P').NOAR13                               02510006
         LAM   0,0,32(15)           GET ALET                       @L2A 02520006
.NOAR13  ANOP                                                           02530006
         TM    2(15),X'80'          TEST MAX NUMBER OF RANGES  @G382P2F 02540006
         &L    15,16(,15) .            ACCESS POINTER TO STORAGE LIST   02550006
         AIF   ('&SYSASCE' EQ 'P').NOAR14                               02560006
         CPYA  15,0                 SET ACCESS REGISTER            @L2A 02570006
.NOAR14  ANOP                                                           02580006
         BO    K&SYSNDX            BRANCH IF 30 RANGES ALLOWED @G382P2F 02590006
         LA    0,32                 INIT MAX LENGTH TO 4       @G382P2F 02600006
         B     L&SYSNDX                                        @G382P2F 02610006
K&SYSNDX EQU   *                                               @G382P2F 02620006
         LA    0,240                INIT MAX LENGTH TO 30      @G382P2F 02630006
L&SYSNDX EQU   *                                               @G382P2F 02640006
N&SYSNDX EQU   *                    TOP OF LOOP WHICH CALCULATES        02650006
*                                   MVC LENGTH                 @G382P2F 02660006
         LA    14,8(,14)            INCREMENT LENGTH REG BY 8  @G382P2F 02670006
         TM    4(15),X'80'          TEST IF END OF LIST        @G382P2F 02680006
         LA    15,8(,15)            POINT TO NEXT RANGE        @G382P2F 02690006
         BO    O&SYSNDX             BRANCH IF END OF LIST      @G382P2F 02700006
         CR    14,0                 TEST IF MAX LENGTH REACHED @G382P2F 02710006
         BL    N&SYSNDX             BRANCH IF NOT REACHED      @G382P2F 02720006
O&SYSNDX EQU   *                    EXIT OF LOOP WHICH CALC MVC         02730006
*                                   LENGTH                     @G382P2F 02740006
         SR    15,14                POINT TO BEGINNING OF STORAGE       02750006
*                                   LIST                       @G382P2F 02760006
         BCTR  14,0                 ADJUST LENGTH FOR EXECUTE FORM      02770006
*                                   OF MVC                     @G382P2F 02780006
         &LR   0,1                  SAVE SDWA ADDRESS          @G382P2F 02790006
         &L    1,SDWAXPAD-SDWA(0,1) ADDRESS OF EXTENSION PTRS  @G382P2F 02800006
         L     1,SDWADSRP-SDWAPTRS(0,1) ADDRESS OF DUMP STORAGE RANGE   02810006
*                                       EXTENSION              @G382P2F 02820006
         EX    14,P&SYSNDX          EXECUTE MVC INSTRUCTION    @G382P2F 02830006
         LA    15,3                 LOAD 3 INTO REG 15         @G382P2F 02840006
         SR    14,15                CALC LENGTH TO LAST ADDR   @G382P2F 02850006
         AR    1,14                 CALC ADDR OF LAST ADDR MOVED INTO   02860006
*                                   THE SDWA                   @G382P2F 02870006
         OI    0(1),X'80'           ENSURE LAST RANGE IS IND   @G382P2F 02880006
         &LR   1,0                  RESTORE REG 1 WITH SDWA             02890006
*                                   ADDRESS                    @G382P2F 02900006
         B     E&SYSNDX                                        @G382P2F 02910006
P&SYSNDX EQU   *                                               @G382P2F 02920006
         MVC   0(0,1),0(15)         MOVE DUMP STORAGE RANGES INTO       02930006
*                                   SDWA EXTENSION             @G382P2F 02940006
E&SYSNDX EQU  *                                                         02950006
         AIF  ('&DUMPOPT'(1,1) EQ '(').SBPLR                 @G860P1C   02960006
         &LA  15,&DUMPOPT(1) .      ACCESS PTR TO DUMP PARMS     @L2C   02970006
         AGO  .SBPLCOM                                       @G860P1C   02980006
.SBPLR   ANOP                                                @G860P1C   02990006
         &LR  15,&DUMPOPT(1)        ACCESS PTR TO DUMP PARMS @G860P1C   03000006
         AIF  ('&SYSASCE' EQ 'P').SBPLCOM                               03010006
         CPYA 15,&DUMPOPT(1)        GET ITS ALET TOO                    03020006
.SBPLCOM ANOP                                                @G860P1C   03030006
Q&SYSNDX EQU  *                                              @G860P1C   03040006
         TM   2(15),X'02'           TEST FOR SUBPOOL LIST    @G860P1C   03050006
         BZ   U&SYSNDX              BRANCH IF NO SUBPOOL     @ZMC3083   03060006
*                                   LIST SPECIFIED           @ZMC3083   03070006
         SR   14,14                ZERO REGISTER FOR COMPARE @G860P1C   03080006
         CL   14,24(0,15)           FURTHER TEST FOR SUBPOOL LIST       03090006
*                                                            @ZMC2078   03100006
         BE   U&SYSNDX             BRANCH IF NO SUBPOOL LIST @G860P1C   03110006
V&SYSNDX EQU  *                                              @G860P1C   03120006
         &L   14,SDWAXPAD-SDWA(0,1)  ADDR OF EXTENSION PTRS  @G860P1C   03130006
         AIF   ('&SYSASCE' EQ 'P').NOAR2                           @L2A 03140006
         CPYA  14,1                   SET UP ALET OF EXTENSION     @L2A 03150006
.NOAR2   ANOP                                                      @L2A 03160006
         L    14,SDWAXSPL-SDWAPTRS(0,14)  ADDR OF SUBPOOL LIST          03170006
*                                         EXTENSION          @G860P1C   03180006
         LTR  14,14                TEST IF EXTENSION EXISTS  @G860P1C   03190006
         BZ   U&SYSNDX             BRANCH IF NO SUBPOOL LIST            03200006
*                                  EXTENSION                 @G860P1C   03210006
         OI   SDWADPF2-SDWA(1),SDWASUBL  TURN ON SUBPOOL LIST           03220006
*                                        FLAG                @G860P1C   03230006
         AIF   ('&SYSASCE' EQ 'P').NOAR15                               03240006
         LAM   14,14,40(15)         GET ALET                       @L2A 03250006
.NOAR15  ANOP                                                           03260006
         &L   15,24(0,15)          ACCESS POINTER TO SUBPOOL LIST      *03270006
                                                             @ZMC2078   03280006
         AIF   ('&SYSASCE' EQ 'P').NOAR16                               03290006
         CPYA  15,14                SET ACCESS REGISTER            @L2A 03300006
.NOAR16  ANOP                                                           03310006
         LH   14,0(,15)           PICK UP NUMBER OF SUBPOOLS @G860P1C   03320006
         LTR  14,14               TEST FOR ZERO              @G860P1C   03330006
         BNP  U&SYSNDX            BRANCH IF NO SUBPOOLS      @ZMC3083   03340006
         LA   0,SDWASPMX(0,0)     GET MAX NUMBER SUBPOOLS    @G860P1C   03350006
         CR   14,0                TEST FOR MAX SUBPOOLS      @G860P1C   03360006
         BNH  S&SYSNDX            BRANCH IF EQUAL OR LESS    @G860P1C   03370006
         LR   14,0                MOVE ONLY MAX SUBPOOL IDS  @G860P1C   03380006
S&SYSNDX EQU  *                                              @G860P1C   03390006
         &LR  0,1                 SAVE SDWA ADDRESS          @G860P1C   03400006
         &L   1,SDWAXPAD-SDWA(0,1)  ADDR OF EXTENSION POINTERS          03410006
*                                                            @G860P1C   03420006
         L    1,SDWAXSPL-SDWAPTRS(0,1)  ADDR OF SUBPOOL LIST            03430006
*                                       EXTENSION            @G860P1C   03440006
         STH  14,SDWASPLN-SDWANRC2(0,1)  STORE NUMBER OF SUBPOOLS       03450006
*                                                            @G860P1C   03460006
         SLL  14,1                  DOUBLE NUMBER TO GET LENGTH         03470006
*                                   OF MOVE                  @G860P1C   03480006
         BCTR  14,0                 ADJUST LENGTH FOR EXECUTE FORM      03490006
*                                   OF MVC                     @G860P1C 03500006
         EX   14,T&SYSNDX           MOVE THE SUBPOOL IDS     @G860P1C   03510006
         &LR  1,0                   RESTORE REG1 WITH SDWA ADDRESS      03520006
*                                                            @G860P1C   03530006
         B    U&SYSNDX                                       @G860P1C   03540006
T&SYSNDX EQU  *                                              @G860P1C   03550006
         MVC  SDWASPLS-SDWANRC2(0,1),2(15)  MOVE SUBPOOL IDS INTO       03560006
*                                           SDWA EXTENSION   @G860P1C   03570006
U&SYSNDX EQU  *                                              @G860P1C   03580006
         AGO   .RETREGS                                                 03590006
.TDOPTS  ANOP                                                           03600006
         AIF   ('&DUMPOPT' NE '').ERR8                                  03610006
         AIF   ('&DUMPOPX' NE '').ERR8                             @L4A 03620006
         NI    SDWACMPF-SDWA(1),X'FF'-SDWAREQ TURN OFF DUMP INDICATOR   03630006
.TDUMPOP ANOP                                                           03640006
         AIF   ('&DUMPOPT' NE '').ERR8                                  03650006
         AIF   ('&DUMPOPX' NE '').ERR8                             @L4A 03660006
.RETREGS ANOP                                                           03670006
         AIF   ('&RETREGS' EQ '64').RETREG64                       @LDA 03680006
         AIF   ('&RETREGS' EQ '' OR '&RETREGS' EQ 'NO').TSTRUB          03690006
         AIF   ('&RETREGS' NE 'YES').ERR9                               03700006
         OI    SDWAACF2-SDWA(1),SDWAUPRG   TURN ON RETREGS INDICATOR    03710006
         AIF   ('&RUB' EQ '').CPU                                       03720006
         AIF   ('&RUB'(1,1) EQ '(').RUBR                                03730006
         &LA   15,&RUB(1) .       GET PTR TO REGISTER UPDATE BLOCK @L2C 03740006
         AGO   .RUBCOM                                                  03750006
.RUBR    ANOP                                                           03760006
         &LR   15,&RUB(1) .         ACCESS PTR TO REG UPDATE BLOCK      03770006
         AIF  ('&SYSASCE' EQ 'P').RUBCOM                                03780006
         CPYA 15,&RUB(1)            GET ITS ALET TOO                    03790006
.RUBCOM  ANOP                                                           03800006
         LH    0,0(,15) .              ACCESS REGISTER BIT PATTERN      03810006
         LA    15,2(,15) .             CREATE PTR TO USER REG VALUES    03820006
         &LA   14,SDWASRSV-SDWA(,1)    CREATE PTR TO SDWA REG SAVE @L2C 03830006
         SLL   0,16(0) .               SHIFT BIT PATTERN TO HI BYTE     03840006
R&SYSNDX ALR   0,0 .                   SHIFT BIT TO SIGN POSITION       03850006
         BC    12,I&SYSNDX .           BRANCH IF NO CARRY INTO SIGN     03860006
         MVC   0(4,14),0(15) .         MODIFY REGISTER IN SDWA          03870006
         LA    15,4(,15) .              UPDATE POINTER                  03880006
I&SYSNDX LA    14,4(,14) .              UPDATE POINTER IN SDWA          03890006
         BC    5,R&SYSNDX .            TEST ALR CONDITION CODE TO TEST  03900006
*                                      IF ALL BITS EXHAUSTED            03910006
         AGO   .CPU                                                     03920006
.RETREG64 ANOP                                                     @LDA 03930006
         AIF   ('&RUB' NE '').ERR12A                               @LDA 03940006
         OI    SDWAACF2-SDWA(1),SDWAUPRG   TURN ON RETREGS INDICATOR    03950006
         &L    15,SDWAXPAD-SDWA(0,1)      LIST OF EXTENSIONS PTR   @LDA 03960006
         AIF   ('&SYSASCE' EQ 'P').NOAR18                          @LDA 03970006
         CPYA  15,1                   SET UP ALET OF EXTENSION     @LDA 03980006
.NOAR18  ANOP                                                      @LDA 03990006
         L     15,SDWASRVP-SDWAPTRS(0,15) LOAD 1ST REC EXT PTR     @LDA 04000006
         OI    SDWARETF-SDWARC1(15),SDWAUP64 Indicate Update-64    @LDA 04010006
         AGO   .CPU                                                @LDA 04020006
.TSTRUB  ANOP                                                           04030006
         AIF   ('&RUB' NE '').ERR12                                     04040006
.CPU     ANOP                                                           04050006
         AIF   ('&CPU' EQ '').CC                                        04060006
&A       SETC  'CPU'                                                    04070006
         AIF   ('&CPU'(1,1) NE '(').ERR1                                04080006
         ST    &CPU(1),SDWACPUA-SDWA(,1)  STORE CPU ID IN SDWA          04090006
         OI    SDWAACF2-SDWA(1),SDWASPIN                                04100006
.CC      ANOP                                                           04110006
         AIF   ('&COMPCOD' EQ '').RSC                          @G860P2F 04120006
         AIF   ('&COMPCOD(1)'(1,1) EQ '(').CCR                          04130006
         AIF   (T'&COMPCOD(1) NE 'N').CCS                               04140006
         AIF   (&COMPCOD(1) GT 4095).ERR13                              04150006
.CCS     ANOP                                                           04160006
         LA    14,&COMPCOD(1).(,0) .   ACCESS COMPLETION CODE           04170006
         AGO   .CCOM                                                    04180006
.CCR     ANOP                                                           04190006
         LR    14,&COMPCOD(1) .        ACCESS COMPLETION CODE           04200006
.CCOM    ANOP                                                           04210006
         AIF   ('&COMPCOD(2)' EQ '' OR '&COMPCOD(2)' EQ 'USER').STCODE  04220006
         AIF   ('&COMPCOD(2)' NE 'SYSTEM').ERR14                        04230006
         SLL   14,12(0) .              SHIFT TO SYSTEM CODE POSITION    04240006
.STCODE  ANOP                                                           04250006
         STCM  14,7,SDWACMPC-SDWA(1)  STORE COMPLETION CODE             04260006
         &L   14,SDWAXPAD-SDWA(0,1)  ADDR OF EXTENSION PTRS    @G860P1C 04270006
         AIF   ('&SYSASCE' EQ 'P').NOAR3                           @L2A 04280006
         CPYA  14,1                   SET UP ALET OF EXTENSION     @L2A 04290006
.NOAR3   ANOP                                                      @L2A 04300006
         L    14,SDWASRVP-SDWAPTRS(0,14)  ADDR OF SERVICE DATA          04310006
*                                         EXTENSION            @G860P1C 04320006
         OI   SDWACCRC-SDWASERV(14),SDWACCF INDICATE CHANGE TO          04330006
*                                         COMPCODE             @G860P1C 04340006
&CCRC    SETB 1         BASE TO SERVICE EXTENSION EXISTS       @G860P1C 04350006
.RSC     ANOP                                                  @G860P2F 04360006
         AIF   ('&REASON' EQ '').SSRST                             @LBC 04370006
         AIF   (&CCRC).RSC1 BRANCH IF EXTENSION PTR IN REG14   @G860P1C 04380006
         &L   14,SDWAXPAD-SDWA(0,1)  ADDR OF EXTENSION PTRS    @G860P2F 04390006
         AIF   ('&SYSASCE' EQ 'P').NOAR4                           @L2A 04400006
         CPYA  14,1                   SET UP ALET OF EXTENSION     @L2A 04410006
.NOAR4   ANOP                                                      @L2A 04420006
         L    14,SDWASRVP-SDWAPTRS(0,14)  ADDR OF SERVICE DATA          04430006
*                                         EXTENSION            @G860P2F 04440006
.RSC1    ANOP                                                  @G860P1C 04450006
         AIF   ('&REASON'(1,1) EQ '(').RSCR   CHECK FOR REG    @G860P2F 04460006
         AIF   (T'&REASON(1) NE 'N').RSC2   CODE IS NOT NUMBER @G860P1C 04470006
         AIF   (&REASON(1) GT 4095).RSC2   CODE IS BIG NUMBER  @G860P1C 04480006
         AIF   (&REASON(1) LT 0).RSC2      CODE IS SMALL NUMBER    @01A 04490006
         LA    15,&REASON(1).(,0)     ACCESS REASON CODE       @G860P2F 04500006
         AGO   .RSCST15                                        @G860P1C 04510006
.RSC2    ANOP                                                  @G860P1C 04520006
         CNOP  0,4                    ALIGN ON WORD BOUNDARY   @G860P1C 04530006
         B     *+8                    BRANCH AROUND CONSTANT   @G860P1C 04540006
         DC    AL4(&REASON)           DECLARE FOR REASON CODE  @G860P1C 04550006
         L     15,*-4                 LOAD REASON CODE INTO 15 @G860P1C 04560006
.RSCST15 ANOP                                                  @G860P1C 04570006
         ST    15,SDWAHRC-SDWASERV(0,14)  STORE REASON CODE    @G860P2F 04580006
         AGO   .RSCEND                                         @G860P1C 04590006
.RSCR    ANOP                                                  @G860P2F 04600006
         ST    &REASON(1),SDWAHRC-SDWASERV(0,14)   STORE REASON CODE    04610006
*                                                              @G860P2F 04620006
.RSCEND  ANOP                                                  @G860P1C 04630006
         OI   SDWACCRC-SDWASERV(14),SDWAREAF INDICATE CHANGE TO         04640006
*                                         REASON CODE          @G860P1C 04650006
&CCRC    SETB 1         BASE TO SERVICE EXTENSION EXISTS           @LBA 04660006
.SSRST   ANOP                                                      @LBA 04670006
         AIF   ('&SSRESET' EQ '').FRELOCK  NO SSRESET SPECIFIED    @LBA 04680006
         ANOP                                                      @LBA 04690006
         AIF   (&CCRC).SSCHK     BRANCH IF EXTENSION PTR IN REG14  @LBA 04700006
         &L   14,SDWAXPAD-SDWA(0,1)        ADDR OF EXTENSION PTRS  @LBA 04710006
         AIF   ('&SYSASCE' EQ 'P').NOAR12                          @LBA 04720006
         CPYA  14,1                      SET UP ALET OF EXTENSION  @LBA 04730006
.NOAR12  ANOP                                                      @LBA 04740006
         L    14,SDWASRVP-SDWAPTRS(0,14)  ADDR OF SERVICE DATA          04750006
*                                         EXTENSION                @LBA 04760006
&CCRC    SETB 1         BASE TO SERVICE EXTENSION EXISTS           @LBA 04770006
.SSCHK   AIF   ('&SSRESET' EQ 'YES').SSRST1     TEST SSRESET=YES   @LBA 04780006
         AIF   ('&SSRESET' EQ 'NO').SSRST2      TEST SSRESET=NO    @LBA 04790006
         AGO   .ERR27                      ILLEGAL SSRESET VALUE   @LBA 04800006
.SSRST1  ANOP                                                      @LBA 04810006
         OI   SDWASFLG-SDWASERV(14),SDWASSRS INDICATE SSRESET      @LBA 04820006
         AGO  .FRELOCK                                             @LBA 04830006
.SSRST2  ANOP                                                      @LBA 04840006
         NI   SDWASFLG-SDWASERV(14),SDWASSRS INDICATE NO SSRESET   @LBA 04850006
.FRELOCK ANOP                                                           04860006
         AIF   ('&FRELOCK' EQ '').SERIAL                       @G381P2F 04870006
.LOCKLP  ANOP                                                           04880006
         AIF   (K'&FRELOCK(&I) LE 2).NOLOCK                             04890006
&K       SETA  K'&FRELOCK(&I)-2                                         04900006
         AIF   ('&FRELOCK(&I)' NE 'DISP').OPTM                          04910006
&LFLAG1  SETA  &LFLAG1+16                                               04920006
         AGO   .INITLP                                                  04930006
.OPTM    ANOP                                                           04940006
         AIF   ('&FRELOCK(&I)' NE 'SRM').SALLOC                         04950006
&LFLAG2  SETA  &LFLAG2+4                                                04960006
         AGO   .INITLP                                                  04970006
.SALLOC  ANOP                                                           04980006
         AIF   ('&FRELOCK(&I)' NE 'SALLOC').CMS                         04990006
&LFLAG1  SETA  &LFLAG1+4                                                05000006
         AGO   .INITLP                                                  05010006
.CMS     ANOP                                                           05020006
         AIF   ('&FRELOCK(&I)' NE 'CMS').VSMFIX                @G860P1C 05030006
&LFLAG2  SETA  &LFLAG2+2                                                05040006
         AGO   .INITLP                                                  05050006
.VSMFIX  ANOP                                                  @G860P1C 05060006
         AIF   ('&FRELOCK(&I)' NE 'VSMFIX').RSM                @G860P1C 05070006
&LFLAG4  SETA  &LFLAG4+4                                       @G860P2F 05080006
         AGO   .INITLP                                         @G860P1C 05090006
.RSM     ANOP                                                  @G860P1C 05100006
         AIF   ('&FRELOCK(&I)' NE 'RSM').VSMPAG                @G860P1C 05110006
&LFLAG3  SETA  &LFLAG3+8                                       @G860P2F 05120006
         AGO   .INITLP                                         @G860P1C 05130006
.VSMPAG  ANOP                                                  @G860P1C 05140006
         AIF   ('&FRELOCK(&I)' NE 'VSMPAG').CPULOCK            @G860P1C 05150006
&LFLAG1  SETA  &LFLAG1+32                                      @G860P2F 05160006
         AGO   .INITLP                                         @G860P1C 05170006
.CPULOCK ANOP                                                  @G860P1C 05180006
         AIF   ('&FRELOCK(&I)' NE 'CPU').TRACE                 @G860P1C 05190006
&LFLAG3  SETA  &LFLAG3+128                                     @G860P2F 05200006
         AGO   .INITLP                                         @G860P1C 05210006
.TRACE   ANOP                                                  @G860P1C 05220006
         AIF   ('&FRELOCK(&I)' NE 'TRACE').LCL                 @G860P1C 05230006
&LFLAG3  SETA  &LFLAG3+4                                       @G860P2F 05240006
         AGO   .INITLP                                         @G860P1C 05250006
.LCL     ANOP                                                           05260006
         AIF   ('&FRELOCK(&I)' NE 'LOCAL').IOS                     @P2C 05270006
&LFLAG2  SETA  &LFLAG2+1                                                05280006
         AGO   .INITLP                                                  05290006
.IOS     ANOP                                                      @P2M 05300006
         AIF   ('&FRELOCK(&I)' NE 'IOS').BMFLSD                    @L7C 05310006
&LFLAG3  SETA  &LFLAG3+2                                           @P3C 05320006
         AGO   .INITLP                                             @P2M 05330006
.BMFLSD  ANOP                                                      @L7A 05340006
         AIF   ('&FRELOCK(&I)' NE 'BMFLSD').XCFDS                  @L7A 05350006
&LFLAG5  SETA  &LFLAG5+128                                         @L7A 05360006
         AGO   .INITLP                                             @L7A 05370006
.XCFDS   ANOP                                                      @L8A 05380006
         AIF   ('&FRELOCK(&I)' NE 'XCFDS').XCFRES                  @L8A 05390006
&LFLAG5  SETA  &LFLAG5+64                                          @L8A 05400006
         AGO   .INITLP                                             @L8A 05410006
.XCFRES  ANOP                                                      @L8A 05420006
         AIF   ('&FRELOCK(&I)' NE 'XCFRES').XCFQ                   @L8A 05430006
&LFLAG5  SETA  &LFLAG5+32                                          @L8A 05440006
         AGO   .INITLP                                             @L8A 05450006
.XCFQ    ANOP                                                      @L8A 05460006
         AIF   ('&FRELOCK(&I)' NE 'XCFQ').ETRSET                   @L8A 05470006
&LFLAG5  SETA  &LFLAG5+16                                          @L8A 05480006
         AGO   .INITLP                                             @L8A 05490006
.ETRSET  ANOP                                                     1@P4D 05500006
         AIF   ('&FRELOCK(&I)' NE 'ETRSET').IXLSCH                 @LAA 05510006
&LFLAG5  SETA  &LFLAG5+8                                           @L6A 05520006
         AGO   .INITLP                                             @L6A 05530006
.IXLSCH ANOP                                                       @LAA 05540006
         AIF   ('&FRELOCK(&I)' NE 'IXLSCH').IXLSHR                 @LAA 05550006
&LFLAG5  SETA  &LFLAG5+4                                           @LAA 05560006
         AGO   .INITLP                                             @LAA 05570006
.IXLSHR ANOP                                                       @LAA 05580006
         AIF   ('&FRELOCK(&I)' NE 'IXLSHR').IXLDS                  @LAA 05590006
&LFLAG5  SETA  &LFLAG5+2                                           @LAA 05600006
         AGO   .INITLP                                             @LAA 05610006
.IXLDS   ANOP                                                      @LAA 05620006
         AIF   ('&FRELOCK(&I)' NE 'IXLDS').IXLSHELL                @LAA 05630006
&LFLAG5  SETA  &LFLAG5+1                                           @LAA 05640006
         AGO   .INITLP                                             @LAA 05650006
.IXLSHELL ANOP                                                     @LAA 05660006
         AIF   ('&FRELOCK(&I)' NE 'IXLSHELL').IOSULUT              @LAA 05670006
&LFLAG6  SETA  &LFLAG6+128                                         @LAA 05680006
         AGO   .INITLP                                             @LAA 05690006
.IOSULUT ANOP                                                      @L9A 05700006
         AIF   ('&FRELOCK(&I)' NE 'IOSULUT').IXLREQST              @02C 05710006
&LFLAG6  SETA  &LFLAG6+64                                          @L9A 05720006
         AGO   .INITLP                                             @L9A 05730006
.IXLREQST ANOP                                                     @02A 05740006
         AIF   ('&FRELOCK(&I)' NE 'IXLREQST').WLMRES               @PAC 05750006
&LFLAG6  SETA  &LFLAG6+32                                          @02A 05760006
         AGO   .INITLP                                             @02A 05770006
.WLMRES  ANOP                                                      @PAA 05780006
         AIF   ('&FRELOCK(&I)' NE 'WLMRES').WLMQ                   @PAA 05790006
&LFLAG6  SETA  &LFLAG6+16                                          @PAA 05800006
         AGO   .INITLP                                                  05810006
.WLMQ    ANOP                                                      @LCA 05820006
         AIF   ('&FRELOCK(&I)' NE 'WLMQ').CONTEXT                  @PAC 05830006
&LFLAG6  SETA  &LFLAG6+8                                           @P9C 05840006
         AGO   .INITLP                                             @LCA 05850006
.CONTEXT ANOP                                                      @PAA 05860006
         AIF   ('&FRELOCK(&I)' NE 'CONTEXT').REGSRV                @PAA 05870006
&LFLAG6  SETA  &LFLAG6+4                                           @PAA 05880006
         AGO   .INITLP                                             @PAA 05890006
.REGSRV  ANOP                                                      @LCA 05900006
         AIF   ('&FRELOCK(&I)' NE 'REGSRV').SSD                    @LEC 05910006
&LFLAG6  SETA  &LFLAG6+2                                           @LCA 05920006
         AGO   .INITLP                                             @LCA 05930006
.SSD     ANOP                                                      @LEA 05940006
         AIF   ('&FRELOCK(&I)' NE 'SSD').FINDP                     @LEA 05950006
&LFLAG6  SETA  &LFLAG6+1                                           @LEA 05960006
         AGO   .INITLP                                             @LEA 05970006
.FINDP   ANOP                                                           05980006
         AIF   ('&FRELOCK(&I)' NE 'GRSINT').FINDQ                  @LFA 05990006
&LFLAG7  SETA  &LFLAG7+128                                         @LFA 06000006
         AGO   .INITLP                                             @LFA 06010006
.FINDQ   ANOP                                                           06020006
         AIF   ('&FRELOCK(&I)' NE 'MISC').FINDR                    @LJC 06030006
&LFLAG7  SETA  &LFLAG7+64                                          @LGA 06040006
         AGO   .INITLP                                             @LGP 06050006
.FINDR   ANOP                                                      @LGA 06060006
         AIF   ('&FRELOCK(&I)' NE 'DONOTUS2').FINDS                @LJC 06070006
&LFLAG7  SETA  &LFLAG7+32                                          @LGA 06080006
         AGO   .INITLP                                             @LGP 06090006
.FINDS   ANOP                                                      @LGA 06100006
         AIF   ('&FRELOCK(&I)' NE 'DONOTUS3').FINDT                @LJC 06110006
&LFLAG7  SETA  &LFLAG7+16                                          @LGA 06120006
         AGO   .INITLP                                             @LGP 06130006
.FINDT   ANOP                                                      @LGA 06140006
         AIF   ('&FRELOCK(&I)' NE 'DONOTUS4').FINDU                @LJC 06150006
&LFLAG7  SETA  &LFLAG7+8                                           @LGA 06160006
         AGO   .INITLP                                             @LGP 06170006
.FINDU   ANOP                                                      @LGA 06180006
         AIF   ('&FRELOCK(&I)' NE 'DONOTUS5').FINDV                @LJC 06190006
&LFLAG7  SETA  &LFLAG7+4                                           @LGA 06200006
         AGO   .INITLP                                             @LGP 06210006
.FINDV   ANOP                                                      @LGA 06220006
         AIF   ('&FRELOCK(&I)' NE 'HCWDRLK2').FINDW                @LGA 06230006
&LFLAG7  SETA  &LFLAG7+2                                           @LGA 06240006
         AGO   .INITLP                                             @LGP 06250006
.FINDW   ANOP                                                      @LGA 06260006
         AIF   ('&FRELOCK(&I)' NE 'HCWDRLK1').FINDX                @LGA 06270006
&LFLAG7  SETA  &LFLAG7+1                                           @LGA 06280006
         AGO   .INITLP                                             @LGP 06290006
.FINDX   ANOP                                                      @LGA 06300006
         AIF   ('&FRELOCK(&I)' NE 'SRMENQ').FINDY                  @LIA 06310006
&LFLAG8  SETA  &LFLAG8+128                                         @LIA 06320006
         AGO   .INITLP                                             @LIA 06330006
.FINDY   ANOP                                                      @LIA 06340006
         AIF   ('&FRELOCK(&I)' NE 'RSMQ').NOT_RSMQ                 @LKA 06350006
&LFLAG2  SETA  &LFLAG2+64                                          @LKA 06360006
         AGO   .INITLP                                             @LKA 06370006
.NOT_RSMQ ANOP                                                     @L3A 06380006
         AIF   ('&FRELOCK(&I)' NE 'SSDGROUP').NOT_SSDG             @LLA 06381007
&LFLAG8  SETA  &LFLAG8+64                                          @LLA 06382006
         AGO   .INITLP                                             @LLA 06383006
.NOT_SSDG ANOP                                                     @LLA 06384007
&L1      SETA  &K                                                       06390006
.FINDP2  AIF   ('&FRELOCK(&I)'(&L1,1) EQ '(').GETLOCK                   06400006
&L1      SETA  &L1-1                                                    06410006
         AIF   (&L1 LE 1).ERR5                                          06420006
         AGO   .FINDP2                                                  06430006
.GETLOCK ANOP                                                           06440006
&M       SETA  &L1-1                   LENGTH OF LOCK                   06450006
&N       SETC  '&FRELOCK(&I)'(&L1+1,&K-&M)                              06460006
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'IOSUCB').FINDZ            @LKC 06470006
&LFLAG2  SETA  &LFLAG2+128                                              06480006
         LA    15,&N                   ACCESS ADDR OF LOCKWORD          06490006
         ST    15,SDWAIULW-SDWA(,1)   INITIALIZE IOSUCB LOCKWORD        06500006
         AGO   .INITLP                                                  06510006
.FINDZ   ANOP                                                      @LKA 06520006
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'RSMDS').RSMGL             @L3A 06530006
&LFLAG1  SETA  &LFLAG1+1                                           @L3A 06540006
         LA    15,&N                   ACCESS ADDR OF LOCKWORD     @L3A 06550006
         ST    15,SDWALRSD-SDWA(,1)   INITIALIZE RSMDS LOCKWORD    @L3A 06560006
         AGO   .INITLP                                             @L3A 06570006
.RSMGL   ANOP                                                  @G860P1C 06580006
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'RSMGL').ASMGL         @G860P1C 06590006
         AIF   (&LOCKEXT).BYPAS1                               @G860P1C 06600006
         &L    14,SDWAXPAD-SDWA(0,1) ADDRESS OF EXTENSION PTRS @G860P1C 06610006
         AIF   ('&SYSASCE' EQ 'P').NOAR5                           @L2A 06620006
         CPYA  14,1                   SET UP ALET OF EXTENSION     @L2A 06630006
.NOAR5   ANOP                                                      @L2A 06640006
         L     14,SDWAXLCK-SDWAPTRS(0,14) ADDR OF FRELOCK EXT  @G860P1C 06650006
&LOCKEXT SETB  1                                               @G860P1C 06660006
.BYPAS1  ANOP                                                  @G860P1C 06670006
&LFLAG4  SETA  &LFLAG4+8                                       @G860P2F 06680006
         LA    15,&N                      ACCESS LOCKWORD ADDR @G860P1C 06690006
         ST    15,SDWALRSG-SDWAFLCK(,14)  INIT RSMGL  LOCKWORD @G860P1C 06700006
         AGO   .INITLP                                         @G860P1C 06710006
.ASMGL   ANOP                                                  @G860P1C 06720006
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'ASMGL').RSMST         @G860P1C 06730006
         AIF   (&LOCKEXT).BYPAS2                               @G860P1C 06740006
         &L    14,SDWAXPAD-SDWA(0,1) ADDRESS OF EXTENSION PTRS @G860P1C 06750006
         AIF   ('&SYSASCE' EQ 'P').NOAR6                           @L2A 06760006
         CPYA  14,1                   SET UP ALET OF EXTENSION     @L2A 06770006
.NOAR6   ANOP                                                      @L2A 06780006
         L     14,SDWAXLCK-SDWAPTRS(0,14) ADDR OF FRELOCK EXT  @G860P1C 06790006
&LOCKEXT SETB  1                                               @G860P1C 06800006
.BYPAS2  ANOP                                                  @G860P1C 06810006
&LFLAG4  SETA  &LFLAG4+2                                       @G860P2F 06820006
         LA    15,&N                      ACCESS LOCKWORD ADDR @G860P1C 06830006
         ST    15,SDWALASG-SDWAFLCK(,14)  INIT ASMGL  LOCKWORD @G860P1C 06840006
         AGO   .INITLP                                         @G860P1C 06850006
.RSMST   ANOP                                                  @G860P1C 06860006
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'RSMST').RSMCM         @G860P2F 06870006
         AIF   (&LOCKEXT).BYPAS3                               @G860P1C 06880006
         &L    14,SDWAXPAD-SDWA(0,1) ADDRESS OF EXTENSION PTRS @G860P1C 06890006
         AIF   ('&SYSASCE' EQ 'P').NOAR7                           @L2A 06900006
         CPYA  14,1                   SET UP ALET OF EXTENSION     @L2A 06910006
.NOAR7   ANOP                                                      @L2A 06920006
         L     14,SDWAXLCK-SDWAPTRS(0,14) ADDR OF FRELOCK EXT  @G860P1C 06930006
&LOCKEXT SETB  1                                               @G860P1C 06940006
.BYPAS3  ANOP                                                  @G860P1C 06950006
&LFLAG4  SETA  &LFLAG4+1                                       @G860P2F 06960006
         LA    15,&N                      ACCESS LOCKWORD ADDR @G860P1C 06970006
         ST    15,SDWALRSS-SDWAFLCK(,14)  INIT RSMST  LOCKWORD @G860P1C 06980006
         AGO   .INITLP                                         @G860P1C 06990006
.RSMCM   ANOP                                                  @G860P2F 07000006
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'RSMCM').RSMXM         @G860P2F 07010006
         AIF   (&LOCKEXT).BYPAS6                               @G860P2F 07020006
         &L    14,SDWAXPAD-SDWA(0,1) ADDRESS OF EXTENSION PTRS @G860P2F 07030006
         AIF   ('&SYSASCE' EQ 'P').NOAR8                           @L2A 07040006
         CPYA  14,1                   SET UP ALET OF EXTENSION     @L2A 07050006
.NOAR8   ANOP                                                      @L2A 07060006
         L     14,SDWAXLCK-SDWAPTRS(0,14) ADDR OF FRELOCK EXT  @G860P2F 07070006
&LOCKEXT SETB  1                                               @G860P2F 07080006
.BYPAS6  ANOP                                                  @G860P2F 07090006
&LFLAG4  SETA  &LFLAG4+16                                      @G860P2F 07100006
         LA    15,&N                      ACCESS LOCKWORD ADDR @G860P2F 07110006
         ST    15,SDWALRSC-SDWAFLCK(,14)  INIT RSMCM  LOCKWORD @G860P2F 07120006
         AGO   .INITLP                                         @G860P2F 07130006
.RSMXM   ANOP                                                  @G860P1C 07140006
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'RSMXM').RSMAD         @G860P1C 07150006
         AIF   (&LOCKEXT).BYPAS4                               @G860P1C 07160006
         &L    14,SDWAXPAD-SDWA(0,1) ADDRESS OF EXTENSION PTRS @G860P1C 07170006
         AIF   ('&SYSASCE' EQ 'P').NOAR9                           @L2A 07180006
         CPYA  14,1                   SET UP ALET OF EXTENSION     @L2A 07190006
.NOAR9   ANOP                                                      @L2A 07200006
         L     14,SDWAXLCK-SDWAPTRS(0,14) ADDR OF FRELOCK EXT  @G860P1C 07210006
&LOCKEXT SETB  1                                               @G860P1C 07220006
.BYPAS4  ANOP                                                  @G860P1C 07230006
&LFLAG1  SETA  &LFLAG1+128                                     @G860P2F 07240006
         LA    15,&N                      ACCESS LOCKWORD ADDR @G860P1C 07250006
         ST    15,SDWALRSX-SDWAFLCK(,14)  INIT RSMXM  LOCKWORD @G860P1C 07260006
         AGO   .INITLP                                         @G860P1C 07270006
.RSMAD   ANOP                                                  @G860P1C 07280006
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'RSMAD').IOSPRG        @G860P1C 07290006
         AIF   (&LOCKEXT).BYPAS5                               @G860P1C 07300006
         &L    14,SDWAXPAD-SDWA(0,1) ADDRESS OF EXTENSION PTRS @G860P1C 07310006
         AIF   ('&SYSASCE' EQ 'P').NOAR10                          @L2A 07320006
         CPYA  14,1                   SET UP ALET OF EXTENSION     @L2A 07330006
.NOAR10  ANOP                                                      @L2A 07340006
         L     14,SDWAXLCK-SDWAPTRS(0,14) ADDR OF FRELOCK EXT  @G860P1C 07350006
&LOCKEXT SETB  1                                               @G860P1C 07360006
.BYPAS5  ANOP                                                  @G860P1C 07370006
&LFLAG1  SETA  &LFLAG1+64                                      @G860P2F 07380006
         LA    15,&N                      ACCESS LOCKWORD ADDR @G860P1C 07390006
         ST    15,SDWALRSA-SDWAFLCK(,14)  INIT RSMAD  LOCKWORD @G860P1C 07400006
         AGO   .INITLP                                         @G860P1C 07410006
.IOSPRG  ANOP                                                           07420006
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'IOSYNCH').ASMPAT               07430006
&LFLAG1  SETA  &LFLAG1+2                                                07440006
         LA    15,&N .                 ACCESS ADDR OF LOCKWORD          07450006
         ST    15,SDWAIPLW-SDWA(,1)   INITIALIZE IOSPURGE LOCKWORD      07460006
         AGO   .INITLP                                                  07470006
.ASMPAT  ANOP                                                           07480006
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'ASM').ACBDEB              @L5C 07490006
&LFLAG1  SETA  &LFLAG1+8                                                07500006
         LA    15,&N .                 ACCESS ADDR OF LOCKWORD          07510006
         ST    15,SDWAAPLW-SDWA(,1)   INITIALIZE ASMPAT LOCKWORD        07520006
         AGO   .INITLP                                                  07530006
.ACBDEB  ANOP                                                           07540006
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'TPACBDEB').CML        @G381P2F 07550006
&LFLAG2  SETA  &LFLAG2+8                                                07560006
         LA    15,&N .                 ACCESS ADDR OF LOCKWORD          07570006
         ST    15,SDWATALW-SDWA(,1)   INITIALIZE TPACBDEB LOCKWORD      07580006
         AGO   .INITLP                                                  07590006
.CML     ANOP                                                  @G381P2F 07600006
         AIF   ('&FRELOCK(&I)'(1,&M) NE 'CML').CMLREG          @G381P2F 07610006
         OI    SDWAACF2-SDWA(1),SDWACML IND FREE CML REQUEST   @G381P2F 07620006
         L     15,&N                   OBTAIN ASCB ADDRESS     @G381P2F 07630006
         ST    15,SDWACMLA-SDWA(,1)    SAVE ASCB ADDR FOR CML  @G381P2F 07640006
         AGO   .INITLP                                         @G381P2F 07650006
.CMLREG  ANOP                          CHK FOR CMLASCB IN REG  @G381P2F 07660006
         AIF   ('&FRELOCK(&I)'(1,&M-1) NE 'CML').NXTLOCK       @G381P2F 07670006
         OI    SDWAACF2-SDWA(1),SDWACML IND FREE CML REQUEST   @ZA86653 07680006
&N       SETC  '&FRELOCK(&I)'(&L1+1,(&K-&M)-1)                 @G381P2F 07690006
         ST    &N,SDWACMLA-SDWA(,1)    SAVE ASCB ADDR FOR CML  @G381P2F 07700006
         AGO   .INITLP                                         @G381P2F 07710006
.NXTLOCK ANOP                                                           07720006
.NOLOCK  ANOP                                                           07730006
         MNOTE 12,'*** INVALID LOCK IN FRELOCK SUBSTRING ELEMENT &I'    07740006
         MEXIT                                                          07750006
.INITLP  ANOP                                                           07760006
&I       SETA  &I+1                                                     07770006
         AIF   (&I LE &J).LOCKLP                                        07780006
         AIF   (&LFLAG1 EQ 0).LOCK1                                     07790006
         OI    SDWAACF3-SDWA(1),&LFLAG1 INITIALIZE LOCK FLAGS           07800006
.LOCK1   ANOP                                                           07810006
         AIF   (&LFLAG2 EQ 0).LOCK2                            @G860P1C 07820006
         OI    SDWAACF4-SDWA(1),&LFLAG2 INITIALIZE LOCK FLAGS           07830006
.LOCK2   ANOP                                                           07840006
         AIF   (&LFLAG3 EQ 0 AND &LFLAG4 EQ 0 AND &LFLAG5 EQ 0 AND     X07850006
                &LFLAG6 EQ 0 AND &LFLAG7 EQ 0 AND &LFLAG8 EQ 0).SERIAL X07860006
                                                                   @L5A 07870006
.LOCK3   ANOP                                                  @G860P1C 07880006
         AIF   (&LOCKEXT).BYPASN                               @G860P1C 07890006
         &L    14,SDWAXPAD-SDWA(0,1) ADDRESS OF EXTENSION PTRS @G860P1C 07900006
         AIF   ('&SYSASCE' EQ 'P').NOAR11                          @L2A 07910006
         CPYA  14,1                   SET UP ALET OF EXTENSION     @L2A 07920006
.NOAR11  ANOP                                                      @L2A 07930006
         L     14,SDWAXLCK-SDWAPTRS(0,14) ADDR OF FRELOCK      @G860P1C 07940006
.BYPASN  ANOP                                                  @G860P1C 07950006
         AIF   (&LFLAG3 EQ 0).LOCK4                            @G860P1C 07960006
         OI    SDWAFLK1-SDWAFLCK(14),&LFLAG3 INIT LOCK FLAGS   @G860P1C 07970006
.LOCK4   ANOP                                                  @G860P1C 07980006
         AIF   (&LFLAG4 EQ 0).LOCK5                                @L5C 07990006
         OI    SDWAFLK2-SDWAFLCK(14),&LFLAG4 INIT LOCK FLAGS   @G860P1C 08000006
.LOCK5   ANOP                                                      @L5A 08010006
         AIF   (&LFLAG5 EQ 0).LOCK6                                @L5A 08020006
         OI    SDWAFLE1-SDWAFLCK(14),&LFLAG5 INIT LOCK FLAGS       @L5A 08030006
.LOCK6   ANOP                                                      @L5A 08040006
         AIF   (&LFLAG6 EQ 0).LOCK7                                @L5A 08050006
         OI    SDWAFLE2-SDWAFLCK(14),&LFLAG6 INIT LOCK FLAGS       @L5A 08060006
.LOCK7   ANOP                                                      @L5A 08070006
         AIF   (&LFLAG7 EQ 0).LOCK8                                @L5A 08080006
         OI    SDWAFLE3-SDWAFLCK(14),&LFLAG7 INIT LOCK FLAGS       @L5A 08090006
.LOCK8   ANOP                                                      @L5A 08100006
         AIF   (&LFLAG8 EQ 0).SERIAL                               @L5A 08110006
         OI    SDWAFLE4-SDWAFLCK(14),&LFLAG8 INIT LOCK FLAGS       @L5A 08120006
.SERIAL  ANOP                                                  @G381P2F 08130006
         AIF   ('&SERIAL' EQ '').RETRY                         @G381P2F 08140006
         AIF   ('&RETRY' NE '').ERR20                          @G381P2F 08150006
         AIF   ('&SERIAL' EQ 'NO').NSERIAL                     @G381P2F 08160006
         AIF   ('&SERIAL' NE 'YES').ERR18                      @G381P2F 08170006
         OI    SDWAACF2-SDWA(1),SDWASERP  INDICATE SERIAL=YES  @G381P2F 08180006
         AGO   .RETRY                                          @G381P2F 08190006
.NSERIAL NI    SDWAACF2-SDWA(1),X'FF'-SDWASERP IND SERIAL=NO   @G381P2F 08200006
.RETRY   ANOP                                                  @G381P2F 08210006
         AIF   ('&RETRY' EQ '').DUMPOPX                            @L4C 08220006
         AIF   ('&RETRY' EQ 'FRR').OPTFRR                      @G381P2F 08230006
         AIF   ('&RETRY' NE 'ERROR').ERR19                     @G381P2F 08240006
         OI    SDWAACF2-SDWA(1),SDWARERR  INDICATE RETRY=ERROR @G381P2F 08250006
         AGO   .DUMPOPX                                            @L4C 08260006
.OPTFRR  NI    SDWAACF2-SDWA(1),X'FF'-SDWARERR IND RETRY=FRR   @G381P2F 08270006
.DUMPOPX ANOP                                                      @L4A 08280006
         AIF ('&DUMPOPX' EQ '').REGS    IF NO DUMPOPX, SKIP        @L4A 08290006
         AIF ('&DUMPOPX'(1,1) EQ '(').DUMPXR  ADDRESS IN REGISTER  @L4A 08300006
         &LA   0,&DUMPOPX(1) .          GET ADDRESS OF RANGE LIST  @L4A 08310006
         AGO   .DUMPRDX                                            @L4A 08320006
.DUMPXR  ANOP                                                      @L4A 08330006
         LR    0,&DUMPOPX(1) .          GET ADDRESS OF RANGE LIST  @L4A 08340006
         AIF   ('&SYSASCE' EQ 'P').DUMPRDX                         @L4A 08350006
         CPYA  0,&DUMPOPX(1)            GET ALET OF RANGE LIST     @L4A 08360006
.DUMPRDX ANOP                                                      @L4A 08370006
         &L    15,X'10'(0,0)            GET ADDRESS OF CVT         @L4A 08380006
         L     15,X'C8'(15,0)           GET ADDR OF SECONDARY CVT  @L4A 08390006
         L     15,X'60'(15)             GET POINTER TO IEAVTRDX    @L4A 08400006
         BASSM 14,15                    BRANCH TO IEAVTRDX         @L4A 08410006
.REGS    ANOP                                                           08420006
         AIF   ('&REGS(1)' EQ '').RETUSER                               08430006
&A       SETC   'REGS'                                                  08440006
         AIF   ('&REGS'(1,1) NE '(').ERR1                               08450006
         AIF   ('&REGS(2)' EQ '').RET2                                  08460006
         RETURN  (&REGS(1),&REGS(2)) .                                  08470006
         MEXIT                                                          08480006
.RET2    RETURN  (&REGS(1))                                             08490006
.RETUSER ANOP                                                           08500006
         MEXIT                                                          08510006
.ERR1    ANOP                                                           08520006
         MNOTE 12,'***  REGISTER SPECIFICATION REQUIRED FOR &A KEYWORD' 08530006
         MEXIT                                                          08540006
.ERR2    ANOP                                                           08550006
         MNOTE 12,'***   RETADDR MUST BE SPECIFIED WITH RC/&RC'         08560006
         MEXIT                                                          08570006
.ERR3    ANOP                                                           08580006
         IHBERMAC 1020,RETADDR,RC/&RC                                   08590006
         MEXIT                                                          08600006
.ERR3A   ANOP                                                      @LxA 08610006
         IHBERMAC 1020,RETRYAMODE,RC/&RC                           @LxA 08620006
         MEXIT                                                          08630006
.ERR3B   ANOP                                                      @LxA 08640006
         MNOTE 12,'** INVALID SYNTAX ON RETRYAMODE KEYWORD'        @LXA 08650006
         MEXIT                                                     @LXA 08660006
.ERR4    ANOP                                                           08670006
         IHBERMAC 54,,&RECORD                                           08680006
         MEXIT                                                          08690006
.ERR5    ANOP                                                           08700006
         MNOTE 12,'*** INVALID SYNTAX IN FRELOCK SUBSTRING ELEMENT &I'  08710006
         MEXIT                                                          08720006
.ERR6    ANOP                                                           08730006
         IHBERMAC 1020,RECPARM,RECORD/NO                                08740006
         MEXIT                                                          08750006
.ERR7    ANOP                                                           08760006
         IHBERMAC 54,,&DUMP                                             08770006
         MEXIT                                                          08780006
.ERR8    ANOP                                                           08790006
         IHBERMAC 1020,DUMPOPT/DUMPOPX,DUMP/NO                     @L4C 08800006
         MEXIT                                                          08810006
.ERR9    ANOP                                                           08820006
         IHBERMAC 54,,&RETREGS                                          08830006
         MEXIT                                                          08840006
.ERR10   ANOP                                                           08850006
         IHBERMAC 1020,FRESDWA,RC/&RC                                   08860006
         MEXIT                                                          08870006
.ERR11   ANOP                                                           08880006
         IHBERMAC 54,,&FRESDWA                                          08890006
         MEXIT                                                          08900006
.ERR12   ANOP                                                           08910006
         IHBERMAC 1020,RUB,RETREGS/NO                                   08920006
         MEXIT                                                          08930006
.ERR12A  ANOP                                                      @LDA 08940006
         IHBERMAC 1020,RUB,RETREGS/64                              @LDA 08950006
         MEXIT                                                          08960006
.ERR13   ANOP                                                           08970006
         MNOTE 12,'***   COMPCOD OPERAND EXCEEDS SPECIFIED LIMITS'      08980006
         MEXIT                                                          08990006
.ERR14   ANOP                                                           09000006
         IHBERMAC 54,,&COMPCOD(2)                                       09010006
         MEXIT                                                          09020006
.ERR15   ANOP                                                           09030006
         IHBERMAC 1020,RETREGS,RC/&RC                                   09040006
         MEXIT                                                          09050006
.ERR16   ANOP                                                           09060006
         MNOTE 12,'** KEYWORD FRLKRTY IS ONLY VALID FOR RC=4'      @L1C 09070006
         MEXIT                                                          09080006
.ERR17   ANOP                                                           09090006
         MNOTE 12,'*** REGISTER SPECIFICATION ILLEGAL FOR RC KEYWORD'   09100006
         MEXIT                                                          09110006
.ERR18   ANOP                                                  @G381P2F 09120006
         MNOTE 12,'*** INVALID SYNTAX ON SERIAL KEYWORD'       @G381P2F 09130006
         MEXIT                                                 @G381P2F 09140006
.ERR19   ANOP                                                  @G381P2F 09150006
         MNOTE 12,'*** INVALID SYNTAX ON RETRY KEYWORD'        @G381P2F 09160006
         MEXIT                                                 @G381P2F 09170006
.ERR20   ANOP                                                  @G381P2F 09180006
         MNOTE 12,'** KEYWORDS SERIAL AND RETRY ARE MUTUALLY EXCLUSIVE' 09190006
         MEXIT                                                 @G381P2F 09200006
.ERR21   ANOP                                                      @L1A 09210006
         MNOTE 12,'** INVALID SYNTAX ON FRLKRTY KEYWORD'           @L1A 09220006
         MEXIT                                                     @L1A 09230006
.ERR22   ANOP                                                      @L1A 09240006
         MNOTE 12,'** INVALID SYNTAX ON RETRY15 KEYWORD'           @L1A 09250006
         MEXIT                                                     @L1A 09260006
.ERR23   ANOP                                                      @L1A 09270006
         MNOTE 12,'** INVALID SYNTAX ON REMREC KEYWORD'            @L1A 09280006
         MEXIT                                                     @L1A 09290006
.ERR24   ANOP                                                      @L1A 09300006
         MNOTE 12,'** KEYWORD REMREC IS ONLY VALID FOR RC=4'       @L1A 09310006
         MEXIT                                                     @L1A 09320006
.ERR25   ANOP                                                      @L1A 09330006
         MNOTE 12,'** KEYWORD RETRY15 IS ONLY VALID FOR RC=4'      @L1A 09340006
         MEXIT                                                     @L1A 09350006
.ERR26   ANOP                                                      @L4A 09360006
     MNOTE 12,'** KEYWORDS DUMPOPT AND DUMPOPX ARE MUTUALLY EXCLUSIVE' X09370006
                                                                   @L4A 09380006
         MEXIT                                                     @L4A 09390006
.ERR27   ANOP                                                      @LBA 09400006
         MNOTE 12,'** INVALID SYNTAX ON SSRESET KEYWORD'           @LBA 09410006
         MEXIT                                                     @LBA 09420006
         MEND                                                           09430006
* */                                                                    09440006
* SETRP: MACRO KEYS(WKAREA,RETADDR,RC,RETREGS,DUMP,RECORD,REGS,DUMPOPT, 09450006
*     DUMPOPX,RECPARM,FRELOCK,CPU,COMPCOD,FRESDWA,RUB,SERIAL,RETRY,     09460006
*     REASON,FRLKRTY,RETRY15,REMREC,SSRESET                             09470006
*    ,RETRYAMODE);                                            /* @LxC*/ 09480006
*     ANS ('?' !! MACLABEL !! 'SETRPP ' !! MACLIST !! MACKEYS !! ';');  09490006
* %END;                                                                 09500006
