         MACRO                                                                  
         IST6MCAL &AREA=,&RECLEN=,&ECB=,&EXIT=,&BRANCH=,&OPTCD=,       X        
               &CONMODE=,&SENSE=,&USERFLD=,&LUNAME=,&LOGMODE=,&CGID=,  X        
               &QUALIFY=,&INVALKW=,&NETID=,&CONXMOD=,&RTSRTRN=,        X        
               &NAMEUSE=,&VTRINA=,&VTRINL=,&VTROUTA=,&VTROUTL=,        X        
               &LUAFFIN=                                      @D1C @L3C         
.*                                                                              
.* /***** START OF SPECIFICATIONS ************************************/         
.* /*                                                                */         
.* /*  MACRO NAME: IST6MCAL                                          */         
.* /*                                                                */         
.* /*  DESCRIPTIVE NAME: CONTROL = ALLOC PROCESSOR                   */         
.* /*                                                                */         
.* /*  COPYRIGHT: LICENSED MATERIALS - PROPERTY OF IBM               */         
.* /*                                                                */         
.* /*             THIS PRODUCT CONTAINS "RESTRICTED MATERIALS OF IBM"*/         
.* /*                                                                */         
.* /*             5694-A01 (C) COPYRIGHT IBM CORP. 1988, 2001.       */         
.* /*             ALL RIGHTS RESERVED.                               */         
.* /*                                                                */         
.* /*             U.S. GOVERNMENT USERS RESTRICTED RIGHTS -          */         
.* /*             USE, DUPLICATION OR DISCLOSURE RESTRICTED BY       */         
.* /*             GSA ADP SCHEDULE CONTRACT WITH IBM CORP.           */         
.* /*                                                                */         
.* /*             SEE COPYRIGHT INSTRUCTIONS.                        */         
.* /*                                                                */         
.* /*                                                                */         
.* /*  FUNCTION:                                                     */         
.* /*      GENERATES IN-LINE CODE FOR PROCESSING THE                 */         
.* /*      CONTROL=ALLOC PARAMETER ON THE APPCCMD MACRO.             */         
.* /*                                                                */         
.* /*  NOTES:                                                        */         
.* /*                                                                */         
.* /*  PROCESSOR: ASSEMBLER                                          */         
.* /*                                                                */         
.* /*  CREATED BY:                                                   */         
.* /*                                                                */         
.* /*  INTERNAL MACROS:                                              */         
.* /*      IST6MCUA,IST6MCUP,IST6MCUC,IST6MCUI,IST6MCER              */         
.* /*                                                                */         
.* /*  EXTERNAL REFERENCES: NONE                                     */         
.* /*                                                                */         
.* /*  CHANGE ACTIVITY:                                              */         
.* /*                                                                */         
.* /* $MAC(IST6MCAL),COMP(API),PROD(VTAM): CONTROL = ALLOC PROCESSOR */         
.* /*                                                                */         
.* /* FLAG REASON   RELEASE DATE   ORIGIN  FLAG DESCRIPTORS          */         
.* /* ---- -------- ------- ------ ------  ------------------------- */         
.* /* $F1= FC2@@CLD HVT3303 880315 013298: ALLOCATE CONWINNER        */         
.* /* $F2= FS1@@CLD HVT3303 880425 255471: SYNCPOINT SUPPORT         */         
.* /* $Q1= P064622  HVT3303 890118 460025: REMOVE RESYNC PRIORITY    */         
.* /* $BB= ACC@@AMS HVT3401 891025 615520: PL/AS CONVERSION          */         
.* /* $KF= S4N@@CLD HATAPPN 910326 692313: CP-CP SESSIONS            */         
.* /* $KG= NQNSTG2  NQNAME2 910628 457572: ENHANCED NQN SUPPORT (2)  */         
.* /* $KH= SZADR001 ALWFREE 910708 584390: APPC ALLOCATE Enhancement */         
.* /* $I1= FF@@@MST APPCFDX 911114 879315: APPC Full-Duplex support  */         
.* /* $L1= KA@@@PLD APPCRR  930716 446638: DCE Security Services     */         
.* /* $U2= P110887  GENRES  931024 879315: Generic Resource support  */         
.* /* $Y1= P114802  APPCRR  940518 576146: DCE Security Services     */         
.* /* $L2= KA@DR006 APPCRR  940713 576146: Vector Format             */         
.* /* $D1= ID@@@MST FPAPI   950309 143576: Fast Path API for APPC    */         
.* /* Flag Reason   Release  Date   Origin    Description            */         
.* /* ---- -------- -------- ------ --------  ---------------------- */         
.* /* $L3= R12GRAFF CSV1R2   000829 ROTHWELL: LU level GR AFFIN      */         
.* /*                                                                */         
.* /***** END OF SPECIFICATIONS **************************************/         
.*                                                                              
.* A-000000-999999                                             @R495810         
.*                                                                              
         GBLB  &ISTGEN                                                          
         GBLB  &ISTAL                                                           
         AIF   (&ISTAL EQ 1).ALINVKW                                            
&ISTAL   SETB  1                                                                
.ALINVKW ANOP                                                                   
         IST6MCUC ALLOC,CONTROL,INVALKW=&INVALKW  CHECK INVALID APPCCMD         
.ALAREA  ANOP                                                                   
         AIF   ('&AREA' EQ '').ALRLEN                                           
         IST6MCUA KWVAL=&AREA,LOC=RPLAREA-IFGRPL,BASEREG=1,            X        
               KW=DATA_ADDRESS                                                  
.*                                           PUT DATA ADDRESS IN RPL            
.ALRLEN  ANOP                                                                   
         AIF   ('&RECLEN' EQ '').ALLUNAM                                        
         IST6MCUA KWVAL=&RECLEN,LOC=RPLRLEN-IFGRPL,BASEREG=1,          X        
               KW=DATA_LENGTH                                                   
.*                                           PUT DATA LENGTH IN RPL             
.ALLUNAM ANOP                                                                   
         AIF   ('&LUNAME' EQ '').ALNETID                                        
         IST6MCUI KW=LUNAME,KWVAL=&LUNAME,LEN=8,                       X        
               LOC=RPL6LU-ISTRPL6X,BASEREG=14                                   
.*                                           PUT LUNAME IN APPC AREA            
.ALNETID ANOP                                                                   
         AIF   ('&NETID' EQ '').ALLOGM                             @KGA         
         IST6MCUI KW=NETID,KWVAL=&NETID,LEN=8,                         X        
               LOC=RPL6NET-ISTRPL6X,BASEREG=14                     @KGA         
.*                                           PUT NETID IN APPC AREA             
.ALLOGM  ANOP                                                                   
         AIF   ('&LOGMODE' EQ '').ALCOMKW                                       
         IST6MCUI KW=LOGMODE,KWVAL=&LOGMODE,LEN=8,                     X        
               LOC=RPL6MODE-ISTRPL6X,BASEREG=14                                 
.*                                           PUT LOGMODE IN APPC AREA           
.ALCOMKW ANOP                                                                   
         IST6MCUP CONMODE=&CONMODE,OPTCD=&OPTCD,ECB=&ECB,              X        
               EXIT=&EXIT,BRANCH=&BRANCH,CONXMOD=&CONXMOD,             X        
               CKCMODE=YES,        CHECK CONMODE & CONXMOD PARAMETERS  X        
               CKSYN=YES,          ASY/SYN IS VALID FOR OPTCD PARAMETERX        
               CKBUFF=NO           BUFFLST/NBUFFLST IS INVALID     @I1C         
.*                                 OPTCD PARAMETER                              
         AIF   ('&RTSRTRN' EQ '').ALURFLD                          @I1A         
         AIF   ('&RTSRTRN' NE 'BOTH').ALRTSRE                      @I1A         
         AIF   (NOT &ISTGEN).ALURFLD                               @L3A         
         NI    RPL6FLG2-ISTRPL6X(14),X'FF'-RPL6RTSX   RESET FLAG   @I1A         
         AGO   .ALURFLD                                            @I1A         
.ALRTSRE ANOP                                                      @I1A         
         AIF   ('&RTSRTRN' NE 'EXPD').ALRTSER                      @I1A         
         AIF   (NOT &ISTGEN).ALURFLD                               @L3A         
         OI    RPL6FLG2-ISTRPL6X(14),RPL6RTSX         SET FLAG     @I1A         
         AGO   .ALURFLD                                            @I1A         
.ALRTSER ANOP                                                      @I1A         
         IST6MCER 5,RTSRTRN,&RTSRTRN         REPORT BAD VALUE      @I1A         
.ALURFLD ANOP                                                                   
         AIF   ('&USERFLD' EQ '').ALNMUSE                          @U2C         
         IST6MCUI KW=USERFLD,KWVAL=&USERFLD,LEN=4,                     X        
               LOC=RPL6USR-ISTRPL6X,BASEREG=14                                  
.*                                           PUT USERFLD IN APPC AREA           
.ALNMUSE ANOP                                                      @U2A         
         AIF   ('&NAMEUSE' EQ '').ALLUAFF        NAMEUSE OMITTED?  @L3C         
         AIF   ('&NAMEUSE' NE 'APNAME').ALNMU1     NAMEUSE=APNAME? @U2A         
         AIF   (NOT &ISTGEN).ALLUAFF                               @L3A         
         NI    RPL6FLG2-ISTRPL6X(14),X'FF'-RPL6NAMU    RESET BITS  @U2A         
         OI    RPL6FLG2-ISTRPL6X(14),RPL6ANAM  SET VALUE TO APNAME @U2A         
         AGO   .ALLUAFF                                            @L3C         
.ALNMU1  ANOP                                                      @U2A         
         AIF   ('&NAMEUSE' NE 'GNAME').ALNMUER     NAMEUSE=GNAME?  @U2A         
         AIF   (NOT &ISTGEN).ALLUAFF                               @L3A         
         NI    RPL6FLG2-ISTRPL6X(14),X'FF'-RPL6NAMU    RESET BITS  @U2A         
         OI    RPL6FLG2-ISTRPL6X(14),RPL6GNAM  SET VALUE TO GNAME  @U2A         
         AGO   .ALLUAFF                                            @L3C         
.ALNMUER ANOP                                                      @U2A         
         IST6MCER 5,NAMEUSE,&NAMEUSE                               @U2A         
.ALLUAFF ANOP                                                      @L3A         
         AIF   ('&LUAFFIN' EQ '').ALCGID          LUAFFIN OMITTED? @L3A         
         AIF   ('&LUAFFIN' NE 'APPL').ALLUA1      LUAFFIN=APPL?    @L3A         
         AIF   (NOT &ISTGEN).ALCGID                                @L3A         
         NI    RPL6FLG4-ISTRPL6X(14),X'FF'-RPL6AFFN    RESET BITS  @L3A         
         OI    RPL6FLG4-ISTRPL6X(14),RPL6AAFF   SET VALUE TO APPL  @L3A         
         AGO   .ALCGID                                             @L3A         
.ALLUA1  ANOP                                                      @L3A         
         AIF   ('&LUAFFIN' NE 'NOTAPPL').ALLUAER  LUAFFIN=NOTAPPL? @L3A         
         AIF   (NOT &ISTGEN).ALCGID                                @L3A         
         NI    RPL6FLG4-ISTRPL6X(14),X'FF'-RPL6AFFN    RESET BITS  @L3A         
         OI    RPL6FLG4-ISTRPL6X(14),RPL6NAAF   SET NOTAPPL VALUE  @L3A         
         AGO   .ALCGID                                             @L3A         
.ALLUAER ANOP                                                      @L3A         
         IST6MCER 5,LUAFFIN,&LUAFFIN                               @L3A         
.ALCGID  ANOP                                                                   
         AIF   ('&CGID' EQ '').ALVECT                         @KFA @L1C         
         IST6MCUA KW=CGID,KWVAL=&CGID,                                 X        
               LOC=RPL6CGID-ISTRPL6X,BASEREG=14                                 
.*                                           PUT CGID IN APPC AREA              
.ALVECT  ANOP                          ENSURE BOTH PARMS ARE CODED @L1A         
.*                                     OR BOTH ARE NOT CODED       @L1A         
         AIF   (('&VTRINA' EQ '') AND ('&VTRINL' EQ '')).ALVOUT    @D1C         
         AIF   (('&VTRINA' EQ '') OR ('&VTRINL' EQ '')).ALERVI     @D1C         
         IST6MCUA KWVAL=&VTRINA,LOC=RPL6VAIA-ISTRPL6X,BASEREG=14,      X        
               KW=VTAM_TO_APPL_VECTOR_ADDRESS                      @D1C         
.*                                     STORE VECTOR AREA INPUT ADDRESS          
.*                                                                 @L1A         
         IST6MCUA KWVAL=&VTRINL,LOC=RPL6VAIL-ISTRPL6X,BASEREG=14,      X        
               KW=VTAM_TO_APPL_VECTOR_LENGTH,LEN=2                 @D1C         
.*                                     STORE VECTOR AREA INPUT LENGTH           
.*                                                                 @L1A         
         AGO   .ALVOUT                                             @D1C         
.ALERVI  ANOP                                                      @L1A         
         IST6MCER 13,VTRINA,VTRINL     ONLY ONE PARM CODED         @D1C         
.ALVOUT  ANOP                          ENSURE BOTH PARMS ARE CODED              
.*                                     OR BOTH ARE NOT CODED       @D1A         
         AIF   (('&VTROUTA' EQ '') AND ('&VTROUTL' EQ '')).ALQFY   @D1A         
         AIF   (('&VTROUTA' EQ '') OR ('&VTROUTL' EQ '')).ALERVO   @D1A         
         IST6MCUA KWVAL=&VTROUTA,KW=APPL_TO_VTAM_VECTOR_ADDRESS,       X        
               LOC=RPL6VAOA-ISTRPL6X,BASEREG=14                    @D1A         
.*                                     PUT VECTOR AREA INPUT ADDRESS            
.*                                     IN APPC AREA                @D1A         
         IST6MCUA KWVAL=&VTROUTL,KW=APPL_TO_VTAM_VECTOR_LENGTH,LEN=2,  X        
               LOC=RPL6VAOL-ISTRPL6X,BASEREG=14                    @D1A         
.*                                     PUT VECTOR AREA INPUT LENGTH             
.*                                     IN APPC AREA                @D1A         
         AGO   .ALQFY                                                           
.ALERVO  ANOP                                                      @D1A         
         IST6MCER 13,VTROUTA,VTROUTL   ONLY ONE PARM CODED         @D1A         
.ALQFY   ANOP                                                                   
         AIF   ('&QUALIFY' EQ '').ALREQ                                         
         AIF   ('&QUALIFY' NE 'ALLOCD').ALQFY1                                  
         AIF   (NOT &ISTGEN).ALEXIT                                             
         MVI   RPL6QUAL-ISTRPL6X(14),RPL6ALCD SET QUALIFY TO ALLOCD             
         AGO   .ALREQ1                                                          
.ALQFY1  ANOP                                                                   
         AIF   ('&QUALIFY' NE 'IMMED').ALQFY2                                   
         AIF   (NOT &ISTGEN).ALEXIT                                             
         MVI   RPL6QUAL-ISTRPL6X(14),RPL6IMED SET QUALIFY TO IMMED              
         AGO   .ALREQ1                                                          
.ALQFY2  ANOP                                                                   
         AIF   ('&QUALIFY' NE 'CONWIN').ALQFY3                                  
         AIF   (NOT &ISTGEN).ALEXIT                                             
         MVI   RPL6QUAL-ISTRPL6X(14),RPL6CWIN SET QUALIFY TO CONWIN             
         AGO   .ALREQ1                                                          
.ALQFY3  ANOP                                                                   
         AIF   ('&QUALIFY' NE 'CONVGRP').ALQFY4                    @KFA         
         AIF   (NOT &ISTGEN).ALEXIT                                             
         MVI   RPL6QUAL-ISTRPL6X(14),RPL6CNGP SET QUALIFY TO CONVGRP            
         AGO   .ALREQ1                                                          
.ALQFY4  ANOP                                                                   
         AIF   ('&QUALIFY' NE 'WHENFREE').ALQFY5                   @KHA         
         AIF   (NOT &ISTGEN).ALEXIT                                @KHA         
         MVI   RPL6QUAL-ISTRPL6X(14),RPL6SESF                      @KHA         
*                                    SET QUALIFY TO WHENFREE       @KHA         
         AGO   .ALREQ1                                             @KHA         
.ALQFY5  ANOP                                                      @KHA         
         IST6MCER 5,QUALIFY,&QUALIFY                                            
.ALREQ   ANOP                                                                   
         AIF   (NOT &ISTGEN).ALEXIT                                             
.ALREQ1  MVI   RPL6REQ-ISTRPL6X(14),RPL6ALLC                                    
*                                   PUT ALLOC REQUEST CODE IN APPC AREA         
.ALEXIT  MEND                                                                   
