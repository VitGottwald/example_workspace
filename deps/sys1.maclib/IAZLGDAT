*        %GOTO LGDATPLX;          /* Bilingual Mapping Macro            00010000
         MACRO -- IAZLGDAT EVENTLOG data service Macro                  00020000
&LABEL   IAZLGDAT &TYPE=,          Record type                         C00030000
               &SUBTYPE=,          Record subtype                      C00040000
               &LEVEL=,            Level of record to process          C00050000
               &DATA=,             Area for storing log data           C00060000
               &DATALEN=,          Length of log data                  C00070000
               &WORKAREA=,         Optional work area                  C00080000
               &WORKALEN=,         Optional work area length           C00090000
               &MF=,                                                   C00100000
               &DSECT=                                                  00110000
         AGO   .SKIPPREF                                                00120000
*          */                                                           00130000
*  %LGDATPLX: ;                                                   /* */ 00140000
*/**** START OF SPECIFICATIONS *******************************          00150000
.SKIPPREF ANOP                                                          00160000
.****** START OF SPECIFICATIONS **************************************  00170000
.****PROPRIETARY-STATEMENT********************************************  00180000
.*01* PROPRIETARY STATEMENT:                                         *  00190000
.*                                                                   *  00200000
.*   LICENSED MATERIALS-PROPERTY OF IBM                              *  00210000
.*   5650-ZOS Copyright IBM Corp. 2015                               *  00220000
.*                                                                   *  00230000
.*   STATUS:  HBB77A0                                                *  00240000
.*                                                                   *  00250000
.****END-OF-PROPRIETARY-STATEMENT*************************************  00260000
.*                                                           *          00270000
.*01* DESCRIPTIVE NAME: Invoke EVENTLOG data service IAZLGDT *          00280000
.*                                                           *          00290000
.*01* FUNCTION:                                              *          00300000
.*                                                           *          00310000
.*       The IAZLGDAT macro sets up the parameters necessary *          00320000
.*       to invoke the EVENTLOG data service. The macro      *          00330000
.*       provides the expansion of the parameter list DSECT  *          00340000
.*       LGDTPLST and the code used to fill in the parameter *          00350000
.*       list.                                               *          00360000
.*                                                           *          00370000
.*01* EXTERNAL CLASSIFICATION:  PSPI                         *          00380000
.*01* END OF EXTERNAL CLASSIFICATION:                        *          00390000
.*                                                                   *  00400000
.*01* COMPONENT ID:  JES Common (SC141)                              *  00410000
.*                                                           *          00420000
.*01* PARAMETERS:                                            *          00430000
.*                                                           *          00440000
.*       TYPE=            Type of log record to process.     *          00450000
.*                        Valid values are:                  *          00460000
.*                          SMF      - SMF record            *          00470000
.*                          STEPDATA - Step completion code  *          00480000
.*                                       record              *          00490000
.*                          RESTART  - Job restart record    *          00500000
.*                          TRACE    - Trace record          *          00510000
.*                          USER     - User record           *          00520000
.*                        This is a required parameter.      *          00530000
.*                                                           *          00540000
.*       SUBTYPE=         Subtype of record to process,      *          00550000
.*                        defined by components writing      *          00560000
.*                        records to EVENTLOG. This is a     *          00570000
.*                        1 byte hexadecimal value.          *          00580000
.*                        This is an optional parameter.     *          00590000
.*                        If it is not specified it will     *          00600000
.*                        be defaulted to null.              *          00610000
.*                                                           *          00620000
.*       LEVEL=           The level of log data being        *          00630000
.*                        written. This optional parameter   *          00640000
.*                        is used for documentation only.    *          00650000
.*                        It defaults to REQUIRED.           *          00660000
.*                                                           *          00670000
.*                        Valid values are:                  *          00680000
.*                          REQUIRED - This is a REQUIRED    *          00690000
.*                                     record                *          00700000
.*                          STANDARD - This is a STANDARD    *          00710000
.*                                     record                *          00720000
.*                          VERBOSE  - This is a VERBOSE     *          00730000
.*                                     record                *          00740000
.*                                                           *          00750000
.*       DATA=            Address of the area where the log  *          00760000
.*                        data is stored.                    *          00770000
.*                        This is a required parameter.      *          00780000
.*                                                           *          00790000
.*       DATALEN=         Length of the area represented by  *          00800000
.*                        the DATA parameter.                *          00810000
.*                        This is an optional parameter. If  *          00820000
.*                        it is not specified it will be     *          00830000
.*                        defaulted to the length of the     *          00840000
.*                        DATA parameter field.              *          00850000
.*                        The maximum length allowed by the  *          00860000
.*                        service is 32752 bytes. Data       *          00870000
.*                        greater than 32752 bytes will be   *          00880000
.*                        truncated.                         *          00890000
.*                                                           *          00900000
.*       WORKAREA=        Address of work area the EVENTLOG  *          00910000
.*                        data service can use for its       *          00920000
.*                        processing.                        *          00930000
.*                        This is an optional parameter. If  *          00940000
.*                        WORKAREA is not specified the      *          00950000
.*                        service will allocate storage for  *          00960000
.*                        its internal processing.           *          00970000
.*                        If WORKAREA is provided, ensure    *          00980000
.*                        that it is long enough to contain  *          00990000
.*                        a copy of the data being written   *          01000000
.*                        plus 512 bytes. If the provided    *          01010000
.*                        work area is too small to contain  *          01020000
.*                        a copy of the data being written   *          01030000
.*                        in addition to needed work areas,  *          01040000
.*                        then an error will be returned in  *          01050000
.*                        the parameter list field LGDRETCD  *          01060000
.*                        and R15 will be set to LGDRERR.    *          01070000
.*                        When WORKAREA is provided the      *          01080000
.*                        parameter list field LGDREQSZ      *          01090000
.*                        returns the size required.         *          01100000
.*                                                           *          01110000
.*       WORKALEN=        Length of the optional WORKAREA    *          01120000
.*                        provided.                          *          01130000
.*                        This is an optional parameter. If  *          01140000
.*                        WORKAREA is provided and WORKALEN  *          01150000
.*                        is not, the value of WORKALEN will *          01160000
.*                        default to the length of the       *          01170000
.*                        WORKAREA parameter field.          *          01180000
.*                                                           *          01190000
.*       RETCODE=         PL/X-only keyword indicating where *          01200000
.*                        to place the return code.          *          01210000
.*                        This is an optional parameter.     *          01220000
.*                                                           *          01230000
.*       MF=              Indicator for macro execution:     *          01240000
.*                          L - allocate storage for LGDTPLST*          01250000
.*                          E - generate call to IAZLGDT     *          01260000
.*                                                           *          01270000
.*       DSECT=           Indicate if the LGDTPLST DSECT     *          01280000
.*                        should be generated. Valid values  *          01290000
.*                        are:                               *          01300000
.*                          YES - generate the DSECT         *          01310000
.*                          No  - do not generate the DSECT  *          01320000
.*                                                           *          01330000
.*                        Default is NO. This keyword should *          01340000
.*                        be used by itself.                 *          01350000
.*                                                           *          01360000
.*01* SYNTAX:                                                *          01370000
.*                                                           *          01380000
.*02*  ASM:                                                  *          01390000
.*                                                           *          01400000
.*         IAZLGDAT DSECT=YES                                *          01410000
.*                                                           *          01420000
.*XXXXXXXX IAZLGDAT MF=L                                     *          01430000
.*                                                           *          01440000
.*         IAZLGDAT TYPE=,                                   *          01450000
.*               SUBTYPE=,                                   *          01460000
.*               LEVEL=,                                     *          01470000
.*               DATA=,                                      *          01480000
.*               DATALEN=,                                   *          01490000
.*               WORKAREA=,                                  *          01500000
.*               WORKALEN=,                                  *          01510000
.*               MF=(E,xxxxxxxx)                             *          01520000
.*                                                           *          01530000
.*        Invocation return code is in register 15.          *          01540000
.*                                                           *          01550000
.*02*  PL/X:                                                 *          01560000
.*                                                           *          01570000
.*      %DCL LGDP_ATRB CHAR                                  *          01580000
.*      %LGDP_ATRB = 'value'                                 *          01590000
.*      %INCLUDE SYSLIB(IAZLGDDF);                           *          01600000
.*      DCL CVTPTR PTR.                                      *          01610000
.*      %INCLUDE SYSLIB(CVT);                                *          01620000
.*      %INCLUDE SYSLIB(IEFJESCT);                           *          01630000
.*      %INCLUDE SYSLIB(IAZFSIB);                            *          01640000
.*                                                           *          01650000
.*      ?IAZLGDAT MF(L,xxxxxxxx);                            *          01660000
.*                                                           *          01670000
.*      ?IAZLGDAT TYPE()                                     *          01680000
.*                SUBTYPE()                                  *          01690000
.*                LEVEL()                                    *          01700000
.*                DATA()                                     *          01710000
.*                DATALEN()                                  *          01720000
.*                WORKAREA()                                 *          01730000
.*                WORKALEN()                                 *          01740000
.*                RETCODE()                                  *          01750000
.*                MF(E,xxxxxxxx);                            *          01760000
.*                                                           *          01770000
.*                                                           *          01780000
.*        Note the required includes.                        *          01790000
.*        Invocation return code is in register 15, and in   *          01800000
.*          parameter RETCODE, if supplied.                  *          01810000
.*                                                           *          01820000
.*                                                           *          01830000
.*                                                           *          01840000
.*                                                           *          01850000
.*01*  REGISTER USAGE (ENTRY/EXIT):                          *          01860000
.*                                                           *          01870000
.*     REG       VALUE ON ENTRY       VALUE ON EXIT          *          01880000
.*               TO MACRO             FROM MACRO             *          01890000
.*                                                           *          01900000
.*     R0        n/a                  destroyed              *          01910000
.*    AR0        n/a                  destroyed              *          01920000
.*     R1        addr LGDTPLST parms  destroyed              *          01930000
.*    AR1        n/a                  destroyed              *          01940000
.*     R2-R12    n/a                  unchanged              *          01950000
.*     R13       Save area address    unchanged              *          01960000
.*                (F4SA format, 144 bytes)                   *          01970000
.*     R14       n/a                  destroyed              *          01980000
.*     R15       n/a                  return code            *          01990000
.*    AR15       n/a                  destroyed              *          02000000
.*                                                           *          02010000
.*                                                           *          02020000
.*01*  RETURN CODES (R15 ON EXIT):                           *          02030000
.*                                                           *          02040000
.*        0  -  Processing completed successfully            *          02050000
.*              (No errors).                                 *          02060000
.*        4  -  Record not written.                          *          02070000
.*        8  -  No storage available for work area           *          02080000
.*       12  -  Bad record level requested                   *          02090000
.*       16  -  Parameter list address or length zeros       *          02100000
.*       20  -  Request not processed due to error. Check    *          02110000
.*                field LGDRETCD for further information.    *          02120000
.*                                                           *          02130000
.*01*  ENVIRONMENT:                                          *          02140000
.*                                                           *          02150000
.*       User environment. No serialization provided.        *          02160000
.*                                                           *          02170000
.*       IAZLGDAT service should be called in primary access *          02180000
.*       mode, in 31 or 64 bit addressing mode               *          02190000
.*                                                           *          02200000
.*       Minimum authorization:                              *          02210000
.*                 Problem or Supervisor state. Any PSW key. *          02220000
.*                                                           *          02230000
.*       Dispatchable unit mode:                             *          02240000
.*                 Task mode                                 *          02250000
.*                                                           *          02260000
.*       Cross Memory Mode: PASN=HASN=SASN.                  *          02270000
.*                                                           *          02280000
.*       AMODE:    31 or 64 bit.                             *          02290000
.*                                                           *          02300000
.*       ASC mode: Primary.                                  *          02310000
.*                                                           *          02320000
.*       Locks:    No locks held.                            *          02330000
.*                                                           *          02340000
.*                                                           *          02350000
.*                                                           *          02360000
.*01*  NOTE:                                                 *          02370000
.*                                                           *          02380000
.*     - If IAZLGDAT is invoked while holding the local      *          02390000
.*       lock the request will be rejected                   *          02400000
.*     - If IAZLGDAT is invoked while an EUT FRR is active   *          02410000
.*       the request will be rejected                        *          02420000
.*                                                           *          02430000
.****** END OF SPECIFICATIONS ****************************************  02440000
.*                                                                      02450000
.********************************************************************** 02460000
.* CHANGE ACTIVITY:                                                   * 02470000
.*                                                                    * 02480000
.* $Z22LEVT=EVENTLOG HBB77A0 140410 BWT:  EVENTLOG data set support p * 02490000
.*                                                                    * 02500000
.* A000000-999999    Created for JES2 z/OS Release 2.2         @Z22LEVT 02510000
.********************************************************************** 02520000
.*                                                                      02530000
.*-----------------------------------------------------------*          02540000
.*       Generate DSECT if &DSECT=YES                        *          02550000
.*-----------------------------------------------------------*          02560000
         AIF   ('&DSECT' EQ 'YES').DSECT                                02570000
         AIF   ('&DSECT' EQ 'NO' OR '&DSECT' EQ '').NODSECT             02580000
         MNOTE 8,'IAZLGDAT - DSECT=&DSECT is invalid, must be YES or NOC02590000
               '                                                        02600000
.DSECT   ANOP                                                           02610000
         IAZLGDDF DSECT=YES                                             02620000
         AGO   .ENDOFMF                                                 02630000
.NODSECT ANOP                                                           02640000
         AIF   ('&DSECT' EQ '').NOTMFEQD                                02650000
         IAZLGDDF DSECT=NO                                              02660000
         AGO   .ENDOFMF                                                 02670000
.*                                                                      02680000
.NOTMFEQD ANOP                                                          02690000
.*                                                                      02700000
.*----------------------------------------------------------*           02710000
.*       Define global environment variables and set them   *           02720000
.*----------------------------------------------------------*           02730000
         GBLC  &SYSASCE,&SYSAM64                                        02740000
         SYSSTATE TEST                                                  02750000
.*                                                                      02760000
.*----------------------------------------------------------*           02770000
.*       Generate storage declaration if MF=L               *           02780000
.*----------------------------------------------------------*           02790000
.MFNOTEQD ANOP                                                          02800000
         LCLC  &STOR                                                    02810000
         AIF   ('&MF(1)' NE 'L').MFNOTEQL                               02820000
&STOR    SETC  '&MF(2)'                                                 02830000
&LABEL   DS    0D                                                       02840000
&STOR    DS    CL(LGDTPLN)                                              02850000
         AGO   .ENDOFMF                                                 02860000
.*----------------------------------------------------------*           02870000
.*       Generate calling sequence if MF=E                  *           02880000
.*                                                          *           02890000
.*       Note that we cannot assume register equates are    *           02900000
.*       defined so use BCP register notation (15 vs R15).  *           02910000
.*----------------------------------------------------------*           02920000
.MFNOTEQL ANOP                                                          02930000
         AIF   ('&MF(1)' NE 'E').MFNOTEQE                               02940000
.*                                                                      02950000
         PUSH  USING                                                    02960000
         USING LGDTPLST,1          Est LGDTPLST addressability          02970000
         SPACE 1                                                        02980000
         AIF   ('&SYSASCE' NE 'AR').PLISTP                              02990000
&LABEL   LAE   1,&MF(2)            Load parm list address               03000000
         AGO   .PLISTOK                                                 03010000
.*                                                                      03020000
.PLISTP  ANOP                                                           03030000
&LABEL   LA    1,&MF(2)            Load parm list address               03040000
.PLISTOK ANOP                                                           03050000
         XC    LGDTPLST(LGDTPLN),LGDTPLST  Clear parameter list         03060000
         LARL  15,=CL8'LGDTPLST'   Get address of eyecatcher            03070000
         MVC   LGDEYE,0(15)        Set eyecatcher                       03080000
         LHI   15,LGDTPLN          Load parm list length                03090000
         ST    15,LGDLEN             and store in the plist             03100000
.*                                                                      03110000
.*----------------------------------------------------------*           03120000
.*       Process FUNCTION parameter                         *           03130000
.*----------------------------------------------------------*           03140000
.*                                                                      03150000
         MVI   LGDFUNC,LGDWRITE    Ind function is WRITE                03160000
.*                                                                      03170000
.*----------------------------------------------------------*           03180000
.*       Process TYPE parameter                             *           03190000
.*----------------------------------------------------------*           03200000
.*                                                                      03210000
         AIF   ('&TYPE' NE '').LGDTYOK                                  03220000
         MNOTE 8,'ERROR: Keyword TYPE must be specified'                03230000
         AGO   .ENDMAC                                                  03240000
.LGDTYOK ANOP                                                           03250000
         AIF   ('&TYPE' EQ 'SMF').LGDSMF                                03260000
         AIF   ('&TYPE' EQ 'STEPDATA').LGDSTEP                          03270000
         AIF   ('&TYPE' EQ 'RESTART').LGDRST                            03280000
         AIF   ('&TYPE' EQ 'TRACE').LGDTRC                              03290000
         AIF   ('&TYPE' EQ 'USER').LGDUSER                              03300000
         MNOTE 8,'ERROR: Keyword TYPE is an invalid value'              03310000
         AGO   .ENDMAC                                                  03320000
.LGDSMF  ANOP                                                           03330000
         MVI   LGDRTYPT,LGDTSMF    SMF record type                      03340000
         AGO   .TYPEOK                                                  03350000
.LGDSTEP ANOP                                                           03360000
         MVI   LGDRTYPT,LGDTSTEP   STEP Comp code rec type              03370000
         AGO   .TYPEOK                                                  03380000
.LGDRST  ANOP                                                           03390000
         MVI   LGDRTYPT,LGDTRST    Job Restart record type              03400000
         AGO   .TYPEOK                                                  03410000
.LGDTRC  ANOP                                                           03420000
         MVI   LGDRTYPT,LGDTTRC    Trace record type                    03430000
         AGO   .TYPEOK                                                  03440000
.LGDUSER ANOP                                                           03450000
         MVI   LGDRTYPT,LGDTUSER   User record type                     03460000
.TYPEOK  ANOP                                                           03470000
.*                                                                      03480000
.*----------------------------------------------------------*           03490000
.*       Process SUBTYPE parameter                          *           03500000
.*----------------------------------------------------------*           03510000
.*                                                                      03520000
         AIF   ('&SUBTYPE' EQ '').STYPOK                                03530000
         MVI   LGDRTYPS,&SUBTYPE   Set record subtype                   03540000
.STYPOK  ANOP                                                           03550000
.*                                                                      03560000
.*----------------------------------------------------------*           03570000
.*       Process LEVEL parameter                            *           03580000
.*----------------------------------------------------------*           03590000
.*                                                                      03600000
         AIF   ('&LEVEL' EQ '').LEVELOK                                 03610000
         AIF   ('&LEVEL' EQ  'REQUIRED').LEVELOK                        03620000
         AIF   ('&LEVEL' EQ  'STANDARD').LGDSTND                        03630000
         AIF   ('&LEVEL' EQ  'VERBOSE').LGDVERB                         03640000
         MNOTE 8,'ERROR: Keyword LEVEL must be REQUIRED, STANDARD, or VC03650000
               ERBOSE'                                                  03660000
         AGO   .ENDMAC                                                  03670000
.LGDSTND ANOP                                                           03680000
         OI    LGDLEVEL,LGDLSTND   Ind STANDARD level data              03690000
         AGO   .LEVELOK                                                 03700000
.LGDVERB ANOP                                                           03710000
         OI    LGDLEVEL,LGDLVERB   Ind VERBOSE level data               03720000
.LEVELOK ANOP                                                           03730000
.*                                                                      03740000
.*----------------------------------------------------------*           03750000
.*       Process DATA parameter                             *           03760000
.*----------------------------------------------------------*           03770000
         AIF   ('&DATA' NE '').LGDATOK                                  03780000
         MNOTE 8,'ERROR: Keyword DATA must be specified'                03790000
         AGO   .ENDMAC                                                  03800000
.LGDATOK ANOP                                                           03810000
         AIF   ('&DATA'(1,1) EQ '(').DATARG                             03820000
         AIF   ('&SYSASCE' NE 'AR').DATAP                               03830000
         LAE   15,&DATA            Load log data address                03840000
         AGO   .DATAST                                                  03850000
.DATAP   LA    15,&DATA            Load log data address                03860000
.DATAST  AIF   ('&SYSAM64' NE 'YES').DT32                               03870000
         STG   15,LGDDATAP           and store in plist                 03880000
         AGO   .DATADN                                                  03890000
.DT32    ST    15,LGDDATA4           and store in plist                 03900000
         AGO   .DATADN                                                  03910000
.*                                                                      03920000
.DATARG ANOP                                                            03930000
         AIF   ('&SYSAM64' NE 'YES').DTR32                              03940000
         STG   &DATA(1),LGDDATAP   Store output area address            03950000
         AGO   .DATADN                                                  03960000
.DTR32   ST    &DATA(1),LGDDATA4   Store output area addr               03970000
.DATADN ANOP                                                            03980000
.*                                                                      03990000
.*----------------------------------------------------------*           04000000
.*       Process DATALEN parameter                          *           04010000
.*----------------------------------------------------------*           04020000
         AIF   ('&DATALEN' NE '').DATALOK                               04030000
         AIF   ('&DATA'(1,1) NE '(').DATALDF                            04040000
         MNOTE 8,'ERROR: Keyword DATALEN must be specified if DATA=(Rx)C04050000
                '                                                       04060000
         AGO   .ENDMAC                                                  04070000
.DATALDF AIF   ('&SYSAM64' NE 'YES').DTL32DF                            04080000
         LGHI  15,L'&DATA          Load log data area len               04090000
         AGO   .DATALST                                                 04100000
.DTL32DF LHI   15,L'&DATA          Load log data area len               04110000
         AGO   .DATALST                                                 04120000
.DATALOK ANOP                                                           04130000
         AIF   ('&DATALEN'(1,1) EQ '(').DATALRG                         04140000
         AIF   ('&SYSAM64' NE 'YES').DLN32DF                            04150000
         LGHI  15,&DATALEN         Load log data area len               04160000
         AGO   .DATALST                                                 04170000
.DLN32DF LHI   15,&DATALEN         Load log data area len               04180000
.DATALST ST    15,LGDDLEN          Set log data area len                04190000
         AGO   .DATALDN                                                 04200000
.*                                                                      04210000
.DATALRG ANOP                                                           04220000
         ST    &DATALEN(1),LGDDLEN  Store log data area len             04230000
.DATALDN ANOP                                                           04240000
.*                                                                      04250000
.*----------------------------------------------------------*           04260000
.*       Process WORKAREA parameter                         *           04270000
.*----------------------------------------------------------*           04280000
         AIF   ('&WORKAREA' EQ '').WORKOK                               04290000
         AIF   ('&WORKAREA'(1,1) EQ '(').WORKRG                         04300000
         AIF   ('&SYSASCE' NE 'AR').WORKP                               04310000
         LAE   15,&WORKAREA        Load work area address               04320000
         AGO   .WORKST                                                  04330000
.WORKP   LA    15,&WORKAREA        Load work area address               04340000
.WORKST  AIF   ('&SYSAM64' NE 'YES').WA32                               04350000
         STG   15,LGDWORKP           and store in plist                 04360000
         AGO   .WORKOK                                                  04370000
.WA32    ST    15,LGDWORK4           and store in plist                 04380000
         AGO   .WORKOK                                                  04390000
.*                                                                      04400000
.WORKRG ANOP                                                            04410000
         AIF   ('&SYSAM64' NE 'YES').WAR32                              04420000
         STG   &WORKAREA(1),LGDWORKP  Store output area addr            04430000
         AGO   .WORKOK                                                  04440000
.WAR32   ST    &WORKAREA(1),LGDWORK4  Store output area addr            04450000
.WORKOK ANOP                                                            04460000
.*                                                                      04470000
.*----------------------------------------------------------*           04480000
.*       Process WORKALEN parameter                         *           04490000
.*----------------------------------------------------------*           04500000
         AIF   ('&WORKAREA' EQ '').WORKLDN                              04510000
         AIF   ('&WORKALEN' NE '').WORKLOK                              04520000
         AIF   ('&WORKAREA'(1,1) NE '(').WORKLDF                        04530000
         MNOTE 8,'ERROR: Keyword WORKALEN must be specified if WORKAREAC04540000
               =(Rx) '                                                  04550000
         AGO   .ENDMAC                                                  04560000
.WORKLDF AIF   ('&SYSAM64' NE 'YES').WKL32DF                            04570000
         LGHI  15,L'&WORKAREA      Load work area length                04580000
         AGO   .WORKLST                                                 04590000
.WKL32DF LHI   15,L'&WORKAREA      Load work area length                04600000
         AGO   .WORKLST                                                 04610000
.WORKLOK ANOP                                                           04620000
         AIF   ('&WORKALEN'(1,1) EQ '(').WORKLRG                        04630000
         AIF   ('&SYSAM64' NE 'YES').WLN32DF                            04640000
         LGHI  15,&WORKALEN        Load work area length                04650000
         AGO   .WORKLST                                                 04660000
.WLN32DF LHI   15,&WORKALEN        Load work area length                04670000
.WORKLST ST    15,LGDWALEN         Set work area length                 04680000
         AGO   .WORKLDN                                                 04690000
.*                                                                      04700000
.WORKLRG ANOP                                                           04710000
         ST    &WORKALEN(1),LGDWALEN  Store work area length            04720000
.WORKLDN ANOP                                                           04730000
.*                                                                      04740000
.*----------------------------------------------------------*           04750000
.*       Set up branch to IAZLGDT service. Locate its       *           04760000
.*       address going from the CVT to the JESCT, to the    *           04770000
.*       FSIB and pull the entry point address from field   *           04780000
.*       FSIBLGDT.                                          *           04790000
.*----------------------------------------------------------*           04800000
         SPACE 1                                                        04810000
         AIF   ('&SYSAM64' NE 'YES').SETU32                             04820000
         LLGT  15,16(15)           Get CVT address                      04830000
         LLGT  15,296(15)          Get JESCT address                    04840000
         LLGT  15,100(15)          Get JESCT extension addr             04850000
         LLGT  15,100(15)          Get IAZBASE cb addr (FSIB)           04860000
         LLGT  15,24(15)           Get IAZLGDT addr from FSIB           04870000
         AGO   .DOBASR                                                  04880000
.SETU32  ANOP                                                           04890000
         L     15,16(,0)           Get CVT address                      04900000
         L     15,296(15)          Get JESCT address                    04910000
         L     15,100(15)          Get JESCT extension addr             04920000
         L     15,100(15)          Get IAZBASE cb addr (FSIB)           04930000
         L     15,24(15)           Get IAZLGDT addr from FSIB           04940000
.*                                                                      04950000
.DOBASR  ANOP                                                           04960000
         BASR  14,15               Call EVENTLOG data service           04970000
         SPACE 1                                                        04980000
         POP   USING                                                    04990000
         AGO   .ENDMAC                                                  05000000
.*--------------------------------------------------------------------* 05010000
.*       Generate an error message when MF is not L or E              * 05020000
.*--------------------------------------------------------------------* 05030000
.MFNOTEQE ANOP                                                          05040000
         MNOTE 8,'ERROR: Keyword MF must be L or E'                     05050000
.ENDOFMF ANOP                                                           05060000
.ENDMAC  ANOP                                                           05070000
         MEND                                                           05080000
.*                                                                      05090000
**/                                                                     05100000
* %IAZLGDAT: /* PL/S VERSION OF IAZLGDAT MACRO                       */ 05110000
*/********************************************************************/ 05120000
*  MACRO                                                                05130000
*    KEYS(TYPE,                    /* Record type                    */ 05140000
*        SUBTYPE,                  /* Record subtype                 */ 05150000
*        LEVEL,                    /* Level of record to process     */ 05160000
*        DATA,                     /* Area for storing log data      */ 05170000
*        DATALEN,                  /* Length of log data             */ 05180000
*        WORKAREA,                 /* Optional work area             */ 05190000
*        WORKALEN,                 /* Optional owrk area length      */ 05200000
*        RETCODE,                  /* Return code                    */ 05210000
*        MF);                      /* Macro mapping function         */ 05220000
*        ANS('?'!!MACLABEL!!'IAZLGDTP '!!MACLIST!!MACKEYS!!';');        05230000
*% END;                                                                 99999999
