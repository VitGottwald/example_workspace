*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IOSFBA                                -04/28/17-<1> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  IOS Fixed Block Architecture Services         * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 2013, 2015                         * 00001200
*                                                                     * 00001300
* STATUS= HBB77A0                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      IOSFBA is used to manage (allocate, unallocate) and perform    * 00002100
*      I/O to (read, write) allocated fixed block architecture (FBA)  * 00002200
*      devices.                                                       * 00002300
*                                                                     * 00002400
*      IOSFBA has the following functions:                            * 00002500
*                                                                     * 00002600
*                                                                     * 00002700
*      o   ALLOCATE                                                   * 00002800
*                                                                     * 00002900
*          Allocate one or more FBA devices that can be used with the * 00003000
*          READ or WRITE IOSFBA service.                              * 00003100
*                                                                     * 00003200
*      o   QUERY                                                      * 00003300
*                                                                     * 00003400
*          Provide information about the requested devices.  The      * 00003500
*          caller provides a list of device numbers for which the     * 00003600
*          service returns device attributes.                         * 00003700
*                                                                     * 00003800
*      o   READ                                                       * 00003900
*                                                                     * 00004000
*          Initiate read operations for one or more devices as        * 00004100
*          described in the supplied device I/O list.                 * 00004200
*                                                                     * 00004300
*      o   WRITE                                                      * 00004400
*                                                                     * 00004500
*          Initiate write operations for one or more devices as       * 00004600
*          described in the supplied device I/O list.                 * 00004700
*                                                                     * 00004800
*      o   ERASE                                                      * 00004900
*                                                                     * 00005000
*          Initiate erase operations for a contiguous area for one or * 00005100
*          more devices as described in the supplied device I/O list. * 00005200
*                                                                     * 00005300
*      o   CLEANUP                                                    * 00005400
*                                                                     * 00005500
*          Clean up resources associated with an I/O Token.           * 00005600
*                                                                     * 00005700
*      o   UNALLOCATE                                                 * 00005800
*                                                                     * 00005900
*          Unallocate one or more FBA devices that were previously    * 00006000
*          allocated with this service.                               * 00006100
*                                                                     * 00006200
*                                                                     * 00006300
*                                                                     * 00006400
*      NOTE:  Mapping macros for IOS Fixed Block Architecture         * 00006500
*      Services are contained in IOSDFBA.                             * 00006600
*                                                                     * 00006700
*01* EXTERNAL CLASSIFICATION:  PI                                     * 00006800
*                                                                     * 00006900
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00007000
*                                                                     * 00007100
*01* ENVIRONMENT:                                                     * 00007200
*                                                                     * 00007300
*                                                                     * 00007400
*      Dispatchable unit mode: Task mode.                             * 00007500
*                                                                     * 00007600
*      Minimum authorization: Supervisor state, PSW Key 0.            * 00007700
*                                                                     * 00007800
*      AMODE:            31- or 64-bit.                               * 00007900
*                                                                     * 00008000
*      ASC mode:         Primary.                                     * 00008100
*                                                                     * 00008200
*      Cross Memory Mode: PASN=HASN=SASN.                             * 00008300
*                                                                     * 00008400
*      Interrupt status: Enabled for I/O and external interrupts.     * 00008500
*                                                                     * 00008600
*      Locks:            No locks held.                               * 00008700
*                                                                     * 00008800
*                                                                     * 00008900
*                                                                     * 00009000
*01* PROGRAMMING REQUIREMENTS:                                        * 00009100
*                                                                     * 00009200
*    None                                                             * 00009300
*                                                                     * 00009400
*01* RESTRICTIONS:                                                    * 00009500
*                                                                     * 00009600
*    The invoker must have SAF authorization to facility 'IOSFBA'.    * 00009700
*    Specifically, the invoker must have UPDATE authority to facility * 00009800
*    class 'IOSFBA'.                                                  * 00009900
*                                                                     * 00010000
*01* PERFORMANCE IMPLICATIONS:                                        * 00010100
*                                                                     * 00010200
*    None.                                                            * 00010300
*                                                                     * 00010400
*01* MACRO USAGE NOTES:                                               * 00010500
*                                                                     * 00010600
*                                                                     * 00010700
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00010800
*        global macro variable.  Any value other than 'NO' will       * 00010900
*        result in the macro expansion being printed.  The default is * 00011000
*        'YES'.  The following examples illustrate how the ZPRINT     * 00011100
*        variable should be set.                                      * 00011200
*                                                                     * 00011300
*                    GBLC &ZPRINT                                     * 00011400
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00011500
*                                                                     * 00011600
*                                                                     * 00011700
*    2.  All  keys currently contained in the IOSFBA macro correspond * 00011800
*        to  version 1.  If you specify PLISTVER, use a value of 1 or * 00011900
*        MAX.                                                         * 00012000
*                                                                     * 00012100
*                                                                     * 00012200
*                                                                     * 00012300
*                                                                     * 00012400
*01* INPUT REGISTER INFORMATION:                                      * 00012500
*                                                                     * 00012600
*    Before  issuing  the  IOSFBA  macro, the caller must ensure that * 00012700
*    general  register  13  contains  the  address  of a 72 byte (for * 00012800
*    AMODE(31)  callers)  or  216  byte  (for AMODE(64) callers) save * 00012900
*    area.   The save area must be in primary storage in the first 2G * 00013000
*    of  storage.   The caller does not have to place any information * 00013100
*    into any other general purpose register (GPR) unless using it in * 00013200
*    register  notation  for a particular parameter, or using it as a * 00013300
*    base register.                                                   * 00013400
*                                                                     * 00013500
*01* OUTPUT REGISTER INFORMATION:                                     * 00013600
*                                                                     * 00013700
*    The  contents  of  registers  14  through  1  are altered during * 00013800
*    processing.                                                      * 00013900
*                                                                     * 00014000
*    When control returns to the caller, the GPRs contain:            * 00014100
*                                                                     * 00014200
*                                                                     * 00014300
*    REGISTER  CONTENTS                                               * 00014400
*                                                                     * 00014500
*    0         Reason Code                                            * 00014600
*                                                                     * 00014700
*    1         Unpredictable (Used as a work register by the system)  * 00014800
*                                                                     * 00014900
*    2-13      Unchanged                                              * 00015000
*                                                                     * 00015100
*    14        Unpredictable (Used as a work register by the system)  * 00015200
*                                                                     * 00015300
*    15        Return Code                                            * 00015400
*                                                                     * 00015500
*                                                                     * 00015600
*                                                                     * 00015700
*01* SYNTAX:                                                          * 00015800
*                                                                     * 00015900
*Ýxlabel¨  IOSFBA  Ð  ALLOCATE                                        * 00016000
*                  !    Ý,ACCESS=»SINGLE!READ!WRITE!ANYº¨             * 00016100
*                  !   Ð ,DEVLISTPTR=xdevlistptr                      * 00016200
*                  !   ¿ ,DEVLISTPTR64=xdevlistptr64                  * 00016300
*                  !   Ð ,DEVDESCPTR=Ýxdevdescptr¨                    * 00016400
*                  !   ¿ ,DEVDESCPTR64=Ýxdevdescptr64¨                * 00016500
*                  !    Ý,DEVCOUNT=»xdevcount!1º¨                     * 00016600
*                  !    Ý,MINDEVCOUNT=»xmindevcount!0º¨               * 00016700
*                  Ô ,QUERY                                           * 00016800
*                  !   Ð ,DEVLISTPTR=xdevlistptr                      * 00016900
*                  !   ¿ ,DEVLISTPTR64=xdevlistptr64                  * 00017000
*                  !   Ð ,DEVDESCPTR=Ýxdevdescptr¨                    * 00017100
*                  !   ¿ ,DEVDESCPTR64=Ýxdevdescptr64¨                * 00017200
*                  Ô ,READ                                            * 00017300
*                  !   Ð ,DEVIOLISTPTR=xdeviolistptr                  * 00017400
*                  !   ¿ ,DEVIOLISTPTR64=xdeviolistptr64              * 00017500
*                  !    Ý,ECB=»xecb!NONEº¨                            * 00017600
*                  !    Ý,RESERVED¨                                   * 00017700
*                  !    Ý,IOTOKEN=»xiotoken!NONEº                     * 00017800
*                  !        Ý,REUSECP=»NO!YESº¨¨                      * 00017900
*                  Ô ,WRITE                                           * 00018000
*                  !   Ð ,DEVIOLISTPTR=xdeviolistptr                  * 00018100
*                  !   ¿ ,DEVIOLISTPTR64=xdeviolistptr64              * 00018200
*                  !    Ý,ECB=»xecb!NONEº¨                            * 00018300
*                  !    Ý,RESERVED¨                                   * 00018400
*                  !    Ý,IOTOKEN=»xiotoken!NONEº                     * 00018500
*                  !        Ý,REUSECP=»NO!YESº¨¨                      * 00018600
*                  Ô ,ERASE                                           * 00018700
*                  !   Ð ,DEVDESCPTR=xdevdescptr                      * 00018800
*                  !   ¿ ,DEVDESCPTR64=xdevdescptr64                  * 00018900
*                  Ô ,CLEANUP                                         * 00019000
*                  !     ,IOTOKEN=xiotoken                            * 00019100
*                  ¿ ,UNALLOCATE                                      * 00019200
*                      Ð ,DEVDESCPTR=xdevdescptr                      * 00019300
*                      ¿ ,DEVDESCPTR64=xdevdescptr64                  * 00019400
*                   Ý,RETCODE=xretcode¨                               * 00019500
*                   Ý,RSNCODE=xrsncode¨                               * 00019600
*                   Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨           * 00019700
*                  ÐÝ,MF=S¨                                           * 00019800
*                  ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                    * 00019900
*                  ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                      * 00020000
*                                                                     * 00020100
*                                                                     * 00020200
*      Where:                                                         * 00020300
*                                                                     * 00020400
*                                                                     * 00020500
*      Ýxlabel¨                                                       * 00020600
*          is an optional symbol, starting in column 1, that is the   * 00020700
*          name on the IOSFBA macro invocation.  The name must        * 00020800
*          conform to the rules for an ordinary assembler language    * 00020900
*          symbol.                                                    * 00021000
*          DEFAULT: No name.                                          * 00021100
*                                                                     * 00021200
*                                                                     * 00021300
*                                                                     * 00021400
*                                                                     * 00021500
*      The following is a set of mutually exclusive keys.  This set   * 00021600
*      is required; only one key must be specified.                   * 00021700
*                                                                     * 00021800
*                                                                     * 00021900
*      ALLOCATE                                                       * 00022000
*          Allocate the devices as specified in the device list       * 00022100
*          (FBADL DSECT in the IOSDFBA macro).  This request, if      * 00022200
*          successful, will allocate the the requested number of      * 00022300
*          devices within a sysplex for the caller's use.             * 00022400
*                                                                     * 00022500
*                                                                     * 00022600
*          ÝACCESS=»SINGLE!READ!WRITE!ANYº¨                           * 00022700
*              is an optional keyword input that indicates the type   * 00022800
*              of allocation that should be performed.                * 00022900
*              DEFAULT: SINGLE                                        * 00023000
*                                                                     * 00023100
*                                                                     * 00023200
*              ACCESS=SINGLE                                          * 00023300
*                  the FBA device will be allocated for use by a      * 00023400
*                  single z/OS system.  Note that one or more         * 00023500
*                  distributed systems can access this device in      * 00023600
*                  addition to the single z/OS system.  Access from   * 00023700
*                  distributed systems can be controlled through the  * 00023800
*                  use of LUN masking or using the persistent reserve * 00023900
*                  from the distributed side.                         * 00024000
*                                                                     * 00024100
*              ACCESS=READ                                            * 00024200
*                  the FBA device will allocated for READ only on the * 00024300
*                  system where this request is received.  This       * 00024400
*                  device can also be allocated on another z/OS       * 00024500
*                  system by requesting ACCESS=WRITE.  Note that one  * 00024600
*                  or more distributed systems can access this device * 00024700
*                  in addition to the pair of z/OS systems that       * 00024800
*                  performed the z/OS allocations.  Access from       * 00024900
*                  distributed systems can be controlled through the  * 00025000
*                  use of LUN masking or using the persistent reserve * 00025100
*                  from the distributed side.                         * 00025200
*                                                                     * 00025300
*              ACCESS=WRITE                                           * 00025400
*                  the FBA device will allocated for WRITE only on    * 00025500
*                  the system where this request is received.  This   * 00025600
*                  device can also be allocated on another z/OS       * 00025700
*                  system by requesting ACCESS=READ.  Note that one   * 00025800
*                  or more distributed systems can access this device * 00025900
*                  in addition to the pair of z/OS systems that       * 00026000
*                  performed the z/OS allocations.  Access from       * 00026100
*                  distributed systems can be controlled through the  * 00026200
*                  use of LUN masking or using the persistent reserve * 00026300
*                  from the distributed side.                         * 00026400
*                                                                     * 00026500
*              ACCESS=ANY                                             * 00026600
*                  the FBA device can be allocated once on each z/OS  * 00026700
*                  system.  Note that one or more distributed systems * 00026800
*                  can access this device in addition to the z/OS     * 00026900
*                  systems that performed the z/OS allocations.       * 00027000
*                  Access from distributed systems can be controlled  * 00027100
*                  through the use of LUN masking or using the        * 00027200
*                  persistent reserve from the distributed side.      * 00027300
*                                                                     * 00027400
*                                                                     * 00027500
*                                                                     * 00027600
*                                                                     * 00027700
*                                                                     * 00027800
*                                                                     * 00027900
*          The following is a set of mutually exclusive keys.  This   * 00028000
*          set is required; only one key must be specified.           * 00028100
*                                                                     * 00028200
*                                                                     * 00028300
*          DEVLISTPTR=xdevlistptr                                     * 00028400
*              belongs to a set of mutually exclusive keys. It is the * 00028500
*              name (RS-type), or address in register (2)-(12), of a  * 00028600
*              4 byte input that contains the address of the input    * 00028700
*              device list mapped by the FBADL (defined in the        * 00028800
*              IOSDFBA macro).  The FBADL specifies the number of     * 00028900
*              devices, the device numbers, etc. to allocate.  (Refer * 00029000
*              to the FBADL for specific information.)                * 00029100
*                                                                     * 00029200
*              For AMODE(31) callers, the storage area must be        * 00029300
*              addressable in AMODE(31).                              * 00029400
*                                                                     * 00029500
*              NOTE:  The DEVLISPTR parameter is allowed only when    * 00029600
*              not in AMODE 64 as indicated by the SYSSTATE macro.    * 00029700
*                                                                     * 00029800
*          DEVLISTPTR64=xdevlistptr64                                 * 00029900
*              belongs to a set of mutually exclusive keys. It is the * 00030000
*              name (RS-type), or address in register (2)-(12), of an * 00030100
*              8 byte input that contains the address of the input    * 00030200
*              device list mapped by the FBADL (defined in the        * 00030300
*              IOSDFBA macro).  The FBADL specifies the number of     * 00030400
*              devices, the device numbers, etc. to allocate.  (Refer * 00030500
*              to the FBADL for specific information.)                * 00030600
*                                                                     * 00030700
*              NOTE:  The DEVLISTPTR64 parameter is allowed only when * 00030800
*              in AMODE 64 as indicated by the SYSSTATE macro.        * 00030900
*                                                                     * 00031000
*                                                                     * 00031100
*                                                                     * 00031200
*          End of a set of mutually exclusive required keys.          * 00031300
*                                                                     * 00031400
*                                                                     * 00031500
*                                                                     * 00031600
*          The following is a set of mutually exclusive keys.  This   * 00031700
*          set is required; only one key must be specified.           * 00031800
*                                                                     * 00031900
*                                                                     * 00032000
*          DEVDESCPTR=Ýxdevdescptr¨                                   * 00032100
*              belongs to a set of mutually exclusive keys. It is the * 00032200
*              name (RS-type), or address in register (2)-(12), of a  * 00032300
*              4 byte output that will contain the address of the     * 00032400
*              output device descriptor area mapped by the FBADDL     * 00032500
*              (defined in the IOSDFBA macro).                        * 00032600
*                                                                     * 00032700
*              The device descriptor area contains the addresses of a * 00032800
*              device descriptor entry for each device successfully   * 00032900
*              allocated.  The device descriptor entry contains       * 00033000
*              specific device information discovered by the ALLOCATE * 00033100
*              service.  The device descriptor entry is mapped by the * 00033200
*              FBADDE (defined in the IOSDFBA macro).  The device     * 00033300
*              descriptor entry is required input for the IOSFBA READ * 00033400
*              and IOSFBA WRITE services.                             * 00033500
*                                                                     * 00033600
*              When using the IOSFBA READ or IOSFBA WRITE services,   * 00033700
*              the device descriptor entry is required input for each * 00033800
*              device that is read from or written to.  Refer to the  * 00033900
*              DEVIOLISTPTR or DEVIOLISTPTR64 parameter for the       * 00034000
*              IOSFBA READ and/or IOSFBA WRITE service for more       * 00034100
*              information.                                           * 00034200
*                                                                     * 00034300
*              The device descriptor address is an input parameter    * 00034400
*              for the IOSFBA UNALLOCATE service.  The UNALLOCATE     * 00034500
*              service will unallocate the devices contained in the   * 00034600
*              device descriptor area.                                * 00034700
*                                                                     * 00034800
*              The caller is responsible for freeing/releasing this   * 00034900
*              storage after the devices have been UNALLOCATED.  The  * 00035000
*              subpool and length of the storage are contained in the * 00035100
*              device descriptor area.  The device descriptor area    * 00035200
*              must be freed using either STORAGE RELEASE or FREEMAIN * 00035300
*              macro invocation.                                      * 00035400
*                                                                     * 00035500
*              NOTE:  The DEVDESCPTR parameter is allowed only when   * 00035600
*              not in AMODE 64 as indicated by the SYSSTATE macro.    * 00035700
*                                                                     * 00035800
*          DEVDESCPTR64=Ýxdevdescptr64¨                               * 00035900
*              belongs to a set of mutually exclusive keys. It is the * 00036000
*              name (RS-type), or address in register (2)-(12), of an * 00036100
*              8 byte output that will contain the address of the     * 00036200
*              output device descriptor area mapped by the FBADDL     * 00036300
*              (defined in the IOSDFBA macro).                        * 00036400
*                                                                     * 00036500
*              The device descriptor area contains the addresses of a * 00036600
*              device descriptor entry for each device successfully   * 00036700
*              allocated.  The device descriptor entry contains       * 00036800
*              specific device information discovered during by the   * 00036900
*              ALLOCATE service.  The device descriptor entry is      * 00037000
*              mapped by the FBADDE (defined in the IOSDFBA macro).   * 00037100
*              The device descriptor entry is required input for the  * 00037200
*              IOSFBA READ and IOSFBA WRITE services.                 * 00037300
*                                                                     * 00037400
*              When using the IOSFBA READ or IOSFBA WRITE services,   * 00037500
*              the device descriptor entry is required input for each * 00037600
*              device that is read from or written to.  Refer to the  * 00037700
*              DEVIOLIST parameter for the IOSFBA READ and/or IOSFBA  * 00037800
*              WRITE service for more information.                    * 00037900
*                                                                     * 00038000
*              The device descriptor address is an input parameter    * 00038100
*              for the IOSFBA UNALLOCATE service.  The UNALLOCATE     * 00038200
*              service will unallocate the devices contained in the   * 00038300
*              device descriptor area.                                * 00038400
*                                                                     * 00038500
*              The caller is responsible for freeing/releasing this   * 00038600
*              storage after the devices have been UNALLOCATED.  The  * 00038700
*              storage area must be freed using the IARST64 service.  * 00038800
*                                                                     * 00038900
*              NOTE:  The DEVDESCPTR64 parameter is allowed only when * 00039000
*              in AMODE 64 as indicated by the SYSSTATE macro.        * 00039100
*                                                                     * 00039200
*                                                                     * 00039300
*                                                                     * 00039400
*          End of a set of mutually exclusive required keys.          * 00039500
*                                                                     * 00039600
*                                                                     * 00039700
*                                                                     * 00039800
*          ÝDEVCOUNT=»xdevcount!1º¨                                   * 00039900
*              is the name (RS-type), or address in register          * 00040000
*              (2)-(12), of an optional byte input that contains the  * 00040100
*              number of devices that should be allocated from the    * 00040200
*              devices specified in the device list (FBADL) addressed * 00040300
*              by the DEVLISTPTR or DEVLISTPTR64 parameter.  DEVCOUNT * 00040400
*              indicates the maximum number of devices to allocate.   * 00040500
*              DEVCOUNT should be less than or equal to the number of * 00040600
*              devices specified in the device list.                  * 00040700
*              DEFAULT: 1                                             * 00040800
*                                                                     * 00040900
*          ÝMINDEVCOUNT=»xmindevcount!0º¨                             * 00041000
*              is the name (RS-type), or address in register          * 00041100
*              (2)-(12), of an optional byte input that indicates the * 00041200
*              minimum number of devices that must be allocated to    * 00041300
*              fullfill this allocate request.  The devices are       * 00041400
*              specified in the device list (FBADL) addressed by the  * 00041500
*              DEVLISTPTR or DEVLISTPTR64 parameter.  This number     * 00041600
*              should be less than or equal to the number specified   * 00041700
*              in DEVCOUNT.                                           * 00041800
*                                                                     * 00041900
*              If the caller requests DEVCOUNT=x and MINDEVCOUNT=y,   * 00042000
*              the IOSFBA service will attempt to allocate the        * 00042100
*              requested number of devices (as specified by the       * 00042200
*              DEVCOUNT=x parameter).  If 'x' devices are not         * 00042300
*              available to be allocated, IOSFBA ALLOCATE service     * 00042400
*              will attempt to allocate as many devices that are      * 00042500
*              available.  The ALLOCATE request will be considered    * 00042600
*              successful if at least 'y' devices are allocated (as   * 00042700
*              specified by the MINDEVCOUNT=y parameter).  The        * 00042800
*              ALLOCATE request will be considered unsuccessful if    * 00042900
*              'y' devices (as specified by the MINDEVCOUNT=y         * 00043000
*              parameter) are not allocated and a return code is set  * 00043100
*              indicating the ALLOCATE request failed since the       * 00043200
*              minumum number of devices could not be allocated.      * 00043300
*                                                                     * 00043400
*              The count or number of devices that have been          * 00043500
*              allocated is contained in the device descriptor area   * 00043600
*              (mapped by the FBADDL).                                * 00043700
*                                                                     * 00043800
*              If this keyword is omitted or specified as 0, the      * 00043900
*              MINDEVCOUNT is assumed to be the value specified on    * 00044000
*              the DEVCOUNT keyword.                                  * 00044100
*              DEFAULT: 0                                             * 00044200
*                                                                     * 00044300
*                                                                     * 00044400
*                                                                     * 00044500
*      QUERY                                                          * 00044600
*          Query information about a list of devices.  Information is * 00044700
*          returned for each device in the the list of devices        * 00044800
*          identified in the DEVLIST keyword.                         * 00044900
*                                                                     * 00045000
*                                                                     * 00045100
*          The following is a set of mutually exclusive keys.  This   * 00045200
*          set is required; only one key must be specified.           * 00045300
*                                                                     * 00045400
*                                                                     * 00045500
*          DEVLISTPTR=xdevlistptr                                     * 00045600
*              belongs to a set of mutually exclusive keys. It is the * 00045700
*              name (RS-type), or address in register (2)-(12), of a  * 00045800
*              4 byte input that contains the address of the input    * 00045900
*              device list mapped by the FBADL (defined in the        * 00046000
*              IOSDFBA macro).  The FBADL specifies the number of     * 00046100
*              devices, the device numbers, etc. to allocate.  (Refer * 00046200
*              to the FBADL for specific information.)                * 00046300
*                                                                     * 00046400
*              For AMODE(31) callers, the storage area must be        * 00046500
*              addressable in AMODE(31).                              * 00046600
*                                                                     * 00046700
*              NOTE:  The DEVLISPTR parameter is allowed only when    * 00046800
*              not in AMODE 64 as indicated by the SYSSTATE macro.    * 00046900
*                                                                     * 00047000
*          DEVLISTPTR64=xdevlistptr64                                 * 00047100
*              belongs to a set of mutually exclusive keys. It is the * 00047200
*              name (RS-type), or address in register (2)-(12), of an * 00047300
*              8 byte input that contains the address of the input    * 00047400
*              device list mapped by the FBADL (defined in the        * 00047500
*              IOSDFBA macro).  The FBADL specifies the number of     * 00047600
*              devices, the device numbers, etc. to allocate.  (Refer * 00047700
*              to the FBADL for specific information.)                * 00047800
*                                                                     * 00047900
*              NOTE:  The DEVLISTPTR64 parameter is allowed only when * 00048000
*              in AMODE 64 as indicated by the SYSSTATE macro.        * 00048100
*                                                                     * 00048200
*                                                                     * 00048300
*                                                                     * 00048400
*          End of a set of mutually exclusive required keys.          * 00048500
*                                                                     * 00048600
*                                                                     * 00048700
*                                                                     * 00048800
*          The following is a set of mutually exclusive keys.  This   * 00048900
*          set is required; only one key must be specified.           * 00049000
*                                                                     * 00049100
*                                                                     * 00049200
*          DEVDESCPTR=Ýxdevdescptr¨                                   * 00049300
*              belongs to a set of mutually exclusive keys. It is the * 00049400
*              name (RS-type), or address in register (2)-(12), of a  * 00049500
*              4 byte output that will contain the address of the     * 00049600
*              output device descriptor area mapped by the FBADDL     * 00049700
*              (defined in the IOSDFBA macro).                        * 00049800
*                                                                     * 00049900
*              The device descriptor area contains the addresses of a * 00050000
*              device descriptor entry for each device successfully   * 00050100
*              queried.  The device descriptor entry contains         * 00050200
*              specific device information discovered by the QUERY    * 00050300
*              service.  The device descriptor entry is mapped by the * 00050400
*              FBADDE (defined in the IOSDFBA macro).                 * 00050500
*                                                                     * 00050600
*              The caller is responsible for freeing/releasing this   * 00050700
*              storage after the devices have been queried. The       * 00050800
*              subpool and length of the storage are contained in the * 00050900
*              device descriptor area.  The device descriptor area    * 00051000
*              must be freed using either STORAGE RELEASE or FREEMAIN * 00051100
*              macro invocation.                                      * 00051200
*                                                                     * 00051300
*              NOTE:  The DEVDESCPTR parameter is allowed only when   * 00051400
*              not in AMODE 64 as indicated by the SYSSTATE macro.    * 00051500
*                                                                     * 00051600
*          DEVDESCPTR64=Ýxdevdescptr64¨                               * 00051700
*              belongs to a set of mutually exclusive keys. It is the * 00051800
*              name (RS-type), or address in register (2)-(12), of an * 00051900
*              8 byte output that will contain the address of the     * 00052000
*              output device descriptor area mapped by the FBADDL     * 00052100
*              (defined in the IOSDFBA macro).                        * 00052200
*                                                                     * 00052300
*              The device descriptor area contains the addresses of a * 00052400
*              device descriptor entry for each device successfully   * 00052500
*              queried.  The device descriptor entry contains         * 00052600
*              specific device information discovered by the QUERY    * 00052700
*              service.  The device descriptor entry is mapped by the * 00052800
*              FBADDE (defined in the IOSDFBA macro).                 * 00052900
*                                                                     * 00053000
*              The caller is responsible for freeing/releasing this   * 00053100
*              storage after the devices have been queried. The       * 00053200
*              subpool and length of the storage are contained in the * 00053300
*              device descriptor area.  The device descriptor area    * 00053400
*              must be freed using either STORAGE RELEASE or FREEMAIN * 00053500
*              macro invocation.                                      * 00053600
*                                                                     * 00053700
*              NOTE:  The DEVDESCPTR64 parameter is allowed only when * 00053800
*              in AMODE 64 as indicated by the SYSSTATE macro.        * 00053900
*                                                                     * 00054000
*                                                                     * 00054100
*                                                                     * 00054200
*          End of a set of mutually exclusive required keys.          * 00054300
*                                                                     * 00054400
*                                                                     * 00054500
*      READ                                                           * 00054600
*          Read information from one or more FBA devices as specified * 00054700
*          by the device I/O list (DEVIOLIST parameter).              * 00054800
*                                                                     * 00054900
*                                                                     * 00055000
*          The following is a set of mutually exclusive keys.  This   * 00055100
*          set is required; only one key must be specified.           * 00055200
*                                                                     * 00055300
*                                                                     * 00055400
*          DEVIOLISTPTR=xdeviolistptr                                 * 00055500
*              belongs to a set of mutually exclusive keys. It is the * 00055600
*              name (RS-type), or address in register (2)-(12), of a  * 00055700
*              4 byte input that contains the address of the input    * 00055800
*              device I/O list mapped by the FBADIOL (defined in the  * 00055900
*              IOSDFBA macro).  The device I/O list specifies the     * 00056000
*              number of devices that will participate in the IOSFBA  * 00056100
*              READ service.  Additionally, the device I/O list will  * 00056200
*              contain a pointer to the device I/O entry for each     * 00056300
*              device (mapped by the FBADIOE, defined in the IOSDFBA  * 00056400
*              macro).                                                * 00056500
*                                                                     * 00056600
*              The device I/O entry includes the address of the       * 00056700
*              device descriptor entry (that was returned as part of  * 00056800
*              the device descriptor area by the IOSFBA ALLOCATE      * 00056900
*              service), a count of extent entries, the addresses of  * 00057000
*              each extent entry (mapped by the FBAEE, defined in the * 00057100
*              IOSDFBA macro), and (if required by the caller) the    * 00057200
*              address of a status block/area (mapped by the FBAST,   * 00057300
*              defined in the IOSDFBA macro).  For a complete         * 00057400
*              description, see the IOSDFBA macro.                    * 00057500
*                                                                     * 00057600
*              The extent entry defines the parameters of the READ    * 00057700
*              I/O operation for a given device.  It defines the      * 00057800
*              starting block number on the device, the number of     * 00057900
*              blocks to transfer, and the storage address(es) to     * 00058000
*              place the information read from the FBA device.        * 00058100
*                                                                     * 00058200
*              The status block provides the caller with status       * 00058300
*              information for the I/O to each device.  A status      * 00058400
*              block should be obtained and initialized to zeroes by  * 00058500
*              the caller for each device that will participate in    * 00058600
*              the IOSFBA READ service.                               * 00058700
*                                                                     * 00058800
*              For AMODE(31) callers, the storage area must be        * 00058900
*              addressable in AMODE(31).                              * 00059000
*                                                                     * 00059100
*              NOTE:  The DEVIOLISTPTR parameter is allowed only when * 00059200
*              not in AMODE 64 as indicated by the SYSSTATE macro.    * 00059300
*                                                                     * 00059400
*          DEVIOLISTPTR64=xdeviolistptr64                             * 00059500
*              belongs to a set of mutually exclusive keys. It is the * 00059600
*              name (RS-type), or address in register (2)-(12), of an * 00059700
*              8 byte input that contains the address of the input    * 00059800
*              device I/O list mapped by the FBADIOL (defined in the  * 00059900
*              IOSDFBA macro).  The device I/O list specifies the     * 00060000
*              number of devices that will participate in the IOSFBA  * 00060100
*              READ service.  Additionally, the device I/O list will  * 00060200
*              contain a device I/O entry for each device (mapped by  * 00060300
*              the FBADIOE, defined in the IOSDFBA macro).            * 00060400
*                                                                     * 00060500
*              The device I/O entry includes the address of the       * 00060600
*              device descriptor entry (that was returned as part of  * 00060700
*              the device descriptor area by the IOSFBA ALLOCATE      * 00060800
*              service), a count of extent entries, the addresses of  * 00060900
*              each extent entry (mapped by the FBAEE, defined in the * 00061000
*              IOSDFBA macro), and (if required by the caller) the    * 00061100
*              address of a status block/area (mapped by the FBAST,   * 00061200
*              defined in the IOSDFBA macro).  For a complete         * 00061300
*              description, see the IOSDFBA macro.                    * 00061400
*                                                                     * 00061500
*              The extent entry defines the parameters of the READ    * 00061600
*              I/O operation for a given device.  It defines the      * 00061700
*              starting block number on the device, the number of     * 00061800
*              blocks to transfer, and the storage address(es) to     * 00061900
*              place the information read from the FBA device.        * 00062000
*                                                                     * 00062100
*              The status block provides the caller with status       * 00062200
*              information for the I/O to each device.  A status      * 00062300
*              block should be obtained and initialized to zeroes by  * 00062400
*              the caller for each device that will participate in    * 00062500
*              the IOSFBA READ service.                               * 00062600
*                                                                     * 00062700
*              NOTE:  The DEVIOLISTPTR64 parameter is allowed only    * 00062800
*              when in AMODE 64 as indicated by the SYSSTATE macro.   * 00062900
*                                                                     * 00063000
*                                                                     * 00063100
*                                                                     * 00063200
*          End of a set of mutually exclusive required keys.          * 00063300
*                                                                     * 00063400
*                                                                     * 00063500
*                                                                     * 00063600
*          ÝECB=»xecb!NONEº¨                                          * 00063700
*              is the name (RS-type), or address in register          * 00063800
*              (2)-(12), of an optional 4 byte input that contains    * 00063900
*              the address that points to an optional ECB that will   * 00064000
*              be posted when all read operations are complete.  If   * 00064100
*              an ECB is not specified, control will be returned to   * 00064200
*              the invoker when all read operations have completed.   * 00064300
*              DEFAULT: NONE                                          * 00064400
*                                                                     * 00064500
*                                                                     * 00064600
*                                                                     * 00064700
*                                                                     * 00064800
*          ÝRESERVED¨                                                 * 00064900
*              that indicates that the device(s) for this READ        * 00065000
*              operation may be serialized by persistent reserve from * 00065100
*              a distributed client.  When this keyword is specified, * 00065200
*              z/OS I/O operations will be permitted to the devices   * 00065300
*              while the persistent reserve is held.  This keyword    * 00065400
*              should only be used when the invoking program is       * 00065500
*              coordinating I/O activity between z/OS and the         * 00065600
*              distributed client that owns the persistent reserve.   * 00065700
*              DEFAULT: NONE                                          * 00065800
*                                                                     * 00065900
*                                                                     * 00066000
*                                                                     * 00066100
*                                                                     * 00066200
*          ÝIOTOKEN=»xiotoken!NONEº                                   * 00066300
*              is the name (RS-type), or address in register          * 00066400
*              (2)-(12), of an optional 4 byte input that contains    * 00066500
*              the address that points to an optional 32-byte area    * 00066600
*              that is used by the IOSFBA service to store addresses  * 00066700
*              and lengths of storage areas that can be resused in    * 00066800
*              order to avoid system overhead of obtaining these      * 00066900
*              resources on each call.                                * 00067000
*                                                                     * 00067100
*              The invokers of IOSFBA can use as many unique 32-byte  * 00067200
*              IOTOKEN areas as desired.  When IOTOKEN is used,       * 00067300
*                                                                     * 00067400
*                                                                     * 00067500
*              o   The area specified by the IOTOKEN should be        * 00067600
*                  initially cleared by the calling program before    * 00067700
*                  the first usage of the IOTOKEN area.               * 00067800
*                                                                     * 00067900
*              o   Each IOTOKEN will be used to represent storage     * 00068000
*                  areas for the life of an I/O request.  The caller  * 00068100
*                  should not reuse an IOTOKEN until the I/Os         * 00068200
*                  initiated for it have completed.  For synchronous  * 00068300
*                  callers, the IOTOKEN can be immediately reused.    * 00068400
*                  For asynchronous callers (when an ECB is           * 00068500
*                  provided), the caller must not reuse an IOTOKEN    * 00068600
*                  until the ECB has been posted.                     * 00068700
*                                                                     * 00068800
*              o   IOSFBA CLEANUP must be invoked for each IOTOKEN    * 00068900
*                  that was used to ensure that task related storage  * 00069000
*                  is released.                                       * 00069100
*                                                                     * 00069200
*                                                                     * 00069300
*              DEFAULT: NONE                                          * 00069400
*                                                                     * 00069500
*                                                                     * 00069600
*              ÝREUSECP=»NO!YESº¨¨                                    * 00069700
*                  is an optional keyword input that indicates that   * 00069800
*                  the channel program for this operation will be     * 00069900
*                  exactly the same as the previous channel program.  * 00070000
*                  On the first READ request, this keyword is         * 00070100
*                  ignored.  On subsequent requests, this keyword     * 00070200
*                  indicates whether the exact same storage buffers   * 00070300
*                  and blocks on the disks are involved in the I/O    * 00070400
*                  operations.  The exact same channel program is     * 00070500
*                  used to perform the I/O.  Using this REUSECP=YES   * 00070600
*                  may provide some performance advantage since       * 00070700
*                  analyzing the extents and storage buffers is not   * 00070800
*                  required.                                          * 00070900
*                  DEFAULT: NO                                        * 00071000
*                                                                     * 00071100
*                                                                     * 00071200
*                  REUSECP=NO                                         * 00071300
*                      indicates that the channel program may vary    * 00071400
*                      from invocation to invocation and should be    * 00071500
*                      rebuilt on each IOSFBA request.                * 00071600
*                                                                     * 00071700
*                  REUSECP=YES                                        * 00071800
*                      indicates that the channel program does not    * 00071900
*                      vary from invocation to invocation and that    * 00072000
*                      IOSFBA is instructed to start the previously   * 00072100
*                      built channel program without modification if  * 00072200
*                      one had been previously built.  If no prior    * 00072300
*                      channel program was executed for the input     * 00072400
*                      IOTOKEN, a new one will be built and saved for * 00072500
*                      the next invocation.  When REUSECP=YES is      * 00072600
*                      specified,                                     * 00072700
*                                                                     * 00072800
*                                                                     * 00072900
*                      o   You must use storage that is fixed for     * 00073000
*                          life of the IOTOKEN.  Channel programs     * 00073100
*                          will not be rebuilt to obtain the latest   * 00073200
*                          real storage address.                      * 00073300
*                                                                     * 00073400
*                      o   You must make the address space            * 00073500
*                          non-swappable for the life of the IOTOKEN. * 00073600
*                                                                     * 00073700
*                                                                     * 00073800
*                      If either of these conditions cannot be met,   * 00073900
*                      you must not use REUSECP=YES.                  * 00074000
*                                                                     * 00074100
*                                                                     * 00074200
*                                                                     * 00074300
*                                                                     * 00074400
*                                                                     * 00074500
*                                                                     * 00074600
*                                                                     * 00074700
*      WRITE                                                          * 00074800
*          Write information to one or more FBA devices as specified  * 00074900
*          by the device I/O list (DEVIOLIST parameter).              * 00075000
*                                                                     * 00075100
*                                                                     * 00075200
*          The following is a set of mutually exclusive keys.  This   * 00075300
*          set is required; only one key must be specified.           * 00075400
*                                                                     * 00075500
*                                                                     * 00075600
*          DEVIOLISTPTR=xdeviolistptr                                 * 00075700
*              belongs to a set of mutually exclusive keys. It is the * 00075800
*              name (RS-type), or address in register (2)-(12), of a  * 00075900
*              4 byte input that contains the address of the input    * 00076000
*              device I/O list mapped by the FBADIOL (defined in the  * 00076100
*              IOSDFBA macro).  The device I/O list specifies the     * 00076200
*              number of devices that will participate in the IOSFBA  * 00076300
*              READ service.  Additionally, the device I/O list will  * 00076400
*              contain a device I/O entry for each device (mapped by  * 00076500
*              the FBADIOE, defined in the IOSDFBA macro).            * 00076600
*                                                                     * 00076700
*              The device I/O entry includes the address of the       * 00076800
*              device descriptor entry (that was returned as part of  * 00076900
*              the device descriptor area by the IOSFBA ALLOCATE      * 00077000
*              service), a count of extent entries, the addresses of  * 00077100
*              each extent entry (mapped by the FBAEE, defined in the * 00077200
*              IOSDFBA macro), and (if required by the caller) the    * 00077300
*              address of a status block/area (mapped by the FBAST,   * 00077400
*              defined in the IOSDFBA macro).  For a complete         * 00077500
*              description, see the IOSDFBA macro.                    * 00077600
*                                                                     * 00077700
*              The extent entry defines the parameters of the WRITE   * 00077800
*              I/O operation for a given device.  It defines the      * 00077900
*              starting block number on the device, the number of     * 00078000
*              blocks to transfer, and the storage address(es) to     * 00078100
*              place the information read from the FBA device.        * 00078200
*                                                                     * 00078300
*              The status block provides the caller with status       * 00078400
*              information for the I/O to each device.  A status      * 00078500
*              block should be obtained and initialized to zeroes by  * 00078600
*              the caller for each device that will participate in    * 00078700
*              the IOSFBA WRITE service.                              * 00078800
*                                                                     * 00078900
*              For AMODE(31) callers, the storage area must be        * 00079000
*              addressable in AMODE(31).                              * 00079100
*                                                                     * 00079200
*              NOTE:  The DEVIOLISTPTR parameter is allowed only when * 00079300
*              not in AMODE 64 as indicated by the SYSSTATE macro.    * 00079400
*                                                                     * 00079500
*          DEVIOLISTPTR64=xdeviolistptr64                             * 00079600
*              belongs to a set of mutually exclusive keys. It is the * 00079700
*              name (RS-type), or address in register (2)-(12), of an * 00079800
*              8 byte input that contains the address of the input    * 00079900
*              device I/O list mapped by the FBADIOL (defined in the  * 00080000
*              IOSDFBA macro).  The device I/O list specifies the     * 00080100
*              number of devices that will participate in the IOSFBA  * 00080200
*              READ service.  Additionally, the device I/O list will  * 00080300
*              contain a device I/O entry for each device (mapped by  * 00080400
*              the FBADIOE, defined in the IOSDFBA macro).            * 00080500
*                                                                     * 00080600
*              The device I/O entry includes the address of the       * 00080700
*              device descriptor entry (that was returned as part of  * 00080800
*              the device descriptor area by the IOSFBA ALLOCATE      * 00080900
*              service), a count of extent entries, the addresses of  * 00081000
*              each extent entry (mapped by the FBAEE, defined in the * 00081100
*              IOSDFBA macro), and (if required by the caller) the    * 00081200
*              address of a status block/area (mapped by the FBAST,   * 00081300
*              defined in the IOSDFBA macro).  For a complete         * 00081400
*              description, see the IOSDFBA macro.                    * 00081500
*                                                                     * 00081600
*              The extent entry defines the parameters of the WRITE   * 00081700
*              I/O operation for a given device.  It defines the      * 00081800
*              starting block number on the device, the number of     * 00081900
*              blocks to transfer, and the storage address(es) to     * 00082000
*              place the information read from the FBA device.        * 00082100
*                                                                     * 00082200
*              The status block provides the caller with status       * 00082300
*              information for the I/O to each device.  A status      * 00082400
*              block should be obtained and initialized to zeroes by  * 00082500
*              the caller for each device that will participate in    * 00082600
*              the IOSFBA WRITE service.                              * 00082700
*                                                                     * 00082800
*              NOTE:  The DEVIOLISTPTR64 parameter is allowed only    * 00082900
*              when in AMODE 64 as indicated by the SYSSTATE macro.   * 00083000
*                                                                     * 00083100
*                                                                     * 00083200
*                                                                     * 00083300
*          End of a set of mutually exclusive required keys.          * 00083400
*                                                                     * 00083500
*                                                                     * 00083600
*                                                                     * 00083700
*          ÝECB=»xecb!NONEº¨                                          * 00083800
*              is the name (RS-type), or address in register          * 00083900
*              (2)-(12), of an optional 4 byte input that contains    * 00084000
*              the address that points to an optional ECB that will   * 00084100
*              be posted when all write operations are complete.  If  * 00084200
*              an ECB is not specified, control will be returned to   * 00084300
*              the invoker when all write operations have completed.  * 00084400
*              DEFAULT: NONE                                          * 00084500
*                                                                     * 00084600
*                                                                     * 00084700
*                                                                     * 00084800
*                                                                     * 00084900
*          ÝRESERVED¨                                                 * 00085000
*              that indicates that the device(s) for this WRITE       * 00085100
*              operation may be serialized by persistent reserve from * 00085200
*              a distributed client.  When this keyword is specified, * 00085300
*              z/OS I/O operations will be permitted to the devices   * 00085400
*              while the persistent reserve is held.  This keyword    * 00085500
*              should only be used when the invoking program is       * 00085600
*              coordinating I/O activity between z/OS and the         * 00085700
*              distributed client that owns the persistent reserve.   * 00085800
*              DEFAULT: NONE                                          * 00085900
*                                                                     * 00086000
*                                                                     * 00086100
*                                                                     * 00086200
*                                                                     * 00086300
*          ÝIOTOKEN=»xiotoken!NONEº                                   * 00086400
*              is the name (RS-type), or address in register          * 00086500
*              (2)-(12), of an optional 4 byte input that contains    * 00086600
*              the address that points to an optional 32-byte area    * 00086700
*              that is used by the IOSFBA service to store addresses  * 00086800
*              and lengths of storage areas that can be resused in    * 00086900
*              order to avoid system overhead of obtaining these      * 00087000
*              resources on each call.                                * 00087100
*                                                                     * 00087200
*              The invokers of IOSFBA can use as many unique 32-byte  * 00087300
*              IOTOKEN areas as desired.  When IOTOKEN is used,       * 00087400
*                                                                     * 00087500
*                                                                     * 00087600
*              o   The area specified by the IOTOKEN should be        * 00087700
*                  initially cleared by the calling program before    * 00087800
*                  the first usage of the IOTOKEN area.               * 00087900
*                                                                     * 00088000
*              o   Each IOTOKEN will be used to represent storage     * 00088100
*                  areas for the life of an I/O request.  The caller  * 00088200
*                  should not reuse an IOTOKEN until the I/Os         * 00088300
*                  initiated for it have completed.  For synchronous  * 00088400
*                  callers, the IOTOKEN can be immediately reused.    * 00088500
*                  For asynchronous callers (when an ECB is           * 00088600
*                  provided), the caller must not reuse an IOTOKEN    * 00088700
*                  until the ECB has been posted.                     * 00088800
*                                                                     * 00088900
*              o   IOSFBA CLEANUP must be invoked for each IOTOKEN    * 00089000
*                  that was used to ensure that task related storage  * 00089100
*                  is released.                                       * 00089200
*                                                                     * 00089300
*                                                                     * 00089400
*              DEFAULT: NONE                                          * 00089500
*                                                                     * 00089600
*                                                                     * 00089700
*              ÝREUSECP=»NO!YESº¨¨                                    * 00089800
*                  is an optional keyword input that indicates that   * 00089900
*                  the channel program for this operation will be     * 00090000
*                  exactly the same as the previous channel program.  * 00090100
*                  On the first WRITE request, this keyword is        * 00090200
*                  ignored.  On subsequent requests, this keyword     * 00090300
*                  indicates whether the exact same storage buffers   * 00090400
*                  and blocks on the disks are involved in the I/O    * 00090500
*                  operations.  The exact same channel program is     * 00090600
*                  used to perform the I/O.  Using this REUSECP=YES   * 00090700
*                  may provide some performance advantage since       * 00090800
*                  analyzing the extents and storage buffers is not   * 00090900
*                  required.                                          * 00091000
*                  DEFAULT: NO                                        * 00091100
*                                                                     * 00091200
*                                                                     * 00091300
*                  REUSECP=NO                                         * 00091400
*                      indicates that the channel program may vary    * 00091500
*                      from invocation to invocation and should be    * 00091600
*                      rebuilt on each IOSFBA request.                * 00091700
*                                                                     * 00091800
*                  REUSECP=YES                                        * 00091900
*                      indicates that the channel program does not    * 00092000
*                      vary from invocation to invocation and that    * 00092100
*                      IOSFBA is instructed to start the previously   * 00092200
*                      built channel program without modification if  * 00092300
*                      one had been previously built.  If no prior    * 00092400
*                      channel program was executed for the input     * 00092500
*                      IOTOKEN, a new one will be built and saved for * 00092600
*                      the next invocation.  When REUSECP=YES is      * 00092700
*                      specified,                                     * 00092800
*                                                                     * 00092900
*                                                                     * 00093000
*                      o   You must use storage that is fixed for     * 00093100
*                          life of the IOTOKEN.  Channel programs     * 00093200
*                          will not be rebuilt to obtain the latest   * 00093300
*                          real storage address.                      * 00093400
*                                                                     * 00093500
*                      o   You must make the address space            * 00093600
*                          non-swappable for the life of the IOTOKEN. * 00093700
*                                                                     * 00093800
*                                                                     * 00093900
*                      If either of these conditions cannot be met,   * 00094000
*                      you must not use REUSECP=YES.                  * 00094100
*                                                                     * 00094200
*                                                                     * 00094300
*                                                                     * 00094400
*                                                                     * 00094500
*                                                                     * 00094600
*                                                                     * 00094700
*                                                                     * 00094800
*      ERASE                                                          * 00094900
*          Erase a contiguous area of the device(s) as specified in   * 00095000
*          the device list mapped by the FBADL DSECT (defined in the  * 00095100
*          IOSDFBA macro).  Erase will write null characters ('00'x)  * 00095200
*                                                                     * 00095300
*          Note that the erase function will only erase data that was * 00095400
*          accessed during this allocation of the device(s).  During  * 00095500
*          read and write operations, the service remembers the       * 00095600
*          lowest and highest block range that was referenced, and    * 00095700
*          will target an erase for that range of blocks.  If no data * 00095800
*          was read or written, the erase operation will not be       * 00095900
*          performed.  The invoking program should verify that data   * 00096000
*          was erased by checking device descriptor entries for each  * 00096100
*          device for which erase was requested.                      * 00096200
*                                                                     * 00096300
*                                                                     * 00096400
*          The following is a set of mutually exclusive keys.  This   * 00096500
*          set is required; only one key must be specified.           * 00096600
*                                                                     * 00096700
*                                                                     * 00096800
*          DEVDESCPTR=xdevdescptr                                     * 00096900
*              belongs to a set of mutually exclusive keys. It is the * 00097000
*              name (RS-type), or address in register (2)-(12), of a  * 00097100
*              4 byte input that contains the address of the input    * 00097200
*              device descriptor area mapped by the FBADDL (defined   * 00097300
*              in the IOSDFBA macro).  The device descriptor area is  * 00097400
*              obtained by the IOSFBA ALLOCATE service.               * 00097500
*                                                                     * 00097600
*              The device descriptor area contains the addresses of   * 00097700
*              the device descriptor entry for each device to be      * 00097800
*              erased.  The device descriptor entry contains specific * 00097900
*              device information discovered by the ALLOCATE service. * 00098000
*              The device descriptor entry is mapped by the FBADDE    * 00098100
*              (defined in the IOSDFBA macro).                        * 00098200
*                                                                     * 00098300
*              The status of the erase request for each device can be * 00098400
*              obtained by interrogating the FBADDL_EraseFailed and   * 00098500
*              FBADDL_NoEraseAttempted indicators in the FBADDL for   * 00098600
*              each device.  If FBADDL_EraseFailed is indicated, the  * 00098700
*              FBADDE_COD and FBADDE_RCOD fields contain information  * 00098800
*              about the I/O failure.                                 * 00098900
*                                                                     * 00099000
*              NOTE:  The DEVDESCPTR parameter is allowed only when   * 00099100
*              not in AMODE 64 as indicated by the SYSSTATE macro.    * 00099200
*                                                                     * 00099300
*          DEVDESCPTR64=xdevdescptr64                                 * 00099400
*              belongs to a set of mutually exclusive keys. It is the * 00099500
*              name (RS-type), or address in register (2)-(12), of an * 00099600
*              8 byte input that contains the address of the input    * 00099700
*              device descriptor area mapped by the FBADDL (defined   * 00099800
*              in the IOSDFBA macro).  The device descriptor area is  * 00099900
*              obtained by the IOSFBA ALLOCATE service.               * 00100000
*                                                                     * 00100100
*              The device descriptor area contains the addresses of   * 00100200
*              the device descriptor entry for each device to be      * 00100300
*              erased.  The device descriptor entry contains specific * 00100400
*              device information discovered by the ALLOCATE service. * 00100500
*              The device descriptor entry is mapped by the FBADDE    * 00100600
*              (defined in the IOSDFBA macro).                        * 00100700
*                                                                     * 00100800
*              The status of the erase request for each device can be * 00100900
*              obtained by interrogating the FBADDL_EraseFailed and   * 00101000
*              FBADDL_NoEraseAttempted indicators in the FBADDL for   * 00101100
*              each device.  If FBADDL_EraseFailed is indicated, the  * 00101200
*              FBADDE_COD and FBADDE_RCOD fields contain information  * 00101300
*              about the I/O failure.                                 * 00101400
*                                                                     * 00101500
*              NOTE:  The DEVDESCPTR64 parameter is allowed only when * 00101600
*              in AMODE 64 as indicated by the SYSSTATE macro.        * 00101700
*                                                                     * 00101800
*                                                                     * 00101900
*                                                                     * 00102000
*          End of a set of mutually exclusive required keys.          * 00102100
*                                                                     * 00102200
*                                                                     * 00102300
*      CLEANUP                                                        * 00102400
*          Clean up resources for the input IOTOKEN.  During IOSFBA   * 00102500
*          READ or IOSFBA WRITE invocations, one or more IOTOKEN      * 00102600
*          areas may have been used to allow for efficiency.  IOSFBA  * 00102700
*          CLEANUP must be invoked once for each IOTOKEN that was     * 00102800
*          used during processing.                                    * 00102900
*                                                                     * 00103000
*                                                                     * 00103100
*          IOTOKEN=xiotoken                                           * 00103200
*              is the name (RS-type), or address in register          * 00103300
*              (2)-(12), of a required 4 byte input that contains the * 00103400
*              address that points to a 32-byte area that is used by  * 00103500
*              the IOSFBA service to store addresses and lengths of   * 00103600
*              storage areas that can be resused in order to avoid    * 00103700
*              system overhead of obtaining these resources on each   * 00103800
*              call.                                                  * 00103900
*                                                                     * 00104000
*                                                                     * 00104100
*                                                                     * 00104200
*      UNALLOCATE                                                     * 00104300
*          Unallocate the devices as specified in the device list     * 00104400
*          mapped by the FBADL DSECT (defined in the IOSDFBA macro).  * 00104500
*                                                                     * 00104600
*                                                                     * 00104700
*          The following is a set of mutually exclusive keys.  This   * 00104800
*          set is required; only one key must be specified.           * 00104900
*                                                                     * 00105000
*                                                                     * 00105100
*          DEVDESCPTR=xdevdescptr                                     * 00105200
*              belongs to a set of mutually exclusive keys. It is the * 00105300
*              name (RS-type), or address in register (2)-(12), of a  * 00105400
*              4 byte input that contains the address of the input    * 00105500
*              device descriptor area mapped by the FBADDL (defined   * 00105600
*              in the IOSDFBA macro).  The device descriptor area is  * 00105700
*              obtained by the IOSFBA ALLOCATE service.               * 00105800
*                                                                     * 00105900
*              The UNALLOCATE service will unallocate the devices     * 00106000
*              contained in the device descriptor area - specifically * 00106100
*              each of the device descriptor entry.                   * 00106200
*                                                                     * 00106300
*              The device descriptor area contains the addresses of   * 00106400
*              the device descriptor entry for each device to be      * 00106500
*              unallocated.  The device descriptor entry contains     * 00106600
*              specific device information discovered by the ALLOCATE * 00106700
*              service. The device descriptor entry is mapped by the  * 00106800
*              FBADDE (defined in the IOSDFBA macro).                 * 00106900
*                                                                     * 00107000
*              The status of the unallocation request for each device * 00107100
*              can be obtained by interrogating the return code and   * 00107200
*              reason code contained in the device descriptor entry   * 00107300
*              (FBADDE).  The return code and reason code can contain * 00107400
*              the dynamic allocation (SVC 99) return and reason code * 00107500
*              or an IOSFBA service return and reason code.           * 00107600
*                                                                     * 00107700
*              The caller is responsible for freeing/releasing this   * 00107800
*              storage after the devices have been UNALLOCATED.  The  * 00107900
*              subpool and length of the storage are contained in the * 00108000
*              device descriptor area.  The device descriptor area    * 00108100
*              must be freed using either STORAGE RELEASE or FREEMAIN * 00108200
*              macro invocation.                                      * 00108300
*                                                                     * 00108400
*              NOTE:  The DEVDESCPTR parameter is allowed only when   * 00108500
*              not in AMODE 64 as indicated by the SYSSTATE macro.    * 00108600
*                                                                     * 00108700
*          DEVDESCPTR64=xdevdescptr64                                 * 00108800
*              belongs to a set of mutually exclusive keys. It is the * 00108900
*              name (RS-type), or address in register (2)-(12), of an * 00109000
*              8 byte input that contains the address of the input    * 00109100
*              device descriptor area mapped by the FBADDL (defined   * 00109200
*              in the IOSDFBA macro).  The device descriptor area is  * 00109300
*              obtained by the IOSFBA ALLOCATE service.               * 00109400
*                                                                     * 00109500
*              The UNALLOCATE service will unallocate the devices     * 00109600
*              contained in the device descriptor area - specifically * 00109700
*              each of the device descriptor entry.                   * 00109800
*                                                                     * 00109900
*              The device descriptor area contains the addresses of   * 00110000
*              the device descriptor entry for each device to be      * 00110100
*              unallocated.  The device descriptor entry contains     * 00110200
*              specific device information discovered by the ALLOCATE * 00110300
*              service. The device descriptor entry is mapped by the  * 00110400
*              FBADDE (defined in the IOSDFBA macro).                 * 00110500
*                                                                     * 00110600
*              The status of the unallocation request for each device * 00110700
*              can be obtained by interrogating the return code and   * 00110800
*              reason code contained in the device descriptor entry   * 00110900
*              (FBADDE).  The return code and reason code can contain * 00111000
*              the dynamic allocation (SVC 99) return and reason code * 00111100
*              or an IOSFBA service return and reason code.           * 00111200
*                                                                     * 00111300
*              The caller is responsible for freeing/releasing this   * 00111400
*              storage after the devices have been UNALLOCATED.  The  * 00111500
*              device descriptor area must be freed using using the   * 00111600
*              IARST64 service.                                       * 00111700
*                                                                     * 00111800
*              NOTE:  The DEVDESCPTR64 parameter is allowed only when * 00111900
*              in AMODE 64 as indicated by the SYSSTATE macro.        * 00112000
*                                                                     * 00112100
*                                                                     * 00112200
*                                                                     * 00112300
*          End of a set of mutually exclusive required keys.          * 00112400
*                                                                     * 00112500
*                                                                     * 00112600
*                                                                     * 00112700
*                                                                     * 00112800
*      End of a set of mutually exclusive required keys.              * 00112900
*                                                                     * 00113000
*                                                                     * 00113100
*                                                                     * 00113200
*      ÝRETCODE=xretcode¨                                             * 00113300
*          is the name (RS-type) of an optional fullword output       * 00113400
*          variable, or register (2)-(12) or (15), into which the     * 00113500
*          return code is to be copied from GPR 15.  If you specify   * 00113600
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00113700
*          the value will be left in GPR 15.                          * 00113800
*                                                                     * 00113900
*                                                                     * 00114000
*                                                                     * 00114100
*                                                                     * 00114200
*      ÝRSNCODE=xrsncode¨                                             * 00114300
*          is the name (RS-type) of an optional fullword output       * 00114400
*          variable into which the reason code is to be copied from   * 00114500
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00114600
*          R0 (within or without parentheses), the value will be left * 00114700
*          in GPR 0.                                                  * 00114800
*                                                                     * 00114900
*                                                                     * 00115000
*                                                                     * 00115100
*                                                                     * 00115200
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00115300
*          is an optional byte input decimal value in the "1-1" range * 00115400
*          that specifies the macro version.  PLISTVER is the only    * 00115500
*          key allowed on the list form of MF and determines which    * 00115600
*          parameter list is generated.  Note that MAX may be         * 00115700
*          specified instead of a number, and the parameter list will * 00115800
*          be of the largest size currently supported. This size may  * 00115900
*          grow from release to release (thus possibly affecting the  * 00116000
*          amount of storage needed by your program).  If your        * 00116100
*          program can tolerate this, IBM recommends that you always  * 00116200
*          specify MAX when creating the list form parameter list as  * 00116300
*          that will ensure that the list form parameter list is      * 00116400
*          always long enough to hold whatever parameters might be    * 00116500
*          specified on the execute form.                             * 00116600
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00116700
*          default is the lowest version which allows all of the      * 00116800
*          parameters specified on the invocation to be processed.    * 00116900
*                                                                     * 00117000
*                                                                     * 00117100
*                                                                     * 00117200
*                                                                     * 00117300
*      ÝMF=»S!L!Eº¨                                                   * 00117400
*          is an optional keyword input which specifies the macro     * 00117500
*          form.                                                      * 00117600
*          DEFAULT: S                                                 * 00117700
*                                                                     * 00117800
*                                                                     * 00117900
*          ÝMF=S¨                                                     * 00118000
*              specifies the standard form of the macro.  The "S"     * 00118100
*              form generates code to put the parameters into an      * 00118200
*              in-line parameter list and invoke the desired service. * 00118300
*              Full checking for required macro keys is done along    * 00118400
*              with supplying defaults for omitted optional           * 00118500
*              parameters.                                            * 00118600
*                                                                     * 00118700
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00118800
*              specifies the list form of the macro.  The "L" form    * 00118900
*              defines an area to be used for the parameter list.     * 00119000
*              Only the PLISTVER key may be specified on the          * 00119100
*              invocation.  All other macro parameters are flagged as * 00119200
*              errors.  If PLISTVER is not specified, the original    * 00119300
*              parameter list definition is used.                     * 00119400
*                                                                     * 00119500
*            ,xmfctrl                                                 * 00119600
*              is a required input.  It is the name of a storage area * 00119700
*              for the parameter list.                                * 00119800
*                                                                     * 00119900
*            »,xmfattr!0Dº                                            * 00120000
*              is an optional 60 character input string that varies   * 00120100
*              from 1 to 60 characters. Use it to force boundary      * 00120200
*              alignment of the parameter list. Use only 0F or 0D.    * 00120300
*              DEFAULT: 0D which forces the parameter list to a       * 00120400
*              doubleword boundary.                                   * 00120500
*                                                                     * 00120600
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00120700
*              specifies the execute form of the macro.  The "E" form * 00120800
*              generates code to put the parameters into the          * 00120900
*              parameter list specified by xmfctrl and provides full  * 00121000
*              syntax checking with default setting.                  * 00121100
*                                                                     * 00121200
*            ,xmfctrl                                                 * 00121300
*              is a required input.  It is the name (RS-type), or     * 00121400
*              address in register (1)-(12), of a storage area for    * 00121500
*              the parameter list.                                    * 00121600
*                                                                     * 00121700
*            »,COMPLETEº                                              * 00121800
*              is an optional keyword input which specifies the       * 00121900
*              degree of macro parameter syntax checking.             * 00122000
*              DEFAULT: COMPLETE                                      * 00122100
*                                                                     * 00122200
*                                                                     * 00122300
*              COMPLETE                                               * 00122400
*                  Checking for required macro keys is done and       * 00122500
*                  defaults are supplied for omitted optional         * 00122600
*                  parameters.                                        * 00122700
*                                                                     * 00122800
*                                                                     * 00122900
*                                                                     * 00123000
*                                                                     * 00123100
*                                                                     * 00123200
*                                                                     * 00123300
*                                                                     * 00123400
*01* RETURN CODES:                                                    * 00123500
*                                                                     * 00123600
*                                                                     * 00123700
*                                                                     * 00123800
*                 X'00'     Successful                                * 00123900
*                                                                     * 00124000
*                           Reason codes                              * 00124100
*                                                                     * 00124200
*                                                                     * 00124300
*                           X'00'     The operation was successful.   * 00124400
*                                                                     * 00124500
*                           X'01'     (ALLOCATE) The requested number * 00124600
*                                     of devices (DEVCOUNT) were not  * 00124700
*                                     available.  However,            * 00124800
*                                     FBADDL_COUNT contains the       * 00124900
*                                     number of devices actually      * 00125000
*                                     allocated for this request,     * 00125100
*                                     which was greater than or equal * 00125200
*                                     to the minimum number of        * 00125300
*                                     devices required (MINDEVCOUNT). * 00125400
*                                                                     * 00125500
*                           X'02'     (READ,WRITE) The caller         * 00125600
*                                     requested that the channel      * 00125700
*                                     program be reused but failed to * 00125800
*                                     pass a valid IOTOKEN so it is   * 00125900
*                                     not possible to reuse the       * 00126000
*                                     channel program.                * 00126100
*                                                                     * 00126200
*                                                                     * 00126300
*                                                                     * 00126400
*                 X'04'     Warning                                   * 00126500
*                                                                     * 00126600
*                           Reason Codes                              * 00126700
*                                                                     * 00126800
*                                                                     * 00126900
*                           X'01'     (QUERY) Information for one or  * 00127000
*                                     more devices could not be       * 00127100
*                                     obtained                        * 00127200
*                                                                     * 00127300
*                           X'02'     (UNALLOCATE) One or more        * 00127400
*                                     devices in the DEVLIST could    * 00127500
*                                     not be unallocated              * 00127600
*                                                                     * 00127700
*                                                                     * 00127800
*                                                                     * 00127900
*                 X'08'     Error in caller's parameters              * 00128000
*                                                                     * 00128100
*                           Reason codes                              * 00128200
*                                                                     * 00128300
*                                                                     * 00128400
*                           X'01'     IOSFBA abended during parameter * 00128500
*                                     validation.                     * 00128600
*                                                                     * 00128700
*                           X'02'     (ALLOCATE) MINDEVCOUNT is       * 00128800
*                                     greater than DEVCOUNT           * 00128900
*                                                                     * 00129000
*                           X'03'     (ALLOCATE, QUERY) The device    * 00129100
*                                     list is not properly built.     * 00129200
*                                                                     * 00129300
*                           X'04'     (READ,WRITE) The number of      * 00129400
*                                     blocks identified in the READ   * 00129500
*                                     or WRITE request does not       * 00129600
*                                     properly equate with the amount * 00129700
*                                     of I/O buffers provided.        * 00129800
*                                                                     * 00129900
*                           X'05'     (READ,WRITE) The requested      * 00130000
*                                     extents to be READ or WRITTEN   * 00130100
*                                     are not within the acceptable   * 00130200
*                                     range of extents available on   * 00130300
*                                     the device.                     * 00130400
*                                                                     * 00130500
*                           X'06'     An invalid function was         * 00130600
*                                     specified for the IOSFBA        * 00130700
*                                     invocation.                     * 00130800
*                                                                     * 00130900
*                           X'07'     (UNALLOCATE,ERASE) The device   * 00131000
*                                     descriptor list is not properly * 00131100
*                                     built.                          * 00131200
*                                                                     * 00131300
*                           X'08'     (UNALLOCATE,READ,WRITE,ERASE)   * 00131400
*                                     The device descriptor entry is  * 00131500
*                                     not properly built.             * 00131600
*                                                                     * 00131700
*                           X'09'     (UNALLOCATE,READ,WRITE,ERASE)   * 00131800
*                                     The UCB specified in the device * 00131900
*                                     descriptor entry is not         * 00132000
*                                     allocated                       * 00132100
*                                                                     * 00132200
*                           X'0B'     (READ,WRITE) The buffers        * 00132300
*                                     specified are not properly      * 00132400
*                                     sized with the physical block   * 00132500
*                                     size of the device.  Buffer     * 00132600
*                                     sizes must be multiples of the  * 00132700
*                                     physical block size of the the  * 00132800
*                                     device.                         * 00132900
*                                                                     * 00133000
*                           X'0C'     (READ,WRITE) The device I/O     * 00133100
*                                     list is not properly built.     * 00133200
*                                                                     * 00133300
*                           X'0D'     (READ,WRITE) The device I/O     * 00133400
*                                     entry is not properly built.    * 00133500
*                                                                     * 00133600
*                           X'0E'     (READ,WRITE) The extent entry   * 00133700
*                                     is not properly built.          * 00133800
*                                                                     * 00133900
*                           X'0F'     (READ,WRITE) REUSECP=YES was    * 00134000
*                                     specified however, the address  * 00134100
*                                     space is swappable.  The        * 00134200
*                                     address space must be           * 00134300
*                                     non-swappable when REUSEP=YES   * 00134400
*                                     is specified.                   * 00134500
*                                                                     * 00134600
*                                                                     * 00134700
*                                                                     * 00134800
*                 X'0C'     Environmental error                       * 00134900
*                                                                     * 00135000
*                           Reason codes                              * 00135100
*                                                                     * 00135200
*                                                                     * 00135300
*                           X'01'     (ALLOCATE) Not enough devices   * 00135400
*                                     were available to satisfy the   * 00135500
*                                     requested allocation.  Devices  * 00135600
*                                     must be online, usable and not  * 00135700
*                                     already allocated in order to   * 00135800
*                                     be allocated by this service.   * 00135900
*                                                                     * 00136000
*                           X'02'     (ALLOCATE) Not enough devices   * 00136100
*                                     provided I/O responses that     * 00136200
*                                     enabled IOSFBA to validate that * 00136300
*                                     they were usable, so IOSFBA was * 00136400
*                                     not able to satisfy the         * 00136500
*                                     requested allocation.  Devices  * 00136600
*                                     must be online, usable, not     * 00136700
*                                     already allocated and must      * 00136800
*                                     properly respond to I/O         * 00136900
*                                     commands that query device      * 00137000
*                                     information in order to be      * 00137100
*                                     allocated by this service.      * 00137200
*                                                                     * 00137300
*                           X'03'     (ALLOCATE, READ, WRITE) IOSFBA  * 00137400
*                                     detected a serialization        * 00137500
*                                     problem with one of the devices * 00137600
*                                     being allocated.  A SYMREC      * 00137700
*                                     record was written.  Consider   * 00137800
*                                     varying the device offline and  * 00137900
*                                     investigate prior device usage  * 00138000
*                                     before attempting to use the    * 00138100
*                                     identified device again.        * 00138200
*                                                                     * 00138300
*                           X'04'     IOSFBA service is not available * 00138400
*                                                                     * 00138500
*                           X'05'     IOSFBA detected that the caller * 00138600
*                                     is not in task mode.  IOSFBA    * 00138700
*                                     must be invokded in task mode.  * 00138800
*                                                                     * 00138900
*                           X'06'     IOSFBA detected that the caller * 00139000
*                                     is not enabled for I/O          * 00139100
*                                     interrupts.                     * 00139200
*                                                                     * 00139300
*                                                                     * 00139400
*                                                                     * 00139500
*                 X'10'     The READ or WRITE operation was not       * 00139600
*                           successful.                               * 00139700
*                                                                     * 00139800
*                           Reason codes - None.  Check the status    * 00139900
*                           blocks for information on the failed      * 00140000
*                           I/Os.  Note that this return code is only * 00140100
*                           valid for synchronous READ and WRITE      * 00140200
*                           operations.  Asynchronous READ and WRITE  * 00140300
*                           operations are notified by a post code of * 00140400
*                           '10'x.                                    * 00140500
*                                                                     * 00140600
*                 X'14'     The invoker is not authorized to use this * 00140700
*                           programming service.                      * 00140800
*                                                                     * 00140900
*                           Reason codes                              * 00141000
*                                                                     * 00141100
*                                                                     * 00141200
*                           X'01'     The invoker must be in PSW key  * 00141300
*                                     0-7 and in supervisor state     * 00141400
*                                                                     * 00141500
*                                                                     * 00141600
*                                                                     * 00141700
*                 X'20'     An unexpected error occurred.             * 00141800
*                                                                     * 00141900
*                                                                     * 00142000
*                                                                     * 00142100
*                                                                     * 00142200
*                                                                     * 00142300
*01* REASON CODES:                                                    * 00142400
*                                                                     * 00142500
*       See return codes section.                                     * 00142600
*                                                                     * 00142700
*01* MODULE TYPE:  ASSEM MACRO                                        * 00142800
*                                                                     * 00142900
*02*   PROCESSOR:  ASSEM                                              * 00143000
*                                                                     * 00143100
*01* COMPONENT:  SC1C3                                                * 00143200
*                                                                     * 00143300
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00143400
*                                                                     * 00143500
*01* CHANGE ACTIVITY:                                                 * 00143600
*                                                                     * 00143700
*   Flag LineItem  FMID    Date   ID    Comment                       * 00143800
*                                                                     * 00143900
*    $00=OA41040  HBB7780 130815 PDSC:  z/OS FBA Services             * 00144000
*                                         (IOSFBA/HBB7790)            * 00144100
*    $01=OA51107  HBB7790 170430 PDSC:  Clarify erase processing      * 00144200
*    $P1=ME28557  HBB77A0 141219 PDSC:  Add reason code               * 00144300
****** END OF SPECIFICATIONS *****************************************/ 00144400
*/********************************************************************* 00144500
         MACRO                                                          00144600
&XLABEL  IOSFBA &ACCESS=,&DEVLISTPTR=,&DEVLISTPTR64=,&DEVDESCPTR=,     *00144700
               &DEVDESCPTR64=,&DEVCOUNT=,&MINDEVCOUNT=,&DEVIOLISTPTR=, *00144800
               &DEVIOLISTPTR64=,&ECB=,&IOTOKEN=,&REUSECP=,&RETCODE=,   *00144900
               &RSNCODE=,&PLISTVER=,&MF=                                00145000
.*                                                                      00145100
*                    MACDATE -04/28/17-<1>                              00145200
.*                                                                      00145300
.*******************************************************************    00145400
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00145500
.*******************************************************************    00145600
                    GBLC  &ZPRINT     YES=PRINT NO=NO PRINT             00145700
                    GBLC  &ZTEST      YES=TEST NO=NO TEST               00145800
                    GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX       00145900
.*                                                                      00146000
                    GBLC  &ZIOSFBA    YES=MACRO USED AT LEAST ONCE      00146100
.*******************************************************************    00146200
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00146300
.*******************************************************************    00146400
                    LCLC  &ZMS        ERROR MESSAGE WORK AREA           00146500
                    LCLC  &ZCNDX      SYSNDX CHARACTERS                 00146600
                    LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED        00146700
                    LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR       00146800
                    LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE       00146900
                    LCLA  &ZAWRK      USED AS A WORK AREA               00147000
                    LCLA  &ZASIZ      USED FOR SIZE OF VALUE            00147100
                    LCLA  &ZN         NUMERIC WORK VARIABLE             00147200
                    LCLC  &ZC         CHARACTER WORK VARIABLE           00147300
                    LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE       00147400
                    LCLA  &ZTLA       VALUE TOO LONG VARIABLE           00147500
                    LCLC  &ZMAC_G     "G" or null                       00147600
&ZMAC_G             SETC  ''                                            00147700
                    LCLC  &ZMAC_LR                                      00147800
&ZMAC_LR            SETC  'LR'                                          00147900
                    LCLC  &ZMAC_L                                       00148000
&ZMAC_L             SETC  'L'                                           00148100
                    LCLC  &ZMAC_ST                                      00148200
&ZMAC_ST            SETC  'ST'                                          00148300
                    LCLC  &ZMAC_LLGT                                    00148400
&ZMAC_LLGT          SETC  'L'                                           00148500
                    LCLC  &ZMAC_LGR                                     00148600
&ZMAC_LGR           SETC  'LR'                                          00148700
                    LCLC  &ZMAC_LG                                      00148800
&ZMAC_LG            SETC  'L'                                           00148900
                    LCLC  &ZMAC_STG                                     00149000
&ZMAC_STG           SETC  'ST'                                          00149100
                    LCLA  &ZMACRET    MACRO RETURN CODE                 00149200
&ZMACRET            SETA  0           ASSUME NO ERRORS                  00149300
.*                                                                      00149400
                    LCLC  &ZCSYSLIST(255)       NONXKEY, POS ARRAY      00149500
                    LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()        00149600
                    LCLA  &ZPLLEN     PARAMETER LIST LENGTH             00149700
                    LCLC  &ZENDBASEPL           End of base PL          00149800
                    LCLA  &ZPLWORKA   PARAMETER LIST LENGTH             00149900
.*******************************************************************    00150000
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00150100
.*******************************************************************    00150200
                    LCLA  &ZI         INDEX FOR ARRAY                   00150300
                    LCLA  &ZJ         INDEX FOR PARMS                   00150400
                    LCLA  &ZK         INDEX FOR PARSE                   00150500
                    LCLA  &ZLO        LOW RANGE VALUE                   00150600
                    LCLA  &ZHI        HIGH RANGE VALUE                  00150700
                    LCLC  &ZW         WORK AREA FOR PARM                00150800
.********************************************************************   00150900
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00151000
.********************************************************************   00151100
                    GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL           00151200
                    GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE    00151300
                    GBLA  &SYSALVL    SYSSTATE ARCHLVL                  00151400
                    GBLC  &SYSAM64    SYSSTATE AMODE64                  00151500
.*                                                                      00151600
                    AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED    00151700
                    AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED     00151800
                    SPLEVEL  TEST                                       00151900
.ZSYS2              ANOP  ,                                             00152000
                    AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1         00152100
                    AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1         00152200
                    SYSSTATE TEST                                       00152300
                    AGO   .ZSYS4                                        00152400
.ZSYS3              ANOP  ,                                             00152500
&SYSASCE            SETC  'P'         ASSUME SYSSTATE PRIMARY           00152600
.ZSYS4              ANOP  ,                                             00152700
                    AIF   ('&SYSAM64' NE 'YES').ZSYSN64                 00152800
&ZMAC_LLGT          SETC 'LLGT'                                         00152900
&ZMAC_LGR           SETC 'LGR'                                          00153000
&ZMAC_LG            SETC 'LG'                                           00153100
&ZMAC_STG           SETC 'STG'                                          00153200
.ZSYSN64            ANOP  ,                                             00153300
&ZMAC_G             SETC 'G'                                            00153400
&ZMAC_LR            SETC 'LGR'                                          00153500
&ZMAC_L             SETC 'LG'                                           00153600
&ZMAC_ST            SETC 'STG'                                          00153700
.*******************************************************************    00153800
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00153900
.*******************************************************************    00154000
                    LCLC  &XFUNCTION  ++ VALUE                          00154100
                    LCLC  &XALLOCATE  ++ VALUE                          00154200
                    LCLC  &XACCESS    ++ VALUE                          00154300
                    LCLC  &XKEYDEVLIST1         ++ NAME                 00154400
                    LCLC  &XDEVLISTPTR          ++ NAME                 00154500
                    LCLC  &XDEVLISTPTR64        ++ NAME                 00154600
                    LCLC  &XKEYDEVDESC1         ++ NAME                 00154700
                    LCLC  &XDEVDESCPTR          ++ NAME                 00154800
                    LCLC  &XDEVDESCPTR64        ++ NAME                 00154900
                    LCLC  &XDEVCOUNT  ++ NAME                           00155000
                    LCLC  &XMINDEVCOUNT         ++ NAME                 00155100
                    LCLC  &XQUERY     ++ VALUE                          00155200
                    LCLC  &XREAD      ++ VALUE                          00155300
                    LCLC  &XKEYDEVIOLIST1       ++ NAME                 00155400
                    LCLC  &XDEVIOLISTPTR        ++ NAME                 00155500
                    LCLC  &XDEVIOLISTPTR64      ++ NAME                 00155600
                    LCLC  &XECB       ++ NAME                           00155700
                    LCLC  &XRESERVED  ++ VALUE                          00155800
                    LCLC  &XIOTOKEN   ++ NAME                           00155900
                    LCLC  &XREUSECP   ++ VALUE                          00156000
                    LCLC  &XWRITE     ++ VALUE                          00156100
                    LCLC  &XERASE     ++ VALUE                          00156200
                    LCLC  &XCLEANUP   ++ VALUE                          00156300
                    LCLC  &XUNALLOCATE          ++ VALUE                00156400
                    LCLC  &XRETCODE   ++ NAME                           00156500
                    LCLC  &XRSNCODE   ++ NAME                           00156600
                    LCLA  &XPLISTVER  ++ VALUE                          00156700
                    LCLC  &XMF        ++ VALUE                          00156800
                    LCLC  &XMFCTRL    ++ NAME                           00156900
                    LCLC  &XMFATTR    ++ VALUE                          00157000
                    LCLC  &XMFSCK     ++ VALUE                          00157100
.*******************************************************************    00157200
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00157300
.*******************************************************************    00157400
                    LCLC  &ZXFUNCTION           ++ INPUT VALUE          00157500
                    LCLC  &ZXALLOCATE           ++ INPUT VALUE          00157600
                    LCLC  &ZXACCESS   ++ INPUT VALUE                    00157700
                    LCLC  &ZXKEYDEVLIST1        ++ INPUT NAME           00157800
                    LCLC  &ZXDEVLISTPTR         ++ INPUT NAME           00157900
                    LCLC  &ZXDEVLISTPTR64       ++ INPUT NAME           00158000
                    LCLC  &ZXKEYDEVDESC1        ++ OUTPUT NAME          00158100
                    LCLC  &ZXDEVDESCPTR         ++ OUTPUT NAME          00158200
                    LCLC  &ZXDEVDESCPTR64       ++ OUTPUT NAME          00158300
                    LCLC  &ZXDEVCOUNT           ++ INPUT NAME           00158400
                    LCLC  &ZXMINDEVCOUNT        ++ INPUT NAME           00158500
                    LCLC  &ZXQUERY    ++ INPUT VALUE                    00158600
                    LCLC  &ZXREAD     ++ INPUT VALUE                    00158700
                    LCLC  &ZXKEYDEVIOLIST1      ++ INPUT NAME           00158800
                    LCLC  &ZXDEVIOLISTPTR       ++ INPUT NAME           00158900
                    LCLC  &ZXDEVIOLISTPTR64     ++ INPUT NAME           00159000
                    LCLC  &ZXECB      ++ INPUT NAME                     00159100
                    LCLC  &ZXRESERVED           ++ INPUT VALUE          00159200
                    LCLC  &ZXIOTOKEN  ++ INPUT NAME                     00159300
                    LCLC  &ZXREUSECP  ++ INPUT VALUE                    00159400
                    LCLC  &ZXWRITE    ++ INPUT VALUE                    00159500
                    LCLC  &ZXERASE    ++ INPUT VALUE                    00159600
                    LCLC  &ZXCLEANUP  ++ INPUT VALUE                    00159700
                    LCLC  &ZXUNALLOCATE         ++ INPUT VALUE          00159800
                    LCLC  &ZXRETCODE  ++ OUTPUT NAME                    00159900
                    LCLC  &ZXRSNCODE  ++ OUTPUT NAME                    00160000
                    LCLC  &ZXPLISTVER           ++ INPUT VALUE          00160100
                    LCLC  &ZXMF       ++ INPUT VALUE                    00160200
                    LCLC  &ZXMFCTRL   ++ INPUT NAME                     00160300
                    LCLC  &ZXMFATTR   ++ INPUT VALUE                    00160400
                    LCLC  &ZXMFSCK    ++ INPUT VALUE                    00160500
.********************************************************************   00160600
.***AC.PLV01  PROCESS PLISTVER                                      *   00160700
.********************************************************************   00160800
&XPLISTVER      SETA  1                                                 00160900
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00161000
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00161100
&XPLISTVER      SETA  1                                                 00161200
.ZPLV0          ANOP  ,                                                 00161300
.*                                                                      00161400
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00161500
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00161600
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00161700
.*-------------------------------------------------------------------   00161800
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00161900
&ZMS            SETC  '"PLISTVER='                                      00162000
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00162100
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00162200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00162300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00162400
                AGO   .ZPVCK2                                           00162500
.ZPVCK3         ANOP  ,                                                 00162600
.*-------------------------------------------------------------------   00162700
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00162800
&ZMS            SETC  '"PLISTVER='                                      00162900
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00163000
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00163100
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00163200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00163300
                AGO   .ZPVCKE                                           00163400
.ZPVCK2         ANOP  ,                                                 00163500
.*-------------------------------------------------------------------   00163600
&ZCVAL          SETC  '&PLISTVER(1)'                                    00163700
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00163800
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00163900
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00164000
                AIF   (&ZN LT 1).ZPVCK6    TOO LOW                      00164100
                AIF   (&ZN LE 1).ZPVCK4A   NOT HIGH                     00164200
.ZPVCK6         ANOP  ,                                                 00164300
&ZMS            SETC  '"PLISTVER='                                      00164400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00164500
&ZMS            SETC  '&ZMS THE RANGE IS "1-1"'                         00164600
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00164700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00164800
&XPLISTVER      SETA  1                                                 00164900
                AGO   .ZPVCKE                                           00165000
.*-------------------------------------------------------------------   00165100
.ZPVCK4A        ANOP  ,                                                 00165200
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00165300
&ZMS            SETC  'PLISTVER='                                       00165400
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00165500
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00165600
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00165700
                MNOTE 8,' &ZMS IS REQUIRED.'                            00165800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00165900
                AGO   .ZPVCK5                                           00166000
.ZPVCK4         ANOP  ,                                                 00166100
&XPLISTVER      SETA  &PLISTVER(1)                                      00166200
.ZPVCK5         ANOP  ,                                                 00166300
.ZPVCKE         ANOP  ,                                                 00166400
.********************************************************************   00166500
.***AG.MF01 PROCESS MF MACRO FORMS                                      00166600
.********************************************************************   00166700
                    ACTR  10000                                         00166800
.*------------------------------------------------------------------    00166900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00167000
&XMF                SETC  ''          INITIALIZE XVARIABLE              00167100
.*-------------------------------------------------------------------   00167200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00167300
.ZG95               ANOP  ,                                             00167400
&ZTLC               SETC 'S'                                            00167500
                    AIF   ('&MF(1)' NE '&ZTLC').ZG96                    00167600
&XMF                SETC  'S'         SET KEYWORD                       00167700
                    AIF   (N'&MF LE 1).ZG95A    CK NUM                  00167800
&ZMS                SETC  '"MF='                                        00167900
&ZMS                SETC  '&ZMS.&MF"'                                   00168000
&ZMS                SETC  '&ZMS "MF"'                                   00168100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00168200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00168300
.ZG95A              ANOP  ,                                             00168400
.*-------------------------------------------------------------------   00168500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00168600
.ZG96               ANOP  ,                                             00168700
&ZTLC               SETC 'L'                                            00168800
                    AIF   ('&MF(1)' NE '&ZTLC').ZG103                   00168900
&XMF                SETC  'L'         SET KEYWORD                       00169000
                    AIF   (N'&MF LE 3).ZG96A    CK NUM                  00169100
&ZMS                SETC  '"MF='                                        00169200
&ZMS                SETC  '&ZMS.&MF"'                                   00169300
&ZMS                SETC  '&ZMS "MF"'                                   00169400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'          00169500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00169600
.ZG96A              ANOP  ,                                             00169700
.*-------------------------------------------------------------------   00169800
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00169900
                    AIF   (N'&SYSLIST NE 0).ZG96B  POSITIONALS?         00170000
                    AIF   ('&ACCESS' NE '').ZG96B  KEYS?                00170100
                    AIF   ('&DEVLISTPTR' NE '').ZG96B  KEYS?            00170200
                    AIF   ('&DEVLISTPTR64' NE '').ZG96B  KEYS?          00170300
                    AIF   ('&DEVDESCPTR' NE '').ZG96B  KEYS?            00170400
                    AIF   ('&DEVDESCPTR64' NE '').ZG96B  KEYS?          00170500
                    AIF   ('&DEVCOUNT' NE '').ZG96B  KEYS?              00170600
                    AIF   ('&MINDEVCOUNT' NE '').ZG96B  KEYS?           00170700
                    AIF   ('&DEVIOLISTPTR' NE '').ZG96B  KEYS?          00170800
                    AIF   ('&DEVIOLISTPTR64' NE '').ZG96B  KEYS?        00170900
                    AIF   ('&ECB' NE '').ZG96B  KEYS?                   00171000
                    AIF   ('&IOTOKEN' NE '').ZG96B  KEYS?               00171100
                    AIF   ('&REUSECP' NE '').ZG96B  KEYS?               00171200
                    AIF   ('&RETCODE' NE '').ZG96B  KEYS?               00171300
                    AIF   ('&RSNCODE' NE '').ZG96B  KEYS?               00171400
                    AGO    .ZG96C     INVOCATION OKAY                   00171500
.ZG96B              ANOP  ,                                             00171600
&ZMS                SETC  'THE "L" FORM OF "MF"'                        00171700
&ZMS                SETC  '&ZMS CAN ONLY HAVE'                          00171800
&ZMS                SETC  '&ZMS THE "PLISTVER" KEY'                     00171900
                    MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'        00172000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00172100
.ZG96C              ANOP  ,                                             00172200
.*-------------------------------------------------------------------   00172300
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00172400
&ZXMFCTRL           SETC  'INPUT'     SET IN/OUTPUT                     00172500
&XMFCTRL            SETC  '&MF(2,1)'  SET XVARIABLE                     00172600
                    AIF   (N'&MF(2) GT 1).ZG98B  MULTI                  00172700
&XMFCTRL            SETC  '&MF(2)'    SET XVARIABLE                     00172800
.ZG98B              AIF   (K'&MF(2) GT 0).ZG98C                         00172900
&ZXMFCTRL           SETC  ''          RESET IN/OUTPUT                   00173000
&ZMS                SETC  ' '                                           00173100
&ZMS                SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'           00173200
                    MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                  00173300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00173400
.ZG98C              ANOP  ,                                             00173500
.*-------------------------------------------------------------------   00173600
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00173700
                    AIF   (K'&ZXMFCTRL LE 0).ZG98P  NOT I/O             00173800
                    AIF   ('&XMFCTRL'(1,1) NE '(').ZG98P                00173900
&ZXMFCTRL           SETC  ''          RESET IN/OUTPUT                   00174000
&ZMS                SETC  '"MF='                                        00174100
&ZMS                SETC  '&ZMS.&MF"'                                   00174200
&ZMS                SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'     00174300
                    MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'             00174400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00174500
.ZG98P              ANOP  ,                                             00174600
.*-------------------------------------------------------------------   00174700
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00174800
&ZXMFATTR           SETC  'INPUT'     SET IN/OUTPUT                     00174900
&XMFATTR            SETC  '0D'                                          00175000
                    AIF   (K'&MF(3) LE 0).ZG101B  PARM                  00175100
&XMFATTR            SETC  '&MF(3,1)'  SET XVARIABLE                     00175200
                    AIF   (N'&MF(3) GT 1).ZG101B  MULTI                 00175300
&XMFATTR            SETC  '&MF(3)'    SET XVARIABLE                     00175400
.ZG101B             ANOP  ,                                             00175500
.*-------------------------------------------------------------------   00175600
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00175700
                    AIF   (K'&ZXMFATTR LE 0).ZG101P  NOT I/O            00175800
                    AIF   ('&XMFATTR'(1,1) NE '(').ZG101P               00175900
&ZXMFATTR           SETC  ''          RESET IN/OUTPUT                   00176000
&ZMS                SETC  '"MF='                                        00176100
&ZMS                SETC  '&ZMS.&MF"'                                   00176200
&ZMS                SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'     00176300
                    MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'             00176400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00176500
.ZG101P             ANOP  ,                                             00176600
.*-------------------------------------------------------------------   00176700
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00176800
                    AIF   (K'&ZXMFATTR LE 0).ZG101S  NOT I/O            00176900
                    AIF   (K'&XMFATTR LE 60).ZG101S  LNG OK             00177000
&ZXMFATTR           SETC  ''          RESET IN/OUTPUT                   00177100
&ZMS                SETC  '"MF='                                        00177200
&ZMS                SETC  '&ZMS.&MF"'                                   00177300
&ZMS                SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'         00177400
                    MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'            00177500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00177600
.ZG101S             ANOP  ,                                             00177700
.*-------------------------------------------------------------------   00177800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00177900
.ZG103              ANOP  ,                                             00178000
&ZTLC               SETC 'E'                                            00178100
                    AIF   ('&MF(1)' NE '&ZTLC').ZG111                   00178200
&XMF                SETC  'E'         SET KEYWORD                       00178300
                    AIF   (N'&MF LE 3).ZG103A   CK NUM                  00178400
&ZMS                SETC  '"MF='                                        00178500
&ZMS                SETC  '&ZMS.&MF"'                                   00178600
&ZMS                SETC  '&ZMS "MF"'                                   00178700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'          00178800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00178900
.ZG103A             ANOP  ,                                             00179000
.*-------------------------------------------------------------------   00179100
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00179200
&ZXMFCTRL           SETC  'INPUT'     SET IN/OUTPUT                     00179300
&XMFCTRL            SETC  '&MF(2,1)'  SET XVARIABLE                     00179400
                    AIF   (N'&MF(2) GT 1).ZG105B  MULTI                 00179500
&XMFCTRL            SETC  '&MF(2)'    SET XVARIABLE                     00179600
.ZG105B             AIF   (K'&MF(2) GT 0).ZG105C                        00179700
&ZXMFCTRL           SETC  ''          RESET IN/OUTPUT                   00179800
&ZMS                SETC  'WHEN "E" IS SPECIFIED'                       00179900
&ZMS                SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'           00180000
                    MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                  00180100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00180200
.ZG105C             ANOP  ,                                             00180300
.*-------------------------------------------------------------------   00180400
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00180500
                    AIF   (K'&ZXMFCTRL LE 0).ZG105R  NOT I/O            00180600
                    AIF   ('&XMFCTRL'(1,1) NE '(').ZG105R               00180700
&ZCGPR              SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                    00180800
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG105P                 00180900
                    AIF   (K'&ZCGPR GT 2).ZG105Q                        00181000
                    AIF   ('&ZCGPR' EQ '0').ZG105Q                      00181100
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00181200
                    AIF   (T'&ZCGPR NE 'N').ZG105Q  INVALID REG NAME    00181300
.ZG105P             ANOP  ,                                             00181400
                    AIF   (T'&ZCGPR NE 'N').ZG105R  NON NUMERIC         00181500
                    AIF   ('&ZCGPR' LT '1').ZG105Q                      00181600
                    AIF   ('&ZCGPR' LE '12').ZG105R                     00181700
.ZG105Q             ANOP  ,                                             00181800
&ZMS                SETC  '"MF='                                        00181900
&ZMS                SETC  '&ZMS.&MF"'                                   00182000
&ZMS                SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'     00182100
                    MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'              00182200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00182300
.ZG105R             ANOP  ,                                             00182400
.*-------------------------------------------------------------------   00182500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00182600
&XMFSCK             SETC  ''          INITIALIZE XVARIABLE              00182700
.ZG109A   AIF   ('&MF(3)' NE 'COMPLETE').ZG110A                         00182800
&XMFSCK             SETC  'COMPLETE'  SET KEYWORD                       00182900
.*-------------------------------------------------------------------   00183000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00183100
.ZG110A             AIF   (K'&XMFSCK GT 0).ZG110C  KEYWORD              00183200
                    AIF   (K'&MF(3) LE 0).ZG110B                        00183300
&ZMS                SETC  '"MF='                                        00183400
&ZMS                SETC  '&ZMS.&MF"'                                   00183500
&ZMS                SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '     00183600
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00183700
&ZMS                SETC  '&ZMS "COMPLETE".'                            00183800
                    MNOTE 8,' &ZMS '                                    00183900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00184000
.ZG110B             ANOP  ,                                             00184100
&XMFSCK             SETC  'COMPLETE'  SET DEFAULT KEYWORD               00184200
.ZG110C             ANOP  ,                                             00184300
&ZXMFSCK            SETC  'INPUT'     SET IN/OUTPUT                     00184400
.*------------------------------------------------------------------    00184500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00184600
.ZG111              ANOP  ,                                             00184700
&ZXMF               SETC  'INPUT'     SET IN/OUTPUT                     00184800
                    AIF   (K'&XMF GT 0).ZG111E  VALID ARG               00184900
                    AIF   (T'&MF EQ 'O').ZG111D  OMITTED                00185000
&ZASYSLNDX          SETA  0                                             00185100
.ZG111A             ANOP  ,           POSITIONAL MACRO KEY              00185200
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00185300
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG111C             00185400
&ZTLC               SETC 'MF'                                           00185500
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG111A    00185600
.ZG111B             ANOP  ,                                             00185700
&ZXMF               SETC  ''          RESET IN/OUTPUT                   00185800
&ZMS                SETC  'THE "MF" KEY'                                00185900
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00186000
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00186100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00186200
                    AGO   .ZG111E                                       00186300
.ZG111C             ANOP  ,                                             00186400
&ZXMF               SETC  ''          RESET IN/OUTPUT                   00186500
&ZMS                SETC  '"MF='                                        00186600
&ZMS                SETC  '&ZMS.&MF"'                                   00186700
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00186800
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00186900
&ZMS                SETC  '&ZMS "S",'                                   00187000
&ZMS                SETC  '&ZMS "L",'                                   00187100
&ZMS                SETC  '&ZMS OR "E".'                                00187200
                    MNOTE 8,' &ZMS '                                    00187300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00187400
                    AGO   .ZG111E                                       00187500
.ZG111D             ANOP  ,                                             00187600
&XMF                SETC  'S'         SET DEFAULT KEYWORD               00187700
&XMFSCK             SETC  'COMPLETE'  COMPLETE CHECKING                 00187800
.ZG111E             ANOP  ,                                             00187900
.********************************************************************   00188000
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00188100
.********************************************************************   00188200
                    ACTR  10000                                         00188300
.*-------------------------------------------------------------------   00188400
.***AG.MF03 MF=(SLE)                                                    00188500
                    AIF   ('&XMF' EQ 'L').ZGMFX                         00188600
.*-------------------------------------------------------------------   00188700
.***AG.KMEKY05 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00188800
&XFUNCTION          SETC  ''          INITIALIZE XVARIABLE              00188900
&ZASYSLNDX          SETA  0                                             00189000
.ZG2A               ANOP  ,           POSITIONAL KEY SEARCH             00189100
&ZASYSLNDX          SETA  &ZASYSLNDX+1          NEXT POSITIONAL         00189200
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG2B  DONE                    00189300
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG2A             00189400
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'ALLOCATE').ZG2A              00189500
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00189600
&ZXFUNCTION         SETC  'INPUT'     SET IN/OUTPUT                     00189700
&XFUNCTION          SETC  'ALLOCATE'  SET XVARIABLE                     00189800
&ZXALLOCATE         SETC  'INPUT'     SET IN/OUTPUT                     00189900
&XALLOCATE          SETC  'ALLOCATE'  SET XVARIABLE PARM                00190000
.ZG2B               ANOP  ,                                             00190100
.*-------------------------------------------------------------------   00190200
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00190300
&ZASYSLNDX          SETA  0                                             00190400
.ZG22A              ANOP  ,           POSITIONAL KEY SEARCH             00190500
&ZASYSLNDX          SETA  &ZASYSLNDX+1          NEXT POSITIONAL         00190600
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG22C  DONE                   00190700
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG22A            00190800
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'QUERY').ZG22A                00190900
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00191000
                    AIF   (K'&XFUNCTION LE 0).ZG22B  VALID              00191100
&ZMS                SETC  '"QUERY'                                      00191200
&ZMS                SETC  '&ZMS."'                                      00191300
&ZMS                SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'         00191400
&ZMS                SETC  '&ZMS "&XFUNCTION"'                           00191500
                    MNOTE 8,' &ZMS KEY.'                                00191600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00191700
                    AGO   .ZG22C                                        00191800
.*                                                                      00191900
.ZG22B              ANOP  ,                                             00192000
&ZXFUNCTION         SETC  'INPUT'     SET IN/OUTPUT                     00192100
&XFUNCTION          SETC  'QUERY'     SET XVARIABLE                     00192200
&ZXQUERY            SETC  'INPUT'     SET IN/OUTPUT                     00192300
&XQUERY             SETC  'QUERY'     SET XVARIABLE PARM                00192400
.ZG22C              ANOP  ,                                             00192500
.*-------------------------------------------------------------------   00192600
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00192700
&ZASYSLNDX          SETA  0                                             00192800
.ZG31A              ANOP  ,           POSITIONAL KEY SEARCH             00192900
&ZASYSLNDX          SETA  &ZASYSLNDX+1          NEXT POSITIONAL         00193000
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG31C  DONE                   00193100
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG31A            00193200
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'READ').ZG31A                 00193300
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00193400
                    AIF   (K'&XFUNCTION LE 0).ZG31B  VALID              00193500
&ZMS                SETC  '"READ'                                       00193600
&ZMS                SETC  '&ZMS."'                                      00193700
&ZMS                SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'         00193800
&ZMS                SETC  '&ZMS "&XFUNCTION"'                           00193900
                    MNOTE 8,' &ZMS KEY.'                                00194000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00194100
                    AGO   .ZG31C                                        00194200
.*                                                                      00194300
.ZG31B              ANOP  ,                                             00194400
&ZXFUNCTION         SETC  'INPUT'     SET IN/OUTPUT                     00194500
&XFUNCTION          SETC  'READ'      SET XVARIABLE                     00194600
&ZXREAD             SETC  'INPUT'     SET IN/OUTPUT                     00194700
&XREAD              SETC  'READ'      SET XVARIABLE PARM                00194800
.ZG31C              ANOP  ,                                             00194900
.*-------------------------------------------------------------------   00195000
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00195100
&ZASYSLNDX          SETA  0                                             00195200
.ZG50A              ANOP  ,           POSITIONAL KEY SEARCH             00195300
&ZASYSLNDX          SETA  &ZASYSLNDX+1          NEXT POSITIONAL         00195400
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG50C  DONE                   00195500
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG50A            00195600
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'WRITE').ZG50A                00195700
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00195800
                    AIF   (K'&XFUNCTION LE 0).ZG50B  VALID              00195900
&ZMS                SETC  '"WRITE'                                      00196000
&ZMS                SETC  '&ZMS."'                                      00196100
&ZMS                SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'         00196200
&ZMS                SETC  '&ZMS "&XFUNCTION"'                           00196300
                    MNOTE 8,' &ZMS KEY.'                                00196400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00196500
                    AGO   .ZG50C                                        00196600
.*                                                                      00196700
.ZG50B              ANOP  ,                                             00196800
&ZXFUNCTION         SETC  'INPUT'     SET IN/OUTPUT                     00196900
&XFUNCTION          SETC  'WRITE'     SET XVARIABLE                     00197000
&ZXWRITE            SETC  'INPUT'     SET IN/OUTPUT                     00197100
&XWRITE             SETC  'WRITE'     SET XVARIABLE PARM                00197200
.ZG50C              ANOP  ,                                             00197300
.*-------------------------------------------------------------------   00197400
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00197500
&ZASYSLNDX          SETA  0                                             00197600
.ZG69A              ANOP  ,           POSITIONAL KEY SEARCH             00197700
&ZASYSLNDX          SETA  &ZASYSLNDX+1          NEXT POSITIONAL         00197800
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG69C  DONE                   00197900
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG69A            00198000
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'ERASE').ZG69A                00198100
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00198200
                    AIF   (K'&XFUNCTION LE 0).ZG69B  VALID              00198300
&ZMS                SETC  '"ERASE'                                      00198400
&ZMS                SETC  '&ZMS."'                                      00198500
&ZMS                SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'         00198600
&ZMS                SETC  '&ZMS "&XFUNCTION"'                           00198700
                    MNOTE 8,' &ZMS KEY.'                                00198800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00198900
                    AGO   .ZG69C                                        00199000
.*                                                                      00199100
.ZG69B              ANOP  ,                                             00199200
&ZXFUNCTION         SETC  'INPUT'     SET IN/OUTPUT                     00199300
&XFUNCTION          SETC  'ERASE'     SET XVARIABLE                     00199400
&ZXERASE            SETC  'INPUT'     SET IN/OUTPUT                     00199500
&XERASE             SETC  'ERASE'     SET XVARIABLE PARM                00199600
.ZG69C              ANOP  ,                                             00199700
.*-------------------------------------------------------------------   00199800
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00199900
&ZASYSLNDX          SETA  0                                             00200000
.ZG74A              ANOP  ,           POSITIONAL KEY SEARCH             00200100
&ZASYSLNDX          SETA  &ZASYSLNDX+1          NEXT POSITIONAL         00200200
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG74C  DONE                   00200300
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG74A            00200400
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'CLEANUP').ZG74A              00200500
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00200600
                    AIF   (K'&XFUNCTION LE 0).ZG74B  VALID              00200700
&ZMS                SETC  '"CLEANUP'                                    00200800
&ZMS                SETC  '&ZMS."'                                      00200900
&ZMS                SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'         00201000
&ZMS                SETC  '&ZMS "&XFUNCTION"'                           00201100
                    MNOTE 8,' &ZMS KEY.'                                00201200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00201300
                    AGO   .ZG74C                                        00201400
.*                                                                      00201500
.ZG74B              ANOP  ,                                             00201600
&ZXFUNCTION         SETC  'INPUT'     SET IN/OUTPUT                     00201700
&XFUNCTION          SETC  'CLEANUP'   SET XVARIABLE                     00201800
&ZXCLEANUP          SETC  'INPUT'     SET IN/OUTPUT                     00201900
&XCLEANUP           SETC  'CLEANUP'   SET XVARIABLE PARM                00202000
.ZG74C              ANOP  ,                                             00202100
.*-------------------------------------------------------------------   00202200
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00202300
&ZASYSLNDX          SETA  0                                             00202400
.ZG78A              ANOP  ,           POSITIONAL KEY SEARCH             00202500
&ZASYSLNDX          SETA  &ZASYSLNDX+1          NEXT POSITIONAL         00202600
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG78C  DONE                   00202700
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG78A            00202800
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'UNALLOCATE').ZG78A           00202900
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00203000
                    AIF   (K'&XFUNCTION LE 0).ZG78B  VALID              00203100
&ZMS                SETC  '"UNALLOCATE'                                 00203200
&ZMS                SETC  '&ZMS."'                                      00203300
&ZMS                SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'         00203400
&ZMS                SETC  '&ZMS "&XFUNCTION"'                           00203500
                    MNOTE 8,' &ZMS KEY.'                                00203600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00203700
                    AGO   .ZG78C                                        00203800
.*                                                                      00203900
.ZG78B              ANOP  ,                                             00204000
&ZXFUNCTION         SETC  'INPUT'     SET IN/OUTPUT                     00204100
&XFUNCTION          SETC  'UNALLOCATE'          SET XVARIABLE           00204200
&ZXUNALLOCATE       SETC  'INPUT'     SET IN/OUTPUT                     00204300
&XUNALLOCATE        SETC  'UNALLOCATE'          SET XVARIABLE PARM      00204400
.ZG78C              ANOP  ,                                             00204500
.*------------------------------------------------------------------    00204600
.***AG.KME4Y09 VALUE, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED          00204700
                    AIF   (K'&XFUNCTION GT 0).ZG83B                     00204800
&ZXFUNCTION         SETC  ''          RESET IN/OUTPUT                   00204900
&ZXALLOCATE         SETC  ''          RESET IN/OUTPUT                   00205000
&XFUNCTION          SETC  ''          ENSURE NULL                       00205100
&XALLOCATE          SETC  ''          ENSURE NULL                       00205200
&ZMS                SETC  'ONE OF THE FOLLOWING'                        00205300
&ZMS                SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'           00205400
&ZMS                SETC  '&ZMS REQUIRED:'                              00205500
&ZMS                SETC  '&ZMS "ALLOCATE",'    VALID ME KEY            00205600
&ZMS                SETC  '&ZMS "QUERY",'       VALID ME KEY            00205700
&ZMS                SETC  '&ZMS "READ",'        VALID ME KEY            00205800
&ZMS                SETC  '&ZMS "WRITE",'       VALID ME KEY            00205900
&ZMS                SETC  '&ZMS "ERASE",'       VALID ME KEY            00206000
&ZMS                SETC  '&ZMS "CLEANUP",'     VALID ME KEY            00206100
&ZMS                SETC  '&ZMS OR "UNALLOCATE".'  VALID ME KEY         00206200
                    MNOTE 8,' &ZMS '                                    00206300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00206400
.ZG83B              ANOP  ,                                             00206500
.*-------------------------------------------------------------------   00206600
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00206700
.ZG2ZY  AIF    ('&XFUNCTION' NE 'ALLOCATE').ZG22ZY                      00206800
.*-------------------------------------------------------------------   00206900
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00207000
&ZCVAL              SETC ''           ERROR KEY FIELD                   00207100
.ZG2I0              AIF   (K'&DEVIOLISTPTR LE 0).ZG2I1                  00207200
&ZCVAL              SETC '&ZCVAL DEVIOLISTPTR'  DISALLOWED KEY          00207300
.ZG2I1              AIF   (K'&DEVIOLISTPTR64 LE 0).ZG2I2                00207400
&ZCVAL              SETC '&ZCVAL DEVIOLISTPTR64'  DISALLOWED KEY        00207500
.ZG2I2              AIF   (K'&ECB LE 0).ZG2I3                           00207600
&ZCVAL              SETC '&ZCVAL ECB'           DISALLOWED KEY          00207700
.ZG2I3              AIF   (K'&XRESERVED LE 0).ZG2I4                     00207800
&ZCVAL              SETC '&ZCVAL XRESERVED'     DISALLOWED KEY          00207900
.ZG2I4              AIF   (K'&IOTOKEN LE 0).ZG2I5                       00208000
&ZCVAL              SETC '&ZCVAL IOTOKEN'       DISALLOWED KEY          00208100
.ZG2I5              AIF   (K'&REUSECP LE 0).ZG2I6                       00208200
&ZCVAL              SETC '&ZCVAL REUSECP'       DISALLOWED KEY          00208300
.ZG2I6              AIF   (K'&XRESERVED LE 0).ZG2I7                     00208400
&ZCVAL              SETC '&ZCVAL XRESERVED'     DISALLOWED KEY          00208500
.ZG2I7              AIF   (K'&ZCVAL LE 0).ZG2J  KEY                     00208600
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00208700
&ZMS                SETC  '"ALLOCATE'                                   00208800
&ZMS                SETC  '&ZMS."'                                      00208900
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00209000
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00209100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00209200
.ZG2J               ANOP  ,                                             00209300
.*----------------------------------------------------------------***   00209400
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00209500
                    AIF   (N'&ACCESS LE 1).ZG4A  CK NUM                 00209600
&ZMS                SETC  '"ACCESS='                                    00209700
&ZMS                SETC  '&ZMS.&ACCESS"'                               00209800
&ZMS                SETC  '&ZMS "ACCESS"'                               00209900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00210000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00210100
.ZG4A               ANOP  ,                                             00210200
.*-------------------------------------------------------------------   00210300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00210400
&XACCESS            SETC  ''          INITIALIZE XVARIABLE              00210500
.ZG5A   AIF   ('&ACCESS(1)' NE 'SINGLE').ZG6A                           00210600
&XACCESS            SETC  'SINGLE'    SET KEYWORD                       00210700
.*-------------------------------------------------------------------   00210800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00210900
.ZG6A   AIF   ('&ACCESS(1)' NE 'READ').ZG7A                             00211000
&XACCESS            SETC  'READ'      SET KEYWORD                       00211100
.*-------------------------------------------------------------------   00211200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00211300
.ZG7A   AIF   ('&ACCESS(1)' NE 'WRITE').ZG8A                            00211400
&XACCESS            SETC  'WRITE'     SET KEYWORD                       00211500
.*-------------------------------------------------------------------   00211600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00211700
.ZG8A   AIF   ('&ACCESS(1)' NE 'ANY').ZG9A                              00211800
&XACCESS            SETC  'ANY'       SET KEYWORD                       00211900
.*-------------------------------------------------------------------   00212000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00212100
.ZG9A               AIF   (K'&XACCESS GT 0).ZG9C  KEYWORD               00212200
                    AIF   (K'&ACCESS(1) LE 0).ZG9B                      00212300
&ZMS                SETC  '"ACCESS='                                    00212400
&ZMS                SETC  '&ZMS.&ACCESS"'                               00212500
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00212600
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00212700
&ZMS                SETC  '&ZMS "SINGLE",'                              00212800
&ZMS                SETC  '&ZMS "READ",'                                00212900
&ZMS                SETC  '&ZMS "WRITE",'                               00213000
&ZMS                SETC  '&ZMS OR "ANY".'                              00213100
                    MNOTE 8,' &ZMS '                                    00213200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00213300
.ZG9B               ANOP  ,                                             00213400
&XACCESS            SETC  'SINGLE'    SET DEFAULT KEYWORD               00213500
.ZG9C               ANOP  ,                                             00213600
&ZXACCESS           SETC  'INPUT'     SET IN/OUTPUT                     00213700
.*----------------------------------------------------------------***   00213800
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00213900
&XKEYDEVLIST1       SETC  ''          INITIALIZE XVARIABLE              00214000
                    AIF   (K'&DEVLISTPTR LE 0).ZG11C                    00214100
&ZXKEYDEVLIST1      SETC  'INPUT'     SET IN/OUTPUT                     00214200
&XKEYDEVLIST1       SETC  'DEVLISTPTR'          SET XVARIABLE           00214300
&ZXDEVLISTPTR       SETC  'INPUT'     SET IN/OUTPUT                     00214400
&XDEVLISTPTR        SETC  '&DEVLISTPTR(1)'      SET XVARIABLE PARM      00214500
                    AIF   (N'&DEVLISTPTR GT 1).ZG11A                    00214600
&XDEVLISTPTR        SETC  '&DEVLISTPTR'         SET XVARIABLE PARM      00214700
.ZG11A              AIF   (N'&DEVLISTPTR LE 1).ZG11B  CK NUM            00214800
&ZMS                SETC  '"DEVLISTPTR='                                00214900
&ZMS                SETC  '&ZMS.&DEVLISTPTR"'                           00215000
&ZMS                SETC  '&ZMS "DEVLISTPTR"'                           00215100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00215200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00215300
.ZG11B              AIF   (K'&XDEVLISTPTR GT 0).ZG11C  ONE PARM         00215400
&ZXKEYDEVLIST1      SETC  ''          RESET IN/OUTPUT                   00215500
&ZXDEVLISTPTR       SETC  ''          RESET IN/OUTPUT                   00215600
&ZMS                SETC  ' '                                           00215700
&ZMS                SETC  '&ZMS "DEVLISTPTR" KEY AND ITS'               00215800
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00215900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00216000
.ZG11C              ANOP  ,                                             00216100
.*----------------------------------------------------------------***   00216200
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00216300
                    AIF   (K'&DEVLISTPTR64 LE 0).ZG12D  NO ME KEY       00216400
                    AIF   (N'&DEVLISTPTR64 LE 1).ZG12A  CK NUM          00216500
&ZMS                SETC  '"DEVLISTPTR64='                              00216600
&ZMS                SETC  '&ZMS.&DEVLISTPTR64"'                         00216700
&ZMS                SETC  '&ZMS "DEVLISTPTR64"'                         00216800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00216900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00217000
.ZG12A              AIF   (K'&XKEYDEVLIST1 LE 0).ZG12B                  00217100
&ZMS                SETC  '"DEVLISTPTR64'                               00217200
&ZMS                SETC  '&ZMS.=&DEVLISTPTR64"'                        00217300
&ZMS                SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'         00217400
&ZMS                SETC  '&ZMS "&XKEYDEVLIST1"'                        00217500
                    MNOTE 8,' &ZMS KEY.'                                00217600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00217700
                    AGO   .ZG12D                                        00217800
.*                                                                      00217900
.ZG12B              ANOP  ,                                             00218000
&ZXKEYDEVLIST1      SETC  'INPUT'     SET IN/OUTPUT                     00218100
&XKEYDEVLIST1       SETC  'DEVLISTPTR64'        SET XVARIABLE           00218200
&ZXDEVLISTPTR64     SETC  'INPUT'     SET IN/OUTPUT                     00218300
&XDEVLISTPTR64      SETC  '&DEVLISTPTR64(1)'    SET XVARIABLE PARM      00218400
                    AIF   (N'&DEVLISTPTR64 GT 1).ZG12C                  00218500
&XDEVLISTPTR64      SETC  '&DEVLISTPTR64'       SET XVARIABLE PARM      00218600
.ZG12C              AIF   (K'&XDEVLISTPTR64 GT 0).ZG12D  ONE PARM       00218700
&ZXKEYDEVLIST1      SETC  ''          RESET IN/OUTPUT                   00218800
&ZXDEVLISTPTR64     SETC  ''          RESET IN/OUTPUT                   00218900
&ZMS                SETC  ' '                                           00219000
&ZMS                SETC  '&ZMS "DEVLISTPTR64" KEY AND ITS'             00219100
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00219200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00219300
.ZG12D              ANOP  ,                                             00219400
.*------------------------------------------------------------------    00219500
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00219600
                    AIF   (K'&XKEYDEVLIST1 GT 0).ZG13B                  00219700
&ZXKEYDEVLIST1      SETC  ''          RESET IN/OUTPUT                   00219800
&ZXDEVLISTPTR       SETC  ''          RESET IN/OUTPUT                   00219900
&XKEYDEVLIST1       SETC  ''          ENSURE NULL                       00220000
&XDEVLISTPTR        SETC  ''          ENSURE NULL                       00220100
&ZMS                SETC  'ONE OF THE FOLLOWING'                        00220200
&ZMS                SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'           00220300
&ZMS                SETC  '&ZMS REQUIRED:'                              00220400
&ZMS                SETC  '&ZMS "DEVLISTPTR"'   VALID ME KEY            00220500
&ZMS                SETC  '&ZMS OR "DEVLISTPTR64".'  VALID ME KEY       00220600
                    MNOTE 8,' &ZMS '                                    00220700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00220800
.ZG13B              ANOP  ,                                             00220900
.*-------------------------------------------------------------------   00221000
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00221100
.ZG11ZY  AIF    ('&XKEYDEVLIST1' NE 'DEVLISTPTR').ZG12ZY                00221200
.*-------------------------------------------------------------------   00221300
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00221400
                    AIF   (K'&ZXDEVLISTPTR LE 0).ZG11R  NOT I/O         00221500
                    AIF   ('&XDEVLISTPTR'(1,1) NE '(').ZG11R            00221600
&ZCGPR              SETC  '&XDEVLISTPTR'(2,K'&XDEVLISTPTR-2)            00221700
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                  00221800
                    AIF   (K'&ZCGPR GT 2).ZG11Q                         00221900
                    AIF   ('&ZCGPR' EQ '0').ZG11Q                       00222000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00222100
                    AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME     00222200
.ZG11P              ANOP  ,                                             00222300
                    AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC          00222400
                    AIF   ('&ZCGPR' LT '2').ZG11Q                       00222500
                    AIF   ('&ZCGPR' LE '12').ZG11R                      00222600
.ZG11Q              ANOP  ,                                             00222700
&ZMS                SETC  '"DEVLISTPTR='                                00222800
&ZMS                SETC  '&ZMS.&DEVLISTPTR"'                           00222900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00223000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00223100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00223200
.ZG11R              ANOP  ,                                             00223300
.*-------------------------------------------------------------------   00223400
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00223500
.ZG12ZY  AIF    ('&XKEYDEVLIST1' NE 'DEVLISTPTR64').ZG13ZY              00223600
.*-------------------------------------------------------------------   00223700
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00223800
                    AIF   (K'&ZXDEVLISTPTR64 LE 0).ZG12R  NOT I/O       00223900
                    AIF   ('&XDEVLISTPTR64'(1,1) NE '(').ZG12R          00224000
&ZCGPR              SETC  '&XDEVLISTPTR64'(2,K'&XDEVLISTPTR64-2)        00224100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG12P                  00224200
                    AIF   (K'&ZCGPR GT 2).ZG12Q                         00224300
                    AIF   ('&ZCGPR' EQ '0').ZG12Q                       00224400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00224500
                    AIF   (T'&ZCGPR NE 'N').ZG12Q  INVALID REG NAME     00224600
.ZG12P              ANOP  ,                                             00224700
                    AIF   (T'&ZCGPR NE 'N').ZG12R  NON NUMERIC          00224800
                    AIF   ('&ZCGPR' LT '2').ZG12Q                       00224900
                    AIF   ('&ZCGPR' LE '12').ZG12R                      00225000
.ZG12Q              ANOP  ,                                             00225100
&ZMS                SETC  '"DEVLISTPTR64='                              00225200
&ZMS                SETC  '&ZMS.&DEVLISTPTR64"'                         00225300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00225400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00225500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00225600
.ZG12R              ANOP  ,                                             00225700
.*-------------------------------------------------------------------   00225800
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00225900
.ZG13ZY             ANOP ,            END MUTUALLY EXCLUSIVE KEYS       00226000
.*----------------------------------------------------------------***   00226100
.***AG.KMEKY01 NAME, RQD OUTPUT, ME KEYS -XVARIABLE                     00226200
&XKEYDEVDESC1       SETC  ''          INITIALIZE XVARIABLE              00226300
                    AIF   (K'&DEVDESCPTR LE 0).ZG15C                    00226400
&ZXKEYDEVDESC1      SETC  'OUTPUT'    SET IN/OUTPUT                     00226500
&XKEYDEVDESC1       SETC  'DEVDESCPTR'          SET XVARIABLE           00226600
&ZXDEVDESCPTR       SETC  'OUTPUT'    SET IN/OUTPUT                     00226700
&XDEVDESCPTR        SETC  '&DEVDESCPTR(1)'      SET XVARIABLE PARM      00226800
                    AIF   (N'&DEVDESCPTR GT 1).ZG15A                    00226900
&XDEVDESCPTR        SETC  '&DEVDESCPTR'         SET XVARIABLE PARM      00227000
.ZG15A              AIF   (N'&DEVDESCPTR LE 1).ZG15B  CK NUM            00227100
&ZMS                SETC  '"DEVDESCPTR='                                00227200
&ZMS                SETC  '&ZMS.&DEVDESCPTR"'                           00227300
&ZMS                SETC  '&ZMS "DEVDESCPTR"'                           00227400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00227500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00227600
.ZG15B              AIF   (K'&XDEVDESCPTR GT 0).ZG15C  ONE PARM         00227700
&ZXKEYDEVDESC1      SETC  ''          RESET IN/OUTPUT                   00227800
&ZXDEVDESCPTR       SETC  ''          RESET IN/OUTPUT                   00227900
&ZMS                SETC  ' '                                           00228000
&ZMS                SETC  '&ZMS "DEVDESCPTR" KEY AND ITS'               00228100
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00228200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00228300
.ZG15C              ANOP  ,                                             00228400
.*----------------------------------------------------------------***   00228500
.***AG.KMEKY02 NAME, RQD OUTPUT, ME KEYS -XVARIABLE                     00228600
                    AIF   (K'&DEVDESCPTR64 LE 0).ZG16D  NO ME KEY       00228700
                    AIF   (N'&DEVDESCPTR64 LE 1).ZG16A  CK NUM          00228800
&ZMS                SETC  '"DEVDESCPTR64='                              00228900
&ZMS                SETC  '&ZMS.&DEVDESCPTR64"'                         00229000
&ZMS                SETC  '&ZMS "DEVDESCPTR64"'                         00229100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00229200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00229300
.ZG16A              AIF   (K'&XKEYDEVDESC1 LE 0).ZG16B                  00229400
&ZMS                SETC  '"DEVDESCPTR64'                               00229500
&ZMS                SETC  '&ZMS.=&DEVDESCPTR64"'                        00229600
&ZMS                SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'         00229700
&ZMS                SETC  '&ZMS "&XKEYDEVDESC1"'                        00229800
                    MNOTE 8,' &ZMS KEY.'                                00229900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00230000
                    AGO   .ZG16D                                        00230100
.*                                                                      00230200
.ZG16B              ANOP  ,                                             00230300
&ZXKEYDEVDESC1      SETC  'OUTPUT'    SET IN/OUTPUT                     00230400
&XKEYDEVDESC1       SETC  'DEVDESCPTR64'        SET XVARIABLE           00230500
&ZXDEVDESCPTR64     SETC  'OUTPUT'    SET IN/OUTPUT                     00230600
&XDEVDESCPTR64      SETC  '&DEVDESCPTR64(1)'    SET XVARIABLE PARM      00230700
                    AIF   (N'&DEVDESCPTR64 GT 1).ZG16C                  00230800
&XDEVDESCPTR64      SETC  '&DEVDESCPTR64'       SET XVARIABLE PARM      00230900
.ZG16C              AIF   (K'&XDEVDESCPTR64 GT 0).ZG16D  ONE PARM       00231000
&ZXKEYDEVDESC1      SETC  ''          RESET IN/OUTPUT                   00231100
&ZXDEVDESCPTR64     SETC  ''          RESET IN/OUTPUT                   00231200
&ZMS                SETC  ' '                                           00231300
&ZMS                SETC  '&ZMS "DEVDESCPTR64" KEY AND ITS'             00231400
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00231500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00231600
.ZG16D              ANOP  ,                                             00231700
.*------------------------------------------------------------------    00231800
.***AG.KME4Y09 NAME, RQD OUTPUT, ME KEYS -CHECK IF KEY ENTERED          00231900
                    AIF   (K'&XKEYDEVDESC1 GT 0).ZG17B                  00232000
&ZXKEYDEVDESC1      SETC  ''          RESET IN/OUTPUT                   00232100
&ZXDEVDESCPTR       SETC  ''          RESET IN/OUTPUT                   00232200
&XKEYDEVDESC1       SETC  ''          ENSURE NULL                       00232300
&XDEVDESCPTR        SETC  ''          ENSURE NULL                       00232400
&ZMS                SETC  'ONE OF THE FOLLOWING'                        00232500
&ZMS                SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'           00232600
&ZMS                SETC  '&ZMS REQUIRED:'                              00232700
&ZMS                SETC  '&ZMS "DEVDESCPTR"'   VALID ME KEY            00232800
&ZMS                SETC  '&ZMS OR "DEVDESCPTR64".'  VALID ME KEY       00232900
                    MNOTE 8,' &ZMS '                                    00233000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00233100
.ZG17B              ANOP  ,                                             00233200
.*-------------------------------------------------------------------   00233300
.***AG.KMEKY13 NAME, RQD OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00233400
.ZG15ZY  AIF    ('&XKEYDEVDESC1' NE 'DEVDESCPTR').ZG16ZY                00233500
.*-------------------------------------------------------------------   00233600
.***AG.KCK02 NAME, RQD OUTPUT, ME KEYS -GPR OUT OF RANGE                00233700
                    AIF   (K'&ZXDEVDESCPTR LE 0).ZG15R  NOT I/O         00233800
                    AIF   ('&XDEVDESCPTR'(1,1) NE '(').ZG15R            00233900
&ZCGPR              SETC  '&XDEVDESCPTR'(2,K'&XDEVDESCPTR-2)            00234000
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG15P                  00234100
                    AIF   (K'&ZCGPR GT 2).ZG15Q                         00234200
                    AIF   ('&ZCGPR' EQ '0').ZG15Q                       00234300
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00234400
                    AIF   (T'&ZCGPR NE 'N').ZG15Q  INVALID REG NAME     00234500
.ZG15P              ANOP  ,                                             00234600
                    AIF   (T'&ZCGPR NE 'N').ZG15R  NON NUMERIC          00234700
                    AIF   ('&ZCGPR' LT '2').ZG15Q                       00234800
                    AIF   ('&ZCGPR' LE '12').ZG15R                      00234900
.ZG15Q              ANOP  ,                                             00235000
&ZMS                SETC  '"DEVDESCPTR='                                00235100
&ZMS                SETC  '&ZMS.&DEVDESCPTR"'                           00235200
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00235300
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00235400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00235500
.ZG15R              ANOP  ,                                             00235600
.*-------------------------------------------------------------------   00235700
.***AG.KMEKY13 NAME, RQD OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00235800
.ZG16ZY  AIF    ('&XKEYDEVDESC1' NE 'DEVDESCPTR64').ZG17ZY              00235900
.*-------------------------------------------------------------------   00236000
.***AG.KCK02 NAME, RQD OUTPUT, ME KEYS -GPR OUT OF RANGE                00236100
                    AIF   (K'&ZXDEVDESCPTR64 LE 0).ZG16R  NOT I/O       00236200
                    AIF   ('&XDEVDESCPTR64'(1,1) NE '(').ZG16R          00236300
&ZCGPR              SETC  '&XDEVDESCPTR64'(2,K'&XDEVDESCPTR64-2)        00236400
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG16P                  00236500
                    AIF   (K'&ZCGPR GT 2).ZG16Q                         00236600
                    AIF   ('&ZCGPR' EQ '0').ZG16Q                       00236700
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00236800
                    AIF   (T'&ZCGPR NE 'N').ZG16Q  INVALID REG NAME     00236900
.ZG16P              ANOP  ,                                             00237000
                    AIF   (T'&ZCGPR NE 'N').ZG16R  NON NUMERIC          00237100
                    AIF   ('&ZCGPR' LT '2').ZG16Q                       00237200
                    AIF   ('&ZCGPR' LE '12').ZG16R                      00237300
.ZG16Q              ANOP  ,                                             00237400
&ZMS                SETC  '"DEVDESCPTR64='                              00237500
&ZMS                SETC  '&ZMS.&DEVDESCPTR64"'                         00237600
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00237700
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00237800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00237900
.ZG16R              ANOP  ,                                             00238000
.*-------------------------------------------------------------------   00238100
.***AG.KMEKY15 NAME, RQD OUTPUT, ME KEYS -END                           00238200
.ZG17ZY             ANOP ,            END MUTUALLY EXCLUSIVE KEYS       00238300
.*----------------------------------------------------------------***   00238400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00238500
                    AIF   (N'&DEVCOUNT LE 1).ZG19A  CK NUM              00238600
&ZMS                SETC  '"DEVCOUNT='                                  00238700
&ZMS                SETC  '&ZMS.&DEVCOUNT"'                             00238800
&ZMS                SETC  '&ZMS "DEVCOUNT"'                             00238900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00239000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00239100
.ZG19A              ANOP  ,                                             00239200
.*-------------------------------------------------------------------   00239300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00239400
&ZXDEVCOUNT         SETC  'INPUT'     SET IN/OUTPUT                     00239500
&XDEVCOUNT          SETC  '1'                                           00239600
                    AIF   (K'&DEVCOUNT(1) LE 0).ZG19B  PARM             00239700
&XDEVCOUNT          SETC  '&DEVCOUNT(1)'        SET XVARIABLE           00239800
                    AIF   (N'&DEVCOUNT GT 1).ZG19B  MULTI               00239900
&XDEVCOUNT          SETC  '&DEVCOUNT'           SET XVARIABLE           00240000
.ZG19B              ANOP  ,                                             00240100
.*-------------------------------------------------------------------   00240200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00240300
                    AIF   (K'&ZXDEVCOUNT LE 0).ZG19R  NOT I/O           00240400
                    AIF   ('&XDEVCOUNT'(1,1) NE '(').ZG19R              00240500
&ZCGPR              SETC  '&XDEVCOUNT'(2,K'&XDEVCOUNT-2)                00240600
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG19P                  00240700
                    AIF   (K'&ZCGPR GT 2).ZG19Q                         00240800
                    AIF   ('&ZCGPR' EQ '0').ZG19Q                       00240900
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00241000
                    AIF   (T'&ZCGPR NE 'N').ZG19Q  INVALID REG NAME     00241100
.ZG19P              ANOP  ,                                             00241200
                    AIF   (T'&ZCGPR NE 'N').ZG19R  NON NUMERIC          00241300
                    AIF   ('&ZCGPR' LT '2').ZG19Q                       00241400
                    AIF   ('&ZCGPR' LE '12').ZG19R                      00241500
.ZG19Q              ANOP  ,                                             00241600
&ZMS                SETC  '"DEVCOUNT='                                  00241700
&ZMS                SETC  '&ZMS.&DEVCOUNT"'                             00241800
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00241900
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00242000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00242100
.ZG19R              ANOP  ,                                             00242200
.*----------------------------------------------------------------***   00242300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00242400
                    AIF   (N'&MINDEVCOUNT LE 1).ZG20A  CK NUM           00242500
&ZMS                SETC  '"MINDEVCOUNT='                               00242600
&ZMS                SETC  '&ZMS.&MINDEVCOUNT"'                          00242700
&ZMS                SETC  '&ZMS "MINDEVCOUNT"'                          00242800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00242900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00243000
.ZG20A              ANOP  ,                                             00243100
.*-------------------------------------------------------------------   00243200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00243300
&ZXMINDEVCOUNT      SETC  'INPUT'     SET IN/OUTPUT                     00243400
&XMINDEVCOUNT       SETC  '0'                                           00243500
                    AIF   (K'&MINDEVCOUNT(1) LE 0).ZG20B  PARM          00243600
&XMINDEVCOUNT       SETC  '&MINDEVCOUNT(1)'     SET XVARIABLE           00243700
                    AIF   (N'&MINDEVCOUNT GT 1).ZG20B  MULTI            00243800
&XMINDEVCOUNT       SETC  '&MINDEVCOUNT'        SET XVARIABLE           00243900
.ZG20B              ANOP  ,                                             00244000
.*-------------------------------------------------------------------   00244100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00244200
                    AIF   (K'&ZXMINDEVCOUNT LE 0).ZG20R  NOT I/O        00244300
                    AIF   ('&XMINDEVCOUNT'(1,1) NE '(').ZG20R           00244400
&ZCGPR              SETC  '&XMINDEVCOUNT'(2,K'&XMINDEVCOUNT-2)          00244500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG20P                  00244600
                    AIF   (K'&ZCGPR GT 2).ZG20Q                         00244700
                    AIF   ('&ZCGPR' EQ '0').ZG20Q                       00244800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00244900
                    AIF   (T'&ZCGPR NE 'N').ZG20Q  INVALID REG NAME     00245000
.ZG20P              ANOP  ,                                             00245100
                    AIF   (T'&ZCGPR NE 'N').ZG20R  NON NUMERIC          00245200
                    AIF   ('&ZCGPR' LT '2').ZG20Q                       00245300
                    AIF   ('&ZCGPR' LE '12').ZG20R                      00245400
.ZG20Q              ANOP  ,                                             00245500
&ZMS                SETC  '"MINDEVCOUNT='                               00245600
&ZMS                SETC  '&ZMS.&MINDEVCOUNT"'                          00245700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00245800
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00245900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00246000
.ZG20R              ANOP  ,                                             00246100
.*-------------------------------------------------------------------   00246200
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00246300
.ZG22ZY  AIF    ('&XFUNCTION' NE 'QUERY').ZG31ZY                        00246400
.*-------------------------------------------------------------------   00246500
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00246600
&ZCVAL              SETC ''           ERROR KEY FIELD                   00246700
.ZG22I0             AIF   (K'&ACCESS LE 0).ZG22I1                       00246800
&ZCVAL              SETC '&ZCVAL ACCESS'        DISALLOWED KEY          00246900
.ZG22I1             AIF   (K'&DEVCOUNT LE 0).ZG22I2                     00247000
&ZCVAL              SETC '&ZCVAL DEVCOUNT'      DISALLOWED KEY          00247100
.ZG22I2             AIF   (K'&MINDEVCOUNT LE 0).ZG22I3                  00247200
&ZCVAL              SETC '&ZCVAL MINDEVCOUNT'   DISALLOWED KEY          00247300
.ZG22I3             AIF   (K'&DEVIOLISTPTR LE 0).ZG22I4                 00247400
&ZCVAL              SETC '&ZCVAL DEVIOLISTPTR'  DISALLOWED KEY          00247500
.ZG22I4             AIF   (K'&DEVIOLISTPTR64 LE 0).ZG22I5               00247600
&ZCVAL              SETC '&ZCVAL DEVIOLISTPTR64'  DISALLOWED KEY        00247700
.ZG22I5             AIF   (K'&ECB LE 0).ZG22I6                          00247800
&ZCVAL              SETC '&ZCVAL ECB'           DISALLOWED KEY          00247900
.ZG22I6             AIF   (K'&XRESERVED LE 0).ZG22I7                    00248000
&ZCVAL              SETC '&ZCVAL XRESERVED'     DISALLOWED KEY          00248100
.ZG22I7             AIF   (K'&IOTOKEN LE 0).ZG22I8                      00248200
&ZCVAL              SETC '&ZCVAL IOTOKEN'       DISALLOWED KEY          00248300
.ZG22I8             AIF   (K'&REUSECP LE 0).ZG22I9                      00248400
&ZCVAL              SETC '&ZCVAL REUSECP'       DISALLOWED KEY          00248500
.ZG22I9             AIF   (K'&XRESERVED LE 0).ZG22I10                   00248600
&ZCVAL              SETC '&ZCVAL XRESERVED'     DISALLOWED KEY          00248700
.ZG22I10            AIF   (K'&ZCVAL LE 0).ZG22J  KEY                    00248800
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00248900
&ZMS                SETC  '"QUERY'                                      00249000
&ZMS                SETC  '&ZMS."'                                      00249100
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00249200
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00249300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00249400
.ZG22J              ANOP  ,                                             00249500
.*----------------------------------------------------------------***   00249600
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00249700
&XKEYDEVLIST1       SETC  ''          INITIALIZE XVARIABLE              00249800
                    AIF   (K'&DEVLISTPTR LE 0).ZG24C                    00249900
&ZXKEYDEVLIST1      SETC  'INPUT'     SET IN/OUTPUT                     00250000
&XKEYDEVLIST1       SETC  'DEVLISTPTR'          SET XVARIABLE           00250100
&ZXDEVLISTPTR       SETC  'INPUT'     SET IN/OUTPUT                     00250200
&XDEVLISTPTR        SETC  '&DEVLISTPTR(1)'      SET XVARIABLE PARM      00250300
                    AIF   (N'&DEVLISTPTR GT 1).ZG24A                    00250400
&XDEVLISTPTR        SETC  '&DEVLISTPTR'         SET XVARIABLE PARM      00250500
.ZG24A              AIF   (N'&DEVLISTPTR LE 1).ZG24B  CK NUM            00250600
&ZMS                SETC  '"DEVLISTPTR='                                00250700
&ZMS                SETC  '&ZMS.&DEVLISTPTR"'                           00250800
&ZMS                SETC  '&ZMS "DEVLISTPTR"'                           00250900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00251000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00251100
.ZG24B              AIF   (K'&XDEVLISTPTR GT 0).ZG24C  ONE PARM         00251200
&ZXKEYDEVLIST1      SETC  ''          RESET IN/OUTPUT                   00251300
&ZXDEVLISTPTR       SETC  ''          RESET IN/OUTPUT                   00251400
&ZMS                SETC  ' '                                           00251500
&ZMS                SETC  '&ZMS "DEVLISTPTR" KEY AND ITS'               00251600
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00251700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00251800
.ZG24C              ANOP  ,                                             00251900
.*----------------------------------------------------------------***   00252000
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00252100
                    AIF   (K'&DEVLISTPTR64 LE 0).ZG25D  NO ME KEY       00252200
                    AIF   (N'&DEVLISTPTR64 LE 1).ZG25A  CK NUM          00252300
&ZMS                SETC  '"DEVLISTPTR64='                              00252400
&ZMS                SETC  '&ZMS.&DEVLISTPTR64"'                         00252500
&ZMS                SETC  '&ZMS "DEVLISTPTR64"'                         00252600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00252700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00252800
.ZG25A              AIF   (K'&XKEYDEVLIST1 LE 0).ZG25B                  00252900
&ZMS                SETC  '"DEVLISTPTR64'                               00253000
&ZMS                SETC  '&ZMS.=&DEVLISTPTR64"'                        00253100
&ZMS                SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'         00253200
&ZMS                SETC  '&ZMS "&XKEYDEVLIST1"'                        00253300
                    MNOTE 8,' &ZMS KEY.'                                00253400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00253500
                    AGO   .ZG25D                                        00253600
.*                                                                      00253700
.ZG25B              ANOP  ,                                             00253800
&ZXKEYDEVLIST1      SETC  'INPUT'     SET IN/OUTPUT                     00253900
&XKEYDEVLIST1       SETC  'DEVLISTPTR64'        SET XVARIABLE           00254000
&ZXDEVLISTPTR64     SETC  'INPUT'     SET IN/OUTPUT                     00254100
&XDEVLISTPTR64      SETC  '&DEVLISTPTR64(1)'    SET XVARIABLE PARM      00254200
                    AIF   (N'&DEVLISTPTR64 GT 1).ZG25C                  00254300
&XDEVLISTPTR64      SETC  '&DEVLISTPTR64'       SET XVARIABLE PARM      00254400
.ZG25C              AIF   (K'&XDEVLISTPTR64 GT 0).ZG25D  ONE PARM       00254500
&ZXKEYDEVLIST1      SETC  ''          RESET IN/OUTPUT                   00254600
&ZXDEVLISTPTR64     SETC  ''          RESET IN/OUTPUT                   00254700
&ZMS                SETC  ' '                                           00254800
&ZMS                SETC  '&ZMS "DEVLISTPTR64" KEY AND ITS'             00254900
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00255000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00255100
.ZG25D              ANOP  ,                                             00255200
.*------------------------------------------------------------------    00255300
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00255400
                    AIF   (K'&XKEYDEVLIST1 GT 0).ZG26B                  00255500
&ZXKEYDEVLIST1      SETC  ''          RESET IN/OUTPUT                   00255600
&ZXDEVLISTPTR       SETC  ''          RESET IN/OUTPUT                   00255700
&XKEYDEVLIST1       SETC  ''          ENSURE NULL                       00255800
&XDEVLISTPTR        SETC  ''          ENSURE NULL                       00255900
&ZMS                SETC  'ONE OF THE FOLLOWING'                        00256000
&ZMS                SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'           00256100
&ZMS                SETC  '&ZMS REQUIRED:'                              00256200
&ZMS                SETC  '&ZMS "DEVLISTPTR"'   VALID ME KEY            00256300
&ZMS                SETC  '&ZMS OR "DEVLISTPTR64".'  VALID ME KEY       00256400
                    MNOTE 8,' &ZMS '                                    00256500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00256600
.ZG26B              ANOP  ,                                             00256700
.*-------------------------------------------------------------------   00256800
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00256900
.ZG24ZY  AIF    ('&XKEYDEVLIST1' NE 'DEVLISTPTR').ZG25ZY                00257000
.*-------------------------------------------------------------------   00257100
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00257200
                    AIF   (K'&ZXDEVLISTPTR LE 0).ZG24R  NOT I/O         00257300
                    AIF   ('&XDEVLISTPTR'(1,1) NE '(').ZG24R            00257400
&ZCGPR              SETC  '&XDEVLISTPTR'(2,K'&XDEVLISTPTR-2)            00257500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG24P                  00257600
                    AIF   (K'&ZCGPR GT 2).ZG24Q                         00257700
                    AIF   ('&ZCGPR' EQ '0').ZG24Q                       00257800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00257900
                    AIF   (T'&ZCGPR NE 'N').ZG24Q  INVALID REG NAME     00258000
.ZG24P              ANOP  ,                                             00258100
                    AIF   (T'&ZCGPR NE 'N').ZG24R  NON NUMERIC          00258200
                    AIF   ('&ZCGPR' LT '2').ZG24Q                       00258300
                    AIF   ('&ZCGPR' LE '12').ZG24R                      00258400
.ZG24Q              ANOP  ,                                             00258500
&ZMS                SETC  '"DEVLISTPTR='                                00258600
&ZMS                SETC  '&ZMS.&DEVLISTPTR"'                           00258700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00258800
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00258900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00259000
.ZG24R              ANOP  ,                                             00259100
.*-------------------------------------------------------------------   00259200
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00259300
.ZG25ZY  AIF    ('&XKEYDEVLIST1' NE 'DEVLISTPTR64').ZG26ZY              00259400
.*-------------------------------------------------------------------   00259500
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00259600
                    AIF   (K'&ZXDEVLISTPTR64 LE 0).ZG25R  NOT I/O       00259700
                    AIF   ('&XDEVLISTPTR64'(1,1) NE '(').ZG25R          00259800
&ZCGPR              SETC  '&XDEVLISTPTR64'(2,K'&XDEVLISTPTR64-2)        00259900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG25P                  00260000
                    AIF   (K'&ZCGPR GT 2).ZG25Q                         00260100
                    AIF   ('&ZCGPR' EQ '0').ZG25Q                       00260200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00260300
                    AIF   (T'&ZCGPR NE 'N').ZG25Q  INVALID REG NAME     00260400
.ZG25P              ANOP  ,                                             00260500
                    AIF   (T'&ZCGPR NE 'N').ZG25R  NON NUMERIC          00260600
                    AIF   ('&ZCGPR' LT '2').ZG25Q                       00260700
                    AIF   ('&ZCGPR' LE '12').ZG25R                      00260800
.ZG25Q              ANOP  ,                                             00260900
&ZMS                SETC  '"DEVLISTPTR64='                              00261000
&ZMS                SETC  '&ZMS.&DEVLISTPTR64"'                         00261100
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00261200
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00261300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00261400
.ZG25R              ANOP  ,                                             00261500
.*-------------------------------------------------------------------   00261600
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00261700
.ZG26ZY             ANOP ,            END MUTUALLY EXCLUSIVE KEYS       00261800
.*----------------------------------------------------------------***   00261900
.***AG.KMEKY01 NAME, RQD OUTPUT, ME KEYS -XVARIABLE                     00262000
&XKEYDEVDESC1       SETC  ''          INITIALIZE XVARIABLE              00262100
                    AIF   (K'&DEVDESCPTR LE 0).ZG28C                    00262200
&ZXKEYDEVDESC1      SETC  'OUTPUT'    SET IN/OUTPUT                     00262300
&XKEYDEVDESC1       SETC  'DEVDESCPTR'          SET XVARIABLE           00262400
&ZXDEVDESCPTR       SETC  'OUTPUT'    SET IN/OUTPUT                     00262500
&XDEVDESCPTR        SETC  '&DEVDESCPTR(1)'      SET XVARIABLE PARM      00262600
                    AIF   (N'&DEVDESCPTR GT 1).ZG28A                    00262700
&XDEVDESCPTR        SETC  '&DEVDESCPTR'         SET XVARIABLE PARM      00262800
.ZG28A              AIF   (N'&DEVDESCPTR LE 1).ZG28B  CK NUM            00262900
&ZMS                SETC  '"DEVDESCPTR='                                00263000
&ZMS                SETC  '&ZMS.&DEVDESCPTR"'                           00263100
&ZMS                SETC  '&ZMS "DEVDESCPTR"'                           00263200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00263300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00263400
.ZG28B              AIF   (K'&XDEVDESCPTR GT 0).ZG28C  ONE PARM         00263500
&ZXKEYDEVDESC1      SETC  ''          RESET IN/OUTPUT                   00263600
&ZXDEVDESCPTR       SETC  ''          RESET IN/OUTPUT                   00263700
&ZMS                SETC  ' '                                           00263800
&ZMS                SETC  '&ZMS "DEVDESCPTR" KEY AND ITS'               00263900
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00264000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00264100
.ZG28C              ANOP  ,                                             00264200
.*----------------------------------------------------------------***   00264300
.***AG.KMEKY02 NAME, RQD OUTPUT, ME KEYS -XVARIABLE                     00264400
                    AIF   (K'&DEVDESCPTR64 LE 0).ZG29D  NO ME KEY       00264500
                    AIF   (N'&DEVDESCPTR64 LE 1).ZG29A  CK NUM          00264600
&ZMS                SETC  '"DEVDESCPTR64='                              00264700
&ZMS                SETC  '&ZMS.&DEVDESCPTR64"'                         00264800
&ZMS                SETC  '&ZMS "DEVDESCPTR64"'                         00264900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00265000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00265100
.ZG29A              AIF   (K'&XKEYDEVDESC1 LE 0).ZG29B                  00265200
&ZMS                SETC  '"DEVDESCPTR64'                               00265300
&ZMS                SETC  '&ZMS.=&DEVDESCPTR64"'                        00265400
&ZMS                SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'         00265500
&ZMS                SETC  '&ZMS "&XKEYDEVDESC1"'                        00265600
                    MNOTE 8,' &ZMS KEY.'                                00265700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00265800
                    AGO   .ZG29D                                        00265900
.*                                                                      00266000
.ZG29B              ANOP  ,                                             00266100
&ZXKEYDEVDESC1      SETC  'OUTPUT'    SET IN/OUTPUT                     00266200
&XKEYDEVDESC1       SETC  'DEVDESCPTR64'        SET XVARIABLE           00266300
&ZXDEVDESCPTR64     SETC  'OUTPUT'    SET IN/OUTPUT                     00266400
&XDEVDESCPTR64      SETC  '&DEVDESCPTR64(1)'    SET XVARIABLE PARM      00266500
                    AIF   (N'&DEVDESCPTR64 GT 1).ZG29C                  00266600
&XDEVDESCPTR64      SETC  '&DEVDESCPTR64'       SET XVARIABLE PARM      00266700
.ZG29C              AIF   (K'&XDEVDESCPTR64 GT 0).ZG29D  ONE PARM       00266800
&ZXKEYDEVDESC1      SETC  ''          RESET IN/OUTPUT                   00266900
&ZXDEVDESCPTR64     SETC  ''          RESET IN/OUTPUT                   00267000
&ZMS                SETC  ' '                                           00267100
&ZMS                SETC  '&ZMS "DEVDESCPTR64" KEY AND ITS'             00267200
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00267300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00267400
.ZG29D              ANOP  ,                                             00267500
.*------------------------------------------------------------------    00267600
.***AG.KME4Y09 NAME, RQD OUTPUT, ME KEYS -CHECK IF KEY ENTERED          00267700
                    AIF   (K'&XKEYDEVDESC1 GT 0).ZG30B                  00267800
&ZXKEYDEVDESC1      SETC  ''          RESET IN/OUTPUT                   00267900
&ZXDEVDESCPTR       SETC  ''          RESET IN/OUTPUT                   00268000
&XKEYDEVDESC1       SETC  ''          ENSURE NULL                       00268100
&XDEVDESCPTR        SETC  ''          ENSURE NULL                       00268200
&ZMS                SETC  'ONE OF THE FOLLOWING'                        00268300
&ZMS                SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'           00268400
&ZMS                SETC  '&ZMS REQUIRED:'                              00268500
&ZMS                SETC  '&ZMS "DEVDESCPTR"'   VALID ME KEY            00268600
&ZMS                SETC  '&ZMS OR "DEVDESCPTR64".'  VALID ME KEY       00268700
                    MNOTE 8,' &ZMS '                                    00268800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00268900
.ZG30B              ANOP  ,                                             00269000
.*-------------------------------------------------------------------   00269100
.***AG.KMEKY13 NAME, RQD OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00269200
.ZG28ZY  AIF    ('&XKEYDEVDESC1' NE 'DEVDESCPTR').ZG29ZY                00269300
.*-------------------------------------------------------------------   00269400
.***AG.KCK02 NAME, RQD OUTPUT, ME KEYS -GPR OUT OF RANGE                00269500
                    AIF   (K'&ZXDEVDESCPTR LE 0).ZG28R  NOT I/O         00269600
                    AIF   ('&XDEVDESCPTR'(1,1) NE '(').ZG28R            00269700
&ZCGPR              SETC  '&XDEVDESCPTR'(2,K'&XDEVDESCPTR-2)            00269800
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG28P                  00269900
                    AIF   (K'&ZCGPR GT 2).ZG28Q                         00270000
                    AIF   ('&ZCGPR' EQ '0').ZG28Q                       00270100
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00270200
                    AIF   (T'&ZCGPR NE 'N').ZG28Q  INVALID REG NAME     00270300
.ZG28P              ANOP  ,                                             00270400
                    AIF   (T'&ZCGPR NE 'N').ZG28R  NON NUMERIC          00270500
                    AIF   ('&ZCGPR' LT '2').ZG28Q                       00270600
                    AIF   ('&ZCGPR' LE '12').ZG28R                      00270700
.ZG28Q              ANOP  ,                                             00270800
&ZMS                SETC  '"DEVDESCPTR='                                00270900
&ZMS                SETC  '&ZMS.&DEVDESCPTR"'                           00271000
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00271100
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00271200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00271300
.ZG28R              ANOP  ,                                             00271400
.*-------------------------------------------------------------------   00271500
.***AG.KMEKY13 NAME, RQD OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00271600
.ZG29ZY  AIF    ('&XKEYDEVDESC1' NE 'DEVDESCPTR64').ZG30ZY              00271700
.*-------------------------------------------------------------------   00271800
.***AG.KCK02 NAME, RQD OUTPUT, ME KEYS -GPR OUT OF RANGE                00271900
                    AIF   (K'&ZXDEVDESCPTR64 LE 0).ZG29R  NOT I/O       00272000
                    AIF   ('&XDEVDESCPTR64'(1,1) NE '(').ZG29R          00272100
&ZCGPR              SETC  '&XDEVDESCPTR64'(2,K'&XDEVDESCPTR64-2)        00272200
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG29P                  00272300
                    AIF   (K'&ZCGPR GT 2).ZG29Q                         00272400
                    AIF   ('&ZCGPR' EQ '0').ZG29Q                       00272500
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00272600
                    AIF   (T'&ZCGPR NE 'N').ZG29Q  INVALID REG NAME     00272700
.ZG29P              ANOP  ,                                             00272800
                    AIF   (T'&ZCGPR NE 'N').ZG29R  NON NUMERIC          00272900
                    AIF   ('&ZCGPR' LT '2').ZG29Q                       00273000
                    AIF   ('&ZCGPR' LE '12').ZG29R                      00273100
.ZG29Q              ANOP  ,                                             00273200
&ZMS                SETC  '"DEVDESCPTR64='                              00273300
&ZMS                SETC  '&ZMS.&DEVDESCPTR64"'                         00273400
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00273500
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00273600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00273700
.ZG29R              ANOP  ,                                             00273800
.*-------------------------------------------------------------------   00273900
.***AG.KMEKY15 NAME, RQD OUTPUT, ME KEYS -END                           00274000
.ZG30ZY             ANOP ,            END MUTUALLY EXCLUSIVE KEYS       00274100
.*-------------------------------------------------------------------   00274200
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00274300
.ZG31ZY  AIF    ('&XFUNCTION' NE 'READ').ZG50ZY                         00274400
.*-------------------------------------------------------------------   00274500
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00274600
&ZCVAL              SETC ''           ERROR KEY FIELD                   00274700
.ZG31I0             AIF   (K'&ACCESS LE 0).ZG31I1                       00274800
&ZCVAL              SETC '&ZCVAL ACCESS'        DISALLOWED KEY          00274900
.ZG31I1             AIF   (K'&DEVLISTPTR LE 0).ZG31I2                   00275000
&ZCVAL              SETC '&ZCVAL DEVLISTPTR'    DISALLOWED KEY          00275100
.ZG31I2             AIF   (K'&DEVLISTPTR64 LE 0).ZG31I3                 00275200
&ZCVAL              SETC '&ZCVAL DEVLISTPTR64'  DISALLOWED KEY          00275300
.ZG31I3             AIF   (K'&DEVDESCPTR LE 0).ZG31I4                   00275400
&ZCVAL              SETC '&ZCVAL DEVDESCPTR'    DISALLOWED KEY          00275500
.ZG31I4             AIF   (K'&DEVDESCPTR64 LE 0).ZG31I5                 00275600
&ZCVAL              SETC '&ZCVAL DEVDESCPTR64'  DISALLOWED KEY          00275700
.ZG31I5             AIF   (K'&DEVCOUNT LE 0).ZG31I6                     00275800
&ZCVAL              SETC '&ZCVAL DEVCOUNT'      DISALLOWED KEY          00275900
.ZG31I6             AIF   (K'&MINDEVCOUNT LE 0).ZG31I7                  00276000
&ZCVAL              SETC '&ZCVAL MINDEVCOUNT'   DISALLOWED KEY          00276100
.ZG31I7             AIF   (K'&ZCVAL LE 0).ZG31J  KEY                    00276200
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00276300
&ZMS                SETC  '"READ'                                       00276400
&ZMS                SETC  '&ZMS."'                                      00276500
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00276600
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00276700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00276800
.ZG31J              ANOP  ,                                             00276900
.*----------------------------------------------------------------***   00277000
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00277100
&XKEYDEVIOLIST1     SETC  ''          INITIALIZE XVARIABLE              00277200
                    AIF   (K'&DEVIOLISTPTR LE 0).ZG33C                  00277300
&ZXKEYDEVIOLIST1    SETC  'INPUT'     SET IN/OUTPUT                     00277400
&XKEYDEVIOLIST1     SETC  'DEVIOLISTPTR'        SET XVARIABLE           00277500
&ZXDEVIOLISTPTR     SETC  'INPUT'     SET IN/OUTPUT                     00277600
&XDEVIOLISTPTR      SETC  '&DEVIOLISTPTR(1)'    SET XVARIABLE PARM      00277700
                    AIF   (N'&DEVIOLISTPTR GT 1).ZG33A                  00277800
&XDEVIOLISTPTR      SETC  '&DEVIOLISTPTR'       SET XVARIABLE PARM      00277900
.ZG33A              AIF   (N'&DEVIOLISTPTR LE 1).ZG33B  CK NUM          00278000
&ZMS                SETC  '"DEVIOLISTPTR='                              00278100
&ZMS                SETC  '&ZMS.&DEVIOLISTPTR"'                         00278200
&ZMS                SETC  '&ZMS "DEVIOLISTPTR"'                         00278300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00278400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00278500
.ZG33B              AIF   (K'&XDEVIOLISTPTR GT 0).ZG33C  ONE PARM       00278600
&ZXKEYDEVIOLIST1    SETC  ''          RESET IN/OUTPUT                   00278700
&ZXDEVIOLISTPTR     SETC  ''          RESET IN/OUTPUT                   00278800
&ZMS                SETC  ' '                                           00278900
&ZMS                SETC  '&ZMS "DEVIOLISTPTR" KEY AND ITS'             00279000
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00279100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00279200
.ZG33C              ANOP  ,                                             00279300
.*----------------------------------------------------------------***   00279400
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00279500
                    AIF   (K'&DEVIOLISTPTR64 LE 0).ZG34D  NO ME KEY     00279600
                    AIF   (N'&DEVIOLISTPTR64 LE 1).ZG34A  CK NUM        00279700
&ZMS                SETC  '"DEVIOLISTPTR64='                            00279800
&ZMS                SETC  '&ZMS.&DEVIOLISTPTR64"'                       00279900
&ZMS                SETC  '&ZMS "DEVIOLISTPTR64"'                       00280000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00280100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00280200
.ZG34A              AIF   (K'&XKEYDEVIOLIST1 LE 0).ZG34B                00280300
&ZMS                SETC  '"DEVIOLISTPTR64'                             00280400
&ZMS                SETC  '&ZMS.=&DEVIOLISTPTR64"'                      00280500
&ZMS                SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'         00280600
&ZMS                SETC  '&ZMS "&XKEYDEVIOLIST1"'                      00280700
                    MNOTE 8,' &ZMS KEY.'                                00280800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00280900
                    AGO   .ZG34D                                        00281000
.*                                                                      00281100
.ZG34B              ANOP  ,                                             00281200
&ZXKEYDEVIOLIST1    SETC  'INPUT'     SET IN/OUTPUT                     00281300
&XKEYDEVIOLIST1     SETC  'DEVIOLISTPTR64'      SET XVARIABLE           00281400
&ZXDEVIOLISTPTR64   SETC  'INPUT'     SET IN/OUTPUT                     00281500
&XDEVIOLISTPTR64    SETC  '&DEVIOLISTPTR64(1)'  SET XVARIABLE PARM      00281600
                    AIF   (N'&DEVIOLISTPTR64 GT 1).ZG34C                00281700
&XDEVIOLISTPTR64    SETC  '&DEVIOLISTPTR64'     SET XVARIABLE PARM      00281800
.ZG34C              AIF   (K'&XDEVIOLISTPTR64 GT 0).ZG34D  ONE PARM     00281900
&ZXKEYDEVIOLIST1    SETC  ''          RESET IN/OUTPUT                   00282000
&ZXDEVIOLISTPTR64   SETC  ''          RESET IN/OUTPUT                   00282100
&ZMS                SETC  ' '                                           00282200
&ZMS                SETC  '&ZMS "DEVIOLISTPTR64" KEY AND ITS'           00282300
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00282400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00282500
.ZG34D              ANOP  ,                                             00282600
.*------------------------------------------------------------------    00282700
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00282800
                    AIF   (K'&XKEYDEVIOLIST1 GT 0).ZG35B                00282900
&ZXKEYDEVIOLIST1    SETC  ''          RESET IN/OUTPUT                   00283000
&ZXDEVIOLISTPTR     SETC  ''          RESET IN/OUTPUT                   00283100
&XKEYDEVIOLIST1     SETC  ''          ENSURE NULL                       00283200
&XDEVIOLISTPTR      SETC  ''          ENSURE NULL                       00283300
&ZMS                SETC  'ONE OF THE FOLLOWING'                        00283400
&ZMS                SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'           00283500
&ZMS                SETC  '&ZMS REQUIRED:'                              00283600
&ZMS                SETC  '&ZMS "DEVIOLISTPTR"'  VALID ME KEY           00283700
&ZMS                SETC  '&ZMS OR "DEVIOLISTPTR64".'  VALID ME KEY     00283800
                    MNOTE 8,' &ZMS '                                    00283900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00284000
.ZG35B              ANOP  ,                                             00284100
.*-------------------------------------------------------------------   00284200
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00284300
.ZG33ZY  AIF    ('&XKEYDEVIOLIST1' NE 'DEVIOLISTPTR').ZG34ZY            00284400
.*-------------------------------------------------------------------   00284500
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00284600
                    AIF   (K'&ZXDEVIOLISTPTR LE 0).ZG33R  NOT I/O       00284700
                    AIF   ('&XDEVIOLISTPTR'(1,1) NE '(').ZG33R          00284800
&ZCGPR              SETC  '&XDEVIOLISTPTR'(2,K'&XDEVIOLISTPTR-2)        00284900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG33P                  00285000
                    AIF   (K'&ZCGPR GT 2).ZG33Q                         00285100
                    AIF   ('&ZCGPR' EQ '0').ZG33Q                       00285200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00285300
                    AIF   (T'&ZCGPR NE 'N').ZG33Q  INVALID REG NAME     00285400
.ZG33P              ANOP  ,                                             00285500
                    AIF   (T'&ZCGPR NE 'N').ZG33R  NON NUMERIC          00285600
                    AIF   ('&ZCGPR' LT '2').ZG33Q                       00285700
                    AIF   ('&ZCGPR' LE '12').ZG33R                      00285800
.ZG33Q              ANOP  ,                                             00285900
&ZMS                SETC  '"DEVIOLISTPTR='                              00286000
&ZMS                SETC  '&ZMS.&DEVIOLISTPTR"'                         00286100
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00286200
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00286300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00286400
.ZG33R              ANOP  ,                                             00286500
.*-------------------------------------------------------------------   00286600
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00286700
.ZG34ZY  AIF    ('&XKEYDEVIOLIST1' NE 'DEVIOLISTPTR64').ZG35ZY          00286800
.*-------------------------------------------------------------------   00286900
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00287000
                    AIF   (K'&ZXDEVIOLISTPTR64 LE 0).ZG34R  NOT I/O     00287100
                    AIF   ('&XDEVIOLISTPTR64'(1,1) NE '(').ZG34R        00287200
&ZCGPR              SETC  '&XDEVIOLISTPTR64'(2,K'&XDEVIOLISTPTR64-2)    00287300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG34P                  00287400
                    AIF   (K'&ZCGPR GT 2).ZG34Q                         00287500
                    AIF   ('&ZCGPR' EQ '0').ZG34Q                       00287600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00287700
                    AIF   (T'&ZCGPR NE 'N').ZG34Q  INVALID REG NAME     00287800
.ZG34P              ANOP  ,                                             00287900
                    AIF   (T'&ZCGPR NE 'N').ZG34R  NON NUMERIC          00288000
                    AIF   ('&ZCGPR' LT '2').ZG34Q                       00288100
                    AIF   ('&ZCGPR' LE '12').ZG34R                      00288200
.ZG34Q              ANOP  ,                                             00288300
&ZMS                SETC  '"DEVIOLISTPTR64='                            00288400
&ZMS                SETC  '&ZMS.&DEVIOLISTPTR64"'                       00288500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00288600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00288700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00288800
.ZG34R              ANOP  ,                                             00288900
.*-------------------------------------------------------------------   00289000
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00289100
.ZG35ZY             ANOP ,            END MUTUALLY EXCLUSIVE KEYS       00289200
.*----------------------------------------------------------------***   00289300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00289400
                    AIF   (N'&ECB LE 1).ZG37A   CK NUM                  00289500
&ZMS                SETC  '"ECB='                                       00289600
&ZMS                SETC  '&ZMS.&ECB"'                                  00289700
&ZMS                SETC  '&ZMS "ECB"'                                  00289800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00289900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00290000
.ZG37A              ANOP  ,                                             00290100
.*-------------------------------------------------------------------   00290200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00290300
&ZXECB              SETC  'INPUT'     SET IN/OUTPUT                     00290400
&XECB               SETC  'NONE'                                        00290500
                    AIF   (K'&ECB(1) LE 0).ZG37B  PARM                  00290600
&XECB               SETC  '&ECB(1)'   SET XVARIABLE                     00290700
                    AIF   (N'&ECB GT 1).ZG37B   MULTI                   00290800
&XECB               SETC  '&ECB'      SET XVARIABLE                     00290900
.ZG37B              ANOP  ,                                             00291000
.*-------------------------------------------------------------------   00291100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00291200
                    AIF   (K'&ZXECB LE 0).ZG37R  NOT I/O                00291300
         AIF   ('&XECB' EQ 'NONE').ZG37R                                00291400
                    AIF   ('&XECB'(1,1) NE '(').ZG37R                   00291500
&ZCGPR              SETC  '&XECB'(2,K'&XECB-2)                          00291600
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG37P                  00291700
                    AIF   (K'&ZCGPR GT 2).ZG37Q                         00291800
                    AIF   ('&ZCGPR' EQ '0').ZG37Q                       00291900
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00292000
                    AIF   (T'&ZCGPR NE 'N').ZG37Q  INVALID REG NAME     00292100
.ZG37P              ANOP  ,                                             00292200
                    AIF   (T'&ZCGPR NE 'N').ZG37R  NON NUMERIC          00292300
                    AIF   ('&ZCGPR' LT '2').ZG37Q                       00292400
                    AIF   ('&ZCGPR' LE '12').ZG37R                      00292500
.ZG37Q              ANOP  ,                                             00292600
&ZMS                SETC  '"ECB='                                       00292700
&ZMS                SETC  '&ZMS.&ECB"'                                  00292800
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00292900
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00293000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00293100
.ZG37R              ANOP  ,                                             00293200
.*----------------------------------------------------------------***   00293300
.***AG.KXVAR01 VALUE, OPT INPUT, KEYS -NO ARGUMENTS                     00293400
&XRESERVED          SETC  ''          RESET XVARIABLE                   00293500
&ZXRESERVED         SETC  ''          RESET IN/OUTPUT                   00293600
&ZASYSLNDX          SETA  0                                             00293700
.ZG40A              ANOP  ,           POSITIONAL MACRO KEY              00293800
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00293900
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG40B                         00294000
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG40A            00294100
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'RESERVED').ZG40A             00294200
&ZCSYSLIST(&ZASYSLNDX) SETC  'NONXKEY'          POSITIONAL IS MACRO KEY 00294300
&XRESERVED          SETC  'RESERVED'  MACRO KEY FOUND                   00294400
&ZXRESERVED         SETC  'INPUT'     SET IN/OUTPUT                     00294500
.ZG40B              ANOP  ,                                             00294600
.*-------------------------------------------------------------------   00294700
.***AG.KXVAR03 VALUE, OPT INPUT, KEYS -NO ARGUMENTS                     00294800
                    AIF   (K'&XRESERVED GT 0).ZG40C  KEY ENTERED        00294900
&ZXRESERVED         SETC  'INPUT'     SET IN/OUTPUT                     00295000
&XRESERVED          SETC  'NONE'      SET DEFAULT                       00295100
.ZG40C              ANOP  ,                                             00295200
.*----------------------------------------------------------------***   00295300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00295400
                    AIF   (N'&IOTOKEN LE 1).ZG43A  CK NUM               00295500
&ZMS                SETC  '"IOTOKEN='                                   00295600
&ZMS                SETC  '&ZMS.&IOTOKEN"'                              00295700
&ZMS                SETC  '&ZMS "IOTOKEN"'                              00295800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00295900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00296000
.ZG43A              ANOP  ,                                             00296100
.*-------------------------------------------------------------------   00296200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00296300
&ZXIOTOKEN          SETC  'INPUT'     SET IN/OUTPUT                     00296400
&XIOTOKEN           SETC  'NONE'                                        00296500
                    AIF   (K'&IOTOKEN(1) LE 0).ZG43B  PARM              00296600
&XIOTOKEN           SETC  '&IOTOKEN(1)'         SET XVARIABLE           00296700
                    AIF   (N'&IOTOKEN GT 1).ZG43B  MULTI                00296800
&XIOTOKEN           SETC  '&IOTOKEN'  SET XVARIABLE                     00296900
.ZG43B              ANOP  ,                                             00297000
.*-------------------------------------------------------------------   00297100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00297200
                    AIF   (K'&ZXIOTOKEN LE 0).ZG43R  NOT I/O            00297300
         AIF   ('&XIOTOKEN' EQ 'NONE').ZG43R                            00297400
                    AIF   ('&XIOTOKEN'(1,1) NE '(').ZG43R               00297500
&ZCGPR              SETC  '&XIOTOKEN'(2,K'&XIOTOKEN-2)                  00297600
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG43P                  00297700
                    AIF   (K'&ZCGPR GT 2).ZG43Q                         00297800
                    AIF   ('&ZCGPR' EQ '0').ZG43Q                       00297900
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00298000
                    AIF   (T'&ZCGPR NE 'N').ZG43Q  INVALID REG NAME     00298100
.ZG43P              ANOP  ,                                             00298200
                    AIF   (T'&ZCGPR NE 'N').ZG43R  NON NUMERIC          00298300
                    AIF   ('&ZCGPR' LT '2').ZG43Q                       00298400
                    AIF   ('&ZCGPR' LE '12').ZG43R                      00298500
.ZG43Q              ANOP  ,                                             00298600
&ZMS                SETC  '"IOTOKEN='                                   00298700
&ZMS                SETC  '&ZMS.&IOTOKEN"'                              00298800
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00298900
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00299000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00299100
.ZG43R              ANOP  ,                                             00299200
.*----------------------------------------------------------------***   00299300
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00299400
                    AIF   (N'&REUSECP LE 1).ZG45A  CK NUM               00299500
&ZMS                SETC  '"REUSECP='                                   00299600
&ZMS                SETC  '&ZMS.&REUSECP"'                              00299700
&ZMS                SETC  '&ZMS "REUSECP"'                              00299800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00299900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00300000
.ZG45A              ANOP  ,                                             00300100
.*-------------------------------------------------------------------   00300200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00300300
&XREUSECP           SETC  ''          INITIALIZE XVARIABLE              00300400
.ZG46A   AIF   ('&REUSECP(1)' NE 'NO').ZG47A                            00300500
&XREUSECP           SETC  'NO'        SET KEYWORD                       00300600
.*-------------------------------------------------------------------   00300700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00300800
.ZG47A   AIF   ('&REUSECP(1)' NE 'YES').ZG48A                           00300900
&XREUSECP           SETC  'YES'       SET KEYWORD                       00301000
.*-------------------------------------------------------------------   00301100
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00301200
.ZG48A              AIF   (K'&XREUSECP GT 0).ZG48C  KEYWORD             00301300
                    AIF   (K'&REUSECP(1) LE 0).ZG48B                    00301400
&ZMS                SETC  '"REUSECP='                                   00301500
&ZMS                SETC  '&ZMS.&REUSECP"'                              00301600
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00301700
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00301800
&ZMS                SETC  '&ZMS "NO"'                                   00301900
&ZMS                SETC  '&ZMS OR "YES".'                              00302000
                    MNOTE 8,' &ZMS '                                    00302100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00302200
.ZG48B              ANOP  ,                                             00302300
&XREUSECP           SETC  'NO'        SET DEFAULT KEYWORD               00302400
.ZG48C              ANOP  ,                                             00302500
&ZXREUSECP          SETC  'INPUT'     SET IN/OUTPUT                     00302600
.*-------------------------------------------------------------------   00302700
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00302800
                    AIF   (K'&IOTOKEN(1) GT 0).ZG48D  KEY               00302900
                    AIF   (K'&REUSECP(1) LE 0).ZG48D  PARM              00303000
&ZMS                SETC  '"REUSECP'                                    00303100
&ZMS                SETC  '&ZMS.=&REUSECP"'                             00303200
&ZMS                SETC  '&ZMS CAN ONLY BE SPECIFIED IF'               00303300
&ZMS                SETC  '&ZMS '                                       00303400
&ZMS                SETC  '&ZMS "IOTOKEN"'                              00303500
                    MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                  00303600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00303700
.ZG48D              ANOP  ,                                             00303800
.*-------------------------------------------------------------------   00303900
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00304000
.ZG50ZY  AIF    ('&XFUNCTION' NE 'WRITE').ZG69ZY                        00304100
.*-------------------------------------------------------------------   00304200
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00304300
&ZCVAL              SETC ''           ERROR KEY FIELD                   00304400
.ZG50I0             AIF   (K'&ACCESS LE 0).ZG50I1                       00304500
&ZCVAL              SETC '&ZCVAL ACCESS'        DISALLOWED KEY          00304600
.ZG50I1             AIF   (K'&DEVLISTPTR LE 0).ZG50I2                   00304700
&ZCVAL              SETC '&ZCVAL DEVLISTPTR'    DISALLOWED KEY          00304800
.ZG50I2             AIF   (K'&DEVLISTPTR64 LE 0).ZG50I3                 00304900
&ZCVAL              SETC '&ZCVAL DEVLISTPTR64'  DISALLOWED KEY          00305000
.ZG50I3             AIF   (K'&DEVDESCPTR LE 0).ZG50I4                   00305100
&ZCVAL              SETC '&ZCVAL DEVDESCPTR'    DISALLOWED KEY          00305200
.ZG50I4             AIF   (K'&DEVDESCPTR64 LE 0).ZG50I5                 00305300
&ZCVAL              SETC '&ZCVAL DEVDESCPTR64'  DISALLOWED KEY          00305400
.ZG50I5             AIF   (K'&DEVCOUNT LE 0).ZG50I6                     00305500
&ZCVAL              SETC '&ZCVAL DEVCOUNT'      DISALLOWED KEY          00305600
.ZG50I6             AIF   (K'&MINDEVCOUNT LE 0).ZG50I7                  00305700
&ZCVAL              SETC '&ZCVAL MINDEVCOUNT'   DISALLOWED KEY          00305800
.ZG50I7             AIF   (K'&ZCVAL LE 0).ZG50J  KEY                    00305900
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00306000
&ZMS                SETC  '"WRITE'                                      00306100
&ZMS                SETC  '&ZMS."'                                      00306200
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00306300
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00306400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00306500
.ZG50J              ANOP  ,                                             00306600
.*----------------------------------------------------------------***   00306700
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00306800
&XKEYDEVIOLIST1     SETC  ''          INITIALIZE XVARIABLE              00306900
                    AIF   (K'&DEVIOLISTPTR LE 0).ZG52C                  00307000
&ZXKEYDEVIOLIST1    SETC  'INPUT'     SET IN/OUTPUT                     00307100
&XKEYDEVIOLIST1     SETC  'DEVIOLISTPTR'        SET XVARIABLE           00307200
&ZXDEVIOLISTPTR     SETC  'INPUT'     SET IN/OUTPUT                     00307300
&XDEVIOLISTPTR      SETC  '&DEVIOLISTPTR(1)'    SET XVARIABLE PARM      00307400
                    AIF   (N'&DEVIOLISTPTR GT 1).ZG52A                  00307500
&XDEVIOLISTPTR      SETC  '&DEVIOLISTPTR'       SET XVARIABLE PARM      00307600
.ZG52A              AIF   (N'&DEVIOLISTPTR LE 1).ZG52B  CK NUM          00307700
&ZMS                SETC  '"DEVIOLISTPTR='                              00307800
&ZMS                SETC  '&ZMS.&DEVIOLISTPTR"'                         00307900
&ZMS                SETC  '&ZMS "DEVIOLISTPTR"'                         00308000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00308100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00308200
.ZG52B              AIF   (K'&XDEVIOLISTPTR GT 0).ZG52C  ONE PARM       00308300
&ZXKEYDEVIOLIST1    SETC  ''          RESET IN/OUTPUT                   00308400
&ZXDEVIOLISTPTR     SETC  ''          RESET IN/OUTPUT                   00308500
&ZMS                SETC  ' '                                           00308600
&ZMS                SETC  '&ZMS "DEVIOLISTPTR" KEY AND ITS'             00308700
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00308800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00308900
.ZG52C              ANOP  ,                                             00309000
.*----------------------------------------------------------------***   00309100
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00309200
                    AIF   (K'&DEVIOLISTPTR64 LE 0).ZG53D  NO ME KEY     00309300
                    AIF   (N'&DEVIOLISTPTR64 LE 1).ZG53A  CK NUM        00309400
&ZMS                SETC  '"DEVIOLISTPTR64='                            00309500
&ZMS                SETC  '&ZMS.&DEVIOLISTPTR64"'                       00309600
&ZMS                SETC  '&ZMS "DEVIOLISTPTR64"'                       00309700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00309800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00309900
.ZG53A              AIF   (K'&XKEYDEVIOLIST1 LE 0).ZG53B                00310000
&ZMS                SETC  '"DEVIOLISTPTR64'                             00310100
&ZMS                SETC  '&ZMS.=&DEVIOLISTPTR64"'                      00310200
&ZMS                SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'         00310300
&ZMS                SETC  '&ZMS "&XKEYDEVIOLIST1"'                      00310400
                    MNOTE 8,' &ZMS KEY.'                                00310500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00310600
                    AGO   .ZG53D                                        00310700
.*                                                                      00310800
.ZG53B              ANOP  ,                                             00310900
&ZXKEYDEVIOLIST1    SETC  'INPUT'     SET IN/OUTPUT                     00311000
&XKEYDEVIOLIST1     SETC  'DEVIOLISTPTR64'      SET XVARIABLE           00311100
&ZXDEVIOLISTPTR64   SETC  'INPUT'     SET IN/OUTPUT                     00311200
&XDEVIOLISTPTR64    SETC  '&DEVIOLISTPTR64(1)'  SET XVARIABLE PARM      00311300
                    AIF   (N'&DEVIOLISTPTR64 GT 1).ZG53C                00311400
&XDEVIOLISTPTR64    SETC  '&DEVIOLISTPTR64'     SET XVARIABLE PARM      00311500
.ZG53C              AIF   (K'&XDEVIOLISTPTR64 GT 0).ZG53D  ONE PARM     00311600
&ZXKEYDEVIOLIST1    SETC  ''          RESET IN/OUTPUT                   00311700
&ZXDEVIOLISTPTR64   SETC  ''          RESET IN/OUTPUT                   00311800
&ZMS                SETC  ' '                                           00311900
&ZMS                SETC  '&ZMS "DEVIOLISTPTR64" KEY AND ITS'           00312000
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00312100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00312200
.ZG53D              ANOP  ,                                             00312300
.*------------------------------------------------------------------    00312400
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00312500
                    AIF   (K'&XKEYDEVIOLIST1 GT 0).ZG54B                00312600
&ZXKEYDEVIOLIST1    SETC  ''          RESET IN/OUTPUT                   00312700
&ZXDEVIOLISTPTR     SETC  ''          RESET IN/OUTPUT                   00312800
&XKEYDEVIOLIST1     SETC  ''          ENSURE NULL                       00312900
&XDEVIOLISTPTR      SETC  ''          ENSURE NULL                       00313000
&ZMS                SETC  'ONE OF THE FOLLOWING'                        00313100
&ZMS                SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'           00313200
&ZMS                SETC  '&ZMS REQUIRED:'                              00313300
&ZMS                SETC  '&ZMS "DEVIOLISTPTR"'  VALID ME KEY           00313400
&ZMS                SETC  '&ZMS OR "DEVIOLISTPTR64".'  VALID ME KEY     00313500
                    MNOTE 8,' &ZMS '                                    00313600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00313700
.ZG54B              ANOP  ,                                             00313800
.*-------------------------------------------------------------------   00313900
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00314000
.ZG52ZY  AIF    ('&XKEYDEVIOLIST1' NE 'DEVIOLISTPTR').ZG53ZY            00314100
.*-------------------------------------------------------------------   00314200
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00314300
                    AIF   (K'&ZXDEVIOLISTPTR LE 0).ZG52R  NOT I/O       00314400
                    AIF   ('&XDEVIOLISTPTR'(1,1) NE '(').ZG52R          00314500
&ZCGPR              SETC  '&XDEVIOLISTPTR'(2,K'&XDEVIOLISTPTR-2)        00314600
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG52P                  00314700
                    AIF   (K'&ZCGPR GT 2).ZG52Q                         00314800
                    AIF   ('&ZCGPR' EQ '0').ZG52Q                       00314900
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00315000
                    AIF   (T'&ZCGPR NE 'N').ZG52Q  INVALID REG NAME     00315100
.ZG52P              ANOP  ,                                             00315200
                    AIF   (T'&ZCGPR NE 'N').ZG52R  NON NUMERIC          00315300
                    AIF   ('&ZCGPR' LT '2').ZG52Q                       00315400
                    AIF   ('&ZCGPR' LE '12').ZG52R                      00315500
.ZG52Q              ANOP  ,                                             00315600
&ZMS                SETC  '"DEVIOLISTPTR='                              00315700
&ZMS                SETC  '&ZMS.&DEVIOLISTPTR"'                         00315800
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00315900
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00316000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00316100
.ZG52R              ANOP  ,                                             00316200
.*-------------------------------------------------------------------   00316300
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00316400
.ZG53ZY  AIF    ('&XKEYDEVIOLIST1' NE 'DEVIOLISTPTR64').ZG54ZY          00316500
.*-------------------------------------------------------------------   00316600
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00316700
                    AIF   (K'&ZXDEVIOLISTPTR64 LE 0).ZG53R  NOT I/O     00316800
                    AIF   ('&XDEVIOLISTPTR64'(1,1) NE '(').ZG53R        00316900
&ZCGPR              SETC  '&XDEVIOLISTPTR64'(2,K'&XDEVIOLISTPTR64-2)    00317000
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG53P                  00317100
                    AIF   (K'&ZCGPR GT 2).ZG53Q                         00317200
                    AIF   ('&ZCGPR' EQ '0').ZG53Q                       00317300
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00317400
                    AIF   (T'&ZCGPR NE 'N').ZG53Q  INVALID REG NAME     00317500
.ZG53P              ANOP  ,                                             00317600
                    AIF   (T'&ZCGPR NE 'N').ZG53R  NON NUMERIC          00317700
                    AIF   ('&ZCGPR' LT '2').ZG53Q                       00317800
                    AIF   ('&ZCGPR' LE '12').ZG53R                      00317900
.ZG53Q              ANOP  ,                                             00318000
&ZMS                SETC  '"DEVIOLISTPTR64='                            00318100
&ZMS                SETC  '&ZMS.&DEVIOLISTPTR64"'                       00318200
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00318300
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00318400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00318500
.ZG53R              ANOP  ,                                             00318600
.*-------------------------------------------------------------------   00318700
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00318800
.ZG54ZY             ANOP ,            END MUTUALLY EXCLUSIVE KEYS       00318900
.*----------------------------------------------------------------***   00319000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00319100
                    AIF   (N'&ECB LE 1).ZG56A   CK NUM                  00319200
&ZMS                SETC  '"ECB='                                       00319300
&ZMS                SETC  '&ZMS.&ECB"'                                  00319400
&ZMS                SETC  '&ZMS "ECB"'                                  00319500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00319600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00319700
.ZG56A              ANOP  ,                                             00319800
.*-------------------------------------------------------------------   00319900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00320000
&ZXECB              SETC  'INPUT'     SET IN/OUTPUT                     00320100
&XECB               SETC  'NONE'                                        00320200
                    AIF   (K'&ECB(1) LE 0).ZG56B  PARM                  00320300
&XECB               SETC  '&ECB(1)'   SET XVARIABLE                     00320400
                    AIF   (N'&ECB GT 1).ZG56B   MULTI                   00320500
&XECB               SETC  '&ECB'      SET XVARIABLE                     00320600
.ZG56B              ANOP  ,                                             00320700
.*-------------------------------------------------------------------   00320800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00320900
                    AIF   (K'&ZXECB LE 0).ZG56R  NOT I/O                00321000
         AIF   ('&XECB' EQ 'NONE').ZG56R                                00321100
                    AIF   ('&XECB'(1,1) NE '(').ZG56R                   00321200
&ZCGPR              SETC  '&XECB'(2,K'&XECB-2)                          00321300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG56P                  00321400
                    AIF   (K'&ZCGPR GT 2).ZG56Q                         00321500
                    AIF   ('&ZCGPR' EQ '0').ZG56Q                       00321600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00321700
                    AIF   (T'&ZCGPR NE 'N').ZG56Q  INVALID REG NAME     00321800
.ZG56P              ANOP  ,                                             00321900
                    AIF   (T'&ZCGPR NE 'N').ZG56R  NON NUMERIC          00322000
                    AIF   ('&ZCGPR' LT '2').ZG56Q                       00322100
                    AIF   ('&ZCGPR' LE '12').ZG56R                      00322200
.ZG56Q              ANOP  ,                                             00322300
&ZMS                SETC  '"ECB='                                       00322400
&ZMS                SETC  '&ZMS.&ECB"'                                  00322500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00322600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00322700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00322800
.ZG56R              ANOP  ,                                             00322900
.*----------------------------------------------------------------***   00323000
.***AG.KXVAR01 VALUE, OPT INPUT, KEYS -NO ARGUMENTS                     00323100
&XRESERVED          SETC  ''          RESET XVARIABLE                   00323200
&ZXRESERVED         SETC  ''          RESET IN/OUTPUT                   00323300
&ZASYSLNDX          SETA  0                                             00323400
.ZG59A              ANOP  ,           POSITIONAL MACRO KEY              00323500
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00323600
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG59B                         00323700
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG59A            00323800
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'RESERVED').ZG59A             00323900
&ZCSYSLIST(&ZASYSLNDX) SETC  'NONXKEY'          POSITIONAL IS MACRO KEY 00324000
&XRESERVED          SETC  'RESERVED'  MACRO KEY FOUND                   00324100
&ZXRESERVED         SETC  'INPUT'     SET IN/OUTPUT                     00324200
.ZG59B              ANOP  ,                                             00324300
.*-------------------------------------------------------------------   00324400
.***AG.KXVAR03 VALUE, OPT INPUT, KEYS -NO ARGUMENTS                     00324500
                    AIF   (K'&XRESERVED GT 0).ZG59C  KEY ENTERED        00324600
&ZXRESERVED         SETC  'INPUT'     SET IN/OUTPUT                     00324700
&XRESERVED          SETC  'NONE'      SET DEFAULT                       00324800
.ZG59C              ANOP  ,                                             00324900
.*----------------------------------------------------------------***   00325000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00325100
                    AIF   (N'&IOTOKEN LE 1).ZG62A  CK NUM               00325200
&ZMS                SETC  '"IOTOKEN='                                   00325300
&ZMS                SETC  '&ZMS.&IOTOKEN"'                              00325400
&ZMS                SETC  '&ZMS "IOTOKEN"'                              00325500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00325600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00325700
.ZG62A              ANOP  ,                                             00325800
.*-------------------------------------------------------------------   00325900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00326000
&ZXIOTOKEN          SETC  'INPUT'     SET IN/OUTPUT                     00326100
&XIOTOKEN           SETC  'NONE'                                        00326200
                    AIF   (K'&IOTOKEN(1) LE 0).ZG62B  PARM              00326300
&XIOTOKEN           SETC  '&IOTOKEN(1)'         SET XVARIABLE           00326400
                    AIF   (N'&IOTOKEN GT 1).ZG62B  MULTI                00326500
&XIOTOKEN           SETC  '&IOTOKEN'  SET XVARIABLE                     00326600
.ZG62B              ANOP  ,                                             00326700
.*-------------------------------------------------------------------   00326800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00326900
                    AIF   (K'&ZXIOTOKEN LE 0).ZG62R  NOT I/O            00327000
         AIF   ('&XIOTOKEN' EQ 'NONE').ZG62R                            00327100
                    AIF   ('&XIOTOKEN'(1,1) NE '(').ZG62R               00327200
&ZCGPR              SETC  '&XIOTOKEN'(2,K'&XIOTOKEN-2)                  00327300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG62P                  00327400
                    AIF   (K'&ZCGPR GT 2).ZG62Q                         00327500
                    AIF   ('&ZCGPR' EQ '0').ZG62Q                       00327600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00327700
                    AIF   (T'&ZCGPR NE 'N').ZG62Q  INVALID REG NAME     00327800
.ZG62P              ANOP  ,                                             00327900
                    AIF   (T'&ZCGPR NE 'N').ZG62R  NON NUMERIC          00328000
                    AIF   ('&ZCGPR' LT '2').ZG62Q                       00328100
                    AIF   ('&ZCGPR' LE '12').ZG62R                      00328200
.ZG62Q              ANOP  ,                                             00328300
&ZMS                SETC  '"IOTOKEN='                                   00328400
&ZMS                SETC  '&ZMS.&IOTOKEN"'                              00328500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00328600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00328700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00328800
.ZG62R              ANOP  ,                                             00328900
.*----------------------------------------------------------------***   00329000
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00329100
                    AIF   (N'&REUSECP LE 1).ZG64A  CK NUM               00329200
&ZMS                SETC  '"REUSECP='                                   00329300
&ZMS                SETC  '&ZMS.&REUSECP"'                              00329400
&ZMS                SETC  '&ZMS "REUSECP"'                              00329500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00329600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00329700
.ZG64A              ANOP  ,                                             00329800
.*-------------------------------------------------------------------   00329900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00330000
&XREUSECP           SETC  ''          INITIALIZE XVARIABLE              00330100
.ZG65A   AIF   ('&REUSECP(1)' NE 'NO').ZG66A                            00330200
&XREUSECP           SETC  'NO'        SET KEYWORD                       00330300
.*-------------------------------------------------------------------   00330400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00330500
.ZG66A   AIF   ('&REUSECP(1)' NE 'YES').ZG67A                           00330600
&XREUSECP           SETC  'YES'       SET KEYWORD                       00330700
.*-------------------------------------------------------------------   00330800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00330900
.ZG67A              AIF   (K'&XREUSECP GT 0).ZG67C  KEYWORD             00331000
                    AIF   (K'&REUSECP(1) LE 0).ZG67B                    00331100
&ZMS                SETC  '"REUSECP='                                   00331200
&ZMS                SETC  '&ZMS.&REUSECP"'                              00331300
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00331400
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00331500
&ZMS                SETC  '&ZMS "NO"'                                   00331600
&ZMS                SETC  '&ZMS OR "YES".'                              00331700
                    MNOTE 8,' &ZMS '                                    00331800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00331900
.ZG67B              ANOP  ,                                             00332000
&XREUSECP           SETC  'NO'        SET DEFAULT KEYWORD               00332100
.ZG67C              ANOP  ,                                             00332200
&ZXREUSECP          SETC  'INPUT'     SET IN/OUTPUT                     00332300
.*-------------------------------------------------------------------   00332400
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00332500
                    AIF   (K'&IOTOKEN(1) GT 0).ZG67D  KEY               00332600
                    AIF   (K'&REUSECP(1) LE 0).ZG67D  PARM              00332700
&ZMS                SETC  '"REUSECP'                                    00332800
&ZMS                SETC  '&ZMS.=&REUSECP"'                             00332900
&ZMS                SETC  '&ZMS CAN ONLY BE SPECIFIED IF'               00333000
&ZMS                SETC  '&ZMS '                                       00333100
&ZMS                SETC  '&ZMS "IOTOKEN"'                              00333200
                    MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                  00333300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00333400
.ZG67D              ANOP  ,                                             00333500
.*-------------------------------------------------------------------   00333600
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00333700
.ZG69ZY  AIF    ('&XFUNCTION' NE 'ERASE').ZG74ZY                        00333800
.*-------------------------------------------------------------------   00333900
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00334000
&ZCVAL              SETC ''           ERROR KEY FIELD                   00334100
.ZG69I0             AIF   (K'&ACCESS LE 0).ZG69I1                       00334200
&ZCVAL              SETC '&ZCVAL ACCESS'        DISALLOWED KEY          00334300
.ZG69I1             AIF   (K'&DEVLISTPTR LE 0).ZG69I2                   00334400
&ZCVAL              SETC '&ZCVAL DEVLISTPTR'    DISALLOWED KEY          00334500
.ZG69I2             AIF   (K'&DEVLISTPTR64 LE 0).ZG69I3                 00334600
&ZCVAL              SETC '&ZCVAL DEVLISTPTR64'  DISALLOWED KEY          00334700
.ZG69I3             AIF   (K'&DEVCOUNT LE 0).ZG69I4                     00334800
&ZCVAL              SETC '&ZCVAL DEVCOUNT'      DISALLOWED KEY          00334900
.ZG69I4             AIF   (K'&MINDEVCOUNT LE 0).ZG69I5                  00335000
&ZCVAL              SETC '&ZCVAL MINDEVCOUNT'   DISALLOWED KEY          00335100
.ZG69I5             AIF   (K'&DEVIOLISTPTR LE 0).ZG69I6                 00335200
&ZCVAL              SETC '&ZCVAL DEVIOLISTPTR'  DISALLOWED KEY          00335300
.ZG69I6             AIF   (K'&DEVIOLISTPTR64 LE 0).ZG69I7               00335400
&ZCVAL              SETC '&ZCVAL DEVIOLISTPTR64'  DISALLOWED KEY        00335500
.ZG69I7             AIF   (K'&ECB LE 0).ZG69I8                          00335600
&ZCVAL              SETC '&ZCVAL ECB'           DISALLOWED KEY          00335700
.ZG69I8             AIF   (K'&XRESERVED LE 0).ZG69I9                    00335800
&ZCVAL              SETC '&ZCVAL XRESERVED'     DISALLOWED KEY          00335900
.ZG69I9             AIF   (K'&IOTOKEN LE 0).ZG69I10                     00336000
&ZCVAL              SETC '&ZCVAL IOTOKEN'       DISALLOWED KEY          00336100
.ZG69I10            AIF   (K'&REUSECP LE 0).ZG69I11                     00336200
&ZCVAL              SETC '&ZCVAL REUSECP'       DISALLOWED KEY          00336300
.ZG69I11            AIF   (K'&XRESERVED LE 0).ZG69I12                   00336400
&ZCVAL              SETC '&ZCVAL XRESERVED'     DISALLOWED KEY          00336500
.ZG69I12            AIF   (K'&ZCVAL LE 0).ZG69J  KEY                    00336600
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00336700
&ZMS                SETC  '"ERASE'                                      00336800
&ZMS                SETC  '&ZMS."'                                      00336900
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00337000
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00337100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00337200
.ZG69J              ANOP  ,                                             00337300
.*----------------------------------------------------------------***   00337400
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00337500
&XKEYDEVDESC1       SETC  ''          INITIALIZE XVARIABLE              00337600
                    AIF   (K'&DEVDESCPTR LE 0).ZG71C                    00337700
&ZXKEYDEVDESC1      SETC  'INPUT'     SET IN/OUTPUT                     00337800
&XKEYDEVDESC1       SETC  'DEVDESCPTR'          SET XVARIABLE           00337900
&ZXDEVDESCPTR       SETC  'INPUT'     SET IN/OUTPUT                     00338000
&XDEVDESCPTR        SETC  '&DEVDESCPTR(1)'      SET XVARIABLE PARM      00338100
                    AIF   (N'&DEVDESCPTR GT 1).ZG71A                    00338200
&XDEVDESCPTR        SETC  '&DEVDESCPTR'         SET XVARIABLE PARM      00338300
.ZG71A              AIF   (N'&DEVDESCPTR LE 1).ZG71B  CK NUM            00338400
&ZMS                SETC  '"DEVDESCPTR='                                00338500
&ZMS                SETC  '&ZMS.&DEVDESCPTR"'                           00338600
&ZMS                SETC  '&ZMS "DEVDESCPTR"'                           00338700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00338800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00338900
.ZG71B              AIF   (K'&XDEVDESCPTR GT 0).ZG71C  ONE PARM         00339000
&ZXKEYDEVDESC1      SETC  ''          RESET IN/OUTPUT                   00339100
&ZXDEVDESCPTR       SETC  ''          RESET IN/OUTPUT                   00339200
&ZMS                SETC  ' '                                           00339300
&ZMS                SETC  '&ZMS "DEVDESCPTR" KEY AND ITS'               00339400
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00339500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00339600
.ZG71C              ANOP  ,                                             00339700
.*----------------------------------------------------------------***   00339800
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00339900
                    AIF   (K'&DEVDESCPTR64 LE 0).ZG72D  NO ME KEY       00340000
                    AIF   (N'&DEVDESCPTR64 LE 1).ZG72A  CK NUM          00340100
&ZMS                SETC  '"DEVDESCPTR64='                              00340200
&ZMS                SETC  '&ZMS.&DEVDESCPTR64"'                         00340300
&ZMS                SETC  '&ZMS "DEVDESCPTR64"'                         00340400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00340500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00340600
.ZG72A              AIF   (K'&XKEYDEVDESC1 LE 0).ZG72B                  00340700
&ZMS                SETC  '"DEVDESCPTR64'                               00340800
&ZMS                SETC  '&ZMS.=&DEVDESCPTR64"'                        00340900
&ZMS                SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'         00341000
&ZMS                SETC  '&ZMS "&XKEYDEVDESC1"'                        00341100
                    MNOTE 8,' &ZMS KEY.'                                00341200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00341300
                    AGO   .ZG72D                                        00341400
.*                                                                      00341500
.ZG72B              ANOP  ,                                             00341600
&ZXKEYDEVDESC1      SETC  'INPUT'     SET IN/OUTPUT                     00341700
&XKEYDEVDESC1       SETC  'DEVDESCPTR64'        SET XVARIABLE           00341800
&ZXDEVDESCPTR64     SETC  'INPUT'     SET IN/OUTPUT                     00341900
&XDEVDESCPTR64      SETC  '&DEVDESCPTR64(1)'    SET XVARIABLE PARM      00342000
                    AIF   (N'&DEVDESCPTR64 GT 1).ZG72C                  00342100
&XDEVDESCPTR64      SETC  '&DEVDESCPTR64'       SET XVARIABLE PARM      00342200
.ZG72C              AIF   (K'&XDEVDESCPTR64 GT 0).ZG72D  ONE PARM       00342300
&ZXKEYDEVDESC1      SETC  ''          RESET IN/OUTPUT                   00342400
&ZXDEVDESCPTR64     SETC  ''          RESET IN/OUTPUT                   00342500
&ZMS                SETC  ' '                                           00342600
&ZMS                SETC  '&ZMS "DEVDESCPTR64" KEY AND ITS'             00342700
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00342800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00342900
.ZG72D              ANOP  ,                                             00343000
.*------------------------------------------------------------------    00343100
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00343200
                    AIF   (K'&XKEYDEVDESC1 GT 0).ZG73B                  00343300
&ZXKEYDEVDESC1      SETC  ''          RESET IN/OUTPUT                   00343400
&ZXDEVDESCPTR       SETC  ''          RESET IN/OUTPUT                   00343500
&XKEYDEVDESC1       SETC  ''          ENSURE NULL                       00343600
&XDEVDESCPTR        SETC  ''          ENSURE NULL                       00343700
&ZMS                SETC  'ONE OF THE FOLLOWING'                        00343800
&ZMS                SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'           00343900
&ZMS                SETC  '&ZMS REQUIRED:'                              00344000
&ZMS                SETC  '&ZMS "DEVDESCPTR"'   VALID ME KEY            00344100
&ZMS                SETC  '&ZMS OR "DEVDESCPTR64".'  VALID ME KEY       00344200
                    MNOTE 8,' &ZMS '                                    00344300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00344400
.ZG73B              ANOP  ,                                             00344500
.*-------------------------------------------------------------------   00344600
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00344700
.ZG71ZY  AIF    ('&XKEYDEVDESC1' NE 'DEVDESCPTR').ZG72ZY                00344800
.*-------------------------------------------------------------------   00344900
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00345000
                    AIF   (K'&ZXDEVDESCPTR LE 0).ZG71R  NOT I/O         00345100
                    AIF   ('&XDEVDESCPTR'(1,1) NE '(').ZG71R            00345200
&ZCGPR              SETC  '&XDEVDESCPTR'(2,K'&XDEVDESCPTR-2)            00345300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG71P                  00345400
                    AIF   (K'&ZCGPR GT 2).ZG71Q                         00345500
                    AIF   ('&ZCGPR' EQ '0').ZG71Q                       00345600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00345700
                    AIF   (T'&ZCGPR NE 'N').ZG71Q  INVALID REG NAME     00345800
.ZG71P              ANOP  ,                                             00345900
                    AIF   (T'&ZCGPR NE 'N').ZG71R  NON NUMERIC          00346000
                    AIF   ('&ZCGPR' LT '2').ZG71Q                       00346100
                    AIF   ('&ZCGPR' LE '12').ZG71R                      00346200
.ZG71Q              ANOP  ,                                             00346300
&ZMS                SETC  '"DEVDESCPTR='                                00346400
&ZMS                SETC  '&ZMS.&DEVDESCPTR"'                           00346500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00346600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00346700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00346800
.ZG71R              ANOP  ,                                             00346900
.*-------------------------------------------------------------------   00347000
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00347100
.ZG72ZY  AIF    ('&XKEYDEVDESC1' NE 'DEVDESCPTR64').ZG73ZY              00347200
.*-------------------------------------------------------------------   00347300
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00347400
                    AIF   (K'&ZXDEVDESCPTR64 LE 0).ZG72R  NOT I/O       00347500
                    AIF   ('&XDEVDESCPTR64'(1,1) NE '(').ZG72R          00347600
&ZCGPR              SETC  '&XDEVDESCPTR64'(2,K'&XDEVDESCPTR64-2)        00347700
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG72P                  00347800
                    AIF   (K'&ZCGPR GT 2).ZG72Q                         00347900
                    AIF   ('&ZCGPR' EQ '0').ZG72Q                       00348000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00348100
                    AIF   (T'&ZCGPR NE 'N').ZG72Q  INVALID REG NAME     00348200
.ZG72P              ANOP  ,                                             00348300
                    AIF   (T'&ZCGPR NE 'N').ZG72R  NON NUMERIC          00348400
                    AIF   ('&ZCGPR' LT '2').ZG72Q                       00348500
                    AIF   ('&ZCGPR' LE '12').ZG72R                      00348600
.ZG72Q              ANOP  ,                                             00348700
&ZMS                SETC  '"DEVDESCPTR64='                              00348800
&ZMS                SETC  '&ZMS.&DEVDESCPTR64"'                         00348900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00349000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00349100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00349200
.ZG72R              ANOP  ,                                             00349300
.*-------------------------------------------------------------------   00349400
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00349500
.ZG73ZY             ANOP ,            END MUTUALLY EXCLUSIVE KEYS       00349600
.*-------------------------------------------------------------------   00349700
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00349800
.ZG74ZY  AIF    ('&XFUNCTION' NE 'CLEANUP').ZG78ZY                      00349900
.*-------------------------------------------------------------------   00350000
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00350100
&ZCVAL              SETC ''           ERROR KEY FIELD                   00350200
.ZG74I0             AIF   (K'&ACCESS LE 0).ZG74I1                       00350300
&ZCVAL              SETC '&ZCVAL ACCESS'        DISALLOWED KEY          00350400
.ZG74I1             AIF   (K'&DEVLISTPTR LE 0).ZG74I2                   00350500
&ZCVAL              SETC '&ZCVAL DEVLISTPTR'    DISALLOWED KEY          00350600
.ZG74I2             AIF   (K'&DEVLISTPTR64 LE 0).ZG74I3                 00350700
&ZCVAL              SETC '&ZCVAL DEVLISTPTR64'  DISALLOWED KEY          00350800
.ZG74I3             AIF   (K'&DEVDESCPTR LE 0).ZG74I4                   00350900
&ZCVAL              SETC '&ZCVAL DEVDESCPTR'    DISALLOWED KEY          00351000
.ZG74I4             AIF   (K'&DEVDESCPTR64 LE 0).ZG74I5                 00351100
&ZCVAL              SETC '&ZCVAL DEVDESCPTR64'  DISALLOWED KEY          00351200
.ZG74I5             AIF   (K'&DEVCOUNT LE 0).ZG74I6                     00351300
&ZCVAL              SETC '&ZCVAL DEVCOUNT'      DISALLOWED KEY          00351400
.ZG74I6             AIF   (K'&MINDEVCOUNT LE 0).ZG74I7                  00351500
&ZCVAL              SETC '&ZCVAL MINDEVCOUNT'   DISALLOWED KEY          00351600
.ZG74I7             AIF   (K'&DEVIOLISTPTR LE 0).ZG74I8                 00351700
&ZCVAL              SETC '&ZCVAL DEVIOLISTPTR'  DISALLOWED KEY          00351800
.ZG74I8             AIF   (K'&DEVIOLISTPTR64 LE 0).ZG74I9               00351900
&ZCVAL              SETC '&ZCVAL DEVIOLISTPTR64'  DISALLOWED KEY        00352000
.ZG74I9             AIF   (K'&ECB LE 0).ZG74I10                         00352100
&ZCVAL              SETC '&ZCVAL ECB'           DISALLOWED KEY          00352200
.ZG74I10            AIF   (K'&XRESERVED LE 0).ZG74I11                   00352300
&ZCVAL              SETC '&ZCVAL XRESERVED'     DISALLOWED KEY          00352400
.ZG74I11            AIF   (K'&REUSECP LE 0).ZG74I12                     00352500
&ZCVAL              SETC '&ZCVAL REUSECP'       DISALLOWED KEY          00352600
.ZG74I12            AIF   (K'&XRESERVED LE 0).ZG74I13                   00352700
&ZCVAL              SETC '&ZCVAL XRESERVED'     DISALLOWED KEY          00352800
.ZG74I13            AIF   (K'&ZCVAL LE 0).ZG74J  KEY                    00352900
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00353000
&ZMS                SETC  '"CLEANUP'                                    00353100
&ZMS                SETC  '&ZMS."'                                      00353200
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00353300
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00353400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00353500
.ZG74J              ANOP  ,                                             00353600
.*----------------------------------------------------------------***   00353700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00353800
                    AIF   (N'&IOTOKEN LE 1).ZG76A  CK NUM               00353900
&ZMS                SETC  '"IOTOKEN='                                   00354000
&ZMS                SETC  '&ZMS.&IOTOKEN"'                              00354100
&ZMS                SETC  '&ZMS "IOTOKEN"'                              00354200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00354300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00354400
.ZG76A              ANOP  ,                                             00354500
.*-------------------------------------------------------------------   00354600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00354700
&ZXIOTOKEN          SETC  'INPUT'     SET IN/OUTPUT                     00354800
&XIOTOKEN           SETC  '&IOTOKEN(1)'         SET XVARIABLE           00354900
                    AIF   (N'&IOTOKEN GT 1).ZG76B  MULTI                00355000
&XIOTOKEN           SETC  '&IOTOKEN'  SET XVARIABLE                     00355100
.ZG76B              AIF   (K'&IOTOKEN(1) GT 0).ZG76C                    00355200
&ZXIOTOKEN          SETC  ''          RESET IN/OUTPUT                   00355300
&ZMS                SETC  ' '                                           00355400
&ZMS                SETC  '&ZMS "IOTOKEN" KEY AND ITS'                  00355500
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00355600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00355700
.ZG76C              ANOP  ,                                             00355800
.*-------------------------------------------------------------------   00355900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00356000
                    AIF   (K'&ZXIOTOKEN LE 0).ZG76R  NOT I/O            00356100
                    AIF   ('&XIOTOKEN'(1,1) NE '(').ZG76R               00356200
&ZCGPR              SETC  '&XIOTOKEN'(2,K'&XIOTOKEN-2)                  00356300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG76P                  00356400
                    AIF   (K'&ZCGPR GT 2).ZG76Q                         00356500
                    AIF   ('&ZCGPR' EQ '0').ZG76Q                       00356600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00356700
                    AIF   (T'&ZCGPR NE 'N').ZG76Q  INVALID REG NAME     00356800
.ZG76P              ANOP  ,                                             00356900
                    AIF   (T'&ZCGPR NE 'N').ZG76R  NON NUMERIC          00357000
                    AIF   ('&ZCGPR' LT '2').ZG76Q                       00357100
                    AIF   ('&ZCGPR' LE '12').ZG76R                      00357200
.ZG76Q              ANOP  ,                                             00357300
&ZMS                SETC  '"IOTOKEN='                                   00357400
&ZMS                SETC  '&ZMS.&IOTOKEN"'                              00357500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00357600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00357700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00357800
.ZG76R              ANOP  ,                                             00357900
.*-------------------------------------------------------------------   00358000
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00358100
.ZG78ZY  AIF    ('&XFUNCTION' NE 'UNALLOCATE').ZG83ZY                   00358200
.*-------------------------------------------------------------------   00358300
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00358400
&ZCVAL              SETC ''           ERROR KEY FIELD                   00358500
.ZG78I0             AIF   (K'&ACCESS LE 0).ZG78I1                       00358600
&ZCVAL              SETC '&ZCVAL ACCESS'        DISALLOWED KEY          00358700
.ZG78I1             AIF   (K'&DEVLISTPTR LE 0).ZG78I2                   00358800
&ZCVAL              SETC '&ZCVAL DEVLISTPTR'    DISALLOWED KEY          00358900
.ZG78I2             AIF   (K'&DEVLISTPTR64 LE 0).ZG78I3                 00359000
&ZCVAL              SETC '&ZCVAL DEVLISTPTR64'  DISALLOWED KEY          00359100
.ZG78I3             AIF   (K'&DEVCOUNT LE 0).ZG78I4                     00359200
&ZCVAL              SETC '&ZCVAL DEVCOUNT'      DISALLOWED KEY          00359300
.ZG78I4             AIF   (K'&MINDEVCOUNT LE 0).ZG78I5                  00359400
&ZCVAL              SETC '&ZCVAL MINDEVCOUNT'   DISALLOWED KEY          00359500
.ZG78I5             AIF   (K'&DEVIOLISTPTR LE 0).ZG78I6                 00359600
&ZCVAL              SETC '&ZCVAL DEVIOLISTPTR'  DISALLOWED KEY          00359700
.ZG78I6             AIF   (K'&DEVIOLISTPTR64 LE 0).ZG78I7               00359800
&ZCVAL              SETC '&ZCVAL DEVIOLISTPTR64'  DISALLOWED KEY        00359900
.ZG78I7             AIF   (K'&ECB LE 0).ZG78I8                          00360000
&ZCVAL              SETC '&ZCVAL ECB'           DISALLOWED KEY          00360100
.ZG78I8             AIF   (K'&XRESERVED LE 0).ZG78I9                    00360200
&ZCVAL              SETC '&ZCVAL XRESERVED'     DISALLOWED KEY          00360300
.ZG78I9             AIF   (K'&IOTOKEN LE 0).ZG78I10                     00360400
&ZCVAL              SETC '&ZCVAL IOTOKEN'       DISALLOWED KEY          00360500
.ZG78I10            AIF   (K'&REUSECP LE 0).ZG78I11                     00360600
&ZCVAL              SETC '&ZCVAL REUSECP'       DISALLOWED KEY          00360700
.ZG78I11            AIF   (K'&XRESERVED LE 0).ZG78I12                   00360800
&ZCVAL              SETC '&ZCVAL XRESERVED'     DISALLOWED KEY          00360900
.ZG78I12            AIF   (K'&ZCVAL LE 0).ZG78J  KEY                    00361000
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00361100
&ZMS                SETC  '"UNALLOCATE'                                 00361200
&ZMS                SETC  '&ZMS."'                                      00361300
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00361400
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00361500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00361600
.ZG78J              ANOP  ,                                             00361700
.*----------------------------------------------------------------***   00361800
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00361900
&XKEYDEVDESC1       SETC  ''          INITIALIZE XVARIABLE              00362000
                    AIF   (K'&DEVDESCPTR LE 0).ZG80C                    00362100
&ZXKEYDEVDESC1      SETC  'INPUT'     SET IN/OUTPUT                     00362200
&XKEYDEVDESC1       SETC  'DEVDESCPTR'          SET XVARIABLE           00362300
&ZXDEVDESCPTR       SETC  'INPUT'     SET IN/OUTPUT                     00362400
&XDEVDESCPTR        SETC  '&DEVDESCPTR(1)'      SET XVARIABLE PARM      00362500
                    AIF   (N'&DEVDESCPTR GT 1).ZG80A                    00362600
&XDEVDESCPTR        SETC  '&DEVDESCPTR'         SET XVARIABLE PARM      00362700
.ZG80A              AIF   (N'&DEVDESCPTR LE 1).ZG80B  CK NUM            00362800
&ZMS                SETC  '"DEVDESCPTR='                                00362900
&ZMS                SETC  '&ZMS.&DEVDESCPTR"'                           00363000
&ZMS                SETC  '&ZMS "DEVDESCPTR"'                           00363100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00363200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00363300
.ZG80B              AIF   (K'&XDEVDESCPTR GT 0).ZG80C  ONE PARM         00363400
&ZXKEYDEVDESC1      SETC  ''          RESET IN/OUTPUT                   00363500
&ZXDEVDESCPTR       SETC  ''          RESET IN/OUTPUT                   00363600
&ZMS                SETC  ' '                                           00363700
&ZMS                SETC  '&ZMS "DEVDESCPTR" KEY AND ITS'               00363800
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00363900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00364000
.ZG80C              ANOP  ,                                             00364100
.*----------------------------------------------------------------***   00364200
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00364300
                    AIF   (K'&DEVDESCPTR64 LE 0).ZG81D  NO ME KEY       00364400
                    AIF   (N'&DEVDESCPTR64 LE 1).ZG81A  CK NUM          00364500
&ZMS                SETC  '"DEVDESCPTR64='                              00364600
&ZMS                SETC  '&ZMS.&DEVDESCPTR64"'                         00364700
&ZMS                SETC  '&ZMS "DEVDESCPTR64"'                         00364800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00364900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00365000
.ZG81A              AIF   (K'&XKEYDEVDESC1 LE 0).ZG81B                  00365100
&ZMS                SETC  '"DEVDESCPTR64'                               00365200
&ZMS                SETC  '&ZMS.=&DEVDESCPTR64"'                        00365300
&ZMS                SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'         00365400
&ZMS                SETC  '&ZMS "&XKEYDEVDESC1"'                        00365500
                    MNOTE 8,' &ZMS KEY.'                                00365600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00365700
                    AGO   .ZG81D                                        00365800
.*                                                                      00365900
.ZG81B              ANOP  ,                                             00366000
&ZXKEYDEVDESC1      SETC  'INPUT'     SET IN/OUTPUT                     00366100
&XKEYDEVDESC1       SETC  'DEVDESCPTR64'        SET XVARIABLE           00366200
&ZXDEVDESCPTR64     SETC  'INPUT'     SET IN/OUTPUT                     00366300
&XDEVDESCPTR64      SETC  '&DEVDESCPTR64(1)'    SET XVARIABLE PARM      00366400
                    AIF   (N'&DEVDESCPTR64 GT 1).ZG81C                  00366500
&XDEVDESCPTR64      SETC  '&DEVDESCPTR64'       SET XVARIABLE PARM      00366600
.ZG81C              AIF   (K'&XDEVDESCPTR64 GT 0).ZG81D  ONE PARM       00366700
&ZXKEYDEVDESC1      SETC  ''          RESET IN/OUTPUT                   00366800
&ZXDEVDESCPTR64     SETC  ''          RESET IN/OUTPUT                   00366900
&ZMS                SETC  ' '                                           00367000
&ZMS                SETC  '&ZMS "DEVDESCPTR64" KEY AND ITS'             00367100
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00367200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00367300
.ZG81D              ANOP  ,                                             00367400
.*------------------------------------------------------------------    00367500
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00367600
                    AIF   (K'&XKEYDEVDESC1 GT 0).ZG82B                  00367700
&ZXKEYDEVDESC1      SETC  ''          RESET IN/OUTPUT                   00367800
&ZXDEVDESCPTR       SETC  ''          RESET IN/OUTPUT                   00367900
&XKEYDEVDESC1       SETC  ''          ENSURE NULL                       00368000
&XDEVDESCPTR        SETC  ''          ENSURE NULL                       00368100
&ZMS                SETC  'ONE OF THE FOLLOWING'                        00368200
&ZMS                SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'           00368300
&ZMS                SETC  '&ZMS REQUIRED:'                              00368400
&ZMS                SETC  '&ZMS "DEVDESCPTR"'   VALID ME KEY            00368500
&ZMS                SETC  '&ZMS OR "DEVDESCPTR64".'  VALID ME KEY       00368600
                    MNOTE 8,' &ZMS '                                    00368700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00368800
.ZG82B              ANOP  ,                                             00368900
.*-------------------------------------------------------------------   00369000
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00369100
.ZG80ZY  AIF    ('&XKEYDEVDESC1' NE 'DEVDESCPTR').ZG81ZY                00369200
.*-------------------------------------------------------------------   00369300
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00369400
                    AIF   (K'&ZXDEVDESCPTR LE 0).ZG80R  NOT I/O         00369500
                    AIF   ('&XDEVDESCPTR'(1,1) NE '(').ZG80R            00369600
&ZCGPR              SETC  '&XDEVDESCPTR'(2,K'&XDEVDESCPTR-2)            00369700
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG80P                  00369800
                    AIF   (K'&ZCGPR GT 2).ZG80Q                         00369900
                    AIF   ('&ZCGPR' EQ '0').ZG80Q                       00370000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00370100
                    AIF   (T'&ZCGPR NE 'N').ZG80Q  INVALID REG NAME     00370200
.ZG80P              ANOP  ,                                             00370300
                    AIF   (T'&ZCGPR NE 'N').ZG80R  NON NUMERIC          00370400
                    AIF   ('&ZCGPR' LT '2').ZG80Q                       00370500
                    AIF   ('&ZCGPR' LE '12').ZG80R                      00370600
.ZG80Q              ANOP  ,                                             00370700
&ZMS                SETC  '"DEVDESCPTR='                                00370800
&ZMS                SETC  '&ZMS.&DEVDESCPTR"'                           00370900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00371000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00371100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00371200
.ZG80R              ANOP  ,                                             00371300
.*-------------------------------------------------------------------   00371400
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00371500
.ZG81ZY  AIF    ('&XKEYDEVDESC1' NE 'DEVDESCPTR64').ZG82ZY              00371600
.*-------------------------------------------------------------------   00371700
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00371800
                    AIF   (K'&ZXDEVDESCPTR64 LE 0).ZG81R  NOT I/O       00371900
                    AIF   ('&XDEVDESCPTR64'(1,1) NE '(').ZG81R          00372000
&ZCGPR              SETC  '&XDEVDESCPTR64'(2,K'&XDEVDESCPTR64-2)        00372100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG81P                  00372200
                    AIF   (K'&ZCGPR GT 2).ZG81Q                         00372300
                    AIF   ('&ZCGPR' EQ '0').ZG81Q                       00372400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00372500
                    AIF   (T'&ZCGPR NE 'N').ZG81Q  INVALID REG NAME     00372600
.ZG81P              ANOP  ,                                             00372700
                    AIF   (T'&ZCGPR NE 'N').ZG81R  NON NUMERIC          00372800
                    AIF   ('&ZCGPR' LT '2').ZG81Q                       00372900
                    AIF   ('&ZCGPR' LE '12').ZG81R                      00373000
.ZG81Q              ANOP  ,                                             00373100
&ZMS                SETC  '"DEVDESCPTR64='                              00373200
&ZMS                SETC  '&ZMS.&DEVDESCPTR64"'                         00373300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00373400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00373500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00373600
.ZG81R              ANOP  ,                                             00373700
.*-------------------------------------------------------------------   00373800
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00373900
.ZG82ZY             ANOP ,            END MUTUALLY EXCLUSIVE KEYS       00374000
.*-------------------------------------------------------------------   00374100
.***AG.KMEKY15 VALUE, RQD INPUT, ME KEYS -END                           00374200
.ZG83ZY             ANOP ,            END MUTUALLY EXCLUSIVE KEYS       00374300
.*----------------------------------------------------------------***   00374400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00374500
                    AIF   (N'&RETCODE LE 1).ZG85A  CK NUM               00374600
&ZMS                SETC  '"RETCODE='                                   00374700
&ZMS                SETC  '&ZMS.&RETCODE"'                              00374800
&ZMS                SETC  '&ZMS "RETCODE"'                              00374900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00375000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00375100
.ZG85A              ANOP  ,                                             00375200
.*-------------------------------------------------------------------   00375300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00375400
                    AIF   (K'&RETCODE(1) LE 0).ZG85C  NO PARM           00375500
&ZXRETCODE          SETC  'OUTPUT'    SET OUTPUT                        00375600
&XRETCODE           SETC  '&RETCODE(1)'         SET XVARIABLE           00375700
                    AIF   (N'&RETCODE GT 1).ZG85C                       00375800
&XRETCODE           SETC  '&RETCODE'  SET XVARIABLE                     00375900
.ZG85C              ANOP  ,                                             00376000
.*-------------------------------------------------------------------   00376100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00376200
                    AIF   (K'&ZXRETCODE LE 0).ZG85R  NOT I/O            00376300
                    AIF   ('&XRETCODE'(1,1) NE '(').ZG85R               00376400
&ZCGPR              SETC  '&XRETCODE'(2,K'&XRETCODE-2)                  00376500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG85P                  00376600
                    AIF   (K'&ZCGPR GT 2).ZG85Q                         00376700
                    AIF   ('&ZCGPR' EQ '0').ZG85Q                       00376800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00376900
                    AIF   (T'&ZCGPR NE 'N').ZG85Q  INVALID REG NAME     00377000
.ZG85P              ANOP  ,                                             00377100
                    AIF   (T'&ZCGPR NE 'N').ZG85R  NON NUMERIC          00377200
                    AIF   ('&ZCGPR' EQ '15').ZG85R                      00377300
                    AIF   ('&ZCGPR' LT '2').ZG85Q                       00377400
                    AIF   ('&ZCGPR' LE '12').ZG85R                      00377500
.ZG85Q              ANOP  ,                                             00377600
&ZMS                SETC  '"RETCODE='                                   00377700
&ZMS                SETC  '&ZMS.&RETCODE"'                              00377800
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00377900
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'      00378000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00378100
.ZG85R              ANOP  ,                                             00378200
.*----------------------------------------------------------------***   00378300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00378400
                    AIF   (N'&RSNCODE LE 1).ZG88A  CK NUM               00378500
&ZMS                SETC  '"RSNCODE='                                   00378600
&ZMS                SETC  '&ZMS.&RSNCODE"'                              00378700
&ZMS                SETC  '&ZMS "RSNCODE"'                              00378800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00378900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00379000
.ZG88A              ANOP  ,                                             00379100
.*-------------------------------------------------------------------   00379200
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00379300
                    AIF   (K'&RSNCODE(1) LE 0).ZG88C  NO PARM           00379400
&ZXRSNCODE          SETC  'OUTPUT'    SET OUTPUT                        00379500
&XRSNCODE           SETC  '&RSNCODE(1)'         SET XVARIABLE           00379600
                    AIF   (N'&RSNCODE GT 1).ZG88C                       00379700
&XRSNCODE           SETC  '&RSNCODE'  SET XVARIABLE                     00379800
.ZG88C              ANOP  ,                                             00379900
.*-------------------------------------------------------------------   00380000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00380100
                    AIF   (K'&ZXRSNCODE LE 0).ZG88R  NOT I/O            00380200
                    AIF   ('&XRSNCODE'(1,1) NE '(').ZG88R               00380300
&ZCGPR              SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                  00380400
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG88P                  00380500
                    AIF   (K'&ZCGPR GT 2).ZG88Q                         00380600
                    AIF   ('&ZCGPR' EQ '0').ZG88R                       00380700
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00380800
                    AIF   (T'&ZCGPR NE 'N').ZG88Q  INVALID REG NAME     00380900
.ZG88P              ANOP  ,                                             00381000
                    AIF   (T'&ZCGPR NE 'N').ZG88R  NON NUMERIC          00381100
                    AIF   ('&ZCGPR' EQ '0').ZG88R                       00381200
                    AIF   ('&ZCGPR' LT '2').ZG88Q                       00381300
                    AIF   ('&ZCGPR' LE '12').ZG88R                      00381400
.ZG88Q              ANOP  ,                                             00381500
&ZMS                SETC  '"RSNCODE='                                   00381600
&ZMS                SETC  '&ZMS.&RSNCODE"'                              00381700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00381800
                    MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'       00381900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00382000
.ZG88R              ANOP  ,                                             00382100
.******************************************************************     00382200
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00382300
.******************************************************************     00382400
                    ACTR  10000                                         00382500
.*-------------------------------------------------------------------   00382600
.***AH.P03 EXTRA POSITIONALS AMONG NON-X KEYS                           00382700
&ZCVAL              SETC  ''          ERROR FIELD                       00382800
&ZAWRK              SETA  0           POSITIONAL COUNTER                00382900
&ZASYSLNDX          SETA  0           NON-X KEY COUNTER                 00383000
.ZGLIST2            ANOP  ,                                             00383100
&ZASYSLNDX          SETA  &ZASYSLNDX+1          NEXT NON-X KEY          00383200
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZGLIST3  DONE                 00383300
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZGLIST2          00383400
&ZAWRK              SETA  &ZAWRK+1    NEXT POSITIONAL                   00383500
                    AIF   (&ZAWRK LE 0).ZGLIST2                         00383600
&ZCVAL              SETC '&ZCVAL,&SYSLIST(&ZASYSLNDX)'  EXTRA           00383700
                    AGO   .ZGLIST2                                      00383800
.*                                                                      00383900
.ZGLIST3  AIF  (K'&ZCVAL LE 0).ZGLISTX                                  00384000
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA            00384100
&ZMS                SETC  'POSITIONAL ARGUMENT(S),'                     00384200
&ZMS                SETC  '&ZMS "&ZCVAL"'                               00384300
&ZMS                SETC  '&ZMS CANNOT BE USED.'                        00384400
&ZMS                SETC  '&ZMS NO POSITIONAL ARGUMENTS'                00384500
                    MNOTE 8,' &ZMS ARE ALLOWED.'                        00384600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00384700
.ZGLISTX            ANOP  ,                                             00384800
&ZASYSLNDX          SETA  0                                             00384900
.*-------------------------------------------------------------------   00385000
.***AG.MF04 MF=(SLE)                                                    00385100
.ZGMFX              ANOP  ,           END OF FULL SYNTAX CHECK          00385200
.*******************************************************************    00385300
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00385400
.*******************************************************************    00385500
                    AIF   (&ZMACRET NE 0).ZLX2  ERROR DETECTED          00385600
.*******************************************************************    00385700
.***AE.01  START OF IOSFBA MACRO CODE                                   00385800
.*******************************************************************    00385900
                    LCLC  &M0M0001                 NAME                 00386000
&M0M0001            SETC  '&XLABEL'                SET NAME             00386100
                    AIF   (K'&XLABEL NE 0).XLAB2                        00386200
&M0M0001            SETC  'M00M&SYSNDX'            DEFAULT NAME         00386300
.*                                                                      00386400
.XLAB2              ANOP  ,                                             00386500
                    AIF   ('&XMF' EQ 'L').XLAB3                         00386600
&M0M0001 DS    0H                             IOSFBA-1                  00386700
.XLAB3              ANOP  ,                                             00386800
.*******************************************************************    00386900
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00387000
.*******************************************************************    00387100
              PUSH  PRINT                                               00387200
                    AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON    00387300
                    PRINT OFF         ++ PR01                           00387400
                    AGO   .ZPRNTXX                                      00387500
.ZPRINTX            PRINT ON                                            00387600
.ZPRNTXX            ANOP  ,                                             00387700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00387800
         AIF   ('&DEVLISTPTR' EQ '').NODEVLISTPTR                       00387900
         AIF   ('&SYSAM64' NE 'YES').NODEVLISTPTR                       00388000
&ZMS     SETC  'DEVLISTPTR IS VALID ONLY WHEN NOT IN AMODE 64'          00388100
         MNOTE 8,'&ZMS'                                                 00388200
         POP   PRINT                                                    00388300
         MEXIT                                                          00388400
.NODEVLISTPTR ANOP                                                      00388500
         AIF   ('&DEVLISTPTR64' EQ '').NODEVDEVLISTPTR64                00388600
         AIF   ('&SYSAM64' NE 'YES').NODEVDEVLISTPTR64                  00388700
&ZMS     SETC  'DEVLISTPTR64 IS VALID ONLY WHEN IN AMODE 64'            00388800
         MNOTE 8,'&ZMS'                                                 00388900
         POP   PRINT                                                    00389000
         MEXIT                                                          00389100
.NODEVDEVLISTPTR64 ANOP                                                 00389200
         AIF   ('&DEVDESCPTR' EQ '').NODEVDESCPTR                       00389300
         AIF   ('&SYSAM64' NE 'YES').NODEVDESCPTR                       00389400
&ZMS     SETC  'DEVDESCPTR IS VALID ONLY WHEN NOT IN AMODE 64'          00389500
         MNOTE 8,'&ZMS'                                                 00389600
         POP   PRINT                                                    00389700
         MEXIT                                                          00389800
.NODEVDESCPTR ANOP                                                      00389900
         AIF   ('&DEVDESCPTR64' EQ '').NODEVDESCPTR64                   00390000
         AIF   ('&SYSAM64' NE 'YES').NODEVDESCPTR64                     00390100
&ZMS     SETC  'DEVDESCPTR64 IS VALID ONLY WHEN IN AMODE 64'            00390200
         MNOTE 8,'&ZMS'                                                 00390300
         POP   PRINT                                                    00390400
         MEXIT                                                          00390500
.NODEVDESCPTR64 ANOP                                                    00390600
         AIF   ('&DEVIOLISTPTR' EQ '').NODEVIOLISTPTR                   00390700
         AIF   ('&SYSAM64' NE 'YES').NODEVIOLISTPTR                     00390800
&ZMS     SETC  'DEVIOLISTPTR IS VALID ONLY WHEN NOT IN AMODE 64'        00390900
         MNOTE 8,'&ZMS'                                                 00391000
         POP   PRINT                                                    00391100
         MEXIT                                                          00391200
.NODEVIOLISTPTR ANOP                                                    00391300
         AIF   ('&DEVIOLISTPTR64' EQ '').NODEVIOLISTPTR64               00391400
         AIF   ('&SYSAM64' NE 'YES').NODEVIOLISTPTR64                   00391500
&ZMS     SETC  'DEVIOLISTPTR64 IS VALID ONLY WHEN IN AMODE 64'          00391600
         MNOTE 8,'&ZMS'                                                 00391700
         POP   PRINT                                                    00391800
         MEXIT                                                          00391900
.NODEVIOLISTPTR64 ANOP                                                  00392000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00392100
.********************************************************************   00392200
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00392300
.********************************************************************   00392400
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00392500
                      LCLA  &ZOPN1         INVOCATION INDEX             00392600
                      LCLC  &ZOPL(4095)    LABEL                        00392700
                      LCLC  &ZOPO(4095)    OPERATION                    00392800
                      LCLC  &ZOPV(4095)    VALUE                        00392900
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00393000
.*                                                                      00393100
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00393200
.******************************************************************     00393300
.***AL.L10 IOSFBA FMT=LIST MF=S!L PARAMETERS                            00393400
.******************************************************************     00393500
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00393600
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00393700
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00393800
&XMFATTR              SETC  '0D'                                        00393900
.*                                                                      00394000
&ZOPN                 SETA  &ZOPN+1                                     00394100
&ZOPL(&ZOPN)          SETC  ' '                                         00394200
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00394300
&ZOPV(&ZOPN)          SETC  '4,8'                                       00394400
&ZOPN                 SETA  &ZOPN+1                                     00394500
&ZOPL(&ZOPN)          SETC  ' '                                         00394600
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00394700
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00394800
&ZOPD(&ZOPN)          SETC  '++ IOSFBA ARG PARMS'                       00394900
.*                                                                      00395000
&ZOPN                 SETA  &ZOPN+1                                     00395100
&ZOPL(&ZOPN)          SETC  ' '                                         00395200
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00395300
&ZOPV(&ZOPN)          SETC  '1'                                         00395400
&ZOPD(&ZOPN)          SETC  ' '                                         00395500
.*                                                                      00395600
.ZLMFSL2              ANOP  ,                                           00395700
.*-------------------------------------------------------------------   00395800
.***AM.L00  IOSFBA FMT=LIST name                                        00395900
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00396000
&ZOPN                 SETA &ZOPN+1                                      00396100
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00396200
&ZOPO(&ZOPN)          SETC 'EQU'                                        00396300
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00396400
&ZOPD(&ZOPN)          SETC '++ IOSFBA NAME'                             00396500
.ZLMFSL2M             ANOP  ,                                           00396600
.*-------------------------------------------------------------------   00396700
.***AM.L01  IOSFBA FMT=LIST PARAMETERS                                  00396800
&ZOPN                 SETA &ZOPN+1                                      00396900
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00397000
&ZOPO(&ZOPN)          SETC 'DS'                                         00397100
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00397200
&ZOPD(&ZOPN)          SETC '++ IOSFBA PARM LIST'                        00397300
.*-------------------------------------------------------------------   00397400
.***AM.L02 XVERSION XL1                                                 00397500
&ZOPN                 SETA &ZOPN+1                                      00397600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00397700
&ZOPO(&ZOPN)          SETC 'DS'                                         00397800
&ZOPV(&ZOPN)          SETC 'XL1'                                        00397900
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00398000
.*-------------------------------------------------------------------   00398100
.***AM.L04 XFUNCTION CL2                                                00398200
&ZOPN                 SETA &ZOPN+1                                      00398300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFUNCTION'                        00398400
&ZOPO(&ZOPN)          SETC 'DS'                                         00398500
&ZOPV(&ZOPN)          SETC 'CL2'                                        00398600
&ZOPD(&ZOPN)          SETC '++ &ZXFUNCTION XFUNCTION'                   00398700
.*                                                                      00398800
&ZOPN                 SETA  &ZOPN+1                                     00398900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XFUNCTION_ALLOCATE'              00399000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00399100
&ZOPV(&ZOPN)          SETC  'C''AL'',2'                                 00399200
&ZOPD(&ZOPN)          SETC  '++ XFUNCTION.'                             00399300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ALLOCATE'                     00399400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00399500
.*                                                                      00399600
&ZOPN                 SETA  &ZOPN+1                                     00399700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XFUNCTION_READ'                  00399800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00399900
&ZOPV(&ZOPN)          SETC  'C''RD'',2'                                 00400000
&ZOPD(&ZOPN)          SETC  '++ XFUNCTION.'                             00400100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).READ'                         00400200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00400300
.*                                                                      00400400
&ZOPN                 SETA  &ZOPN+1                                     00400500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XFUNCTION_WRITE'                 00400600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00400700
&ZOPV(&ZOPN)          SETC  'C''WR'',2'                                 00400800
&ZOPD(&ZOPN)          SETC  '++ XFUNCTION.'                             00400900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).WRITE'                        00401000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00401100
.*                                                                      00401200
&ZOPN                 SETA  &ZOPN+1                                     00401300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XFUNCTION_UNALLOCATE'            00401400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00401500
&ZOPV(&ZOPN)          SETC  'C''UA'',2'                                 00401600
&ZOPD(&ZOPN)          SETC  '++ XFUNCTION.'                             00401700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).UNALLOCATE'                   00401800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00401900
.*                                                                      00402000
&ZOPN                 SETA  &ZOPN+1                                     00402100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XFUNCTION_QUERY'                 00402200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00402300
&ZOPV(&ZOPN)          SETC  'C''QU'',2'                                 00402400
&ZOPD(&ZOPN)          SETC  '++ XFUNCTION.'                             00402500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).QUERY'                        00402600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00402700
.*                                                                      00402800
&ZOPN                 SETA  &ZOPN+1                                     00402900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XFUNCTION_ERASE'                 00403000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00403100
&ZOPV(&ZOPN)          SETC  'C''ER'',2'                                 00403200
&ZOPD(&ZOPN)          SETC  '++ XFUNCTION.'                             00403300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ERASE'                        00403400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00403500
.*                                                                      00403600
&ZOPN                 SETA  &ZOPN+1                                     00403700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XFUNCTION_CLEANUP'               00403800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00403900
&ZOPV(&ZOPN)          SETC  'C''CL'',2'                                 00404000
&ZOPD(&ZOPN)          SETC  '++ XFUNCTION.'                             00404100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CLEANUP'                      00404200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00404300
.*-------------------------------------------------------------------   00404400
.***AM.L03 XFLAGS BL.16                                                 00404500
&ZOPN                 SETA &ZOPN+1                                      00404600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS'                           00404700
&ZOPO(&ZOPN)          SETC 'DS'                                         00404800
&ZOPV(&ZOPN)          SETC 'BL.16'                                      00404900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00405000
.*                                                                      00405100
&ZOPN                 SETA  &ZOPN+1                                     00405200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_DEVCOUNT'                00405300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00405400
&ZOPV(&ZOPN)          SETC  'B''1000000000000000'''                     00405500
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00405600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DEVCOUNT'                     00405700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00405800
.*                                                                      00405900
&ZOPN                 SETA  &ZOPN+1                                     00406000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_MINDEVCOUNT'             00406100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00406200
&ZOPV(&ZOPN)          SETC  'B''0100000000000000'''                     00406300
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00406400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MINDEVCOUNT'                  00406500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00406600
.*                                                                      00406700
&ZOPN                 SETA  &ZOPN+1                                     00406800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_ECB'                     00406900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00407000
&ZOPV(&ZOPN)          SETC  'B''0010000000000000'''                     00407100
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00407200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ECB'                          00407300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00407400
.*                                                                      00407500
&ZOPN                 SETA  &ZOPN+1                                     00407600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_RESERVED'                00407700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00407800
&ZOPV(&ZOPN)          SETC  'B''0001000000000000'''                     00407900
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00408000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).RESERVED'                     00408100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00408200
.*                                                                      00408300
&ZOPN                 SETA  &ZOPN+1                                     00408400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_DEVLISTPTR'              00408500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00408600
&ZOPV(&ZOPN)          SETC  'B''0000100000000000'''                     00408700
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00408800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DEVLISTPTR'                   00408900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00409000
.*                                                                      00409100
&ZOPN                 SETA  &ZOPN+1                                     00409200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_DEVLISTPTR64'            00409300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00409400
&ZOPV(&ZOPN)          SETC  'B''0000010000000000'''                     00409500
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00409600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DEVLISTPTR64'                 00409700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00409800
.*                                                                      00409900
&ZOPN                 SETA  &ZOPN+1                                     00410000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_DEVDESCPTR'              00410100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00410200
&ZOPV(&ZOPN)          SETC  'B''0000001000000000'''                     00410300
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00410400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DEVDESCPTR'                   00410500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00410600
.*                                                                      00410700
&ZOPN                 SETA  &ZOPN+1                                     00410800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_DEVDESCPTR64'            00410900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00411000
&ZOPV(&ZOPN)          SETC  'B''0000000100000000'''                     00411100
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00411200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DEVDESCPTR64'                 00411300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00411400
.*                                                                      00411500
&ZOPN                 SETA  &ZOPN+1                                     00411600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_DEVIOLISTPTR'            00411700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00411800
&ZOPV(&ZOPN)          SETC  'B''0000000010000000'''                     00411900
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00412000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DEVIOLISTPTR'                 00412100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00412200
.*                                                                      00412300
&ZOPN                 SETA  &ZOPN+1                                     00412400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_DEVIOLISTPTR64'          00412500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00412600
&ZOPV(&ZOPN)          SETC  'B''0000000001000000'''                     00412700
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00412800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DEVIOLISTPTR64'               00412900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00413000
.*                                                                      00413100
&ZOPN                 SETA  &ZOPN+1                                     00413200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_ACCESS'                  00413300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00413400
&ZOPV(&ZOPN)          SETC  'B''0000000000100000'''                     00413500
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00413600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ACCESS'                       00413700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00413800
.*                                                                      00413900
&ZOPN                 SETA  &ZOPN+1                                     00414000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_IOTOKEN'                 00414100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00414200
&ZOPV(&ZOPN)          SETC  'B''0000000000010000'''                     00414300
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00414400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).IOTOKEN'                      00414500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00414600
.*                                                                      00414700
&ZOPN                 SETA  &ZOPN+1                                     00414800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREUSECP_YES'                    00414900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00415000
&ZOPV(&ZOPN)          SETC  'B''0000000000001000'''                     00415100
&ZOPD(&ZOPN)          SETC  '++ XREUSECP.'                              00415200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00415300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00415400
.*-------------------------------------------------------------------   00415500
.***AM.L09  XDEVCOUNT XL1                                               00415600
&ZOPN                 SETA &ZOPN+1                                      00415700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDEVCOUNT'                        00415800
&ZOPO(&ZOPN)          SETC 'DS'                                         00415900
&ZOPV(&ZOPN)          SETC 'XL1'                                        00416000
&ZOPD(&ZOPN)          SETC '++ &ZXDEVCOUNT '                            00416100
.*-------------------------------------------------------------------   00416200
.***AM.L09  XMINDEVCOUNT XL1                                            00416300
&ZOPN                 SETA &ZOPN+1                                      00416400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMINDEVCOUNT'                     00416500
&ZOPO(&ZOPN)          SETC 'DS'                                         00416600
&ZOPV(&ZOPN)          SETC 'XL1'                                        00416700
&ZOPD(&ZOPN)          SETC '++ &ZXMINDEVCOUNT '                         00416800
.*-------------------------------------------------------------------   00416900
.***AM.L05 XACCESS XL1                                                  00417000
&ZOPN                 SETA &ZOPN+1                                      00417100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XACCESS'                          00417200
&ZOPO(&ZOPN)          SETC 'DS'                                         00417300
&ZOPV(&ZOPN)          SETC 'XL1'                                        00417400
&ZOPD(&ZOPN)          SETC '++ &ZXACCESS XACCESS'                       00417500
.*                                                                      00417600
&ZOPN                 SETA  &ZOPN+1                                     00417700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XACCESS_SINGLE'                  00417800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00417900
&ZOPV(&ZOPN)          SETC  '0'                                         00418000
&ZOPD(&ZOPN)          SETC  '++ XACCESS.'                               00418100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SINGLE'                       00418200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00418300
.*                                                                      00418400
&ZOPN                 SETA  &ZOPN+1                                     00418500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XACCESS_READ'                    00418600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00418700
&ZOPV(&ZOPN)          SETC  '1'                                         00418800
&ZOPD(&ZOPN)          SETC  '++ XACCESS.'                               00418900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).READ'                         00419000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00419100
.*                                                                      00419200
&ZOPN                 SETA  &ZOPN+1                                     00419300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XACCESS_WRITE'                   00419400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00419500
&ZOPV(&ZOPN)          SETC  '2'                                         00419600
&ZOPD(&ZOPN)          SETC  '++ XACCESS.'                               00419700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).WRITE'                        00419800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00419900
.*                                                                      00420000
&ZOPN                 SETA  &ZOPN+1                                     00420100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XACCESS_ANY'                     00420200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00420300
&ZOPV(&ZOPN)          SETC  '3'                                         00420400
&ZOPD(&ZOPN)          SETC  '++ XACCESS.'                               00420500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ANY'                          00420600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00420700
.*-------------------------------------------------------------------   00420800
.***AM.L09  XDEVLISTPTR64 AD                                            00420900
&ZOPN                 SETA &ZOPN+1                                      00421000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDEVLISTPTR64'                    00421100
&ZOPO(&ZOPN)          SETC 'DS'                                         00421200
&ZOPV(&ZOPN)          SETC 'AD'                                         00421300
&ZOPD(&ZOPN)          SETC '++ &ZXDEVLISTPTR64 '                        00421400
.*-------------------------------------------------------------------   00421500
.***AM.L09  XDEVDESCPTR64 AD                                            00421600
&ZOPN                 SETA &ZOPN+1                                      00421700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDEVDESCPTR64'                    00421800
&ZOPO(&ZOPN)          SETC 'DS'                                         00421900
&ZOPV(&ZOPN)          SETC 'AD'                                         00422000
&ZOPD(&ZOPN)          SETC '++ &ZXDEVDESCPTR64 '                        00422100
.*-------------------------------------------------------------------   00422200
.***AM.L09  XDEVIOLISTPTR64 AD                                          00422300
&ZOPN                 SETA &ZOPN+1                                      00422400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDEVIOLISTPTR64'                  00422500
&ZOPO(&ZOPN)          SETC 'DS'                                         00422600
&ZOPV(&ZOPN)          SETC 'AD'                                         00422700
&ZOPD(&ZOPN)          SETC '++ &ZXDEVIOLISTPTR64 '                      00422800
.*-------------------------------------------------------------------   00422900
.***AM.L09  XECB A                                                      00423000
&ZOPN                 SETA &ZOPN+1                                      00423100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XECB'                             00423200
&ZOPO(&ZOPN)          SETC 'DS'                                         00423300
&ZOPV(&ZOPN)          SETC 'A'                                          00423400
&ZOPD(&ZOPN)          SETC '++ &ZXECB '                                 00423500
.*-------------------------------------------------------------------   00423600
.***AM.L09  XIOTOKEN A                                                  00423700
&ZOPN                 SETA &ZOPN+1                                      00423800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XIOTOKEN'                         00423900
&ZOPO(&ZOPN)          SETC 'DS'                                         00424000
&ZOPV(&ZOPN)          SETC 'A'                                          00424100
&ZOPD(&ZOPN)          SETC '++ &ZXIOTOKEN '                             00424200
.*-------------------------------------------------------------------   00424300
.***AM.L09  XRESERVED5 CL8                                              00424400
&ZOPN                 SETA &ZOPN+1                                      00424500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRESERVED5'                       00424600
&ZOPO(&ZOPN)          SETC 'DS'                                         00424700
&ZOPV(&ZOPN)          SETC 'CL8'                                        00424800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            00424900
.*-------------------------------------------------------------------   00425000
.***AM.MLM1 SAVED LOCATION COUNTER                                      00425100
                      AIF  ('&ZENDBASEPL' NE '').ZL37LB                 00425200
&ZENDBASEPL           SETC 'YES'                                        00425300
&ZOPN                 SETA &ZOPN+1                                      00425400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00425500
&ZOPO(&ZOPN)          SETC 'EQU'                                        00425600
&ZOPV(&ZOPN)          SETC '*'                                          00425700
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00425800
.ZL37LB               ANOP  ,                                           00425900
.*-------------------------------------------------------------------   00426000
.***AM.PJR1 DEFINED ON XDEVLISTPTR64                                    00426100
&ZOPN                 SETA &ZOPN+1                                      00426200
&ZOPL(&ZOPN)          SETC ' '                                          00426300
&ZOPO(&ZOPN)          SETC 'ORG'                                        00426400
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+8'                                00426500
&ZOPD(&ZOPN)          SETC ' '                                          00426600
.*-------------------------------------------------------------------   00426700
.***AM.L09  XRESERVED2 F                                                00426800
&ZOPN                 SETA &ZOPN+1                                      00426900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRESERVED2'                       00427000
&ZOPO(&ZOPN)          SETC 'DS'                                         00427100
&ZOPV(&ZOPN)          SETC 'F'                                          00427200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            00427300
.*-------------------------------------------------------------------   00427400
.***AM.L09  XDEVLISTPTR A                                               00427500
&ZOPN                 SETA &ZOPN+1                                      00427600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDEVLISTPTR'                      00427700
&ZOPO(&ZOPN)          SETC 'DS'                                         00427800
&ZOPV(&ZOPN)          SETC 'A'                                          00427900
&ZOPD(&ZOPN)          SETC '++ &ZXDEVLISTPTR '                          00428000
.*-------------------------------------------------------------------   00428100
.***AM.PJR1 DEFINED ON XDEVDESCPTR64                                    00428200
&ZOPN                 SETA &ZOPN+1                                      00428300
&ZOPL(&ZOPN)          SETC ' '                                          00428400
&ZOPO(&ZOPN)          SETC 'ORG'                                        00428500
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+16'                               00428600
&ZOPD(&ZOPN)          SETC ' '                                          00428700
.*-------------------------------------------------------------------   00428800
.***AM.L09  XRESERVED3 F                                                00428900
&ZOPN                 SETA &ZOPN+1                                      00429000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRESERVED3'                       00429100
&ZOPO(&ZOPN)          SETC 'DS'                                         00429200
&ZOPV(&ZOPN)          SETC 'F'                                          00429300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            00429400
.*-------------------------------------------------------------------   00429500
.***AM.L09  XDEVDESCPTR A                                               00429600
&ZOPN                 SETA &ZOPN+1                                      00429700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDEVDESCPTR'                      00429800
&ZOPO(&ZOPN)          SETC 'DS'                                         00429900
&ZOPV(&ZOPN)          SETC 'A'                                          00430000
&ZOPD(&ZOPN)          SETC '++ &ZXDEVDESCPTR '                          00430100
.*-------------------------------------------------------------------   00430200
.***AM.PJR1 DEFINED ON XDEVIOLISTPTR64                                  00430300
&ZOPN                 SETA &ZOPN+1                                      00430400
&ZOPL(&ZOPN)          SETC ' '                                          00430500
&ZOPO(&ZOPN)          SETC 'ORG'                                        00430600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+24'                               00430700
&ZOPD(&ZOPN)          SETC ' '                                          00430800
.*-------------------------------------------------------------------   00430900
.***AM.L09  XRESERVED4 F                                                00431000
&ZOPN                 SETA &ZOPN+1                                      00431100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRESERVED4'                       00431200
&ZOPO(&ZOPN)          SETC 'DS'                                         00431300
&ZOPV(&ZOPN)          SETC 'F'                                          00431400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            00431500
.*-------------------------------------------------------------------   00431600
.***AM.L09  XDEVIOLISTPTR A                                             00431700
&ZOPN                 SETA &ZOPN+1                                      00431800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDEVIOLISTPTR'                    00431900
&ZOPO(&ZOPN)          SETC 'DS'                                         00432000
&ZOPV(&ZOPN)          SETC 'A'                                          00432100
&ZOPD(&ZOPN)          SETC '++ &ZXDEVIOLISTPTR '                        00432200
&ZOPN                 SETA &ZOPN+1                                      00432300
&ZOPL(&ZOPN)          SETC ' '                                          00432400
&ZOPO(&ZOPN)          SETC 'ORG'                                        00432500
&ZOPV(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00432600
&ZOPD(&ZOPN)          SETC 'RESET LOCATION COUNTER'                     00432700
.*-------------------------------------------------------------------   00432800
.***AM.L10 END OF IOSFBA LIST PARAMETERS                                00432900
&ZOPN                 SETA &ZOPN+1                                      00433000
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00433100
&ZOPO(&ZOPN)          SETC 'EQU'                                        00433200
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00433300
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00433400
.*                                                                      00433500
&ZOPN                 SETA &ZOPN+1                                      00433600
&ZOPL(&ZOPN)          SETC ' '                                          00433700
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00433800
&ZOPV(&ZOPN)          SETC '1'                                          00433900
&ZOPD(&ZOPN)          SETC ' '                                          00434000
.*-------------------------------------------------------------------   00434100
.***AL.L12 IOSFBA FMT=LIST MF=S!L PARAMETERS                            00434200
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00434300
.*                                                                      00434400
&ZOPN                 SETA  &ZOPN+1                                     00434500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00434600
&ZOPO(&ZOPN)          SETC  'DC'                                        00434700
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00434800
&ZOPD(&ZOPN)          SETC  '++ IOSFBA ARG PARMS'                       00434900
.*                                                                      00435000
.ZLMFSLX              ANOP  ,                                           00435100
.*-------------------------------------------------------------------   00435200
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00435300
&ZPLLEN               SETA 48                                           00435400
.*                                                                      00435500
.******************************************************************     00435600
.***AI.L01 IOSFBA FMT=LIST FILL IN PARAMETER AREA                       00435700
.******************************************************************     00435800
                      ACTR  10000                                       00435900
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00436000
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00436100
&ZCVAL                SETC  'LAE'          XAX MODE                     00436200
.ZIMFXA               ANOP ,                                            00436300
.*                                                                      00436400
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00436500
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00436600
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00436700
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00436800
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00436900
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00437000
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00437100
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00437200
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00437300
&ZOPN                 SETA  &ZOPN+1                                     00437400
&ZOPL(&ZOPN)          SETC  ' '                                         00437500
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00437600
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00437700
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00437800
                      AGO   .ZIMFNX                                     00437900
.*                                                                      00438000
.ZIMFN2               ANOP ,                                            00438100
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00438200
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00438300
&ZOPN                 SETA  &ZOPN+1                                     00438400
&ZOPL(&ZOPN)          SETC  ' '                                         00438500
&ZOPO(&ZOPN)          SETC  'LAE'                                       00438600
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00438700
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00438800
                      AGO   .ZIMFNX                                     00438900
.ZIMFNX1              ANOP ,                                            00439000
&ZOPN                 SETA  &ZOPN+1                                     00439100
&ZOPL(&ZOPN)          SETC  ' '                                         00439200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00439300
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00439400
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00439500
.ZIMFNX               ANOP ,                                            00439600
.********************************************************************   00439700
.***AI.L02 IOSFBA FMT=LIST INITIALIZE PARAMETER AREA                    00439800
.********************************************************************   00439900
.***AI.L03 MF=(SLE)                                                     00440000
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00440100
.*                                                                      00440200
&ZOPN                 SETA  &ZOPN+1                                     00440300
&ZOPL(&ZOPN)          SETC  ' '                                         00440400
&ZOPO(&ZOPN)          SETC  'XC'                                        00440500
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00440600
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00440700
.ZIMFLX               ANOP  ,                                           00440800
.*-------------------------------------------------------------------   00440900
.***AI.L04B XVERSION XL1                                                00441000
                      AIF   (&XPLISTVER EQ 0).ZIMFVZ                    00441100
&ZOPN                 SETA  &ZOPN+1                                     00441200
&ZOPL(&ZOPN)          SETC  ' '                                         00441300
&ZOPO(&ZOPN)          SETC  'MVI'                                       00441400
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00441500
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00441600
.ZIMFVZ               ANOP  ,                                           00441700
.*-------------------------------------------------------------------   00441800
.***AI.L06 XFUNCTION CL2                                                00441900
&ZW                   SETC  ''                                          00442000
.*-------------------------------------------------------------------   00442100
.***AI.L12 XFUNCTION "ALLOCATE" CL2                                     00442200
         AIF   ('&XFUNCTION' NE 'ALLOCATE').ZI3A                        00442300
&ZW                   SETC  'AL'                                        00442400
.ZI3A                 ANOP  ,                                           00442500
.*-------------------------------------------------------------------   00442600
.***AI.L12 XFUNCTION "READ" CL2                                         00442700
         AIF   ('&XFUNCTION' NE 'READ').ZI4A                            00442800
&ZW                   SETC  'RD'                                        00442900
.ZI4A                 ANOP  ,                                           00443000
.*-------------------------------------------------------------------   00443100
.***AI.L12 XFUNCTION "WRITE" CL2                                        00443200
         AIF   ('&XFUNCTION' NE 'WRITE').ZI5A                           00443300
&ZW                   SETC  'WR'                                        00443400
.ZI5A                 ANOP  ,                                           00443500
.*-------------------------------------------------------------------   00443600
.***AI.L12 XFUNCTION "UNALLOCATE" CL2                                   00443700
         AIF   ('&XFUNCTION' NE 'UNALLOCATE').ZI6A                      00443800
&ZW                   SETC  'UA'                                        00443900
.ZI6A                 ANOP  ,                                           00444000
.*-------------------------------------------------------------------   00444100
.***AI.L12 XFUNCTION "QUERY" CL2                                        00444200
         AIF   ('&XFUNCTION' NE 'QUERY').ZI7A                           00444300
&ZW                   SETC  'QU'                                        00444400
.ZI7A                 ANOP  ,                                           00444500
.*-------------------------------------------------------------------   00444600
.***AI.L12 XFUNCTION "ERASE" CL2                                        00444700
         AIF   ('&XFUNCTION' NE 'ERASE').ZI8A                           00444800
&ZW                   SETC  'ER'                                        00444900
.ZI8A                 ANOP  ,                                           00445000
.*-------------------------------------------------------------------   00445100
.***AI.L12 XFUNCTION "CLEANUP" CL2                                      00445200
         AIF   ('&XFUNCTION' NE 'CLEANUP').ZI9A                         00445300
&ZW                   SETC  'CL'                                        00445400
.ZI9A                 ANOP  ,                                           00445500
.*-------------------------------------------------------------------   00445600
.***AI.L14 XFUNCTION CL2                                                00445700
                      AIF   ('&ZW' EQ '').ZI9B                          00445800
.*                                                                      00445900
&ZOPN                 SETA  &ZOPN+1                                     00446000
&ZOPL(&ZOPN)          SETC  ' '                                         00446100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00446200
&ZOPV(&ZOPN)          SETC  '1(2,1),=CL2''&ZW'''                        00446300
&ZOPD(&ZOPN)          SETC  '++ &ZXFUNCTION XFUNCTION'                  00446400
.ZI9B                 ANOP  ,                                           00446500
.*-------------------------------------------------------------------   00446600
.***AI.L05 XFLAGS BL2                                                   00446700
&ZW                   SETC  ''                                          00446800
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00446900
.*-------------------------------------------------------------------   00447000
.***AI.L08 XFLAGS "DEVCOUNT"                                            00447100
.***      BL2'1XXXXXXXXXXXXXXX'                                         00447200
         AIF   ('&DEVCOUNT' EQ '').ZI11A                                00447300
&ZW                   SETC  '&ZW.1'                                     00447400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00447500
                      AGO   .ZI11C                                      00447600
.*                                                                      00447700
.ZI11A                ANOP  ,                                           00447800
&ZW                   SETC  '&ZW.0'                                     00447900
.ZI11C                ANOP  ,                                           00448000
.*-------------------------------------------------------------------   00448100
.***AI.L08 XFLAGS "MINDEVCOUNT"                                         00448200
.***      BL2'X1XXXXXXXXXXXXXX'                                         00448300
         AIF   ('&MINDEVCOUNT' EQ '').ZI12A                             00448400
&ZW                   SETC  '&ZW.1'                                     00448500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00448600
                      AGO   .ZI12C                                      00448700
.*                                                                      00448800
.ZI12A                ANOP  ,                                           00448900
&ZW                   SETC  '&ZW.0'                                     00449000
.ZI12C                ANOP  ,                                           00449100
.*-------------------------------------------------------------------   00449200
.***AI.L08 XFLAGS "ECB"                                                 00449300
.***      BL2'XX1XXXXXXXXXXXXX'                                         00449400
         AIF   ('&ECB' EQ '').ZI13A                                     00449500
&ZW                   SETC  '&ZW.1'                                     00449600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00449700
                      AGO   .ZI13C                                      00449800
.*                                                                      00449900
.ZI13A                ANOP  ,                                           00450000
&ZW                   SETC  '&ZW.0'                                     00450100
.ZI13C                ANOP  ,                                           00450200
.*-------------------------------------------------------------------   00450300
.***AI.L08 XFLAGS "RESERVED"                                            00450400
.***      BL2'XXX1XXXXXXXXXXXX'                                         00450500
         AIF   ('&XRESERVED' EQ '').ZI14A                               00450600
&ZW                   SETC  '&ZW.1'                                     00450700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00450800
                      AGO   .ZI14C                                      00450900
.*                                                                      00451000
.ZI14A                ANOP  ,                                           00451100
&ZW                   SETC  '&ZW.0'                                     00451200
.ZI14C                ANOP  ,                                           00451300
.*-------------------------------------------------------------------   00451400
.***AI.L08 XFLAGS "DEVLISTPTR"                                          00451500
.***      BL2'XXXX1XXXXXXXXXXX'                                         00451600
         AIF   ('&DEVLISTPTR' EQ '').ZI15A                              00451700
&ZW                   SETC  '&ZW.1'                                     00451800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00451900
                      AGO   .ZI15C                                      00452000
.*                                                                      00452100
.ZI15A                ANOP  ,                                           00452200
&ZW                   SETC  '&ZW.0'                                     00452300
.ZI15C                ANOP  ,                                           00452400
.*-------------------------------------------------------------------   00452500
.***AI.L08 XFLAGS "DEVLISTPTR64"                                        00452600
.***      BL2'XXXXX1XXXXXXXXXX'                                         00452700
         AIF   ('&DEVLISTPTR64' EQ '').ZI16A                            00452800
&ZW                   SETC  '&ZW.1'                                     00452900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00453000
                      AGO   .ZI16C                                      00453100
.*                                                                      00453200
.ZI16A                ANOP  ,                                           00453300
&ZW                   SETC  '&ZW.0'                                     00453400
.ZI16C                ANOP  ,                                           00453500
.*-------------------------------------------------------------------   00453600
.***AI.L08 XFLAGS "DEVDESCPTR"                                          00453700
.***      BL2'XXXXXX1XXXXXXXXX'                                         00453800
         AIF   ('&DEVDESCPTR' EQ '').ZI17A                              00453900
&ZW                   SETC  '&ZW.1'                                     00454000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00454100
                      AGO   .ZI17C                                      00454200
.*                                                                      00454300
.ZI17A                ANOP  ,                                           00454400
&ZW                   SETC  '&ZW.0'                                     00454500
.ZI17C                ANOP  ,                                           00454600
.*-------------------------------------------------------------------   00454700
.***AI.L08 XFLAGS "DEVDESCPTR64"                                        00454800
.***      BL2'XXXXXXX1XXXXXXXX'                                         00454900
         AIF   ('&DEVDESCPTR64' EQ '').ZI18A                            00455000
&ZW                   SETC  '&ZW.1'                                     00455100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00455200
                      AGO   .ZI18C                                      00455300
.*                                                                      00455400
.ZI18A                ANOP  ,                                           00455500
&ZW                   SETC  '&ZW.0'                                     00455600
.ZI18C                ANOP  ,                                           00455700
.*-------------------------------------------------------------------   00455800
.***AI.L08 XFLAGS "DEVIOLISTPTR"                                        00455900
.***      BL2'XXXXXXXX1XXXXXXX'                                         00456000
         AIF   ('&DEVIOLISTPTR' EQ '').ZI19A                            00456100
&ZW                   SETC  '&ZW.1'                                     00456200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00456300
                      AGO   .ZI19C                                      00456400
.*                                                                      00456500
.ZI19A                ANOP  ,                                           00456600
&ZW                   SETC  '&ZW.0'                                     00456700
.ZI19C                ANOP  ,                                           00456800
.*-------------------------------------------------------------------   00456900
.***AI.L08 XFLAGS "DEVIOLISTPTR64"                                      00457000
.***      BL2'XXXXXXXXX1XXXXXX'                                         00457100
         AIF   ('&DEVIOLISTPTR64' EQ '').ZI20A                          00457200
&ZW                   SETC  '&ZW.1'                                     00457300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00457400
                      AGO   .ZI20C                                      00457500
.*                                                                      00457600
.ZI20A                ANOP  ,                                           00457700
&ZW                   SETC  '&ZW.0'                                     00457800
.ZI20C                ANOP  ,                                           00457900
.*-------------------------------------------------------------------   00458000
.***AI.L08 XFLAGS "ACCESS"                                              00458100
.***      BL2'XXXXXXXXXX1XXXXX'                                         00458200
         AIF   ('&ACCESS' EQ '').ZI21A                                  00458300
&ZW                   SETC  '&ZW.1'                                     00458400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00458500
                      AGO   .ZI21C                                      00458600
.*                                                                      00458700
.ZI21A                ANOP  ,                                           00458800
&ZW                   SETC  '&ZW.0'                                     00458900
.ZI21C                ANOP  ,                                           00459000
.*-------------------------------------------------------------------   00459100
.***AI.L08 XFLAGS "IOTOKEN"                                             00459200
.***      BL2'XXXXXXXXXXX1XXXX'                                         00459300
         AIF   ('&IOTOKEN' EQ '').ZI22A                                 00459400
&ZW                   SETC  '&ZW.1'                                     00459500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00459600
                      AGO   .ZI22C                                      00459700
.*                                                                      00459800
.ZI22A                ANOP  ,                                           00459900
&ZW                   SETC  '&ZW.0'                                     00460000
.ZI22C                ANOP  ,                                           00460100
.*-------------------------------------------------------------------   00460200
.***AI.L08 XFLAGS "YES"                                                 00460300
.***      BL2'XXXXXXXXXXXX1XXX'                                         00460400
         AIF   ('&XREUSECP' NE 'YES').ZI23A                             00460500
&ZW                   SETC  '&ZW.1000'                                  00460600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00460700
                      AGO   .ZI23C                                      00460800
.*                                                                      00460900
.ZI23A                ANOP  ,                                           00461000
&ZW                   SETC  '&ZW.0000'                                  00461100
.ZI23C                ANOP  ,                                           00461200
.*-------------------------------------------------------------------   00461300
.***AI.L10 XFLAGS BL2                                                   00461400
                      AIF   ('&ZCLNG' NE 'YES').ZI23E  ALL ZERO BITS    00461500
&ZOPN                 SETA  &ZOPN+1                                     00461600
&ZOPL(&ZOPN)          SETC  ' '                                         00461700
&ZOPO(&ZOPN)          SETC  'OC'                                        00461800
&ZOPV(&ZOPN)          SETC  '3(2,1),=BL2''&ZW'''                        00461900
&ZOPD(&ZOPN)          SETC  '++ INPUT BL2'                              00462000
.ZI23E                ANOP  ,                                           00462100
.*-------------------------------------------------------------------   00462200
.***AI.L25  XDEVCOUNT XL1                                               00462300
                      AIF   ('&ZXDEVCOUNT' EQ '').ZI24E                 00462400
                      AIF   ('&ZXDEVCOUNT' EQ 'OUTPUT').ZI24E           00462500
&ZCGPR                SETC  '&XDEVCOUNT'                                00462600
.*                                                                      00462700
                      AIF   ('&XDEVCOUNT'(1,1) NE '(').ZI24B            00462800
&ZCGPR   SETC  '0('.'&XDEVCOUNT'(2,K'&XDEVCOUNT-2).')'                  00462900
                      AGO   .ZI24D                                      00463000
.ZI24B                ANOP  ,                                           00463100
.*                                                                      00463200
&ZC                   SETC  '&XDEVCOUNT'(1,1)                           00463300
                      AIF   (T'&ZC NE 'N').ZI24D                        00463400
&ZC                   SETC  '&XDEVCOUNT'                                00463500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI24D               00463600
&ZCGPR                SETC  '=AL1(&XDEVCOUNT)'                          00463700
.*                                                                      00463800
.ZI24D                ANOP  ,                                           00463900
.*                                                                      00464000
&ZOPN                 SETA  &ZOPN+1                                     00464100
&ZOPL(&ZOPN)          SETC  ' '                                         00464200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00464300
&ZOPV(&ZOPN)          SETC  '5(1,1),&ZCGPR'                             00464400
&ZOPD(&ZOPN)          SETC  '++ &ZXDEVCOUNT XDEVCOUNT'                  00464500
.*                                                                      00464600
.ZI24E                ANOP  ,                                           00464700
.*-------------------------------------------------------------------   00464800
.***AI.L25  XMINDEVCOUNT XL1                                            00464900
                      AIF   ('&ZXMINDEVCOUNT' EQ '').ZI25E              00465000
                      AIF   ('&ZXMINDEVCOUNT' EQ 'OUTPUT').ZI25E        00465100
&ZCGPR                SETC  '&XMINDEVCOUNT'                             00465200
         AIF   ('&XMINDEVCOUNT' EQ '0').ZI25E                           00465300
         AIF   ('&XMINDEVCOUNT' EQ '0').ZI25E                           00465400
.*                                                                      00465500
                      AIF   ('&XMINDEVCOUNT'(1,1) NE '(').ZI25B         00465600
&ZCGPR   SETC  '0('.'&XMINDEVCOUNT'(2,K'&XMINDEVCOUNT-2).')'            00465700
                      AGO   .ZI25D                                      00465800
.ZI25B                ANOP  ,                                           00465900
.*                                                                      00466000
&ZC                   SETC  '&XMINDEVCOUNT'(1,1)                        00466100
                      AIF   (T'&ZC NE 'N').ZI25D                        00466200
&ZC                   SETC  '&XMINDEVCOUNT'                             00466300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI25D               00466400
&ZCGPR                SETC  '=AL1(&XMINDEVCOUNT)'                       00466500
.*                                                                      00466600
.ZI25D                ANOP  ,                                           00466700
.*                                                                      00466800
&ZOPN                 SETA  &ZOPN+1                                     00466900
&ZOPL(&ZOPN)          SETC  ' '                                         00467000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00467100
&ZOPV(&ZOPN)          SETC  '6(1,1),&ZCGPR'                             00467200
&ZOPD(&ZOPN)          SETC  '++ &ZXMINDEVCOUNT XMINDEVCOUNT'            00467300
.*                                                                      00467400
.ZI25E                ANOP  ,                                           00467500
.*-------------------------------------------------------------------   00467600
.***AI.L07 XACCESS AL1                                                  00467700
&ZW                   SETC  ''                                          00467800
.*-------------------------------------------------------------------   00467900
.***AI.L15 XACCESS "SINGLE" AL1                                         00468000
         AIF   ('&XACCESS' NE 'SINGLE').ZI27A                           00468100
&ZW                   SETC  '0'                                         00468200
.ZI27A                ANOP  ,                                           00468300
.*-------------------------------------------------------------------   00468400
.***AI.L15 XACCESS "READ" AL1                                           00468500
         AIF   ('&XACCESS' NE 'READ').ZI28A                             00468600
&ZW                   SETC  '1'                                         00468700
.ZI28A                ANOP  ,                                           00468800
.*-------------------------------------------------------------------   00468900
.***AI.L15 XACCESS "WRITE" AL1                                          00469000
         AIF   ('&XACCESS' NE 'WRITE').ZI29A                            00469100
&ZW                   SETC  '2'                                         00469200
.ZI29A                ANOP  ,                                           00469300
.*-------------------------------------------------------------------   00469400
.***AI.L15 XACCESS "ANY" AL1                                            00469500
         AIF   ('&XACCESS' NE 'ANY').ZI30A                              00469600
&ZW                   SETC  '3'                                         00469700
.ZI30A                ANOP  ,                                           00469800
.*-------------------------------------------------------------------   00469900
.***AI.L17 XACCESS AL1                                                  00470000
                      AIF   ('&ZW' EQ '0').ZI30B                        00470100
                      AIF   ('&ZW' EQ '').ZI30B                         00470200
.*                                                                      00470300
&ZOPN                 SETA  &ZOPN+1                                     00470400
&ZOPL(&ZOPN)          SETC  ' '                                         00470500
&ZOPO(&ZOPN)          SETC  'MVI'                                       00470600
&ZOPV(&ZOPN)          SETC  '7(1),&ZW'                                  00470700
&ZOPD(&ZOPN)          SETC  '++ &ZXACCESS XACCESS'                      00470800
.ZI30B                ANOP  ,                                           00470900
.*-------------------------------------------------------------------   00471000
.***AI.L25  XDEVLISTPTR64 AL8                                           00471100
                      AIF   ('&ZXDEVLISTPTR64' EQ '').ZI31E             00471200
                      AIF   ('&ZXDEVLISTPTR64' EQ 'OUTPUT').ZI31E       00471300
&ZCGPR                SETC  '&XDEVLISTPTR64'                            00471400
.*                                                                      00471500
                      AIF   ('&XDEVLISTPTR64'(1,1) NE '(').ZI31B        00471600
&ZCGPR   SETC  '0('.'&XDEVLISTPTR64'(2,K'&XDEVLISTPTR64-2).')'          00471700
                      AGO   .ZI31D                                      00471800
.ZI31B                ANOP  ,                                           00471900
.*                                                                      00472000
&ZC                   SETC  '&XDEVLISTPTR64'(1,1)                       00472100
                      AIF   (T'&ZC NE 'N').ZI31D                        00472200
&ZC                   SETC  '&XDEVLISTPTR64'                            00472300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI31D               00472400
&ZCGPR                SETC  '=AD(&XDEVLISTPTR64)'                       00472500
.*                                                                      00472600
.ZI31D                ANOP  ,                                           00472700
.*                                                                      00472800
&ZOPN                 SETA  &ZOPN+1                                     00472900
&ZOPL(&ZOPN)          SETC  ' '                                         00473000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00473100
&ZOPV(&ZOPN)          SETC  '8(8,1),&ZCGPR'                             00473200
&ZOPD(&ZOPN)          SETC  '++ &ZXDEVLISTPTR64 XDEVLISTPTR64'          00473300
.*                                                                      00473400
.ZI31E                ANOP  ,                                           00473500
.*-------------------------------------------------------------------   00473600
.***AI.L25  XDEVDESCPTR64 AL8                                           00473700
                      AIF   ('&ZXDEVDESCPTR64' EQ '').ZI32E             00473800
                      AIF   ('&ZXDEVDESCPTR64' EQ 'OUTPUT').ZI32E       00473900
&ZCGPR                SETC  '&XDEVDESCPTR64'                            00474000
.*                                                                      00474100
                      AIF   ('&XDEVDESCPTR64'(1,1) NE '(').ZI32B        00474200
&ZCGPR   SETC  '0('.'&XDEVDESCPTR64'(2,K'&XDEVDESCPTR64-2).')'          00474300
                      AGO   .ZI32D                                      00474400
.ZI32B                ANOP  ,                                           00474500
.*                                                                      00474600
&ZC                   SETC  '&XDEVDESCPTR64'(1,1)                       00474700
                      AIF   (T'&ZC NE 'N').ZI32D                        00474800
&ZC                   SETC  '&XDEVDESCPTR64'                            00474900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI32D               00475000
&ZCGPR                SETC  '=AD(&XDEVDESCPTR64)'                       00475100
.*                                                                      00475200
.ZI32D                ANOP  ,                                           00475300
.*                                                                      00475400
&ZOPN                 SETA  &ZOPN+1                                     00475500
&ZOPL(&ZOPN)          SETC  ' '                                         00475600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00475700
&ZOPV(&ZOPN)          SETC  '16(8,1),&ZCGPR'                            00475800
&ZOPD(&ZOPN)          SETC  '++ &ZXDEVDESCPTR64 XDEVDESCPTR64'          00475900
.*                                                                      00476000
.ZI32E                ANOP  ,                                           00476100
.*-------------------------------------------------------------------   00476200
.***AI.L25  XDEVIOLISTPTR64 AL8                                         00476300
                      AIF   ('&ZXDEVIOLISTPTR64' EQ '').ZI33E           00476400
                      AIF   ('&ZXDEVIOLISTPTR64' EQ 'OUTPUT').ZI33E     00476500
&ZCGPR                SETC  '&XDEVIOLISTPTR64'                          00476600
.*                                                                      00476700
                      AIF   ('&XDEVIOLISTPTR64'(1,1) NE '(').ZI33B      00476800
&ZCGPR   SETC  '0('.'&XDEVIOLISTPTR64'(2,K'&XDEVIOLISTPTR64-2).')'      00476900
                      AGO   .ZI33D                                      00477000
.ZI33B                ANOP  ,                                           00477100
.*                                                                      00477200
&ZC                   SETC  '&XDEVIOLISTPTR64'(1,1)                     00477300
                      AIF   (T'&ZC NE 'N').ZI33D                        00477400
&ZC                   SETC  '&XDEVIOLISTPTR64'                          00477500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI33D               00477600
&ZCGPR                SETC  '=AD(&XDEVIOLISTPTR64)'                     00477700
.*                                                                      00477800
.ZI33D                ANOP  ,                                           00477900
.*                                                                      00478000
&ZOPN                 SETA  &ZOPN+1                                     00478100
&ZOPL(&ZOPN)          SETC  ' '                                         00478200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00478300
&ZOPV(&ZOPN)          SETC  '24(8,1),&ZCGPR'                            00478400
&ZOPD(&ZOPN)          SETC  '++ &ZXDEVIOLISTPTR64 XDEVIOLISTPTR64'      00478500
.*                                                                      00478600
.ZI33E                ANOP  ,                                           00478700
.*-------------------------------------------------------------------   00478800
.***AI.L18  XECB AL4                                                    00478900
         AIF   ('&XECB' NE 'NONE').ZI34                                 00479000
&ZXECB                SETC  ''             RESET INPUT/OUTPUT           00479100
.ZI34                 ANOP  ,                                           00479200
.*-------------------------------------------------------------------   00479300
.***AI.L25  XECB AL4                                                    00479400
                      AIF   ('&ZXECB' EQ '').ZI34E                      00479500
                      AIF   ('&ZXECB' EQ 'OUTPUT').ZI34E                00479600
&ZCGPR                SETC  '&XECB'                                     00479700
.*                                                                      00479800
                      AIF   ('&XECB'(1,1) NE '(').ZI34B                 00479900
&ZCGPR   SETC  '0('.'&XECB'(2,K'&XECB-2).')'                            00480000
                      AGO   .ZI34D                                      00480100
.ZI34B                ANOP  ,                                           00480200
.*                                                                      00480300
&ZC                   SETC  '&XECB'(1,1)                                00480400
                      AIF   (T'&ZC NE 'N').ZI34D                        00480500
&ZC                   SETC  '&XECB'                                     00480600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI34D               00480700
&ZCGPR                SETC  '=AL4(&XECB)'                               00480800
.*                                                                      00480900
.ZI34D                ANOP  ,                                           00481000
.*                                                                      00481100
&ZOPN                 SETA  &ZOPN+1                                     00481200
&ZOPL(&ZOPN)          SETC  ' '                                         00481300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00481400
&ZOPV(&ZOPN)          SETC  '32(4,1),&ZCGPR'                            00481500
&ZOPD(&ZOPN)          SETC  '++ &ZXECB XECB'                            00481600
.*                                                                      00481700
.ZI34E                ANOP  ,                                           00481800
.*-------------------------------------------------------------------   00481900
.***AI.L18  XIOTOKEN AL4                                                00482000
         AIF   ('&XIOTOKEN' NE 'NONE').ZI35                             00482100
&ZXIOTOKEN            SETC  ''             RESET INPUT/OUTPUT           00482200
.ZI35                 ANOP  ,                                           00482300
.*-------------------------------------------------------------------   00482400
.***AI.L25  XIOTOKEN AL4                                                00482500
                      AIF   ('&ZXIOTOKEN' EQ '').ZI35E                  00482600
                      AIF   ('&ZXIOTOKEN' EQ 'OUTPUT').ZI35E            00482700
&ZCGPR                SETC  '&XIOTOKEN'                                 00482800
.*                                                                      00482900
                      AIF   ('&XIOTOKEN'(1,1) NE '(').ZI35B             00483000
&ZCGPR   SETC  '0('.'&XIOTOKEN'(2,K'&XIOTOKEN-2).')'                    00483100
                      AGO   .ZI35D                                      00483200
.ZI35B                ANOP  ,                                           00483300
.*                                                                      00483400
&ZC                   SETC  '&XIOTOKEN'(1,1)                            00483500
                      AIF   (T'&ZC NE 'N').ZI35D                        00483600
&ZC                   SETC  '&XIOTOKEN'                                 00483700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI35D               00483800
&ZCGPR                SETC  '=AL4(&XIOTOKEN)'                           00483900
.*                                                                      00484000
.ZI35D                ANOP  ,                                           00484100
.*                                                                      00484200
&ZOPN                 SETA  &ZOPN+1                                     00484300
&ZOPL(&ZOPN)          SETC  ' '                                         00484400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00484500
&ZOPV(&ZOPN)          SETC  '36(4,1),&ZCGPR'                            00484600
&ZOPD(&ZOPN)          SETC  '++ &ZXIOTOKEN XIOTOKEN'                    00484700
.*                                                                      00484800
.ZI35E                ANOP  ,                                           00484900
.*-------------------------------------------------------------------   00485000
.***AI.L25  XDEVLISTPTR AL4                                             00485100
                      AIF   ('&ZXDEVLISTPTR' EQ '').ZI39E               00485200
                      AIF   ('&ZXDEVLISTPTR' EQ 'OUTPUT').ZI39E         00485300
&ZCGPR                SETC  '&XDEVLISTPTR'                              00485400
.*                                                                      00485500
                      AIF   ('&XDEVLISTPTR'(1,1) NE '(').ZI39B          00485600
&ZCGPR   SETC  '0('.'&XDEVLISTPTR'(2,K'&XDEVLISTPTR-2).')'              00485700
                      AGO   .ZI39D                                      00485800
.ZI39B                ANOP  ,                                           00485900
.*                                                                      00486000
&ZC                   SETC  '&XDEVLISTPTR'(1,1)                         00486100
                      AIF   (T'&ZC NE 'N').ZI39D                        00486200
&ZC                   SETC  '&XDEVLISTPTR'                              00486300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI39D               00486400
&ZCGPR                SETC  '=AL4(&XDEVLISTPTR)'                        00486500
.*                                                                      00486600
.ZI39D                ANOP  ,                                           00486700
.*                                                                      00486800
&ZOPN                 SETA  &ZOPN+1                                     00486900
&ZOPL(&ZOPN)          SETC  ' '                                         00487000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00487100
&ZOPV(&ZOPN)          SETC  '12(4,1),&ZCGPR'                            00487200
&ZOPD(&ZOPN)          SETC  '++ &ZXDEVLISTPTR XDEVLISTPTR'              00487300
.*                                                                      00487400
.ZI39E                ANOP  ,                                           00487500
.*-------------------------------------------------------------------   00487600
.***AI.L25  XDEVDESCPTR AL4                                             00487700
                      AIF   ('&ZXDEVDESCPTR' EQ '').ZI42E               00487800
                      AIF   ('&ZXDEVDESCPTR' EQ 'OUTPUT').ZI42E         00487900
&ZCGPR                SETC  '&XDEVDESCPTR'                              00488000
.*                                                                      00488100
                      AIF   ('&XDEVDESCPTR'(1,1) NE '(').ZI42B          00488200
&ZCGPR   SETC  '0('.'&XDEVDESCPTR'(2,K'&XDEVDESCPTR-2).')'              00488300
                      AGO   .ZI42D                                      00488400
.ZI42B                ANOP  ,                                           00488500
.*                                                                      00488600
&ZC                   SETC  '&XDEVDESCPTR'(1,1)                         00488700
                      AIF   (T'&ZC NE 'N').ZI42D                        00488800
&ZC                   SETC  '&XDEVDESCPTR'                              00488900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI42D               00489000
&ZCGPR                SETC  '=AL4(&XDEVDESCPTR)'                        00489100
.*                                                                      00489200
.ZI42D                ANOP  ,                                           00489300
.*                                                                      00489400
&ZOPN                 SETA  &ZOPN+1                                     00489500
&ZOPL(&ZOPN)          SETC  ' '                                         00489600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00489700
&ZOPV(&ZOPN)          SETC  '20(4,1),&ZCGPR'                            00489800
&ZOPD(&ZOPN)          SETC  '++ &ZXDEVDESCPTR XDEVDESCPTR'              00489900
.*                                                                      00490000
.ZI42E                ANOP  ,                                           00490100
.*-------------------------------------------------------------------   00490200
.***AI.L25  XDEVIOLISTPTR AL4                                           00490300
                      AIF   ('&ZXDEVIOLISTPTR' EQ '').ZI45E             00490400
                      AIF   ('&ZXDEVIOLISTPTR' EQ 'OUTPUT').ZI45E       00490500
&ZCGPR                SETC  '&XDEVIOLISTPTR'                            00490600
.*                                                                      00490700
                      AIF   ('&XDEVIOLISTPTR'(1,1) NE '(').ZI45B        00490800
&ZCGPR   SETC  '0('.'&XDEVIOLISTPTR'(2,K'&XDEVIOLISTPTR-2).')'          00490900
                      AGO   .ZI45D                                      00491000
.ZI45B                ANOP  ,                                           00491100
.*                                                                      00491200
&ZC                   SETC  '&XDEVIOLISTPTR'(1,1)                       00491300
                      AIF   (T'&ZC NE 'N').ZI45D                        00491400
&ZC                   SETC  '&XDEVIOLISTPTR'                            00491500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI45D               00491600
&ZCGPR                SETC  '=AL4(&XDEVIOLISTPTR)'                      00491700
.*                                                                      00491800
.ZI45D                ANOP  ,                                           00491900
.*                                                                      00492000
&ZOPN                 SETA  &ZOPN+1                                     00492100
&ZOPL(&ZOPN)          SETC  ' '                                         00492200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00492300
&ZOPV(&ZOPN)          SETC  '28(4,1),&ZCGPR'                            00492400
&ZOPD(&ZOPN)          SETC  '++ &ZXDEVIOLISTPTR XDEVIOLISTPTR'          00492500
.*                                                                      00492600
.ZI45E                ANOP  ,                                           00492700
.*-------------------------------------------------------------------   00492800
&ZOPN1                SETA &ZOPN                                        00492900
.*******************************************************************    00493000
.***  PROCESS IOSFBA OUTPUT PARAMETERS                                  00493100
.*******************************************************************    00493200
                      ACTR  10000                                       00493300
.*------------------------------------------------------------------    00493400
.***AO.L02 XDEVDESCPTR64 AL8                                            00493500
         AIF   ('&ZXDEVDESCPTR64' EQ 'OUTPUT').ZO32A  OUTPUT            00493600
         AIF   ('&ZXDEVDESCPTR64' NE 'INOUT').ZO32C  INOUT              00493700
.ZO32A    AIF   ('&XDEVDESCPTR64'(1,1) NE '(').ZO32B  ADDR IN GPR       00493800
&ZCGPR   SETC  '&XDEVDESCPTR64'(2,K'&XDEVDESCPTR64-2)                   00493900
&ZOPN                 SETA  &ZOPN+1                                     00494000
&ZOPL(&ZOPN)          SETC  ' '                                         00494100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00494200
&ZOPV(&ZOPN)          SETC  '0(8,&ZCGPR),16(1)'                         00494300
&ZOPD(&ZOPN)          SETC  '++ XDEVDESCPTR64 AL8'                      00494400
                      AGO   .ZO32C                                      00494500
.*                                                                      00494600
.ZO32B                ANOP  ,                                           00494700
&ZAWRK   SETA  K'&XDEVDESCPTR64                                         00494800
         AIF   ('&XDEVDESCPTR64'(&ZAWRK,1) NE ')').ZO32G                00494900
&ZN      SETA  2                                                        00495000
.ZO32H    ANOP                                                          00495100
         AIF   (&ZN GE &ZAWRK).ZO32G                                    00495200
         AIF   ('&XDEVDESCPTR64'(&ZN,1) NE '(').ZO32I                   00495300
&ZC      SETC  '&XDEVDESCPTR64'(1,&ZN).'8'.','                          00495400
&ZC      SETC  '&ZC'.'&XDEVDESCPTR64'(&ZN+1,&ZAWRK-&ZN).',16(1)'        00495500
         AGO   .ZO32J                                                   00495600
.ZO32I    ANOP                                                          00495700
&ZN      SETA  &ZN+1                                                    00495800
         AGO   .ZO32H                                                   00495900
.ZO32G    ANOP                                                          00496000
&ZC      SETC  '&XDEVDESCPTR64.(8),16(1)'                               00496100
.ZO32J    ANOP                                                          00496200
&ZOPN                 SETA  &ZOPN+1                                     00496300
&ZOPL(&ZOPN)          SETC  ' '                                         00496400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00496500
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00496600
&ZOPD(&ZOPN)          SETC  '++ XDEVDESCPTR64 AL8'                      00496700
.ZO32C                ANOP  ,                                           00496800
.*------------------------------------------------------------------    00496900
.***AO.L02 XDEVDESCPTR A                                                00497000
         AIF   ('&ZXDEVDESCPTR' EQ 'OUTPUT').ZO42A  OUTPUT              00497100
         AIF   ('&ZXDEVDESCPTR' NE 'INOUT').ZO42C  INOUT                00497200
.ZO42A    AIF   ('&XDEVDESCPTR'(1,1) NE '(').ZO42B  ADDR IN GPR         00497300
&ZCGPR   SETC  '&XDEVDESCPTR'(2,K'&XDEVDESCPTR-2)                       00497400
&ZOPN                 SETA  &ZOPN+1                                     00497500
&ZOPL(&ZOPN)          SETC  ' '                                         00497600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00497700
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),20(1)'                         00497800
&ZOPD(&ZOPN)          SETC  '++ XDEVDESCPTR A'                          00497900
                      AGO   .ZO42C                                      00498000
.*                                                                      00498100
.ZO42B                ANOP  ,                                           00498200
&ZAWRK   SETA  K'&XDEVDESCPTR                                           00498300
         AIF   ('&XDEVDESCPTR'(&ZAWRK,1) NE ')').ZO42G                  00498400
&ZN      SETA  2                                                        00498500
.ZO42H    ANOP                                                          00498600
         AIF   (&ZN GE &ZAWRK).ZO42G                                    00498700
         AIF   ('&XDEVDESCPTR'(&ZN,1) NE '(').ZO42I                     00498800
&ZC      SETC  '&XDEVDESCPTR'(1,&ZN).'4'.','                            00498900
&ZC      SETC  '&ZC'.'&XDEVDESCPTR'(&ZN+1,&ZAWRK-&ZN).',20(1)'          00499000
         AGO   .ZO42J                                                   00499100
.ZO42I    ANOP                                                          00499200
&ZN      SETA  &ZN+1                                                    00499300
         AGO   .ZO42H                                                   00499400
.ZO42G    ANOP                                                          00499500
&ZC      SETC  '&XDEVDESCPTR.(4),20(1)'                                 00499600
.ZO42J    ANOP                                                          00499700
&ZOPN                 SETA  &ZOPN+1                                     00499800
&ZOPL(&ZOPN)          SETC  ' '                                         00499900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00500000
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00500100
&ZOPD(&ZOPN)          SETC  '++ XDEVDESCPTR A'                          00500200
.ZO42C                ANOP  ,                                           00500300
.*******************************************************************    00500400
.***AO.X02  RETURN CODE PROCESSING                                      00500500
.*******************************************************************    00500600
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00500700
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00500800
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00500900
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00501000
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00501100
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00501200
&ZOPN                 SETA  &ZOPN+1                                     00501300
&ZOPL(&ZOPN)          SETC  ' '                                         00501400
&ZOPO(&ZOPN)          SETC  'ST'                                        00501500
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00501600
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00501700
                      AGO   .ZMRETX                                     00501800
.*                                                                      00501900
.ZMRET2               ANOP  ,                                           00502000
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00502100
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00502200
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00502300
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00502400
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00502500
&ZOPN                 SETA  &ZOPN+1                                     00502600
&ZOPL(&ZOPN)          SETC  ' '                                         00502700
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00502800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00502900
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00503000
.ZMRETX               ANOP  ,                                           00503100
.*******************************************************************    00503200
.***AO.X03  REASON CODE PROCESSING                                      00503300
.*******************************************************************    00503400
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00503500
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00503600
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00503700
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00503800
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00503900
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00504000
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00504100
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00504200
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00504300
&ZOPN                 SETA  &ZOPN+1                                     00504400
&ZOPL(&ZOPN)          SETC  ' '                                         00504500
&ZOPO(&ZOPN)          SETC  'ST'                                        00504600
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00504700
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00504800
                      AGO   .ZMRSNX                                     00504900
.*                                                                      00505000
.ZMRSN2               ANOP  ,                                           00505100
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00505200
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00505300
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00505400
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00505500
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00505600
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00505700
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00505800
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00505900
&ZOPN                 SETA  &ZOPN+1                                     00506000
&ZOPL(&ZOPN)          SETC  ' '                                         00506100
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00506200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00506300
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00506400
.ZMRSNX               ANOP  ,                                           00506500
.*******************************************************************    00506600
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00506700
.*******************************************************************    00506800
.ZMFLX                ANOP  ,              MF=L PROCESSING              00506900
.*******************************************************************    00507000
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00507100
.*******************************************************************    00507200
                      ACTR  10000                                       00507300
.*                                                                      00507400
                      LCLA  &ZLC           COLUMN POSITION              00507500
                      LCLA  &ZOPX          LIST TABLE INDEX             00507600
                      LCLC  &ZLL           LABEL                        00507700
                      LCLC  &ZLOP          OPERATION                    00507800
                      LCLC  &ZLV           VALUE                        00507900
                      LCLC  &ZLD           DESCRIPTION                  00508000
.*                                                                      00508100
&ZOPX                 SETA  1                                           00508200
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00508300
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00508400
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00508500
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00508600
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00508700
                      AIF   (K'&ZLD LE 0).ZL5                           00508800
&ZLC                  SETA  35             COMMENT COLUMN               00508900
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00509000
&ZLC                  SETA  33             COMMMENT COLUMN              00509100
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00509200
&ZLV                  SETC  '&ZLV'.' '                                  00509300
                      AGO   .ZL3                                        00509400
.*                                                                      00509500
.ZL4                  ANOP  ,                                           00509600
&ZLV                  SETC  '&ZLV'.' '                                  00509700
.ZL5                  ANOP  ,                                           00509800
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00509900
.*                                                                      00510000
&ZLL     &ZLOP &ZLV                                                     00510100
.*                                                                      00510200
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00510300
                      AGO   .ZL2           CONTINUE LOOPING             00510400
.*                                                                      00510500
.ZLX                  ANOP  ,                                           00510600
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00510700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00510800
.*-----------BASR invocation code-------------                          00510900
.*********************************************************************  00511000
.* Gets the address of IOSVFBAS from the IOVT and branches to it.    *  00511100
.*********************************************************************  00511200
         SYSSTATE TEST                                                  00511300
         AIF   ('&SYSAM64' NE 'YES').IOSFBA641                          00511400
         L     15,16(0,0)         ++ GET CVT ADDRESS                    00511500
         AGO   .IOSFBA642                                               00511600
.IOSFBA641 ANOP                                                         00511700
         LLGT  15,16(0,0)         ++ GET CVT ADDRESS                    00511800
.IOSFBA642 ANOP                                                         00511900
         L     15,124(15,0)       ++ GET IOCOM ADDRESS                  00512000
         L     15,208(15,0)       ++ GET IOVT ADDRESS                   00512100
         L     15,428(15,0)       ++ GET IOSVFBAS ADDRESS               00512200
         LTR   15,15              ++ Check for 0 ADDRESS                00512300
         JZ    FBAERR_&SYSNDX     ++ If 0, set return code              00512400
         BASR  14,15              ++ CALL IOSVFBAS                      00512500
         J     FBAEXIT_&SYSNDX    ++ Exit                               00512600
FBAERR_&SYSNDX  LA    15,12       ++ SET ERROR RETURN CODE              00512700
         LA    0,4                ++ SET ERROR REASON CODE              00512800
FBAEXIT_&SYSNDX DS    0H                                                00512900
                                                                        00513000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00513100
.ZLINKX               ANOP  ,                                           00513200
.*******************************************************************    00513300
.***AP.X01  FORMAT GENERATED CODE                                       00513400
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00513500
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00513600
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00513700
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00513800
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00513900
                      AIF   (K'&ZLD LE 0).ZL51                          00514000
&ZLC                  SETA  35             COMMENT COLUMN               00514100
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00514200
&ZLC                  SETA  33             COMMENT COLUMN               00514300
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00514400
&ZLV                  SETC  '&ZLV'.' '                                  00514500
                      AGO   .ZL31                                       00514600
.*                                                                      00514700
.ZL41                 ANOP  ,                                           00514800
&ZLV                  SETC  '&ZLV'.' '                                  00514900
.ZL51                 ANOP  ,                                           00515000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00515100
.*                                                                      00515200
&ZLL     &ZLOP &ZLV                                                     00515300
.*                                                                      00515400
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00515500
                      AGO   .ZL21          CONTINUE LOOPING             00515600
.*                                                                      00515700
.ZLX1                 ANOP  ,                                           00515800
.*******************************************************************    00515900
.***AP.X02  END OF IOSFBA MACRO                                         00516000
&ZIOSFBA              SETC  'YES'          SET IOSFBA USED              00516100
         POP   PRINT                                                    00516200
*                                            IOSFBA-1                   00516300
         SPACE 1                                                        00516400
.ZLX2                 ANOP  ,                                           00516500
         MEND                                                           00516600
**********************************************************************/ 00516700
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00516800
*%IOSFBA: MACRO KEYS(ALLOCATE,ACCESS,DEVLISTPTR,DEVLISTPTR64,           00516900
*                 DEVDESCPTR,DEVDESCPTR64,DEVCOUNT,MINDEVCOUNT,QUERY,   00517000
*                 READ,DEVIOLISTPTR,DEVIOLISTPTR64,ECB,RESERVED,        00517100
*                 IOTOKEN,REUSECP,WRITE,ERASE,CLEANUP,UNALLOCATE,       00517200
*                 RETCODE,RSNCODE,PLISTVER,MF);                         00517300
*  ANS('?'!!MACLABEL!!' '!!'IOSFBAP '!!MACLIST!!                        00517400
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00517500
*%END IOSFBA;                                                           00517600
