*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWM4ECRE                              -05/20/14-<2> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Create Enclave                                * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 2004, 2013                         * 00001200
*                                                                     * 00001300
* STATUS= HBB7790                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The purpose of this service is to create an Enclave where      * 00002100
*      possibly multiple SRBs and/or TCBs may be simultaneously       * 00002200
*      executing or scheduled. For the duration of each Enclave, all  * 00002300
*      SRBs and TCBs associated with the Enclave are treated as part  * 00002400
*      of a single work request.  All SRBs and/or TCBs associated     * 00002500
*      with the Enclave accumulate service as a single entity and are * 00002600
*      managed as a single entity.  The address spaces where Enclave  * 00002700
*      SRBs are dispatched, as defined by the ENV= parameter of       * 00002800
*      IEAMSCHD, should be non-swappable.                             * 00002900
*                                                                     * 00003000
*      For more information about managing address spaces with        * 00003100
*      enclaves, see: "Performance Management of Address Spaces with  * 00003200
*      Enclaves".                                                     * 00003300
*                                                                     * 00003400
*      NOTE:  An address space must be non-swappable if it has        * 00003500
*      enclave SRBs dispatched and SYSEVENT ENCASSOC has not been     * 00003600
*      issue.                                                         * 00003700
*                                                                     * 00003800
*      For TYPE=INDEPENDENT Enclaves, a new work business unit of     * 00003900
*      work is created and classified according to the input Connect  * 00004000
*      token's subsystem type and subsystem name, along with whatever * 00004100
*      other attributes are passed via the Classify parameter list.   * 00004200
*      The current home address space is considered the owner.        * 00004300
*                                                                     * 00004400
*      For TYPE=DEPENDENT enclaves, SRM considers the enclave to be   * 00004500
*      part of the current home address space's transaction, which    * 00004600
*      then becomes the owning space.  This space need not be         * 00004700
*      connected to WLM via IWM4CON.                                  * 00004800
*                                                                     * 00004900
*      For TYPE=WORKDEPENDENT, SRM considers the new enclave to be a  * 00005000
*      continuation of the creating unit of work's (TCB or SRB)       * 00005100
*      transaction.  The resulting enclave's type depends on the      * 00005200
*      caller's execution environment:  If the caller has joined or   * 00005300
*      is scheduled into an enclave of type independent, the          * 00005400
*      resulting enclave will be of type work-dependent and is        * 00005500
*      regarded as an extension of the independent enclave's          * 00005600
*      transaction. Classification and owner address space is adopted * 00005700
*      from the independent enclave.  If the caller has joined or is  * 00005800
*      scheduled into an enclave of type work-dependent, the          * 00005900
*      resulting enclave will be of type work-dependent, as well. It  * 00006000
*      is considered a part of the underlying independent enclave's   * 00006100
*      transaction and inherits owner address space and               * 00006200
*      classification from that independent enclave.  If the caller   * 00006300
*      has joined or is scheduled into a dependent enclave, the       * 00006400
*      resulting enclave will be of type dependent. The new enclave   * 00006500
*      is considered part of the creating enclave's (i.e., the        * 00006600
*      enclave the caller is running in) owner address space's        * 00006700
*      transaction and inherits its classification. The creating      * 00006800
*      enclave's owner address space will become the owner of the new * 00006900
*      enclave.  Finally, if no enclave has been joined when the      * 00007000
*      service is called, the resulting enclave will be as if the     * 00007100
*      service had been invoked with TYPE=DEPENDENT specified.  Note  * 00007200
*      that it is not allowed to invoke this service with             * 00007300
*      TYPE=WORKDEPENDENT specified while running in a foreign        * 00007400
*      enclave.                                                       * 00007500
*                                                                     * 00007600
*      For TYPE=MONENV enclaves, SRM considers the enclave to be part * 00007700
*      of the address space's transaction which is delayed according  * 00007800
*      to the input management monitoring environment, as set when    * 00007900
*      IWM4MINI or IWMMRELA was used. This space becomes the owning   * 00008000
*      space.  This space need not be connected to WLM via IWM4CON.   * 00008100
*                                                                     * 00008200
*      For both TYPE=MONENV and TYPE=DEPENDENT enclaves, SRM will     * 00008300
*      change the enclave to TYPE=INDEPENDENT if the owning address   * 00008400
*      space's transaction ends.                                      * 00008500
*                                                                     * 00008600
*      For both TYPE=MONENV and TYPE=DEPENDENT enclaves, SRM will     * 00008700
*      check the enclave for period switch when the owning address    * 00008800
*      space is swapped in.  If the owning address space is swapped   * 00008900
*      out SRM will continue to accumulate service for any enclaves   * 00009000
*      owned by the space, but will not check the address space or    * 00009100
*      any owned enclave for period switch until the address space is * 00009200
*      swapped in again.  The presence of enclaves does not make the  * 00009300
*      address space appear to be ready from an SRM point of view.    * 00009400
*                                                                     * 00009500
*      Enclaves are deleted if the owning address space terminates.   * 00009600
*      TYPE=INDEPENDENT enclaves are deleted if the owning address    * 00009700
*      space disconnects or the TCB which connected terminates.       * 00009800
*      Work-dependent enclaves are implicitly deleted when the owning * 00009900
*      independent enclave is deleted.                                * 00010000
*                                                                     * 00010100
*      Enclaves should only be created when this environment is ready * 00010200
*      for execution, and should not be used when prolonged queueing  * 00010300
*      effects are possible prior to the scheduling of the first SRB  * 00010400
*      (IEAMSCHD) or the first TCB join (IWMEJOIN).  "Prolonged"      * 00010500
*      would certainly include times measured in seconds.  The        * 00010600
*      service allows the caller to pass the queueing time prior to   * 00010700
*      creation of the Enclave so that this may be separately         * 00010800
*      reported.                                                      * 00010900
*                                                                     * 00011000
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00011100
*                                                                     * 00011200
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00011300
*                                                                     * 00011400
*01* ENVIRONMENT:                                                     * 00011500
*                                                                     * 00011600
*                                                                     * 00011700
*      Dispatchable unit mode: Task or SRB mode.                      * 00011800
*                                                                     * 00011900
*      Minimum authorization: Supervisor state or program key mask    * 00012000
*                        (PKM) allowing keys 0-7.                     * 00012100
*                                                                     * 00012200
*      AMODE:            31- or 64-bit.  If in 64-Bit addressing      * 00012300
*                        mode, code SYSSTATE AMODE64=YES before       * 00012400
*                        invoking this macro.                         * 00012500
*                                                                     * 00012600
*      ASC mode:         Primary or Access Register.                  * 00012700
*                                                                     * 00012800
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00012900
*                                                                     * 00013000
*      Interrupt status: Enabled for I/O and external interrupts.     * 00013100
*                                                                     * 00013200
*      Locks:            No locks held.                               * 00013300
*                                                                     * 00013400
*      Control parameters: Control parameters must be in the primary  * 00013500
*                        address space.                               * 00013600
*                                                                     * 00013700
*                                                                     * 00013800
*                                                                     * 00013900
*01* PROGRAMMING REQUIREMENTS:                                        * 00014000
*                                                                     * 00014100
*                                                                     * 00014200
*    1.  The macro IWMYCON must be included to use this macro.        * 00014300
*                                                                     * 00014400
*    2.  The macro CVT must be included to use this macro.            * 00014500
*                                                                     * 00014600
*    3.  The macro IWMPB must be in the library concatenation, since  * 00014700
*        it is included by IWMYCON.                                   * 00014800
*                                                                     * 00014900
*    4.  Note that the high order halfword of register 0, and the     * 00015000
*        reason code variable when specified, may be non-zero and     * 00015100
*        represents diagnostic data which is NOT part of the external * 00015200
*        interface.  The high order halfword should thus be excluded  * 00015300
*        from comparison with the reason code values described above. * 00015400
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00015500
*        be used for this purpose.                                    * 00015600
*                                                                     * 00015700
*    5.  All character data, unless otherwise specified, is assumed   * 00015800
*        to be left justified and padded with blanks on the right, as * 00015900
*        needed, to occupy the specified number of bytes.             * 00016000
*                                                                     * 00016100
*    6.  Prior to release z/OS V1.11, the caller has to assure that   * 00016200
*        work-dependent enclave support is available on the system    * 00016300
*        before calling this macro with TYPE=WORKDEPENDENT. A flag    * 00016400
*        (SRMSTWDP) in macro IRASRMST (which is returned by sysevent  * 00016500
*        REQSRMST) indicates whether or not work-dependent enclaves   * 00016600
*        can be created.                                              * 00016700
*                                                                     * 00016800
*                                                                     * 00016900
*                                                                     * 00017000
*01* RESTRICTIONS:                                                    * 00017100
*                                                                     * 00017200
*                                                                     * 00017300
*    1.  This macro may not be used prior to the completion of WLM    * 00017400
*        address space initialization.                                * 00017500
*                                                                     * 00017600
*    2.  This macro may only be used on MVS/ESA SP5.2 or higher       * 00017700
*        levels.                                                      * 00017800
*                                                                     * 00017900
*    3.  This macro may only be used on MVS/ESA HBB6603 or higher     * 00018000
*        levels for TYPE(DEPENDENT!MONENV).                           * 00018100
*                                                                     * 00018200
*    4.  The Connect token from the input classify parameter list     * 00018300
*        must be owned by the current home address space and must be  * 00018400
*        associated with a system key (0-7), as specified on IWM4CON. * 00018500
*        The Classify parameter list and hence the Connect token is   * 00018600
*        only relevant for TYPE=INDEPENDENT Enclaves.                 * 00018700
*                                                                     * 00018800
*    5.  Since this service may only be used by system-like code,     * 00018900
*        some validity checking on the parameter list is not          * 00019000
*        performed. These checks would only be needed if the macro    * 00019100
*        were not used to invoke the service routine.                 * 00019200
*                                                                     * 00019300
*    6.  The variable length fields associated with the classify      * 00019400
*        parameter list (the classify parameter list is only relevant * 00019500
*        for certain options) given by the CLSFY keyword have the     * 00019600
*        following limitations in addition to those documented in     * 00019700
*        IWMCLSFY:                                                    * 00019800
*                                                                     * 00019900
*                                                                     * 00020000
*        o   SUBSYSPM is limited to 255 bytes                         * 00020100
*                                                                     * 00020200
*        o   COLLECTION is limited to 18 bytes                        * 00020300
*                                                                     * 00020400
*        o   CORRELATION is limited to 12 bytes                       * 00020500
*                                                                     * 00020600
*                                                                     * 00020700
*                                                                     * 00020800
*    7.  When TYPE(MONENV) is specified the following apply:          * 00020900
*                                                                     * 00021000
*                                                                     * 00021100
*        o   If the key specified on IWM4MCRE was a user key (8-F),   * 00021200
*            then primary or home addressability must exist to the    * 00021300
*            performance block IWM4MCRE obtained.  This condition is  * 00021400
*            satisfied by ensuring that the current primary or home   * 00021500
*            address space matches primary (=home) at the time that   * 00021600
*            IWM4MCRE was invoked.                                    * 00021700
*                                                                     * 00021800
*        o   The caller must serialize to prevent any delay           * 00021900
*            monitoring services from being invoked concurrently for  * 00022000
*            the environment represented by the monitoring token.     * 00022100
*                                                                     * 00022200
*        o   Only limited checking is done against the input          * 00022300
*            monitoring token.                                        * 00022400
*                                                                     * 00022500
*        o   TYPE=MONENV enclaves cannot be created for report-only   * 00022600
*            monitoring environments.                                 * 00022700
*                                                                     * 00022800
*                                                                     * 00022900
*                                                                     * 00023000
*    8.  This macro may only be used on z/OS V2R1 or higher levels    * 00023100
*        for the MONTKN64 keyword.                                    * 00023200
*                                                                     * 00023300
*    9.  This macro may only be used on OS/390 R12 or higher levels   * 00023400
*        for EXSTARTDEFER keyword.                                    * 00023500
*                                                                     * 00023600
*    10. This macro may only be used on z/OS V1R10 or higher levels   * 00023700
*        for the IMPORTANCE keyword.                                  * 00023800
*                                                                     * 00023900
*                                                                     * 00024000
*                                                                     * 00024100
*01* INPUT REGISTER INFORMATION:                                      * 00024200
*                                                                     * 00024300
*    Before issuing the IWM4ECRE macro, the caller does not have to   * 00024400
*    place any information into any register unless using it in       * 00024500
*    register notation for a particular parameter, or using it as a   * 00024600
*    base register.                                                   * 00024700
*                                                                     * 00024800
*01* OUTPUT REGISTER INFORMATION:                                     * 00024900
*                                                                     * 00025000
*    When control returns to the caller, the GPRs contain:            * 00025100
*                                                                     * 00025200
*                                                                     * 00025300
*    REGISTER  CONTENTS                                               * 00025400
*                                                                     * 00025500
*    0         Reason code if GR15 return code is non-zero            * 00025600
*                                                                     * 00025700
*    1         Used as work registers by the system                   * 00025800
*                                                                     * 00025900
*    2-13      Unchanged                                              * 00026000
*                                                                     * 00026100
*    14        Used as work registers by the system                   * 00026200
*                                                                     * 00026300
*    15        Return code                                            * 00026400
*                                                                     * 00026500
*                                                                     * 00026600
*                                                                     * 00026700
*    When control returns to the caller, the ARs contain:             * 00026800
*                                                                     * 00026900
*                                                                     * 00027000
*    REGISTER  CONTENTS                                               * 00027100
*                                                                     * 00027200
*    0-1       Used as work registers by the system                   * 00027300
*                                                                     * 00027400
*    2-13      Unchanged                                              * 00027500
*                                                                     * 00027600
*    14-15     Used as work registers by the system                   * 00027700
*                                                                     * 00027800
*                                                                     * 00027900
*                                                                     * 00028000
*    Some callers depend on register contents remaining the same      * 00028100
*    before and after issuing a service.  If the system changes the   * 00028200
*    contents of registers on which the caller depends, the caller    * 00028300
*    must save them before issuing the service, and restore them      * 00028400
*    after the system returns control.                                * 00028500
*                                                                     * 00028600
*01* PERFORMANCE IMPLICATIONS:                                        * 00028700
*                                                                     * 00028800
*    None                                                             * 00028900
*                                                                     * 00029000
*01* SYNTAX:                                                          * 00029100
*                                                                     * 00029200
*Ýxlabel¨  IWM4ECRE  ÐÝ TYPE=INDEPENDENT                              * 00029300
*                    !     ,CLSFY=xclsfy                              * 00029400
*                    !    Ý,SERVCLS=xservcls¨                         * 00029500
*                    !    Ý,INSERVCLS=»xinservcls!0º¨                 * 00029600
*                    !     ,ARRIVALTIME=xarrivaltime                  * 00029700
*                    !     ,FUNCTION_NAME=xfunction_name              * 00029800
*                    !   ÐÝ,EXSTARTDEFER=NO¨                          * 00029900
*                    !   ¿Ý,EXSTARTDEFER=YES¨                         * 00030000
*                    !   ÐÝ,ESTRT=IMPLIED                             * 00030100
*                    !   !    Ý,WORKREQ_HDL=xworkreq_hdl¨¨            * 00030200
*                    !   ÔÝ,ESTRT=EXPLICIT¨                           * 00030300
*                    !   ÔÝ,ESTRT=EXPLICIT_SINGLE¨                    * 00030400
*                    !   ¿Ý,ESTRT=NEVER¨¨                             * 00030500
*                    ÔÝ,TYPE=DEPENDENT¨                               * 00030600
*                    ÔÝ,TYPE=WORKDEPENDENT¨                           * 00030700
*                    ¿Ý,TYPE=MONENV                                   * 00030800
*                        Ð ,MONTKN=xmontkn                            * 00030900
*                        ¿ ,MONTKN64=xmontkn64                        * 00031000
*                        Ð ,ACCESS=PRIMARY                            * 00031100
*                        ¿ ,ACCESS=HOME¨                              * 00031200
*                      ,ETOKEN=xetoken                                * 00031300
*                     Ý,IMPORTANCE=ximportance¨                       * 00031400
*                     Ý,RETCODE=xretcode¨                             * 00031500
*                     Ý,RSNCODE=xrsncode¨                             * 00031600
*                     Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨         * 00031700
*                    ÐÝ,MF=S¨                                         * 00031800
*                    ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                  * 00031900
*                    ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                    * 00032000
*                                                                     * 00032100
*                                                                     * 00032200
*      Where:                                                         * 00032300
*                                                                     * 00032400
*                                                                     * 00032500
*      Ýxlabel¨                                                       * 00032600
*          is an optional symbol, starting in column 1, that is the   * 00032700
*          name on the IWM4ECRE macro invocation.  The name must      * 00032800
*          conform to the rules for an ordinary assembler language    * 00032900
*          symbol.                                                    * 00033000
*          DEFAULT: No name.                                          * 00033100
*                                                                     * 00033200
*                                                                     * 00033300
*                                                                     * 00033400
*                                                                     * 00033500
*      ÝTYPE=»INDEPENDENT!DEPENDENT!WORKDEPENDENT!MONENVº             * 00033600
*          is an optional keyword input which indicates the type of   * 00033700
*          Enclave being created.                                     * 00033800
*          DEFAULT: INDEPENDENT                                       * 00033900
*                                                                     * 00034000
*                                                                     * 00034100
*          ÝTYPE=INDEPENDENT                                          * 00034200
*              indicates that the Enclave represents a new business   * 00034300
*              unit of work with its own business objectives.         * 00034400
*                                                                     * 00034500
*                                                                     * 00034600
*              CLSFY=xclsfy                                           * 00034700
*                  is the name (RS-type), or address in register      * 00034800
*                  (2)-(12), of a required character input which      * 00034900
*                  contains the classification information in the     * 00035000
*                  format of the parameter list for IWM4CLSY or       * 00035100
*                  IWMCLSFY.                                          * 00035200
*                  NOTE that this name is the data area name, not its * 00035300
*                  pointer.  IWM4CLSY MF(M) or IWMCLSFY MF(M) should  * 00035400
*                  be used to initialize the area prior to invocation * 00035500
*                  of IWM4ECRE.                                       * 00035600
*                                                                     * 00035700
*                  Note that the variable length fields associated    * 00035800
*                  with the classify parameter list given by the      * 00035900
*                  CLSFY keyword have the following limitations in    * 00036000
*                  addition to those documented in IWMCLSFY:          * 00036100
*                                                                     * 00036200
*                                                                     * 00036300
*                  o   SUBSYSPM is limited to 255 bytes               * 00036400
*                                                                     * 00036500
*                  o   COLLECTION is limited to 18 bytes              * 00036600
*                                                                     * 00036700
*                  o   CORRELATION is limited to 12 bytes             * 00036800
*                                                                     * 00036900
*                                                                     * 00037000
*                                                                     * 00037100
*                                                                     * 00037200
*                                                                     * 00037300
*                                                                     * 00037400
*              ÝSERVCLS=xservcls¨                                     * 00037500
*                  is the name (RS-type), or address in register      * 00037600
*                  (2)-(12), of an optional fullword output when      * 00037700
*                  CLSFY has been specified which receives the        * 00037800
*                  service class token which matches the              * 00037900
*                  classification attributes. The token allows the    * 00038000
*                  caller to use fast path classification for work    * 00038100
*                  units which have the same classification           * 00038200
*                  attributes than the current work unit.             * 00038300
*                                                                     * 00038400
*                                                                     * 00038500
*                                                                     * 00038600
*                                                                     * 00038700
*              ÝINSERVCLS=»xinservcls!0º¨                             * 00038800
*                  is the name (RS-type), or address in register      * 00038900
*                  (2)-(12), of an optional fullword input which      * 00039000
*                  contains the service class token of a previous     * 00039100
*                  classification call. The caller must ensure that   * 00039200
*                  the classification attributes of the work unit     * 00039300
*                  matches the service class token. If the service    * 00039400
*                  class token is still valid an enclave is created   * 00039500
*                  and associated with the service and report class   * 00039600
*                  information contained in the token. If the service * 00039700
*                  class token is not valid IWM4ECRE will perform the * 00039800
*                  full classification by using the information of    * 00039900
*                  the CLSFY parameter block and return code 4,       * 00040000
*                  reason code IwmRsnCodeNewServcls.                  * 00040100
*                  DEFAULT: 0                                         * 00040200
*                                                                     * 00040300
*                                                                     * 00040400
*                                                                     * 00040500
*                                                                     * 00040600
*              ARRIVALTIME=xarrivaltime                               * 00040700
*                  is the name (RS-type), or address in register      * 00040800
*                  (2)-(12), of a required 64 bit input which         * 00040900
*                  contains the work arrival time in STCK format.     * 00041000
*                  This is the time at which the business work        * 00041100
*                  request is considered to have arrived and from     * 00041200
*                  which point the system evaluates elapsed time for  * 00041300
*                  the work request.                                  * 00041400
*                                                                     * 00041500
*                                                                     * 00041600
*                                                                     * 00041700
*                                                                     * 00041800
*              FUNCTION_NAME=xfunction_name                           * 00041900
*                  is the name (RS-type), or address in register      * 00042000
*                  (2)-(12), of a required 8 character input which    * 00042100
*                  contains the descriptive name for the function for * 00042200
*                  which the Enclave was created.                     * 00042300
*                                                                     * 00042400
*                                                                     * 00042500
*                                                                     * 00042600
*                                                                     * 00042700
*              ÝEXSTARTDEFER=»NO!YESº¨                                * 00042800
*                  is an optional keyword input which indicates       * 00042900
*                  whether the Enclave execution start time should    * 00043000
*                  begin when the first IWM4STBG or IWMEJOIN is       * 00043100
*                  executed.  The time between enclave create and the * 00043200
*                  first IWM4STBG or IWMEJOIN is assumed to be the    * 00043300
*                  queue time.                                        * 00043400
*                  DEFAULT: NO                                        * 00043500
*                                                                     * 00043600
*                                                                     * 00043700
*                  ÝEXSTARTDEFER=NO¨                                  * 00043800
*                                                                     * 00043900
*                      indicates that the Enclave execution start     * 00044000
*                      time should not begin when the first IWM4STBG  * 00044100
*                      or IWMEJOIN is executed.                       * 00044200
*                                                                     * 00044300
*                  ÝEXSTARTDEFER=YES¨                                 * 00044400
*                                                                     * 00044500
*                      indicates that the Enclave execution start     * 00044600
*                      time should begin when the first IWM4STBG or   * 00044700
*                      IWMEJOIN is executed.                          * 00044800
*                                                                     * 00044900
*                                                                     * 00045000
*                                                                     * 00045100
*                                                                     * 00045200
*                                                                     * 00045300
*                                                                     * 00045400
*              ÝESTRT=»IMPLIED!EXPLICIT!EXPLICIT_SINGLE!NEVERº¨       * 00045500
*                  is an optional keyword input which denotes how the * 00045600
*                  work manager indicates the start and end point of  * 00045700
*                  an EWLM work request when participating in cross   * 00045800
*                  platform Enterprise Workload Management (EWLM).    * 00045900
*                  DEFAULT: IMPLIED                                   * 00046000
*                                                                     * 00046100
*                                                                     * 00046200
*                  ÝESTRT=IMPLIED                                     * 00046300
*                      If the work manager previously connected to    * 00046400
*                      WLM with IWM4CON EWLM=YES, a work request is   * 00046500
*                      started implicitly when the enclave is         * 00046600
*                      created.  If IWMESTOP was not invoked before,  * 00046700
*                      the work request will be stopped implicitly    * 00046800
*                      when the enclave is deleted.                   * 00046900
*                                                                     * 00047000
*                                                                     * 00047100
*                      ÝWORKREQ_HDL=xworkreq_hdl¨¨                    * 00047200
*                          is the name (RS-type), or address in       * 00047300
*                          register (2)-(12), of an optional 8        * 00047400
*                          character output that will receive the     * 00047500
*                          handle which represents the work request.  * 00047600
*                          The application must pass this handle to   * 00047700
*                          the other work request services IWMESTOP,  * 00047800
*                          IWMEBLK, IWMEUBLK, and IWMEGCOR.           * 00047900
*                                                                     * 00048000
*                                                                     * 00048100
*                                                                     * 00048200
*                  ÝESTRT=EXPLICIT¨                                   * 00048300
*                      The work manager indicates the start and end   * 00048400
*                      point of an EWLM work request by invoking the  * 00048500
*                      services IWMESTRT and IWMESTOP. NOTE that this * 00048600
*                      option is only meaningful, if the work manager * 00048700
*                      previously connected to WLM with IWM4CON       * 00048800
*                      EWLM=YES.                                      * 00048900
*                                                                     * 00049000
*                  ÝESTRT=EXPLICIT_SINGLE¨                            * 00049100
*                      Same as option EXPLICIT above, but the         * 00049200
*                      application ensures, that only one work        * 00049300
*                      request is active (no nested calls to IWMESTRT * 00049400
*                      are allowed). If this option is specified the  * 00049500
*                      CPU consumption on all EWLM Enclave services   * 00049600
*                      (IWMEGCOR, IWMESTRT, IWMESTOP, IWMEBLK,        * 00049700
*                      IWMEUBLK) will be reduced.  If                 * 00049800
*                      ESTRT=EXPLICIT_SINGLE is specified on          * 00049900
*                      IWMECREA, the the application must also add    * 00050000
*                      the EWLMMODE=EXPLICIT_SINGLE parameter on all  * 00050100
*                      calls to IWMEGCOR, IWMESTRT, IWMESTOP, IWMEBLK * 00050200
*                      and IWMEUBLK. If this parameter is used, the   * 00050300
*                      application has some restrictions on all calls * 00050400
*                      to IWMEGCOR, IWMESTRT, IWMESTOP, IWMEBLK and   * 00050500
*                      IWMEUBLK (see the corresponding macro          * 00050600
*                      descriptions for details).                     * 00050700
*                                                                     * 00050800
*                  ÝESTRT=NEVER¨¨                                     * 00050900
*                      Indicates, that this enclave will never use    * 00051000
*                      any EWLM related enclave services (IWMEGCOR,   * 00051100
*                      IWMESTRT, IWMESTOP, IWMEBLK, IWMEUBLK) after   * 00051200
*                      the enclave has been created, even if the work * 00051300
*                      manager has registered (IWM4CON or IWMCONN)    * 00051400
*                      with EWLM=YES.                                 * 00051500
*                      Moreover IWM4ECRE will not start an EWLM work  * 00051600
*                      request on the enclave and will not do any     * 00051700
*                      EWLM related processing.                       * 00051800
*                                                                     * 00051900
*                                                                     * 00052000
*                                                                     * 00052100
*                                                                     * 00052200
*                                                                     * 00052300
*          ÝTYPE=DEPENDENT¨                                           * 00052400
*              indicates that the Enclave represents a continuation   * 00052500
*              of the business unit of work represented by the        * 00052600
*              current home address space.                            * 00052700
*                                                                     * 00052800
*          ÝTYPE=WORKDEPENDENT¨                                       * 00052900
*              Indicates that the enclave represents a continuation   * 00053000
*              of the creating unit of work's (TCB or SRB)            * 00053100
*              transaction. The resulting enclave's type depends on   * 00053200
*              the caller's execution environment:  If the caller has * 00053300
*              joined or is scheduled into an enclave of type         * 00053400
*              independent, the resulting enclave will be of type     * 00053500
*              work-dependent and is regarded as an extension of the  * 00053600
*              independent enclave's transaction. Classification and  * 00053700
*              owner address space is adopted from the independent    * 00053800
*              enclave.  If the caller has joined or is scheduled     * 00053900
*              into an enclave of type work-dependent, the resulting  * 00054000
*              enclave will be of type work-dependent, as well. It is * 00054100
*              considered a part of the underlying independent        * 00054200
*              enclave's transaction and inherits owner address space * 00054300
*              and classification from that independent enclave.  If  * 00054400
*              the caller has joined or is scheduled into a dependent * 00054500
*              enclave, the resulting enclave will be of type         * 00054600
*              dependent. The new enclave is considered part of the   * 00054700
*              creating enclave's (i.e., the enclave the caller is    * 00054800
*              running in) owner address space's transaction and      * 00054900
*              inherits its classification. The creating enclave's    * 00055000
*              owner address space will become the owner of the new   * 00055100
*              enclave.  Finally, if no enclave has been joined when  * 00055200
*              the service is called, the resulting enclave will be   * 00055300
*              as if the service had been invoked with TYPE=DEPENDENT * 00055400
*              specified.  Note that it is not allowed to invoke this * 00055500
*              service with TYPE=WORKDEPENDENT specified while        * 00055600
*              running in a foreign enclave.                          * 00055700
*                                                                     * 00055800
*          ÝTYPE=MONENV                                               * 00055900
*              indicates that the Enclave represents a continuation   * 00056000
*              of the business unit of work represented by the input  * 00056100
*              management monitoring environment.  TYPE=MONENV        * 00056200
*              enclaves cannot be created for report-only monitoring  * 00056300
*              environments.                                          * 00056400
*                                                                     * 00056500
*                                                                     * 00056600
*              The following is a set of mutually exclusive keys.     * 00056700
*              This set is required; only one key must be specified.  * 00056800
*                                                                     * 00056900
*                                                                     * 00057000
*              MONTKN=xmontkn                                         * 00057100
*                  belongs to a set of mutually exclusive keys. It is * 00057200
*                  the name (RS-type), or address in register         * 00057300
*                  (2)-(12), of a 32 bit input which contains the     * 00057400
*                  delay monitoring token which describes the current * 00057500
*                  business unit of work.  If the monitoring          * 00057600
*                  environment is related to an address space, then   * 00057700
*                  it must be the current home address space.         * 00057800
*                                                                     * 00057900
*              MONTKN64=xmontkn64                                     * 00058000
*                  belongs to a set of mutually exclusive keys. It is * 00058100
*                  the name (RS-type), or address in register         * 00058200
*                  (2)-(12), of a 64 bit input which contains the     * 00058300
*                  long delay monitoring token which describes the    * 00058400
*                  current business unit of work.  If the monitoring  * 00058500
*                  environment is related to an address space, then   * 00058600
*                  it must be the current home address space.         * 00058700
*                                                                     * 00058800
*                                                                     * 00058900
*                                                                     * 00059000
*              End of a set of mutually exclusive required keys.      * 00059100
*                                                                     * 00059200
*                                                                     * 00059300
*                                                                     * 00059400
*              ACCESS=»PRIMARY!HOMEº¨                                 * 00059500
*                  is a required keyword input which describes how to * 00059600
*                  access the monitoring environment.                 * 00059700
*                                                                     * 00059800
*                                                                     * 00059900
*                  ACCESS=PRIMARY                                     * 00060000
*                                                                     * 00060100
*                      indicates that the monitoring environment can  * 00060200
*                      be accessed in the caller's primary address    * 00060300
*                      space.  This would be appropriate if the       * 00060400
*                      monitoring environment was established (by     * 00060500
*                      IWM4MCRE) to be used by routines in a specific * 00060600
*                      system key or if it was established to be used * 00060700
*                      in a specific user key in the current primary. * 00060800
*                                                                     * 00060900
*                  ACCESS=HOME¨                                       * 00061000
*                                                                     * 00061100
*                      indicates that the monitoring environment must * 00061200
*                      be accessed in the home address space, which   * 00061300
*                      is not the caller's primary address space.     * 00061400
*                      This would be appropriate if the monitoring    * 00061500
*                      environment was established (by IWM4MCRE) for  * 00061600
*                      use by a specific user key.                    * 00061700
*                                                                     * 00061800
*                                                                     * 00061900
*                                                                     * 00062000
*                                                                     * 00062100
*                                                                     * 00062200
*                                                                     * 00062300
*                                                                     * 00062400
*                                                                     * 00062500
*                                                                     * 00062600
*                                                                     * 00062700
*      ETOKEN=xetoken                                                 * 00062800
*          is the name (RS-type), or address in register (2)-(12), of * 00062900
*          a required 8 character output which will receive the       * 00063000
*          Enclave token.                                             * 00063100
*                                                                     * 00063200
*                                                                     * 00063300
*                                                                     * 00063400
*                                                                     * 00063500
*      ÝIMPORTANCE=ximportance¨                                       * 00063600
*          is the name (RS-type), or address in register (2)-(12), of * 00063700
*          an optional halfword output that will receive the          * 00063800
*          importance value of the service class to which the unit of * 00063900
*          work is classified.                                        * 00064000
*                                                                     * 00064100
*                                                                     * 00064200
*                                                                     * 00064300
*                                                                     * 00064400
*      ÝRETCODE=xretcode¨                                             * 00064500
*          is the name (RS-type) of an optional fullword output       * 00064600
*          variable, or register (2)-(12) or (15), into which the     * 00064700
*          return code is to be copied from GPR 15.  If you specify   * 00064800
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00064900
*          the value will be left in GPR 15.                          * 00065000
*                                                                     * 00065100
*                                                                     * 00065200
*                                                                     * 00065300
*                                                                     * 00065400
*      ÝRSNCODE=xrsncode¨                                             * 00065500
*          is the name (RS-type) of an optional fullword output       * 00065600
*          variable into which the reason code is to be copied from   * 00065700
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00065800
*          R0 (within or without parentheses), the value will be left * 00065900
*          in GPR 0.                                                  * 00066000
*                                                                     * 00066100
*                                                                     * 00066200
*                                                                     * 00066300
*                                                                     * 00066400
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00066500
*          is an optional byte input decimal value in the "0-2" range * 00066600
*          that specifies the macro version.  PLISTVER is the only    * 00066700
*          key allowed on the list form of MF and determines which    * 00066800
*          parameter list is generated.  The macro keys associated    * 00066900
*          with each supported version of the macro are listed in     * 00067000
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 00067100
*          instead of a number, and the parameter list will be of the * 00067200
*          largest size currently supported. This size may grow from  * 00067300
*          release to release (thus possibly affecting the amount of  * 00067400
*          storage needed by your program).  If your program can      * 00067500
*          tolerate this, IBM recommends that you always specify MAX  * 00067600
*          when creating the list form parameter list as that will    * 00067700
*          ensure that the list form parameter list is always long    * 00067800
*          enough to hold whatever parameters might be specified on   * 00067900
*          the execute form.                                          * 00068000
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00068100
*          default is the lowest version which allows all of the      * 00068200
*          parameters specified on the invocation to be processed.    * 00068300
*                                                                     * 00068400
*                                                                     * 00068500
*                                                                     * 00068600
*                                                                     * 00068700
*      ÝMF=»S!L!Eº¨                                                   * 00068800
*          is an optional keyword input which specifies the macro     * 00068900
*          form.                                                      * 00069000
*          DEFAULT: S                                                 * 00069100
*                                                                     * 00069200
*                                                                     * 00069300
*          ÝMF=S¨                                                     * 00069400
*              specifies the standard form of the macro.  The "S"     * 00069500
*              form generates code to put the parameters into an      * 00069600
*              in-line parameter list and invoke the desired service. * 00069700
*              Full checking for required macro keys is done along    * 00069800
*              with supplying defaults for omitted optional           * 00069900
*              parameters.                                            * 00070000
*                                                                     * 00070100
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00070200
*              specifies the list form of the macro.  The "L" form    * 00070300
*              defines an area to be used for the parameter list.     * 00070400
*              Only the PLISTVER key may be specified on the          * 00070500
*              invocation.  All other macro parameters are flagged as * 00070600
*              errors.  If PLISTVER is not specified, the original    * 00070700
*              parameter list definition is used.                     * 00070800
*                                                                     * 00070900
*            ,xmfctrl                                                 * 00071000
*              is a required input.  It is the name of a storage area * 00071100
*              for the parameter list.                                * 00071200
*                                                                     * 00071300
*            »,xmfattr!0Dº                                            * 00071400
*              is an optional 60 character input string that varies   * 00071500
*              from 1 to 60 characters. Use it to force boundary      * 00071600
*              alignment of the parameter list. Use only 0F or 0D.    * 00071700
*              DEFAULT: 0D which forces the parameter list to a       * 00071800
*              doubleword boundary.                                   * 00071900
*                                                                     * 00072000
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00072100
*              specifies the execute form of the macro.  The "E" form * 00072200
*              generates code to put the parameters into the          * 00072300
*              parameter list specified by xmfctrl and provides full  * 00072400
*              syntax checking with default setting.                  * 00072500
*                                                                     * 00072600
*            ,xmfctrl                                                 * 00072700
*              is a required input.  It is the name (RS-type), or     * 00072800
*              address in register (1)-(12), of a storage area for    * 00072900
*              the parameter list.                                    * 00073000
*                                                                     * 00073100
*            »,COMPLETEº                                              * 00073200
*              is an optional keyword input which specifies the       * 00073300
*              degree of macro parameter syntax checking.             * 00073400
*              DEFAULT: COMPLETE                                      * 00073500
*                                                                     * 00073600
*                                                                     * 00073700
*              COMPLETE                                               * 00073800
*                  Checking for required macro keys is done and       * 00073900
*                  defaults are supplied for omitted optional         * 00074000
*                  parameters.                                        * 00074100
*                                                                     * 00074200
*                                                                     * 00074300
*                                                                     * 00074400
*                                                                     * 00074500
*                                                                     * 00074600
*                                                                     * 00074700
*                                                                     * 00074800
*01* ABEND CODES:  None.                                              * 00074900
*                                                                     * 00075000
*01* RETURN CODES:                                                    * 00075100
*                                                                     * 00075200
*                                                                     * 00075300
*            0    Name: IwmRetCodeOk                                  * 00075400
*                                                                     * 00075500
*                 Meaning: Successful completion.                     * 00075600
*                                                                     * 00075700
*                 Action: None required.                              * 00075800
*                                                                     * 00075900
*            4    Name: IwmRetCodeWarning                             * 00076000
*                                                                     * 00076100
*                 Meaning: Successful completion, unusual conditions  * 00076200
*                 noted.                                              * 00076300
*                                                                     * 00076400
*                                                                     * 00076500
*                 HEX REASON  MEANING/ACTION                          * 00076600
*                 CODE                                                * 00076700
*                                                                     * 00076800
*                 xxxx044E    Name: IwmRsnCodeNewServcls              * 00076900
*                                                                     * 00077000
*                             Meaning: Input service class token is   * 00077100
*                             not valid.  A new one has been assigned * 00077200
*                             and returned in SERVCLS (if specified). * 00077300
*                                                                     * 00077400
*                             Action: None required.                  * 00077500
*                                                                     * 00077600
*                                                                     * 00077700
*                                                                     * 00077800
*            8    Name: IwmRetCodeInvocError                          * 00077900
*                                                                     * 00078000
*                 Meaning: Invalid invocation environment or          * 00078100
*                 parameters.                                         * 00078200
*                                                                     * 00078300
*                                                                     * 00078400
*                 HEX REASON  MEANING/ACTION                          * 00078500
*                 CODE                                                * 00078600
*                                                                     * 00078700
*                 xxxx0803    Name: IwmRsnCodeDisabled                * 00078800
*                                                                     * 00078900
*                             Meaning: Caller is disabled.            * 00079000
*                                                                     * 00079100
*                             Action: Avoid requesting this function  * 00079200
*                             while disabled.                         * 00079300
*                                                                     * 00079400
*                 xxxx0804    Name: IwmRsnCodeLocked                  * 00079500
*                                                                     * 00079600
*                             Meaning: Caller is locked.              * 00079700
*                                                                     * 00079800
*                             Action: Avoid requesting this function  * 00079900
*                             while locked.                           * 00080000
*                                                                     * 00080100
*                 xxxx080B    Name: IwmRsnCodeBadPl                   * 00080200
*                                                                     * 00080300
*                             Meaning:  Error accessing parameter     * 00080400
*                             list.                                   * 00080500
*                                                                     * 00080600
*                             Action: Check for possible storage      * 00080700
*                             overlay.                                * 00080800
*                                                                     * 00080900
*                 xxxx080C    Name: IwmRsnCodeMonEnvLacksData         * 00081000
*                                                                     * 00081100
*                             Meaning:  Input monitoring environment  * 00081200
*                             does not contain the necessary          * 00081300
*                             information.                            * 00081400
*                                                                     * 00081500
*                             Action: Provide missing information.    * 00081600
*                                                                     * 00081700
*                 xxxx0820    Name: IwmRsnCodeBadMonEnv               * 00081800
*                                                                     * 00081900
*                             Meaning:  Monitoring environment does   * 00082000
*                             not pass short form verification.       * 00082100
*                                                                     * 00082200
*                             Action: Check for possible storage      * 00082300
*                             overlay.                                * 00082400
*                                                                     * 00082500
*                 xxxx0821    Name: IwmRsnCodeBadConn                 * 00082600
*                                                                     * 00082700
*                             Meaning:  Connect token from the input  * 00082800
*                             classify parameter list does not pass   * 00082900
*                             validity checking.                      * 00083000
*                                                                     * 00083100
*                             Action: Check for possible storage      * 00083200
*                             overlay.                                * 00083300
*                                                                     * 00083400
*                 xxxx0824    Name: IwmRsnCodeAmode24                 * 00083500
*                                                                     * 00083600
*                             Meaning: Caller invoked service but was * 00083700
*                             in 24 bit addressing mode.              * 00083800
*                                                                     * 00083900
*                             Action: Request this function only when * 00084000
*                             you are in 31 bit addressing mode.      * 00084100
*                                                                     * 00084200
*                 xxxx0828    Name: IwmRsnCodeBadVersion              * 00084300
*                                                                     * 00084400
*                             Meaning: Version number in parameter    * 00084500
*                             list is not valid.                      * 00084600
*                                                                     * 00084700
*                             Action: Check for possible storage      * 00084800
*                             overlay of the parameter list.          * 00084900
*                                                                     * 00085000
*                 xxxx0836    Name: IwmRsnCodeMaxEnclave              * 00085100
*                                                                     * 00085200
*                             Meaning:  Enclave could not be created  * 00085300
*                             because the Enclave limit has been      * 00085400
*                             reached.                                * 00085500
*                                                                     * 00085600
*                             Action: Check for possible problems     * 00085700
*                             wherein Enclaves are not being deleted  * 00085800
*                             as expected or excessive numbers of     * 00085900
*                             Enclaves are being created in a loop.   * 00086000
*                                                                     * 00086100
*                 xxxx0837    Name: IwmRsnCodeUserKeyConntkn          * 00086200
*                                                                     * 00086300
*                             Meaning:  Connect token from the input  * 00086400
*                             classify parameter list is associated   * 00086500
*                             with a user key.                        * 00086600
*                                                                     * 00086700
*                             Action: Invoke the function with a      * 00086800
*                             token associated with a system key.     * 00086900
*                                                                     * 00087000
*                 xxxx0838    Name: IwmRsnCodeClsfyAreaTooBig         * 00087100
*                                                                     * 00087200
*                             Meaning:  Input area associated with    * 00087300
*                             classification information is larger    * 00087400
*                             than supported.                         * 00087500
*                                                                     * 00087600
*                             Action: Invoke the function with an     * 00087700
*                             area of the proper size.  Check for     * 00087800
*                             possible storage overlay.               * 00087900
*                                                                     * 00088000
*                 xxxx0839    Name: IwmRsnCodeClsfyPlTooSmall         * 00088100
*                                                                     * 00088200
*                             Meaning:  Input Classify parameter list * 00088300
*                             is too small.                           * 00088400
*                                                                     * 00088500
*                             Action: Invoke the function with an     * 00088600
*                             area of the proper size.  Check for     * 00088700
*                             possible storage overlay.               * 00088800
*                                                                     * 00088900
*                 xxxx083B    Name: IwmRsnCodeHomeNotOwnConn          * 00089000
*                                                                     * 00089100
*                             Meaning:  Home address space does not   * 00089200
*                             own the connect token from the input    * 00089300
*                             classify parameter list.                * 00089400
*                                                                     * 00089500
*                             Action: Invoke the function with the    * 00089600
*                             correct home address space.             * 00089700
*                                                                     * 00089800
*                 xxxx0840    Name: IwmRsnCodeServiceNotEnabled       * 00089900
*                                                                     * 00090000
*                             Meaning:  Caller's space connection is  * 00090100
*                             not enabled for this service.           * 00090200
*                                                                     * 00090300
*                             Action: Avoid requesting this function  * 00090400
*                             under the input connection.  IWM4CON    * 00090500
*                             options must be specified previously to * 00090600
*                             enable this service.                    * 00090700
*                                                                     * 00090800
*                 xxxx085D    Name: IwmRsnCodeMonenvNotHome           * 00090900
*                                                                     * 00091000
*                             Meaning:  The input monitoring          * 00091100
*                             environment is related to an address    * 00091200
*                             space other than home.                  * 00091300
*                                                                     * 00091400
*                             Action: None required.                  * 00091500
*                                                                     * 00091600
*                 xxxx0872    Name: IwmRsnCodeForeignEnclave          * 00091700
*                                                                     * 00091800
*                             Meaning:  It is not allowed to create   * 00091900
*                             an enclave of type work-dependent from  * 00092000
*                             out of a foreign enclave.               * 00092100
*                                                                     * 00092200
*                             Action: Make sure not to have joined a  * 00092300
*                             forein enclave prior to calling         * 00092400
*                             IWM4ECRE with TYPE=WORKDEPENDENT.       * 00092500
*                                                                     * 00092600
*                 xxxx0894    Name: IwmRsnCodeInvalidEWLMCorr         * 00092700
*                                                                     * 00092800
*                             Meaning: Passed classification          * 00092900
*                             information contains an EWLM correlator * 00093000
*                             (EWLM_CORR) that does not pass validity * 00093100
*                             checking.  The architected ARM          * 00093200
*                             correlator length field in the first    * 00093300
*                             two Bytes of the EWLM_CORR is either    * 00093400
*                             less than 4 ('0004'x) or greater than   * 00093500
*                             512 ('0200'x).                          * 00093600
*                                                                     * 00093700
*                             Action: Check the specification of the  * 00093800
*                             EWLM correlator in the classification   * 00093900
*                             information.                            * 00094000
*                                                                     * 00094100
*                 xxxx0895    Name: IwmRsnCodeEWLMServNotEnabled      * 00094200
*                                                                     * 00094300
*                             Meaning: Service is not enabled because * 00094400
*                             caller invoked the IWM4CON service with * 00094500
*                             EWLM=NO.                                * 00094600
*                                                                     * 00094700
*                             Action: Specify the parameter           * 00094800
*                             WORKREQ_HDL only when connected with    * 00094900
*                             EWLM=YES.                               * 00095000
*                                                                     * 00095100
*                                                                     * 00095200
*                                                                     * 00095300
*            C    Name: IwmRetCodeEnvError                            * 00095400
*                                                                     * 00095500
*                 Meaning: Environmental error.                       * 00095600
*                                                                     * 00095700
*                                                                     * 00095800
*                 HEX REASON  MEANING/ACTION                          * 00095900
*                 CODE                                                * 00096000
*                                                                     * 00096100
*                 xxxx0C01    Name: IwmRsnCodeNoStg                   * 00096200
*                                                                     * 00096300
*                             Meaning:  Storage is not available for  * 00096400
*                             the request.                            * 00096500
*                                                                     * 00096600
*                             Action: There is a storage shortage.    * 00096700
*                             The function may work successfully at a * 00096800
*                             later time.                             * 00096900
*                                                                     * 00097000
*                 xxxx0C0C    Name: IwmRsnCodeClassifyFail            * 00097100
*                                                                     * 00097200
*                             Meaning:  Received a non-zero return    * 00097300
*                             code from the classification service,   * 00097400
*                             IWM4CLSY/IWMCLSFY.                      * 00097500
*                                                                     * 00097600
*                             Action: No action required.  Reinvoking * 00097700
*                             the function later may succeed.         * 00097800
*                                                                     * 00097900
*                 xxxx0C0D    Name: IwmRsnCodeBadClsfy                * 00098000
*                                                                     * 00098100
*                             Meaning:  Classification apparently can * 00098200
*                             not access the current policy,          * 00098300
*                             possibly due to a policy switch in      * 00098400
*                             progress.                               * 00098500
*                                                                     * 00098600
*                             Action: Invoke the function when the    * 00098700
*                             conditions are alleviated.              * 00098800
*                                                                     * 00098900
*                 xxxx0C20    Name: IwmRsnCodeDepClassifyFail         * 00099000
*                                                                     * 00099100
*                             Meaning:  Unable to obtain              * 00099200
*                             classification attributes for a         * 00099300
*                             dependent enclave.                      * 00099400
*                                                                     * 00099500
*                             Action: None required.                  * 00099600
*                                                                     * 00099700
*                 xxxx0C21    Name: IwmRsnCodeNoMonEnvErr             * 00099800
*                                                                     * 00099900
*                             Meaning:  Input monitoring token        * 00100000
*                             indicates no monitoring environment was * 00100100
*                             established.                            * 00100200
*                                                                     * 00100300
*                             Action: None required.                  * 00100400
*                                                                     * 00100500
*                                                                     * 00100600
*                                                                     * 00100700
*            10   Name: IwmRetCodeCompError                           * 00100800
*                                                                     * 00100900
*                 Meaning: Component error.                           * 00101000
*                                                                     * 00101100
*                 Action: No action required.  The function may be    * 00101200
*                 successful if invoked again.                        * 00101300
*                                                                     * 00101400
*                                                                     * 00101500
*                                                                     * 00101600
*01* REASON CODES:                                                    * 00101700
*                                                                     * 00101800
*       A unique reason code will be returned whenever the return     * 00101900
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00102000
*       under their corresponding return code.  Reason code and       * 00102100
*       return code constants are defined within IWMYCON.  Note that  * 00102200
*       the high order halfword of register 0, and the reason code    * 00102300
*       variable when specified, may be non-zero and represents       * 00102400
*       diagnostic data which is NOT part of the external interface.  * 00102500
*       The high order halfword should thus be excluded from          * 00102600
*       comparison with the reason code values described above.  The  * 00102700
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00102800
*       used for this purpose.                                        * 00102900
*                                                                     * 00103000
*01* MODULE TYPE:  ASSEM MACRO                                        * 00103100
*                                                                     * 00103200
*02*   PROCESSOR:  ASSEM                                              * 00103300
*                                                                     * 00103400
*01* COMPONENT:  SCWLM                                                * 00103500
*                                                                     * 00103600
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00103700
*                                                                     * 00103800
*01* EXAMPLES:                                                        * 00103900
*                                                                     * 00104000
*01* MACRO USAGE NOTES:                                               * 00104100
*                                                                     * 00104200
*                                                                     * 00104300
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00104400
*        global macro variable.  Any value other than 'NO' will       * 00104500
*        result in the macro expansion being printed.  The default is * 00104600
*        'YES'.  The following examples illustrate how the ZPRINT     * 00104700
*        variable should be set.                                      * 00104800
*                                                                     * 00104900
*                    GBLC &ZPRINT                                     * 00105000
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00105100
*                                                                     * 00105200
*                                                                     * 00105300
*    2.  The IWM4ECRE macro supports multiple versions. The macro key * 00105400
*        list  below  contains the version level in which the key was * 00105500
*        first  introduced.  Positionals  are  identified by the word * 00105600
*        'Positional'  followed by the numeric value of its position. * 00105700
*        Nested  positionals  are  preceded  by their outer key.  The * 00105800
*        lowest value represents the original version and the highest * 00105900
*        value  represents  the  most  recent version of the IWM4ECRE * 00106000
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00106100
*        least  as high as the highest version number of all the keys * 00106200
*        being used.                                                  * 00106300
*                                                                     * 00106400
*        VERSION   KEY                                                * 00106500
*                                                                     * 00106600
*              0      ACCESS                                          * 00106700
*                     ARRIVALTIME                                     * 00106800
*                     CLSFY                                           * 00106900
*                     ESTRT                                           * 00107000
*                     ETOKEN                                          * 00107100
*                     EXSTARTDEFER                                    * 00107200
*                     FUNCTION_NAME                                   * 00107300
*                     MONTKN                                          * 00107400
*                     TYPE                                            * 00107500
*                     WORKREQ_HDL                                     * 00107600
*              1      IMPORTANCE                                      * 00107700
*              2      INSERVCLS                                       * 00107800
*                     MONTKN64                                        * 00107900
*                     SERVCLS                                         * 00108000
*                                                                     * 00108100
*                                                                     * 00108200
*                                                                     * 00108300
*01* CHANGE ACTIVITY:                                                 * 00108400
*                                                                     * 00108500
*   Flag LineItem  FMID    Date   ID    Comment                       * 00108600
*                                                                     * 00108700
*    $L0=WLMP64W  HBB7709 030315 3241NN:  WLM 64-bit support copied   * 00108800
*                                         from IWMECREA with flag L5  * 00108900
*    $P1=ME01430  HBB7709 040923 3241SW:  Removed xxxxRRRR reason     * 00109000
*                                         code.                       * 00109100
*    $P2=ME01176  HBB7720 041011 3241DW:  Doc changes only.  Service  * 00109200
*                                         names changed to reflect    * 00109300
*                                         the 64bit name.             * 00109400
*    $P3=WLMPEFP  HBB7709 050614 3241GB:  EWLM Enclave Fastpath       * 00109500
*                                         Processing                  * 00109600
*                                         (ESTRT=EXPLICIT_SINGLE/NEVE * 00109700
*                                         R).                         * 00109800
*    $P4=BLDCHKE  HBB7730 050919 3241BH:  No code change. ToolReq     * 00109900
*                                         5983 -                      * 00110000
*                                         B390.HBB7730.DRIVER5A.OC    * 00110100
*                                         OCHKE fixes.                * 00110200
*    $P5=OA26104  HBB7760 080808 3241TB:  Work-dependent enclaves     * 00110300
*    $P6=OA31910  HBB7780 100222 3241KHH:  Importance as optional     * 00110400
*                                         output paramater in support * 00110500
*                                         of DB2 SAO. A new version   * 00110600
*                                         level for this macro is     * 00110700
*                                         defined.                    * 00110800
*    $P7=OA32820  HBB7780 100512 3241DW:  The PLX version of the      * 00110900
*                                         macro generates wrong code  * 00111000
*                                         in AMODE 64, which can      * 00111100
*                                         result in a ABEND 0C4       * 00111200
*    $L1=CFY64    HBB7790 110426 3241DW:  64bit Classify Service The  * 00111300
*                                         CLSFY allows now a IWM4CLSY * 00111400
*                                         parameter list              * 00111500
*    $L2=FPCLS    HBB7790 111007 3241AK:  Add optional parameters     * 00111600
*                                         SERVCLS and INSERVCLS for   * 00111700
*                                         Fastpath Classification.    * 00111800
*                                         New version level is        * 00111900
*                                         defined.                    * 00112000
*    $L3=LPBABV   HBB7790 111021 3241AH:  PB above 2G. New version    * 00112100
*                                         level is defined.           * 00112200
*    $L4=ME24564  HBB7790 120810 3241AK:  Document reason code 80C    * 00112300
*    $P8=OA45023  HBB7790 140422 3241AK:  MONTKN has the wrong        * 00112400
*                                         parameterlist version.      * 00112500
****** END OF SPECIFICATIONS *****************************************/ 00112600
*/********************************************************************* 00112700
         MACRO                                                          00112800
&XLABEL  IWM4ECRE &TYPE=,&CLSFY=,&SERVCLS=,&INSERVCLS=,&ARRIVALTIME=,  *00112900
               &FUNCTION_NAME=,&EXSTARTDEFER=,&ESTRT=,&WORKREQ_HDL=,   *00113000
               &MONTKN=,&MONTKN64=,&ACCESS=,&ETOKEN=,&IMPORTANCE=,     *00113100
               &RETCODE=,&RSNCODE=,&PLISTVER=,&MF=                      00113200
.*                                                                      00113300
*                     MACDATE -05/20/14-<2>                             00113400
.*                                                                      00113500
.*******************************************************************    00113600
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00113700
.*******************************************************************    00113800
                     GBLC  &ZPRINT     YES=PRINT NO=NO PRINT            00113900
                     GBLC  &ZTEST      YES=TEST NO=NO TEST              00114000
                     GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX      00114100
.*                                                                      00114200
                     GBLC  &ZIWM4ECRE  YES=MACRO USED AT LEAST ONCE     00114300
.*******************************************************************    00114400
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00114500
.*******************************************************************    00114600
                     LCLC  &ZMS        ERROR MESSAGE WORK AREA          00114700
                     LCLC  &ZCNDX      SYSNDX CHARACTERS                00114800
                     LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED       00114900
                     LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR      00115000
                     LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE      00115100
                     LCLA  &ZAWRK      USED AS A WORK AREA              00115200
                     LCLA  &ZASIZ      USED FOR SIZE OF VALUE           00115300
                     LCLA  &ZN         NUMERIC WORK VARIABLE            00115400
                     LCLC  &ZC         CHARACTER WORK VARIABLE          00115500
                     LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE      00115600
                     LCLA  &ZTLA       VALUE TOO LONG VARIABLE          00115700
                     LCLC  &ZMAC_G     "G" or null                      00115800
&ZMAC_G              SETC  ''                                           00115900
                     LCLC  &ZMAC_LR                                     00116000
&ZMAC_LR             SETC  'LR'                                         00116100
                     LCLC  &ZMAC_L                                      00116200
&ZMAC_L              SETC  'L'                                          00116300
                     LCLC  &ZMAC_ST                                     00116400
&ZMAC_ST             SETC  'ST'                                         00116500
                     LCLC  &ZMAC_LLGT                                   00116600
&ZMAC_LLGT           SETC  'L'                                          00116700
                     LCLC  &ZMAC_LGR                                    00116800
&ZMAC_LGR            SETC  'LR'                                         00116900
                     LCLC  &ZMAC_LG                                     00117000
&ZMAC_LG             SETC  'L'                                          00117100
                     LCLC  &ZMAC_STG                                    00117200
&ZMAC_STG            SETC  'ST'                                         00117300
                     LCLA  &ZMACRET    MACRO RETURN CODE                00117400
&ZMACRET             SETA  0           ASSUME NO ERRORS                 00117500
.*                                                                      00117600
                     LCLC  &ZCSYSLIST(255)      NONXKEY, POS ARRAY      00117700
                     LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()       00117800
                     LCLA  &ZPLLEN     PARAMETER LIST LENGTH            00117900
                     LCLC  &ZENDBASEPL          End of base PL          00118000
                     LCLA  &ZPLWORKA   PARAMETER LIST LENGTH            00118100
.*******************************************************************    00118200
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00118300
.*******************************************************************    00118400
                     LCLA  &ZI         INDEX FOR ARRAY                  00118500
                     LCLA  &ZJ         INDEX FOR PARMS                  00118600
                     LCLA  &ZK         INDEX FOR PARSE                  00118700
                     LCLA  &ZLO        LOW RANGE VALUE                  00118800
                     LCLA  &ZHI        HIGH RANGE VALUE                 00118900
                     LCLC  &ZW         WORK AREA FOR PARM               00119000
.********************************************************************   00119100
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00119200
.********************************************************************   00119300
                     GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL          00119400
                     GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE   00119500
                     GBLA  &SYSALVL    SYSSTATE ARCHLVL                 00119600
                     GBLC  &SYSAM64    SYSSTATE AMODE64                 00119700
.*                                                                      00119800
                     AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED   00119900
                     AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED    00120000
                     SPLEVEL  TEST                                      00120100
.ZSYS2               ANOP  ,                                            00120200
                     AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1        00120300
                     AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1        00120400
                     SYSSTATE TEST                                      00120500
                     AGO   .ZSYS4                                       00120600
.ZSYS3               ANOP  ,                                            00120700
&SYSASCE             SETC  'P'         ASSUME SYSSTATE PRIMARY          00120800
.ZSYS4               ANOP  ,                                            00120900
                     AIF   ('&SYSAM64' NE 'YES').ZSYSN64                00121000
&ZMAC_LLGT           SETC 'LLGT'                                        00121100
&ZMAC_LGR            SETC 'LGR'                                         00121200
&ZMAC_LG             SETC 'LG'                                          00121300
&ZMAC_STG            SETC 'STG'                                         00121400
.ZSYSN64             ANOP  ,                                            00121500
&ZMAC_G              SETC 'G'                                           00121600
&ZMAC_LR             SETC 'LGR'                                         00121700
&ZMAC_L              SETC 'LG'                                          00121800
&ZMAC_ST             SETC 'STG'                                         00121900
.*******************************************************************    00122000
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00122100
.*******************************************************************    00122200
                     LCLC  &XTYPE      ++ VALUE                         00122300
                     LCLC  &XCLSFY     ++ NAME                          00122400
                     LCLC  &XSERVCLS   ++ NAME                          00122500
                     LCLC  &XINSERVCLS          ++ NAME                 00122600
                     LCLC  &XARRIVALTIME        ++ NAME                 00122700
                     LCLC  &XFUNCTION_NAME      ++ NAME                 00122800
                     LCLC  &XEXSTARTDEFER       ++ VALUE                00122900
                     LCLC  &XESTRT     ++ VALUE                         00123000
                     LCLC  &XWORKREQ_HDL        ++ NAME                 00123100
                     LCLC  &XUSEDMONTKNKEY      ++ NAME                 00123200
                     LCLC  &XMONTKN    ++ NAME                          00123300
                     LCLC  &XMONTKN64  ++ NAME                          00123400
                     LCLC  &XACCESS    ++ VALUE                         00123500
                     LCLC  &XETOKEN    ++ NAME                          00123600
                     LCLC  &XIMPORTANCE         ++ NAME                 00123700
                     LCLC  &XRETCODE   ++ NAME                          00123800
                     LCLC  &XRSNCODE   ++ NAME                          00123900
                     LCLA  &XPLISTVER  ++ VALUE                         00124000
                     LCLC  &XMF        ++ VALUE                         00124100
                     LCLC  &XMFCTRL    ++ NAME                          00124200
                     LCLC  &XMFATTR    ++ VALUE                         00124300
                     LCLC  &XMFSCK     ++ VALUE                         00124400
.*******************************************************************    00124500
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00124600
.*******************************************************************    00124700
                     LCLC  &ZXTYPE     ++ INPUT VALUE                   00124800
                     LCLC  &ZXCLSFY    ++ INPUT NAME                    00124900
                     LCLC  &ZXSERVCLS  ++ OUTPUT NAME                   00125000
                     LCLC  &ZXINSERVCLS         ++ INPUT NAME           00125100
                     LCLC  &ZXARRIVALTIME       ++ INPUT NAME           00125200
                     LCLC  &ZXFUNCTION_NAME     ++ INPUT NAME           00125300
                     LCLC  &ZXEXSTARTDEFER      ++ INPUT VALUE          00125400
                     LCLC  &ZXESTRT    ++ INPUT VALUE                   00125500
                     LCLC  &ZXWORKREQ_HDL       ++ OUTPUT NAME          00125600
                     LCLC  &ZXUSEDMONTKNKEY     ++ INPUT NAME           00125700
                     LCLC  &ZXMONTKN   ++ INPUT NAME                    00125800
                     LCLC  &ZXMONTKN64          ++ INPUT NAME           00125900
                     LCLC  &ZXACCESS   ++ INPUT VALUE                   00126000
                     LCLC  &ZXETOKEN   ++ OUTPUT NAME                   00126100
                     LCLC  &ZXIMPORTANCE        ++ OUTPUT NAME          00126200
                     LCLC  &ZXRETCODE  ++ OUTPUT NAME                   00126300
                     LCLC  &ZXRSNCODE  ++ OUTPUT NAME                   00126400
                     LCLC  &ZXPLISTVER          ++ INPUT VALUE          00126500
                     LCLC  &ZXMF       ++ INPUT VALUE                   00126600
                     LCLC  &ZXMFCTRL   ++ INPUT NAME                    00126700
                     LCLC  &ZXMFATTR   ++ INPUT VALUE                   00126800
                     LCLC  &ZXMFSCK    ++ INPUT VALUE                   00126900
.********************************************************************   00127000
.***AC.PLV01  PROCESS PLISTVER                                      *   00127100
.********************************************************************   00127200
&XPLISTVER      SETA  0                                                 00127300
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00127400
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00127500
&XPLISTVER      SETA  2                                                 00127600
.ZPLV0          ANOP  ,                                                 00127700
.*                                                                      00127800
                AIF   ('&SERVCLS' EQ '').ZPLV1E                         00127900
                AIF   (&XPLISTVER GE 2).ZPLV1E                          00128000
&XPLISTVER      SETA  2                                                 00128100
.ZPLV1E         ANOP  ,                                                 00128200
.*                                                                      00128300
                AIF   ('&INSERVCLS' EQ '').ZPLV2E                       00128400
                AIF   (&XPLISTVER GE 2).ZPLV2E                          00128500
&XPLISTVER      SETA  2                                                 00128600
.ZPLV2E         ANOP  ,                                                 00128700
.*                                                                      00128800
                AIF   ('&MONTKN64' EQ '').ZPLV3E                        00128900
                AIF   (&XPLISTVER GE 2).ZPLV3E                          00129000
&XPLISTVER      SETA  2                                                 00129100
.ZPLV3E         ANOP  ,                                                 00129200
.*                                                                      00129300
                AIF   ('&IMPORTANCE' EQ '').ZPLV4E                      00129400
                AIF   (&XPLISTVER GE 1).ZPLV4E                          00129500
&XPLISTVER      SETA  1                                                 00129600
.ZPLV4E         ANOP  ,                                                 00129700
.*                                                                      00129800
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00129900
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00130000
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00130100
.*-------------------------------------------------------------------   00130200
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00130300
&ZMS            SETC  '"PLISTVER='                                      00130400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00130500
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00130600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00130700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00130800
                AGO   .ZPVCK2                                           00130900
.ZPVCK3         ANOP  ,                                                 00131000
.*-------------------------------------------------------------------   00131100
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00131200
&ZMS            SETC  '"PLISTVER='                                      00131300
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00131400
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00131500
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00131600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00131700
                AGO   .ZPVCKE                                           00131800
.ZPVCK2         ANOP  ,                                                 00131900
.*-------------------------------------------------------------------   00132000
&ZCVAL          SETC  '&PLISTVER(1)'                                    00132100
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00132200
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00132300
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00132400
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00132500
                AIF   (&ZN LE 2).ZPVCK4A   NOT HIGH                     00132600
.ZPVCK6         ANOP  ,                                                 00132700
&ZMS            SETC  '"PLISTVER='                                      00132800
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00132900
&ZMS            SETC  '&ZMS THE RANGE IS "0-2"'                         00133000
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00133100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00133200
&XPLISTVER      SETA  2                                                 00133300
                AGO   .ZPVCKE                                           00133400
.*-------------------------------------------------------------------   00133500
.ZPVCK4A        ANOP  ,                                                 00133600
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00133700
&ZMS            SETC  'PLISTVER='                                       00133800
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00133900
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00134000
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00134100
                MNOTE 8,' &ZMS IS REQUIRED.'                            00134200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00134300
                AGO   .ZPVCK5                                           00134400
.ZPVCK4         ANOP  ,                                                 00134500
&XPLISTVER      SETA  &PLISTVER(1)                                      00134600
.ZPVCK5         ANOP  ,                                                 00134700
.ZPVCKE         ANOP  ,                                                 00134800
.********************************************************************   00134900
.***AG.MF01 PROCESS MF MACRO FORMS                                      00135000
.********************************************************************   00135100
                     ACTR  10000                                        00135200
.*------------------------------------------------------------------    00135300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00135400
&XMF                 SETC  ''          INITIALIZE XVARIABLE             00135500
.*-------------------------------------------------------------------   00135600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00135700
.ZG64                ANOP  ,                                            00135800
&ZTLC                SETC 'S'                                           00135900
                     AIF   ('&MF(1)' NE '&ZTLC').ZG65                   00136000
&XMF                 SETC  'S'         SET KEYWORD                      00136100
                     AIF   (N'&MF LE 1).ZG64A   CK NUM                  00136200
&ZMS                 SETC  '"MF='                                       00136300
&ZMS                 SETC  '&ZMS.&MF"'                                  00136400
&ZMS                 SETC  '&ZMS "MF"'                                  00136500
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00136600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00136700
.ZG64A               ANOP  ,                                            00136800
.*-------------------------------------------------------------------   00136900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00137000
.ZG65                ANOP  ,                                            00137100
&ZTLC                SETC 'L'                                           00137200
                     AIF   ('&MF(1)' NE '&ZTLC').ZG72                   00137300
&XMF                 SETC  'L'         SET KEYWORD                      00137400
                     AIF   (N'&MF LE 3).ZG65A   CK NUM                  00137500
&ZMS                 SETC  '"MF='                                       00137600
&ZMS                 SETC  '&ZMS.&MF"'                                  00137700
&ZMS                 SETC  '&ZMS "MF"'                                  00137800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'         00137900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00138000
.ZG65A               ANOP  ,                                            00138100
.*-------------------------------------------------------------------   00138200
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00138300
                     AIF   (N'&SYSLIST NE 0).ZG65B  POSITIONALS?        00138400
                     AIF   ('&TYPE' NE '').ZG65B  KEYS?                 00138500
                     AIF   ('&CLSFY' NE '').ZG65B  KEYS?                00138600
                     AIF   ('&SERVCLS' NE '').ZG65B  KEYS?              00138700
                     AIF   ('&INSERVCLS' NE '').ZG65B  KEYS?            00138800
                     AIF   ('&ARRIVALTIME' NE '').ZG65B  KEYS?          00138900
                     AIF   ('&FUNCTION_NAME' NE '').ZG65B  KEYS?        00139000
                     AIF   ('&EXSTARTDEFER' NE '').ZG65B  KEYS?         00139100
                     AIF   ('&ESTRT' NE '').ZG65B  KEYS?                00139200
                     AIF   ('&WORKREQ_HDL' NE '').ZG65B  KEYS?          00139300
                     AIF   ('&MONTKN' NE '').ZG65B  KEYS?               00139400
                     AIF   ('&MONTKN64' NE '').ZG65B  KEYS?             00139500
                     AIF   ('&ACCESS' NE '').ZG65B  KEYS?               00139600
                     AIF   ('&ETOKEN' NE '').ZG65B  KEYS?               00139700
                     AIF   ('&IMPORTANCE' NE '').ZG65B  KEYS?           00139800
                     AIF   ('&RETCODE' NE '').ZG65B  KEYS?              00139900
                     AIF   ('&RSNCODE' NE '').ZG65B  KEYS?              00140000
                     AGO    .ZG65C     INVOCATION OKAY                  00140100
.ZG65B               ANOP  ,                                            00140200
&ZMS                 SETC  'THE "L" FORM OF "MF"'                       00140300
&ZMS                 SETC  '&ZMS CAN ONLY HAVE'                         00140400
&ZMS                 SETC  '&ZMS THE "PLISTVER" KEY'                    00140500
                     MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'       00140600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00140700
.ZG65C               ANOP  ,                                            00140800
.*-------------------------------------------------------------------   00140900
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00141000
&ZXMFCTRL            SETC  'INPUT'     SET IN/OUTPUT                    00141100
&XMFCTRL             SETC  '&MF(2,1)'  SET XVARIABLE                    00141200
                     AIF   (N'&MF(2) GT 1).ZG67B  MULTI                 00141300
&XMFCTRL             SETC  '&MF(2)'    SET XVARIABLE                    00141400
.ZG67B               AIF   (K'&MF(2) GT 0).ZG67C                        00141500
&ZXMFCTRL            SETC  ''          RESET IN/OUTPUT                  00141600
&ZMS                 SETC  'WHEN "L" IS SPECIFIED'                      00141700
&ZMS                 SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'          00141800
                     MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                 00141900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00142000
.ZG67C               ANOP  ,                                            00142100
.*-------------------------------------------------------------------   00142200
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00142300
                     AIF   (K'&ZXMFCTRL LE 0).ZG67P  NOT I/O            00142400
                     AIF   ('&XMFCTRL'(1,1) NE '(').ZG67P               00142500
&ZXMFCTRL            SETC  ''          RESET IN/OUTPUT                  00142600
&ZMS                 SETC  '"MF='                                       00142700
&ZMS                 SETC  '&ZMS.&MF"'                                  00142800
&ZMS                 SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'    00142900
                     MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'            00143000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00143100
.ZG67P               ANOP  ,                                            00143200
.*-------------------------------------------------------------------   00143300
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00143400
&ZXMFATTR            SETC  'INPUT'     SET IN/OUTPUT                    00143500
&XMFATTR             SETC  '0D'                                         00143600
                     AIF   (K'&MF(3) LE 0).ZG70B  PARM                  00143700
&XMFATTR             SETC  '&MF(3,1)'  SET XVARIABLE                    00143800
                     AIF   (N'&MF(3) GT 1).ZG70B  MULTI                 00143900
&XMFATTR             SETC  '&MF(3)'    SET XVARIABLE                    00144000
.ZG70B               ANOP  ,                                            00144100
.*-------------------------------------------------------------------   00144200
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00144300
                     AIF   (K'&ZXMFATTR LE 0).ZG70P  NOT I/O            00144400
                     AIF   ('&XMFATTR'(1,1) NE '(').ZG70P               00144500
&ZXMFATTR            SETC  ''          RESET IN/OUTPUT                  00144600
&ZMS                 SETC  '"MF='                                       00144700
&ZMS                 SETC  '&ZMS.&MF"'                                  00144800
&ZMS                 SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'    00144900
                     MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'            00145000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00145100
.ZG70P               ANOP  ,                                            00145200
.*-------------------------------------------------------------------   00145300
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00145400
                     AIF   (K'&ZXMFATTR LE 0).ZG70S  NOT I/O            00145500
                     AIF   (K'&XMFATTR LE 60).ZG70S  LNG OK             00145600
&ZXMFATTR            SETC  ''          RESET IN/OUTPUT                  00145700
&ZMS                 SETC  '"MF='                                       00145800
&ZMS                 SETC  '&ZMS.&MF"'                                  00145900
&ZMS                 SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'        00146000
                     MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'           00146100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00146200
.ZG70S               ANOP  ,                                            00146300
.*-------------------------------------------------------------------   00146400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00146500
.ZG72                ANOP  ,                                            00146600
&ZTLC                SETC 'E'                                           00146700
                     AIF   ('&MF(1)' NE '&ZTLC').ZG80                   00146800
&XMF                 SETC  'E'         SET KEYWORD                      00146900
                     AIF   (N'&MF LE 3).ZG72A   CK NUM                  00147000
&ZMS                 SETC  '"MF='                                       00147100
&ZMS                 SETC  '&ZMS.&MF"'                                  00147200
&ZMS                 SETC  '&ZMS "MF"'                                  00147300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'         00147400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00147500
.ZG72A               ANOP  ,                                            00147600
.*-------------------------------------------------------------------   00147700
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00147800
&ZXMFCTRL            SETC  'INPUT'     SET IN/OUTPUT                    00147900
&XMFCTRL             SETC  '&MF(2,1)'  SET XVARIABLE                    00148000
                     AIF   (N'&MF(2) GT 1).ZG74B  MULTI                 00148100
&XMFCTRL             SETC  '&MF(2)'    SET XVARIABLE                    00148200
.ZG74B               AIF   (K'&MF(2) GT 0).ZG74C                        00148300
&ZXMFCTRL            SETC  ''          RESET IN/OUTPUT                  00148400
&ZMS                 SETC  'WHEN "E" IS SPECIFIED'                      00148500
&ZMS                 SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'          00148600
                     MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                 00148700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00148800
.ZG74C               ANOP  ,                                            00148900
.*-------------------------------------------------------------------   00149000
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00149100
                     AIF   (K'&ZXMFCTRL LE 0).ZG74R  NOT I/O            00149200
                     AIF   ('&XMFCTRL'(1,1) NE '(').ZG74R               00149300
&ZCGPR               SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                   00149400
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG74P                 00149500
                     AIF   (K'&ZCGPR GT 2).ZG74Q                        00149600
                     AIF   ('&ZCGPR' EQ '0').ZG74Q                      00149700
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00149800
                     AIF   (T'&ZCGPR NE 'N').ZG74Q  INVALID REG NAME    00149900
.ZG74P               ANOP  ,                                            00150000
                     AIF   (T'&ZCGPR NE 'N').ZG74R  NON NUMERIC         00150100
                     AIF   ('&ZCGPR' LT '1').ZG74Q                      00150200
                     AIF   ('&ZCGPR' LE '12').ZG74R                     00150300
.ZG74Q               ANOP  ,                                            00150400
&ZMS                 SETC  '"MF='                                       00150500
&ZMS                 SETC  '&ZMS.&MF"'                                  00150600
&ZMS                 SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'    00150700
                     MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'             00150800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00150900
.ZG74R               ANOP  ,                                            00151000
.*-------------------------------------------------------------------   00151100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00151200
&XMFSCK              SETC  ''          INITIALIZE XVARIABLE             00151300
.ZG78A   AIF   ('&MF(3)' NE 'COMPLETE').ZG79A                           00151400
&XMFSCK              SETC  'COMPLETE'  SET KEYWORD                      00151500
.*-------------------------------------------------------------------   00151600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00151700
.ZG79A               AIF   (K'&XMFSCK GT 0).ZG79C  KEYWORD              00151800
                     AIF   (K'&MF(3) LE 0).ZG79B                        00151900
&ZMS                 SETC  '"MF='                                       00152000
&ZMS                 SETC  '&ZMS.&MF"'                                  00152100
&ZMS                 SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '    00152200
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00152300
&ZMS                 SETC  '&ZMS "COMPLETE".'                           00152400
                     MNOTE 8,' &ZMS '                                   00152500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00152600
.ZG79B               ANOP  ,                                            00152700
&XMFSCK              SETC  'COMPLETE'  SET DEFAULT KEYWORD              00152800
.ZG79C               ANOP  ,                                            00152900
&ZXMFSCK             SETC  'INPUT'     SET IN/OUTPUT                    00153000
.*------------------------------------------------------------------    00153100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00153200
.ZG80                ANOP  ,                                            00153300
&ZXMF                SETC  'INPUT'     SET IN/OUTPUT                    00153400
                     AIF   (K'&XMF GT 0).ZG80E  VALID ARG               00153500
                     AIF   (T'&MF EQ 'O').ZG80D  OMITTED                00153600
&ZASYSLNDX           SETA  0                                            00153700
.ZG80A               ANOP  ,           POSITIONAL MACRO KEY             00153800
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00153900
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG80C             00154000
&ZTLC                SETC 'MF'                                          00154100
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG80A    00154200
.ZG80B               ANOP  ,                                            00154300
&ZXMF                SETC  ''          RESET IN/OUTPUT                  00154400
&ZMS                 SETC  'THE "MF" KEY'                               00154500
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00154600
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00154700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00154800
                     AGO   .ZG80E                                       00154900
.ZG80C               ANOP  ,                                            00155000
&ZXMF                SETC  ''          RESET IN/OUTPUT                  00155100
&ZMS                 SETC  '"MF='                                       00155200
&ZMS                 SETC  '&ZMS.&MF"'                                  00155300
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00155400
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00155500
&ZMS                 SETC  '&ZMS "S",'                                  00155600
&ZMS                 SETC  '&ZMS "L",'                                  00155700
&ZMS                 SETC  '&ZMS OR "E".'                               00155800
                     MNOTE 8,' &ZMS '                                   00155900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00156000
                     AGO   .ZG80E                                       00156100
.ZG80D               ANOP  ,                                            00156200
&XMF                 SETC  'S'         SET DEFAULT KEYWORD              00156300
&XMFSCK              SETC  'COMPLETE'  COMPLETE CHECKING                00156400
.ZG80E               ANOP  ,                                            00156500
.********************************************************************   00156600
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00156700
.********************************************************************   00156800
                     ACTR  10000                                        00156900
.*-------------------------------------------------------------------   00157000
.***AG.MF03 MF=(SLE)                                                    00157100
                     AIF   ('&XMF' EQ 'L').ZGMFX                        00157200
.*------------------------------------------------------------------    00157300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00157400
&XTYPE               SETC  ''          INITIALIZE XVARIABLE             00157500
.*-------------------------------------------------------------------   00157600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00157700
.ZG3                 ANOP  ,                                            00157800
                     AIF   (K'&TYPE(1) LE 0).ZG3A                       00157900
&ZTLC                SETC 'INDEPENDENT'                                 00158000
                     AIF   ('&TYPE(1)' NE '&ZTLC').ZG34                 00158100
&XTYPE               SETC  'INDEPENDENT'        SET KEYWORD             00158200
                     AIF   (N'&TYPE LE 1).ZG3A  CK NUM                  00158300
&ZMS                 SETC  '"TYPE='                                     00158400
&ZMS                 SETC  '&ZMS.&TYPE"'                                00158500
&ZMS                 SETC  '&ZMS "TYPE"'                                00158600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00158700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00158800
.ZG3A                ANOP  ,                                            00158900
.*------------------------------------------------------------------    00159000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00159100
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00159200
.ZG3A0               AIF   (K'&MONTKN LE 0).ZG3A1  OK                   00159300
&ZCVAL               SETC '&ZCVAL MONTKN'       INCORRECT KEY USED      00159400
.ZG3A1               AIF   (K'&MONTKN64 LE 0).ZG3A2  OK                 00159500
&ZCVAL               SETC '&ZCVAL MONTKN64'     INCORRECT KEY USED      00159600
.ZG3A2               AIF   (K'&ACCESS LE 0).ZG3A3  OK                   00159700
&ZCVAL               SETC '&ZCVAL ACCESS'       INCORRECT KEY USED      00159800
.ZG3A3               AIF   (K'&ZCVAL LE 0).ZG3A4  OK                    00159900
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00160000
&ZMS                 SETC  '"TYPE'                                      00160100
&ZMS                 SETC  '&ZMS.=&TYPE"'                               00160200
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00160300
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00160400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00160500
.ZG3A4               ANOP  ,                                            00160600
.*----------------------------------------------------------------***   00160700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00160800
                     AIF   (N'&CLSFY LE 1).ZG5A  CK NUM                 00160900
&ZMS                 SETC  '"CLSFY='                                    00161000
&ZMS                 SETC  '&ZMS.&CLSFY"'                               00161100
&ZMS                 SETC  '&ZMS "CLSFY"'                               00161200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00161300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00161400
.ZG5A                ANOP  ,                                            00161500
.*-------------------------------------------------------------------   00161600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00161700
&ZXCLSFY             SETC  'INPUT'     SET IN/OUTPUT                    00161800
&XCLSFY              SETC  '&CLSFY(1)'          SET XVARIABLE           00161900
                     AIF   (N'&CLSFY GT 1).ZG5B  MULTI                  00162000
&XCLSFY              SETC  '&CLSFY'    SET XVARIABLE                    00162100
.ZG5B                AIF   (K'&CLSFY(1) GT 0).ZG5C                      00162200
&ZXCLSFY             SETC  ''          RESET IN/OUTPUT                  00162300
&ZMS                 SETC  'WHEN "INDEPENDENT" IS SPECIFIED'            00162400
&ZMS                 SETC  '&ZMS , "CLSFY" KEY AND ITS'                 00162500
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00162600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00162700
.ZG5C                ANOP  ,                                            00162800
.*-------------------------------------------------------------------   00162900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00163000
                     AIF   (K'&ZXCLSFY LE 0).ZG5R  NOT I/O              00163100
                     AIF   ('&XCLSFY'(1,1) NE '(').ZG5R                 00163200
&ZCGPR               SETC  '&XCLSFY'(2,K'&XCLSFY-2)                     00163300
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                  00163400
                     AIF   (K'&ZCGPR GT 2).ZG5Q                         00163500
                     AIF   ('&ZCGPR' EQ '0').ZG5Q                       00163600
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00163700
                     AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME     00163800
.ZG5P                ANOP  ,                                            00163900
                     AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC          00164000
                     AIF   ('&ZCGPR' LT '2').ZG5Q                       00164100
                     AIF   ('&ZCGPR' LE '12').ZG5R                      00164200
.ZG5Q                ANOP  ,                                            00164300
&ZMS                 SETC  '"CLSFY='                                    00164400
&ZMS                 SETC  '&ZMS.&CLSFY"'                               00164500
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00164600
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00164700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00164800
.ZG5R                ANOP  ,                                            00164900
.*----------------------------------------------------------------***   00165000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00165100
                     AIF   (N'&SERVCLS LE 1).ZG8A  CK NUM               00165200
&ZMS                 SETC  '"SERVCLS='                                  00165300
&ZMS                 SETC  '&ZMS.&SERVCLS"'                             00165400
&ZMS                 SETC  '&ZMS "SERVCLS"'                             00165500
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00165600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00165700
.ZG8A                ANOP  ,                                            00165800
.*-------------------------------------------------------------------   00165900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00166000
                     AIF   (K'&SERVCLS(1) LE 0).ZG8C  NO PARM           00166100
&ZXSERVCLS           SETC  'OUTPUT'    SET OUTPUT                       00166200
&XSERVCLS            SETC  '&SERVCLS(1)'        SET XVARIABLE           00166300
                     AIF   (N'&SERVCLS GT 1).ZG8C                       00166400
&XSERVCLS            SETC  '&SERVCLS'  SET XVARIABLE                    00166500
.ZG8C                ANOP  ,                                            00166600
.*-------------------------------------------------------------------   00166700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00166800
                     AIF   (K'&ZXSERVCLS LE 0).ZG8R  NOT I/O            00166900
                     AIF   ('&XSERVCLS'(1,1) NE '(').ZG8R               00167000
&ZCGPR               SETC  '&XSERVCLS'(2,K'&XSERVCLS-2)                 00167100
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                  00167200
                     AIF   (K'&ZCGPR GT 2).ZG8Q                         00167300
                     AIF   ('&ZCGPR' EQ '0').ZG8Q                       00167400
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00167500
                     AIF   (T'&ZCGPR NE 'N').ZG8Q  INVALID REG NAME     00167600
.ZG8P                ANOP  ,                                            00167700
                     AIF   (T'&ZCGPR NE 'N').ZG8R  NON NUMERIC          00167800
                     AIF   ('&ZCGPR' LT '2').ZG8Q                       00167900
                     AIF   ('&ZCGPR' LE '12').ZG8R                      00168000
.ZG8Q                ANOP  ,                                            00168100
&ZMS                 SETC  '"SERVCLS='                                  00168200
&ZMS                 SETC  '&ZMS.&SERVCLS"'                             00168300
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00168400
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00168500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00168600
.ZG8R                ANOP  ,                                            00168700
.*----------------------------------------------------------------***   00168800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00168900
                     AIF   (N'&INSERVCLS LE 1).ZG11A  CK NUM            00169000
&ZMS                 SETC  '"INSERVCLS='                                00169100
&ZMS                 SETC  '&ZMS.&INSERVCLS"'                           00169200
&ZMS                 SETC  '&ZMS "INSERVCLS"'                           00169300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00169400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00169500
.ZG11A               ANOP  ,                                            00169600
.*-------------------------------------------------------------------   00169700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00169800
&ZXINSERVCLS         SETC  'INPUT'     SET IN/OUTPUT                    00169900
&XINSERVCLS          SETC  '0'                                          00170000
                     AIF   (K'&INSERVCLS(1) LE 0).ZG11B  PARM           00170100
&XINSERVCLS          SETC  '&INSERVCLS(1)'      SET XVARIABLE           00170200
                     AIF   (N'&INSERVCLS GT 1).ZG11B  MULTI             00170300
&XINSERVCLS          SETC  '&INSERVCLS'         SET XVARIABLE           00170400
.ZG11B               ANOP  ,                                            00170500
.*-------------------------------------------------------------------   00170600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00170700
                     AIF   (K'&ZXINSERVCLS LE 0).ZG11R  NOT I/O         00170800
                     AIF   ('&XINSERVCLS'(1,1) NE '(').ZG11R            00170900
&ZCGPR               SETC  '&XINSERVCLS'(2,K'&XINSERVCLS-2)             00171000
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                 00171100
                     AIF   (K'&ZCGPR GT 2).ZG11Q                        00171200
                     AIF   ('&ZCGPR' EQ '0').ZG11Q                      00171300
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00171400
                     AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME    00171500
.ZG11P               ANOP  ,                                            00171600
                     AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC         00171700
                     AIF   ('&ZCGPR' LT '2').ZG11Q                      00171800
                     AIF   ('&ZCGPR' LE '12').ZG11R                     00171900
.ZG11Q               ANOP  ,                                            00172000
&ZMS                 SETC  '"INSERVCLS='                                00172100
&ZMS                 SETC  '&ZMS.&INSERVCLS"'                           00172200
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00172300
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00172400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00172500
.ZG11R               ANOP  ,                                            00172600
.*----------------------------------------------------------------***   00172700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00172800
                     AIF   (N'&ARRIVALTIME LE 1).ZG14A  CK NUM          00172900
&ZMS                 SETC  '"ARRIVALTIME='                              00173000
&ZMS                 SETC  '&ZMS.&ARRIVALTIME"'                         00173100
&ZMS                 SETC  '&ZMS "ARRIVALTIME"'                         00173200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00173300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00173400
.ZG14A               ANOP  ,                                            00173500
.*-------------------------------------------------------------------   00173600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00173700
&ZXARRIVALTIME       SETC  'INPUT'     SET IN/OUTPUT                    00173800
&XARRIVALTIME        SETC  '&ARRIVALTIME(1)'    SET XVARIABLE           00173900
                     AIF   (N'&ARRIVALTIME GT 1).ZG14B  MULTI           00174000
&XARRIVALTIME        SETC  '&ARRIVALTIME'       SET XVARIABLE           00174100
.ZG14B               AIF   (K'&ARRIVALTIME(1) GT 0).ZG14C               00174200
&ZXARRIVALTIME       SETC  ''          RESET IN/OUTPUT                  00174300
&ZMS                 SETC  'WHEN "INDEPENDENT" IS SPECIFIED'            00174400
&ZMS                 SETC  '&ZMS , "ARRIVALTIME" KEY AND ITS'           00174500
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00174600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00174700
.ZG14C               ANOP  ,                                            00174800
.*-------------------------------------------------------------------   00174900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00175000
                     AIF   (K'&ZXARRIVALTIME LE 0).ZG14R  NOT I/O       00175100
                     AIF   ('&XARRIVALTIME'(1,1) NE '(').ZG14R          00175200
&ZCGPR               SETC  '&XARRIVALTIME'(2,K'&XARRIVALTIME-2)         00175300
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                 00175400
                     AIF   (K'&ZCGPR GT 2).ZG14Q                        00175500
                     AIF   ('&ZCGPR' EQ '0').ZG14Q                      00175600
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00175700
                     AIF   (T'&ZCGPR NE 'N').ZG14Q  INVALID REG NAME    00175800
.ZG14P               ANOP  ,                                            00175900
                     AIF   (T'&ZCGPR NE 'N').ZG14R  NON NUMERIC         00176000
                     AIF   ('&ZCGPR' LT '2').ZG14Q                      00176100
                     AIF   ('&ZCGPR' LE '12').ZG14R                     00176200
.ZG14Q               ANOP  ,                                            00176300
&ZMS                 SETC  '"ARRIVALTIME='                              00176400
&ZMS                 SETC  '&ZMS.&ARRIVALTIME"'                         00176500
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00176600
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00176700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00176800
.ZG14R               ANOP  ,                                            00176900
.*----------------------------------------------------------------***   00177000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00177100
                     AIF   (N'&FUNCTION_NAME LE 1).ZG17A  CK NUM        00177200
&ZMS                 SETC  '"FUNCTION_NAME='                            00177300
&ZMS                 SETC  '&ZMS.&FUNCTION_NAME"'                       00177400
&ZMS                 SETC  '&ZMS "FUNCTION_NAME"'                       00177500
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00177600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00177700
.ZG17A               ANOP  ,                                            00177800
.*-------------------------------------------------------------------   00177900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00178000
&ZXFUNCTION_NAME     SETC  'INPUT'     SET IN/OUTPUT                    00178100
&XFUNCTION_NAME      SETC  '&FUNCTION_NAME(1)'  SET XVARIABLE           00178200
                     AIF   (N'&FUNCTION_NAME GT 1).ZG17B  MULTI         00178300
&XFUNCTION_NAME      SETC  '&FUNCTION_NAME'     SET XVARIABLE           00178400
.ZG17B               AIF   (K'&FUNCTION_NAME(1) GT 0).ZG17C             00178500
&ZXFUNCTION_NAME     SETC  ''          RESET IN/OUTPUT                  00178600
&ZMS                 SETC  'WHEN "INDEPENDENT" IS SPECIFIED'            00178700
&ZMS                 SETC  '&ZMS , "FUNCTION_NAME" KEY AND ITS'         00178800
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00178900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00179000
.ZG17C               ANOP  ,                                            00179100
.*-------------------------------------------------------------------   00179200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00179300
                     AIF   (K'&ZXFUNCTION_NAME LE 0).ZG17R  NOT I/O     00179400
                     AIF   ('&XFUNCTION_NAME'(1,1) NE '(').ZG17R        00179500
&ZCGPR               SETC  '&XFUNCTION_NAME'(2,K'&XFUNCTION_NAME-2)     00179600
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG17P                 00179700
                     AIF   (K'&ZCGPR GT 2).ZG17Q                        00179800
                     AIF   ('&ZCGPR' EQ '0').ZG17Q                      00179900
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00180000
                     AIF   (T'&ZCGPR NE 'N').ZG17Q  INVALID REG NAME    00180100
.ZG17P               ANOP  ,                                            00180200
                     AIF   (T'&ZCGPR NE 'N').ZG17R  NON NUMERIC         00180300
                     AIF   ('&ZCGPR' LT '2').ZG17Q                      00180400
                     AIF   ('&ZCGPR' LE '12').ZG17R                     00180500
.ZG17Q               ANOP  ,                                            00180600
&ZMS                 SETC  '"FUNCTION_NAME='                            00180700
&ZMS                 SETC  '&ZMS.&FUNCTION_NAME"'                       00180800
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00180900
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00181000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00181100
.ZG17R               ANOP  ,                                            00181200
.*------------------------------------------------------------------    00181300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00181400
&XEXSTARTDEFER       SETC  ''          INITIALIZE XVARIABLE             00181500
.*-------------------------------------------------------------------   00181600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00181700
.ZG21                ANOP  ,                                            00181800
                     AIF   (K'&EXSTARTDEFER(1) LE 0).ZG21A              00181900
&ZTLC                SETC 'NO'                                          00182000
                     AIF   ('&EXSTARTDEFER(1)' NE '&ZTLC').ZG22         00182100
&XEXSTARTDEFER       SETC  'NO'        SET KEYWORD                      00182200
                     AIF   (N'&EXSTARTDEFER LE 1).ZG21A  CK NUM         00182300
&ZMS                 SETC  '"EXSTARTDEFER='                             00182400
&ZMS                 SETC  '&ZMS.&EXSTARTDEFER"'                        00182500
&ZMS                 SETC  '&ZMS "EXSTARTDEFER"'                        00182600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00182700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00182800
.ZG21A               ANOP  ,                                            00182900
.*-------------------------------------------------------------------   00183000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00183100
.ZG22                ANOP  ,                                            00183200
&ZTLC                SETC 'YES'                                         00183300
                     AIF   ('&EXSTARTDEFER(1)' NE '&ZTLC').ZG23         00183400
&XEXSTARTDEFER       SETC  'YES'       SET KEYWORD                      00183500
                     AIF   (N'&EXSTARTDEFER LE 1).ZG22A  CK NUM         00183600
&ZMS                 SETC  '"EXSTARTDEFER='                             00183700
&ZMS                 SETC  '&ZMS.&EXSTARTDEFER"'                        00183800
&ZMS                 SETC  '&ZMS "EXSTARTDEFER"'                        00183900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00184000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00184100
.ZG22A               ANOP  ,                                            00184200
.*------------------------------------------------------------------    00184300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00184400
.ZG23                ANOP  ,                                            00184500
&ZXEXSTARTDEFER      SETC  'INPUT'     SET IN/OUTPUT                    00184600
                     AIF   (K'&XEXSTARTDEFER GT 0).ZG23E  VALID ARG     00184700
                     AIF   (T'&EXSTARTDEFER EQ 'O').ZG23D  OMITTED      00184800
&ZASYSLNDX           SETA  0                                            00184900
.ZG23A               ANOP  ,           POSITIONAL MACRO KEY             00185000
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00185100
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG23C             00185200
&ZTLC                SETC 'EXSTARTDEFER'                                00185300
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG23A    00185400
.ZG23B               ANOP  ,                                            00185500
&ZXEXSTARTDEFER      SETC  ''          RESET IN/OUTPUT                  00185600
&ZMS                 SETC  'THE "EXSTARTDEFER" KEY'                     00185700
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00185800
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00185900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00186000
                     AGO   .ZG23E                                       00186100
.ZG23C               ANOP  ,                                            00186200
&ZXEXSTARTDEFER      SETC  ''          RESET IN/OUTPUT                  00186300
&ZMS                 SETC  '"EXSTARTDEFER='                             00186400
&ZMS                 SETC  '&ZMS.&EXSTARTDEFER"'                        00186500
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00186600
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00186700
&ZMS                 SETC  '&ZMS "NO"'                                  00186800
&ZMS                 SETC  '&ZMS OR "YES".'                             00186900
                     MNOTE 8,' &ZMS '                                   00187000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00187100
                     AGO   .ZG23E                                       00187200
.ZG23D               ANOP  ,                                            00187300
&XEXSTARTDEFER       SETC  'NO'        SET DEFAULT KEYWORD              00187400
.ZG23E               ANOP  ,                                            00187500
.*------------------------------------------------------------------    00187600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00187700
&XESTRT              SETC  ''          INITIALIZE XVARIABLE             00187800
.*-------------------------------------------------------------------   00187900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00188000
.ZG26                ANOP  ,                                            00188100
                     AIF   (K'&ESTRT(1) LE 0).ZG26A                     00188200
&ZTLC                SETC 'IMPLIED'                                     00188300
                     AIF   ('&ESTRT(1)' NE '&ZTLC').ZG30                00188400
&XESTRT              SETC  'IMPLIED'   SET KEYWORD                      00188500
                     AIF   (N'&ESTRT LE 1).ZG26A  CK NUM                00188600
&ZMS                 SETC  '"ESTRT='                                    00188700
&ZMS                 SETC  '&ZMS.&ESTRT"'                               00188800
&ZMS                 SETC  '&ZMS "ESTRT"'                               00188900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00189000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00189100
.ZG26A               ANOP  ,                                            00189200
.*----------------------------------------------------------------***   00189300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00189400
                     AIF   (N'&WORKREQ_HDL LE 1).ZG28A  CK NUM          00189500
&ZMS                 SETC  '"WORKREQ_HDL='                              00189600
&ZMS                 SETC  '&ZMS.&WORKREQ_HDL"'                         00189700
&ZMS                 SETC  '&ZMS "WORKREQ_HDL"'                         00189800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00189900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00190000
.ZG28A               ANOP  ,                                            00190100
.*-------------------------------------------------------------------   00190200
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00190300
                     AIF   (K'&WORKREQ_HDL(1) LE 0).ZG28C  NO PARM      00190400
&ZXWORKREQ_HDL       SETC  'OUTPUT'    SET OUTPUT                       00190500
&XWORKREQ_HDL        SETC  '&WORKREQ_HDL(1)'    SET XVARIABLE           00190600
                     AIF   (N'&WORKREQ_HDL GT 1).ZG28C                  00190700
&XWORKREQ_HDL        SETC  '&WORKREQ_HDL'       SET XVARIABLE           00190800
.ZG28C               ANOP  ,                                            00190900
.*-------------------------------------------------------------------   00191000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00191100
                     AIF   (K'&ZXWORKREQ_HDL LE 0).ZG28R  NOT I/O       00191200
                     AIF   ('&XWORKREQ_HDL'(1,1) NE '(').ZG28R          00191300
&ZCGPR               SETC  '&XWORKREQ_HDL'(2,K'&XWORKREQ_HDL-2)         00191400
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG28P                 00191500
                     AIF   (K'&ZCGPR GT 2).ZG28Q                        00191600
                     AIF   ('&ZCGPR' EQ '0').ZG28Q                      00191700
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00191800
                     AIF   (T'&ZCGPR NE 'N').ZG28Q  INVALID REG NAME    00191900
.ZG28P               ANOP  ,                                            00192000
                     AIF   (T'&ZCGPR NE 'N').ZG28R  NON NUMERIC         00192100
                     AIF   ('&ZCGPR' LT '2').ZG28Q                      00192200
                     AIF   ('&ZCGPR' LE '12').ZG28R                     00192300
.ZG28Q               ANOP  ,                                            00192400
&ZMS                 SETC  '"WORKREQ_HDL='                              00192500
&ZMS                 SETC  '&ZMS.&WORKREQ_HDL"'                         00192600
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00192700
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00192800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00192900
.ZG28R               ANOP  ,                                            00193000
.*-------------------------------------------------------------------   00193100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00193200
.ZG30                ANOP  ,                                            00193300
&ZTLC                SETC 'EXPLICIT'                                    00193400
                     AIF   ('&ESTRT(1)' NE '&ZTLC').ZG31                00193500
&XESTRT              SETC  'EXPLICIT'  SET KEYWORD                      00193600
                     AIF   (N'&ESTRT LE 1).ZG30A  CK NUM                00193700
&ZMS                 SETC  '"ESTRT='                                    00193800
&ZMS                 SETC  '&ZMS.&ESTRT"'                               00193900
&ZMS                 SETC  '&ZMS "ESTRT"'                               00194000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00194100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00194200
.ZG30A               ANOP  ,                                            00194300
.*------------------------------------------------------------------    00194400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00194500
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00194600
.ZG30A0              AIF   (K'&WORKREQ_HDL LE 0).ZG30A1  OK             00194700
&ZCVAL               SETC '&ZCVAL WORKREQ_HDL'  INCORRECT KEY USED      00194800
.ZG30A1              AIF   (K'&ZCVAL LE 0).ZG30A2  OK                   00194900
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00195000
&ZMS                 SETC  '"ESTRT'                                     00195100
&ZMS                 SETC  '&ZMS.=&ESTRT"'                              00195200
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00195300
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00195400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00195500
.ZG30A2              ANOP  ,                                            00195600
.*-------------------------------------------------------------------   00195700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00195800
.ZG31                ANOP  ,                                            00195900
&ZTLC                SETC 'EXPLICIT_SINGLE'                             00196000
                     AIF   ('&ESTRT(1)' NE '&ZTLC').ZG32                00196100
&XESTRT              SETC  'EXPLICIT_SINGLE'    SET KEYWORD             00196200
                     AIF   (N'&ESTRT LE 1).ZG31A  CK NUM                00196300
&ZMS                 SETC  '"ESTRT='                                    00196400
&ZMS                 SETC  '&ZMS.&ESTRT"'                               00196500
&ZMS                 SETC  '&ZMS "ESTRT"'                               00196600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00196700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00196800
.ZG31A               ANOP  ,                                            00196900
.*------------------------------------------------------------------    00197000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00197100
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00197200
.ZG31A0              AIF   (K'&WORKREQ_HDL LE 0).ZG31A1  OK             00197300
&ZCVAL               SETC '&ZCVAL WORKREQ_HDL'  INCORRECT KEY USED      00197400
.ZG31A1              AIF   (K'&ZCVAL LE 0).ZG31A2  OK                   00197500
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00197600
&ZMS                 SETC  '"ESTRT'                                     00197700
&ZMS                 SETC  '&ZMS.=&ESTRT"'                              00197800
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00197900
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00198000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00198100
.ZG31A2              ANOP  ,                                            00198200
.*-------------------------------------------------------------------   00198300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00198400
.ZG32                ANOP  ,                                            00198500
&ZTLC                SETC 'NEVER'                                       00198600
                     AIF   ('&ESTRT(1)' NE '&ZTLC').ZG33                00198700
&XESTRT              SETC  'NEVER'     SET KEYWORD                      00198800
                     AIF   (N'&ESTRT LE 1).ZG32A  CK NUM                00198900
&ZMS                 SETC  '"ESTRT='                                    00199000
&ZMS                 SETC  '&ZMS.&ESTRT"'                               00199100
&ZMS                 SETC  '&ZMS "ESTRT"'                               00199200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00199300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00199400
.ZG32A               ANOP  ,                                            00199500
.*------------------------------------------------------------------    00199600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00199700
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00199800
.ZG32A0              AIF   (K'&WORKREQ_HDL LE 0).ZG32A1  OK             00199900
&ZCVAL               SETC '&ZCVAL WORKREQ_HDL'  INCORRECT KEY USED      00200000
.ZG32A1              AIF   (K'&ZCVAL LE 0).ZG32A2  OK                   00200100
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00200200
&ZMS                 SETC  '"ESTRT'                                     00200300
&ZMS                 SETC  '&ZMS.=&ESTRT"'                              00200400
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00200500
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00200600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00200700
.ZG32A2              ANOP  ,                                            00200800
.*------------------------------------------------------------------    00200900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00201000
.ZG33                ANOP  ,                                            00201100
&ZXESTRT             SETC  'INPUT'     SET IN/OUTPUT                    00201200
                     AIF   (K'&XESTRT GT 0).ZG33E  VALID ARG            00201300
                     AIF   (T'&ESTRT EQ 'O').ZG33D  OMITTED             00201400
&ZASYSLNDX           SETA  0                                            00201500
.ZG33A               ANOP  ,           POSITIONAL MACRO KEY             00201600
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00201700
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG33C             00201800
&ZTLC                SETC 'ESTRT'                                       00201900
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG33A    00202000
.ZG33B               ANOP  ,                                            00202100
&ZXESTRT             SETC  ''          RESET IN/OUTPUT                  00202200
&ZMS                 SETC  'THE "ESTRT" KEY'                            00202300
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00202400
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00202500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00202600
                     AGO   .ZG33E                                       00202700
.ZG33C               ANOP  ,                                            00202800
&ZXESTRT             SETC  ''          RESET IN/OUTPUT                  00202900
&ZMS                 SETC  '"ESTRT='                                    00203000
&ZMS                 SETC  '&ZMS.&ESTRT"'                               00203100
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00203200
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00203300
&ZMS                 SETC  '&ZMS "IMPLIED",'                            00203400
&ZMS                 SETC  '&ZMS "EXPLICIT",'                           00203500
&ZMS                 SETC  '&ZMS "EXPLICIT_SINGLE",'                    00203600
&ZMS                 SETC  '&ZMS OR "NEVER".'                           00203700
                     MNOTE 8,' &ZMS '                                   00203800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00203900
                     AGO   .ZG33E                                       00204000
.ZG33D               ANOP  ,                                            00204100
&XESTRT              SETC  'IMPLIED'   SET DEFAULT KEYWORD              00204200
.ZG33E               ANOP  ,                                            00204300
.*-------------------------------------------------------------------   00204400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00204500
.ZG34                ANOP  ,                                            00204600
&ZTLC                SETC 'DEPENDENT'                                   00204700
                     AIF   ('&TYPE(1)' NE '&ZTLC').ZG35                 00204800
&XTYPE               SETC  'DEPENDENT'          SET KEYWORD             00204900
                     AIF   (N'&TYPE LE 1).ZG34A  CK NUM                 00205000
&ZMS                 SETC  '"TYPE='                                     00205100
&ZMS                 SETC  '&ZMS.&TYPE"'                                00205200
&ZMS                 SETC  '&ZMS "TYPE"'                                00205300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00205400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00205500
.ZG34A               ANOP  ,                                            00205600
.*------------------------------------------------------------------    00205700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00205800
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00205900
.ZG34A0              AIF   (K'&CLSFY LE 0).ZG34A1  OK                   00206000
&ZCVAL               SETC '&ZCVAL CLSFY'        INCORRECT KEY USED      00206100
.ZG34A1              AIF   (K'&SERVCLS LE 0).ZG34A2  OK                 00206200
&ZCVAL               SETC '&ZCVAL SERVCLS'      INCORRECT KEY USED      00206300
.ZG34A2              AIF   (K'&INSERVCLS LE 0).ZG34A3  OK               00206400
&ZCVAL               SETC '&ZCVAL INSERVCLS'    INCORRECT KEY USED      00206500
.ZG34A3              AIF   (K'&ARRIVALTIME LE 0).ZG34A4  OK             00206600
&ZCVAL               SETC '&ZCVAL ARRIVALTIME'  INCORRECT KEY USED      00206700
.ZG34A4              AIF   (K'&FUNCTION_NAME LE 0).ZG34A5  OK           00206800
&ZCVAL               SETC '&ZCVAL FUNCTION_NAME'  INCORRECT KEY USED    00206900
.ZG34A5              AIF   (K'&EXSTARTDEFER LE 0).ZG34A6  OK            00207000
&ZCVAL               SETC '&ZCVAL EXSTARTDEFER'  INCORRECT KEY USED     00207100
.ZG34A6              AIF   (K'&ESTRT LE 0).ZG34A7  OK                   00207200
&ZCVAL               SETC '&ZCVAL ESTRT'        INCORRECT KEY USED      00207300
.ZG34A7              AIF   (K'&WORKREQ_HDL LE 0).ZG34A8  OK             00207400
&ZCVAL               SETC '&ZCVAL WORKREQ_HDL'  INCORRECT KEY USED      00207500
.ZG34A8              AIF   (K'&MONTKN LE 0).ZG34A9  OK                  00207600
&ZCVAL               SETC '&ZCVAL MONTKN'       INCORRECT KEY USED      00207700
.ZG34A9              AIF   (K'&MONTKN64 LE 0).ZG34A10  OK               00207800
&ZCVAL               SETC '&ZCVAL MONTKN64'     INCORRECT KEY USED      00207900
.ZG34A10             AIF   (K'&ACCESS LE 0).ZG34A11  OK                 00208000
&ZCVAL               SETC '&ZCVAL ACCESS'       INCORRECT KEY USED      00208100
.ZG34A11             AIF   (K'&ZCVAL LE 0).ZG34A12  OK                  00208200
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00208300
&ZMS                 SETC  '"TYPE'                                      00208400
&ZMS                 SETC  '&ZMS.=&TYPE"'                               00208500
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00208600
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00208700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00208800
.ZG34A12             ANOP  ,                                            00208900
.*-------------------------------------------------------------------   00209000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00209100
.ZG35                ANOP  ,                                            00209200
&ZTLC                SETC 'WORKDEPENDENT'                               00209300
                     AIF   ('&TYPE(1)' NE '&ZTLC').ZG36                 00209400
&XTYPE               SETC  'WORKDEPENDENT'      SET KEYWORD             00209500
                     AIF   (N'&TYPE LE 1).ZG35A  CK NUM                 00209600
&ZMS                 SETC  '"TYPE='                                     00209700
&ZMS                 SETC  '&ZMS.&TYPE"'                                00209800
&ZMS                 SETC  '&ZMS "TYPE"'                                00209900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00210000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00210100
.ZG35A               ANOP  ,                                            00210200
.*------------------------------------------------------------------    00210300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00210400
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00210500
.ZG35A0              AIF   (K'&CLSFY LE 0).ZG35A1  OK                   00210600
&ZCVAL               SETC '&ZCVAL CLSFY'        INCORRECT KEY USED      00210700
.ZG35A1              AIF   (K'&SERVCLS LE 0).ZG35A2  OK                 00210800
&ZCVAL               SETC '&ZCVAL SERVCLS'      INCORRECT KEY USED      00210900
.ZG35A2              AIF   (K'&INSERVCLS LE 0).ZG35A3  OK               00211000
&ZCVAL               SETC '&ZCVAL INSERVCLS'    INCORRECT KEY USED      00211100
.ZG35A3              AIF   (K'&ARRIVALTIME LE 0).ZG35A4  OK             00211200
&ZCVAL               SETC '&ZCVAL ARRIVALTIME'  INCORRECT KEY USED      00211300
.ZG35A4              AIF   (K'&FUNCTION_NAME LE 0).ZG35A5  OK           00211400
&ZCVAL               SETC '&ZCVAL FUNCTION_NAME'  INCORRECT KEY USED    00211500
.ZG35A5              AIF   (K'&EXSTARTDEFER LE 0).ZG35A6  OK            00211600
&ZCVAL               SETC '&ZCVAL EXSTARTDEFER'  INCORRECT KEY USED     00211700
.ZG35A6              AIF   (K'&ESTRT LE 0).ZG35A7  OK                   00211800
&ZCVAL               SETC '&ZCVAL ESTRT'        INCORRECT KEY USED      00211900
.ZG35A7              AIF   (K'&WORKREQ_HDL LE 0).ZG35A8  OK             00212000
&ZCVAL               SETC '&ZCVAL WORKREQ_HDL'  INCORRECT KEY USED      00212100
.ZG35A8              AIF   (K'&MONTKN LE 0).ZG35A9  OK                  00212200
&ZCVAL               SETC '&ZCVAL MONTKN'       INCORRECT KEY USED      00212300
.ZG35A9              AIF   (K'&MONTKN64 LE 0).ZG35A10  OK               00212400
&ZCVAL               SETC '&ZCVAL MONTKN64'     INCORRECT KEY USED      00212500
.ZG35A10             AIF   (K'&ACCESS LE 0).ZG35A11  OK                 00212600
&ZCVAL               SETC '&ZCVAL ACCESS'       INCORRECT KEY USED      00212700
.ZG35A11             AIF   (K'&ZCVAL LE 0).ZG35A12  OK                  00212800
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00212900
&ZMS                 SETC  '"TYPE'                                      00213000
&ZMS                 SETC  '&ZMS.=&TYPE"'                               00213100
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00213200
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00213300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00213400
.ZG35A12             ANOP  ,                                            00213500
.*-------------------------------------------------------------------   00213600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00213700
.ZG36                ANOP  ,                                            00213800
&ZTLC                SETC 'MONENV'                                      00213900
                     AIF   ('&TYPE(1)' NE '&ZTLC').ZG46                 00214000
&XTYPE               SETC  'MONENV'    SET KEYWORD                      00214100
                     AIF   (N'&TYPE LE 1).ZG36A  CK NUM                 00214200
&ZMS                 SETC  '"TYPE='                                     00214300
&ZMS                 SETC  '&ZMS.&TYPE"'                                00214400
&ZMS                 SETC  '&ZMS "TYPE"'                                00214500
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00214600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00214700
.ZG36A               ANOP  ,                                            00214800
.*------------------------------------------------------------------    00214900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00215000
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00215100
.ZG36A0              AIF   (K'&CLSFY LE 0).ZG36A1  OK                   00215200
&ZCVAL               SETC '&ZCVAL CLSFY'        INCORRECT KEY USED      00215300
.ZG36A1              AIF   (K'&SERVCLS LE 0).ZG36A2  OK                 00215400
&ZCVAL               SETC '&ZCVAL SERVCLS'      INCORRECT KEY USED      00215500
.ZG36A2              AIF   (K'&INSERVCLS LE 0).ZG36A3  OK               00215600
&ZCVAL               SETC '&ZCVAL INSERVCLS'    INCORRECT KEY USED      00215700
.ZG36A3              AIF   (K'&ARRIVALTIME LE 0).ZG36A4  OK             00215800
&ZCVAL               SETC '&ZCVAL ARRIVALTIME'  INCORRECT KEY USED      00215900
.ZG36A4              AIF   (K'&FUNCTION_NAME LE 0).ZG36A5  OK           00216000
&ZCVAL               SETC '&ZCVAL FUNCTION_NAME'  INCORRECT KEY USED    00216100
.ZG36A5              AIF   (K'&EXSTARTDEFER LE 0).ZG36A6  OK            00216200
&ZCVAL               SETC '&ZCVAL EXSTARTDEFER'  INCORRECT KEY USED     00216300
.ZG36A6              AIF   (K'&ESTRT LE 0).ZG36A7  OK                   00216400
&ZCVAL               SETC '&ZCVAL ESTRT'        INCORRECT KEY USED      00216500
.ZG36A7              AIF   (K'&WORKREQ_HDL LE 0).ZG36A8  OK             00216600
&ZCVAL               SETC '&ZCVAL WORKREQ_HDL'  INCORRECT KEY USED      00216700
.ZG36A8              AIF   (K'&ZCVAL LE 0).ZG36A9  OK                   00216800
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00216900
&ZMS                 SETC  '"TYPE'                                      00217000
&ZMS                 SETC  '&ZMS.=&TYPE"'                               00217100
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00217200
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00217300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00217400
.ZG36A9              ANOP  ,                                            00217500
.*----------------------------------------------------------------***   00217600
.***AG.KMEKY01 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00217700
&XUSEDMONTKNKEY      SETC  ''          INITIALIZE XVARIABLE             00217800
                     AIF   (K'&MONTKN LE 0).ZG38C                       00217900
&ZXUSEDMONTKNKEY     SETC  'INPUT'     SET IN/OUTPUT                    00218000
&XUSEDMONTKNKEY      SETC  'MONTKN'    SET XVARIABLE                    00218100
&ZXMONTKN            SETC  'INPUT'     SET IN/OUTPUT                    00218200
&XMONTKN             SETC  '&MONTKN(1)'         SET XVARIABLE PARM      00218300
                     AIF   (N'&MONTKN GT 1).ZG38A                       00218400
&XMONTKN             SETC  '&MONTKN'   SET XVARIABLE PARM               00218500
.ZG38A               AIF   (N'&MONTKN LE 1).ZG38B  CK NUM               00218600
&ZMS                 SETC  '"MONTKN='                                   00218700
&ZMS                 SETC  '&ZMS.&MONTKN"'                              00218800
&ZMS                 SETC  '&ZMS "MONTKN"'                              00218900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00219000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00219100
.ZG38B               AIF   (K'&XMONTKN GT 0).ZG38C  ONE PARM            00219200
&ZXUSEDMONTKNKEY     SETC  ''          RESET IN/OUTPUT                  00219300
&ZXMONTKN            SETC  ''          RESET IN/OUTPUT                  00219400
&ZMS                 SETC  'WHEN "MONENV" IS SPECIFIED'                 00219500
&ZMS                 SETC  '&ZMS , "MONTKN" KEY AND ITS'                00219600
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00219700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00219800
.ZG38C               ANOP  ,                                            00219900
.*----------------------------------------------------------------***   00220000
.***AG.KMEKY02 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00220100
                     AIF   (K'&MONTKN64 LE 0).ZG39D  NO ME KEY          00220200
                     AIF   (N'&MONTKN64 LE 1).ZG39A  CK NUM             00220300
&ZMS                 SETC  '"MONTKN64='                                 00220400
&ZMS                 SETC  '&ZMS.&MONTKN64"'                            00220500
&ZMS                 SETC  '&ZMS "MONTKN64"'                            00220600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00220700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00220800
.ZG39A               AIF   (K'&XUSEDMONTKNKEY LE 0).ZG39B               00220900
&ZMS                 SETC  '"MONTKN64'                                  00221000
&ZMS                 SETC  '&ZMS.=&MONTKN64"'                           00221100
&ZMS                 SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'        00221200
&ZMS                 SETC  '&ZMS "&XUSEDMONTKNKEY"'                     00221300
                     MNOTE 8,' &ZMS KEY.'                               00221400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00221500
                     AGO   .ZG39D                                       00221600
.*                                                                      00221700
.ZG39B               ANOP  ,                                            00221800
&ZXUSEDMONTKNKEY     SETC  'INPUT'     SET IN/OUTPUT                    00221900
&XUSEDMONTKNKEY      SETC  'MONTKN64'  SET XVARIABLE                    00222000
&ZXMONTKN64          SETC  'INPUT'     SET IN/OUTPUT                    00222100
&XMONTKN64           SETC  '&MONTKN64(1)'       SET XVARIABLE PARM      00222200
                     AIF   (N'&MONTKN64 GT 1).ZG39C                     00222300
&XMONTKN64           SETC  '&MONTKN64'          SET XVARIABLE PARM      00222400
.ZG39C               AIF   (K'&XMONTKN64 GT 0).ZG39D  ONE PARM          00222500
&ZXUSEDMONTKNKEY     SETC  ''          RESET IN/OUTPUT                  00222600
&ZXMONTKN64          SETC  ''          RESET IN/OUTPUT                  00222700
&ZMS                 SETC  'WHEN "MONENV" IS SPECIFIED'                 00222800
&ZMS                 SETC  '&ZMS , "MONTKN64" KEY AND ITS'              00222900
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00223000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00223100
.ZG39D               ANOP  ,                                            00223200
.*------------------------------------------------------------------    00223300
.***AG.KME4Y09 NAME, OPT RQD INPUT, ME KEYS -CHECK IF KEY ENTERED       00223400
                     AIF   (K'&XUSEDMONTKNKEY GT 0).ZG40B               00223500
&ZXUSEDMONTKNKEY     SETC  ''          RESET IN/OUTPUT                  00223600
&ZXMONTKN            SETC  ''          RESET IN/OUTPUT                  00223700
&XUSEDMONTKNKEY      SETC  ''          ENSURE NULL                      00223800
&XMONTKN             SETC  ''          ENSURE NULL                      00223900
&ZMS                 SETC  'ONE OF THE FOLLOWING'                       00224000
&ZMS                 SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'          00224100
&ZMS                 SETC  '&ZMS REQUIRED:'                             00224200
&ZMS                 SETC  '&ZMS "MONTKN"'      VALID ME KEY            00224300
&ZMS                 SETC  '&ZMS OR "MONTKN64".'  VALID ME KEY          00224400
                     MNOTE 8,' &ZMS '                                   00224500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00224600
.ZG40B               ANOP  ,                                            00224700
.*-------------------------------------------------------------------   00224800
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00224900
.ZG38ZY  AIF    ('&XUSEDMONTKNKEY' NE 'MONTKN').ZG39ZY                  00225000
.*-------------------------------------------------------------------   00225100
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00225200
                     AIF   (K'&ZXMONTKN LE 0).ZG38R  NOT I/O            00225300
                     AIF   ('&XMONTKN'(1,1) NE '(').ZG38R               00225400
&ZCGPR               SETC  '&XMONTKN'(2,K'&XMONTKN-2)                   00225500
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG38P                 00225600
                     AIF   (K'&ZCGPR GT 2).ZG38Q                        00225700
                     AIF   ('&ZCGPR' EQ '0').ZG38Q                      00225800
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00225900
                     AIF   (T'&ZCGPR NE 'N').ZG38Q  INVALID REG NAME    00226000
.ZG38P               ANOP  ,                                            00226100
                     AIF   (T'&ZCGPR NE 'N').ZG38R  NON NUMERIC         00226200
                     AIF   ('&ZCGPR' LT '2').ZG38Q                      00226300
                     AIF   ('&ZCGPR' LE '12').ZG38R                     00226400
.ZG38Q               ANOP  ,                                            00226500
&ZMS                 SETC  '"MONTKN='                                   00226600
&ZMS                 SETC  '&ZMS.&MONTKN"'                              00226700
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00226800
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00226900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00227000
.ZG38R               ANOP  ,                                            00227100
.*-------------------------------------------------------------------   00227200
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00227300
.ZG39ZY  AIF    ('&XUSEDMONTKNKEY' NE 'MONTKN64').ZG40ZY                00227400
.*-------------------------------------------------------------------   00227500
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00227600
                     AIF   (K'&ZXMONTKN64 LE 0).ZG39R  NOT I/O          00227700
                     AIF   ('&XMONTKN64'(1,1) NE '(').ZG39R             00227800
&ZCGPR               SETC  '&XMONTKN64'(2,K'&XMONTKN64-2)               00227900
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG39P                 00228000
                     AIF   (K'&ZCGPR GT 2).ZG39Q                        00228100
                     AIF   ('&ZCGPR' EQ '0').ZG39Q                      00228200
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00228300
                     AIF   (T'&ZCGPR NE 'N').ZG39Q  INVALID REG NAME    00228400
.ZG39P               ANOP  ,                                            00228500
                     AIF   (T'&ZCGPR NE 'N').ZG39R  NON NUMERIC         00228600
                     AIF   ('&ZCGPR' LT '2').ZG39Q                      00228700
                     AIF   ('&ZCGPR' LE '12').ZG39R                     00228800
.ZG39Q               ANOP  ,                                            00228900
&ZMS                 SETC  '"MONTKN64='                                 00229000
&ZMS                 SETC  '&ZMS.&MONTKN64"'                            00229100
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00229200
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00229300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00229400
.ZG39R               ANOP  ,                                            00229500
.*-------------------------------------------------------------------   00229600
.***AG.KMEKY15 NAME, OPT RQD INPUT, ME KEYS -END                        00229700
.ZG40ZY              ANOP ,            END MUTUALLY EXCLUSIVE KEYS      00229800
.*------------------------------------------------------------------    00229900
.***AG.KKCTL01 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00230000
&XACCESS             SETC  ''          INITIALIZE XVARIABLE             00230100
.*-------------------------------------------------------------------   00230200
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00230300
.ZG43                ANOP  ,                                            00230400
                     AIF   (K'&ACCESS(1) LE 0).ZG43A                    00230500
&ZTLC                SETC 'PRIMARY'                                     00230600
                     AIF   ('&ACCESS(1)' NE '&ZTLC').ZG44               00230700
&XACCESS             SETC  'PRIMARY'   SET KEYWORD                      00230800
                     AIF   (N'&ACCESS LE 1).ZG43A  CK NUM               00230900
&ZMS                 SETC  '"ACCESS='                                   00231000
&ZMS                 SETC  '&ZMS.&ACCESS"'                              00231100
&ZMS                 SETC  '&ZMS "ACCESS"'                              00231200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00231300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00231400
.ZG43A               ANOP  ,                                            00231500
.*-------------------------------------------------------------------   00231600
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00231700
.ZG44                ANOP  ,                                            00231800
&ZTLC                SETC 'HOME'                                        00231900
                     AIF   ('&ACCESS(1)' NE '&ZTLC').ZG45               00232000
&XACCESS             SETC  'HOME'      SET KEYWORD                      00232100
                     AIF   (N'&ACCESS LE 1).ZG44A  CK NUM               00232200
&ZMS                 SETC  '"ACCESS='                                   00232300
&ZMS                 SETC  '&ZMS.&ACCESS"'                              00232400
&ZMS                 SETC  '&ZMS "ACCESS"'                              00232500
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00232600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00232700
.ZG44A               ANOP  ,                                            00232800
.*------------------------------------------------------------------    00232900
.***AG.KKCTL04 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00233000
.ZG45                ANOP  ,                                            00233100
&ZXACCESS            SETC  'INPUT'     SET IN/OUTPUT                    00233200
                     AIF   (K'&XACCESS GT 0).ZG45E  VALID ARG           00233300
                     AIF   (T'&ACCESS EQ 'O').ZG45D  OMITTED            00233400
&ZASYSLNDX           SETA  0                                            00233500
.ZG45A               ANOP  ,           POSITIONAL MACRO KEY             00233600
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00233700
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG45C             00233800
&ZTLC                SETC 'ACCESS'                                      00233900
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG45A    00234000
.ZG45B               ANOP  ,                                            00234100
&ZXACCESS            SETC  ''          RESET IN/OUTPUT                  00234200
&ZMS                 SETC  'THE "ACCESS" KEY'                           00234300
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00234400
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00234500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00234600
                     AGO   .ZG45E                                       00234700
.ZG45C               ANOP  ,                                            00234800
&ZXACCESS            SETC  ''          RESET IN/OUTPUT                  00234900
&ZMS                 SETC  '"ACCESS='                                   00235000
&ZMS                 SETC  '&ZMS.&ACCESS"'                              00235100
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00235200
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00235300
&ZMS                 SETC  '&ZMS "PRIMARY"'                             00235400
&ZMS                 SETC  '&ZMS OR "HOME".'                            00235500
                     MNOTE 8,' &ZMS '                                   00235600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00235700
                     AGO   .ZG45E                                       00235800
.ZG45D               ANOP  ,                                            00235900
&XACCESS             SETC  'PRIMARY'   SET DEFAULT KEYWORD              00236000
.ZG45E               ANOP  ,                                            00236100
.*------------------------------------------------------------------    00236200
.***AG.KKCTL05 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00236300
                     AIF   (K'&ACCESS(1) GT 0).ZG45F  PARM              00236400
&XACCESS             SETC  ''          ENSURE NULL KEYWORD              00236500
&ZXACCESS            SETC  ''          RESET IN/OUTPUT                  00236600
&ZMS                 SETC  'WHEN "MONENV" IS SPECIFIED, THE'            00236700
&ZMS                 SETC  '&ZMS "ACCESS" KEY AND ITS'                  00236800
&ZMS                 SETC  '&ZMS ARGUMENT ARE REQUIRED.'                00236900
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00237000
&ZMS                 SETC  '&ZMS "PRIMARY"'                             00237100
&ZMS                 SETC  '&ZMS OR "HOME".'                            00237200
                     MNOTE 8,' &ZMS '                                   00237300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00237400
.ZG45F               ANOP  ,                                            00237500
.*------------------------------------------------------------------    00237600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00237700
.ZG46                ANOP  ,                                            00237800
&ZXTYPE              SETC  'INPUT'     SET IN/OUTPUT                    00237900
                     AIF   (K'&XTYPE GT 0).ZG46E  VALID ARG             00238000
                     AIF   (T'&TYPE EQ 'O').ZG46D  OMITTED              00238100
&ZASYSLNDX           SETA  0                                            00238200
.ZG46A               ANOP  ,           POSITIONAL MACRO KEY             00238300
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00238400
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG46C             00238500
&ZTLC                SETC 'TYPE'                                        00238600
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG46A    00238700
.ZG46B               ANOP  ,                                            00238800
&ZXTYPE              SETC  ''          RESET IN/OUTPUT                  00238900
&ZMS                 SETC  'THE "TYPE" KEY'                             00239000
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00239100
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00239200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00239300
                     AGO   .ZG46E                                       00239400
.ZG46C               ANOP  ,                                            00239500
&ZXTYPE              SETC  ''          RESET IN/OUTPUT                  00239600
&ZMS                 SETC  '"TYPE='                                     00239700
&ZMS                 SETC  '&ZMS.&TYPE"'                                00239800
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00239900
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00240000
&ZMS                 SETC  '&ZMS "INDEPENDENT",'                        00240100
&ZMS                 SETC  '&ZMS "DEPENDENT",'                          00240200
&ZMS                 SETC  '&ZMS "WORKDEPENDENT",'                      00240300
&ZMS                 SETC  '&ZMS OR "MONENV".'                          00240400
                     MNOTE 8,' &ZMS '                                   00240500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00240600
                     AGO   .ZG46E                                       00240700
.ZG46D               ANOP  ,                                            00240800
&XTYPE               SETC  'INDEPENDENT'        SET DEFAULT KEYWORD     00240900
.ZG46E               ANOP  ,                                            00241000
.*----------------------------------------------------------------***   00241100
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00241200
                     AIF   (N'&ETOKEN LE 1).ZG48A  CK NUM               00241300
&ZMS                 SETC  '"ETOKEN='                                   00241400
&ZMS                 SETC  '&ZMS.&ETOKEN"'                              00241500
&ZMS                 SETC  '&ZMS "ETOKEN"'                              00241600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00241700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00241800
.ZG48A               ANOP  ,                                            00241900
.*-------------------------------------------------------------------   00242000
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00242100
&ZXETOKEN            SETC  'OUTPUT'    SET IN/OUTPUT                    00242200
&XETOKEN             SETC  '&ETOKEN(1)'         SET XVARIABLE           00242300
                     AIF   (N'&ETOKEN GT 1).ZG48B  MULTI                00242400
&XETOKEN             SETC  '&ETOKEN'   SET XVARIABLE                    00242500
.ZG48B               AIF   (K'&ETOKEN(1) GT 0).ZG48C                    00242600
&ZXETOKEN            SETC  ''          RESET IN/OUTPUT                  00242700
&ZMS                 SETC  ' '                                          00242800
&ZMS                 SETC  '&ZMS "ETOKEN" KEY AND ITS'                  00242900
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00243000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00243100
.ZG48C               ANOP  ,                                            00243200
.*-------------------------------------------------------------------   00243300
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00243400
                     AIF   (K'&ZXETOKEN LE 0).ZG48R  NOT I/O            00243500
                     AIF   ('&XETOKEN'(1,1) NE '(').ZG48R               00243600
&ZCGPR               SETC  '&XETOKEN'(2,K'&XETOKEN-2)                   00243700
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG48P                 00243800
                     AIF   (K'&ZCGPR GT 2).ZG48Q                        00243900
                     AIF   ('&ZCGPR' EQ '0').ZG48Q                      00244000
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00244100
                     AIF   (T'&ZCGPR NE 'N').ZG48Q  INVALID REG NAME    00244200
.ZG48P               ANOP  ,                                            00244300
                     AIF   (T'&ZCGPR NE 'N').ZG48R  NON NUMERIC         00244400
                     AIF   ('&ZCGPR' LT '2').ZG48Q                      00244500
                     AIF   ('&ZCGPR' LE '12').ZG48R                     00244600
.ZG48Q               ANOP  ,                                            00244700
&ZMS                 SETC  '"ETOKEN='                                   00244800
&ZMS                 SETC  '&ZMS.&ETOKEN"'                              00244900
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00245000
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00245100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00245200
.ZG48R               ANOP  ,                                            00245300
.*----------------------------------------------------------------***   00245400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00245500
                     AIF   (N'&IMPORTANCE LE 1).ZG51A  CK NUM           00245600
&ZMS                 SETC  '"IMPORTANCE='                               00245700
&ZMS                 SETC  '&ZMS.&IMPORTANCE"'                          00245800
&ZMS                 SETC  '&ZMS "IMPORTANCE"'                          00245900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00246000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00246100
.ZG51A               ANOP  ,                                            00246200
.*-------------------------------------------------------------------   00246300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00246400
                     AIF   (K'&IMPORTANCE(1) LE 0).ZG51C  NO PARM       00246500
&ZXIMPORTANCE        SETC  'OUTPUT'    SET OUTPUT                       00246600
&XIMPORTANCE         SETC  '&IMPORTANCE(1)'     SET XVARIABLE           00246700
                     AIF   (N'&IMPORTANCE GT 1).ZG51C                   00246800
&XIMPORTANCE         SETC  '&IMPORTANCE'        SET XVARIABLE           00246900
.ZG51C               ANOP  ,                                            00247000
.*-------------------------------------------------------------------   00247100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00247200
                     AIF   (K'&ZXIMPORTANCE LE 0).ZG51R  NOT I/O        00247300
                     AIF   ('&XIMPORTANCE'(1,1) NE '(').ZG51R           00247400
&ZCGPR               SETC  '&XIMPORTANCE'(2,K'&XIMPORTANCE-2)           00247500
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG51P                 00247600
                     AIF   (K'&ZCGPR GT 2).ZG51Q                        00247700
                     AIF   ('&ZCGPR' EQ '0').ZG51Q                      00247800
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00247900
                     AIF   (T'&ZCGPR NE 'N').ZG51Q  INVALID REG NAME    00248000
.ZG51P               ANOP  ,                                            00248100
                     AIF   (T'&ZCGPR NE 'N').ZG51R  NON NUMERIC         00248200
                     AIF   ('&ZCGPR' LT '2').ZG51Q                      00248300
                     AIF   ('&ZCGPR' LE '12').ZG51R                     00248400
.ZG51Q               ANOP  ,                                            00248500
&ZMS                 SETC  '"IMPORTANCE='                               00248600
&ZMS                 SETC  '&ZMS.&IMPORTANCE"'                          00248700
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00248800
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00248900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00249000
.ZG51R               ANOP  ,                                            00249100
.*----------------------------------------------------------------***   00249200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00249300
                     AIF   (N'&RETCODE LE 1).ZG54A  CK NUM              00249400
&ZMS                 SETC  '"RETCODE='                                  00249500
&ZMS                 SETC  '&ZMS.&RETCODE"'                             00249600
&ZMS                 SETC  '&ZMS "RETCODE"'                             00249700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00249800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00249900
.ZG54A               ANOP  ,                                            00250000
.*-------------------------------------------------------------------   00250100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00250200
                     AIF   (K'&RETCODE(1) LE 0).ZG54C  NO PARM          00250300
&ZXRETCODE           SETC  'OUTPUT'    SET OUTPUT                       00250400
&XRETCODE            SETC  '&RETCODE(1)'        SET XVARIABLE           00250500
                     AIF   (N'&RETCODE GT 1).ZG54C                      00250600
&XRETCODE            SETC  '&RETCODE'  SET XVARIABLE                    00250700
.ZG54C               ANOP  ,                                            00250800
.*-------------------------------------------------------------------   00250900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00251000
                     AIF   (K'&ZXRETCODE LE 0).ZG54R  NOT I/O           00251100
                     AIF   ('&XRETCODE'(1,1) NE '(').ZG54R              00251200
&ZCGPR               SETC  '&XRETCODE'(2,K'&XRETCODE-2)                 00251300
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG54P                 00251400
                     AIF   (K'&ZCGPR GT 2).ZG54Q                        00251500
                     AIF   ('&ZCGPR' EQ '0').ZG54Q                      00251600
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00251700
                     AIF   (T'&ZCGPR NE 'N').ZG54Q  INVALID REG NAME    00251800
.ZG54P               ANOP  ,                                            00251900
                     AIF   (T'&ZCGPR NE 'N').ZG54R  NON NUMERIC         00252000
                     AIF   ('&ZCGPR' EQ '15').ZG54R                     00252100
                     AIF   ('&ZCGPR' LT '2').ZG54Q                      00252200
                     AIF   ('&ZCGPR' LE '12').ZG54R                     00252300
.ZG54Q               ANOP  ,                                            00252400
&ZMS                 SETC  '"RETCODE='                                  00252500
&ZMS                 SETC  '&ZMS.&RETCODE"'                             00252600
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00252700
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'     00252800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00252900
.ZG54R               ANOP  ,                                            00253000
.*----------------------------------------------------------------***   00253100
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00253200
                     AIF   (N'&RSNCODE LE 1).ZG57A  CK NUM              00253300
&ZMS                 SETC  '"RSNCODE='                                  00253400
&ZMS                 SETC  '&ZMS.&RSNCODE"'                             00253500
&ZMS                 SETC  '&ZMS "RSNCODE"'                             00253600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00253700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00253800
.ZG57A               ANOP  ,                                            00253900
.*-------------------------------------------------------------------   00254000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00254100
                     AIF   (K'&RSNCODE(1) LE 0).ZG57C  NO PARM          00254200
&ZXRSNCODE           SETC  'OUTPUT'    SET OUTPUT                       00254300
&XRSNCODE            SETC  '&RSNCODE(1)'        SET XVARIABLE           00254400
                     AIF   (N'&RSNCODE GT 1).ZG57C                      00254500
&XRSNCODE            SETC  '&RSNCODE'  SET XVARIABLE                    00254600
.ZG57C               ANOP  ,                                            00254700
.*-------------------------------------------------------------------   00254800
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00254900
                     AIF   (K'&ZXRSNCODE LE 0).ZG57R  NOT I/O           00255000
                     AIF   ('&XRSNCODE'(1,1) NE '(').ZG57R              00255100
&ZCGPR               SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                 00255200
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG57P                 00255300
                     AIF   (K'&ZCGPR GT 2).ZG57Q                        00255400
                     AIF   ('&ZCGPR' EQ '0').ZG57R                      00255500
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00255600
                     AIF   (T'&ZCGPR NE 'N').ZG57Q  INVALID REG NAME    00255700
.ZG57P               ANOP  ,                                            00255800
                     AIF   (T'&ZCGPR NE 'N').ZG57R  NON NUMERIC         00255900
                     AIF   ('&ZCGPR' EQ '0').ZG57R                      00256000
                     AIF   ('&ZCGPR' LT '2').ZG57Q                      00256100
                     AIF   ('&ZCGPR' LE '12').ZG57R                     00256200
.ZG57Q               ANOP  ,                                            00256300
&ZMS                 SETC  '"RSNCODE='                                  00256400
&ZMS                 SETC  '&ZMS.&RSNCODE"'                             00256500
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00256600
                     MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'      00256700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00256800
.ZG57R               ANOP  ,                                            00256900
.******************************************************************     00257000
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00257100
.******************************************************************     00257200
                     ACTR  10000                                        00257300
.*----------------------------------------------------------------***   00257400
.***AH.P02 EXTRA POSITIONALS                                            00257500
                     AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS         00257600
                     AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL         00257700
                     AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL     00257800
                     AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL      00257900
.ZGLISTX1            ANOP  ,                                            00258000
&ZCVAL               SETC  ''          ERROR FIELD                      00258100
&ZAWRK               SETA  0           POSITIONAL NUMBER                00258200
.ZGLIST2             ANOP  ,                                            00258300
&ZAWRK               SETA  &ZAWRK+1    NEXT POSITIONAL                  00258400
                     AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE         00258500
&ZCVAL               SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA              00258600
                     AGO   .ZGLIST2                                     00258700
.*                                                                      00258800
.ZGLIST3             ANOP  ,                                            00258900
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA           00259000
&ZMS                 SETC  'POSITIONAL ARGUMENT(S),'                    00259100
&ZMS                 SETC  '&ZMS "&ZCVAL"'                              00259200
&ZMS                 SETC  '&ZMS CANNOT BE USED.'                       00259300
&ZMS                 SETC  '&ZMS NO POSITIONAL ARGUMENTS'               00259400
                     MNOTE 8,' &ZMS ARE ALLOWED.'                       00259500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00259600
.ZGLISTX             ANOP  ,                                            00259700
&ZASYSLNDX           SETA  0                                            00259800
.*-------------------------------------------------------------------   00259900
.***AG.MF04 MF=(SLE)                                                    00260000
.ZGMFX               ANOP  ,           END OF FULL SYNTAX CHECK         00260100
.*******************************************************************    00260200
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00260300
.*******************************************************************    00260400
                     AIF   (&ZMACRET NE 0).ZLX2  ERROR DETECTED         00260500
.*******************************************************************    00260600
.***AE.01  START OF IWM4ECRE MACRO CODE                                 00260700
.*******************************************************************    00260800
                     LCLC  &M0M0001                 NAME                00260900
&M0M0001             SETC  '&XLABEL'                SET NAME            00261000
                     AIF   (K'&XLABEL NE 0).XLAB2                       00261100
&M0M0001             SETC  'M00M&SYSNDX'            DEFAULT NAME        00261200
.*                                                                      00261300
.XLAB2               ANOP  ,                                            00261400
                     AIF   ('&XMF' EQ 'L').XLAB3                        00261500
&M0M0001 DS    0H                             IWM4ECRE-2                00261600
.XLAB3               ANOP  ,                                            00261700
.*******************************************************************    00261800
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00261900
.*******************************************************************    00262000
              PUSH  PRINT                                               00262100
                     AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON   00262200
                     PRINT OFF         ++ PR01                          00262300
                     AGO   .ZPRNTXX                                     00262400
.ZPRINTX             PRINT ON                                           00262500
.ZPRNTXX             ANOP  ,                                            00262600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00262700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00262800
.********************************************************************   00262900
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00263000
.********************************************************************   00263100
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00263200
                      LCLA  &ZOPN1         INVOCATION INDEX             00263300
                      LCLC  &ZOPL(4095)    LABEL                        00263400
                      LCLC  &ZOPO(4095)    OPERATION                    00263500
                      LCLC  &ZOPV(4095)    VALUE                        00263600
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00263700
.*                                                                      00263800
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00263900
.******************************************************************     00264000
.***AL.L10 IWM4ECRE FMT=LIST MF=S!L PARAMETERS                          00264100
.******************************************************************     00264200
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00264300
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00264400
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00264500
&XMFATTR              SETC  '0D'                                        00264600
.*                                                                      00264700
&ZOPN                 SETA  &ZOPN+1                                     00264800
&ZOPL(&ZOPN)          SETC  ' '                                         00264900
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00265000
&ZOPV(&ZOPN)          SETC  '4,8'                                       00265100
&ZOPN                 SETA  &ZOPN+1                                     00265200
&ZOPL(&ZOPN)          SETC  ' '                                         00265300
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00265400
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00265500
&ZOPD(&ZOPN)          SETC  '++ IWM4ECRE ARG PARMS'                     00265600
.*                                                                      00265700
&ZOPN                 SETA  &ZOPN+1                                     00265800
&ZOPL(&ZOPN)          SETC  ' '                                         00265900
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00266000
&ZOPV(&ZOPN)          SETC  '1'                                         00266100
&ZOPD(&ZOPN)          SETC  ' '                                         00266200
.*                                                                      00266300
.ZLMFSL2              ANOP  ,                                           00266400
.*-------------------------------------------------------------------   00266500
.***AM.L00  IWM4ECRE FMT=LIST name                                      00266600
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00266700
&ZOPN                 SETA &ZOPN+1                                      00266800
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00266900
&ZOPO(&ZOPN)          SETC 'EQU'                                        00267000
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00267100
&ZOPD(&ZOPN)          SETC '++ IWM4ECRE NAME'                           00267200
.ZLMFSL2M             ANOP  ,                                           00267300
.*-------------------------------------------------------------------   00267400
.***AM.L01  IWM4ECRE FMT=LIST PARAMETERS                                00267500
&ZOPN                 SETA &ZOPN+1                                      00267600
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00267700
&ZOPO(&ZOPN)          SETC 'DS'                                         00267800
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00267900
&ZOPD(&ZOPN)          SETC '++ IWM4ECRE PARM LIST'                      00268000
.*-------------------------------------------------------------------   00268100
.***AM.L02 XVERSION XL1                                                 00268200
&ZOPN                 SETA &ZOPN+1                                      00268300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00268400
&ZOPO(&ZOPN)          SETC 'DS'                                         00268500
&ZOPV(&ZOPN)          SETC 'XL1'                                        00268600
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00268700
.*-------------------------------------------------------------------   00268800
.***AM.L03 XOPTIONS BL.8                                                00268900
&ZOPN                 SETA &ZOPN+1                                      00269000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOPTIONS'                         00269100
&ZOPO(&ZOPN)          SETC 'DS'                                         00269200
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00269300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00269400
.*                                                                      00269500
&ZOPN                 SETA  &ZOPN+1                                     00269600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_MONTKN64'                00269700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00269800
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00269900
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00270000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MONTKN64'                     00270100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00270200
.*                                                                      00270300
&ZOPN                 SETA  &ZOPN+1                                     00270400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_INSERVCLS'               00270500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00270600
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00270700
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00270800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).INSERVCLS'                    00270900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00271000
.*                                                                      00271100
&ZOPN                 SETA  &ZOPN+1                                     00271200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_SERVCLS'                 00271300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00271400
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00271500
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00271600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SERVCLS'                      00271700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00271800
.*                                                                      00271900
&ZOPN                 SETA  &ZOPN+1                                     00272000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_IMPORTANCE'              00272100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00272200
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00272300
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00272400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).IMPORTANCE'                   00272500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00272600
.*                                                                      00272700
&ZOPN                 SETA  &ZOPN+1                                     00272800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._IWM4ECRE'                        00272900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00273000
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00273100
&ZOPD(&ZOPN)          SETC  '++ MACUSED.'                               00273200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).IWM4ECRE'                     00273300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00273400
.*-------------------------------------------------------------------   00273500
.***AM.L09  XPLISTLEN XL2                                               00273600
&ZOPN                 SETA &ZOPN+1                                      00273700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        00273800
&ZOPO(&ZOPN)          SETC 'DS'                                         00273900
&ZOPV(&ZOPN)          SETC 'XL2'                                        00274000
&ZOPD(&ZOPN)          SETC '++ INPUT '                                  00274100
.*-------------------------------------------------------------------   00274200
.***AM.L09  XRSV0004 CL4                                                00274300
&ZOPN                 SETA &ZOPN+1                                      00274400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0004'                         00274500
&ZOPO(&ZOPN)          SETC 'DS'                                         00274600
&ZOPV(&ZOPN)          SETC 'CL4'                                        00274700
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00274800
.*-------------------------------------------------------------------   00274900
.***AM.L09  XRSV0008 CL4                                                00275000
&ZOPN                 SETA &ZOPN+1                                      00275100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0008'                         00275200
&ZOPO(&ZOPN)          SETC 'DS'                                         00275300
&ZOPV(&ZOPN)          SETC 'CL4'                                        00275400
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00275500
.*-------------------------------------------------------------------   00275600
.***AM.L09  XRSV000C CL4                                                00275700
&ZOPN                 SETA &ZOPN+1                                      00275800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV000C'                         00275900
&ZOPO(&ZOPN)          SETC 'DS'                                         00276000
&ZOPV(&ZOPN)          SETC 'CL4'                                        00276100
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00276200
.*-------------------------------------------------------------------   00276300
.***AM.L09  XARRIVALTIME BL.64                                          00276400
&ZOPN                 SETA &ZOPN+1                                      00276500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XARRIVALTIME'                     00276600
&ZOPO(&ZOPN)          SETC 'DS'                                         00276700
&ZOPV(&ZOPN)          SETC 'BL.64'                                      00276800
&ZOPD(&ZOPN)          SETC '++ &ZXARRIVALTIME '                         00276900
.*-------------------------------------------------------------------   00277000
.***AM.L09  XRSV0018 CL8                                                00277100
&ZOPN                 SETA &ZOPN+1                                      00277200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0018'                         00277300
&ZOPO(&ZOPN)          SETC 'DS'                                         00277400
&ZOPV(&ZOPN)          SETC 'CL8'                                        00277500
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00277600
.*-------------------------------------------------------------------   00277700
.***AM.L09  XFUNCTION_NAME CL8                                          00277800
&ZOPN                 SETA &ZOPN+1                                      00277900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFUNCTION_NAME'                   00278000
&ZOPO(&ZOPN)          SETC 'DS'                                         00278100
&ZOPV(&ZOPN)          SETC 'CL8'                                        00278200
&ZOPD(&ZOPN)          SETC '++ &ZXFUNCTION_NAME '                       00278300
.*-------------------------------------------------------------------   00278400
.***AM.L09  XETOKEN CL8                                                 00278500
&ZOPN                 SETA &ZOPN+1                                      00278600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XETOKEN'                          00278700
&ZOPO(&ZOPN)          SETC 'DS'                                         00278800
&ZOPV(&ZOPN)          SETC 'CL8'                                        00278900
&ZOPD(&ZOPN)          SETC '++ &ZXETOKEN '                              00279000
.*-------------------------------------------------------------------   00279100
.***AM.L09  XRSV0030 CL4                                                00279200
&ZOPN                 SETA &ZOPN+1                                      00279300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0030'                         00279400
&ZOPO(&ZOPN)          SETC 'DS'                                         00279500
&ZOPV(&ZOPN)          SETC 'CL4'                                        00279600
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00279700
.*-------------------------------------------------------------------   00279800
.***AM.L03 XTYPE_OPTIONS BL.8                                           00279900
&ZOPN                 SETA &ZOPN+1                                      00280000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTYPE_OPTIONS'                    00280100
&ZOPO(&ZOPN)          SETC 'DS'                                         00280200
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00280300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00280400
.*                                                                      00280500
&ZOPN                 SETA  &ZOPN+1                                     00280600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_INDEPENDENT'               00280700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00280800
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00280900
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00281000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).INDEPENDENT'                  00281100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00281200
.*                                                                      00281300
&ZOPN                 SETA  &ZOPN+1                                     00281400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_DEPENDENT'                 00281500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00281600
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00281700
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00281800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DEPENDENT'                    00281900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00282000
.*                                                                      00282100
&ZOPN                 SETA  &ZOPN+1                                     00282200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_MONENV'                    00282300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00282400
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00282500
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00282600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MONENV'                       00282700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00282800
.*                                                                      00282900
&ZOPN                 SETA  &ZOPN+1                                     00283000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XACCESS_PRIMARY'                 00283100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00283200
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00283300
&ZOPD(&ZOPN)          SETC  '++ XACCESS.'                               00283400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).PRIMARY'                      00283500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00283600
.*                                                                      00283700
&ZOPN                 SETA  &ZOPN+1                                     00283800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XACCESS_HOME'                    00283900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00284000
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00284100
&ZOPD(&ZOPN)          SETC  '++ XACCESS.'                               00284200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).HOME'                         00284300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00284400
.*                                                                      00284500
&ZOPN                 SETA  &ZOPN+1                                     00284600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_WORKDEPENDENT'             00284700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00284800
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00284900
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00285000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).WORKDEPENDENT'                00285100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00285200
.*-------------------------------------------------------------------   00285300
.***AM.L09  XRSV0035 CL3                                                00285400
&ZOPN                 SETA &ZOPN+1                                      00285500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0035'                         00285600
&ZOPO(&ZOPN)          SETC 'DS'                                         00285700
&ZOPV(&ZOPN)          SETC 'CL3'                                        00285800
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00285900
.*-------------------------------------------------------------------   00286000
.***AM.L09  XMONTKN BL.32                                               00286100
&ZOPN                 SETA &ZOPN+1                                      00286200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMONTKN'                          00286300
&ZOPO(&ZOPN)          SETC 'DS'                                         00286400
&ZOPV(&ZOPN)          SETC 'BL.32'                                      00286500
&ZOPD(&ZOPN)          SETC '++ &ZXMONTKN '                              00286600
.*-------------------------------------------------------------------   00286700
.***AM.L03 X_OPTIONS BL.8                                               00286800
&ZOPN                 SETA &ZOPN+1                                      00286900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._X_OPTIONS'                        00287000
&ZOPO(&ZOPN)          SETC 'DS'                                         00287100
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00287200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00287300
.*                                                                      00287400
&ZOPN                 SETA  &ZOPN+1                                     00287500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XEXSTARTDEFER_YES'               00287600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00287700
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00287800
&ZOPD(&ZOPN)          SETC  '++ XEXSTARTDEFER.'                         00287900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00288000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00288100
.*                                                                      00288200
&ZOPN                 SETA  &ZOPN+1                                     00288300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XESTRT_EXPLICIT'                 00288400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00288500
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00288600
&ZOPD(&ZOPN)          SETC  '++ XESTRT.'                                00288700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).EXPLICIT'                     00288800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00288900
.*                                                                      00289000
&ZOPN                 SETA  &ZOPN+1                                     00289100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XESTRT_EXPLICIT_SINGLE'          00289200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00289300
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00289400
&ZOPD(&ZOPN)          SETC  '++ XESTRT.'                                00289500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).EXPLICIT_SINGLE'              00289600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00289700
.*                                                                      00289800
&ZOPN                 SETA  &ZOPN+1                                     00289900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XESTRT_NEVER'                    00290000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00290100
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00290200
&ZOPD(&ZOPN)          SETC  '++ XESTRT.'                                00290300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NEVER'                        00290400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00290500
.*-------------------------------------------------------------------   00290600
.***AM.L09  XRSV003D CL3                                                00290700
&ZOPN                 SETA &ZOPN+1                                      00290800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV003D'                         00290900
&ZOPO(&ZOPN)          SETC 'DS'                                         00291000
&ZOPV(&ZOPN)          SETC 'CL3'                                        00291100
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00291200
.*-------------------------------------------------------------------   00291300
.***AM.L09  XRSV0040 CL8                                                00291400
&ZOPN                 SETA &ZOPN+1                                      00291500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0040'                         00291600
&ZOPO(&ZOPN)          SETC 'DS'                                         00291700
&ZOPV(&ZOPN)          SETC 'CL8'                                        00291800
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00291900
.*-------------------------------------------------------------------   00292000
.***AM.L09 ADDR64 XCLSFY AD                                             00292100
&ZOPN                 SETA &ZOPN+1                                      00292200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCLSFY_ADDR64'                    00292300
&ZOPO(&ZOPN)          SETC 'DS'                                         00292400
&ZOPV(&ZOPN)          SETC 'AD'                                         00292500
&ZOPD(&ZOPN)          SETC '++ &ZXCLSFY ADDR64'                         00292600
.*-------------------------------------------------------------------   00292700
.***AM.L09 ADDR64 XWORKREQ_HDL AD                                       00292800
&ZOPN                 SETA &ZOPN+1                                      00292900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XWORKREQ_HDL_ADDR64'              00293000
&ZOPO(&ZOPN)          SETC 'DS'                                         00293100
&ZOPV(&ZOPN)          SETC 'AD'                                         00293200
&ZOPD(&ZOPN)          SETC '++ &ZXWORKREQ_HDL ADDR64'                   00293300
.*-------------------------------------------------------------------   00293400
.***AM.MLM2 SAVED LOCATION COUNTER                                      00293500
                      AIF  (&XPLISTVER GE 2).ZL34LA                     00293600
                      AIF  ('&ZENDBASEPL' NE '').ZL34LA                 00293700
&ZENDBASEPL           SETC 'YES'                                        00293800
&ZOPN                 SETA &ZOPN+1                                      00293900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00294000
&ZOPO(&ZOPN)          SETC 'EQU'                                        00294100
&ZOPV(&ZOPN)          SETC '*'                                          00294200
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00294300
.ZL34LA               ANOP  ,                                           00294400
.*-------------------------------------------------------------------   00294500
.***AM.LVER1                                                            00294600
                      AIF  (&XPLISTVER LT 2).ZL34L                      00294700
.*-------------------------------------------------------------------   00294800
.*-------------------------------------------------------------------   00294900
.***AM.L09  XSERVCLS F                                                  00295000
&ZOPN                 SETA &ZOPN+1                                      00295100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSERVCLS'                         00295200
&ZOPO(&ZOPN)          SETC 'DS'                                         00295300
&ZOPV(&ZOPN)          SETC 'F'                                          00295400
&ZOPD(&ZOPN)          SETC '++ &ZXSERVCLS '                             00295500
.*-------------------------------------------------------------------   00295600
.***AM.LVER2                                                            00295700
.ZL34L                ANOP  ,                                           00295800
.*-------------------------------------------------------------------   00295900
.*-------------------------------------------------------------------   00296000
.***AM.LVER1                                                            00296100
                      AIF  (&XPLISTVER LT 2).ZL35L                      00296200
.*-------------------------------------------------------------------   00296300
.*-------------------------------------------------------------------   00296400
.***AM.L09  XINSERVCLS F                                                00296500
&ZOPN                 SETA &ZOPN+1                                      00296600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XINSERVCLS'                       00296700
&ZOPO(&ZOPN)          SETC 'DS'                                         00296800
&ZOPV(&ZOPN)          SETC 'F'                                          00296900
&ZOPD(&ZOPN)          SETC '++ &ZXINSERVCLS '                           00297000
.*-------------------------------------------------------------------   00297100
.***AM.LVER2                                                            00297200
.ZL35L                ANOP  ,                                           00297300
.*-------------------------------------------------------------------   00297400
.*-------------------------------------------------------------------   00297500
.***AM.LVER1                                                            00297600
                      AIF  (&XPLISTVER LT 2).ZL36L                      00297700
.*-------------------------------------------------------------------   00297800
.*-------------------------------------------------------------------   00297900
.***AM.L09  XMONTKN64 BL.64                                             00298000
&ZOPN                 SETA &ZOPN+1                                      00298100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMONTKN64'                        00298200
&ZOPO(&ZOPN)          SETC 'DS'                                         00298300
&ZOPV(&ZOPN)          SETC 'BL.64'                                      00298400
&ZOPD(&ZOPN)          SETC '++ &ZXMONTKN64 '                            00298500
.*-------------------------------------------------------------------   00298600
.***AM.LVER2                                                            00298700
.ZL36L                ANOP  ,                                           00298800
.*-------------------------------------------------------------------   00298900
.*-------------------------------------------------------------------   00299000
.***AM.MLM2 SAVED LOCATION COUNTER                                      00299100
                      AIF  (&XPLISTVER GE 1).ZL37LA                     00299200
                      AIF  ('&ZENDBASEPL' NE '').ZL37LA                 00299300
&ZENDBASEPL           SETC 'YES'                                        00299400
&ZOPN                 SETA &ZOPN+1                                      00299500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00299600
&ZOPO(&ZOPN)          SETC 'EQU'                                        00299700
&ZOPV(&ZOPN)          SETC '*'                                          00299800
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00299900
.ZL37LA               ANOP  ,                                           00300000
.*-------------------------------------------------------------------   00300100
.***AM.LVER1                                                            00300200
                      AIF  (&XPLISTVER LT 1).ZL37L                      00300300
.*-------------------------------------------------------------------   00300400
.*-------------------------------------------------------------------   00300500
.***AM.MLM1 SAVED LOCATION COUNTER                                      00300600
                      AIF  ('&ZENDBASEPL' NE '').ZL37LB                 00300700
&ZENDBASEPL           SETC 'YES'                                        00300800
&ZOPN                 SETA &ZOPN+1                                      00300900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00301000
&ZOPO(&ZOPN)          SETC 'EQU'                                        00301100
&ZOPV(&ZOPN)          SETC '*'                                          00301200
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00301300
.ZL37LB               ANOP  ,                                           00301400
.*-------------------------------------------------------------------   00301500
.***AM.PJR1 DEFINED ON XRSV0030                                         00301600
&ZOPN                 SETA &ZOPN+1                                      00301700
&ZOPL(&ZOPN)          SETC ' '                                          00301800
&ZOPO(&ZOPN)          SETC 'ORG'                                        00301900
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+48'                               00302000
&ZOPD(&ZOPN)          SETC ' '                                          00302100
.*-------------------------------------------------------------------   00302200
.***AM.LVER2                                                            00302300
.ZL37L                ANOP  ,                                           00302400
.*-------------------------------------------------------------------   00302500
.*-------------------------------------------------------------------   00302600
.***AM.LVER1                                                            00302700
                      AIF  (&XPLISTVER LT 1).ZL38L                      00302800
.*-------------------------------------------------------------------   00302900
.*-------------------------------------------------------------------   00303000
.***AM.L09  XIMPORTANCE XL2                                             00303100
&ZOPN                 SETA &ZOPN+1                                      00303200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XIMPORTANCE'                      00303300
&ZOPO(&ZOPN)          SETC 'DS'                                         00303400
&ZOPV(&ZOPN)          SETC 'XL2'                                        00303500
&ZOPD(&ZOPN)          SETC '++ &ZXIMPORTANCE '                          00303600
.*-------------------------------------------------------------------   00303700
.***AM.LVER2                                                            00303800
.ZL38L                ANOP  ,                                           00303900
.*-------------------------------------------------------------------   00304000
.*-------------------------------------------------------------------   00304100
.***AM.LVER1                                                            00304200
                      AIF  (&XPLISTVER LT 1).ZL39L                      00304300
.*-------------------------------------------------------------------   00304400
.*-------------------------------------------------------------------   00304500
.***AM.L09  XRSV0032 CL2                                                00304600
&ZOPN                 SETA &ZOPN+1                                      00304700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0032'                         00304800
&ZOPO(&ZOPN)          SETC 'DS'                                         00304900
&ZOPV(&ZOPN)          SETC 'CL2'                                        00305000
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00305100
.*-------------------------------------------------------------------   00305200
.***AM.LVER2                                                            00305300
.ZL39L                ANOP  ,                                           00305400
.*-------------------------------------------------------------------   00305500
&ZOPN                 SETA &ZOPN+1                                      00305600
&ZOPL(&ZOPN)          SETC ' '                                          00305700
&ZOPO(&ZOPN)          SETC 'ORG'                                        00305800
&ZOPV(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00305900
&ZOPD(&ZOPN)          SETC 'RESET LOCATION COUNTER'                     00306000
.*-------------------------------------------------------------------   00306100
.***AM.L10 END OF IWM4ECRE LIST PARAMETERS                              00306200
&ZOPN                 SETA &ZOPN+1                                      00306300
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00306400
&ZOPO(&ZOPN)          SETC 'EQU'                                        00306500
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00306600
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00306700
.*                                                                      00306800
&ZOPN                 SETA &ZOPN+1                                      00306900
&ZOPL(&ZOPN)          SETC ' '                                          00307000
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00307100
&ZOPV(&ZOPN)          SETC '1'                                          00307200
&ZOPD(&ZOPN)          SETC ' '                                          00307300
.*-------------------------------------------------------------------   00307400
.***AL.L12 IWM4ECRE FMT=LIST MF=S!L PARAMETERS                          00307500
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00307600
.*                                                                      00307700
&ZOPN                 SETA  &ZOPN+1                                     00307800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00307900
&ZOPO(&ZOPN)          SETC  'DC'                                        00308000
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00308100
&ZOPD(&ZOPN)          SETC  '++ IWM4ECRE ARG PARMS'                     00308200
.*                                                                      00308300
.ZLMFSLX              ANOP  ,                                           00308400
.*-------------------------------------------------------------------   00308500
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00308600
&ZPLLEN               SETA 88                                           00308700
.*                                                                      00308800
                      AIF  (&XPLISTVER LT 2).ZLLEN2Z                    00308900
&ZPLLEN               SETA 104                                          00309000
.ZLLEN2Z              ANOP  ,                                           00309100
.*                                                                      00309200
.******************************************************************     00309300
.***AI.L01 IWM4ECRE FMT=LIST FILL IN PARAMETER AREA                     00309400
.******************************************************************     00309500
                      ACTR  10000                                       00309600
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00309700
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00309800
&ZCVAL                SETC  'LAE'          XAX MODE                     00309900
.ZIMFXA               ANOP ,                                            00310000
.*                                                                      00310100
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00310200
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00310300
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00310400
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00310500
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00310600
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00310700
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00310800
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00310900
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00311000
&ZOPN                 SETA  &ZOPN+1                                     00311100
&ZOPL(&ZOPN)          SETC  ' '                                         00311200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00311300
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00311400
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00311500
                      AGO   .ZIMFNX                                     00311600
.*                                                                      00311700
.ZIMFN2               ANOP ,                                            00311800
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00311900
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00312000
&ZOPN                 SETA  &ZOPN+1                                     00312100
&ZOPL(&ZOPN)          SETC  ' '                                         00312200
&ZOPO(&ZOPN)          SETC  'LAE'                                       00312300
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00312400
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00312500
                      AGO   .ZIMFNX                                     00312600
.ZIMFNX1              ANOP ,                                            00312700
&ZOPN                 SETA  &ZOPN+1                                     00312800
&ZOPL(&ZOPN)          SETC  ' '                                         00312900
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00313000
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00313100
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00313200
.ZIMFNX               ANOP ,                                            00313300
.********************************************************************   00313400
.***AI.L02 IWM4ECRE FMT=LIST INITIALIZE PARAMETER AREA                  00313500
.********************************************************************   00313600
.***AI.L03 MF=(SLE)                                                     00313700
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00313800
.*                                                                      00313900
&ZOPN                 SETA  &ZOPN+1                                     00314000
&ZOPL(&ZOPN)          SETC  ' '                                         00314100
&ZOPO(&ZOPN)          SETC  'XC'                                        00314200
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00314300
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00314400
.ZIMFLX               ANOP  ,                                           00314500
.*-------------------------------------------------------------------   00314600
.***AI.L04A XVERSION XL1                                                00314700
                      AIF   (&XPLISTVER EQ 0).ZIMFVW                    00314800
&ZOPN                 SETA  &ZOPN+1                                     00314900
&ZOPL(&ZOPN)          SETC  ' '                                         00315000
&ZOPO(&ZOPN)          SETC  'MVI'                                       00315100
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00315200
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00315300
.ZIMFVW               ANOP  ,                                           00315400
.*-------------------------------------------------------------------   00315500
.***AI.L05 XOPTIONS BL1                                                 00315600
&ZW                   SETC  ''                                          00315700
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00315800
.*-------------------------------------------------------------------   00315900
.***AI.L08 XOPTIONS "MONTKN64"                                          00316000
.***      BL1'XXX1XXXX'                                                 00316100
         AIF   ('&MONTKN64' EQ '').ZI3A                                 00316200
&ZW                   SETC  '&ZW.0001'                                  00316300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00316400
                      AGO   .ZI3C                                       00316500
.*                                                                      00316600
.ZI3A                 ANOP  ,                                           00316700
&ZW                   SETC  '&ZW.0000'                                  00316800
.ZI3C                 ANOP  ,                                           00316900
.*-------------------------------------------------------------------   00317000
.***AI.L08 XOPTIONS "INSERVCLS"                                         00317100
.***      BL1'XXXX1XXX'                                                 00317200
         AIF   ('&INSERVCLS' EQ '').ZI4A                                00317300
&ZW                   SETC  '&ZW.1'                                     00317400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00317500
                      AGO   .ZI4C                                       00317600
.*                                                                      00317700
.ZI4A                 ANOP  ,                                           00317800
&ZW                   SETC  '&ZW.0'                                     00317900
.ZI4C                 ANOP  ,                                           00318000
.*-------------------------------------------------------------------   00318100
.***AI.L08 XOPTIONS "SERVCLS"                                           00318200
.***      BL1'XXXXX1XX'                                                 00318300
         AIF   ('&SERVCLS' EQ '').ZI5A                                  00318400
&ZW                   SETC  '&ZW.1'                                     00318500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00318600
                      AGO   .ZI5C                                       00318700
.*                                                                      00318800
.ZI5A                 ANOP  ,                                           00318900
&ZW                   SETC  '&ZW.0'                                     00319000
.ZI5C                 ANOP  ,                                           00319100
.*-------------------------------------------------------------------   00319200
.***AI.L08 XOPTIONS "IMPORTANCE"                                        00319300
.***      BL1'XXXXXX1X'                                                 00319400
         AIF   ('&IMPORTANCE' EQ '').ZI6A                               00319500
         AIF   ('&IMPORTANCE' EQ '').ZI6A                               00319600
&ZW                   SETC  '&ZW.1'                                     00319700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00319800
                      AGO   .ZI6C                                       00319900
.*                                                                      00320000
.ZI6A                 ANOP  ,                                           00320100
&ZW                   SETC  '&ZW.0'                                     00320200
.ZI6C                 ANOP  ,                                           00320300
.*-------------------------------------------------------------------   00320400
.***AI.L08 XOPTIONS "IWM4ECRE"                                          00320500
.***      BL1'XXXXXXX1'                                                 00320600
&ZW                   SETC  '&ZW.1'                                     00320700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00320800
.*-------------------------------------------------------------------   00320900
.***AI.L11 XOPTIONS BL1                                                 00321000
                      AIF   ('&ZCLNG' NE 'YES').ZI7E  ALL ZERO BITS     00321100
&ZOPN                 SETA  &ZOPN+1                                     00321200
&ZOPL(&ZOPN)          SETC  ' '                                         00321300
&ZOPO(&ZOPN)          SETC  'OI'                                        00321400
&ZOPV(&ZOPN)          SETC  '1(1),B''&ZW'''                             00321500
&ZOPD(&ZOPN)          SETC  '++ 80 BL1'                                 00321600
.ZI7E                 ANOP  ,                                           00321700
.*-------------------------------------------------------------------   00321800
.***AI.L04 XPLISTLEN XL2                                                00321900
&ZOPN                 SETA  &ZOPN+1                                     00322000
&ZOPL(&ZOPN)          SETC  ' '                                         00322100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00322200
&ZOPV(&ZOPN)          SETC  '2(2,1),=AL2(&ZPLLEN)'                      00322300
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    00322400
.*-------------------------------------------------------------------   00322500
.***AI.L25  XARRIVALTIME XL8                                            00322600
                      AIF   ('&ZXARRIVALTIME' EQ '').ZI12E              00322700
                      AIF   ('&ZXARRIVALTIME' EQ 'OUTPUT').ZI12E        00322800
&ZCGPR                SETC  '&XARRIVALTIME'                             00322900
.*                                                                      00323000
                      AIF   ('&XARRIVALTIME'(1,1) NE '(').ZI12B         00323100
&ZCGPR   SETC  '0('.'&XARRIVALTIME'(2,K'&XARRIVALTIME-2).')'            00323200
                      AGO   .ZI12D                                      00323300
.ZI12B                ANOP  ,                                           00323400
.*                                                                      00323500
&ZC                   SETC  '&XARRIVALTIME'(1,1)                        00323600
                      AIF   (T'&ZC NE 'N').ZI12D                        00323700
&ZC                   SETC  '&XARRIVALTIME'                             00323800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI12D               00323900
&ZCGPR                SETC  '=BL8''&XARRIVALTIME'''                     00324000
.*                                                                      00324100
.ZI12D                ANOP  ,                                           00324200
.*                                                                      00324300
&ZOPN                 SETA  &ZOPN+1                                     00324400
&ZOPL(&ZOPN)          SETC  ' '                                         00324500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00324600
&ZOPV(&ZOPN)          SETC  '16(8,1),&ZCGPR'                            00324700
&ZOPD(&ZOPN)          SETC  '++ &ZXARRIVALTIME XARRIVALTIME'            00324800
.*                                                                      00324900
.ZI12E                ANOP  ,                                           00325000
.*-------------------------------------------------------------------   00325100
.***AI.L25  XFUNCTION_NAME CL8                                          00325200
                      AIF   ('&ZXFUNCTION_NAME' EQ '').ZI14E            00325300
                      AIF   ('&ZXFUNCTION_NAME' EQ 'OUTPUT').ZI14E      00325400
&ZCGPR                SETC  '&XFUNCTION_NAME'                           00325500
.*                                                                      00325600
                      AIF   ('&XFUNCTION_NAME'(1,1) NE '(').ZI14B       00325700
&ZCGPR   SETC  '0('.'&XFUNCTION_NAME'(2,K'&XFUNCTION_NAME-2).')'        00325800
.ZI14B                ANOP  ,                                           00325900
.*                                                                      00326000
&ZOPN                 SETA  &ZOPN+1                                     00326100
&ZOPL(&ZOPN)          SETC  ' '                                         00326200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00326300
&ZOPV(&ZOPN)          SETC  '32(8,1),&ZCGPR'                            00326400
&ZOPD(&ZOPN)          SETC  '++ &ZXFUNCTION_NAME XFUNCTION_NAME'        00326500
.*                                                                      00326600
.ZI14E                ANOP  ,                                           00326700
.*-------------------------------------------------------------------   00326800
.***AI.L05 XTYPE_OPTIONS BL1                                            00326900
&ZW                   SETC  ''                                          00327000
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00327100
.*-------------------------------------------------------------------   00327200
.***AI.L08 XTYPE_OPTIONS "INDEPENDENT"                                  00327300
.***      BL1'1XXXXXXX'                                                 00327400
         AIF   ('&XTYPE' NE 'INDEPENDENT').ZI18A                        00327500
&ZW                   SETC  '&ZW.1'                                     00327600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00327700
                      AGO   .ZI18C                                      00327800
.*                                                                      00327900
.ZI18A                ANOP  ,                                           00328000
&ZW                   SETC  '&ZW.0'                                     00328100
.ZI18C                ANOP  ,                                           00328200
.*-------------------------------------------------------------------   00328300
.***AI.L08 XTYPE_OPTIONS "DEPENDENT"                                    00328400
.***      BL1'X1XXXXXX'                                                 00328500
         AIF   ('&XTYPE' NE 'DEPENDENT').ZI19A                          00328600
&ZW                   SETC  '&ZW.1'                                     00328700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00328800
                      AGO   .ZI19C                                      00328900
.*                                                                      00329000
.ZI19A                ANOP  ,                                           00329100
&ZW                   SETC  '&ZW.0'                                     00329200
.ZI19C                ANOP  ,                                           00329300
.*-------------------------------------------------------------------   00329400
.***AI.L08 XTYPE_OPTIONS "MONENV"                                       00329500
.***      BL1'XX1XXXXX'                                                 00329600
         AIF   ('&XTYPE' NE 'MONENV').ZI20A                             00329700
&ZW                   SETC  '&ZW.1'                                     00329800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00329900
                      AGO   .ZI20C                                      00330000
.*                                                                      00330100
.ZI20A                ANOP  ,                                           00330200
&ZW                   SETC  '&ZW.0'                                     00330300
.ZI20C                ANOP  ,                                           00330400
.*-------------------------------------------------------------------   00330500
.***AI.L08 XTYPE_OPTIONS "PRIMARY"                                      00330600
.***      BL1'XXX1XXXX'                                                 00330700
         AIF   ('&XACCESS' NE 'PRIMARY').ZI21A                          00330800
&ZW                   SETC  '&ZW.1'                                     00330900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00331000
                      AGO   .ZI21C                                      00331100
.*                                                                      00331200
.ZI21A                ANOP  ,                                           00331300
&ZW                   SETC  '&ZW.0'                                     00331400
.ZI21C                ANOP  ,                                           00331500
.*-------------------------------------------------------------------   00331600
.***AI.L08 XTYPE_OPTIONS "HOME"                                         00331700
.***      BL1'XXXX1XXX'                                                 00331800
         AIF   ('&XACCESS' NE 'HOME').ZI22A                             00331900
&ZW                   SETC  '&ZW.1'                                     00332000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00332100
                      AGO   .ZI22C                                      00332200
.*                                                                      00332300
.ZI22A                ANOP  ,                                           00332400
&ZW                   SETC  '&ZW.0'                                     00332500
.ZI22C                ANOP  ,                                           00332600
.*-------------------------------------------------------------------   00332700
.***AI.L08 XTYPE_OPTIONS "WORKDEPENDENT"                                00332800
.***      BL1'XXXXX1XX'                                                 00332900
         AIF   ('&XTYPE' NE 'WORKDEPENDENT').ZI23A                      00333000
&ZW                   SETC  '&ZW.100'                                   00333100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00333200
                      AGO   .ZI23C                                      00333300
.*                                                                      00333400
.ZI23A                ANOP  ,                                           00333500
&ZW                   SETC  '&ZW.000'                                   00333600
.ZI23C                ANOP  ,                                           00333700
.*-------------------------------------------------------------------   00333800
.***AI.L11 XTYPE_OPTIONS BL1                                            00333900
                      AIF   ('&ZCLNG' NE 'YES').ZI23E  ALL ZERO BITS    00334000
&ZOPN                 SETA  &ZOPN+1                                     00334100
&ZOPL(&ZOPN)          SETC  ' '                                         00334200
&ZOPO(&ZOPN)          SETC  'OI'                                        00334300
&ZOPV(&ZOPN)          SETC  '52(1),B''&ZW'''                            00334400
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00334500
.ZI23E                ANOP  ,                                           00334600
.*-------------------------------------------------------------------   00334700
.***AI.L25  XMONTKN XL4                                                 00334800
                      AIF   ('&ZXMONTKN' EQ '').ZI25E                   00334900
                      AIF   ('&ZXMONTKN' EQ 'OUTPUT').ZI25E             00335000
&ZCGPR                SETC  '&XMONTKN'                                  00335100
.*                                                                      00335200
                      AIF   ('&XMONTKN'(1,1) NE '(').ZI25B              00335300
&ZCGPR   SETC  '0('.'&XMONTKN'(2,K'&XMONTKN-2).')'                      00335400
                      AGO   .ZI25D                                      00335500
.ZI25B                ANOP  ,                                           00335600
.*                                                                      00335700
&ZC                   SETC  '&XMONTKN'(1,1)                             00335800
                      AIF   (T'&ZC NE 'N').ZI25D                        00335900
&ZC                   SETC  '&XMONTKN'                                  00336000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI25D               00336100
&ZCGPR                SETC  '=BL4''&XMONTKN'''                          00336200
.*                                                                      00336300
.ZI25D                ANOP  ,                                           00336400
.*                                                                      00336500
&ZOPN                 SETA  &ZOPN+1                                     00336600
&ZOPL(&ZOPN)          SETC  ' '                                         00336700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00336800
&ZOPV(&ZOPN)          SETC  '56(4,1),&ZCGPR'                            00336900
&ZOPD(&ZOPN)          SETC  '++ &ZXMONTKN XMONTKN'                      00337000
.*                                                                      00337100
.ZI25E                ANOP  ,                                           00337200
.*-------------------------------------------------------------------   00337300
.***AI.L05 X_OPTIONS BL1                                                00337400
&ZW                   SETC  ''                                          00337500
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00337600
.*-------------------------------------------------------------------   00337700
.***AI.L08 X_OPTIONS "YES"                                              00337800
.***      BL1'1XXXXXXX'                                                 00337900
         AIF   ('&XEXSTARTDEFER' NE 'YES').ZI27A                        00338000
&ZW                   SETC  '&ZW.1'                                     00338100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00338200
                      AGO   .ZI27C                                      00338300
.*                                                                      00338400
.ZI27A                ANOP  ,                                           00338500
&ZW                   SETC  '&ZW.0'                                     00338600
.ZI27C                ANOP  ,                                           00338700
.*-------------------------------------------------------------------   00338800
.***AI.L08 X_OPTIONS "EXPLICIT"                                         00338900
.***      BL1'X1XXXXXX'                                                 00339000
         AIF   ('&XESTRT' NE 'EXPLICIT').ZI28A                          00339100
&ZW                   SETC  '&ZW.1'                                     00339200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00339300
                      AGO   .ZI28C                                      00339400
.*                                                                      00339500
.ZI28A                ANOP  ,                                           00339600
&ZW                   SETC  '&ZW.0'                                     00339700
.ZI28C                ANOP  ,                                           00339800
.*-------------------------------------------------------------------   00339900
.***AI.L08 X_OPTIONS "EXPLICIT_SINGLE"                                  00340000
.***      BL1'XX1XXXXX'                                                 00340100
         AIF   ('&XESTRT' NE 'EXPLICIT_SINGLE').ZI29A                   00340200
&ZW                   SETC  '&ZW.1'                                     00340300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00340400
                      AGO   .ZI29C                                      00340500
.*                                                                      00340600
.ZI29A                ANOP  ,                                           00340700
&ZW                   SETC  '&ZW.0'                                     00340800
.ZI29C                ANOP  ,                                           00340900
.*-------------------------------------------------------------------   00341000
.***AI.L08 X_OPTIONS "NEVER"                                            00341100
.***      BL1'XXX1XXXX'                                                 00341200
         AIF   ('&XESTRT' NE 'NEVER').ZI30A                             00341300
&ZW                   SETC  '&ZW.10000'                                 00341400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00341500
                      AGO   .ZI30C                                      00341600
.*                                                                      00341700
.ZI30A                ANOP  ,                                           00341800
&ZW                   SETC  '&ZW.00000'                                 00341900
.ZI30C                ANOP  ,                                           00342000
.*-------------------------------------------------------------------   00342100
.***AI.L11 X_OPTIONS BL1                                                00342200
                      AIF   ('&ZCLNG' NE 'YES').ZI30E  ALL ZERO BITS    00342300
&ZOPN                 SETA  &ZOPN+1                                     00342400
&ZOPL(&ZOPN)          SETC  ' '                                         00342500
&ZOPO(&ZOPN)          SETC  'OI'                                        00342600
&ZOPV(&ZOPN)          SETC  '60(1),B''&ZW'''                            00342700
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00342800
.ZI30E                ANOP  ,                                           00342900
.*-------------------------------------------------------------------   00343000
.***AI.L19 ADDR64 XCLSFY AD                                             00343100
                      AIF   ('&ZXCLSFY' EQ '').ZI33H                    00343200
&ZCLNG                SETC  '&XCLSFY'                                   00343300
&ZCGPR                SETC  '14'                                        00343400
         AIF   ('&XCLSFY'(1,1) EQ '(').ZI33F  IN GPR                    00343500
.*                                                                      00343600
&ZOPN                 SETA  &ZOPN+1                                     00343700
&ZOPL(&ZOPN)          SETC  ' '                                         00343800
&ZOPO(&ZOPN)          SETC  'LA'                                        00343900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00344000
&ZOPD(&ZOPN)          SETC  '++ &ZXCLSFY XCLSFY'                        00344100
.*                                                                      00344200
                      AGO   .ZI33G                                      00344300
.*                                                                      00344400
.ZI33F                ANOP  ,                                           00344500
&ZCGPR   SETC  '&XCLSFY'(2,K'&XCLSFY-2)                                 00344600
.*                                                                      00344700
.ZI33G                ANOP  ,                                           00344800
                      AIF   ('&SYSAM64' EQ 'YES').ZI33H1A               00344900
.*                                                                      00345000
&ZOPN                 SETA  &ZOPN+1                                     00345100
&ZOPL(&ZOPN)          SETC  ' '                                         00345200
&ZOPO(&ZOPN)          SETC  'ST'                                        00345300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+72(,1)'                           00345400
&ZOPD(&ZOPN)          SETC  '++ &ZXCLSFY XCLSFY'                        00345500
.*                                                                      00345600
                      AGO   .ZI33H                                      00345700
.ZI33H1A              ANOP  ,                                           00345800
.*                                                                      00345900
&ZOPN                 SETA  &ZOPN+1                                     00346000
&ZOPL(&ZOPN)          SETC  ' '                                         00346100
&ZOPO(&ZOPN)          SETC  'STG'                                       00346200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,72(,1)'                             00346300
&ZOPD(&ZOPN)          SETC  '++ &ZXCLSFY XCLSFY'                        00346400
.*                                                                      00346500
.ZI33H                ANOP  ,                                           00346600
.*-------------------------------------------------------------------   00346700
.***AI.L19 ADDR64 XWORKREQ_HDL AD                                       00346800
                      AIF   ('&ZXWORKREQ_HDL' EQ '').ZI34H              00346900
&ZCLNG                SETC  '&XWORKREQ_HDL'                             00347000
&ZCGPR                SETC  '14'                                        00347100
         AIF   ('&XWORKREQ_HDL'(1,1) EQ '(').ZI34F  IN GPR              00347200
.*                                                                      00347300
&ZOPN                 SETA  &ZOPN+1                                     00347400
&ZOPL(&ZOPN)          SETC  ' '                                         00347500
&ZOPO(&ZOPN)          SETC  'LA'                                        00347600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00347700
&ZOPD(&ZOPN)          SETC  '++ &ZXWORKREQ_HDL XWORKREQ_HDL'            00347800
.*                                                                      00347900
                      AGO   .ZI34G                                      00348000
.*                                                                      00348100
.ZI34F                ANOP  ,                                           00348200
&ZCGPR   SETC  '&XWORKREQ_HDL'(2,K'&XWORKREQ_HDL-2)                     00348300
.*                                                                      00348400
.ZI34G                ANOP  ,                                           00348500
                      AIF   ('&SYSAM64' EQ 'YES').ZI34H1A               00348600
.*                                                                      00348700
&ZOPN                 SETA  &ZOPN+1                                     00348800
&ZOPL(&ZOPN)          SETC  ' '                                         00348900
&ZOPO(&ZOPN)          SETC  'ST'                                        00349000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+80(,1)'                           00349100
&ZOPD(&ZOPN)          SETC  '++ &ZXWORKREQ_HDL XWORKREQ_HDL'            00349200
.*                                                                      00349300
                      AGO   .ZI34H                                      00349400
.ZI34H1A              ANOP  ,                                           00349500
.*                                                                      00349600
&ZOPN                 SETA  &ZOPN+1                                     00349700
&ZOPL(&ZOPN)          SETC  ' '                                         00349800
&ZOPO(&ZOPN)          SETC  'STG'                                       00349900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,80(,1)'                             00350000
&ZOPD(&ZOPN)          SETC  '++ &ZXWORKREQ_HDL XWORKREQ_HDL'            00350100
.*                                                                      00350200
.ZI34H                ANOP  ,                                           00350300
.*-------------------------------------------------------------------   00350400
.***AI.LVER01                                                           00350500
                      AIF  (&XPLISTVER LT 2).ZI36Z                      00350600
.*-------------------------------------------------------------------   00350700
.***AI.L25  XINSERVCLS F                                                00350800
                      AIF   ('&ZXINSERVCLS' EQ '').ZI36E                00350900
                      AIF   ('&ZXINSERVCLS' EQ 'OUTPUT').ZI36E          00351000
&ZCGPR                SETC  '&XINSERVCLS'                               00351100
         AIF   ('&XINSERVCLS' EQ '0').ZI36E                             00351200
         AIF   ('&XINSERVCLS' EQ '0').ZI36E                             00351300
.*                                                                      00351400
                      AIF   ('&XINSERVCLS'(1,1) NE '(').ZI36B           00351500
&ZCGPR   SETC  '0('.'&XINSERVCLS'(2,K'&XINSERVCLS-2).')'                00351600
                      AGO   .ZI36D                                      00351700
.ZI36B                ANOP  ,                                           00351800
.*                                                                      00351900
&ZC                   SETC  '&XINSERVCLS'(1,1)                          00352000
                      AIF   (T'&ZC NE 'N').ZI36D                        00352100
&ZC                   SETC  '&XINSERVCLS'                               00352200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI36D               00352300
&ZCGPR                SETC  '=AL4(&XINSERVCLS)'                         00352400
.*                                                                      00352500
.ZI36D                ANOP  ,                                           00352600
.*                                                                      00352700
&ZOPN                 SETA  &ZOPN+1                                     00352800
&ZOPL(&ZOPN)          SETC  ' '                                         00352900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00353000
&ZOPV(&ZOPN)          SETC  '92(4,1),&ZCGPR'                            00353100
&ZOPD(&ZOPN)          SETC  '++ &ZXINSERVCLS XINSERVCLS'                00353200
.*                                                                      00353300
.ZI36E                ANOP  ,                                           00353400
.*-------------------------------------------------------------------   00353500
.***AI.LVER02                                                           00353600
.ZI36Z                ANOP  ,                                           00353700
.*-------------------------------------------------------------------   00353800
.***AI.LVER01                                                           00353900
                      AIF  (&XPLISTVER LT 2).ZI37Z                      00354000
.*-------------------------------------------------------------------   00354100
.***AI.L25  XMONTKN64 XL8                                               00354200
                      AIF   ('&ZXMONTKN64' EQ '').ZI37E                 00354300
                      AIF   ('&ZXMONTKN64' EQ 'OUTPUT').ZI37E           00354400
&ZCGPR                SETC  '&XMONTKN64'                                00354500
.*                                                                      00354600
                      AIF   ('&XMONTKN64'(1,1) NE '(').ZI37B            00354700
&ZCGPR   SETC  '0('.'&XMONTKN64'(2,K'&XMONTKN64-2).')'                  00354800
                      AGO   .ZI37D                                      00354900
.ZI37B                ANOP  ,                                           00355000
.*                                                                      00355100
&ZC                   SETC  '&XMONTKN64'(1,1)                           00355200
                      AIF   (T'&ZC NE 'N').ZI37D                        00355300
&ZC                   SETC  '&XMONTKN64'                                00355400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI37D               00355500
&ZCGPR                SETC  '=BL8''&XMONTKN64'''                        00355600
.*                                                                      00355700
.ZI37D                ANOP  ,                                           00355800
.*                                                                      00355900
&ZOPN                 SETA  &ZOPN+1                                     00356000
&ZOPL(&ZOPN)          SETC  ' '                                         00356100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00356200
&ZOPV(&ZOPN)          SETC  '96(8,1),&ZCGPR'                            00356300
&ZOPD(&ZOPN)          SETC  '++ &ZXMONTKN64 XMONTKN64'                  00356400
.*                                                                      00356500
.ZI37E                ANOP  ,                                           00356600
.*-------------------------------------------------------------------   00356700
.***AI.LVER02                                                           00356800
.ZI37Z                ANOP  ,                                           00356900
.*-------------------------------------------------------------------   00357000
.***AI.LVER01                                                           00357100
                      AIF  (&XPLISTVER LT 1).ZI40Z                      00357200
.*-------------------------------------------------------------------   00357300
.***AI.LVER02                                                           00357400
.ZI40Z                ANOP  ,                                           00357500
.*-------------------------------------------------------------------   00357600
&ZOPN1                SETA &ZOPN                                        00357700
.*******************************************************************    00357800
.***  PROCESS IWM4ECRE OUTPUT PARAMETERS                                00357900
.*******************************************************************    00358000
                      ACTR  10000                                       00358100
.*------------------------------------------------------------------    00358200
.***AO.L02 XETOKEN CL8                                                  00358300
         AIF   ('&ZXETOKEN' EQ 'OUTPUT').ZO15A  OUTPUT                  00358400
         AIF   ('&ZXETOKEN' NE 'INOUT').ZO15C  INOUT                    00358500
.ZO15A    AIF   ('&XETOKEN'(1,1) NE '(').ZO15B  ADDR IN GPR             00358600
&ZCGPR   SETC  '&XETOKEN'(2,K'&XETOKEN-2)                               00358700
&ZOPN                 SETA  &ZOPN+1                                     00358800
&ZOPL(&ZOPN)          SETC  ' '                                         00358900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00359000
&ZOPV(&ZOPN)          SETC  '0(8,&ZCGPR),40(1)'                         00359100
&ZOPD(&ZOPN)          SETC  '++ XETOKEN CL8'                            00359200
                      AGO   .ZO15C                                      00359300
.*                                                                      00359400
.ZO15B                ANOP  ,                                           00359500
&ZAWRK   SETA  K'&XETOKEN                                               00359600
         AIF   ('&XETOKEN'(&ZAWRK,1) NE ')').ZO15G                      00359700
&ZN      SETA  2                                                        00359800
.ZO15H    ANOP                                                          00359900
         AIF   (&ZN GE &ZAWRK).ZO15G                                    00360000
         AIF   ('&XETOKEN'(&ZN,1) NE '(').ZO15I                         00360100
&ZC      SETC  '&XETOKEN'(1,&ZN).'8'.','                                00360200
&ZC      SETC  '&ZC'.'&XETOKEN'(&ZN+1,&ZAWRK-&ZN).',40(1)'              00360300
         AGO   .ZO15J                                                   00360400
.ZO15I    ANOP                                                          00360500
&ZN      SETA  &ZN+1                                                    00360600
         AGO   .ZO15H                                                   00360700
.ZO15G    ANOP                                                          00360800
&ZC      SETC  '&XETOKEN.(8),40(1)'                                     00360900
.ZO15J    ANOP                                                          00361000
&ZOPN                 SETA  &ZOPN+1                                     00361100
&ZOPL(&ZOPN)          SETC  ' '                                         00361200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00361300
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00361400
&ZOPD(&ZOPN)          SETC  '++ XETOKEN CL8'                            00361500
.ZO15C                ANOP  ,                                           00361600
.*------------------------------------------------------------------    00361700
.***AO.LVER01                                                           00361800
                      AIF  (&XPLISTVER LT 2).ZO35Z  PLVER               00361900
.*------------------------------------------------------------------    00362000
.***AO.L02 XSERVCLS F                                                   00362100
         AIF   ('&ZXSERVCLS' EQ 'OUTPUT').ZO35A  OUTPUT                 00362200
         AIF   ('&ZXSERVCLS' NE 'INOUT').ZO35C  INOUT                   00362300
.ZO35A    AIF   ('&XSERVCLS'(1,1) NE '(').ZO35B  ADDR IN GPR            00362400
&ZCGPR   SETC  '&XSERVCLS'(2,K'&XSERVCLS-2)                             00362500
&ZOPN                 SETA  &ZOPN+1                                     00362600
&ZOPL(&ZOPN)          SETC  ' '                                         00362700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00362800
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),88(1)'                         00362900
&ZOPD(&ZOPN)          SETC  '++ XSERVCLS F'                             00363000
                      AGO   .ZO35C                                      00363100
.*                                                                      00363200
.ZO35B                ANOP  ,                                           00363300
&ZAWRK   SETA  K'&XSERVCLS                                              00363400
         AIF   ('&XSERVCLS'(&ZAWRK,1) NE ')').ZO35G                     00363500
&ZN      SETA  2                                                        00363600
.ZO35H    ANOP                                                          00363700
         AIF   (&ZN GE &ZAWRK).ZO35G                                    00363800
         AIF   ('&XSERVCLS'(&ZN,1) NE '(').ZO35I                        00363900
&ZC      SETC  '&XSERVCLS'(1,&ZN).'4'.','                               00364000
&ZC      SETC  '&ZC'.'&XSERVCLS'(&ZN+1,&ZAWRK-&ZN).',88(1)'             00364100
         AGO   .ZO35J                                                   00364200
.ZO35I    ANOP                                                          00364300
&ZN      SETA  &ZN+1                                                    00364400
         AGO   .ZO35H                                                   00364500
.ZO35G    ANOP                                                          00364600
&ZC      SETC  '&XSERVCLS.(4),88(1)'                                    00364700
.ZO35J    ANOP                                                          00364800
&ZOPN                 SETA  &ZOPN+1                                     00364900
&ZOPL(&ZOPN)          SETC  ' '                                         00365000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00365100
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00365200
&ZOPD(&ZOPN)          SETC  '++ XSERVCLS F'                             00365300
.ZO35C                ANOP  ,                                           00365400
.*------------------------------------------------------------------    00365500
.***AO.LVER02                                                           00365600
.ZO35Z                ANOP  ,                                           00365700
.*------------------------------------------------------------------    00365800
.***AO.LVER01                                                           00365900
                      AIF  (&XPLISTVER LT 1).ZO39Z  PLVER               00366000
.*------------------------------------------------------------------    00366100
.***AO.L02 XIMPORTANCE FL2                                              00366200
         AIF   ('&ZXIMPORTANCE' EQ 'OUTPUT').ZO39A  OUTPUT              00366300
         AIF   ('&ZXIMPORTANCE' NE 'INOUT').ZO39C  INOUT                00366400
.ZO39A    AIF   ('&XIMPORTANCE'(1,1) NE '(').ZO39B  ADDR IN GPR         00366500
&ZCGPR   SETC  '&XIMPORTANCE'(2,K'&XIMPORTANCE-2)                       00366600
&ZOPN                 SETA  &ZOPN+1                                     00366700
&ZOPL(&ZOPN)          SETC  ' '                                         00366800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00366900
&ZOPV(&ZOPN)          SETC  '0(2,&ZCGPR),48(1)'                         00367000
&ZOPD(&ZOPN)          SETC  '++ XIMPORTANCE FL2'                        00367100
                      AGO   .ZO39C                                      00367200
.*                                                                      00367300
.ZO39B                ANOP  ,                                           00367400
&ZAWRK   SETA  K'&XIMPORTANCE                                           00367500
         AIF   ('&XIMPORTANCE'(&ZAWRK,1) NE ')').ZO39G                  00367600
&ZN      SETA  2                                                        00367700
.ZO39H    ANOP                                                          00367800
         AIF   (&ZN GE &ZAWRK).ZO39G                                    00367900
         AIF   ('&XIMPORTANCE'(&ZN,1) NE '(').ZO39I                     00368000
&ZC      SETC  '&XIMPORTANCE'(1,&ZN).'2'.','                            00368100
&ZC      SETC  '&ZC'.'&XIMPORTANCE'(&ZN+1,&ZAWRK-&ZN).',48(1)'          00368200
         AGO   .ZO39J                                                   00368300
.ZO39I    ANOP                                                          00368400
&ZN      SETA  &ZN+1                                                    00368500
         AGO   .ZO39H                                                   00368600
.ZO39G    ANOP                                                          00368700
&ZC      SETC  '&XIMPORTANCE.(2),48(1)'                                 00368800
.ZO39J    ANOP                                                          00368900
&ZOPN                 SETA  &ZOPN+1                                     00369000
&ZOPL(&ZOPN)          SETC  ' '                                         00369100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00369200
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00369300
&ZOPD(&ZOPN)          SETC  '++ XIMPORTANCE FL2'                        00369400
.ZO39C                ANOP  ,                                           00369500
.*------------------------------------------------------------------    00369600
.***AO.LVER02                                                           00369700
.ZO39Z                ANOP  ,                                           00369800
.*******************************************************************    00369900
.***AO.X02  RETURN CODE PROCESSING                                      00370000
.*******************************************************************    00370100
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00370200
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00370300
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00370400
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00370500
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00370600
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00370700
&ZOPN                 SETA  &ZOPN+1                                     00370800
&ZOPL(&ZOPN)          SETC  ' '                                         00370900
&ZOPO(&ZOPN)          SETC  'ST'                                        00371000
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00371100
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00371200
                      AGO   .ZMRETX                                     00371300
.*                                                                      00371400
.ZMRET2               ANOP  ,                                           00371500
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00371600
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00371700
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00371800
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00371900
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00372000
&ZOPN                 SETA  &ZOPN+1                                     00372100
&ZOPL(&ZOPN)          SETC  ' '                                         00372200
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00372300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00372400
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00372500
.ZMRETX               ANOP  ,                                           00372600
.*******************************************************************    00372700
.***AO.X03  REASON CODE PROCESSING                                      00372800
.*******************************************************************    00372900
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00373000
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00373100
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00373200
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00373300
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00373400
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00373500
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00373600
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00373700
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00373800
&ZOPN                 SETA  &ZOPN+1                                     00373900
&ZOPL(&ZOPN)          SETC  ' '                                         00374000
&ZOPO(&ZOPN)          SETC  'ST'                                        00374100
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00374200
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00374300
                      AGO   .ZMRSNX                                     00374400
.*                                                                      00374500
.ZMRSN2               ANOP  ,                                           00374600
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00374700
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00374800
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00374900
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00375000
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00375100
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00375200
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00375300
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00375400
&ZOPN                 SETA  &ZOPN+1                                     00375500
&ZOPL(&ZOPN)          SETC  ' '                                         00375600
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00375700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00375800
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00375900
.ZMRSNX               ANOP  ,                                           00376000
.*******************************************************************    00376100
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00376200
.*******************************************************************    00376300
.ZMFLX                ANOP  ,              MF=L PROCESSING              00376400
.*******************************************************************    00376500
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00376600
.*******************************************************************    00376700
                      ACTR  10000                                       00376800
.*                                                                      00376900
                      LCLA  &ZLC           COLUMN POSITION              00377000
                      LCLA  &ZOPX          LIST TABLE INDEX             00377100
                      LCLC  &ZLL           LABEL                        00377200
                      LCLC  &ZLOP          OPERATION                    00377300
                      LCLC  &ZLV           VALUE                        00377400
                      LCLC  &ZLD           DESCRIPTION                  00377500
.*                                                                      00377600
&ZOPX                 SETA  1                                           00377700
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00377800
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00377900
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00378000
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00378100
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00378200
                      AIF   (K'&ZLD LE 0).ZL5                           00378300
&ZLC                  SETA  35             COMMENT COLUMN               00378400
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00378500
&ZLC                  SETA  33             COMMMENT COLUMN              00378600
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00378700
&ZLV                  SETC  '&ZLV'.' '                                  00378800
                      AGO   .ZL3                                        00378900
.*                                                                      00379000
.ZL4                  ANOP  ,                                           00379100
&ZLV                  SETC  '&ZLV'.' '                                  00379200
.ZL5                  ANOP  ,                                           00379300
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00379400
.*                                                                      00379500
&ZLL     &ZLOP &ZLV                                                     00379600
.*                                                                      00379700
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00379800
                      AGO   .ZL2           CONTINUE LOOPING             00379900
.*                                                                      00380000
.ZLX                  ANOP  ,                                           00380100
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00380200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00380300
         LLGT  14,16(0,0)              GET CVT ADDRESS            @L3C  00380400
         TM    CVTOSLV3-CVT(14),CVTH7709  test for HBB7709 presence     00380500
         JNZ   VEROK&SYSNDX               running on HBB7709       @L3C 00380600
         LA    0,IWMRSNCODEBADVERSION     HBB7709 is required           00380700
         LA    15,IWMRETCODEINVOCERROR    set return code               00380800
         J     END&SYSNDX                 skip service invocation  @L3C 00380900
VEROK&SYSNDX DS    0H                     version check successful      00381000
         L     14,772(14,0)            GET SFT ADDRESS                  00381100
         L     14,380(14,0)            GET LX FOR SERVICE ROUTINE       00381200
         LA    15,24                   GET EX FOR SERVICE ROUTINE       00381300
         OR    14,15                   GET PC NUMBER                    00381400
         AIF   ('&XESTRT' NE 'EXPLICIT_SINGLE').NOEXSIN            @P3A 00381500
         OI    60(1),X'60'             BOTH SINGLE AND EXPL.       @P3A 00381600
.NOEXSIN ANOP  ,                                                   @P3A 00381700
         PC    0(14)                                                    00381800
END&SYSNDX DS    0H                    END LABEL                        00381900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00382000
.ZLINKX               ANOP  ,                                           00382100
.*******************************************************************    00382200
.***AP.X01  FORMAT GENERATED CODE                                       00382300
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00382400
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00382500
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00382600
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00382700
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00382800
                      AIF   (K'&ZLD LE 0).ZL51                          00382900
&ZLC                  SETA  35             COMMENT COLUMN               00383000
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00383100
&ZLC                  SETA  33             COMMENT COLUMN               00383200
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00383300
&ZLV                  SETC  '&ZLV'.' '                                  00383400
                      AGO   .ZL31                                       00383500
.*                                                                      00383600
.ZL41                 ANOP  ,                                           00383700
&ZLV                  SETC  '&ZLV'.' '                                  00383800
.ZL51                 ANOP  ,                                           00383900
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00384000
.*                                                                      00384100
&ZLL     &ZLOP &ZLV                                                     00384200
.*                                                                      00384300
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00384400
                      AGO   .ZL21          CONTINUE LOOPING             00384500
.*                                                                      00384600
.ZLX1                 ANOP  ,                                           00384700
.*******************************************************************    00384800
.***AP.X02  END OF IWM4ECRE MACRO                                       00384900
&ZIWM4ECRE            SETC  'YES'          SET IWM4ECRE USED            00385000
         POP   PRINT                                                    00385100
*                                            IWM4ECRE-2                 00385200
         SPACE 1                                                        00385300
.ZLX2                 ANOP  ,                                           00385400
         MEND                                                           00385500
**********************************************************************/ 00385600
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00385700
*%IWM4ECRE: MACRO KEYS(TYPE,CLSFY,SERVCLS,INSERVCLS,ARRIVALTIME,        00385800
*                 FUNCTION_NAME,EXSTARTDEFER,ESTRT,WORKREQ_HDL,MONTKN,  00385900
*                 MONTKN64,ACCESS,ETOKEN,IMPORTANCE,RETCODE,RSNCODE,    00386000
*                 PLISTVER,MF);                                         00386100
*  ANS('?'!!MACLABEL!!' '!!'IWM4ECRP '!!MACLIST!!                       00386200
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00386300
*%END IWM4ECRE;                                                         00386400
