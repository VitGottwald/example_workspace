*                                                                       00001000
* %DCL IHAHR098_INCLUDED CHAR EXT;                                      00002000
* %DEACTIVATE IHAHR098_INCLUDED;                                        00003000
* %IF IHAHR098_INCLUDED = '' %THEN                                      00004000
* %DO;                                                                  00005000
*/* Macro made bi-lingual on 23215. CBGEN compile date 23032         */ 00006000
*% /*                                                                   00007000
         MACRO                                                          00008000
         IHAHR098 &DSECT=YES,&LIST=YES,&TITLE=YES,&SMFR98=YES,         *00009000
               &SMF98SDS=COND,&SMF98ID=COND,&SMF98CSS=COND,            *00010000
               &SMF98WicData=COND,&SMF98AggBucket=COND,                *00011000
               &SMF98JobIdx=COND,&SMF98JobList=COND                     00012000
                      GBLC  &IHAHR098_INCLUDED                          00013000
                      GBLC  &ZCBPRINT                                   00014000
&IHAHR098_INCLUDED    SETC  'YES'                                       00015000
                      AIF   ('&LIST' EQ 'NONE').P0                      00016000
                      AIF   ('&TITLE' EQ 'NO').P5                       00017000
 TITLE                'IHAHR098  - SMF Record format for record type 98*00018000
                           '                                            00019000
.P5                   ANOP                                              00020000
**/ ;                                                                   00021000
*/****START OF SPECIFICATIONS****************************************** 00022000
*                                                                       00023000
*    $MAC (IHAHR098) COMP(SC1C5):                                       00024000
*                                                                       00025000
*01* MACRO NAME: IHAHR098                                               00026000
*                                                                       00027000
*01* DSECT NAME: SMFR98                                                 00028000
*                                                                       00029000
*01* DESCRIPTIVE NAME: SMF Record format for record type 98             00030000
*                                                                       00031000
*02*   ACRONYM:  N/A                                                    00032000
**/                                                                     00033000
*/*01* PROPRIETARY_STATEMENT *****************************************/ 00034000
*/*                                                                  */ 00035000
*/*  LICENSED MATERIALS - PROPERTY OF IBM                            */ 00036000
*/*  5650-ZOS COPYRIGHT IBM CORP. 2016, 2021                         */ 00037000
*/*                                                                  */ 00038000
*/*01* STATUS = HBB77D0                                              */ 00039000
*/*                                                                  */ 00040000
*/**** END_OF_PROPRIETARY_STATEMENT **********************************/ 00041000
*/*                                                                     00042000
*                                                                       00043000
*01* EXTERNAL CLASSIFICATION:  PI                                       00044000
*01* END OF EXTERNAL CLASSIFICATION:                                    00045000
*                                                                       00046000
*01* FUNCTION:                                                          00047000
*                                                                       00048000
*      SMF type 98 contains data from high frequency throughput         00049000
*      statistics (HFTS).  Contrary to most records which are recorded  00050000
*      minutes apart on the global SMF interval, HFTS records are       00051000
*      written seconds apart as specified by the HFTSINTVL keyword of   00052000
*      parmlib member SMFPRMxx.  HFTS data aids in diagnosing transient 00053000
*      problems, which are often concelaed in multi-minute intervals.   00054000
*                                                                       00055000
*      Consider writing SMF type 98 records to a separate log stream    00056000
*      because SMF type 98 records are written more frequently than     00057000
*      traditional SMF records.                                         00058000
*                                                                       00059000
*      The IHAHR098 maps the structure of SMF (System Management        00060000
*      Facilities) record type 98 common header and self-defining       00061000
*      sections for HFTS subtypes. The individual HFTS subtype SMF      00062000
*      records are separately mapped and are not included here.         00063000
*                                                                       00064000
*      The following SMF Type 98 subtypes are currently assigned.       00065000
*                                                                       00066000
*        Subtype    Component     SMF record                            00067000
*        -------    ----------    -----------                           00068000
*          1        Supervisor    IHAHR981                              00069000
*          2        reserved      -                                     00070000
*          3        IOS           IOSDS983                       @07A   00071000
*          4        IOS           IOSDS984                       @07A   00072000
*          1024     IBM CICS      DFHWICCD                              00073000
*          1025     IBM IMS       DFSSR98A                              00074000
*                                                                       00075000
*                                                                       00076000
*01* METHOD OF ACCESS:                                                  00077000
*                                                                       00078000
*02*   PL/X:                                                            00079000
*                                                                       00080000
*      To only include IHAR098:                                         00081000
*        %INCLUDE SYSLIB(IHAHR098)                                      00082000
*        By default, the SMFR98 is based on SMF98PTR. If                00083000
*        other basing is desired, use %SMFRBASE='BASED(XXXXXX)'.        00084000
*        If %SMFRBASE='BASED(SMF98PTR)' is coded, a declare for         00085000
*        SMF98PTR is also generated.                                    00086000
*      To include IHAR098 and all subtypes:                             00087000
*        %IFAR98 = 'YES'                                                00088000
*        %INCLUDE SYSLIB(IHASMFRA)                                      00089000
*                                                                       00090000
*02*   ASM:                                                             00091000
*                                                                       00092000
*      To only include IHAR098:                                         00093000
*        IHAHR098                                                       00094000
*      To include IHAR098 and all subtypes:                             00095000
*        IFASMFRA 98                                                    00096000
*                                                                       00097000
*01* SIZE:                                                              00098000
*            SMF98WicData   -- X'0028' bytes                            00099000
*            SMF98AggBucket -- X'0008' bytes                            00100000
*            SMF98JobIdx    -- X'0006' bytes                            00101000
*            SMF98JobList   -- X'000A' bytes                            00102000
*            SMF98ID        -- X'0050' bytes                            00103000
*            SMF98CSS       -- X'0060' bytes                            00104000
*            SMFR98         -- X'0030' bytes                            00105000
*            SMF98SDS       -- X'0018' bytes                            00106000
*                                                                       00107000
*01* POINTED TO BY: Local variable SMF98PTR                             00108000
*                                                                       00109000
*01* CREATED BY:   Modules that create Type 98 records:                 00110000
*                  - IEAHFXSV                                           00111000
*                                                                       00112000
*                                                                       00113000
*01* DELETED BY: Caller of SMFEWTM                                      00114000
*                                                                       00115000
*01* STORAGE ATTRIBUTES:                                                00116000
*02*   SUBPOOL:            N/A                                          00117000
*02*   KEY:                N/A                                          00118000
*02*   RESIDENCY:          N/A                                          00119000
*                                                                       00120000
*01* FREQUENCY: 1 per call to SMFEWTM                                   00121000
*                                                                       00122000
*01* SERIALIZATION: N/A                                                 00123000
*                                                                       00124000
*01* DEPENDENCIES:                                                      00125000
*                                                                       00126000
*    Whenever SMF type 98 subtypes are added, their mappings macros     00127000
*    must be added after IHAHR981 in the generated ASM and PL/X         00128000
*    sections.                                                          00129000
*                                                                       00130000
*01* NOTES:  The assembly language portion of this macro is             00131000
*            generated using the CBGEN tool - it is not                 00132000
*            to be edited manually.                                     00133000
*                                                                       00134000
*    The subtype records are separately defined. See the subtype        00135000
*    records for their structures.                                      00136000
*                                                                       00137000
*                                                                       00138000
*    SMF98 ReleaseIndex, WithinReleaseIndex, and PrototypeIndex         00139000
*    ----------------------------------------------------------         00140000
*                                                                       00141000
*    All SMF 98 subtype records MUST be compatibly changed.             00142000
*    The SMF98_ReleaseIndex (RI) SMF98_WithinReleaseIndex (WRI), and    00143000
*    SMF98_PrototypeIndex (PI) form a macro version that is of the      00144000
*    form RI.WRI.PI.  Each SMF 98 subtype  has its own                  00145000
*    independent macro version.  For products with multiple levels      00146000
*    installed, the macro version ensures the latest mapping macro is   00147000
*    used to analyze the SMF 98 subtype records.                        00148000
*                                                                       00149000
*    IBM expects all exploiters to follow these rules for setting RI,   00150000
*    WRI, and PI:                                                       00151000
*    1.  For any shipped support, PI must be zero.                      00152000
*                                                                       00153000
*    2.  For the first delivery of an SMF 98 subtype, the indices MUST  00154000
*        be set to RI=1, WRI=0, PI=0 across all levels.                 00155000
*                                                                       00156000
*    3.  When adding new data to an existing SMF 98 subtype record:     00157000
*      a. For a new release or version RI is updated to RI+1.  WRI      00158000
*         and PI should both be set to zero.                            00159000
*      b. For an existing release and version, RI is unchanged, WRI is  00160000
*         updated to WRI+1, and PI is set to 0.                         00161000
*                                                                       00162000
*    4.  For prototype testing (e.g. ++APAR, developer supplied link    00163000
*        edit) that may or may not be delivered RI and WRI are to       00164000
*        remain unchanged.  PI is to be set to a non-zero value (e.g.   00165000
*        PI=1).  Different PI values for the same RI and WRI values may 00166000
*        be treated as incompatible test changes.                       00167000
*                                                                       00168000
*                                                                       00169000
*01* COMPONENT: SUPERVISOR CONTROL (SC1C5)                              00170000
*                                                                       00171000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     00172000
*                                                                       00173000
*01* EYE-CATCHER: none                                                  00174000
*                                                                       00175000
*01* CHANGE-ACTIVITY:                                                   00176000
*                                                                       00177000
* $00=OA48570 HBB77A0 160330 PDJI: High frequency throughput statistics 00178000
* $01=OA49692 HBB77A0 170309 PDD0: Metadata Tagging Fixes               00179000
* $02=OA57165 HBB77B0 191101 PDNJ: Workload Interaction Correlator      00180000
*                                  (WIC) support                        00181000
* $03=OA57165 HBB77B0 191101 PDSK: Workload Interaction Correlator      00182000
*                                  (WIC) support                        00183000
* $L1=W379349 HBB77D0 200724 PDNJ: subtype corrections                  00184000
* $04=OA60372 HBB77B0 201104 PDD0: Metadata tag enhancements            00185000
* $05=OA61064 HBB77D0 220428 PDNJ: reserved subtype                     00186000
* $06=OA63624 HBB77B0 220830 PDD0: Avoid Navigator warning messages     00187000
*                                  for missing macros and structures    00188000
* $07=OA62963 HBB77D0 230601 PDSK: zWIC Support for IOS                 00189000
*                                  - Added IOSDS983 and IOSDS984        00190000
*                                                                       00191000
****END OF SPECIFICATIONS*********************************************/ 00192000
*% /*                                                                   00193000
.P0                   ANOP                                              00194000
                      AIF   ('&ZCBPRINT' EQ 'NO').P1                    00195000
                      AIF   ('&LIST' EQ 'YES').P2                       00196000
.P1                   ANOP                                              00197000
                      PUSH  PRINT                                       00198000
                      PRINT OFF                                         00199000
.P2                   ANOP                                              00200000
                      AIF   ('&SMFR98' EQ 'NO').L0002                   00201000
                      AIF   ('&DSECT' EQ 'YES').L0003                   00202000
                      AIF   ('&SMFR98' NE 'YES').L0002                  00203000
SMFR98                DS    0D                                          00204000
                      AGO   .L0004                                      00205000
.L0003                ANOP                                              00206000
SMFR98                DSECT                                             00207000
.L0004                ANOP                                              00208000
SMF98RPS              DS    CL48   +0 Fixed record sections             00209000
*                                                                       00210000
*                                                                       00211000
*    SMF Record 98 Header Section                                       00212000
*                                                                       00213000
*                                                                       00214000
*                                                                       00215000
                      ORG   SMF98RPS                                    00216000
SMF98RHD              DS    CL48   +0 Record header section             00217000
                      ORG   SMF98RHD                                    00218000
SMF98LEN              DS    H      +0 Record length (including this    *00219000
                                   field)                               00220000
SMF98SEG              DS    H      +2 Segment descriptor (provided by  *00221000
                                   SMF)                                 00222000
SMF98FLG              DS    B      +4 Header flag byte                  00223000
*  Bit definitions:                                                     00224000
SMF98SSF              EQU   X'80'  Bit 0 - Subsys ID after Sys ID       00225000
SMF98SBT              EQU   X'40'  Bit 1 - Subtypes utilized            00226000
SMF98RTY              DS    B      +5 Record type - 98 ('62'x)          00227000
SMF98TME              DS    FL4    +6 Record written time               00228000
SMF98DTE              DS    FL4    +A Record written date               00229000
SMF98SID              DS    CL4    +E System identifier                 00230000
SMF98SSI              DS    CL4    +12 Subsystem identifier             00231000
SMF98STY              DS    H      +16 Record subtype: 1 = Supervisor  *00232000
                                   2 = reserved 3 = IOS, Asynchronous  *00233000
                                   I/O 4 = IOS, Synchronous (zHL) I/O  *00234000
                                   1024 = IBM CICS 1025 = IBM IMS       00235000
SMF98IND              DS    B      +18 Additional record flags          00236000
*  Bit definitions:                                                     00237000
SMF98More             EQU   X'80'  This SMF record has multiple parts. *00238000
                                   There are more parts to come. For a *00239000
                                   single part record, this bit must   *00240000
                                   be OFF. On the first part of a      *00241000
                                   multiple part record, SMF98More =   *00242000
                                   ON and SMF98CONT = OFF. On the      *00243000
                                   subsequent parts for the same       *00244000
                                   record, both SMF98More and          *00245000
                                   SMF98CONT must be ON. On the last   *00246000
                                   record part, SMF98More = OFF and     00247000
*                                  SMF98CONT = ON.                      00248000
SMF98CONT             EQU   X'40'  This record part is the             *00249000
                                   continuation of the multiple part   *00250000
                                   record. SMF98CONT must be OFF on    *00251000
                                   the first part of the record.        00252000
SMF98NoStorage        EQU   X'20'  SMF buffer storage unavailable.     *00253000
                                   Standard SMF Type 98 record not     *00254000
                                   created.                             00255000
SMF98PartSeqNo        DS    X      +19 Record part sequence number. It *00256000
                                   identifies the order of the record  *00257000
                                   part in a multiple-part SMF 98      *00258000
                                   record. Meaningful only when record *00259000
                                   has multiple parts, i.e. SMF98More  *00260000
                                   is set on the first part of the     *00261000
                                   record. The value is 0 on the first *00262000
                                   part, 1 on the next part, and so    *00263000
                                   on.                                  00264000
SMF98SDSLen           DS    H      +1A Length of the SMF98SDS          *00265000
                                   self-defining section                00266000
SMF98SDSTripletsNum   DS    H      +1C Number of triplets in the       *00267000
                                   self-defining section                00268000
                      DS    CL18   +1E Reserved                         00269000
SMF98RHDEnd           DS    0C     +30 Reserved                         00270000
SMFR98_Len            EQU   *-SMFR98                                    00271000
.L0002                ANOP                                              00272000
                      AIF   ('&SMF98SDS' EQ 'NO').L0005                 00273000
                      AIF   ('&DSECT' EQ 'YES').L0006                   00274000
                      AIF   ('&SMF98SDS' NE 'YES').L0005                00275000
.L0006                ANOP                                              00276000
*                                                                       00277000
*                                                                       00278000
*    Self Defining Section                                              00279000
*                                                                       00280000
*                                                                       00281000
*                                                                       00282000
                      AIF   ('&DSECT' EQ 'YES').L0007                   00283000
SMF98SDS              DS    0F                                          00284000
                      AGO   .L0008                                      00285000
.L0007                ANOP                                              00286000
SMF98SDS              DSECT                                             00287000
.L0008                ANOP                                              00288000
*                                                                       00289000
*      ***************************************************************  00290000
*      *                                                             *  00291000
*      * Identification section control area                         *  00292000
*      *                                                             *  00293000
*      ***************************************************************  00294000
*                                                                       00295000
*                                                                       00296000
SMF98IOF              DS    F      Offset of identification section    *00297000
                                   from beginning of record mapped by: *00298000
                                   SMF98ID                              00299000
SMF98ILN              DS    H      Length of identification             00300000
SMF98ION              DS    H      ++TripletNumber Number of           *00301000
                                   identification                       00302000
*                                                                       00303000
*      ***************************************************************  00304000
*      *                                                             *  00305000
*      * Context summary control area                                *  00306000
*      *                                                             *  00307000
*      ***************************************************************  00308000
*                                                                       00309000
*                                                                       00310000
SMF98CSOF             DS    F      Offset to context summary section   *00311000
                                   from beginning of record mapped by: *00312000
                                   SMF98CSS                             00313000
SMF98CSLN             DS    H      Length of context summary section    00314000
SMF98CSON             DS    H      Number of context summary section    00315000
*                                                                       00316000
*      ***************************************************************  00317000
*      *                                                             *  00318000
*      * Data section control area                                   *  00319000
*      *                                                             *  00320000
*      ***************************************************************  00321000
*                                                                       00322000
*                                                                       00323000
SMF98DOF              DS    F      Offset of data section from         *00324000
                                   beginning of record mapping          00325000
SMF98DLN              DS    H      Length of data section               00326000
SMF98DON              DS    H      Number of data sections              00327000
SMF98SDS_Len          EQU   *-SMF98SDS                                  00328000
.L0005                ANOP                                              00329000
                      AIF   ('&SMF98ID' EQ 'NO').L0009                  00330000
                      AIF   ('&DSECT' EQ 'YES').L000A                   00331000
                      AIF   ('&SMF98ID' NE 'YES').L0009                 00332000
.L000A                ANOP                                              00333000
*                                                                       00334000
*                                                                       00335000
*    Identification Section.                                            00336000
*                                                                       00337000
*    Its location in the SMF record is calculated by (Address of        00338000
*    SMFR98 record + offset value in SMF98IOF).                         00339000
*                                                                       00340000
*                                                                       00341000
*                                                                       00342000
                      AIF   ('&DSECT' EQ 'YES').L000B                   00343000
SMF98ID               DS    0F                                          00344000
                      AGO   .L000C                                      00345000
.L000B                ANOP                                              00346000
SMF98ID               DSECT                                             00347000
.L000C                ANOP                                              00348000
SMF98JBN              DS    CL8    JobName                              00349000
SMF98RST              DS    F      Reader start time                    00350000
SMF98RSD              DS    CL4    Reader start date                    00351000
SMF98STP              DS    CL8    Step name                            00352000
SMF98IntervalStart    DS    CL8    The interval start time -- Local    *00353000
                                   time in STCK format. Can be         *00354000
                                   converted to GMT time by            *00355000
                                   subtracting SMF98_CVTLDTO from this *00356000
                                   value                                00357000
SMF98IntervalEnd      DS    CL8    The interval end time -- Local time *00358000
                                   in STCK format. Can be converted to *00359000
                                   GMT time by subtracting             *00360000
                                   SMF98_CVTLDTO from this value        00361000
SMF98SysName          DS    CL8    System Name when first byte not     *00362000
                                   x'00'                                00363000
SMF98IntervalStart_ETOD DS  CL16   The interval start time -- Local    *00364000
                                   time in ETOD format. Can be         *00365000
                                   converted to GMT time by            *00366000
                                   subtracting SMF98_ECVTLDTO from     *00367000
                                   this value                           00368000
SMF98IntervalEnd_ETOD DS    CL16   The interval end time -- Local time *00369000
                                   in ETOD format. Can be converted to *00370000
                                   GMT time by subtracting             *00371000
                                   SMF98_ECVTLDTO from this value       00372000
SMF98ID_Len           EQU   *-SMF98ID                                   00373000
.L0009                ANOP                                              00374000
                      AIF   ('&SMF98CSS' EQ 'NO').L000D                 00375000
                      AIF   ('&DSECT' EQ 'YES').L000E                   00376000
                      AIF   ('&SMF98CSS' NE 'YES').L000D                00377000
.L000E                ANOP                                              00378000
*                                                                       00379000
*    Context summary section                                            00380000
*                                                                       00381000
*    The location in the SMF record is calculated by (Address of        00382000
*    SMFR98 record + offset value in SMF98CSOF).                        00383000
*                                                                       00384000
*                                                                       00385000
*                                                                       00386000
                      AIF   ('&DSECT' EQ 'YES').L000F                   00387000
SMF98CSS              DS    0H                                          00388000
                      AGO   .L0010                                      00389000
.L000F                ANOP                                              00390000
SMF98CSS              DSECT                                             00391000
.L0010                ANOP                                              00392000
SMF98_HftsInfo        DS    CL8    +00 An 8-byte token that is         *00393000
                                   equivalent across SMF 98 subtypes   *00394000
                                   for the same interval                00395000
*                                                                       00396000
*      ***************************************************************  00397000
*      *                                                             *  00398000
*      * Note: The SMF98_SubtypeInfo is a one to one mapping to      *  00399000
*      * WicWR_SubtypeInfo in IFAWICCB. Changes to SMF98_SubtypeInfo *  00400000
*      * will require the same changes to the WicWR_SubtypeInfo      *  00401000
*      * mapping.                                                       00402000
*      *                                                             *  00403000
*      ***************************************************************  00404000
*                                                                       00405000
*                                                                       00406000
SMF98_SubtypeInfo     DS    CL24   +08 Subtype Info                     00407000
                      ORG   SMF98_SubtypeInfo                           00408000
SMF98_ReleaseIndex    DS    H      +08 Release index - incremented     *00409000
                                   when a subtype record in a product  *00410000
                                   is significantly changed (ex. new   *00411000
                                   sections and fields are added for   *00412000
                                   the release of a new version of     *00413000
                                   z/OS). When this value is           *00414000
                                   incremented                         *00415000
                                   SMF98_WithinReleaseIndex is reset   *00416000
                                   to 1.                                00417000
SMF98_WithinReleaseIndex DS H      +0A Within-release index -          *00418000
                                   incremented when small changes are  *00419000
                                   made to a subtype (ex. a new field  *00420000
                                   is added in an APAR)                 00421000
SMF98_PrototypeIndex  DS    H      +0C Prototype index - incremented   *00422000
                                   for any temporary changes for a     *00423000
                                   given ReleaseIndex and              *00424000
                                   WithinReleaseIndex (ex. can denote  *00425000
                                   changes to the SMF record for       *00426000
                                   different versions of a ++APAR).    *00427000
                                   Set to 0 for any official code.      00428000
                      DS    CL2    +0E Reserved                         00429000
SMF98_Prodlevel       DS    CL16   +10 EBCDIC Product Level            *00430000
                                   Information. For z/OS components,   *00431000
                                   use CVTPROD                          00432000
SMF98_ExitSerialTOD   DS    CL8    +20 Time (TOD units) is used by     *00433000
                                   exit routine holding serialization. *00434000
                                   May be 0 if information is not      *00435000
                                   available. This is the CPU time     *00436000
                                   that serialization is held. It is   *00437000
                                   obtained by calculating the         *00438000
                                   TimeUsed delta before obtaining and *00439000
                                   after releasing the serialization.   00440000
SMF98_ExitTimeUsed    DS    CL8    +28 Time (TOD units) used by exit   *00441000
                                   routine up to the point the SMF     *00442000
                                   record is written. This is the CPU  *00443000
                                   time for the exit (including the    *00444000
                                   time holding serialization). It is  *00445000
                                   obtained by calculating the         *00446000
                                   TimeUsed delta between when the     *00447000
                                   exit is entered and until the exit  *00448000
                                   writes the record. For continuation *00449000
                                   records, the last record will have   00450000
*                                  the total time the exit used.        00451000
SMF98_CVTLDTO         DS    CL8    +30 Offset value needed to adjust   *00452000
                                   the TOD value to the local date and *00453000
                                   time of day. Add this offset to a   *00454000
                                   GMT to get the Local date/time.     *00455000
                                   Subtract this offset from a local   *00456000
                                   TOD format to get a GMT date/time.   00457000
SMF98_CVTLSO          DS    CL8    +38 Leap second offset value needed *00458000
                                   to adjust TOD values to and from a  *00459000
                                   system clock time. Times in the     *00460000
                                   SMF98 record are already            *00461000
                                   incremented with leap seconds,      *00462000
                                   however, other system times may not *00463000
                                   be adjusted. Add or subtract this   *00464000
                                   offset to allow for time            *00465000
                                   comparisons with TOD values not     *00466000
                                   adjusted for leap seconds.           00467000
SMF98_ECVTLDTO        DS    CL16   +40 Offset value needed to adjust   *00468000
                                   the ETOD value to the local date    *00469000
                                   and time of day. Add this offset to *00470000
                                   a GMT to get the Local date/time.   *00471000
                                   Subtract this offset from a local   *00472000
                                   ETOD format to get a GMT date/time.  00473000
SMF98_ECVTLSO         DS    CL16   +50 Leap second offset value needed *00474000
                                   to adjust ETOD values to and from a *00475000
                                   system clock time. Times in the     *00476000
                                   SMF98 record are already            *00477000
                                   incremented with leap seconds,      *00478000
                                   however, other system times may not *00479000
                                   be adjusted. Add or subtract this   *00480000
                                   offset to allow for time            *00481000
                                   comparisons with ETOD values not    *00482000
                                   adjusted for leap seconds.           00483000
*                                                                       00484000
*     Declare constants                                                 00485000
*                                                                       00486000
*                                                                       00487000
SMF98RTY_k98          EQU   98     Record type 98                       00488000
SMF98_kReleaseIndex_1 EQU   2      Current release index value          00489000
SMF98_kReleaseIndex_Max EQU 2                                           00490000
SMF98_kWithinReleaseIndex_1 EQU 1  Current within release index value   00491000
SMF98_kWithinReleaseIndex_Max EQU 2                                     00492000
SMF98_kPrototypeIndex_0 EQU 0      Initial Prototype Index value        00493000
SMF98_kPrototypeIndex_Max EQU 0                                         00494000
SMF98_kFixedLen       EQU   248    Header length Fixed length header   *00495000
                                   of SMF98                             00496000
SMF98_kErrRcdLen      EQU   72     Length of Type 98 error record that *00497000
                                   contains only the record header     *00498000
                                   with an error flag                   00499000
SMF98_kProcClassIndex_CP EQU 0     An array index that corresponds to  *00500000
                                   the CP processor class entry         00501000
SMF98_kProcClassIndex_zIIP EQU 2   An array index that corresponds to  *00502000
                                   the zIIP processor class entry       00503000
SMF98_ProcClass_CP    EQU   0      CP processor class value             00504000
SMF98_ProcClass_zCBP  EQU   2      zCBP.                                00505000
SMF98_ProcClass_zIIP  EQU   4      zIIP.                                00506000
SMF98_kPriorityBucket_All EQU 65535 Entry contains data from all       *00507000
                                   priority buckets                     00508000
SMF98_kPriorityBucket_1 EQU 1      Entry contains priority bucket 1 or *00509000
                                   critical priority data               00510000
SMF98_kPriorityBucket_2 EQU 2      Entry contains priority bucket 2 or *00511000
                                   high priority data                   00512000
SMF98_kPriorityBucket_3 EQU 3      Entry contains priority bucket 3 or *00513000
                                   low priority data                    00514000
SMF98_kPriorityBucket_4 EQU 4      Entry contains priority bucket 4 or *00515000
                                   discretionary priority data          00516000
SMF98_kConsume_SubBucket_All EQU 65535 Entry contains data from all    *00517000
                                   sub bucket priorities                00518000
SMF98_kConsume_SubBucket_1 EQU 1   Entry contains data from address    *00519000
                                   spaces that use a large amount of   *00520000
                                   cpu resources relative to other     *00521000
                                   address spaces on the system         00522000
SMF98_kConsume_SubBucket_2 EQU 2   Entry contains data from address    *00523000
                                   spaces that use a medium amount of  *00524000
                                   cpu resources relative to other     *00525000
                                   address spaces on the system         00526000
SMF98_kConsume_SubBucket_3 EQU 3   Entry contains data from address    *00527000
                                   spaces that use a small amount of   *00528000
                                   cpu resources relative to other     *00529000
                                   address spaces on the system         00530000
SMF98_kConsume_SubBucket_4 EQU 4   Entry contains data from address    *00531000
                                   spaces that use a fractional amount *00532000
                                   of cpu resources relative to other  *00533000
                                   address spaces on the system         00534000
SMF98_kPriorityBucket_MaxBuckets EQU 4 constant for maximum number of  *00535000
                                   priority buckets.                    00536000
SMF98_kConsume_SubBucket_MaxBucket EQU 4                                00537000
*                                                                       00538000
*  ------------------------------------------------------------------   00539000
*                                                                       00540000
*    Data Section for HFTS subtype records are separately mapped.       00541000
*                                                                       00542000
*    The location of the data section in the SMF record is              00543000
*    calculated by (Address of SMFR98 record + offset value in          00544000
*    SMF98DOF).                                                         00545000
*                                                                       00546000
*    The following subtype records for Type 98 are assigned.            00547000
*    See the subtype mapping for record details.                        00548000
*                                                                       00549000
*     Subtype Macro    Description                                      00550000
*     ------- -------- --------------------------------------------     00551000
*           1 IHAHR981 Supervisor HFTS data                             00552000
*           2 -        Reserved                                         00553000
*           3 IOSDS983 IOS - Asynchronous I/O                           00554000
*           4 IOSDS984 IOS - Synchronous I/O                            00555000
*        1024 DFHWICCD CICS data                                        00556000
*        1025 DFSSR98A IMS data                                         00557000
*      xxxxxx IHAHR098 SMF98WicData maps a generic IFAWIC generated     00558000
*                       subtype                                         00559000
*                                                                       00560000
*  ------------------------------------------------------------------   00561000
*  ------------------------------------------------------------------   00562000
*                                                                       00563000
*   Declare record subtypes for SMF Type 98 records (SMF98STY)          00564000
*                                                                       00565000
*  ------------------------------------------------------------------   00566000
*                                                                       00567000
*                                                                       00568000
SMF98STY_kSUPR        EQU   1      Supervisor subtype                   00569000
SMF98STY_kReserved2   EQU   2      Reserved                             00570000
SMF98STY_kIOS3        EQU   3      IOS subtype 3 - asynchronous        *00571000
                                   information                          00572000
SMF98STY_kIOS4        EQU   4      IOS subtype 4 - synchronous (zHL)   *00573000
                                   information                          00574000
SMF98STY_kIBM_CICS    EQU   1024   IBM CICS                             00575000
SMF98STY_kIBM_IMS     EQU   1025   IBM IMS                              00576000
SMF98CSS_Len          EQU   *-SMF98CSS                                  00577000
.L000D                ANOP                                              00578000
                      AIF   ('&SMF98WicData' EQ 'NO').L0011             00579000
                      AIF   ('&DSECT' EQ 'YES').L0012                   00580000
                      AIF   ('&SMF98WicData' NE 'YES').L0011            00581000
.L0012                ANOP                                              00582000
*                                                                       00583000
*  ------------------------------------------------------------------   00584000
*                                                                       00585000
*   IBM z/OS Workload Interaction Correlator Subtypes                   00586000
*                                                                       00587000
*   IBM z/OS Workload Interaction Correlator produces SMF type 98       00588000
*   records for IFAWIC registered subtypes.  The data section for       00589000
*   these subtypes are mapped as follows.  These mappings are not       00590000
*   complete. Use the mapping produced by the subtype holder to fill    00591000
*   in the missing pieces.                                              00592000
*                                                                       00593000
*   Generic Data Section                                                00594000
*   --------------------------------                                    00595000
*                                                                       00596000
*   A generic definition of the SMF98 data section used by the          00597000
*   IFAWIC expliter. The data section starts at SMF98DOF into the       00598000
*   record.                                                             00599000
*                                                                       00600000
*   The SMF type 98 data section for WIC subtypes begins with a         00601000
*   number of triplets (SMF98WicData_TripletsNum) for a length of       00602000
*   triplet area (SMF98WicData_TripletsLen). Check this triplet         00603000
*   information prior to accessing a section of the record. The         00604000
*   number triplet field is the primary indication of the existence     00605000
*   of a section.                                                       00606000
*                                                                       00607000
*  ------------------------------------------------------------------   00608000
*                                                                       00609000
*                                                                       00610000
                      AIF   ('&DSECT' EQ 'YES').L0013                   00611000
SMF98WicData          DS    0D     SMF98 generic WIC data section       00612000
                      AGO   .L0014                                      00613000
.L0013                ANOP                                              00614000
SMF98WicData          DSECT        SMF98 generic WIC data section       00615000
.L0014                ANOP                                              00616000
SMF98WicData_TripletsNum DS F      Number of data triplets              00617000
SMF98WicData_TripletsLen DS F      Length of the data triplets area     00618000
SMF98WicData_TripletsArea DS CL32  Data triplet area                    00619000
*                                                                       00620000
*      ***************************************************************  00621000
*      *                                                             *  00622000
*      * ------------------------------------------------------------*  00623000
*      * -- First aggregate bucket triplet                              00624000
*      * ------------------------------------------------------------*  00625000
*      * --                                                          *  00626000
*      *                                                             *  00627000
*      ***************************************************************  00628000
*                                                                       00629000
*                                                                       00630000
                      ORG   SMF98WicData_TripletsArea                   00631000
SMF98WicData_AggBucket1 DS  CL8                                         00632000
                      ORG   SMF98WicData_AggBucket1                     00633000
SMF98WicData_AggBucketOF1 DS F     Offset to the first aggregate       *00634000
                                   bucket section from the beginning   *00635000
                                   of the record                        00636000
SMF98WicData_AggBucketLN1 DS H     Length of the first aggregate       *00637000
                                   bucket section                       00638000
SMF98WicData_AggBucketON1 DS H     Number of first aggregate bucket    *00639000
                                   sections                             00640000
*                                                                       00641000
*      ***************************************************************  00642000
*      *                                                             *  00643000
*      * ------------------------------------------------------------*  00644000
*      * -- Second aggregate bucket triplet                             00645000
*      * ------------------------------------------------------------*  00646000
*      * --                                                          *  00647000
*      *                                                             *  00648000
*      ***************************************************************  00649000
*                                                                       00650000
*                                                                       00651000
SMF98WicData_AggBucket2 DS  CL8                                         00652000
                      ORG   SMF98WicData_AggBucket2                     00653000
SMF98WicData_AggBucketOF2 DS F     Offset to the second aggregate      *00654000
                                   bucket section from the beginning   *00655000
                                   of the record                        00656000
SMF98WicData_AggBucketLN2 DS H     Length of second aggregate bucket   *00657000
                                   section                              00658000
SMF98WicData_AggBucketON2 DS H     Number of sections in the second    *00659000
                                   aggregate bucket                     00660000
*                                                                       00661000
*      ***************************************************************  00662000
*      *                                                             *  00663000
*      * ------------------------------------------------------------*  00664000
*      * -- Job index triplet - contains indexes that references a   *  00665000
*      * job within the job list data                                   00666000
*      * ------------------------------------------------------------*  00667000
*      * --                                                          *  00668000
*      *                                                             *  00669000
*      ***************************************************************  00670000
*                                                                       00671000
*                                                                       00672000
SMF98WicData_JobIndex DS    CL8                                         00673000
                      ORG   SMF98WicData_JobIndex                       00674000
SMF98WicData_JobIndexOF DS  F      Offset to the job index section     *00675000
                                   from the beginning of record         00676000
SMF98WicData_JobIndexLN DS  H      Length of the job index section      00677000
SMF98WicData_JobIndexON DS  H      Number of job index sections         00678000
*                                                                       00679000
*      ***************************************************************  00680000
*      *                                                             *  00681000
*      * ------------------------------------------------------------*  00682000
*      * -- Job list triplet - List of unique ASIDs and jobnames        00683000
*      * ------------------------------------------------------------*  00684000
*      * --                                                          *  00685000
*      *                                                             *  00686000
*      ***************************************************************  00687000
*                                                                       00688000
*                                                                       00689000
SMF98WicData_JobList  DS    CL8                                         00690000
                      ORG   SMF98WicData_JobList                        00691000
SMF98WicData_JobListOF DS   F      Offset to the job list section from *00692000
                                   the beginning of the record          00693000
SMF98WicData_JobListLN DS   H      Length of the job list section       00694000
SMF98WicData_JobListON DS   H      Number of job list sections          00695000
*                                                                       00696000
*      ***************************************************************  00697000
*      *                                                             *  00698000
*      * ------------------------------------------------------------*  00699000
*      * -- Do not add subtype triplets after SMF98WWicData_JobBucON.*  00700000
*      * IBM reserves the right to add new triplets for all subtypes *  00701000
*      * here.                                                          00702000
*      * ------------------------------------------------------------*  00703000
*      * --                                                          *  00704000
*      *                                                             *  00705000
*      ***************************************************************  00706000
*                                                                       00707000
*                                                                       00708000
SMF98WicData_Len      EQU   *-SMF98WicData                              00709000
.L0011                ANOP                                              00710000
                      AIF   ('&SMF98AggBucket' EQ 'NO').L0015           00711000
                      AIF   ('&DSECT' EQ 'YES').L0016                   00712000
                      AIF   ('&SMF98AggBucket' NE 'YES').L0015          00713000
.L0016                ANOP                                              00714000
*                                                                       00715000
*  ------------------------------------------------------------------   00716000
*                                                                       00717000
*   SMF 98 Aggregate Bucket                                             00718000
*                                                                       00719000
*   The aggregate buckets contain summary data about an IFAWIC          00720000
*   exploiter's use of shared resources across multiple address         00721000
*   spaces.  The aggregate bucket is created from data an IFAWIC        00722000
*   exploiter exit routine passes to an SMF service to generate a       00723000
*   SMF type 98 records.                                                00724000
*                                                                       00725000
*   The exit routine is asked summarize statistics for groups of        00726000
*   jobs. We call these groups of jobs buckets. Each bucket contains    00727000
*   a collection of jobs with similar job priority and relative CPU     00728000
*   usage (job size).                                                   00729000
*                                                                       00730000
*   The exploiter provides data in the SMF98AggBucketExpArea to SMF     00731000
*   and SMF generates the header (SMF98AggBucketHdr) for the            00732000
*   aggregate bucket sections.                                          00733000
*                                                                       00734000
*   Note: the SMF 98 record contains buckets that have more than one    00735000
*   contributor (SMF98AggBucketEA_Contributors > 0).                    00736000
*                                                                       00737000
*   Note there are two possible aggregate bucket sections per WIC       00738000
*   subtype. One or both might contain data.                            00739000
*                                                                       00740000
*  ------------------------------------------------------------------   00741000
*                                                                       00742000
*                                                                       00743000
                      AIF   ('&DSECT' EQ 'YES').L0017                   00744000
SMF98AggBucket        DS    0H     Aggregate bucket                     00745000
                      AGO   .L0018                                      00746000
.L0017                ANOP                                              00747000
SMF98AggBucket        DSECT        Aggregate bucket                     00748000
.L0018                ANOP                                              00749000
SMF98AggBucketHdr     DS    CL6    Aggregate bucket header              00750000
                      ORG   SMF98AggBucketHdr                           00751000
SMF98AggBucketHdr_CPUType DS H     CPU type, can be one of: Value:     *00752000
                                   Meaning: Constant: 0 CP             *00753000
                                   PSAProcClass_CP 4 zIIP              *00754000
                                   PSAProcClass_zIIP                    00755000
SMF98AggBucketHdr_JobPriority DS H Job Priority, can be one of: Value: *00756000
                                   Meaning: Constant: FFFF All         *00757000
                                   SMF98_kPriorityBucket_All 1         *00758000
                                   Critical SMF98_kPriorityBucket_1 2  *00759000
                                   High SMF98_kPriorityBucket_2 3 Low  *00760000
                                   SMF98_kPriorityBucket_3 4           *00761000
                                   Discretionary                       *00762000
                                   SMF98_kPriorityBucket_4              00763000
SMF98AggBucketHdr_JobSize DS H     Job size relative to other jobs in  *00764000
                                   the system for this CPU type, can   *00765000
                                   be one of: Value: Meaning:          *00766000
                                   Constant: FFFF All                  *00767000
                                   SMF98_kConsume_SubBucket_All 1      *00768000
                                   Large SMF98_kConsume_SubBucket_1 2  *00769000
                                   Medium SMF98_kConsume_SubBucket_2 3 *00770000
                                   Small SMF98_kConsume_SubBucket_3 4  *00771000
                                   Tiny SMF98_kConsume_SubBucket_4      00772000
SMF98AggBucketExpArea DS    CL2    Aggregate bucket exploiter area      00773000
                      ORG   SMF98AggBucketExpArea                       00774000
SMF98AggBucketEA_Contributors DS H Number of address spaces            *00775000
                                   contributing to this bucket entry    00776000
SMF98AggBucketEA_Data DS    0C     Exploiter's data area                00777000
SMF98AggBucket_Len    EQU   *-SMF98AggBucket                            00778000
.L0015                ANOP                                              00779000
                      AIF   ('&SMF98JobIdx' EQ 'NO').L0019              00780000
                      AIF   ('&DSECT' EQ 'YES').L001A                   00781000
                      AIF   ('&SMF98JobIdx' NE 'YES').L0019             00782000
.L001A                ANOP                                              00783000
*                                                                       00784000
*  ------------------------------------------------------------------   00785000
*                                                                       00786000
*   SMF 98 exceptional job sections                                     00787000
*                                                                       00788000
*   An IFAWIC exploiters exit routine provides an exceptional job       00789000
*   for each CPU type, job priority and job size dimension for a        00790000
*   number of activites.                                                00791000
*                                                                       00792000
*   The IFAWIC exploiter provides this list to SMF and SMF              00793000
*   processing compresses the contents to two output areas, the SMF     00794000
*   98 job index sections and the SMF 98 job list sections.             00795000
*                                                                       00796000
*  ------------------------------------------------------------------   00797000
*  ------------------------------------------------------------------   00798000
*                                                                       00799000
*   SMF 98 job index sections                                           00800000
*                                                                       00801000
*   The SMF 98 job index section, mapped by SMF98JobIdx, identifies     00802000
*   the CPU type, job priority, and job size dimension of the bucket    00803000
*   and provides an index into the job list section where the           00804000
*   details of the exceptional job can be found.                        00805000
*                                                                       00806000
*   SMF98JobIdxActivityArea is a list of two byte fields that           00807000
*   represent indices into the SMF 98 job list section.  These          00808000
*   indices start at 1.  To find the offset for this exceptional        00809000
*   job, take                                                           00810000
*   SMF98WicData_JobListOF + (SMF98WicData_JobListLN *(n-1))            00811000
*   where n is the index number.                                        00812000
*                                                                       00813000
*  ------------------------------------------------------------------   00814000
*                                                                       00815000
*                                                                       00816000
                      AIF   ('&DSECT' EQ 'YES').L001B                   00817000
SMF98JobIdx           DS    0H     Job index data area                  00818000
                      AGO   .L001C                                      00819000
.L001B                ANOP                                              00820000
SMF98JobIdx           DSECT        Job index data area                  00821000
.L001C                ANOP                                              00822000
SMF98JobIdxHdr        DS    CL6    Job index header                     00823000
                      ORG   SMF98JobIdxHdr                              00824000
SMF98JobIdxHdr_CPUType DS   H      CPU type, can be one of Value:      *00825000
                                   Meaning: Constant: 0 CP             *00826000
                                   PSAProcClass_CP 4 zIIP              *00827000
                                   PSAProcClass_zIIP                    00828000
SMF98JobIdxHdr_JobPriority DS H    Job Priority, can be one of: Value: *00829000
                                   Meaning: Constant: FFFF All         *00830000
                                   SMF98_kPriorityBucket_All 1         *00831000
                                   Critical SMF98_kPriorityBucket_1 2  *00832000
                                   High SMF98_kPriorityBucket_2 3 Low  *00833000
                                   SMF98_kPriorityBucket_3 4           *00834000
                                   Discretionary                       *00835000
                                   SMF98_kPriorityBucket_4              00836000
SMF98JobIdxHdr_JobSize DS   H      Job size relative to other jobs in  *00837000
                                   the system for this CPU type, can   *00838000
                                   be one of: Value: Meaning:          *00839000
                                   Constant: FFFF All                  *00840000
                                   SMF98_kConsume_SubBucket_All 1      *00841000
                                   Large SMF98_kConsume_SubBucket_1 2  *00842000
                                   Medium SMF98_kConsume_SubBucket_2 3 *00843000
                                   Small SMF98_kConsume_SubBucket_3 4  *00844000
                                   Tiny SMF98_kConsume_SubBucket_4      00845000
SMF98JobIdxActivityArea DS  0C     Exploiter activity index area --    *00846000
                                   Each exploiter activity is assigned *00847000
                                   a 2-byte index. This area is an     *00848000
                                   array of 2-byte indices. These      *00849000
                                   indices start at 1 and describe the *00850000
                                   entry number into the SMF98JobList  *00851000
                                   with which to find the exceptional  *00852000
                                   job corresponding with the          *00853000
                                   exploiter defined activity. See the *00854000
                                   exploiters subtype definition for    00855000
*                                  more details.                        00856000
SMF98JobIdx_Len       EQU   *-SMF98JobIdx                               00857000
.L0019                ANOP                                              00858000
                      AIF   ('&SMF98JobList' EQ 'NO').L001D             00859000
                      AIF   ('&DSECT' EQ 'YES').L001E                   00860000
                      AIF   ('&SMF98JobList' NE 'YES').L001D            00861000
.L001E                ANOP                                              00862000
*                                                                       00863000
*  ------------------------------------------------------------------   00864000
*                                                                       00865000
*   SMF 98 job list section                                             00866000
*                                                                       00867000
*   The SMF 98 job list section, mapped by SMF98JobList, shows the      00868000
*   job name, address space ID number, and activity data for the        00869000
*   exceptional job.                                                    00870000
*                                                                       00871000
*  ------------------------------------------------------------------   00872000
*                                                                       00873000
*                                                                       00874000
                      AIF   ('&DSECT' EQ 'YES').L001F                   00875000
SMF98JobList          DS    0H     Job list data area                   00876000
                      AGO   .L0020                                      00877000
.L001F                ANOP                                              00878000
SMF98JobList          DSECT        Job list data area                   00879000
.L0020                ANOP                                              00880000
SMF98JobListHdr       DS    CL10   Job list header                      00881000
                      ORG   SMF98JobListHdr                             00882000
SMF98JobListHdr_ASID  DS    H      Address space ID number              00883000
SMF98JobListHdr_JobName DS  CL8    Job name                             00884000
SMF98JobListActivityArea DS 0C     Exploiter job activity area -- see  *00885000
                                   IFAWIC exploiter for their data     *00886000
                                   mapping                              00887000
*                                                                       00888000
*  ------------------------------------------------------------------   00889000
*                                                                       00890000
*   JobPriority constants                                               00891000
*                                                                       00892000
*                                                                       00893000
*  ------------------------------------------------------------------   00894000
*                                                                       00895000
*                                                                       00896000
SMF98_kJobPriorityAll EQU   -1                                          00897000
SMF98_kJobPriorityCritical EQU 1                                        00898000
SMF98_kJobPriorityHigh EQU  2                                           00899000
SMF98_kJobPriorityLow EQU   3                                           00900000
SMF98_kJobPriorityDisc EQU  4                                           00901000
*                                                                       00902000
*  ------------------------------------------------------------------   00903000
*                                                                       00904000
*   JobSize constants                                                   00905000
*                                                                       00906000
*                                                                       00907000
*  ------------------------------------------------------------------   00908000
*                                                                       00909000
*                                                                       00910000
SMF98_kJobSizeAll     EQU   -1                                          00911000
SMF98_kJobSizeLarge   EQU   1                                           00912000
SMF98_kJobSizeMedium  EQU   2                                           00913000
SMF98_kJobSizeSmall   EQU   3                                           00914000
SMF98_kJobSizeTiny    EQU   4                                           00915000
SMF98JobList_Len      EQU   *-SMF98JobList                              00916000
.L001D                ANOP                                              00917000
                      GBLC  &IFASMFRA_RECTYPE_98                        00918000
                      AIF ('&IFASMFRA_RECTYPE_98' NE 'YES').S98BCPDONE E00919000
                      IHAHR981                                          00920000
                      IOSDS983                                  @07A    00921000
                      IOSDS984                                  @07A    00922000
.S98BCPDONE           ANOP                                      @07A    00923000
                      AIF   ('&ZCBPRINT' EQ 'NO').P3                    00924000
                      AIF   ('&LIST' EQ 'YES').P4                       00925000
.P3                   ANOP                                              00926000
                      POP   PRINT                                       00927000
.P4                   ANOP                                              00928000
.P_EXIT               ANOP                                              00929000
                      MEND                                              00930000
**/ ;                                                                   00931000
* %IHAHR098_INCLUDED = 'YES';                                           00932000
* %DCL ZCBPRINT CHAR EXT;                                               00933000
* %DEACTIVATE ZCBPRINT;                                                 00934000
* %DCL IHAHR098_LIST CHAR EXT;                                          00935000
* %DEACTIVATE IHAHR098_LIST;                                            00936000
* %IF IHAHR098_LIST = 'NO' !                                            00937000
*    ZCBPRINT = 'NO' %THEN                                              00938000
* %DO;                                                                  00939000
*   @LIST PUSH NOECHO;                                                  00940000
*   @LIST NOASSEMBLE NOECHO;                                            00941000
*   @LIST OFF C NOECHO;                                                 00942000
* %END;                                                                 00943000
*/* Start of PL/X Source                                             */ 00944000
*%IF SMF98BASE='' %THEN                                                 00945000
*  %DO;                                                                 00946000
*    %SMF98BASE='BASED(SMF98PTR)';                                      00947000
*  %END;                                                                00948000
*%IF SMF98BASE='BASED(SMF98PTR)' %THEN                                  00949000
*  %DO;                                                                 00950000
*    DCL SMF98PTR PTR(31) NoReg;    /* Pointer to SMFR98             */ 00951000
*  %END;                                                                00952000
*                                                                       00953000
*DCL                                                                    00954000
*  1 SMFR98 SMF98BASE BDY(DWORD),                                       00955000
*   2 SMF98RPS,                     /*+0 Fixed record sections       */ 00956000
*/*                                                                  */ 00957000
*/*  SMF Record 98 Header Section                                    */ 00958000
*/*                                                                  */ 00959000
*    3 SMF98RHD,                    /*+0 Record header section       */ 00960000
*      5 SMF98LEN   Fixed(15),      /*+0 Record length                  00961000
*                                      (including this field)        */ 00962000
*      5 SMF98SEG   Fixed(15),      /*+2 Segment descriptor             00963000
*                                      (provided by SMF)             */ 00964000
*      5 SMF98FLG   Bit(8),         /*+4 Header flag byte            */ 00965000
*        7 SMF98SSF Bit(1),         /* Bit 0 - Subsys ID after Sys ID*/ 00966000
*        7 SMF98SBT Bit(1),         /* Bit 1 - Subtypes utilized     */ 00967000
*        7 * Bit(1),                /* Bit 2                         */ 00968000
*        7 * Bit(1),                /* Bit 3                         */ 00969000
*        7 * Bit(1),                /* Bit 4                         */ 00970000
*        7 * Bit(1),                /* Bit 5                         */ 00971000
*        7 * Bit(1),                /* Bit 6                         */ 00972000
*        7 * Bit(1),                /* Bit 7                         */ 00973000
*      5 SMF98RTY   Bit(8),         /*+5 Record type - 98 ('62'x)    */ 00974000
*      5 SMF98TME   Fixed(31) Bdy(HWord), /*+6 Record written time   */ 00975000
*      5 SMF98DTE   Fixed(31) Bdy(HWord), /*+A Record written date   */ 00976000
*      5 SMF98SID   Char(4),        /*+E System identifier              00977000
*                                                                    */ 00978000
*      5 SMF98SSI   Char(4),        /*+12 Subsystem identifier       */ 00979000
*      5 SMF98STY   Fixed(15),      /*+16 Record subtype:               00980000
*                                      1 = Supervisor                   00981000
*                                      2 = reserved                     00982000
*                                      3 = IOS, Asynchronous I/O        00983000
*                                      4 = IOS, Synchronous (zHL) I/O   00984000
*                                      1024 = IBM CICS                  00985000
*                                      1025 = IBM IMS                   00986000
*                                                                @07C*/ 00987000
*      5 SMF98IND    Bit(8),        /*+18 Additional record flags    */ 00988000
*        7 SMF98More Bit(1),        /* This SMF record has multiple     00989000
*                                      parts. There are more parts to   00990000
*                                      come. For a single part record,  00991000
*                                      this bit must be OFF. On the     00992000
*                                      first part of a multiple part    00993000
*                                      record, SMF98More = ON and       00994000
*                                      SMF98CONT = OFF. On the          00995000
*                                      subsequent parts for the same    00996000
*                                      record, both SMF98More and       00997000
*                                      SMF98CONT must be ON.  On the    00998000
*                                      last record part, SMF98More =    00999000
*                                      OFF and SMF98CONT = ON.       */ 01000000
*        7 SMF98CONT  Bit(1),       /* This record part is the          01001000
*                                      continuation of the multiple     01002000
*                                      part record.  SMF98CONT must be  01003000
*                                      OFF on the first part of the     01004000
*                                      record.                       */ 01005000
*        7 SMF98NoStorage Bit(1),   /* SMF buffer storage unavailable.  01006000
*                                      Standard SMF Type 98 record not  01007000
*                                      created.                      */ 01008000
*      5 SMF98PartSeqNo Fixed(8),   /*+19 Record part sequence number.  01009000
*                                      It identifies the order of the   01010000
*                                      record part in a multiple-part   01011000
*                                      SMF 98 record.  Meaningful       01012000
*                                      only when record has multiple    01013000
*                                      parts, i.e. SMF98More is set     01014000
*                                      on the first part of the         01015000
*                                      record.  The value is 0 on the   01016000
*                                      first part, 1 on the next        01017000
*                                      part, and so on.              */ 01018000
*      5 SMF98SDSLen    Fixed(15),  /*+1A Length of the SMF98SDS        01019000
*                                      self-defining section         */ 01020000
*      5 SMF98SDSTripletsNum Fixed(15), /*+1C Number of triplets in     01021000
*                                      the self-defining section     */ 01022000
*      5 *              Char(18),   /*+1E Reserved                   */ 01023000
*      5 SMF98RHDEnd Char(0) Bdy(Dword); /*+30 Reserved                 01024000
*                                                                @02A*/ 01025000
*/*                                                                  */ 01026000
*/*  Self Defining Section                                           */ 01027000
*/*                                                                  */ 01028000
*DCL                                                                    01029000
*  1 SMF98SDS BASED(ADDR(SMFR98)+LENGTH(SMF98RPS)),                     01030000
*                                                                       01031000
*    /* Identification section control area                          */ 01032000
*    3 SMF98IOF       Fixed(31),    /*                                  01033000
*                                      Offset of identification section 01034000
*                                      from beginning of record         01035000
*                                      mapped by: SMF98ID               01036000
*                                                                @01C*/ 01037000
*    3 SMF98ILN       Fixed(15),    /*                                  01038000
*                                      Length of identification  @01C*/ 01039000
*    3 SMF98ION       Fixed(15),    /*                                  01040000
*                                      ++TripletNumber                  01041000
*                                      Number of identification  @01C*/ 01042000
*                                                                       01043000
*    /* Context summary control area                                 */ 01044000
*    3 SMF98CSOF      Fixed(31),    /*                                  01045000
*                                      Offset to context summary        01046000
*                                      section from beginning of        01047000
*                                      record mapped by: SMF98CSS       01048000
*                                                                @01C*/ 01049000
*    3 SMF98CSLN      Fixed(15),    /*                                  01050000
*                                      Length of context summary        01051000
*                                      section                   @01C*/ 01052000
*    3 SMF98CSON      Fixed(15),    /*                                  01053000
*                                      Number of context summary        01054000
*                                      section                   @01C*/ 01055000
*                                                                       01056000
*    /* Data section control area                                    */ 01057000
*    3 SMF98DOF       Fixed(31),    /*                                  01058000
*                                      Offset of data section from      01059000
*                                      beginning of record              01060000
*                                      mapping                          01061000
*                                                                @07C*/ 01062000
*    3 SMF98DLN       Fixed(15),    /*                                  01063000
*                                      Length of data section    @01C*/ 01064000
*    3 SMF98DON       Fixed(15);    /*                                  01065000
*                                      Number of data sections   @01C*/ 01066000
*                                                                       01067000
*%/* Note: If anything besides triplets are added to SMF98SDS,          01068000
*          or if the structure of the triplets changes in any one       01069000
*          triplet that is different than the others, you must          01070000
*          update the calculation in SMF98_kSDSTripletsNum.     */;     01071000
*                                                                       01072000
*/*                                                                  */ 01073000
*/*  Identification Section.                                         */ 01074000
*/*                                                                  */ 01075000
*/*  Its location in the SMF record is calculated by (Address of     */ 01076000
*/*  SMFR98 record + offset value in SMF98IOF).                      */ 01077000
*/*                                                                  */ 01078000
*DCL                                                                    01079000
*  1 SMF98ID BASED(ADDR(SMFR98)+SMF98IOF),                              01080000
*    3 SMF98JBN       Char(8),      /* JobName                       */ 01081000
*    3 SMF98RST       Fixed(31),    /* Reader start time             */ 01082000
*    3 SMF98RSD       Char(4),      /* Reader start date             */ 01083000
*    3 SMF98STP       Char(8),      /* Step name                     */ 01084000
*    3 SMF98IntervalStart Char(8),  /* The interval start time -- Local 01085000
*                                      time in STCK format.  Can be     01086000
*                                      converted to GMT time by         01087000
*                                      subtracting SMF98_CVTLDTO        01088000
*                                      from this value                  01089000
*                                                                @01C*/ 01090000
*    3 SMF98IntervalEnd   Char(8),  /* The interval end time -- Local   01091000
*                                      time in STCK format.             01092000
*                                      Can be converted to GMT time by  01093000
*                                      subtracting SMF98_CVTLDTO        01094000
*                                      from this value                  01095000
*                                                                @01C*/ 01096000
*    3 SMF98SysName   Char(8),      /* System Name when first byte not  01097000
*                                      x'00'                            01098000
*                                                                @02C*/ 01099000
*    3 SMF98IntervalStart_ETOD Char(16), /* The interval start time --  01100000
*                                      Local time in ETOD format.  Can  01101000
*                                      be converted to GMT time by      01102000
*                                      subtracting SMF98_ECVTLDTO from  01103000
*                                      this value                @02C*/ 01104000
*    3 SMF98IntervalEnd_ETOD Char(16); /* The interval end time --      01105000
*                                      Local time in ETOD format.  Can  01106000
*                                      be converted to GMT time by      01107000
*                                      subtracting SMF98_ECVTLDTO from  01108000
*                                      this value                       01109000
*                                                                @02C*/ 01110000
*                                                                       01111000
*/*  Context summary section                                         */ 01112000
*/*                                                                  */ 01113000
*/*  The location in the SMF record is calculated by (Address of     */ 01114000
*/*  SMFR98 record + offset value in SMF98CSOF).                     */ 01115000
*/*                                                                  */ 01116000
*DCL                                                                    01117000
*  1 SMF98CSS BASED(ADDR(SMFR98)+SMF98CSOF),                            01118000
*   3 SMF98_HftsInfo   Char(8),     /*+00                               01119000
*                                      An 8-byte token that is          01120000
*                                      equivalent across SMF 98         01121000
*                                      subtypes for the same interval   01122000
*                                                                @02C*/ 01123000
*   /* Note: The SMF98_SubtypeInfo is a one to one mapping to        */ 01124000
*   /*       WicWR_SubtypeInfo in IFAWICCB.  Changes to              */ 01125000
*   /*       SMF98_SubtypeInfo will require the same changes to the  */ 01126000
*   /*       WicWR_SubtypeInfo mapping.                          @03A*/ 01127000
*   3 SMF98_SubtypeInfo,             /*+08 Subtype Info          @04C*/ 01128000
*    5 SMF98_ReleaseIndex Fixed(16), /*+08                              01129000
*                                      Release index - incremented when 01130000
*                                      a subtype record in a product is 01131000
*                                      significantly changed (ex. new   01132000
*                                      sections and fields are added    01133000
*                                      for the release of a new version 01134000
*                                      of z/OS). When this value is     01135000
*                                      incremented                      01136000
*                                      SMF98_WithinReleaseIndex is      01137000
*                                      reset to 1.                      01138000
*                                                                @01C*/ 01139000
*    5 SMF98_WithinReleaseIndex Fixed(16), /*+0A                        01140000
*                                      Within-release index -           01141000
*                                      incremented when small changes   01142000
*                                      are made to a subtype (ex. a new 01143000
*                                      field is added in an APAR)       01144000
*                                                                @01C*/ 01145000
*    5 SMF98_PrototypeIndex Fixed(16), /*+0C                            01146000
*                                      Prototype index - incremented    01147000
*                                      for any temporary changes for a  01148000
*                                      given ReleaseIndex and           01149000
*                                      WithinReleaseIndex (ex. can      01150000
*                                      denote changes to the SMF record 01151000
*                                      for different versions of a      01152000
*                                      ++APAR). Set to 0 for any        01153000
*                                      official code.                   01154000
*                                                                @01C*/ 01155000
*    5 *                   Char(2),  /*+0E Reserved                  */ 01156000
*    5 SMF98_Prodlevel     Char(16), /*+10                              01157000
*                                      EBCDIC Product Level             01158000
*                                      Information.  For z/OS           01159000
*                                      components, use CVTPROD       */ 01160000
*   3 SMF98_ExitSerialTOD Char(8),  /*+20                               01161000
*                                      Time (TOD units) is used         01162000
*                                      by exit routine holding          01163000
*                                      serialization.                   01164000
*                                      May be 0 if information is not   01165000
*                                      available.                       01166000
*                                      This is the CPU time that        01167000
*                                      serialization is held.  It is    01168000
*                                      obtained by calculating the      01169000
*                                      TimeUsed delta before            01170000
*                                      obtaining and after releasing    01171000
*                                      the serialization.            */ 01172000
*   3 SMF98_ExitTimeUsed  Char(8),  /*+28                               01173000
*                                      Time (TOD units) used by         01174000
*                                      exit routine up to the point     01175000
*                                      the SMF record is written.       01176000
*                                      This is the CPU time for the     01177000
*                                      exit (including the time         01178000
*                                      holding serialization). It is    01179000
*                                      obtained by calculating the      01180000
*                                      TimeUsed delta between when      01181000
*                                      the exit is entered and until    01182000
*                                      the exit writes the record.      01183000
*                                      For continuation records, the    01184000
*                                      last record will have the total  01185000
*                                      time the exit used.           */ 01186000
*   3 SMF98_CVTLDTO  Char(8),       /*+30 Offset value needed to        01187000
*                                      adjust the TOD value to the      01188000
*                                      local date and time of day.      01189000
*                                      Add this offset to a GMT to get  01190000
*                                      the Local date/time.             01191000
*                                      Subtract this offset from a      01192000
*                                      local TOD format to get a GMT    01193000
*                                      date/time.                    */ 01194000
*   3 SMF98_CVTLSO Char(8),         /*+38 Leap second offset value      01195000
*                                      needed to adjust TOD values to   01196000
*                                      and from a system clock time.    01197000
*                                      Times in the SMF98 record are    01198000
*                                      already incremented with leap    01199000
*                                      seconds, however, other system   01200000
*                                      times may not be adjusted.  Add  01201000
*                                      or subtract this offset to allow 01202000
*                                      for time comparisons with TOD    01203000
*                                      values not adjusted for leap     01204000
*                                      seconds.                      */ 01205000
*   3 SMF98_ECVTLDTO  Char(16),     /*+40 Offset value needed to        01206000
*                                      adjust the ETOD value to the     01207000
*                                      local date and time of day.      01208000
*                                      Add this offset to a GMT to get  01209000
*                                      the Local date/time.             01210000
*                                      Subtract this offset from a      01211000
*                                      local ETOD format to get a GMT   01212000
*                                      date/time.                    */ 01213000
*   3 SMF98_ECVTLSO Char(16);       /*+50 Leap second offset value      01214000
*                                      needed to adjust ETOD values to  01215000
*                                      and from a system clock time.    01216000
*                                      Times in the SMF98 record are    01217000
*                                      already incremented with leap    01218000
*                                      seconds, however, other system   01219000
*                                      times may not be adjusted.  Add  01220000
*                                      or subtract this offset to allow 01221000
*                                      for time comparisons with ETOD   01222000
*                                      values not adjusted for leap     01223000
*                                      seconds.                      */ 01224000
*                                                                       01225000
*  /* Declare constants                                              */ 01226000
*                                                                       01227000
*DCL SMF98RTY_k98    Fixed(8) Constant(98); /* Record type 98        */ 01228000
*                                                                       01229000
*DCL SMF98_kReleaseIndex_1 Fixed(16) Constant(2); /* Current release    01230000
*                                      index value                   */ 01231000
*DCL SMF98_kReleaseIndex_Max Fixed(16)                                  01232000
*          Constant(SMF98_kReleaseIndex_1);                             01233000
*DCL SMF98_kWithinReleaseIndex_1 Fixed(16) Constant(1);  /* Current     01234000
*                                      within release index value    */ 01235000
*DCL SMF98_kWithinReleaseIndex_Max Fixed(16)                            01236000
*          Constant(SMF98_kReleaseIndex_1);                             01237000
*DCL SMF98_kPrototypeIndex_0  Fixed(16) Constant(0);  /* Initial        01238000
*                                      Prototype Index value         */ 01239000
*DCL SMF98_kPrototypeIndex_Max Fixed(16)                                01240000
*          Constant(SMF98_kPrototypeIndex_0);                           01241000
*                                                                       01242000
*DCL SMF98_kSDSTripletsNum Fixed(32) Constant(Length(SMF98SDS) /        01243000
*                (Length(SMF98IOF)+Length(SMF98ILN)+Length(SMF98ION))   01244000
*                                ); /* Number of triplets in            01245000
*                                      self-defining section         */ 01246000
*DCL SMF98_kFixedLen Fixed(32) Constant(                                01247000
*                        Length(SMF98RPS)   /* Header length         */ 01248000
*                       +Length(SMF98SDS)                               01249000
*                       +Length(SMF98ID)                                01250000
*                       +Length(SMF98CSS)                               01251000
*                       );          /* Fixed length header of SMF98  */ 01252000
*DCL SMF98_kErrRcdLen Fixed(32) Constant(                               01253000
*                        Length(SMF98RPS)                               01254000
*                       +Length(SMF98SDS)                               01255000
*                       );          /* Length of Type 98 error record   01256000
*                                      that contains only the record    01257000
*                                      header with an error flag     */ 01258000
*DCL SMF98_kProcClassIndex_CP     Fixed(16) Constant(0) /* An array     01259000
*                                      index that corresponds to the CP 01260000
*                                      processor class entry     @02A*/ 01261000
*   ,SMF98_kProcClassIndex_zIIP Fixed(16) Constant(2) /* An array       01262000
*                                      index that corresponds to the    01263000
*                                      zIIP processor class entry       01264000
*                                                                @02A*/ 01265000
*   ,SMF98_ProcClass_CP     Fixed(8) Constant(0) /* CP processor class  01266000
*                                      value                            01267000
*                                                                @02A*/ 01268000
*   ,SMF98_ProcClass_zCBP Fixed(8) Constant(2) /* zCBP.                 01269000
*                                                                @02A*/ 01270000
*   ,SMF98_ProcClass_zIIP Fixed(8) Constant(4) /* zIIP.                 01271000
*                                                                @02A*/ 01272000
*   ,SMF98_kPriorityBucket_All Fixed(16) Constant('FFFF'x) /* Entry     01273000
*                                      contains data from all priority  01274000
*                                      buckets                          01275000
*                                                                @02A*/ 01276000
*   ,SMF98_kPriorityBucket_1     Fixed(16) Constant(1) /* Entry         01277000
*                                      contains priority bucket 1 or    01278000
*                                      critical priority data           01279000
*                                                                @02A*/ 01280000
*   ,SMF98_kPriorityBucket_2     Fixed(16) Constant(2) /* Entry         01281000
*                                      contains priority bucket 2 or    01282000
*                                      high priority data               01283000
*                                                                @02A*/ 01284000
*   ,SMF98_kPriorityBucket_3     Fixed(16) Constant(3) /* Entry         01285000
*                                      contains priority bucket 3 or    01286000
*                                      low priority data                01287000
*                                                                @02A*/ 01288000
*   ,SMF98_kPriorityBucket_4     Fixed(16) Constant(4) /* Entry         01289000
*                                      contains priority bucket 4 or    01290000
*                                      discretionary priority data      01291000
*                                                                @02A*/ 01292000
*   ,SMF98_kConsume_SubBucket_All Fixed(16) Constant('FFFF'x) /* Entry  01293000
*                                      contains data from all sub       01294000
*                                      bucket priorities                01295000
*                                                                @02A*/ 01296000
*   ,SMF98_kConsume_SubBucket_1 Fixed(16) Constant(1) /* Entry contains 01297000
*                                      data from address spaces that    01298000
*                                      use a large amount of cpu        01299000
*                                      resources relative to other      01300000
*                                      address spaces on the system     01301000
*                                                                @02A*/ 01302000
*   ,SMF98_kConsume_SubBucket_2 Fixed(16) Constant(2) /* Entry contains 01303000
*                                      data from address spaces that    01304000
*                                      use a medium amount of cpu       01305000
*                                      resources relative to other      01306000
*                                      address spaces on the system     01307000
*                                                                @02A*/ 01308000
*   ,SMF98_kConsume_SubBucket_3 Fixed(16) Constant(3) /* Entry contains 01309000
*                                      data from address spaces that    01310000
*                                      use a small amount of cpu        01311000
*                                      resources relative to other      01312000
*                                      address spaces on the system     01313000
*                                                                @02A*/ 01314000
*   ,SMF98_kConsume_SubBucket_4 Fixed(16) Constant(4) /* Entry contains 01315000
*                                      data from address spaces that    01316000
*                                      use a fractional amount of cpu   01317000
*                                      resources relative to other      01318000
*                                      address spaces on the system     01319000
*                                                                @02A*/ 01320000
*   ,SMF98_kPriorityBucket_MaxBuckets Fixed(16) Constant(4) /*          01321000
*                                      constant for maximum number of   01322000
*                                      priority buckets.         @02A*/ 01323000
*   ,SMF98_kConsume_SubBucket_MaxBucket Fixed(16)                       01324000
*       Constant(SMF98_kConsume_SubBucket_4) /*                  @02A*/ 01325000
*   ;                                                                   01326000
*                                                                       01327000
*/*------------------------------------------------------------------*/ 01328000
*/*                                                                  */ 01329000
*/*  Data Section for HFTS subtype records are separately mapped.    */ 01330000
*/*                                                                  */ 01331000
*/*  The location of the data section in the SMF record is           */ 01332000
*/*  calculated by (Address of SMFR98 record + offset value in       */ 01333000
*/*  SMF98DOF).                                                      */ 01334000
*/*                                                                  */ 01335000
*/*  The following subtype records for Type 98 are assigned.         */ 01336000
*/*  See the subtype mapping for record details.                     */ 01337000
*/*                                                                  */ 01338000
*/*   Subtype Macro    Description                                   */ 01339000
*/*   ------- -------- --------------------------------------------  */ 01340000
*/*         1 IHAHR981 Supervisor HFTS data                          */ 01341000
*/*         2 -        Reserved                                  @05A*/ 01342000
*/*         3 IOSDS983 IOS - Asynchronous I/O                    @07A*/ 01343000
*/*         4 IOSDS984 IOS - Synchronous I/O                     @07A*/ 01344000
*/*      1024 DFHWICCD CICS data                                 @02A*/ 01345000
*/*      1025 DFSSR98A IMS data                                  @02A*/ 01346000
*/*    xxxxxx IHAHR098 SMF98WicData maps a generic IFAWIC generated  */ 01347000
*/*                     subtype                                      */ 01348000
*/*                                                                  */ 01349000
*/*------------------------------------------------------------------*/ 01350000
*                                                                       01351000
*/*------------------------------------------------------------------*/ 01352000
*/*                                                                  */ 01353000
*/* Declare record subtypes for SMF Type 98 records (SMF98STY)       */ 01354000
*/*                                                                  */ 01355000
*/*------------------------------------------------------------------*/ 01356000
*                                                                       01357000
*DCL SMF98STY_kSUPR  Fixed(16) Constant(1); /* Supervisor subtype    */ 01358000
*DCL SMF98STY_kReserved2 Fixed(16) Constant(2); /* Reserved      @05A*/ 01359000
*DCL SMF98STY_kIOS3  Fixed(16) Constant(3); /* IOS subtype 3 -          01360000
*                                      asynchronous information  @07A*/ 01361000
*DCL SMF98STY_kIOS4  Fixed(16) Constant(4); /* IOS subtype 4 -          01362000
*                                      synchronous (zHL) information    01363000
*                                                                @07A*/ 01364000
*DCL SMF98STY_kIBM_CICS Fixed(16) Constant(1024); /* IBM CICS    @02A*/ 01365000
*DCL SMF98STY_kIBM_IMS  Fixed(16) Constant(1025); /* IBM IMS     @02A*/ 01366000
*                                                                       01367000
*%/* Whenever SMF type 98 subtypes are added, their mappings macros     01368000
*    must be added below to the PLX and ASM generated sections.     */; 01369000
*                                                                       01370000
* %IF IFAR98 ^= '' %THEN                                                01371000
*  %DO;                                                                 01372000
*   %INCLUDE SYSLIB(IHAHR981) NOSEG;                                    01373000
*   %INCLUDE SYSLIB(IOSDS983) NOSEG;        /* IOS subtype 3 - asynch   01374000
*                                              I/O               @07A*/ 01375000
*   %INCLUDE SYSLIB(IOSDS984) NOSEG;        /* IOS subtype 4 - synch    01376000
*                                              I/O (zHL)         @07A*/ 01377000
*  %END;                                                                01378000
*                                                                       01379000
*                                                                       01380000
*/*------------------------------------------------------------------*/ 01381000
*/*                                                                  */ 01382000
*/* IBM z/OS Workload Interaction Correlator Subtypes                */ 01383000
*/*                                                                  */ 01384000
*/* IBM z/OS Workload Interaction Correlator produces SMF type 98    */ 01385000
*/* records for IFAWIC registered subtypes.  The data section for    */ 01386000
*/* these subtypes are mapped as follows.  These mappings are not    */ 01387000
*/* complete. Use the mapping produced by the subtype holder to fill */ 01388000
*/* in the missing pieces.                                           */ 01389000
*/*                                                                  */ 01390000
*/* Generic Data Section                                             */ 01391000
*/* --------------------------------                                 */ 01392000
*/*                                                                  */ 01393000
*/* A generic definition of the SMF98 data section used by the       */ 01394000
*/* IFAWIC expliter. The data section starts at SMF98DOF into the    */ 01395000
*/* record.                                                          */ 01396000
*/*                                                                  */ 01397000
*/* The SMF type 98 data section for WIC subtypes begins with a      */ 01398000
*/* number of triplets (SMF98WicData_TripletsNum) for a length of    */ 01399000
*/* triplet area (SMF98WicData_TripletsLen). Check this triplet      */ 01400000
*/* information prior to accessing a section of the record. The      */ 01401000
*/* number triplet field is the primary indication of the existence  */ 01402000
*/* of a section.                                                    */ 01403000
*/*                                                              @03A*/ 01404000
*/*------------------------------------------------------------------*/ 01405000
*DCL                                                                    01406000
*  1 SMF98WicData Based(Addr(SMFR98)+SMF98DOF), /* SMF98 generic WIC    01407000
*                                      data section              @03A*/ 01408000
*   3 SMF98WicData_TripletsNum Fixed(31), /* Number of data triplets    01409000
*                                                                @03A*/ 01410000
*   3 SMF98WicData_TripletsLen Fixed(31), /* Length of the data         01411000
*                                      triplets area                    01412000
*                                                                @03A*/ 01413000
*   3 SMF98WicData_TripletsArea,    /* Data triplet area                01414000
*                                                                @03A*/ 01415000
*                                                                       01416000
*    /*--------------------------------------------------------------*/ 01417000
*    /* First aggregate bucket triplet                           @03A*/ 01418000
*    /*--------------------------------------------------------------*/ 01419000
*    5 SMF98WicData_AggBucket1,                                         01420000
*     7 SMF98WicData_AggBucketOF1 Fixed(31), /*                         01421000
*                                      Offset to the first aggregate    01422000
*                                      bucket section from the          01423000
*                                      beginning of the record          01424000
*                                                                @06C*/ 01425000
*     7 SMF98WicData_AggBucketLN1 Fixed(15), /*                         01426000
*                                      Length of the first aggregate    01427000
*                                      bucket section            @03A*/ 01428000
*     7 SMF98WicData_AggBucketON1 Fixed(15), /*                         01429000
*                                      Number of first aggregate bucket 01430000
*                                      sections                  @03A*/ 01431000
*                                                                       01432000
*    /*--------------------------------------------------------------*/ 01433000
*    /* Second aggregate bucket triplet                          @03A*/ 01434000
*    /*--------------------------------------------------------------*/ 01435000
*    5 SMF98WicData_AggBucket2,                                         01436000
*     7 SMF98WicData_AggBucketOF2 Fixed(31), /*                         01437000
*                                      Offset to the second aggregate   01438000
*                                      bucket section from the          01439000
*                                      beginning of the  record         01440000
*                                                                @06C*/ 01441000
*     7 SMF98WicData_AggBucketLN2 Fixed(15), /*                         01442000
*                                      Length of second aggregate       01443000
*                                      bucket section            @03A*/ 01444000
*     7 SMF98WicData_AggBucketON2 Fixed(15), /*                         01445000
*                                      Number of sections in the second 01446000
*                                      aggregate bucket          @03A*/ 01447000
*                                                                       01448000
*    /*--------------------------------------------------------------*/ 01449000
*    /* Job index triplet - contains indexes that references a job   */ 01450000
*    /* within the job list data                                 @03A*/ 01451000
*    /*--------------------------------------------------------------*/ 01452000
*    5 SMF98WicData_JobIndex,                                           01453000
*     7 SMF98WicData_JobIndexOF Fixed(31), /*                           01454000
*                                      Offset to the job index          01455000
*                                      section from the beginning of    01456000
*                                      record                    @06C*/ 01457000
*     7 SMF98WicData_JobIndexLN Fixed(15), /*                           01458000
*                                      Length of the job index          01459000
*                                      section                   @03A*/ 01460000
*     7 SMF98WicData_JobIndexON Fixed(15), /*                           01461000
*                                      Number of job index sections     01462000
*                                                                @03A*/ 01463000
*                                                                       01464000
*    /*--------------------------------------------------------------*/ 01465000
*    /* Job list triplet - List of unique ASIDs and jobnames     @03A*/ 01466000
*    /*--------------------------------------------------------------*/ 01467000
*    5 SMF98WicData_JobList,                                            01468000
*     7 SMF98WicData_JobListOF Fixed(31), /*                            01469000
*                                      Offset to the job list section   01470000
*                                      from the beginning of the        01471000
*                                      record                    @06C*/ 01472000
*     7 SMF98WicData_JobListLN Fixed(15), /*                            01473000
*                                      Length of the job list section   01474000
*                                                                @03A*/ 01475000
*     7 SMF98WicData_JobListON Fixed(15), /*                            01476000
*                                      Number of job list sections      01477000
*                                                                @03A*/ 01478000
*                                                                       01479000
*    /*--------------------------------------------------------------*/ 01480000
*    /* Do not add subtype triplets after SMF98WWicData_JobBucON.    */ 01481000
*    /* IBM reserves the right to add new triplets for all subtypes  */ 01482000
*    /* here.                                                        */ 01483000
*    /*                                                          @03A*/ 01484000
*    /*--------------------------------------------------------------*/ 01485000
*   3 * Char(0) Bdy(DWord);         /*                           @03A*/ 01486000
*                                                                       01487000
*/*------------------------------------------------------------------*/ 01488000
*/*                                                                  */ 01489000
*/* SMF 98 Aggregate Bucket                                          */ 01490000
*/*                                                                  */ 01491000
*/* The aggregate buckets contain summary data about an IFAWIC       */ 01492000
*/* exploiter's use of shared resources across multiple address      */ 01493000
*/* spaces.  The aggregate bucket is created from data an IFAWIC     */ 01494000
*/* exploiter exit routine passes to an SMF service to generate a    */ 01495000
*/* SMF type 98 records.                                             */ 01496000
*/*                                                                  */ 01497000
*/* The exit routine is asked summarize statistics for groups of     */ 01498000
*/* jobs. We call these groups of jobs buckets. Each bucket contains */ 01499000
*/* a collection of jobs with similar job priority and relative CPU  */ 01500000
*/* usage (job size).                                                */ 01501000
*/*                                                                  */ 01502000
*/* The exploiter provides data in the SMF98AggBucketExpArea to SMF  */ 01503000
*/* and SMF generates the header (SMF98AggBucketHdr) for the         */ 01504000
*/* aggregate bucket sections.                                       */ 01505000
*/*                                                                  */ 01506000
*/* Note: the SMF 98 record contains buckets that have more than one */ 01507000
*/* contributor (SMF98AggBucketEA_Contributors > 0).                 */ 01508000
*/*                                                                  */ 01509000
*/* Note there are two possible aggregate bucket sections per WIC    */ 01510000
*/* subtype. One or both might contain data.                         */ 01511000
*/*                                                              @03A*/ 01512000
*/*------------------------------------------------------------------*/ 01513000
*DCL                                                                    01514000
*  1 SMF98AggBucket Type,           /* Aggregate bucket          @03A*/ 01515000
*   3 SMF98AggBucketHdr,            /* Aggregate bucket header   @03A*/ 01516000
*    5 SMF98AggBucketHdr_CPUType Fixed(15) Unsigned, /* CPU type, can   01517000
*                                      be one of:                       01518000
*                 Value: Meaning: Constant:                             01519000
*                 0      CP       PSAProcClass_CP                       01520000
*                 4      zIIP     PSAProcClass_zIIP                     01521000
*                                                                @03A*/ 01522000
*    5 SMF98AggBucketHdr_JobPriority Fixed(15), /* Job Priority, can    01523000
*                                      be one of:                       01524000
*                 Value: Meaning:      Constant:                        01525000
*                 FFFF   All           SMF98_kPriorityBucket_All        01526000
*                 1      Critical      SMF98_kPriorityBucket_1          01527000
*                 2      High          SMF98_kPriorityBucket_2          01528000
*                 3      Low           SMF98_kPriorityBucket_3          01529000
*                 4      Discretionary SMF98_kPriorityBucket_4          01530000
*                                                                @03A*/ 01531000
*    5 SMF98AggBucketHdr_JobSize Fixed(15), /* Job size relative to     01532000
*                                      other jobs in the system for     01533000
*                                      this CPU type, can be            01534000
*                                      one of:                          01535000
*                 Value: Meaning:      Constant:                        01536000
*                 FFFF   All           SMF98_kConsume_SubBucket_All     01537000
*                 1      Large         SMF98_kConsume_SubBucket_1       01538000
*                 2      Medium        SMF98_kConsume_SubBucket_2       01539000
*                 3      Small         SMF98_kConsume_SubBucket_3       01540000
*                 4      Tiny          SMF98_kConsume_SubBucket_4       01541000
*                                                                       01542000
*                                                                @03A*/ 01543000
*   3 SMF98AggBucketExpArea,        /* Aggregate bucket exploiter area  01544000
*                                                                    */ 01545000
*    5 SMF98AggBucketEA_Contributors Fixed(16), /* Number of address    01546000
*                                      spaces contributing to this      01547000
*                                      bucket entry              @03A*/ 01548000
*    5 SMF98AggBucketEA_Data Char(0); /* Exploiter's data area   @03A*/ 01549000
*                                                                       01550000
*/*------------------------------------------------------------------*/ 01551000
*/*                                                                  */ 01552000
*/* SMF 98 exceptional job sections                                  */ 01553000
*/*                                                                  */ 01554000
*/* An IFAWIC exploiters exit routine provides an exceptional job    */ 01555000
*/* for each CPU type, job priority and job size dimension for a     */ 01556000
*/* number of activites.                                             */ 01557000
*/*                                                                  */ 01558000
*/* The IFAWIC exploiter provides this list to SMF and SMF           */ 01559000
*/* processing compresses the contents to two output areas, the SMF  */ 01560000
*/* 98 job index sections and the SMF 98 job list sections.          */ 01561000
*/*                                                                  */ 01562000
*/*------------------------------------------------------------------*/ 01563000
*                                                                       01564000
*/*------------------------------------------------------------------*/ 01565000
*/*                                                                  */ 01566000
*/* SMF 98 job index sections                                        */ 01567000
*/*                                                                  */ 01568000
*/* The SMF 98 job index section, mapped by SMF98JobIdx, identifies  */ 01569000
*/* the CPU type, job priority, and job size dimension of the bucket */ 01570000
*/* and provides an index into the job list section where the        */ 01571000
*/* details of the exceptional job can be found.                     */ 01572000
*/*                                                                  */ 01573000
*/* SMF98JobIdxActivityArea is a list of two byte fields that        */ 01574000
*/* represent indices into the SMF 98 job list section.  These       */ 01575000
*/* indices start at 1.  To find the offset for this exceptional     */ 01576000
*/* job, take                                                        */ 01577000
*/* SMF98WicData_JobListOF + (SMF98WicData_JobListLN *(n-1))         */ 01578000
*/* where n is the index number.                                     */ 01579000
*/*                                                                  */ 01580000
*/*------------------------------------------------------------------*/ 01581000
*DCL                                                                    01582000
*  1 SMF98JobIdx Type,              /* Job index data area       @03A*/ 01583000
*   3 SMF98JobIdxHdr,               /* Job index header          @03A*/ 01584000
*    5 SMF98JobIdxHdr_CPUType Fixed(15) Unsigned, /* CPU type, can be   01585000
*                                      one of                           01586000
*                 Value: Meaning: Constant:                             01587000
*                 0      CP       PSAProcClass_CP                       01588000
*                 4      zIIP     PSAProcClass_zIIP                     01589000
*                                                                @03A*/ 01590000
*    5 SMF98JobIdxHdr_JobPriority Fixed(15), /* Job Priority, can       01591000
*                                      be one of:                       01592000
*                 Value: Meaning:      Constant:                        01593000
*                 FFFF   All           SMF98_kPriorityBucket_All        01594000
*                 1      Critical      SMF98_kPriorityBucket_1          01595000
*                 2      High          SMF98_kPriorityBucket_2          01596000
*                 3      Low           SMF98_kPriorityBucket_3          01597000
*                 4      Discretionary SMF98_kPriorityBucket_4          01598000
*                                                                @03A*/ 01599000
*    5 SMF98JobIdxHdr_JobSize Fixed(15), /* Job size relative to        01600000
*                                      other jobs in the system for     01601000
*                                      this CPU type, can be            01602000
*                                      one of:                          01603000
*                 Value: Meaning:      Constant:                        01604000
*                 FFFF   All           SMF98_kConsume_SubBucket_All     01605000
*                 1      Large         SMF98_kConsume_SubBucket_1       01606000
*                 2      Medium        SMF98_kConsume_SubBucket_2       01607000
*                 3      Small         SMF98_kConsume_SubBucket_3       01608000
*                 4      Tiny          SMF98_kConsume_SubBucket_4       01609000
*                                                                @03A*/ 01610000
*   3 SMF98JobIdxActivityArea Char(0); /* Exploiter activity index      01611000
*                                      area -- Each exploiter activity  01612000
*                                      is assigned a 2-byte index. This 01613000
*                                      area is an array of 2-byte       01614000
*                                      indices. These indices start at  01615000
*                                      1 and describe the entry number  01616000
*                                      into the SMF98JobList with which 01617000
*                                      to find the exceptional job      01618000
*                                      corresponding with the exploiter 01619000
*                                      defined activity. See the        01620000
*                                      exploiters subtype definition    01621000
*                                      for more details.                01622000
*                                                                @03A*/ 01623000
*                                                                       01624000
*/*------------------------------------------------------------------*/ 01625000
*/*                                                                  */ 01626000
*/* SMF 98 job list section                                          */ 01627000
*/*                                                                  */ 01628000
*/* The SMF 98 job list section, mapped by SMF98JobList, shows the   */ 01629000
*/* job name, address space ID number, and activity data for the     */ 01630000
*/* exceptional job.                                                 */ 01631000
*/*                                                                  */ 01632000
*/*------------------------------------------------------------------*/ 01633000
*DCL                                                                    01634000
*  1 SMF98JobList Type,             /* Job list data area        @03A*/ 01635000
*   3 SMF98JobListHdr,              /* Job list header           @03A*/ 01636000
*                                                                       01637000
*    5 SMF98JobListHdr_ASID Fixed(15) Unsigned, /* Address space        01638000
*                                      ID number                 @03A*/ 01639000
*    5 SMF98JobListHdr_JobName Char(8), /* Job name              @03A*/ 01640000
*   3 SMF98JobListActivityArea Char(0); /* Exploiter job activity area  01641000
*                                      -- see IFAWIC exploiter for      01642000
*                                      their data mapping        @03A*/ 01643000
*                                                                       01644000
*/*------------------------------------------------------------------*/ 01645000
*/*                                                                  */ 01646000
*/* JobPriority constants                                            */ 01647000
*/*                                                                  */ 01648000
*/*                                                              @03A*/ 01649000
*/*------------------------------------------------------------------*/ 01650000
*Dcl SMF98_kJobPriorityAll      Fixed(15) Constant(-1);        /*@03A*/ 01651000
*Dcl SMF98_kJobPriorityCritical Fixed(15) Constant(1);         /*@03A*/ 01652000
*Dcl SMF98_kJobPriorityHigh     Fixed(15) Constant(2);         /*@03A*/ 01653000
*Dcl SMF98_kJobPriorityLow      Fixed(15) Constant(3);         /*@03A*/ 01654000
*Dcl SMF98_kJobPriorityDisc     Fixed(15) Constant(4);         /*@03A*/ 01655000
*                                                                       01656000
*/*------------------------------------------------------------------*/ 01657000
*/*                                                                  */ 01658000
*/* JobSize constants                                                */ 01659000
*/*                                                                  */ 01660000
*/*                                                              @03A*/ 01661000
*/*------------------------------------------------------------------*/ 01662000
*Dcl SMF98_kJobSizeAll     Fixed(15) Constant(-1);             /*@03A*/ 01663000
*Dcl SMF98_kJobSizeLarge   Fixed(15) Constant(1);              /*@03A*/ 01664000
*Dcl SMF98_kJobSizeMedium  Fixed(15) Constant(2);              /*@03A*/ 01665000
*Dcl SMF98_kJobSizeSmall   Fixed(15) Constant(3);              /*@03A*/ 01666000
*Dcl SMF98_kJobSizeTiny    Fixed(15) Constant(4);              /*@03A*/ 01667000
*                                                                       01668000
*                                                                       01669000
* @LOGIC;                                                               01670000
* #PRAGMA TOOL=CBGEN.                                                   01671000
* #USEORG.                                                              01672000
* #NOTUPPER.                                                            01673000
* #ALIGNOP.                                                             01674000
* #DELETE.SMF98_kSDSTripletsNum                                         01675000
* #ADD.                                                                 01676000
*                      GBLC  &IFASMFRA_RECTYPE_98                       01677000
*                      AIF ('&IFASMFRA_RECTYPE_98' NE 'YES').S98BCPDONE 01678000
*                      IHAHR981                                         01679000
*                      IOSDS983                                  @07A   01680000
*                      IOSDS984                                  @07A   01681000
*.S98BCPDONE           ANOP                                      @07A   01682000
* #EADD.                                                                01683000
* #EPRAGMA.                                                             01684000
* @ENDLOGIC;                                                            01685000
*/* End of PL/X Source                                               */ 01686000
* %IF IHAHR098_LIST = 'NO' !                                            01687000
*    ZCBPRINT = 'NO' %THEN                                              01688000
* %DO;                                                                  01689000
*   @LIST POP NOECHO;                                                   01690000
* %END;                                                                 01691000
* %END;                                                                 01692000
