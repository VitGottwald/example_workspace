*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXLZSTR                               -96/11/22-<1> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  CF Structure Data Access Service              * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5655-068 COPYRIGHT IBM CORP. 1993, 1994                         * 00001200
*                                                                     * 00001300
* STATUS= HBB5520                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      NOTE - This macro has a CDPI classification of GUPI.           * 00002100
*                                                                     * 00002200
*      The IXLZSTR macro allows a user to request Coupling Facility   * 00002300
*      structure data from a dump containing that information.  This  * 00002400
*      macro will build a parameter list, call the access service,    * 00002500
*      and return the data requested in an answer area that is        * 00002600
*      supplied by the invoker of this macro.  This macro can only be * 00002700
*      used in an IPCS environment to retrieve Coupling Facility      * 00002800
*      Structure data from the dump dataset.                          * 00002900
*                                                                     * 00003000
*      The TYPE parameter on the IXLZSTR macro determines what type   * 00003100
*      of data will be returned to the invoker of this macro.         * 00003200
*                                                                     * 00003300
*                                                                     * 00003400
*      o   TYPE(STRUCTURE) returns structure information.             * 00003500
*                                                                     * 00003600
*      o   TYPE(CLASS) returns class information for a requested      * 00003700
*          cache structure.                                           * 00003800
*                                                                     * 00003900
*      o   TYPE(LISTNUM) returns list number information for a        * 00004000
*          requested list structure.                                  * 00004100
*                                                                     * 00004200
*      o   TYPE(LOCKENTRIES) returns lock table information for a     * 00004300
*          requested list structure.                                  * 00004400
*                                                                     * 00004500
*      o   TYPE(USERCNTLS) returns user control information for a     * 00004600
*          requested structure.                                       * 00004700
*                                                                     * 00004800
*      o   TYPE(ENTRY) returns entry information for a requested      * 00004900
*          entry in a requested structure.                            * 00005000
*                                                                     * 00005100
*      o   TYPE(EMCONTROLS) returns event monitor control information * 00005200
*          for a requested list structure.                            * 00005300
*                                                                     * 00005400
*      o   TYPE(EVENTQS) returns event queue control information for  * 00005500
*          a requested list structure.                                * 00005600
*                                                                     * 00005700
*                                                                     * 00005800
*                                                                     * 00005900
*      The IXLZSTR macro puts the requested information in an answer  * 00006000
*      area that is passed in on the ANSAREA parameter.  The answer   * 00006100
*      area contains a header which describes the requested           * 00006200
*      information in the answer area.  It contains information about * 00006300
*      the number of entries in the answer area, the type of entry in * 00006400
*      the answer area, and information about the requested           * 00006500
*      structure.  The answer area header is mapped by the StrBHeader * 00006600
*      mapping found in the IXLZSTRB macro.  In addition to the       * 00006700
*      answer area header, the answer area contains one or more       * 00006800
*      entries of requested information.                              * 00006900
*                                                                     * 00007000
*      The minimum amount of storage that can be passed to the        * 00007100
*      IXLZSTR macro is 4096 bytes (4K).  If this is not done, a      * 00007200
*      return code of 8 and a reason code of X'10' will be issued on  * 00007300
*      the invocation and the request will fail.  If the ENTRYDATA    * 00007400
*      parameter is used on any of the requests that allow it, the    * 00007500
*      minimum amount of storage that can be passed to the IXLZSTR is * 00007600
*      8192 bytes (8K).  Failure to do this will return the same      * 00007700
*      return code and reason code as stated earlier.                 * 00007800
*                                                                     * 00007900
*      In addition, if the user specifies a TYPE=STRUCTURE            * 00008000
*      STRLEVEL=DETAIL request, the minimum amount of storage that    * 00008100
*      can be passed to the IXLZSTR macro is 8192 bytes (8K).         * 00008200
*      Failure to do this on this request will result in a return     * 00008300
*      code of 8 and a reason code of X'10' to be issued and the      * 00008400
*      request will fail.                                             * 00008500
*                                                                     * 00008600
*      Another problem will exist if the starting range value of any  * 00008700
*      of the range specifications is greater than the ending range   * 00008800
*      value.  If such a case does exist, a return code of 8 and a    * 00008900
*      reason code of X'18' will be issued on this invocation and the * 00009000
*      request will fail.                                             * 00009100
*                                                                     * 00009200
*      The user of this macro must also be sure that the proper       * 00009300
*      structure attributes are used with the proper structure type.  * 00009400
*      For example, a user cannot request to see a range of list      * 00009500
*      numbers in a cache structure.  If a case like this does exist, * 00009600
*      a return code of 8 and a reason code of X'14' will be issued   * 00009700
*      on this invocation and the request will fail.  To figure out   * 00009800
*      what the structure type of a given structure is, invoke the    * 00009900
*      IXLZSTR macro with TYPE(STRUCTURE) and STRLEVEL(SUMMARY).  A   * 00010000
*      list of all of the structures requested to be dumped, and      * 00010100
*      their type, will be returned in the answer area.  All of these * 00010200
*      entries will be mapped by the StrBStrSummary mapping in        * 00010300
*      IXLZSTRB.  Find the structure name in the answer area and then * 00010400
*      check its corresponding type.                                  * 00010500
*                                                                     * 00010600
*      Due to the volume of information that can be retrieved by a    * 00010700
*      single request to this macro, the caller may have to invoke    * 00010800
*      the macro more than once to retrieve all of the information.   * 00010900
*      The RESTOKEN keyword is provided to allow a user to obtain the * 00011000
*      rest of the requested information by using it as input on      * 00011100
*      subsequent IXLZSTR requests.  The RESTOKEN must have an        * 00011200
*      initial value of zero.  If the answer area fills up and there  * 00011300
*      is more data to be retrieved from the dump dataset that is     * 00011400
*      associated with the current request, a return code of 4 and a  * 00011500
*      reason code of 4 will be set to indicate that there is more    * 00011600
*      data to be retrieved.  To retrieve the remainder of the data,  * 00011700
*      the macro must be invoked again, with the same keywords,       * 00011800
*      passing the RESTOKEN as input.  A return code of 4 and a       * 00011900
*      reason code of 4 will continue to be issued by this macro      * 00012000
*      until all of the data associated with the original request has * 00012100
*      been retrieved.  When all of the data has been retrieved,      * 00012200
*      return code of 0 and a reason code of 0 will be set to         * 00012300
*      indicate that the request has completed successfully and the   * 00012400
*      RESTOKEN will be set to binary zeroes.                         * 00012500
*                                                                     * 00012600
*      NOTE - Since the IXLZSTRB mapping macro provides mappings of   * 00012700
*      the ANSAREA and constants to interpret the return codes and    * 00012800
*      reason codes issued by this service, it is recommended that    * 00012900
*      the IXLZSTRB macro be included in the program that uses this   * 00013000
*      service or the ANSAREA.                                        * 00013100
*                                                                     * 00013200
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00013300
*                                                                     * 00013400
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00013500
*                                                                     * 00013600
*01* ENVIRONMENT:                                                     * 00013700
*                                                                     * 00013800
*                                                                     * 00013900
*      Dispatchable unit mode: Task mode.                             * 00014000
*                                                                     * 00014100
*      Minimum authorization: Problem state, Key 8                    * 00014200
*                                                                     * 00014300
*      AMODE:            31-bit.                                      * 00014400
*                                                                     * 00014500
*      ASC mode:         Primary.                                     * 00014600
*                                                                     * 00014700
*      Serialization:    Enabled.                                     * 00014800
*                                                                     * 00014900
*      Restrictions:                                                  * 00015000
*                                                                     * 00015100
*                                                                     * 00015200
*                        1.  This macro can only be invoked in an     * 00015300
*                            IPCS environment.                        * 00015400
*                                                                     * 00015500
*                        2.  The BLSABDPL mapping must be included in * 00015600
*                            the program that invokes this macro.     * 00015700
*                                                                     * 00015800
*                                                                     * 00015900
*                                                                     * 00016000
*                                                                     * 00016100
*                                                                     * 00016200
*01* INPUT REGISTERS:  GR0-GR1     Reserved                           * 00016300
*                      GR2-GR13    Undefined                          * 00016400
*                      GR14-GR15   Reserved                           * 00016500
*                                                                     * 00016600
*                      AR0-AR1     Reserved                           * 00016700
*                      AR2-AR13    Undefined                          * 00016800
*                      AR14-AR15   Reserved                           * 00016900
*                                                                     * 00017000
*01* OUTPUT REGISTERS: GR0         Reason code                        * 00017100
*                      GR1         Unpredictable                      * 00017200
*                      GR2-GR13    Unchanged                          * 00017300
*                      GR14        Unpredictable                      * 00017400
*                      GR15        Return code                        * 00017500
*                                                                     * 00017600
*                      AR0-AR1     Unpredictable                      * 00017700
*                      AR2-AR13    Unchanged                          * 00017800
*                      AR14-AR15   Unpredictable                      * 00017900
*                                                                     * 00018000
*01* SYNTAX:                                                          * 00018100
*                                                                     * 00018200
*Ýxlabel¨  IXLZSTR     ANSAREA=xansarea                               * 00018300
*                     ,ANSLEN=xanslen                                 * 00018400
*                     ,RESTOKEN=xrestoken                             * 00018500
*                     ,ABDPLPTR=xabdplptr                             * 00018600
*                   Ð ,TYPE=STRUCTURE                                 * 00018700
*                   !   Ð ,STRLEVEL=SUMMARY                           * 00018800
*                   !   ¿ ,STRLEVEL=DETAIL                            * 00018900
*                   !         ,STRNAME=xstrname                       * 00019000
*                   !         ,STRDUMPID=xstrdumpid                   * 00019100
*                   Ô ,TYPE=CLASS                                     * 00019200
*                   !     ,STRNAME=xstrname                           * 00019300
*                   !     ,STRDUMPID=xstrdumpid                       * 00019400
*                   !     ,CLASSTYPE=»CASTOUT!STORAGEº                * 00019500
*                   !   Ð ,CLASSLEVEL=SUMMARY                         * 00019600
*                   !   !    Ý,STARTVAL=»xstartval!ALLº               * 00019700
*                   !   !        Ý,ENDVAL=»xendval!STARTVALº¨¨        * 00019800
*                   !   Ô ,CLASSLEVEL=DETAIL                          * 00019900
*                   !   !    Ý,STARTVAL=»xstartval!ALLº               * 00020000
*                   !   !        Ý,ENDVAL=»xendval!STARTVALº¨¨        * 00020100
*                   !   ¿ ,CLASSLEVEL=ENTRY                           * 00020200
*                   !         ,CLASSVAL=xclassval                     * 00020300
*                   !        Ý,STARTPOS=»xstartpos!ALLº               * 00020400
*                   !            Ý,ENDPOS=»xendpos!STARTPOSº¨¨        * 00020500
*                   !        Ý,ORDER=»HEAD!TAILº¨                     * 00020600
*                   !        Ý,ADJUNCT=»NO!YESº¨                      * 00020700
*                   !        Ý,ENTRYDATA=»NO!YESº¨                    * 00020800
*                   Ô ,TYPE=LISTNUM                                   * 00020900
*                   !     ,STRNAME=xstrname                           * 00021000
*                   !     ,STRDUMPID=xstrdumpid                       * 00021100
*                   !   Ð ,LISTNUMLEVEL=SUMMARY                       * 00021200
*                   !   !    Ý,STARTVAL=»xstartval!ALLº               * 00021300
*                   !   !        Ý,ENDVAL=»xendval!STARTVALº¨¨        * 00021400
*                   !   Ô ,LISTNUMLEVEL=DETAIL                        * 00021500
*                   !   !    Ý,STARTVAL=»xstartval!ALLº               * 00021600
*                   !   !        Ý,ENDVAL=»xendval!STARTVALº¨¨        * 00021700
*                   !   ¿ ,LISTNUMLEVEL=ENTRY                         * 00021800
*                   !         ,LISTNUMVAL=xlistnumval                 * 00021900
*                   !        Ý,ENTRYKEY=»xentrykey!NO_KEYº¨           * 00022000
*                   !        Ý,STARTPOS=»xstartpos!ALLº               * 00022100
*                   !            Ý,ENDPOS=»xendpos!STARTPOSº¨¨        * 00022200
*                   !        Ý,ORDER=»HEAD!TAILº¨                     * 00022300
*                   !        Ý,ADJUNCT=»NO!YESº¨                      * 00022400
*                   !        Ý,ENTRYDATA=»NO!YESº¨                    * 00022500
*                   Ô ,TYPE=LOCKENTRIES                               * 00022600
*                   !     ,STRNAME=xstrname                           * 00022700
*                   !     ,STRDUMPID=xstrdumpid                       * 00022800
*                   !    Ý,STARTVAL=»xstartval!ALLº                   * 00022900
*                   !        Ý,ENDVAL=»xendval!STARTVALº¨¨            * 00023000
*                   Ô ,TYPE=USERCNTLS                                 * 00023100
*                   !     ,STRNAME=xstrname                           * 00023200
*                   !     ,STRDUMPID=xstrdumpid                       * 00023300
*                   !    Ý,STARTVAL=»xstartval!ALLº                   * 00023400
*                   !        Ý,ENDVAL=»xendval!STARTVALº¨¨            * 00023500
*                   Ô ,TYPE=ENTRY                                     * 00023600
*                   !     ,STRNAME=xstrname                           * 00023700
*                   !     ,STRDUMPID=xstrdumpid                       * 00023800
*                   !   Ð ,ENTRYNAME=xentryname                       * 00023900
*                   !   ¿ ,ENTRYID=xentryid                           * 00024000
*                   !    Ý,ADJUNCT=»NO!YESº¨                          * 00024100
*                   !    Ý,ENTRYDATA=»NO!YESº¨                        * 00024200
*                   Ô ,TYPE=EMCONTROLS                                * 00024300
*                   !     ,STRNAME=xstrname                           * 00024400
*                   !     ,STRDUMPID=xstrdumpid                       * 00024500
*                   !   Ð ,EMCLEVEL=SUMMARY                           * 00024600
*                   !   !    Ý,STARTVAL=»xstartval!ALLº               * 00024700
*                   !   !        Ý,ENDVAL=»xendval!STARTVALº¨¨        * 00024800
*                   !   ¿ ,EMCLEVEL=EMC                               * 00024900
*                   !         ,LISTNUMVAL=xlistnumval                 * 00025000
*                   !        Ý,ENTRYKEY=»xentrykey!NO_KEYº¨           * 00025100
*                   ¿ ,TYPE=EVENTQS                                   * 00025200
*                         ,STRNAME=xstrname                           * 00025300
*                         ,STRDUMPID=xstrdumpid                       * 00025400
*                       Ð ,EQLEVEL=DETAIL                             * 00025500
*                       !    Ý,STARTVAL=»xstartval!ALLº               * 00025600
*                       !        Ý,ENDVAL=»xendval!STARTVALº¨¨        * 00025700
*                       ¿ ,EQLEVEL=EMC                                * 00025800
*                             ,CONIDVAL=xconidval                     * 00025900
*                    Ý,RETCODE=xretcode¨                              * 00026000
*                    Ý,RSNCODE=xrsncode¨                              * 00026100
*                    Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨          * 00026200
*                   ÐÝ,MF=S¨                                          * 00026300
*                   ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                   * 00026400
*                   ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                     * 00026500
*                                                                     * 00026600
*                                                                     * 00026700
*      Where:                                                         * 00026800
*                                                                     * 00026900
*                                                                     * 00027000
*      Ýxlabel¨                                                       * 00027100
*          is an optional symbol, starting in column 1, that is the   * 00027200
*          name on the IXLZSTR macro invocation.  The name must       * 00027300
*          conform to the rules for an ordinary assembler language    * 00027400
*          symbol.                                                    * 00027500
*          DEFAULT: No name.                                          * 00027600
*                                                                     * 00027700
*                                                                     * 00027800
*                                                                     * 00027900
*                                                                     * 00028000
*      ANSAREA=xansarea                                               * 00028100
*          is the name (RS-type), or address in register (2)-(12), of * 00028200
*          a required character input variable specifying an area to  * 00028300
*          contain the data being returned by IXLZSTR.                * 00028400
*                                                                     * 00028500
*                                                                     * 00028600
*                                                                     * 00028700
*                                                                     * 00028800
*      ANSLEN=xanslen                                                 * 00028900
*          is the name (RS-type), or address in register (2)-(12), of * 00029000
*          a required fullword input variable which contains the      * 00029100
*          length of the area provided to contain the data being      * 00029200
*          returned by IXLZSTR.                                       * 00029300
*                                                                     * 00029400
*                                                                     * 00029500
*                                                                     * 00029600
*                                                                     * 00029700
*      RESTOKEN=xrestoken                                             * 00029800
*          is the name (RS-type), or address in register (2)-(12), of * 00029900
*          a required 64 character input/output that must be passed   * 00030000
*          on all IXLZSTR requests.  This is used as a mechanism that * 00030100
*          allows a request to be continued across calls if all of    * 00030200
*          the requested data could not be returned in the ANSAREA.   * 00030300
*          On every request, the IXLZSTR service updates the RESTOKEN * 00030400
*          with information required on subsequent IXLZSTR requests   * 00030500
*          to complete the initial request.  On an initial request,   * 00030600
*          the RESTOKEN must be initialized to binary zeroes.  The    * 00030700
*          contents of the RESTOKEN must NOT be modified by the user  * 00030800
*          who is requesting the remaining data.  Also, the RESTOKEN  * 00030900
*          must be used on an invocation with the same macro keywords * 00031000
*          as the macro keywords on a previous invocation where the   * 00031100
*          RESTOKEN was obtained.  See the examples section for       * 00031200
*          examples on usage.                                         * 00031300
*                                                                     * 00031400
*                                                                     * 00031500
*                                                                     * 00031600
*                                                                     * 00031700
*      ABDPLPTR=xabdplptr                                             * 00031800
*          is the name (RS-type), or address in register (2)-(12), of * 00031900
*          a required 4 byte input that contains the address of the   * 00032000
*          ABDUMP parameter list (ABDPL) which is currently in use.   * 00032100
*          The address of the ABDPL is passed on to IXLZSTR service   * 00032200
*          in the input parameter list.                               * 00032300
*                                                                     * 00032400
*                                                                     * 00032500
*                                                                     * 00032600
*                                                                     * 00032700
*      TYPE=»STRUCTURE!CLASS!LISTNUM!LOCKENTRIES!USERCNTLS!ENTRY!EMCO * 00032800
*          NTROLS!EVENTQSº                                            * 00032900
*          is a required keyword input that specifies the type of     * 00033000
*          information to by retrieved by the IXLZSTR macro.          * 00033100
*                                                                     * 00033200
*                                                                     * 00033300
*          TYPE=STRUCTURE                                             * 00033400
*              This keyword tells the IXLZSTR macro to retrieve       * 00033500
*              structure information from the dump data set.          * 00033600
*                                                                     * 00033700
*                                                                     * 00033800
*              STRLEVEL=»SUMMARY!DETAILº                              * 00033900
*                  is a required keyword input that specifies the     * 00034000
*                  level of the STRUCTURE type request.               * 00034100
*                                                                     * 00034200
*                                                                     * 00034300
*                  STRLEVEL=SUMMARY                                   * 00034400
*                      Returns a list of all of the structures that   * 00034500
*                      were in the dump.  The entries in the answer   * 00034600
*                      area will be mapped by the StrBStrSummary      * 00034700
*                      mapping which is found in the IXLZSTRB macro.  * 00034800
*                                                                     * 00034900
*                  STRLEVEL=DETAIL                                    * 00035000
*                      Returns detailed information about a requested * 00035100
*                      structure.  The entry in the answer area will  * 00035200
*                      be mapped by the StrBStrDetail mapping which   * 00035300
*                      is found in the IXLZSTRB macro.  In the        * 00035400
*                      StrBStrDetail entry, there will also be a      * 00035500
*                      pointer to the structure controls in the       * 00035600
*                      answer area.  If the structure is a cache      * 00035700
*                      structure, the DCac mapping found in the       * 00035800
*                      IXLYDCAC macro will map the structure          * 00035900
*                      controls.  If the structure is a list          * 00036000
*                      structure, the DLic mapping found in the       * 00036100
*                      IXLYDLIC macro will map the structure          * 00036200
*                      controls.                                      * 00036300
*                                                                     * 00036400
*                                                                     * 00036500
*                      STRNAME=xstrname                               * 00036600
*                          is the name (RS-type), or address in       * 00036700
*                          register (2)-(12), of a required 16        * 00036800
*                          character input which contains the name of * 00036900
*                          the structure for which information is     * 00037000
*                          being requested.                           * 00037100
*                                                                     * 00037200
*                                                                     * 00037300
*                                                                     * 00037400
*                                                                     * 00037500
*                      STRDUMPID=xstrdumpid                           * 00037600
*                          is the name (RS-type), or address in       * 00037700
*                          register (2)-(12), of a required halfword  * 00037800
*                          input which contains the structure dump ID * 00037900
*                          of the structure being requested.  To      * 00038000
*                          obtain the structure dump ID of a          * 00038100
*                          structure, do a TYPE(STRUCTURE)            * 00038200
*                          STRLEVEL(SUMMARY) request and then look    * 00038300
*                          for the structure name and its associated  * 00038400
*                          structure dump ID in the ANSAREA.          * 00038500
*                                                                     * 00038600
*                                                                     * 00038700
*                                                                     * 00038800
*                                                                     * 00038900
*                                                                     * 00039000
*                                                                     * 00039100
*                                                                     * 00039200
*          TYPE=CLASS                                                 * 00039300
*              This keyword tells the IXLZSTR macro to retrieve       * 00039400
*              castout class or storage class information from the    * 00039500
*              dump data set.  This type of request should only be    * 00039600
*              used if the requested structure is a cache structure.  * 00039700
*              If the requested structure is not a cache structure,   * 00039800
*              nothing will be returned in the answer area, and a     * 00039900
*              return code 8 and a reason code X'14' will be issued   * 00040000
*              indicating that the request that was made was invalid. * 00040100
*                                                                     * 00040200
*                                                                     * 00040300
*              STRNAME=xstrname                                       * 00040400
*                  is the name (RS-type), or address in register      * 00040500
*                  (2)-(12), of a required 16 character input which   * 00040600
*                  contains the name of the structure for which       * 00040700
*                  information is being requested.                    * 00040800
*                                                                     * 00040900
*                                                                     * 00041000
*                                                                     * 00041100
*                                                                     * 00041200
*              STRDUMPID=xstrdumpid                                   * 00041300
*                  is the name (RS-type), or address in register      * 00041400
*                  (2)-(12), of a required halfword input which       * 00041500
*                  contains the structure dump ID of the structure    * 00041600
*                  being requested.  To obtain the structure dump ID  * 00041700
*                  of a structure, do a TYPE(STRUCTURE)               * 00041800
*                  STRLEVEL(SUMMARY) request and then look for the    * 00041900
*                  structure name and its associated structure dump   * 00042000
*                  ID in the ANSAREA.                                 * 00042100
*                                                                     * 00042200
*                                                                     * 00042300
*                                                                     * 00042400
*                                                                     * 00042500
*              CLASSTYPE=»CASTOUT!STORAGEº                            * 00042600
*                  is a required keyword input which indicates what   * 00042700
*                  type of class should be retrieved.                 * 00042800
*                                                                     * 00042900
*                                                                     * 00043000
*                  CLASSTYPE=CASTOUT                                  * 00043100
*                      specifies that the request is for castout      * 00043200
*                      classes.                                       * 00043300
*                                                                     * 00043400
*                  CLASSTYPE=STORAGE                                  * 00043500
*                      specifies that the request is for storage      * 00043600
*                      classes.                                       * 00043700
*                                                                     * 00043800
*                                                                     * 00043900
*                                                                     * 00044000
*                                                                     * 00044100
*                                                                     * 00044200
*                                                                     * 00044300
*              CLASSLEVEL=»SUMMARY!DETAIL!ENTRYº                      * 00044400
*                  is a required keyword input that specifies the     * 00044500
*                  level of the CLASS type request.                   * 00044600
*                                                                     * 00044700
*                                                                     * 00044800
*                  CLASSLEVEL=SUMMARY                                 * 00044900
*                      Returns information about a requested class, a * 00045000
*                      range of classes, or all classes ( castout or  * 00045100
*                      storage class ) in the dump.  The entries in   * 00045200
*                      the answer area will be mapped by the          * 00045300
*                      StrBSummary mapping which is found in the      * 00045400
*                      IXLZSTRB macro.                                * 00045500
*                                                                     * 00045600
*                                                                     * 00045700
*                      ÝSTARTVAL=»xstartval!ALLº                      * 00045800
*                          is the name (RS-type), or address in       * 00045900
*                          register (2)-(12), of an optional fullword * 00046000
*                          input that specifies the start of the      * 00046100
*                          requested class range.  If the user of     * 00046200
*                          this macro does not specify this keyword,  * 00046300
*                          all of the classes in the dump will be     * 00046400
*                          returned to the user.                      * 00046500
*                          DEFAULT: ALL                               * 00046600
*                                                                     * 00046700
*                                                                     * 00046800
*                          ÝENDVAL=»xendval!STARTVALº¨¨               * 00046900
*                              is the name (RS-type), or address in   * 00047000
*                              register (2)-(12), of an optional      * 00047100
*                              fullword input that specifies the end  * 00047200
*                              of a requested class range.  If the    * 00047300
*                              user of this macro does not specify    * 00047400
*                              this keyword, the ending range value   * 00047500
*                              will be equal to the starting range    * 00047600
*                              value specified on the STARTVAL        * 00047700
*                              keyword.  The STARTVAL keyword is      * 00047800
*                              required if ENDVAL is specified.       * 00047900
*                              DEFAULT: STARTVAL                      * 00048000
*                                                                     * 00048100
*                                                                     * 00048200
*                                                                     * 00048300
*                                                                     * 00048400
*                                                                     * 00048500
*                  CLASSLEVEL=DETAIL                                  * 00048600
*                      Returns detailed information about a requested * 00048700
*                      class, a range of classes or all classes (     * 00048800
*                      castout or storage class ) in the dump.  The   * 00048900
*                      entries in the answer area will be mapped by   * 00049000
*                      the StrBDetail mapping which is found in the   * 00049100
*                      IXLZSTRB macro.  In the StrBDetail entry,      * 00049200
*                      there will also be a pointer to the class      * 00049300
*                      controls in the answer area.  If the user      * 00049400
*                      requested storage class information, the DScc  * 00049500
*                      mapping found in the IXLYDSCC macro will map   * 00049600
*                      the storage class controls.  If the user       * 00049700
*                      requested castout class information, the DCcc  * 00049800
*                      mapping found in the IXLYDCCC macro will map   * 00049900
*                      the castout class controls.                    * 00050000
*                                                                     * 00050100
*                                                                     * 00050200
*                      ÝSTARTVAL=»xstartval!ALLº                      * 00050300
*                          is the name (RS-type), or address in       * 00050400
*                          register (2)-(12), of an optional fullword * 00050500
*                          input that specifies the start of the      * 00050600
*                          requested class range.  If the user of     * 00050700
*                          this macro does not specify this keyword,  * 00050800
*                          all of the classes in the dump will be     * 00050900
*                          returned to the user.                      * 00051000
*                          DEFAULT: ALL                               * 00051100
*                                                                     * 00051200
*                                                                     * 00051300
*                          ÝENDVAL=»xendval!STARTVALº¨¨               * 00051400
*                              is the name (RS-type), or address in   * 00051500
*                              register (2)-(12), of an optional      * 00051600
*                              fullword input that specifies the end  * 00051700
*                              of a requested class range.  If the    * 00051800
*                              user of this macro does not specify    * 00051900
*                              this keyword, the ending range value   * 00052000
*                              will be equal to the starting range    * 00052100
*                              value specified on the STARTVAL        * 00052200
*                              keyword.  The STARTVAL keyword is      * 00052300
*                              required if ENDVAL is specified.       * 00052400
*                              DEFAULT: STARTVAL                      * 00052500
*                                                                     * 00052600
*                                                                     * 00052700
*                                                                     * 00052800
*                                                                     * 00052900
*                                                                     * 00053000
*                  CLASSLEVEL=ENTRY                                   * 00053100
*                      Returns an entry at a requested position, a    * 00053200
*                      group of entries at a requested range of       * 00053300
*                      positions, or the entries at all entry         * 00053400
*                      positions that were dumped in a requested      * 00053500
*                      class.  The entries in the answer area will be * 00053600
*                      mapped by the StrBEntry mapping which is found * 00053700
*                      in the IXLZSTRB macro.  In the StrBEntry       * 00053800
*                      entry, there will be a pointer to the entry    * 00053900
*                      controls in the answer area.  The DDic mapping * 00054000
*                      found in the IXLYDDIB macro will map the entry * 00054100
*                      controls.                                      * 00054200
*                                                                     * 00054300
*                                                                     * 00054400
*                      CLASSVAL=xclassval                             * 00054500
*                          is the name (RS-type), or address in       * 00054600
*                          register (2)-(12), of a required fullword  * 00054700
*                          input that specifies the class for which   * 00054800
*                          entries will be retrieved.                 * 00054900
*                                                                     * 00055000
*                                                                     * 00055100
*                                                                     * 00055200
*                                                                     * 00055300
*                      ÝSTARTPOS=»xstartpos!ALLº                      * 00055400
*                          is the name (RS-type), or address in       * 00055500
*                          register (2)-(12), of an optional fullword * 00055600
*                          input that specifies the start of the      * 00055700
*                          requested entry position range.  If the    * 00055800
*                          user of this macro does not specify this   * 00055900
*                          keyword, all of the entries in the dump    * 00056000
*                          for the requested class will be returned   * 00056100
*                          to the user.                               * 00056200
*                          DEFAULT: ALL                               * 00056300
*                                                                     * 00056400
*                                                                     * 00056500
*                          ÝENDPOS=»xendpos!STARTPOSº¨¨               * 00056600
*                              is the name (RS-type), or address in   * 00056700
*                              register (2)-(12), of an optional      * 00056800
*                              fullword input that specifies the end  * 00056900
*                              of a requested entry position range.   * 00057000
*                              If the user of this macro does not     * 00057100
*                              specify this keyword, the ending range * 00057200
*                              position will be equal to the starting * 00057300
*                              range position specified on the        * 00057400
*                              STARTPOS keyword.  The STARTPOS        * 00057500
*                              keyword is required if ENDPOS is       * 00057600
*                              specified.                             * 00057700
*                              DEFAULT: STARTPOS                      * 00057800
*                                                                     * 00057900
*                                                                     * 00058000
*                                                                     * 00058100
*                                                                     * 00058200
*                                                                     * 00058300
*                                                                     * 00058400
*                      ÝORDER=»HEAD!TAILº¨                            * 00058500
*                          is an optional keyword input which         * 00058600
*                          indicates whether entries for the          * 00058700
*                          requested class will be returned in the    * 00058800
*                          head-to-tail order or tail-to-head order.  * 00058900
*                          For a storage class, the head of the queue * 00059000
*                          represents the least recently referenced   * 00059100
*                          entry and the tail represents the most     * 00059200
*                          recently referenced entry.  For a castout  * 00059300
*                          class, the head of the queue represents    * 00059400
*                          the least recently changed entry and the   * 00059500
*                          tail represents the most recently changed  * 00059600
*                          entry.                                     * 00059700
*                          DEFAULT: HEAD                              * 00059800
*                                                                     * 00059900
*                                                                     * 00060000
*                          ORDER=HEAD                                 * 00060100
*                              specifies that the entries returned in * 00060200
*                              the answer area specified will be      * 00060300
*                              returned starting from the head end of * 00060400
*                              the list.                              * 00060500
*                                                                     * 00060600
*                          ORDER=TAIL                                 * 00060700
*                              specifies that the entries returned in * 00060800
*                              the answer area specified will be      * 00060900
*                              returned starting from the tail end of * 00061000
*                              the list.                              * 00061100
*                                                                     * 00061200
*                                                                     * 00061300
*                                                                     * 00061400
*                                                                     * 00061500
*                                                                     * 00061600
*                                                                     * 00061700
*                      ÝADJUNCT=»NO!YESº¨                             * 00061800
*                          is an optional keyword input which         * 00061900
*                          indicates whether the adjunct data         * 00062000
*                          associated with the requested entries      * 00062100
*                          should be returned with the entries.  If   * 00062200
*                          the adjunct data is returned with the      * 00062300
*                          entries, the adjunct data for each entry   * 00062400
*                          will be pointed to by a pointer in the     * 00062500
*                          StrBEntry mapping for each entry.  The     * 00062600
*                          length of the adjunct data will also be in * 00062700
*                          the StrBEntry mapping.                     * 00062800
*                          DEFAULT: NO                                * 00062900
*                                                                     * 00063000
*                                                                     * 00063100
*                          ADJUNCT=NO                                 * 00063200
*                              specifies that the adjunct data        * 00063300
*                              associated with the requested entries  * 00063400
*                              should not be returned.                * 00063500
*                                                                     * 00063600
*                          ADJUNCT=YES                                * 00063700
*                              specifies that the adjunct data        * 00063800
*                              associated with the requested entries  * 00063900
*                              should be returned.                    * 00064000
*                                                                     * 00064100
*                                                                     * 00064200
*                                                                     * 00064300
*                                                                     * 00064400
*                                                                     * 00064500
*                                                                     * 00064600
*                      ÝENTRYDATA=»NO!YESº¨                           * 00064700
*                          is an optional keyword input which         * 00064800
*                          indicates whether the entry data           * 00064900
*                          associated with the requested entries      * 00065000
*                          should be returned with the entries.  If   * 00065100
*                          the entry data is returned with the        * 00065200
*                          entries, the entry data for each entry     * 00065300
*                          will be pointed to by a pointer in the     * 00065400
*                          StrBEntry mapping for each entry.  The     * 00065500
*                          total length of the entry data will also   * 00065600
*                          be in the StrBEntry mapping.  If the       * 00065700
*                          buffer fills up while retrieving the entry * 00065800
*                          data, the length of the entrydata returned * 00065900
*                          and the length of entry data left to be    * 00066000
*                          returned will be in the StrBEntry.  It is  * 00066100
*                          recommended that a user look at the        * 00066200
*                          StrBEntryEDataLenLeft2Proc in the last     * 00066300
*                          StrBEntry in the ANSAREA prior to invoking * 00066400
*                          the IXLZSTR service again to retrieve the  * 00066500
*                          remainder of the entrydata for the entry.  * 00066600
*                          This variable can be used to allocate a    * 00066700
*                          bigger ANSAREA so that the remainder of    * 00066800
*                          the entrydata for this entry can be        * 00066900
*                          retrieved in one invocation before         * 00067000
*                          starting on the next entry, if one exists. * 00067100
*                          DEFAULT: NO                                * 00067200
*                                                                     * 00067300
*                                                                     * 00067400
*                          ENTRYDATA=NO                               * 00067500
*                              specifies that the entry data          * 00067600
*                              associated with the requested entries  * 00067700
*                              should not be returned.                * 00067800
*                                                                     * 00067900
*                          ENTRYDATA=YES                              * 00068000
*                              specifies that the entry data          * 00068100
*                              associated with the requested entries  * 00068200
*                              should be returned.                    * 00068300
*                                                                     * 00068400
*                                                                     * 00068500
*                                                                     * 00068600
*                                                                     * 00068700
*                                                                     * 00068800
*                                                                     * 00068900
*                                                                     * 00069000
*                                                                     * 00069100
*                                                                     * 00069200
*          TYPE=LISTNUM                                               * 00069300
*              This keyword tells the IXLZSTR macro to retrieve list  * 00069400
*              number information from the dump data set.  This type  * 00069500
*              of request should only be used if the requested        * 00069600
*              structure is a list structure.  If the requested       * 00069700
*              structure is not a list structure, nothing will be     * 00069800
*              returned in the answer area, and a return code 8 and a * 00069900
*              reason code X'14' will be issued indicating that the   * 00070000
*              request that was made was invalid.                     * 00070100
*                                                                     * 00070200
*                                                                     * 00070300
*              STRNAME=xstrname                                       * 00070400
*                  is the name (RS-type), or address in register      * 00070500
*                  (2)-(12), of a required 16 character input which   * 00070600
*                  contains the name of the structure for which       * 00070700
*                  information is being requested.                    * 00070800
*                                                                     * 00070900
*                                                                     * 00071000
*                                                                     * 00071100
*                                                                     * 00071200
*              STRDUMPID=xstrdumpid                                   * 00071300
*                  is the name (RS-type), or address in register      * 00071400
*                  (2)-(12), of a required halfword input which       * 00071500
*                  contains the structure dump ID of the structure    * 00071600
*                  being requested.  To obtain the structure dump ID  * 00071700
*                  of a structure, do a TYPE(STRUCTURE)               * 00071800
*                  STRLEVEL(SUMMARY) request and then look for the    * 00071900
*                  structure name and its associated structure dump   * 00072000
*                  ID in the ANSAREA.                                 * 00072100
*                                                                     * 00072200
*                                                                     * 00072300
*                                                                     * 00072400
*                                                                     * 00072500
*              LISTNUMLEVEL=»SUMMARY!DETAIL!ENTRYº                    * 00072600
*                  is a required keyword input that specifies the     * 00072700
*                  level of the LISTNUM type request.                 * 00072800
*                                                                     * 00072900
*                                                                     * 00073000
*                  LISTNUMLEVEL=SUMMARY                               * 00073100
*                      Allows a user to request the list of all of    * 00073200
*                      the list numbers, in the requested structure,  * 00073300
*                      requested to be dumped.  Returns information   * 00073400
*                      about a requested list number, a range of list * 00073500
*                      numbers, or all list numbers in the dump.  The * 00073600
*                      entries in the answer area will be mapped by   * 00073700
*                      the StrBSummary mapping which is found in the  * 00073800
*                      IXLZSTRB macro.                                * 00073900
*                                                                     * 00074000
*                                                                     * 00074100
*                      ÝSTARTVAL=»xstartval!ALLº                      * 00074200
*                          is the name (RS-type), or address in       * 00074300
*                          register (2)-(12), of an optional fullword * 00074400
*                          input that specifies the start of the      * 00074500
*                          requested list number range.  If the user  * 00074600
*                          of this macro does not specify this        * 00074700
*                          keyword, all of the list numbers in the    * 00074800
*                          dump will be returned to the user.         * 00074900
*                          DEFAULT: ALL                               * 00075000
*                                                                     * 00075100
*                                                                     * 00075200
*                          ÝENDVAL=»xendval!STARTVALº¨¨               * 00075300
*                              is the name (RS-type), or address in   * 00075400
*                              register (2)-(12), of an optional      * 00075500
*                              fullword input that specifies the end  * 00075600
*                              of a requested list number range.  If  * 00075700
*                              the user of this macro does not        * 00075800
*                              specify this keyword, the ending range * 00075900
*                              value will be equal to the starting    * 00076000
*                              range value specified on the STARTVAL  * 00076100
*                              keyword.  The STARTVAL keyword is      * 00076200
*                              required if ENDVAL is specified.       * 00076300
*                              DEFAULT: STARTVAL                      * 00076400
*                                                                     * 00076500
*                                                                     * 00076600
*                                                                     * 00076700
*                                                                     * 00076800
*                                                                     * 00076900
*                  LISTNUMLEVEL=DETAIL                                * 00077000
*                      Returns detailed information about a requested * 00077100
*                      list number, a range of list numbers or all    * 00077200
*                      list numbers in the dump.  The entries in the  * 00077300
*                      answer area will be mapped by the StrBDetail   * 00077400
*                      mapping which is found in the IXLZSTRB macro.  * 00077500
*                      In the StrBDetail entry, there will also be a  * 00077600
*                      pointer to the list controls in the answer     * 00077700
*                      area.  The DLc mapping found in the IXLYDLC    * 00077800
*                      macro will map the list controls.  The length  * 00077900
*                      of the list controls will also be placed in    * 00078000
*                      the StrBDetail entry.                          * 00078100
*                                                                     * 00078200
*                                                                     * 00078300
*                      ÝSTARTVAL=»xstartval!ALLº                      * 00078400
*                          is the name (RS-type), or address in       * 00078500
*                          register (2)-(12), of an optional fullword * 00078600
*                          input that specifies the start of the      * 00078700
*                          requested list number range.  If the user  * 00078800
*                          of this macro does not specify this        * 00078900
*                          keyword, all of the list numbers in the    * 00079000
*                          dump will be returned to the user.         * 00079100
*                          DEFAULT: ALL                               * 00079200
*                                                                     * 00079300
*                                                                     * 00079400
*                          ÝENDVAL=»xendval!STARTVALº¨¨               * 00079500
*                              is the name (RS-type), or address in   * 00079600
*                              register (2)-(12), of an optional      * 00079700
*                              fullword input that specifies the end  * 00079800
*                              of a requested list number range.  If  * 00079900
*                              the user of this macro does not        * 00080000
*                              specify this keyword, the ending range * 00080100
*                              value will be equal to the starting    * 00080200
*                              range value specified on the STARTVAL  * 00080300
*                              keyword.  The STARTVAL keyword is      * 00080400
*                              required if ENDVAL is specified.       * 00080500
*                              DEFAULT: STARTVAL                      * 00080600
*                                                                     * 00080700
*                                                                     * 00080800
*                                                                     * 00080900
*                                                                     * 00081000
*                                                                     * 00081100
*                  LISTNUMLEVEL=ENTRY                                 * 00081200
*                      Returns an entry at a requested position, a    * 00081300
*                      group of entries at a requested range of       * 00081400
*                      positions, or the entries at all entry         * 00081500
*                      positions that were dumped on a requested list * 00081600
*                      number.  The entries in the answer area will   * 00081700
*                      be mapped by the StrBEntry mapping which is    * 00081800
*                      found in the IXLZSTRB macro.  In the StrBEntry * 00081900
*                      entry, there will be a pointer to the entry    * 00082000
*                      controls in the answer area.  The DDil mapping * 00082100
*                      found in the IXLYDDIB macro will map the entry * 00082200
*                      controls.                                      * 00082300
*                                                                     * 00082400
*                                                                     * 00082500
*                      LISTNUMVAL=xlistnumval                         * 00082600
*                          is the name (RS-type), or address in       * 00082700
*                          register (2)-(12), of a required fullword  * 00082800
*                          input that specifies the list number for   * 00082900
*                          which entries will be retrieved            * 00083000
*                                                                     * 00083100
*                                                                     * 00083200
*                                                                     * 00083300
*                                                                     * 00083400
*                      ÝENTRYKEY=»xentrykey!NO_KEYº¨                  * 00083500
*                          is the name (RS-type), or address in       * 00083600
*                          register (2)-(12), of an optional 16       * 00083700
*                          character input that specifies the key to  * 00083800
*                          be used for retrieving list entries.  If   * 00083900
*                          this keyword is specified, only list       * 00084000
*                          entries with the requested key will be     * 00084100
*                          returned to the user.                      * 00084200
*                          DEFAULT: NO_KEY                            * 00084300
*                                                                     * 00084400
*                                                                     * 00084500
*                                                                     * 00084600
*                                                                     * 00084700
*                      ÝSTARTPOS=»xstartpos!ALLº                      * 00084800
*                          is the name (RS-type), or address in       * 00084900
*                          register (2)-(12), of an optional fullword * 00085000
*                          input that specifies the start of the      * 00085100
*                          requested entry position range.  If the    * 00085200
*                          user of this macro does not specify this   * 00085300
*                          keyword, all of the entries in the dump    * 00085400
*                          for the requested list number will be      * 00085500
*                          returned to the user.                      * 00085600
*                          DEFAULT: ALL                               * 00085700
*                                                                     * 00085800
*                                                                     * 00085900
*                          ÝENDPOS=»xendpos!STARTPOSº¨¨               * 00086000
*                              is the name (RS-type), or address in   * 00086100
*                              register (2)-(12), of an optional      * 00086200
*                              fullword input that specifies the end  * 00086300
*                              of a requested entry position range.   * 00086400
*                              If the user of this macro does not     * 00086500
*                              specify this keyword, the ending range * 00086600
*                              position will be equal to the starting * 00086700
*                              range position specified on the        * 00086800
*                              STARTPOS keyword.  The STARTPOS        * 00086900
*                              keyword is required if ENDPOS is       * 00087000
*                              specified.                             * 00087100
*                              DEFAULT: STARTPOS                      * 00087200
*                                                                     * 00087300
*                                                                     * 00087400
*                                                                     * 00087500
*                                                                     * 00087600
*                                                                     * 00087700
*                                                                     * 00087800
*                      ÝORDER=»HEAD!TAILº¨                            * 00087900
*                          is an optional keyword input which         * 00088000
*                          indicates whether entries for the          * 00088100
*                          requested list number will be returned in  * 00088200
*                          the head-to-tail order or tail-to-head     * 00088300
*                          order.  For a list number, the head of the * 00088400
*                          queue represents the entry chained         * 00088500
*                          directly off of the list number and the    * 00088600
*                          tail represents the entry farthest from    * 00088700
*                          the list number.                           * 00088800
*                          DEFAULT: HEAD                              * 00088900
*                                                                     * 00089000
*                                                                     * 00089100
*                          ORDER=HEAD                                 * 00089200
*                              specifies that the entries returned in * 00089300
*                              the answer area specified will be in   * 00089400
*                              head-to-tail order.  If the user       * 00089500
*                              specifies the STARTPOS/ENDPOS keyword  * 00089600
*                              set, the entries returned will be      * 00089700
*                              returned in head-to-tail order.        * 00089800
*                                                                     * 00089900
*                          ORDER=TAIL                                 * 00090000
*                              specifies that the entries returned in * 00090100
*                              the answer area specified will be in   * 00090200
*                              tail-to-head order.  If the user       * 00090300
*                              specifies the STARTPOS/ENDPOS keyword  * 00090400
*                              set, the entries returned will be      * 00090500
*                              returned in tail-to-head order.        * 00090600
*                                                                     * 00090700
*                              NOTE - If ORDER(TAIL) is specified and * 00090800
*                              STARTPOS and ENDPOS values are         * 00090900
*                              specified, the STARTPOS value must be  * 00091000
*                              less than the ENDPOS value.            * 00091100
*                                                                     * 00091200
*                                                                     * 00091300
*                                                                     * 00091400
*                                                                     * 00091500
*                                                                     * 00091600
*                                                                     * 00091700
*                      ÝADJUNCT=»NO!YESº¨                             * 00091800
*                          is an optional keyword input which         * 00091900
*                          indicates whether the adjunct data         * 00092000
*                          associated with the requested entries      * 00092100
*                          should be returned with the entries.  If   * 00092200
*                          the adjunct data is returned with the      * 00092300
*                          entries, the adjunct data for each entry   * 00092400
*                          will be pointed to by a pointer in the     * 00092500
*                          StrBEntry mapping for each entry.  The     * 00092600
*                          length of the adjunct data will also be in * 00092700
*                          the StrBEntry mapping.                     * 00092800
*                          DEFAULT: NO                                * 00092900
*                                                                     * 00093000
*                                                                     * 00093100
*                          ADJUNCT=NO                                 * 00093200
*                              specifies that the adjunct data        * 00093300
*                              associated with the requested entries  * 00093400
*                              should not be returned.                * 00093500
*                                                                     * 00093600
*                          ADJUNCT=YES                                * 00093700
*                              specifies that the adjunct data        * 00093800
*                              associated with the requested entries  * 00093900
*                              should be returned.                    * 00094000
*                                                                     * 00094100
*                                                                     * 00094200
*                                                                     * 00094300
*                                                                     * 00094400
*                                                                     * 00094500
*                                                                     * 00094600
*                      ÝENTRYDATA=»NO!YESº¨                           * 00094700
*                          is an optional keyword input which         * 00094800
*                          indicates whether the entry data           * 00094900
*                          associated with the requested entries      * 00095000
*                          should be returned with the entries.  If   * 00095100
*                          the entry data is returned with the        * 00095200
*                          entries, the entry data for each entry     * 00095300
*                          will be pointed to by a pointer in the     * 00095400
*                          StrBEntry mapping for each entry.  The     * 00095500
*                          total length of the entry data will also   * 00095600
*                          be in the StrBEntry mapping.  If the       * 00095700
*                          buffer fills up while retrieving the entry * 00095800
*                          data, the length of the entrydata returned * 00095900
*                          and the length of entry data left to be    * 00096000
*                          returned will be in the StrBEntry.  It is  * 00096100
*                          recommended that a user look at the        * 00096200
*                          StrBEntryEDataLenLeft2Proc in the last     * 00096300
*                          StrBEntry in the ANSAREA prior to invoking * 00096400
*                          the IXLZSTR service again to retrieve the  * 00096500
*                          remainder of the entrydata for the entry.  * 00096600
*                          This variable can be used to allocate a    * 00096700
*                          bigger ANSAREA so that the remainder of    * 00096800
*                          the entrydata for this entry can be        * 00096900
*                          retrieved in one invocation before         * 00097000
*                          starting on the next entry, if one exists. * 00097100
*                          DEFAULT: NO                                * 00097200
*                                                                     * 00097300
*                                                                     * 00097400
*                          ENTRYDATA=NO                               * 00097500
*                              specifies that the entry data          * 00097600
*                              associated with the requested entries  * 00097700
*                              should not be returned.                * 00097800
*                                                                     * 00097900
*                          ENTRYDATA=YES                              * 00098000
*                              specifies that the entry data          * 00098100
*                              associated with the requested entries  * 00098200
*                              should be returned.                    * 00098300
*                                                                     * 00098400
*                                                                     * 00098500
*                                                                     * 00098600
*                                                                     * 00098700
*                                                                     * 00098800
*                                                                     * 00098900
*                                                                     * 00099000
*                                                                     * 00099100
*                                                                     * 00099200
*          TYPE=LOCKENTRIES                                           * 00099300
*              Returns detailed information about a requested lock    * 00099400
*              entry, a range of lock entries, or all entries in the  * 00099500
*              lock table for a requested list structure.  If the     * 00099600
*              requested structure is not a list structure, nothing   * 00099700
*              will be returned in the answer area, and a return code * 00099800
*              8 and a reason code X'14' will be issued indicating    * 00099900
*              that the request that was made was invalid.  The       * 00100000
*              entries in the answer area will be mapped by the DLte  * 00100100
*              mapping found in the IXLYDDIB macro.  Only the         * 00100200
*              non-zero lock table entries will be returned to the    * 00100300
*              caller of the macro.                                   * 00100400
*                                                                     * 00100500
*                                                                     * 00100600
*              STRNAME=xstrname                                       * 00100700
*                  is the name (RS-type), or address in register      * 00100800
*                  (2)-(12), of a required 16 character input which   * 00100900
*                  contains the name of the structure for which       * 00101000
*                  information is being requested.                    * 00101100
*                                                                     * 00101200
*                                                                     * 00101300
*                                                                     * 00101400
*                                                                     * 00101500
*              STRDUMPID=xstrdumpid                                   * 00101600
*                  is the name (RS-type), or address in register      * 00101700
*                  (2)-(12), of a required halfword input which       * 00101800
*                  contains the structure dump ID of the structure    * 00101900
*                  being requested.  To obtain the structure dump ID  * 00102000
*                  of a structure, do a TYPE(STRUCTURE)               * 00102100
*                  STRLEVEL(SUMMARY) request and then look for the    * 00102200
*                  structure name and its associated structure dump   * 00102300
*                  ID in the ANSAREA.                                 * 00102400
*                                                                     * 00102500
*                                                                     * 00102600
*                                                                     * 00102700
*                                                                     * 00102800
*              ÝSTARTVAL=»xstartval!ALLº                              * 00102900
*                  is the name (RS-type), or address in register      * 00103000
*                  (2)-(12), of an optional fullword input that       * 00103100
*                  specifies the start of the requested lock table    * 00103200
*                  entry range.  If the user of this macro does not   * 00103300
*                  specify this keyword, all of the non-zero entries  * 00103400
*                  in the dump of the lock table will be returned to  * 00103500
*                  the user.                                          * 00103600
*                  DEFAULT: ALL                                       * 00103700
*                                                                     * 00103800
*                                                                     * 00103900
*                  ÝENDVAL=»xendval!STARTVALº¨¨                       * 00104000
*                      is the name (RS-type), or address in register  * 00104100
*                      (2)-(12), of an optional fullword input that   * 00104200
*                      specifies the end of a requested lock table    * 00104300
*                      entry range.  If the user of this macro does   * 00104400
*                      not specify this keyword, the ending range     * 00104500
*                      value will be equal to the starting range      * 00104600
*                      value specified on the STARTVAL keyword.  The  * 00104700
*                      STARTVAL keyword is required if ENDVAL is      * 00104800
*                      specified.                                     * 00104900
*                      DEFAULT: STARTVAL                              * 00105000
*                                                                     * 00105100
*                                                                     * 00105200
*                                                                     * 00105300
*                                                                     * 00105400
*                                                                     * 00105500
*          TYPE=USERCNTLS                                             * 00105600
*              Returns detailed information about a requested         * 00105700
*              connection ID, a range of connection IDs, or all       * 00105800
*              connection IDs for a requested structure.  The entries * 00105900
*              in the answer area will be mapped by the DLucb mapping * 00106000
*              if the structure is a list structure or the DLccb      * 00106100
*              mapping if the structure is a cache structure.  Both   * 00106200
*              of these mappings are found in the IXLYDDIB macro.     * 00106300
*                                                                     * 00106400
*                                                                     * 00106500
*              STRNAME=xstrname                                       * 00106600
*                  is the name (RS-type), or address in register      * 00106700
*                  (2)-(12), of a required 16 character input which   * 00106800
*                  contains the name of the structure for which       * 00106900
*                  information is being requested.                    * 00107000
*                                                                     * 00107100
*                                                                     * 00107200
*                                                                     * 00107300
*                                                                     * 00107400
*              STRDUMPID=xstrdumpid                                   * 00107500
*                  is the name (RS-type), or address in register      * 00107600
*                  (2)-(12), of a required halfword input which       * 00107700
*                  contains the structure dump ID of the structure    * 00107800
*                  being requested.  To obtain the structure dump ID  * 00107900
*                  of a structure, do a TYPE(STRUCTURE)               * 00108000
*                  STRLEVEL(SUMMARY) request and then look for the    * 00108100
*                  structure name and its associated structure dump   * 00108200
*                  ID in the ANSAREA.                                 * 00108300
*                                                                     * 00108400
*                                                                     * 00108500
*                                                                     * 00108600
*                                                                     * 00108700
*              ÝSTARTVAL=»xstartval!ALLº                              * 00108800
*                  is the name (RS-type), or address in register      * 00108900
*                  (2)-(12), of an optional fullword input that       * 00109000
*                  specifies the start of the requested connection ID * 00109100
*                  range.  If the user of this macro does not specify * 00109200
*                  this keyword, user control information for all of  * 00109300
*                  the connection IDs in the dump will be returned to * 00109400
*                  the user.                                          * 00109500
*                  DEFAULT: ALL                                       * 00109600
*                                                                     * 00109700
*                                                                     * 00109800
*                  ÝENDVAL=»xendval!STARTVALº¨¨                       * 00109900
*                      is the name (RS-type), or address in register  * 00110000
*                      (2)-(12), of an optional fullword input that   * 00110100
*                      specifies the end of a requested connection ID * 00110200
*                      range.  If the user of this macro does not     * 00110300
*                      specify this keyword, the ending range value   * 00110400
*                      will be equal to the starting range value      * 00110500
*                      specified on the STARTVAL keyword.  The        * 00110600
*                      STARTVAL keyword is required if ENDVAL is      * 00110700
*                      specified.                                     * 00110800
*                      DEFAULT: STARTVAL                              * 00110900
*                                                                     * 00111000
*                                                                     * 00111100
*                                                                     * 00111200
*                                                                     * 00111300
*                                                                     * 00111400
*          TYPE=ENTRY                                                 * 00111500
*              Returns detailed information about a requested entry   * 00111600
*              name or entry ID in a requested structure.  The entry  * 00111700
*              in the answer area will be mapped by the StrBEntry     * 00111800
*              mapping which is found in the IXLZSTRB macro.  In the  * 00111900
*              StrBEntry entry, there will be a pointer to the entry  * 00112000
*              controls in the answer area.  The DDil mapping found   * 00112100
*              in the IXLYDDIB macro will map the entry controls if   * 00112200
*              the requested structure is a list structure.  The DDic * 00112300
*              mapping found in the IXLYDDIB macro will map the entry * 00112400
*              controls if the requested structure is a cache         * 00112500
*              structure.                                             * 00112600
*                                                                     * 00112700
*                                                                     * 00112800
*              STRNAME=xstrname                                       * 00112900
*                  is the name (RS-type), or address in register      * 00113000
*                  (2)-(12), of a required 16 character input which   * 00113100
*                  contains the name of the structure for which       * 00113200
*                  information is being requested.                    * 00113300
*                                                                     * 00113400
*                                                                     * 00113500
*                                                                     * 00113600
*                                                                     * 00113700
*              STRDUMPID=xstrdumpid                                   * 00113800
*                  is the name (RS-type), or address in register      * 00113900
*                  (2)-(12), of a required halfword input which       * 00114000
*                  contains the structure dump ID of the structure    * 00114100
*                  being requested.  To obtain the structure dump ID  * 00114200
*                  of a structure, do a TYPE(STRUCTURE)               * 00114300
*                  STRLEVEL(SUMMARY) request and then look for the    * 00114400
*                  structure name and its associated structure dump   * 00114500
*                  ID in the ANSAREA.                                 * 00114600
*                                                                     * 00114700
*                                                                     * 00114800
*                                                                     * 00114900
*                                                                     * 00115000
*              The following is a set of mutually exclusive keys.     * 00115100
*              This set is required; only one key must be specified.  * 00115200
*                                                                     * 00115300
*                                                                     * 00115400
*              ENTRYNAME=xentryname                                   * 00115500
*                  belongs to a set of mutually exclusive keys. It is * 00115600
*                  the name (RS-type), or address in register         * 00115700
*                  (2)-(12), of a 16 character input that contains    * 00115800
*                  the name of the data entry or list entry to be     * 00115900
*                  returned to the user.                              * 00116000
*                                                                     * 00116100
*              ENTRYID=xentryid                                       * 00116200
*                  belongs to a set of mutually exclusive keys. It is * 00116300
*                  the name (RS-type), or address in register         * 00116400
*                  (2)-(12), of a 12 character input that contains    * 00116500
*                  the list entry identifier of the list entry to be  * 00116600
*                  returned to the user.  This keyword should only be * 00116700
*                  used if the requested structure is a list          * 00116800
*                  structure.  If the requested structure is not a    * 00116900
*                  list structure, nothing will be returned in the    * 00117000
*                  answer area and a return code of 8 and a reason    * 00117100
*                  code of X'14' will be issued indicating that the   * 00117200
*                  request that was made was invalid.                 * 00117300
*                                                                     * 00117400
*                                                                     * 00117500
*                                                                     * 00117600
*              End of a set of mutually exclusive required keys.      * 00117700
*                                                                     * 00117800
*                                                                     * 00117900
*                                                                     * 00118000
*              ÝADJUNCT=»NO!YESº¨                                     * 00118100
*                  is an optional keyword input which indicates       * 00118200
*                  whether the adjunct data associated with the       * 00118300
*                  requested entry should be returned with the entry. * 00118400
*                  If the adjunct data is returned with the entry,    * 00118500
*                  the adjunct data for the entry will be pointed to  * 00118600
*                  by a pointer in the StrBEntry mapping.  The length * 00118700
*                  of the adjunct data will also be in the StrBEntry  * 00118800
*                  mapping.                                           * 00118900
*                  DEFAULT: NO                                        * 00119000
*                                                                     * 00119100
*                                                                     * 00119200
*                  ADJUNCT=NO                                         * 00119300
*                      specifies that the adjunct data associated     * 00119400
*                      with the requested entry should not be         * 00119500
*                      returned.                                      * 00119600
*                                                                     * 00119700
*                  ADJUNCT=YES                                        * 00119800
*                      specifies that the adjunct data associated     * 00119900
*                      with the requested entry should be returned.   * 00120000
*                                                                     * 00120100
*                                                                     * 00120200
*                                                                     * 00120300
*                                                                     * 00120400
*                                                                     * 00120500
*                                                                     * 00120600
*              ÝENTRYDATA=»NO!YESº¨                                   * 00120700
*                  is an optional keyword input which indicates       * 00120800
*                  whether the entry data associated with the         * 00120900
*                  requested entries should be returned with the      * 00121000
*                  entries.  If the entry data is returned with the   * 00121100
*                  entries, the entry data for each entry will be     * 00121200
*                  pointed to by a pointer in the StrBEntry mapping   * 00121300
*                  for each entry.  The total length of the entry     * 00121400
*                  data will also be in the StrBEntry mapping.  If    * 00121500
*                  the buffer fills up while retrieving the entry     * 00121600
*                  data, the length of the entrydata returned and the * 00121700
*                  length of entry data left to be returned will be   * 00121800
*                  in the StrBEntry.  It is recommended that a user   * 00121900
*                  look at the StrBEntryEDataLenLeft2Proc in the last * 00122000
*                  StrBEntry in the ANSAREA prior to invoking the     * 00122100
*                  IXLZSTR service again to retrieve the remainder of * 00122200
*                  the entrydata for the entry.  This variable can be * 00122300
*                  used to allocate a bigger ANSAREA so that the      * 00122400
*                  remainder of the entrydata for this entry can be   * 00122500
*                  retrieved in one subsequent invocation.            * 00122600
*                  DEFAULT: NO                                        * 00122700
*                                                                     * 00122800
*                                                                     * 00122900
*                  ENTRYDATA=NO                                       * 00123000
*                      specifies that the entry data associated with  * 00123100
*                      the requested entry should not be returned.    * 00123200
*                                                                     * 00123300
*                  ENTRYDATA=YES                                      * 00123400
*                      specifies that the entry data associated with  * 00123500
*                      the requested entry should be returned.        * 00123600
*                                                                     * 00123700
*                                                                     * 00123800
*                                                                     * 00123900
*                                                                     * 00124000
*                                                                     * 00124100
*          TYPE=EMCONTROLS                                            * 00124200
*              Returns event monitor control information from the     * 00124300
*              dump data set.  This type of request should only be    * 00124400
*              used if the requested structure is a list structure.   * 00124500
*              If the requested structure is not a list structure,    * 00124600
*              nothing will be returned in the answer area, and a     * 00124700
*              return code 8 and a reason code X'14' will be issued   * 00124800
*              indicating that the request that was made was invalid. * 00124900
*                                                                     * 00125000
*                                                                     * 00125100
*              STRNAME=xstrname                                       * 00125200
*                  is the name (RS-type), or address in register      * 00125300
*                  (2)-(12), of a required 16 character input which   * 00125400
*                  contains the name of the structure for which       * 00125500
*                  information is being requested.                    * 00125600
*                                                                     * 00125700
*                                                                     * 00125800
*                                                                     * 00125900
*                                                                     * 00126000
*              STRDUMPID=xstrdumpid                                   * 00126100
*                  is the name (RS-type), or address in register      * 00126200
*                  (2)-(12), of a required halfword input which       * 00126300
*                  contains the structure dump ID of the structure    * 00126400
*                  being requested.  To obtain the structure dump ID  * 00126500
*                  of a structure, do a TYPE(STRUCTURE)               * 00126600
*                  STRLEVEL(SUMMARY) request and then look for the    * 00126700
*                  structure name and its associated structure dump   * 00126800
*                  ID in the ANSAREA.                                 * 00126900
*                                                                     * 00127000
*                                                                     * 00127100
*                                                                     * 00127200
*                                                                     * 00127300
*              EMCLEVEL=»SUMMARY!EMCº                                 * 00127400
*                  is a required keyword input that specifies the     * 00127500
*                  level of the EMCONTROLS type request.              * 00127600
*                                                                     * 00127700
*                                                                     * 00127800
*                  EMCLEVEL=SUMMARY                                   * 00127900
*                      Returns the list of all of the list numbers,   * 00128000
*                      in the requested structure, requested to be    * 00128100
*                      dumped.  Returns event monitor control         * 00128200
*                      information about a requested list number, a   * 00128300
*                      range of list numbers, or all list numbers in  * 00128400
*                      the dump.  The entries in the answer area will * 00128500
*                      be mapped by the StrBSummary mapping which is  * 00128600
*                      found in the IXLZSTRB macro.                   * 00128700
*                                                                     * 00128800
*                                                                     * 00128900
*                      ÝSTARTVAL=»xstartval!ALLº                      * 00129000
*                          is the name (RS-type), or address in       * 00129100
*                          register (2)-(12), of an optional fullword * 00129200
*                          input that specifies the start of the      * 00129300
*                          requested list number range for            * 00129400
*                          EMCONTROLS.  If the user of this macro     * 00129500
*                          does not specify this keyword, a list of   * 00129600
*                          all the event monitor controls for all the * 00129700
*                          list numbers for the requested list        * 00129800
*                          structure, requested to be dumped, will be * 00129900
*                          returned to the user.                      * 00130000
*                          DEFAULT: ALL                               * 00130100
*                                                                     * 00130200
*                                                                     * 00130300
*                          ÝENDVAL=»xendval!STARTVALº¨¨               * 00130400
*                              is the name (RS-type), or address in   * 00130500
*                              register (2)-(12), of an optional      * 00130600
*                              fullword input that specifies the end  * 00130700
*                              of a requested list number range for   * 00130800
*                              EMCONTROLS.  If the user of this macro * 00130900
*                              does not specify this keyword, the     * 00131000
*                              ending range value will be equal to    * 00131100
*                              the starting range value specified on  * 00131200
*                              the STARTVAL keyword.  The STARTVAL    * 00131300
*                              keyword is required if ENDVAL is       * 00131400
*                              specified.                             * 00131500
*                              DEFAULT: STARTVAL                      * 00131600
*                                                                     * 00131700
*                                                                     * 00131800
*                                                                     * 00131900
*                                                                     * 00132000
*                                                                     * 00132100
*                  EMCLEVEL=EMC                                       * 00132200
*                      Returns event monitor controls that were       * 00132300
*                      dumped for the requested list structure.  The  * 00132400
*                      entries in the answer area will be mapped by   * 00132500
*                      the StrBEmcDetail mapping which is found in    * 00132600
*                      the IXLZSTRB macro.  In the StrBEmcDetail      * 00132700
*                      entry, there will be a pointer to the event    * 00132800
*                      monitor controls in the answer area.  The DEmc * 00132900
*                      mapping found in the IXLYDDIB macro will map   * 00133000
*                      the event monitor controls.                    * 00133100
*                                                                     * 00133200
*                                                                     * 00133300
*                      LISTNUMVAL=xlistnumval                         * 00133400
*                          is the name (RS-type), or address in       * 00133500
*                          register (2)-(12), of a required fullword  * 00133600
*                          input that specifies the list number for   * 00133700
*                          which event monitor controls will be       * 00133800
*                          returned.                                  * 00133900
*                                                                     * 00134000
*                                                                     * 00134100
*                                                                     * 00134200
*                                                                     * 00134300
*                      ÝENTRYKEY=»xentrykey!NO_KEYº¨                  * 00134400
*                          is the name (RS-type), or address in       * 00134500
*                          register (2)-(12), of an optional 16       * 00134600
*                          character input that specifies the key to  * 00134700
*                          be used for retrieving the event monitor   * 00134800
*                          controls within the specified list number. * 00134900
*                          If this keyword is specified, only event   * 00135000
*                          monitor control entries with the requested * 00135100
*                          key will be returned to the user.          * 00135200
*                          DEFAULT: NO_KEY                            * 00135300
*                                                                     * 00135400
*                                                                     * 00135500
*                                                                     * 00135600
*                                                                     * 00135700
*                                                                     * 00135800
*                                                                     * 00135900
*                                                                     * 00136000
*          TYPE=EVENTQS                                               * 00136100
*              Returns event queue control information from the dump  * 00136200
*              data set.  This type of request should only be used if * 00136300
*              the requested structure is a list structure.  If the   * 00136400
*              requested structure is not a list structure, nothing   * 00136500
*              will be returned in the answer area, and a return code * 00136600
*              8 and a reason code X'14' will be issued indicating    * 00136700
*              that the request that was made was invalid.            * 00136800
*                                                                     * 00136900
*                                                                     * 00137000
*              STRNAME=xstrname                                       * 00137100
*                  is the name (RS-type), or address in register      * 00137200
*                  (2)-(12), of a required 16 character input which   * 00137300
*                  contains the name of the structure for which       * 00137400
*                  information is being requested.                    * 00137500
*                                                                     * 00137600
*                                                                     * 00137700
*                                                                     * 00137800
*                                                                     * 00137900
*              STRDUMPID=xstrdumpid                                   * 00138000
*                  is the name (RS-type), or address in register      * 00138100
*                  (2)-(12), of a required halfword input which       * 00138200
*                  contains the structure dump ID of the structure    * 00138300
*                  being requested.  To obtain the structure dump ID  * 00138400
*                  of a structure, do a TYPE(STRUCTURE)               * 00138500
*                  STRLEVEL(SUMMARY) request and then look for the    * 00138600
*                  structure name and its associated structure dump   * 00138700
*                  ID in the ANSAREA.                                 * 00138800
*                                                                     * 00138900
*                                                                     * 00139000
*                                                                     * 00139100
*                                                                     * 00139200
*              EQLEVEL=»DETAIL!EMCº                                   * 00139300
*                  is a required keyword input that specifies the     * 00139400
*                  level of the EVENTQS type request.                 * 00139500
*                                                                     * 00139600
*                                                                     * 00139700
*                  EQLEVEL=DETAIL                                     * 00139800
*                      Returns detailed event queue information about * 00139900
*                      a requested connection id, a range of          * 00140000
*                      connection ids, or all connection ids in the   * 00140100
*                      dump.  The entries in the answer area will be  * 00140200
*                      mapped by the StrBDetail mapping which is      * 00140300
*                      found in the IXLZSTRB macro.  In the           * 00140400
*                      StrBDetail entry, there will be a pointer to   * 00140500
*                      the event queue controls in the the answer     * 00140600
*                      area.  The DEqc mapping found in the IXLYDEQC  * 00140700
*                      macro will map the event queue controls.  The  * 00140800
*                      length of the event queue controls will also   * 00140900
*                      be placed in the StrBDetail entry.             * 00141000
*                                                                     * 00141100
*                                                                     * 00141200
*                      ÝSTARTVAL=»xstartval!ALLº                      * 00141300
*                          is the name (RS-type), or address in       * 00141400
*                          register (2)-(12), of an optional fullword * 00141500
*                          input that specifies the start of the      * 00141600
*                          requested connection id range for EVENTQS. * 00141700
*                          If the user of this macro does not specify * 00141800
*                          this keyword, all of the event queue       * 00141900
*                          controls for all the connection ids for    * 00142000
*                          the requested list structure, requested to * 00142100
*                          be dumped, will be returned to the user.   * 00142200
*                          DEFAULT: ALL                               * 00142300
*                                                                     * 00142400
*                                                                     * 00142500
*                          ÝENDVAL=»xendval!STARTVALº¨¨               * 00142600
*                              is the name (RS-type), or address in   * 00142700
*                              register (2)-(12), of an optional      * 00142800
*                              fullword input that specifies the end  * 00142900
*                              of a requested connection id range for * 00143000
*                              EVENTQS.  If the user of this macro    * 00143100
*                              does not specify this keyword, the     * 00143200
*                              ending range value will be equal to    * 00143300
*                              the starting range value specified on  * 00143400
*                              the STARTVAL keyword.  The STARTVAL    * 00143500
*                              keyword is required if ENDVAL is       * 00143600
*                              specified.                             * 00143700
*                              DEFAULT: STARTVAL                      * 00143800
*                                                                     * 00143900
*                                                                     * 00144000
*                                                                     * 00144100
*                                                                     * 00144200
*                                                                     * 00144300
*                  EQLEVEL=EMC                                        * 00144400
*                      Returns event monitor controls associated with * 00144500
*                      the event queue of the requested connection    * 00144600
*                      id.  The entries in the answer area will be    * 00144700
*                      mapped by the StrBEmcDetail mapping which is   * 00144800
*                      found in the IXLZSTRB macro.  In the           * 00144900
*                      StrBEmcDetail entry, there will be a pointer   * 00145000
*                      to the event monitor controls in the answer    * 00145100
*                      area.  The DEmc mapping found in the IXLYDDIB  * 00145200
*                      macro will map the event monitor controls.     * 00145300
*                                                                     * 00145400
*                                                                     * 00145500
*                      CONIDVAL=xconidval                             * 00145600
*                          is the name (RS-type), or address in       * 00145700
*                          register (2)-(12), of a required byte      * 00145800
*                          input that specifies the connection id for * 00145900
*                          which event monitor controls on the event  * 00146000
*                          queue will be returned.                    * 00146100
*                                                                     * 00146200
*                                                                     * 00146300
*                                                                     * 00146400
*                                                                     * 00146500
*                                                                     * 00146600
*                                                                     * 00146700
*                                                                     * 00146800
*                                                                     * 00146900
*                                                                     * 00147000
*                                                                     * 00147100
*                                                                     * 00147200
*                                                                     * 00147300
*      ÝRETCODE=xretcode¨                                             * 00147400
*          is the name (RS-type) of an optional fullword output       * 00147500
*          variable, or register (2)-(12), that contains the return   * 00147600
*          code from the IXLZSTR service.                             * 00147700
*                                                                     * 00147800
*                                                                     * 00147900
*                                                                     * 00148000
*                                                                     * 00148100
*      ÝRSNCODE=xrsncode¨                                             * 00148200
*          is the name (RS-type) of an optional fullword output       * 00148300
*          variable, or register (2)-(12), that contains the reason   * 00148400
*          code from the IXLZSTR service.                             * 00148500
*                                                                     * 00148600
*                                                                     * 00148700
*                                                                     * 00148800
*                                                                     * 00148900
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00149000
*          is an optional byte input decimal value in the "1-1" range * 00149100
*          that specifies the macro version.  PLISTVER is the only    * 00149200
*          key allowed on the list form of MF and determines which    * 00149300
*          parameter list is generated.  Note that MAX may be         * 00149400
*          specified instead of a number, and the parameter list will * 00149500
*          be of the largest size currently supported. This size may  * 00149600
*          grow from release to release (thus possibly affecting the  * 00149700
*          amount of storage needed by your program).  If your        * 00149800
*          program can tolerate this, IBM recommends that you always  * 00149900
*          specify MAX when creating the list form parameter list as  * 00150000
*          that will ensure that the list form parameter list is      * 00150100
*          always long enough to hold whatever parameters might be    * 00150200
*          specified on the execute form.                             * 00150300
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00150400
*          default is the lowest version which allows all of the      * 00150500
*          parameters specified on the invocation to be processed.    * 00150600
*                                                                     * 00150700
*                                                                     * 00150800
*                                                                     * 00150900
*                                                                     * 00151000
*      ÝMF=»S!L!Eº¨                                                   * 00151100
*          is an optional keyword input which specifies the macro     * 00151200
*          form.                                                      * 00151300
*          DEFAULT: S                                                 * 00151400
*                                                                     * 00151500
*                                                                     * 00151600
*          ÝMF=S¨                                                     * 00151700
*              specifies the standard form of the macro.  The "S"     * 00151800
*              form generates code to put the parameters into an      * 00151900
*              in-line parameter list and invoke the desired service. * 00152000
*              Full checking for required macro keys is done along    * 00152100
*              with supplying defaults for omitted optional           * 00152200
*              parameters.                                            * 00152300
*                                                                     * 00152400
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00152500
*              specifies the list form of the macro.  The "L" form    * 00152600
*              defines an area to be used for the parameter list.     * 00152700
*              Only the PLISTVER key may be specified on the          * 00152800
*              invocation.  All other macro parameters are flagged as * 00152900
*              errors.  If PLISTVER is not specified, the original    * 00153000
*              parameter list definition is used.                     * 00153100
*                                                                     * 00153200
*            ,xmfctrl                                                 * 00153300
*              is a required input.  It is the name of a storage area * 00153400
*              for the parameter list.                                * 00153500
*                                                                     * 00153600
*            »,xmfattr!0Dº                                            * 00153700
*              is an optional 60 character input string that varies   * 00153800
*              from 1 to 60 characters. Use it to force boundary      * 00153900
*              alignment of the parameter list. Use only 0F or 0D.    * 00154000
*              DEFAULT: 0D which forces the parameter list to a       * 00154100
*              doubleword boundary.                                   * 00154200
*                                                                     * 00154300
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00154400
*              specifies the execute form of the macro.  The "E" form * 00154500
*              generates code to put the parameters into the          * 00154600
*              parameter list specified by xmfctrl and provides full  * 00154700
*              syntax checking with default setting.                  * 00154800
*                                                                     * 00154900
*            ,xmfctrl                                                 * 00155000
*              is a required input.  It is the name (RS-type), or     * 00155100
*              address in register (1)-(12), of a storage area for    * 00155200
*              the parameter list.                                    * 00155300
*                                                                     * 00155400
*            »,COMPLETEº                                              * 00155500
*              is an optional keyword input which specifies the       * 00155600
*              degree of macro parameter syntax checking.             * 00155700
*              DEFAULT: COMPLETE                                      * 00155800
*                                                                     * 00155900
*                                                                     * 00156000
*              COMPLETE                                               * 00156100
*                  Checking for required macro keys is done and       * 00156200
*                  defaults are supplied for omitted optional         * 00156300
*                  parameters.                                        * 00156400
*                                                                     * 00156500
*                                                                     * 00156600
*                                                                     * 00156700
*                                                                     * 00156800
*                                                                     * 00156900
*                                                                     * 00157000
*                                                                     * 00157100
*01* RETURN CODES:                                                    * 00157200
*                                                                     * 00157300
*                                                                     * 00157400
*       00        Successful completion.  IXLZSTR returned all        * 00157500
*                 requested data.                                     * 00157600
*                                                                     * 00157700
*       04        Successful completion.  Additional data available   * 00157800
*                 but not returned.                                   * 00157900
*                                                                     * 00158000
*                 HEX REASON  MEANING                                 * 00158100
*                 CODE                                                * 00158200
*                                                                     * 00158300
*                                                                     * 00158400
*                 4           ANSAREA was not large enough to contain * 00158500
*                             the data to be returned by IXLZSTR.  To * 00158600
*                             retrieve the remainder of the data,     * 00158700
*                             invoke IXLZSTR again with the same      * 00158800
*                             keywords and the RESTOKEN as input to   * 00158900
*                             the macro.                              * 00159000
*                                                                     * 00159100
*                                                                     * 00159200
*                                                                     * 00159300
*       08        No data returned in ANSAREA                         * 00159400
*                                                                     * 00159500
*                 HEX REASON  MEANING                                 * 00159600
*                 CODE                                                * 00159700
*                                                                     * 00159800
*                                                                     * 00159900
*                 04          The STRNAME specified on the IXLZSTR    * 00160000
*                             macro does not appear in the dump.      * 00160100
*                                                                     * 00160200
*                 08          The STRNAME specified on the IXLZSTR    * 00160300
*                             macro appears in the dump, but the      * 00160400
*                             STRDUMPID does not appear in the dump.  * 00160500
*                                                                     * 00160600
*                 0C          No coupling facility structure data     * 00160700
*                             appears in the dump.                    * 00160800
*                                                                     * 00160900
*                 10          ANSAREA specified on the IXLZSTR macro  * 00161000
*                             does not meet the minimum storage       * 00161100
*                             requirement for the request.            * 00161200
*                                                                     * 00161300
*                 14          The data does not appear in the dump    * 00161400
*                             because the attributes of the requested * 00161500
*                             data does not match the attributes of   * 00161600
*                             the structure type.                     * 00161700
*                                                                     * 00161800
*                 18          The range specification on the IXLZSTR  * 00161900
*                             macro is invalid.  The starting value   * 00162000
*                             is greater than the ending value.       * 00162100
*                                                                     * 00162200
*                                                                     * 00162300
*                                                                     * 00162400
*       0C        Environmental Error                                 * 00162500
*                                                                     * 00162600
*                 HEX REASON  MEANING                                 * 00162700
*                 CODE                                                * 00162800
*                                                                     * 00162900
*                                                                     * 00163000
*                 04          Unable to obtain system storage.        * 00163100
*                                                                     * 00163200
*                                                                     * 00163300
*                                                                     * 00163400
*       10        Failure in IXLZSTR processing                       * 00163500
*                                                                     * 00163600
*                 HEX REASON  MEANING                                 * 00163700
*                 CODE                                                * 00163800
*                                                                     * 00163900
*                                                                     * 00164000
*                 04          Some data could not be accessed in the  * 00164100
*                             dump data set                           * 00164200
*                                                                     * 00164300
*                                                                     * 00164400
*                                                                     * 00164500
*                                                                     * 00164600
*                                                                     * 00164700
*01* REASON CODES:                                                    * 00164800
*                                                                     * 00164900
*       Reason codes, as appropriate, are defined under their         * 00165000
*       corresponding return code.                                    * 00165100
*                                                                     * 00165200
*01* MODULE TYPE:  ASSEM MACRO                                        * 00165300
*                                                                     * 00165400
*02*   PROCESSOR:  ASSEM                                              * 00165500
*                                                                     * 00165600
*01* COMPONENT:  SCIXL                                                * 00165700
*                                                                     * 00165800
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00165900
*                                                                     * 00166000
*01* MACRO USAGE NOTES:                                               * 00166100
*                                                                     * 00166200
*                                                                     * 00166300
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00166400
*        global macro variable.  Any value other than 'NO' will       * 00166500
*        result in the macro expansion being printed.  The default is * 00166600
*        'YES'.  The following examples illustrate how the ZPRINT     * 00166700
*        variable should be set.                                      * 00166800
*                                                                     * 00166900
*                    GBLC &ZPRINT                                     * 00167000
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00167100
*                                                                     * 00167200
*                                                                     * 00167300
*    2.  All keys currently contained in the IXLZSTR macro correspond * 00167400
*        to  version 1.  If you specify PLISTVER, use a value of 1 or * 00167500
*        MAX.                                                         * 00167600
*                                                                     * 00167700
*                                                                     * 00167800
*    3.  EXAMPLES:.                                                   * 00167900
*                                                                     * 00168000
*        The following examples will illustrate some typical requests * 00168100
*        that can be made with the IXLZSTR macro.                     * 00168200
*                                                                     * 00168300
*                                                                     * 00168400
*        a.  A  user  wants  to  obtain  detail  information  about a * 00168500
*            structure  named 'LIST01'.  The name of the structure is * 00168600
*            stored  in  a 16 character variable called MYSTR and the * 00168700
*            structure  dump  identifier  is  stored  in  a fixed(16) * 00168800
*            variable  called  DUMPID.    The following invocation of * 00168900
*            IXLZSTR will retrieve that information from the dump and * 00169000
*            put  it  into the user defined answer area named MYAREA. * 00169100
*            The  length of MYAREA is 8192 bytes and is stored in a 4 * 00169200
*            byte  variable named AREALEN.  The RESTOKEN that will be * 00169300
*            used by this macro will be called MYRSTKN.               * 00169400
*                                                                     * 00169500
*            IXLZSTR ANSAREA=MYAREA,ANSLEN=AREALEN,                   * 00169600
*                    RESTOKEN=MYRSTKN,TYPE=STRUCTURE,                 * 00169700
*                    STRLEVEL=DETAIL,STRNAME=MYSTR,STRDUMPID=DUMPID   * 00169800
*                                                                     * 00169900
*                                                                     * 00170000
*        b.  A user wants detail information about all of the castout * 00170100
*            classes for a cache structure named 'CACHE01'.  The name * 00170200
*            of  the  structure  is stored in a 16 character variable * 00170300
*            called MYSTR and the structure dump identifier is stored * 00170400
*            in  a  fixed(16)  variable called DUMPID.  The following * 00170500
*            invocation  of  IXLZSTR  will  retrieve that information * 00170600
*            from  the  dump  and put it into the user defined answer * 00170700
*            area  named MYAREA.   The length of MYAREA is 5000 bytes * 00170800
*            and is stored in a 4 byte variable named AREALEN.  Since * 00170900
*            there  is  more  that 5000 bytes of data to be returned, * 00171000
*            multiple  calls  will have to be made to retrieve all of * 00171100
*            the  data.  The RESTOKEN that will be used by this macro * 00171200
*            will   be   called  MYRSTKN.     Below  is  pseudo  code * 00171300
*            surrounding the actual macro invocation.                 * 00171400
*                                                                     * 00171500
*              Do while not done with request                         * 00171600
*                                                                     * 00171700
*                IXLZSTR ANSAREA=MYAREA,ANSLEN=AREALEN,               * 00171800
*                        RESTOKEN=MYRSTKN,                            * 00171900
*                        TYPE=CLASS,STRNAME=MYSTR,STRDUMPID=DUMPID,   * 00172000
*                        CLASSTYPE=CASTOUT,CLASSLEVEL=DETAIL          * 00172100
*                        .                                            * 00172200
*                        .                                            * 00172300
*                                                                     * 00172400
*                Process data returned                                * 00172500
*                        .                                            * 00172600
*                        .                                            * 00172700
*                                                                     * 00172800
*                If the return code returned is not equal to 4 then   * 00172900
*                   done with request                                 * 00173000
*                                                                     * 00173100
*              Enddo while not done with request                      * 00173200
*                                                                     * 00173300
*        c.  A  user wants to obtain all information about entries at * 00173400
*            position  2-6, from the tail of list number 5 for a list * 00173500
*            structure  named  'LIST01'.    This will include adjunct * 00173600
*            data  and  entry  data.    The  name of the structure is * 00173700
*            stored  in  a 16 character variable called MYSTR and the * 00173800
*            structure  dump  identifier  is  stored  in  a fixed(16) * 00173900
*            variable  called  DUMPID.    The  starting  value of the * 00174000
*            position  range  is  stored  in  a 4 byte variable named * 00174100
*            STARTRNG  and  the ending value of the position range is * 00174200
*            stored  in a 4 byte variable named ENDRNG.  The value of * 00174300
*            the  list  number  is  stored in a 4 byte variable named * 00174400
*            MYLISTNM.    The  following  invocation  of IXLZSTR will * 00174500
*            retrieve  that information from the dump and put it into * 00174600
*            the  user  defined answer area named MYAREA.  The length * 00174700
*            of  MYAREA  is 8192 bytes.   This value is stored in a 4 * 00174800
*            byte  variable  named AREALEN.  Since there is more that * 00174900
*            8192  bytes  of data to be returned, multiple calls will * 00175000
*            have  to  be  made  to  retrieve  all of the data.   The * 00175100
*            RESTOKEN  that will be used by this macro will be called * 00175200
*            MYRSTKN.    Below  is pseudo code surrounding the actual * 00175300
*            macro invocation.                                        * 00175400
*                                                                     * 00175500
*              Do while not done with request                         * 00175600
*                                                                     * 00175700
*                IXLZSTR ANSAREA=MYAREA,ANSLEN=AREALEN,               * 00175800
*                        RESTOKEN=MYRSTKN,                            * 00175900
*                        TYPE=LISTNUM,STRNAME=MYSTR,STRDUMPID=DUMPID, * 00176000
*                        LISTNUMLEVEL=ENTRY,                          * 00176100
*                        LISTNUMVAL=MYLISTNM,STARTPOS=STARTRNG,       * 00176200
*                        ENDPOS=ENDRNG,ORDER=TAIL,                    * 00176300
*                        ADJUNCT=YES,ENTRYDATA=YES                    * 00176400
*                        .                                            * 00176500
*                        .                                            * 00176600
*                                                                     * 00176700
*                Process data returned                                * 00176800
*                        .                                            * 00176900
*                        .                                            * 00177000
*                                                                     * 00177100
*                If the return code returned is not equal to 4 then   * 00177200
*                   done with request                                 * 00177300
*                                                                     * 00177400
*              Enddo while not done with request                      * 00177500
*                                                                     * 00177600
*                                                                     * 00177700
*                                                                     * 00177800
*                                                                     * 00177900
*                                                                     * 00178000
*01* CHANGE ACTIVITY:                                                 * 00178100
*                                                                     * 00178200
*   Flag LineItem  FMID    Date   ID    Comment                       * 00178300
*                                                                     * 00178400
*    $L0=SYSLKDFM HBB5510 921114 PD00LA:  XLS Initial Release         * 00178500
*    $D1=DIG0042  HBB5510 930520 PD00LA:  ARB support - Documentation * 00178600
*                                         changes only                * 00178700
*    $D2=DIG0044  HBB5510 930520 PD00LA:  Structure Dump ID Support   * 00178800
*    $P1=PIG1693  HBB5510 930520 PD00LA:  Change inconsistent         * 00178900
*                                         keywords LOCKINDEX and USER * 00179000
*    $P2=PIG3506  HBB5510 931104 PD00LA:  Change inconsistent         * 00179100
*                                         documentation               * 00179200
*    $P3=PIG3527  HBB5510 931104 PD00LA:  Need to use explicit        * 00179300
*                                         register notation in        * 00179400
*                                         Assembler calls             * 00179500
*    $P4=PIG5066  HBB5510 940113 PD00EA:  Fix mixed case assembler    * 00179600
*                                         declarations                * 00179700
*    $01=OW24532  HBB5520 961115 PD00XM:  Add EMCONTROLS and EVENTQS  * 00179800
*                                         for EMC dumping support     * 00179900
****** END OF SPECIFICATIONS *****************************************/ 00180000
*/********************************************************************* 00180100
         MACRO                                                          00180200
&XLABEL  IXLZSTR &ANSAREA=,&ANSLEN=,&RESTOKEN=,&ABDPLPTR=,&TYPE=,      *00180300
               &STRLEVEL=,&STRNAME=,&STRDUMPID=,&CLASSTYPE=,           *00180400
               &CLASSLEVEL=,&STARTVAL=,&ENDVAL=,&CLASSVAL=,&STARTPOS=, *00180500
               &ENDPOS=,&ORDER=,&ADJUNCT=,&ENTRYDATA=,&LISTNUMLEVEL=,  *00180600
               &LISTNUMVAL=,&ENTRYKEY=,&ENTRYNAME=,&ENTRYID=,          *00180700
               &EMCLEVEL=,&EQLEVEL=,&CONIDVAL=,&RETCODE=,&RSNCODE=,    *00180800
               &PLISTVER=,&MF=                                          00180900
.*                                                                      00181000
*                  MACDATE -96/11/22-<1>                                00181100
.*                                                                      00181200
.*******************************************************************    00181300
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00181400
.*******************************************************************    00181500
                  GBLC  &ZPRINT     YES=PRINT NO=NO PRINT               00181600
                  GBLC  &ZTEST      YES=TEST NO=NO TEST                 00181700
                  GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX         00181800
.*                                                                      00181900
                  GBLC  &ZIXLZSTR   YES=MACRO USED AT LEAST ONCE        00182000
.*******************************************************************    00182100
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00182200
.*******************************************************************    00182300
                  LCLC  &ZMS        ERROR MESSAGE WORK AREA             00182400
                  LCLC  &ZCNDX      SYSNDX CHARACTERS                   00182500
                  LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED          00182600
                  LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR         00182700
                  LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE         00182800
                  LCLA  &ZAWRK      USED AS A WORK AREA                 00182900
                  LCLA  &ZASIZ      USED FOR SIZE OF VALUE              00183000
                  LCLA  &ZN         NUMERIC WORK VARIABLE               00183100
                  LCLC  &ZC         CHARACTER WORK VARIABLE             00183200
                  LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE         00183300
                  LCLA  &ZTLA       VALUE TOO LONG VARIABLE             00183400
                  LCLC  &ZMAC_G     "G" or null                         00183500
&ZMAC_G           SETC  ''                                              00183600
                  LCLC  &ZMAC_LR                                        00183700
&ZMAC_LR          SETC  'LR'                                            00183800
                  LCLC  &ZMAC_L                                         00183900
&ZMAC_L           SETC  'L'                                             00184000
                  LCLC  &ZMAC_ST                                        00184100
&ZMAC_ST          SETC  'ST'                                            00184200
                  LCLC  &ZMAC_LLGT                                      00184300
&ZMAC_LLGT        SETC  'L'                                             00184400
                  LCLC  &ZMAC_LGR                                       00184500
&ZMAC_LGR         SETC  'LR'                                            00184600
                  LCLC  &ZMAC_LG                                        00184700
&ZMAC_LG          SETC  'L'                                             00184800
                  LCLC  &ZMAC_STG                                       00184900
&ZMAC_STG         SETC  'ST'                                            00185000
                  LCLA  &ZMACRET    MACRO RETURN CODE                   00185100
&ZMACRET          SETA  0           ASSUME NO ERRORS                    00185200
.*                                                                      00185300
                  LCLC  &ZCSYSLIST(255)         NONXKEY, POS ARRAY      00185400
                  LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()          00185500
                  LCLA  &ZPLLEN     PARAMETER LIST LENGTH               00185600
                  LCLC  &ZENDBASEPL             End of base PL          00185700
                  LCLA  &ZPLWORKA   PARAMETER LIST LENGTH               00185800
.*******************************************************************    00185900
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00186000
.*******************************************************************    00186100
                  LCLA  &ZI         INDEX FOR ARRAY                     00186200
                  LCLA  &ZJ         INDEX FOR PARMS                     00186300
                  LCLA  &ZK         INDEX FOR PARSE                     00186400
                  LCLA  &ZLO        LOW RANGE VALUE                     00186500
                  LCLA  &ZHI        HIGH RANGE VALUE                    00186600
                  LCLC  &ZW         WORK AREA FOR PARM                  00186700
.********************************************************************   00186800
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00186900
.********************************************************************   00187000
                  GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL             00187100
                  GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE      00187200
                  GBLA  &SYSALVL    SYSSTATE ARCHLVL                    00187300
                  GBLC  &SYSAM64    SYSSTATE AMODE64                    00187400
.*                                                                      00187500
                  AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED      00187600
                  AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED       00187700
                  SPLEVEL  TEST                                         00187800
.ZSYS2            ANOP  ,                                               00187900
                  AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1           00188000
                  AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1           00188100
                  SYSSTATE TEST                                         00188200
                  AGO   .ZSYS4                                          00188300
.ZSYS3            ANOP  ,                                               00188400
&SYSASCE          SETC  'P'         ASSUME SYSSTATE PRIMARY             00188500
.ZSYS4            ANOP  ,                                               00188600
                  AIF   ('&SYSAM64' NE 'YES').ZSYSN64                   00188700
&ZMAC_LLGT        SETC 'LLGT'                                           00188800
&ZMAC_LGR         SETC 'LGR'                                            00188900
&ZMAC_LG          SETC 'LG'                                             00189000
&ZMAC_STG         SETC 'STG'                                            00189100
.ZSYSN64          ANOP  ,                                               00189200
.*******************************************************************    00189300
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00189400
.*******************************************************************    00189500
                  LCLC  &XANSAREA   ++ NAME                             00189600
                  LCLC  &XANSLEN    ++ NAME                             00189700
                  LCLC  &XRESTOKEN  ++ NAME                             00189800
                  LCLC  &XABDPLPTR  ++ NAME                             00189900
                  LCLC  &XTYPE      ++ VALUE                            00190000
                  LCLC  &XSTRLEVEL  ++ VALUE                            00190100
                  LCLC  &XSTRNAME   ++ NAME                             00190200
                  LCLC  &XSTRDUMPID             ++ NAME                 00190300
                  LCLC  &XCLASSTYPE             ++ VALUE                00190400
                  LCLC  &XCLASSLEVEL            ++ VALUE                00190500
                  LCLC  &XSTARTVAL  ++ NAME                             00190600
                  LCLC  &XENDVAL    ++ NAME                             00190700
                  LCLC  &XCLASSVAL  ++ NAME                             00190800
                  LCLC  &XSTARTPOS  ++ NAME                             00190900
                  LCLC  &XENDPOS    ++ NAME                             00191000
                  LCLC  &XORDER     ++ VALUE                            00191100
                  LCLC  &XADJUNCT   ++ VALUE                            00191200
                  LCLC  &XENTRYDATA             ++ VALUE                00191300
                  LCLC  &XLISTNUMLEVEL          ++ VALUE                00191400
                  LCLC  &XLISTNUMVAL            ++ NAME                 00191500
                  LCLC  &XENTRYKEY  ++ NAME                             00191600
                  LCLC  &XDUMMY1    ++ NAME                             00191700
                  LCLC  &XENTRYNAME             ++ NAME                 00191800
                  LCLC  &XENTRYID   ++ NAME                             00191900
                  LCLC  &XEMCLEVEL  ++ VALUE                            00192000
                  LCLC  &XEQLEVEL   ++ VALUE                            00192100
                  LCLC  &XCONIDVAL  ++ NAME                             00192200
                  LCLC  &XRETCODE   ++ NAME                             00192300
                  LCLC  &XRSNCODE   ++ NAME                             00192400
                  LCLA  &XPLISTVER  ++ VALUE                            00192500
                  LCLC  &XMF        ++ VALUE                            00192600
                  LCLC  &XMFCTRL    ++ NAME                             00192700
                  LCLC  &XMFATTR    ++ VALUE                            00192800
                  LCLC  &XMFSCK     ++ VALUE                            00192900
.*******************************************************************    00193000
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00193100
.*******************************************************************    00193200
                  LCLC  &ZXANSAREA  ++ INPUT NAME                       00193300
                  LCLC  &ZXANSLEN   ++ INPUT NAME                       00193400
                  LCLC  &ZXRESTOKEN             ++ INOUT NAME           00193500
                  LCLC  &ZXABDPLPTR             ++ INPUT NAME           00193600
                  LCLC  &ZXTYPE     ++ INPUT VALUE                      00193700
                  LCLC  &ZXSTRLEVEL             ++ INPUT VALUE          00193800
                  LCLC  &ZXSTRNAME  ++ INPUT NAME                       00193900
                  LCLC  &ZXSTRDUMPID            ++ INPUT NAME           00194000
                  LCLC  &ZXCLASSTYPE            ++ INPUT VALUE          00194100
                  LCLC  &ZXCLASSLEVEL           ++ INPUT VALUE          00194200
                  LCLC  &ZXSTARTVAL             ++ INPUT NAME           00194300
                  LCLC  &ZXENDVAL   ++ INPUT NAME                       00194400
                  LCLC  &ZXCLASSVAL             ++ INPUT NAME           00194500
                  LCLC  &ZXSTARTPOS             ++ INPUT NAME           00194600
                  LCLC  &ZXENDPOS   ++ INPUT NAME                       00194700
                  LCLC  &ZXORDER    ++ INPUT VALUE                      00194800
                  LCLC  &ZXADJUNCT  ++ INPUT VALUE                      00194900
                  LCLC  &ZXENTRYDATA            ++ INPUT VALUE          00195000
                  LCLC  &ZXLISTNUMLEVEL         ++ INPUT VALUE          00195100
                  LCLC  &ZXLISTNUMVAL           ++ INPUT NAME           00195200
                  LCLC  &ZXENTRYKEY             ++ INPUT NAME           00195300
                  LCLC  &ZXDUMMY1   ++ INPUT NAME                       00195400
                  LCLC  &ZXENTRYNAME            ++ INPUT NAME           00195500
                  LCLC  &ZXENTRYID  ++ INPUT NAME                       00195600
                  LCLC  &ZXEMCLEVEL             ++ INPUT VALUE          00195700
                  LCLC  &ZXEQLEVEL  ++ INPUT VALUE                      00195800
                  LCLC  &ZXCONIDVAL             ++ INPUT NAME           00195900
                  LCLC  &ZXRETCODE  ++ OUTPUT NAME                      00196000
                  LCLC  &ZXRSNCODE  ++ OUTPUT NAME                      00196100
                  LCLC  &ZXPLISTVER             ++ INPUT VALUE          00196200
                  LCLC  &ZXMF       ++ INPUT VALUE                      00196300
                  LCLC  &ZXMFCTRL   ++ INPUT NAME                       00196400
                  LCLC  &ZXMFATTR   ++ INPUT VALUE                      00196500
                  LCLC  &ZXMFSCK    ++ INPUT VALUE                      00196600
.********************************************************************   00196700
.***AC.PLV01  PROCESS PLISTVER                                      *   00196800
.********************************************************************   00196900
&XPLISTVER      SETA  1                                                 00197000
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00197100
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00197200
&XPLISTVER      SETA  1                                                 00197300
.ZPLV0          ANOP  ,                                                 00197400
.*                                                                      00197500
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00197600
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00197700
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00197800
.*-------------------------------------------------------------------   00197900
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00198000
&ZMS            SETC  '"PLISTVER='                                      00198100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00198200
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00198300
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00198400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00198500
                AGO   .ZPVCK2                                           00198600
.ZPVCK3         ANOP  ,                                                 00198700
.*-------------------------------------------------------------------   00198800
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00198900
&ZMS            SETC  '"PLISTVER='                                      00199000
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00199100
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00199200
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00199300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00199400
                AGO   .ZPVCKE                                           00199500
.ZPVCK2         ANOP  ,                                                 00199600
.*-------------------------------------------------------------------   00199700
&ZCVAL          SETC  '&PLISTVER(1)'                                    00199800
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00199900
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00200000
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00200100
                AIF   (&ZN LT 1).ZPVCK6    TOO LOW                      00200200
                AIF   (&ZN LE 1).ZPVCK4A   NOT HIGH                     00200300
.ZPVCK6         ANOP  ,                                                 00200400
&ZMS            SETC  '"PLISTVER='                                      00200500
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00200600
&ZMS            SETC  '&ZMS THE RANGE IS "1-1"'                         00200700
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00200800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00200900
&XPLISTVER      SETA  1                                                 00201000
                AGO   .ZPVCKE                                           00201100
.*-------------------------------------------------------------------   00201200
.ZPVCK4A        ANOP  ,                                                 00201300
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00201400
&ZMS            SETC  'PLISTVER='                                       00201500
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00201600
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00201700
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00201800
                MNOTE 8,' &ZMS IS REQUIRED.'                            00201900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00202000
                AGO   .ZPVCK5                                           00202100
.ZPVCK4         ANOP  ,                                                 00202200
&XPLISTVER      SETA  &PLISTVER(1)                                      00202300
.ZPVCK5         ANOP  ,                                                 00202400
.ZPVCKE         ANOP  ,                                                 00202500
.********************************************************************   00202600
.***AG.MF01 PROCESS MF MACRO FORMS                                      00202700
.********************************************************************   00202800
                  ACTR  10000                                           00202900
.*------------------------------------------------------------------    00203000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00203100
&XMF              SETC  ''          INITIALIZE XVARIABLE                00203200
.*-------------------------------------------------------------------   00203300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00203400
.ZG237            ANOP  ,                                               00203500
&ZTLC             SETC 'S'                                              00203600
                  AIF   ('&MF(1)' NE '&ZTLC').ZG238                     00203700
&XMF              SETC  'S'         SET KEYWORD                         00203800
                  AIF   (N'&MF LE 1).ZG237A     CK NUM                  00203900
&ZMS              SETC  '"MF='                                          00204000
&ZMS              SETC  '&ZMS.&MF"'                                     00204100
&ZMS              SETC  '&ZMS "MF"'                                     00204200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00204300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00204400
.ZG237A           ANOP  ,                                               00204500
.*-------------------------------------------------------------------   00204600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00204700
.ZG238            ANOP  ,                                               00204800
&ZTLC             SETC 'L'                                              00204900
                  AIF   ('&MF(1)' NE '&ZTLC').ZG245                     00205000
&XMF              SETC  'L'         SET KEYWORD                         00205100
                  AIF   (N'&MF LE 3).ZG238A     CK NUM                  00205200
&ZMS              SETC  '"MF='                                          00205300
&ZMS              SETC  '&ZMS.&MF"'                                     00205400
&ZMS              SETC  '&ZMS "MF"'                                     00205500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'            00205600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00205700
.ZG238A           ANOP  ,                                               00205800
.*-------------------------------------------------------------------   00205900
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00206000
                  AIF   (N'&SYSLIST NE 0).ZG238B  POSITIONALS?          00206100
                  AIF   ('&ANSAREA' NE '').ZG238B  KEYS?                00206200
                  AIF   ('&ANSLEN' NE '').ZG238B  KEYS?                 00206300
                  AIF   ('&RESTOKEN' NE '').ZG238B  KEYS?               00206400
                  AIF   ('&ABDPLPTR' NE '').ZG238B  KEYS?               00206500
                  AIF   ('&TYPE' NE '').ZG238B  KEYS?                   00206600
                  AIF   ('&STRLEVEL' NE '').ZG238B  KEYS?               00206700
                  AIF   ('&STRNAME' NE '').ZG238B  KEYS?                00206800
                  AIF   ('&STRDUMPID' NE '').ZG238B  KEYS?              00206900
                  AIF   ('&CLASSTYPE' NE '').ZG238B  KEYS?              00207000
                  AIF   ('&CLASSLEVEL' NE '').ZG238B  KEYS?             00207100
                  AIF   ('&STARTVAL' NE '').ZG238B  KEYS?               00207200
                  AIF   ('&ENDVAL' NE '').ZG238B  KEYS?                 00207300
                  AIF   ('&CLASSVAL' NE '').ZG238B  KEYS?               00207400
                  AIF   ('&STARTPOS' NE '').ZG238B  KEYS?               00207500
                  AIF   ('&ENDPOS' NE '').ZG238B  KEYS?                 00207600
                  AIF   ('&ORDER' NE '').ZG238B  KEYS?                  00207700
                  AIF   ('&ADJUNCT' NE '').ZG238B  KEYS?                00207800
                  AIF   ('&ENTRYDATA' NE '').ZG238B  KEYS?              00207900
                  AIF   ('&LISTNUMLEVEL' NE '').ZG238B  KEYS?           00208000
                  AIF   ('&LISTNUMVAL' NE '').ZG238B  KEYS?             00208100
                  AIF   ('&ENTRYKEY' NE '').ZG238B  KEYS?               00208200
                  AIF   ('&ENTRYNAME' NE '').ZG238B  KEYS?              00208300
                  AIF   ('&ENTRYID' NE '').ZG238B  KEYS?                00208400
                  AIF   ('&EMCLEVEL' NE '').ZG238B  KEYS?               00208500
                  AIF   ('&EQLEVEL' NE '').ZG238B  KEYS?                00208600
                  AIF   ('&CONIDVAL' NE '').ZG238B  KEYS?               00208700
                  AIF   ('&RETCODE' NE '').ZG238B  KEYS?                00208800
                  AIF   ('&RSNCODE' NE '').ZG238B  KEYS?                00208900
                  AGO    .ZG238C    INVOCATION OKAY                     00209000
.ZG238B           ANOP  ,                                               00209100
&ZMS              SETC  'THE "L" FORM OF "MF"'                          00209200
&ZMS              SETC  '&ZMS CAN ONLY HAVE'                            00209300
&ZMS              SETC  '&ZMS THE "PLISTVER" KEY'                       00209400
                  MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'          00209500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00209600
.ZG238C           ANOP  ,                                               00209700
.*-------------------------------------------------------------------   00209800
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00209900
&ZXMFCTRL         SETC  'INPUT'     SET IN/OUTPUT                       00210000
&XMFCTRL          SETC  '&MF(2,1)'  SET XVARIABLE                       00210100
                  AIF   (N'&MF(2) GT 1).ZG240B  MULTI                   00210200
&XMFCTRL          SETC  '&MF(2)'    SET XVARIABLE                       00210300
.ZG240B           AIF   (K'&MF(2) GT 0).ZG240C                          00210400
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00210500
&ZMS              SETC  'WHEN "L" IS SPECIFIED'                         00210600
&ZMS              SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'             00210700
                  MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                    00210800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00210900
.ZG240C           ANOP  ,                                               00211000
.*-------------------------------------------------------------------   00211100
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00211200
                  AIF   (K'&ZXMFCTRL LE 0).ZG240P  NOT I/O              00211300
                  AIF   ('&XMFCTRL'(1,1) NE '(').ZG240P                 00211400
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00211500
&ZMS              SETC  '"MF='                                          00211600
&ZMS              SETC  '&ZMS.&MF"'                                     00211700
&ZMS              SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'       00211800
                  MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'               00211900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00212000
.ZG240P           ANOP  ,                                               00212100
.*-------------------------------------------------------------------   00212200
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00212300
&ZXMFATTR         SETC  'INPUT'     SET IN/OUTPUT                       00212400
&XMFATTR          SETC  '0D'                                            00212500
                  AIF   (K'&MF(3) LE 0).ZG243B  PARM                    00212600
&XMFATTR          SETC  '&MF(3,1)'  SET XVARIABLE                       00212700
                  AIF   (N'&MF(3) GT 1).ZG243B  MULTI                   00212800
&XMFATTR          SETC  '&MF(3)'    SET XVARIABLE                       00212900
.ZG243B           ANOP  ,                                               00213000
.*-------------------------------------------------------------------   00213100
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00213200
                  AIF   (K'&ZXMFATTR LE 0).ZG243P  NOT I/O              00213300
                  AIF   ('&XMFATTR'(1,1) NE '(').ZG243P                 00213400
&ZXMFATTR         SETC  ''          RESET IN/OUTPUT                     00213500
&ZMS              SETC  '"MF='                                          00213600
&ZMS              SETC  '&ZMS.&MF"'                                     00213700
&ZMS              SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'       00213800
                  MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'               00213900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00214000
.ZG243P           ANOP  ,                                               00214100
.*-------------------------------------------------------------------   00214200
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00214300
                  AIF   (K'&ZXMFATTR LE 0).ZG243S  NOT I/O              00214400
                  AIF   (K'&XMFATTR LE 60).ZG243S  LNG OK               00214500
&ZXMFATTR         SETC  ''          RESET IN/OUTPUT                     00214600
&ZMS              SETC  '"MF='                                          00214700
&ZMS              SETC  '&ZMS.&MF"'                                     00214800
&ZMS              SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'           00214900
                  MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'              00215000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00215100
.ZG243S           ANOP  ,                                               00215200
.*-------------------------------------------------------------------   00215300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00215400
.ZG245            ANOP  ,                                               00215500
&ZTLC             SETC 'E'                                              00215600
                  AIF   ('&MF(1)' NE '&ZTLC').ZG253                     00215700
&XMF              SETC  'E'         SET KEYWORD                         00215800
                  AIF   (N'&MF LE 3).ZG245A     CK NUM                  00215900
&ZMS              SETC  '"MF='                                          00216000
&ZMS              SETC  '&ZMS.&MF"'                                     00216100
&ZMS              SETC  '&ZMS "MF"'                                     00216200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'            00216300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00216400
.ZG245A           ANOP  ,                                               00216500
.*-------------------------------------------------------------------   00216600
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00216700
&ZXMFCTRL         SETC  'INPUT'     SET IN/OUTPUT                       00216800
&XMFCTRL          SETC  '&MF(2,1)'  SET XVARIABLE                       00216900
                  AIF   (N'&MF(2) GT 1).ZG247B  MULTI                   00217000
&XMFCTRL          SETC  '&MF(2)'    SET XVARIABLE                       00217100
.ZG247B           AIF   (K'&MF(2) GT 0).ZG247C                          00217200
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00217300
&ZMS              SETC  'WHEN "E" IS SPECIFIED'                         00217400
&ZMS              SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'             00217500
                  MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                    00217600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00217700
.ZG247C           ANOP  ,                                               00217800
.*-------------------------------------------------------------------   00217900
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00218000
                  AIF   (K'&ZXMFCTRL LE 0).ZG247R  NOT I/O              00218100
                  AIF   ('&XMFCTRL'(1,1) NE '(').ZG247R                 00218200
&ZCGPR            SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                      00218300
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG247P                   00218400
                  AIF   (K'&ZCGPR GT 2).ZG247Q                          00218500
                  AIF   ('&ZCGPR' EQ '0').ZG247Q                        00218600
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00218700
                  AIF   (T'&ZCGPR NE 'N').ZG247Q  INVALID REG NAME      00218800
.ZG247P           ANOP  ,                                               00218900
                  AIF   (T'&ZCGPR NE 'N').ZG247R  NON NUMERIC           00219000
                  AIF   ('&ZCGPR' LT '1').ZG247Q                        00219100
                  AIF   ('&ZCGPR' LE '12').ZG247R                       00219200
.ZG247Q           ANOP  ,                                               00219300
&ZMS              SETC  '"MF='                                          00219400
&ZMS              SETC  '&ZMS.&MF"'                                     00219500
&ZMS              SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'       00219600
                  MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                00219700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00219800
.ZG247R           ANOP  ,                                               00219900
.*-------------------------------------------------------------------   00220000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00220100
&XMFSCK           SETC  ''          INITIALIZE XVARIABLE                00220200
.ZG251A   AIF   ('&MF(3)' NE 'COMPLETE').ZG252A                         00220300
&XMFSCK           SETC  'COMPLETE'  SET KEYWORD                         00220400
.*-------------------------------------------------------------------   00220500
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00220600
.ZG252A           AIF   (K'&XMFSCK GT 0).ZG252C  KEYWORD                00220700
                  AIF   (K'&MF(3) LE 0).ZG252B                          00220800
&ZMS              SETC  '"MF='                                          00220900
&ZMS              SETC  '&ZMS.&MF"'                                     00221000
&ZMS              SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '       00221100
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00221200
&ZMS              SETC  '&ZMS "COMPLETE".'                              00221300
                  MNOTE 8,' &ZMS '                                      00221400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00221500
.ZG252B           ANOP  ,                                               00221600
&XMFSCK           SETC  'COMPLETE'  SET DEFAULT KEYWORD                 00221700
.ZG252C           ANOP  ,                                               00221800
&ZXMFSCK          SETC  'INPUT'     SET IN/OUTPUT                       00221900
.*------------------------------------------------------------------    00222000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00222100
.ZG253            ANOP  ,                                               00222200
&ZXMF             SETC  'INPUT'     SET IN/OUTPUT                       00222300
                  AIF   (K'&XMF GT 0).ZG253E    VALID ARG               00222400
                  AIF   (T'&MF EQ 'O').ZG253D   OMITTED                 00222500
&ZASYSLNDX        SETA  0                                               00222600
.ZG253A           ANOP  ,           POSITIONAL MACRO KEY                00222700
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00222800
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG253C               00222900
&ZTLC             SETC 'MF'                                             00223000
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG253A      00223100
.ZG253B           ANOP  ,                                               00223200
&ZXMF             SETC  ''          RESET IN/OUTPUT                     00223300
&ZMS              SETC  'THE "MF" KEY'                                  00223400
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00223500
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00223600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00223700
                  AGO   .ZG253E                                         00223800
.ZG253C           ANOP  ,                                               00223900
&ZXMF             SETC  ''          RESET IN/OUTPUT                     00224000
&ZMS              SETC  '"MF='                                          00224100
&ZMS              SETC  '&ZMS.&MF"'                                     00224200
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00224300
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00224400
&ZMS              SETC  '&ZMS "S",'                                     00224500
&ZMS              SETC  '&ZMS "L",'                                     00224600
&ZMS              SETC  '&ZMS OR "E".'                                  00224700
                  MNOTE 8,' &ZMS '                                      00224800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00224900
                  AGO   .ZG253E                                         00225000
.ZG253D           ANOP  ,                                               00225100
&XMF              SETC  'S'         SET DEFAULT KEYWORD                 00225200
&XMFSCK           SETC  'COMPLETE'  COMPLETE CHECKING                   00225300
.ZG253E           ANOP  ,                                               00225400
.********************************************************************   00225500
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00225600
.********************************************************************   00225700
                  ACTR  10000                                           00225800
.*-------------------------------------------------------------------   00225900
.***AG.MF03 MF=(SLE)                                                    00226000
                  AIF   ('&XMF' EQ 'L').ZGMFX                           00226100
.*----------------------------------------------------------------***   00226200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00226300
                  AIF   (N'&ANSAREA LE 1).ZG2A  CK NUM                  00226400
&ZMS              SETC  '"ANSAREA='                                     00226500
&ZMS              SETC  '&ZMS.&ANSAREA"'                                00226600
&ZMS              SETC  '&ZMS "ANSAREA"'                                00226700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00226800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00226900
.ZG2A             ANOP  ,                                               00227000
.*-------------------------------------------------------------------   00227100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00227200
&ZXANSAREA        SETC  'INPUT'     SET IN/OUTPUT                       00227300
&XANSAREA         SETC  '&ANSAREA(1)'           SET XVARIABLE           00227400
                  AIF   (N'&ANSAREA GT 1).ZG2B  MULTI                   00227500
&XANSAREA         SETC  '&ANSAREA'  SET XVARIABLE                       00227600
.ZG2B             AIF   (K'&ANSAREA(1) GT 0).ZG2C                       00227700
&ZXANSAREA        SETC  ''          RESET IN/OUTPUT                     00227800
&ZMS              SETC  ' '                                             00227900
&ZMS              SETC  '&ZMS "ANSAREA" KEY AND ITS'                    00228000
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00228100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00228200
.ZG2C             ANOP  ,                                               00228300
.*-------------------------------------------------------------------   00228400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00228500
                  AIF   (K'&ZXANSAREA LE 0).ZG2R  NOT I/O               00228600
                  AIF   ('&XANSAREA'(1,1) NE '(').ZG2R                  00228700
&ZCGPR            SETC  '&XANSAREA'(2,K'&XANSAREA-2)                    00228800
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                     00228900
                  AIF   (K'&ZCGPR GT 2).ZG2Q                            00229000
                  AIF   ('&ZCGPR' EQ '0').ZG2Q                          00229100
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00229200
                  AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME        00229300
.ZG2P             ANOP  ,                                               00229400
                  AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC             00229500
                  AIF   ('&ZCGPR' LT '2').ZG2Q                          00229600
                  AIF   ('&ZCGPR' LE '12').ZG2R                         00229700
.ZG2Q             ANOP  ,                                               00229800
&ZMS              SETC  '"ANSAREA='                                     00229900
&ZMS              SETC  '&ZMS.&ANSAREA"'                                00230000
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00230100
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00230200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00230300
.ZG2R             ANOP  ,                                               00230400
.*----------------------------------------------------------------***   00230500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00230600
                  AIF   (N'&ANSLEN LE 1).ZG5A   CK NUM                  00230700
&ZMS              SETC  '"ANSLEN='                                      00230800
&ZMS              SETC  '&ZMS.&ANSLEN"'                                 00230900
&ZMS              SETC  '&ZMS "ANSLEN"'                                 00231000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00231100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00231200
.ZG5A             ANOP  ,                                               00231300
.*-------------------------------------------------------------------   00231400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00231500
&ZXANSLEN         SETC  'INPUT'     SET IN/OUTPUT                       00231600
&XANSLEN          SETC  '&ANSLEN(1)'            SET XVARIABLE           00231700
                  AIF   (N'&ANSLEN GT 1).ZG5B   MULTI                   00231800
&XANSLEN          SETC  '&ANSLEN'   SET XVARIABLE                       00231900
.ZG5B             AIF   (K'&ANSLEN(1) GT 0).ZG5C                        00232000
&ZXANSLEN         SETC  ''          RESET IN/OUTPUT                     00232100
&ZMS              SETC  ' '                                             00232200
&ZMS              SETC  '&ZMS "ANSLEN" KEY AND ITS'                     00232300
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00232400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00232500
.ZG5C             ANOP  ,                                               00232600
.*-------------------------------------------------------------------   00232700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00232800
                  AIF   (K'&ZXANSLEN LE 0).ZG5R  NOT I/O                00232900
                  AIF   ('&XANSLEN'(1,1) NE '(').ZG5R                   00233000
&ZCGPR            SETC  '&XANSLEN'(2,K'&XANSLEN-2)                      00233100
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                     00233200
                  AIF   (K'&ZCGPR GT 2).ZG5Q                            00233300
                  AIF   ('&ZCGPR' EQ '0').ZG5Q                          00233400
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00233500
                  AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME        00233600
.ZG5P             ANOP  ,                                               00233700
                  AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC             00233800
                  AIF   ('&ZCGPR' LT '2').ZG5Q                          00233900
                  AIF   ('&ZCGPR' LE '12').ZG5R                         00234000
.ZG5Q             ANOP  ,                                               00234100
&ZMS              SETC  '"ANSLEN='                                      00234200
&ZMS              SETC  '&ZMS.&ANSLEN"'                                 00234300
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00234400
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00234500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00234600
.ZG5R             ANOP  ,                                               00234700
.*----------------------------------------------------------------***   00234800
.***AG.KXVAR05 NAME, RQD INOUT, KEYS -XVARIABLE KEY                     00234900
                  AIF   (N'&RESTOKEN LE 1).ZG8A  CK NUM                 00235000
&ZMS              SETC  '"RESTOKEN='                                    00235100
&ZMS              SETC  '&ZMS.&RESTOKEN"'                               00235200
&ZMS              SETC  '&ZMS "RESTOKEN"'                               00235300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00235400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00235500
.ZG8A             ANOP  ,                                               00235600
.*-------------------------------------------------------------------   00235700
.***AG.KXVAR06 NAME, RQD INOUT, KEYS -XVARIABLE                         00235800
&ZXRESTOKEN       SETC  'INOUT'     SET IN/OUTPUT                       00235900
&XRESTOKEN        SETC  '&RESTOKEN(1)'          SET XVARIABLE           00236000
                  AIF   (N'&RESTOKEN GT 1).ZG8B  MULTI                  00236100
&XRESTOKEN        SETC  '&RESTOKEN'             SET XVARIABLE           00236200
.ZG8B             AIF   (K'&RESTOKEN(1) GT 0).ZG8C                      00236300
&ZXRESTOKEN       SETC  ''          RESET IN/OUTPUT                     00236400
&ZMS              SETC  ' '                                             00236500
&ZMS              SETC  '&ZMS "RESTOKEN" KEY AND ITS'                   00236600
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00236700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00236800
.ZG8C             ANOP  ,                                               00236900
.*-------------------------------------------------------------------   00237000
.***AG.KCK02 NAME, RQD INOUT, KEYS -GPR OUT OF RANGE                    00237100
                  AIF   (K'&ZXRESTOKEN LE 0).ZG8R  NOT I/O              00237200
                  AIF   ('&XRESTOKEN'(1,1) NE '(').ZG8R                 00237300
&ZCGPR            SETC  '&XRESTOKEN'(2,K'&XRESTOKEN-2)                  00237400
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                     00237500
                  AIF   (K'&ZCGPR GT 2).ZG8Q                            00237600
                  AIF   ('&ZCGPR' EQ '0').ZG8Q                          00237700
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00237800
                  AIF   (T'&ZCGPR NE 'N').ZG8Q  INVALID REG NAME        00237900
.ZG8P             ANOP  ,                                               00238000
                  AIF   (T'&ZCGPR NE 'N').ZG8R  NON NUMERIC             00238100
                  AIF   ('&ZCGPR' LT '2').ZG8Q                          00238200
                  AIF   ('&ZCGPR' LE '12').ZG8R                         00238300
.ZG8Q             ANOP  ,                                               00238400
&ZMS              SETC  '"RESTOKEN='                                    00238500
&ZMS              SETC  '&ZMS.&RESTOKEN"'                               00238600
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00238700
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00238800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00238900
.ZG8R             ANOP  ,                                               00239000
.*----------------------------------------------------------------***   00239100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00239200
                  AIF   (N'&ABDPLPTR LE 1).ZG11A  CK NUM                00239300
&ZMS              SETC  '"ABDPLPTR='                                    00239400
&ZMS              SETC  '&ZMS.&ABDPLPTR"'                               00239500
&ZMS              SETC  '&ZMS "ABDPLPTR"'                               00239600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00239700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00239800
.ZG11A            ANOP  ,                                               00239900
.*-------------------------------------------------------------------   00240000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00240100
&ZXABDPLPTR       SETC  'INPUT'     SET IN/OUTPUT                       00240200
&XABDPLPTR        SETC  '&ABDPLPTR(1)'          SET XVARIABLE           00240300
                  AIF   (N'&ABDPLPTR GT 1).ZG11B  MULTI                 00240400
&XABDPLPTR        SETC  '&ABDPLPTR'             SET XVARIABLE           00240500
.ZG11B            AIF   (K'&ABDPLPTR(1) GT 0).ZG11C                     00240600
&ZXABDPLPTR       SETC  ''          RESET IN/OUTPUT                     00240700
&ZMS              SETC  ' '                                             00240800
&ZMS              SETC  '&ZMS "ABDPLPTR" KEY AND ITS'                   00240900
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00241000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00241100
.ZG11C            ANOP  ,                                               00241200
.*-------------------------------------------------------------------   00241300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00241400
                  AIF   (K'&ZXABDPLPTR LE 0).ZG11R  NOT I/O             00241500
                  AIF   ('&XABDPLPTR'(1,1) NE '(').ZG11R                00241600
&ZCGPR            SETC  '&XABDPLPTR'(2,K'&XABDPLPTR-2)                  00241700
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                    00241800
                  AIF   (K'&ZCGPR GT 2).ZG11Q                           00241900
                  AIF   ('&ZCGPR' EQ '0').ZG11Q                         00242000
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00242100
                  AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME       00242200
.ZG11P            ANOP  ,                                               00242300
                  AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC            00242400
                  AIF   ('&ZCGPR' LT '2').ZG11Q                         00242500
                  AIF   ('&ZCGPR' LE '12').ZG11R                        00242600
.ZG11Q            ANOP  ,                                               00242700
&ZMS              SETC  '"ABDPLPTR='                                    00242800
&ZMS              SETC  '&ZMS.&ABDPLPTR"'                               00242900
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00243000
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00243100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00243200
.ZG11R            ANOP  ,                                               00243300
.*------------------------------------------------------------------    00243400
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00243500
&XTYPE            SETC  ''          INITIALIZE XVARIABLE                00243600
.*-------------------------------------------------------------------   00243700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00243800
.ZG15             ANOP  ,                                               00243900
                  AIF   (K'&TYPE(1) LE 0).ZG15A                         00244000
&ZTLC             SETC 'STRUCTURE'                                      00244100
                  AIF   ('&TYPE(1)' NE '&ZTLC').ZG27                    00244200
&XTYPE            SETC  'STRUCTURE'             SET KEYWORD             00244300
                  AIF   (N'&TYPE LE 1).ZG15A    CK NUM                  00244400
&ZMS              SETC  '"TYPE='                                        00244500
&ZMS              SETC  '&ZMS.&TYPE"'                                   00244600
&ZMS              SETC  '&ZMS "TYPE"'                                   00244700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00244800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00244900
.ZG15A            ANOP  ,                                               00245000
.*------------------------------------------------------------------    00245100
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00245200
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00245300
.ZG15A0           AIF   (K'&CLASSTYPE LE 0).ZG15A1  OK                  00245400
&ZCVAL            SETC '&ZCVAL CLASSTYPE'       INCORRECT KEY USED      00245500
.ZG15A1           AIF   (K'&CLASSLEVEL LE 0).ZG15A2  OK                 00245600
&ZCVAL            SETC '&ZCVAL CLASSLEVEL'      INCORRECT KEY USED      00245700
.ZG15A2           AIF   (K'&STARTVAL LE 0).ZG15A3  OK                   00245800
&ZCVAL            SETC '&ZCVAL STARTVAL'        INCORRECT KEY USED      00245900
.ZG15A3           AIF   (K'&ENDVAL LE 0).ZG15A4  OK                     00246000
&ZCVAL            SETC '&ZCVAL ENDVAL'          INCORRECT KEY USED      00246100
.ZG15A4           AIF   (K'&CLASSVAL LE 0).ZG15A5  OK                   00246200
&ZCVAL            SETC '&ZCVAL CLASSVAL'        INCORRECT KEY USED      00246300
.ZG15A5           AIF   (K'&STARTPOS LE 0).ZG15A6  OK                   00246400
&ZCVAL            SETC '&ZCVAL STARTPOS'        INCORRECT KEY USED      00246500
.ZG15A6           AIF   (K'&ENDPOS LE 0).ZG15A7  OK                     00246600
&ZCVAL            SETC '&ZCVAL ENDPOS'          INCORRECT KEY USED      00246700
.ZG15A7           AIF   (K'&ORDER LE 0).ZG15A8  OK                      00246800
&ZCVAL            SETC '&ZCVAL ORDER'           INCORRECT KEY USED      00246900
.ZG15A8           AIF   (K'&ADJUNCT LE 0).ZG15A9  OK                    00247000
&ZCVAL            SETC '&ZCVAL ADJUNCT'         INCORRECT KEY USED      00247100
.ZG15A9           AIF   (K'&ENTRYDATA LE 0).ZG15A10  OK                 00247200
&ZCVAL            SETC '&ZCVAL ENTRYDATA'       INCORRECT KEY USED      00247300
.ZG15A10          AIF   (K'&LISTNUMLEVEL LE 0).ZG15A11  OK              00247400
&ZCVAL            SETC '&ZCVAL LISTNUMLEVEL'    INCORRECT KEY USED      00247500
.ZG15A11          AIF   (K'&LISTNUMVAL LE 0).ZG15A12  OK                00247600
&ZCVAL            SETC '&ZCVAL LISTNUMVAL'      INCORRECT KEY USED      00247700
.ZG15A12          AIF   (K'&ENTRYKEY LE 0).ZG15A13  OK                  00247800
&ZCVAL            SETC '&ZCVAL ENTRYKEY'        INCORRECT KEY USED      00247900
.ZG15A13          AIF   (K'&ENTRYNAME LE 0).ZG15A14  OK                 00248000
&ZCVAL            SETC '&ZCVAL ENTRYNAME'       INCORRECT KEY USED      00248100
.ZG15A14          AIF   (K'&ENTRYID LE 0).ZG15A15  OK                   00248200
&ZCVAL            SETC '&ZCVAL ENTRYID'         INCORRECT KEY USED      00248300
.ZG15A15          AIF   (K'&EMCLEVEL LE 0).ZG15A16  OK                  00248400
&ZCVAL            SETC '&ZCVAL EMCLEVEL'        INCORRECT KEY USED      00248500
.ZG15A16          AIF   (K'&EQLEVEL LE 0).ZG15A17  OK                   00248600
&ZCVAL            SETC '&ZCVAL EQLEVEL'         INCORRECT KEY USED      00248700
.ZG15A17          AIF   (K'&CONIDVAL LE 0).ZG15A18  OK                  00248800
&ZCVAL            SETC '&ZCVAL CONIDVAL'        INCORRECT KEY USED      00248900
.ZG15A18          AIF   (K'&ZCVAL LE 0).ZG15A19  OK                     00249000
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00249100
                  AIF  (K'&ZCVAL LE 160).ZG15A19A                       00249200
&ZCVAL            SETC '&ZCVAL'(1,160)                                  00249300
&ZCVAL            SETC '&ZCVAL....'                                     00249400
.ZG15A19A         ANOP                                                  00249500
&ZMS              SETC  '"TYPE'                                         00249600
&ZMS              SETC  '&ZMS.=&TYPE"'                                  00249700
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00249800
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00249900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00250000
.ZG15A19          ANOP  ,                                               00250100
.*------------------------------------------------------------------    00250200
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00250300
&XSTRLEVEL        SETC  ''          INITIALIZE XVARIABLE                00250400
.*-------------------------------------------------------------------   00250500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00250600
.ZG18             ANOP  ,                                               00250700
                  AIF   (K'&STRLEVEL(1) LE 0).ZG18A                     00250800
&ZTLC             SETC 'SUMMARY'                                        00250900
                  AIF   ('&STRLEVEL(1)' NE '&ZTLC').ZG19                00251000
&XSTRLEVEL        SETC  'SUMMARY'   SET KEYWORD                         00251100
                  AIF   (N'&STRLEVEL LE 1).ZG18A  CK NUM                00251200
&ZMS              SETC  '"STRLEVEL='                                    00251300
&ZMS              SETC  '&ZMS.&STRLEVEL"'                               00251400
&ZMS              SETC  '&ZMS "STRLEVEL"'                               00251500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00251600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00251700
.ZG18A            ANOP  ,                                               00251800
.*------------------------------------------------------------------    00251900
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00252000
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00252100
.ZG18A0           AIF   (K'&STRNAME LE 0).ZG18A1  OK                    00252200
&ZCVAL            SETC '&ZCVAL STRNAME'         INCORRECT KEY USED      00252300
.ZG18A1           AIF   (K'&STRDUMPID LE 0).ZG18A2  OK                  00252400
&ZCVAL            SETC '&ZCVAL STRDUMPID'       INCORRECT KEY USED      00252500
.ZG18A2           AIF   (K'&ZCVAL LE 0).ZG18A3  OK                      00252600
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00252700
&ZMS              SETC  '"STRLEVEL'                                     00252800
&ZMS              SETC  '&ZMS.=&STRLEVEL"'                              00252900
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00253000
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00253100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00253200
.ZG18A3           ANOP  ,                                               00253300
.*-------------------------------------------------------------------   00253400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00253500
.ZG19             ANOP  ,                                               00253600
&ZTLC             SETC 'DETAIL'                                         00253700
                  AIF   ('&STRLEVEL(1)' NE '&ZTLC').ZG26                00253800
&XSTRLEVEL        SETC  'DETAIL'    SET KEYWORD                         00253900
                  AIF   (N'&STRLEVEL LE 1).ZG19A  CK NUM                00254000
&ZMS              SETC  '"STRLEVEL='                                    00254100
&ZMS              SETC  '&ZMS.&STRLEVEL"'                               00254200
&ZMS              SETC  '&ZMS "STRLEVEL"'                               00254300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00254400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00254500
.ZG19A            ANOP  ,                                               00254600
.*----------------------------------------------------------------***   00254700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00254800
                  AIF   (N'&STRNAME LE 1).ZG21A  CK NUM                 00254900
&ZMS              SETC  '"STRNAME='                                     00255000
&ZMS              SETC  '&ZMS.&STRNAME"'                                00255100
&ZMS              SETC  '&ZMS "STRNAME"'                                00255200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00255300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00255400
.ZG21A            ANOP  ,                                               00255500
.*-------------------------------------------------------------------   00255600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00255700
&ZXSTRNAME        SETC  'INPUT'     SET IN/OUTPUT                       00255800
&XSTRNAME         SETC  '&STRNAME(1)'           SET XVARIABLE           00255900
                  AIF   (N'&STRNAME GT 1).ZG21B  MULTI                  00256000
&XSTRNAME         SETC  '&STRNAME'  SET XVARIABLE                       00256100
.ZG21B            AIF   (K'&STRNAME(1) GT 0).ZG21C                      00256200
&ZXSTRNAME        SETC  ''          RESET IN/OUTPUT                     00256300
&ZMS              SETC  ' '                                             00256400
&ZMS              SETC  '&ZMS "STRNAME" KEY AND ITS'                    00256500
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00256600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00256700
.ZG21C            ANOP  ,                                               00256800
.*-------------------------------------------------------------------   00256900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00257000
                  AIF   (K'&ZXSTRNAME LE 0).ZG21R  NOT I/O              00257100
                  AIF   ('&XSTRNAME'(1,1) NE '(').ZG21R                 00257200
&ZCGPR            SETC  '&XSTRNAME'(2,K'&XSTRNAME-2)                    00257300
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG21P                    00257400
                  AIF   (K'&ZCGPR GT 2).ZG21Q                           00257500
                  AIF   ('&ZCGPR' EQ '0').ZG21Q                         00257600
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00257700
                  AIF   (T'&ZCGPR NE 'N').ZG21Q  INVALID REG NAME       00257800
.ZG21P            ANOP  ,                                               00257900
                  AIF   (T'&ZCGPR NE 'N').ZG21R  NON NUMERIC            00258000
                  AIF   ('&ZCGPR' LT '2').ZG21Q                         00258100
                  AIF   ('&ZCGPR' LE '12').ZG21R                        00258200
.ZG21Q            ANOP  ,                                               00258300
&ZMS              SETC  '"STRNAME='                                     00258400
&ZMS              SETC  '&ZMS.&STRNAME"'                                00258500
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00258600
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00258700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00258800
.ZG21R            ANOP  ,                                               00258900
.*----------------------------------------------------------------***   00259000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00259100
                  AIF   (N'&STRDUMPID LE 1).ZG24A  CK NUM               00259200
&ZMS              SETC  '"STRDUMPID='                                   00259300
&ZMS              SETC  '&ZMS.&STRDUMPID"'                              00259400
&ZMS              SETC  '&ZMS "STRDUMPID"'                              00259500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00259600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00259700
.ZG24A            ANOP  ,                                               00259800
.*-------------------------------------------------------------------   00259900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00260000
&ZXSTRDUMPID      SETC  'INPUT'     SET IN/OUTPUT                       00260100
&XSTRDUMPID       SETC  '&STRDUMPID(1)'         SET XVARIABLE           00260200
                  AIF   (N'&STRDUMPID GT 1).ZG24B  MULTI                00260300
&XSTRDUMPID       SETC  '&STRDUMPID'            SET XVARIABLE           00260400
.ZG24B            AIF   (K'&STRDUMPID(1) GT 0).ZG24C                    00260500
&ZXSTRDUMPID      SETC  ''          RESET IN/OUTPUT                     00260600
&ZMS              SETC  ' '                                             00260700
&ZMS              SETC  '&ZMS "STRDUMPID" KEY AND ITS'                  00260800
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00260900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00261000
.ZG24C            ANOP  ,                                               00261100
.*-------------------------------------------------------------------   00261200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00261300
                  AIF   (K'&ZXSTRDUMPID LE 0).ZG24R  NOT I/O            00261400
                  AIF   ('&XSTRDUMPID'(1,1) NE '(').ZG24R               00261500
&ZCGPR            SETC  '&XSTRDUMPID'(2,K'&XSTRDUMPID-2)                00261600
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG24P                    00261700
                  AIF   (K'&ZCGPR GT 2).ZG24Q                           00261800
                  AIF   ('&ZCGPR' EQ '0').ZG24Q                         00261900
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00262000
                  AIF   (T'&ZCGPR NE 'N').ZG24Q  INVALID REG NAME       00262100
.ZG24P            ANOP  ,                                               00262200
                  AIF   (T'&ZCGPR NE 'N').ZG24R  NON NUMERIC            00262300
                  AIF   ('&ZCGPR' LT '2').ZG24Q                         00262400
                  AIF   ('&ZCGPR' LE '12').ZG24R                        00262500
.ZG24Q            ANOP  ,                                               00262600
&ZMS              SETC  '"STRDUMPID='                                   00262700
&ZMS              SETC  '&ZMS.&STRDUMPID"'                              00262800
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00262900
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00263000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00263100
.ZG24R            ANOP  ,                                               00263200
.*------------------------------------------------------------------    00263300
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00263400
.ZG26             ANOP  ,                                               00263500
&ZXSTRLEVEL       SETC  'INPUT'     SET IN/OUTPUT                       00263600
                  AIF   (K'&XSTRLEVEL GT 0).ZG26E  VALID ARG            00263700
                  AIF   (T'&STRLEVEL EQ 'O').ZG26D  OMITTED             00263800
&ZASYSLNDX        SETA  0                                               00263900
.ZG26A            ANOP  ,           POSITIONAL MACRO KEY                00264000
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00264100
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG26C                00264200
&ZTLC             SETC 'STRLEVEL'                                       00264300
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG26A       00264400
.ZG26B            ANOP  ,                                               00264500
&ZXSTRLEVEL       SETC  ''          RESET IN/OUTPUT                     00264600
&ZMS              SETC  'THE "STRLEVEL" KEY'                            00264700
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00264800
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00264900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00265000
                  AGO   .ZG26E                                          00265100
.ZG26C            ANOP  ,                                               00265200
&ZXSTRLEVEL       SETC  ''          RESET IN/OUTPUT                     00265300
&ZMS              SETC  '"STRLEVEL='                                    00265400
&ZMS              SETC  '&ZMS.&STRLEVEL"'                               00265500
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00265600
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00265700
&ZMS              SETC  '&ZMS "SUMMARY"'                                00265800
&ZMS              SETC  '&ZMS OR "DETAIL".'                             00265900
                  MNOTE 8,' &ZMS '                                      00266000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00266100
                  AGO   .ZG26E                                          00266200
.ZG26D            ANOP  ,                                               00266300
&XSTRLEVEL        SETC  'SUMMARY'   SET DEFAULT KEYWORD                 00266400
.ZG26E            ANOP  ,                                               00266500
.*------------------------------------------------------------------    00266600
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00266700
                  AIF   (K'&STRLEVEL(1) GT 0).ZG26F  PARM               00266800
&XSTRLEVEL        SETC  ''          ENSURE NULL KEYWORD                 00266900
&ZXSTRLEVEL       SETC  ''          RESET IN/OUTPUT                     00267000
&ZMS              SETC  'THE'                                           00267100
&ZMS              SETC  '&ZMS "STRLEVEL" KEY AND ITS'                   00267200
&ZMS              SETC  '&ZMS ARGUMENT ARE REQUIRED.'                   00267300
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00267400
&ZMS              SETC  '&ZMS "SUMMARY"'                                00267500
&ZMS              SETC  '&ZMS OR "DETAIL".'                             00267600
                  MNOTE 8,' &ZMS '                                      00267700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00267800
.ZG26F            ANOP  ,                                               00267900
.*-------------------------------------------------------------------   00268000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00268100
.ZG27             ANOP  ,                                               00268200
&ZTLC             SETC 'CLASS'                                          00268300
                  AIF   ('&TYPE(1)' NE '&ZTLC').ZG81                    00268400
&XTYPE            SETC  'CLASS'     SET KEYWORD                         00268500
                  AIF   (N'&TYPE LE 1).ZG27A    CK NUM                  00268600
&ZMS              SETC  '"TYPE='                                        00268700
&ZMS              SETC  '&ZMS.&TYPE"'                                   00268800
&ZMS              SETC  '&ZMS "TYPE"'                                   00268900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00269000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00269100
.ZG27A            ANOP  ,                                               00269200
.*------------------------------------------------------------------    00269300
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00269400
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00269500
.ZG27A0           AIF   (K'&STRLEVEL LE 0).ZG27A1  OK                   00269600
&ZCVAL            SETC '&ZCVAL STRLEVEL'        INCORRECT KEY USED      00269700
.ZG27A1           AIF   (K'&LISTNUMLEVEL LE 0).ZG27A2  OK               00269800
&ZCVAL            SETC '&ZCVAL LISTNUMLEVEL'    INCORRECT KEY USED      00269900
.ZG27A2           AIF   (K'&LISTNUMVAL LE 0).ZG27A3  OK                 00270000
&ZCVAL            SETC '&ZCVAL LISTNUMVAL'      INCORRECT KEY USED      00270100
.ZG27A3           AIF   (K'&ENTRYKEY LE 0).ZG27A4  OK                   00270200
&ZCVAL            SETC '&ZCVAL ENTRYKEY'        INCORRECT KEY USED      00270300
.ZG27A4           AIF   (K'&ENTRYNAME LE 0).ZG27A5  OK                  00270400
&ZCVAL            SETC '&ZCVAL ENTRYNAME'       INCORRECT KEY USED      00270500
.ZG27A5           AIF   (K'&ENTRYID LE 0).ZG27A6  OK                    00270600
&ZCVAL            SETC '&ZCVAL ENTRYID'         INCORRECT KEY USED      00270700
.ZG27A6           AIF   (K'&EMCLEVEL LE 0).ZG27A7  OK                   00270800
&ZCVAL            SETC '&ZCVAL EMCLEVEL'        INCORRECT KEY USED      00270900
.ZG27A7           AIF   (K'&EQLEVEL LE 0).ZG27A8  OK                    00271000
&ZCVAL            SETC '&ZCVAL EQLEVEL'         INCORRECT KEY USED      00271100
.ZG27A8           AIF   (K'&CONIDVAL LE 0).ZG27A9  OK                   00271200
&ZCVAL            SETC '&ZCVAL CONIDVAL'        INCORRECT KEY USED      00271300
.ZG27A9           AIF   (K'&ZCVAL LE 0).ZG27A10  OK                     00271400
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00271500
&ZMS              SETC  '"TYPE'                                         00271600
&ZMS              SETC  '&ZMS.=&TYPE"'                                  00271700
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00271800
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00271900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00272000
.ZG27A10          ANOP  ,                                               00272100
.*----------------------------------------------------------------***   00272200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00272300
                  AIF   (N'&STRNAME LE 1).ZG29A  CK NUM                 00272400
&ZMS              SETC  '"STRNAME='                                     00272500
&ZMS              SETC  '&ZMS.&STRNAME"'                                00272600
&ZMS              SETC  '&ZMS "STRNAME"'                                00272700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00272800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00272900
.ZG29A            ANOP  ,                                               00273000
.*-------------------------------------------------------------------   00273100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00273200
&ZXSTRNAME        SETC  'INPUT'     SET IN/OUTPUT                       00273300
&XSTRNAME         SETC  '&STRNAME(1)'           SET XVARIABLE           00273400
                  AIF   (N'&STRNAME GT 1).ZG29B  MULTI                  00273500
&XSTRNAME         SETC  '&STRNAME'  SET XVARIABLE                       00273600
.ZG29B            AIF   (K'&STRNAME(1) GT 0).ZG29C                      00273700
&ZXSTRNAME        SETC  ''          RESET IN/OUTPUT                     00273800
&ZMS              SETC  ' '                                             00273900
&ZMS              SETC  '&ZMS "STRNAME" KEY AND ITS'                    00274000
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00274100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00274200
.ZG29C            ANOP  ,                                               00274300
.*-------------------------------------------------------------------   00274400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00274500
                  AIF   (K'&ZXSTRNAME LE 0).ZG29R  NOT I/O              00274600
                  AIF   ('&XSTRNAME'(1,1) NE '(').ZG29R                 00274700
&ZCGPR            SETC  '&XSTRNAME'(2,K'&XSTRNAME-2)                    00274800
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG29P                    00274900
                  AIF   (K'&ZCGPR GT 2).ZG29Q                           00275000
                  AIF   ('&ZCGPR' EQ '0').ZG29Q                         00275100
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00275200
                  AIF   (T'&ZCGPR NE 'N').ZG29Q  INVALID REG NAME       00275300
.ZG29P            ANOP  ,                                               00275400
                  AIF   (T'&ZCGPR NE 'N').ZG29R  NON NUMERIC            00275500
                  AIF   ('&ZCGPR' LT '2').ZG29Q                         00275600
                  AIF   ('&ZCGPR' LE '12').ZG29R                        00275700
.ZG29Q            ANOP  ,                                               00275800
&ZMS              SETC  '"STRNAME='                                     00275900
&ZMS              SETC  '&ZMS.&STRNAME"'                                00276000
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00276100
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00276200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00276300
.ZG29R            ANOP  ,                                               00276400
.*----------------------------------------------------------------***   00276500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00276600
                  AIF   (N'&STRDUMPID LE 1).ZG32A  CK NUM               00276700
&ZMS              SETC  '"STRDUMPID='                                   00276800
&ZMS              SETC  '&ZMS.&STRDUMPID"'                              00276900
&ZMS              SETC  '&ZMS "STRDUMPID"'                              00277000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00277100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00277200
.ZG32A            ANOP  ,                                               00277300
.*-------------------------------------------------------------------   00277400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00277500
&ZXSTRDUMPID      SETC  'INPUT'     SET IN/OUTPUT                       00277600
&XSTRDUMPID       SETC  '&STRDUMPID(1)'         SET XVARIABLE           00277700
                  AIF   (N'&STRDUMPID GT 1).ZG32B  MULTI                00277800
&XSTRDUMPID       SETC  '&STRDUMPID'            SET XVARIABLE           00277900
.ZG32B            AIF   (K'&STRDUMPID(1) GT 0).ZG32C                    00278000
&ZXSTRDUMPID      SETC  ''          RESET IN/OUTPUT                     00278100
&ZMS              SETC  ' '                                             00278200
&ZMS              SETC  '&ZMS "STRDUMPID" KEY AND ITS'                  00278300
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00278400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00278500
.ZG32C            ANOP  ,                                               00278600
.*-------------------------------------------------------------------   00278700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00278800
                  AIF   (K'&ZXSTRDUMPID LE 0).ZG32R  NOT I/O            00278900
                  AIF   ('&XSTRDUMPID'(1,1) NE '(').ZG32R               00279000
&ZCGPR            SETC  '&XSTRDUMPID'(2,K'&XSTRDUMPID-2)                00279100
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG32P                    00279200
                  AIF   (K'&ZCGPR GT 2).ZG32Q                           00279300
                  AIF   ('&ZCGPR' EQ '0').ZG32Q                         00279400
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00279500
                  AIF   (T'&ZCGPR NE 'N').ZG32Q  INVALID REG NAME       00279600
.ZG32P            ANOP  ,                                               00279700
                  AIF   (T'&ZCGPR NE 'N').ZG32R  NON NUMERIC            00279800
                  AIF   ('&ZCGPR' LT '2').ZG32Q                         00279900
                  AIF   ('&ZCGPR' LE '12').ZG32R                        00280000
.ZG32Q            ANOP  ,                                               00280100
&ZMS              SETC  '"STRDUMPID='                                   00280200
&ZMS              SETC  '&ZMS.&STRDUMPID"'                              00280300
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00280400
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00280500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00280600
.ZG32R            ANOP  ,                                               00280700
.*----------------------------------------------------------------***   00280800
.***AG.KKWRD01 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00280900
                  AIF   (N'&CLASSTYPE LE 1).ZG35A  CK NUM               00281000
&ZMS              SETC  '"CLASSTYPE='                                   00281100
&ZMS              SETC  '&ZMS.&CLASSTYPE"'                              00281200
&ZMS              SETC  '&ZMS "CLASSTYPE"'                              00281300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00281400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00281500
.ZG35A            ANOP  ,                                               00281600
.*-------------------------------------------------------------------   00281700
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00281800
&XCLASSTYPE       SETC  ''          INITIALIZE XVARIABLE                00281900
.ZG36A   AIF   ('&CLASSTYPE(1)' NE 'CASTOUT').ZG37A                     00282000
&XCLASSTYPE       SETC  'CASTOUT'   SET KEYWORD                         00282100
.*-------------------------------------------------------------------   00282200
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00282300
.ZG37A   AIF   ('&CLASSTYPE(1)' NE 'STORAGE').ZG38A                     00282400
&XCLASSTYPE       SETC  'STORAGE'   SET KEYWORD                         00282500
.*-------------------------------------------------------------------   00282600
.***AG.KKWRD03 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00282700
.ZG38A            AIF   (K'&XCLASSTYPE GT 0).ZG38C  KEYWORD             00282800
                  AIF   (K'&CLASSTYPE(1) LE 0).ZG38B                    00282900
&ZMS              SETC  '"CLASSTYPE='                                   00283000
&ZMS              SETC  '&ZMS.&CLASSTYPE"'                              00283100
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00283200
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00283300
&ZMS              SETC  '&ZMS "CASTOUT"'                                00283400
&ZMS              SETC  '&ZMS OR "STORAGE".'                            00283500
                  MNOTE 8,' &ZMS '                                      00283600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00283700
.ZG38B            ANOP  ,                                               00283800
&XCLASSTYPE       SETC  'CASTOUT'   SET DEFAULT KEYWORD                 00283900
.ZG38C            ANOP  ,                                               00284000
&ZXCLASSTYPE      SETC  'INPUT'     SET IN/OUTPUT                       00284100
.*-------------------------------------------------------------------   00284200
.***AG.KKWRD04 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00284300
                  AIF   (K'&CLASSTYPE(1) GT 0).ZG38D  VALID             00284400
&ZXCLASSTYPE      SETC  ''          RESET IN/OUTPUT                     00284500
&ZMS              SETC  'THE'                                           00284600
&ZMS              SETC  '&ZMS "CLASSTYPE" KEY AND ITS'                  00284700
&ZMS              SETC  '&ZMS ARGUMENT ARE REQUIRED.'                   00284800
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00284900
&ZMS              SETC  '&ZMS "CASTOUT"'                                00285000
&ZMS              SETC  '&ZMS OR "STORAGE".'                            00285100
                  MNOTE 8,' &ZMS '                                      00285200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00285300
.ZG38D            ANOP  ,                                               00285400
.*------------------------------------------------------------------    00285500
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00285600
&XCLASSLEVEL      SETC  ''          INITIALIZE XVARIABLE                00285700
.*-------------------------------------------------------------------   00285800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00285900
.ZG41             ANOP  ,                                               00286000
                  AIF   (K'&CLASSLEVEL(1) LE 0).ZG41A                   00286100
&ZTLC             SETC 'SUMMARY'                                        00286200
                  AIF   ('&CLASSLEVEL(1)' NE '&ZTLC').ZG48              00286300
&XCLASSLEVEL      SETC  'SUMMARY'   SET KEYWORD                         00286400
                  AIF   (N'&CLASSLEVEL LE 1).ZG41A  CK NUM              00286500
&ZMS              SETC  '"CLASSLEVEL='                                  00286600
&ZMS              SETC  '&ZMS.&CLASSLEVEL"'                             00286700
&ZMS              SETC  '&ZMS "CLASSLEVEL"'                             00286800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00286900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00287000
.ZG41A            ANOP  ,                                               00287100
.*------------------------------------------------------------------    00287200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00287300
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00287400
.ZG41A0           AIF   (K'&CLASSVAL LE 0).ZG41A1  OK                   00287500
&ZCVAL            SETC '&ZCVAL CLASSVAL'        INCORRECT KEY USED      00287600
.ZG41A1           AIF   (K'&STARTPOS LE 0).ZG41A2  OK                   00287700
&ZCVAL            SETC '&ZCVAL STARTPOS'        INCORRECT KEY USED      00287800
.ZG41A2           AIF   (K'&ENDPOS LE 0).ZG41A3  OK                     00287900
&ZCVAL            SETC '&ZCVAL ENDPOS'          INCORRECT KEY USED      00288000
.ZG41A3           AIF   (K'&ORDER LE 0).ZG41A4  OK                      00288100
&ZCVAL            SETC '&ZCVAL ORDER'           INCORRECT KEY USED      00288200
.ZG41A4           AIF   (K'&ADJUNCT LE 0).ZG41A5  OK                    00288300
&ZCVAL            SETC '&ZCVAL ADJUNCT'         INCORRECT KEY USED      00288400
.ZG41A5           AIF   (K'&ENTRYDATA LE 0).ZG41A6  OK                  00288500
&ZCVAL            SETC '&ZCVAL ENTRYDATA'       INCORRECT KEY USED      00288600
.ZG41A6           AIF   (K'&ZCVAL LE 0).ZG41A7  OK                      00288700
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00288800
&ZMS              SETC  '"CLASSLEVEL'                                   00288900
&ZMS              SETC  '&ZMS.=&CLASSLEVEL"'                            00289000
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00289100
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00289200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00289300
.ZG41A7           ANOP  ,                                               00289400
.*----------------------------------------------------------------***   00289500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00289600
                  AIF   (N'&STARTVAL LE 1).ZG43A  CK NUM                00289700
&ZMS              SETC  '"STARTVAL='                                    00289800
&ZMS              SETC  '&ZMS.&STARTVAL"'                               00289900
&ZMS              SETC  '&ZMS "STARTVAL"'                               00290000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00290100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00290200
.ZG43A            ANOP  ,                                               00290300
.*-------------------------------------------------------------------   00290400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00290500
&ZXSTARTVAL       SETC  'INPUT'     SET IN/OUTPUT                       00290600
&XSTARTVAL        SETC  'ALL'                                           00290700
                  AIF   (K'&STARTVAL(1) LE 0).ZG43B  PARM               00290800
&XSTARTVAL        SETC  '&STARTVAL(1)'          SET XVARIABLE           00290900
                  AIF   (N'&STARTVAL GT 1).ZG43B  MULTI                 00291000
&XSTARTVAL        SETC  '&STARTVAL'             SET XVARIABLE           00291100
.ZG43B            ANOP  ,                                               00291200
.*-------------------------------------------------------------------   00291300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00291400
                  AIF   (K'&ZXSTARTVAL LE 0).ZG43R  NOT I/O             00291500
         AIF   ('&XSTARTVAL' EQ 'ALL').ZG43R                            00291600
                  AIF   ('&XSTARTVAL'(1,1) NE '(').ZG43R                00291700
&ZCGPR            SETC  '&XSTARTVAL'(2,K'&XSTARTVAL-2)                  00291800
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG43P                    00291900
                  AIF   (K'&ZCGPR GT 2).ZG43Q                           00292000
                  AIF   ('&ZCGPR' EQ '0').ZG43Q                         00292100
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00292200
                  AIF   (T'&ZCGPR NE 'N').ZG43Q  INVALID REG NAME       00292300
.ZG43P            ANOP  ,                                               00292400
                  AIF   (T'&ZCGPR NE 'N').ZG43R  NON NUMERIC            00292500
                  AIF   ('&ZCGPR' LT '2').ZG43Q                         00292600
                  AIF   ('&ZCGPR' LE '12').ZG43R                        00292700
.ZG43Q            ANOP  ,                                               00292800
&ZMS              SETC  '"STARTVAL='                                    00292900
&ZMS              SETC  '&ZMS.&STARTVAL"'                               00293000
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00293100
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00293200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00293300
.ZG43R            ANOP  ,                                               00293400
.*----------------------------------------------------------------***   00293500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00293600
                  AIF   (N'&ENDVAL LE 1).ZG45A  CK NUM                  00293700
&ZMS              SETC  '"ENDVAL='                                      00293800
&ZMS              SETC  '&ZMS.&ENDVAL"'                                 00293900
&ZMS              SETC  '&ZMS "ENDVAL"'                                 00294000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00294100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00294200
.ZG45A            ANOP  ,                                               00294300
.*-------------------------------------------------------------------   00294400
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00294500
&XENDVAL          SETC  'STARTVAL'  SET DEFAULT                         00294600
                  AIF   (K'&ENDVAL(1) LE 0).ZG45C  PARM                 00294700
&XENDVAL          SETC  '&ENDVAL(1)'            SET XVARIABLE           00294800
                  AIF   (N'&ENDVAL GT 1).ZG45B  MULTI                   00294900
&XENDVAL          SETC  '&ENDVAL'   SET XVARIABLE                       00295000
.ZG45B            AIF   (K'&STARTVAL(1) GT 0).ZG45C  KEY                00295100
&ZMS              SETC  '"ENDVAL'                                       00295200
&ZMS              SETC  '&ZMS.=&ENDVAL"'                                00295300
&ZMS              SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                 00295400
&ZMS              SETC  '&ZMS '                                         00295500
&ZMS              SETC  '&ZMS "STARTVAL"'                               00295600
                  MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                    00295700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00295800
.ZG45C            ANOP  ,                                               00295900
&ZXENDVAL         SETC  'INPUT'     SET IN/OUTPUT                       00296000
.*-------------------------------------------------------------------   00296100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00296200
                  AIF   (K'&ZXENDVAL LE 0).ZG45R  NOT I/O               00296300
         AIF   ('&XENDVAL' EQ 'STARTVAL').ZG45R                         00296400
                  AIF   ('&XENDVAL'(1,1) NE '(').ZG45R                  00296500
&ZCGPR            SETC  '&XENDVAL'(2,K'&XENDVAL-2)                      00296600
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG45P                    00296700
                  AIF   (K'&ZCGPR GT 2).ZG45Q                           00296800
                  AIF   ('&ZCGPR' EQ '0').ZG45Q                         00296900
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00297000
                  AIF   (T'&ZCGPR NE 'N').ZG45Q  INVALID REG NAME       00297100
.ZG45P            ANOP  ,                                               00297200
                  AIF   (T'&ZCGPR NE 'N').ZG45R  NON NUMERIC            00297300
                  AIF   ('&ZCGPR' LT '2').ZG45Q                         00297400
                  AIF   ('&ZCGPR' LE '12').ZG45R                        00297500
.ZG45Q            ANOP  ,                                               00297600
&ZMS              SETC  '"ENDVAL='                                      00297700
&ZMS              SETC  '&ZMS.&ENDVAL"'                                 00297800
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00297900
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00298000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00298100
.ZG45R            ANOP  ,                                               00298200
.*-------------------------------------------------------------------   00298300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00298400
.ZG48             ANOP  ,                                               00298500
&ZTLC             SETC 'DETAIL'                                         00298600
                  AIF   ('&CLASSLEVEL(1)' NE '&ZTLC').ZG55              00298700
&XCLASSLEVEL      SETC  'DETAIL'    SET KEYWORD                         00298800
                  AIF   (N'&CLASSLEVEL LE 1).ZG48A  CK NUM              00298900
&ZMS              SETC  '"CLASSLEVEL='                                  00299000
&ZMS              SETC  '&ZMS.&CLASSLEVEL"'                             00299100
&ZMS              SETC  '&ZMS "CLASSLEVEL"'                             00299200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00299300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00299400
.ZG48A            ANOP  ,                                               00299500
.*------------------------------------------------------------------    00299600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00299700
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00299800
.ZG48A0           AIF   (K'&CLASSVAL LE 0).ZG48A1  OK                   00299900
&ZCVAL            SETC '&ZCVAL CLASSVAL'        INCORRECT KEY USED      00300000
.ZG48A1           AIF   (K'&STARTPOS LE 0).ZG48A2  OK                   00300100
&ZCVAL            SETC '&ZCVAL STARTPOS'        INCORRECT KEY USED      00300200
.ZG48A2           AIF   (K'&ENDPOS LE 0).ZG48A3  OK                     00300300
&ZCVAL            SETC '&ZCVAL ENDPOS'          INCORRECT KEY USED      00300400
.ZG48A3           AIF   (K'&ORDER LE 0).ZG48A4  OK                      00300500
&ZCVAL            SETC '&ZCVAL ORDER'           INCORRECT KEY USED      00300600
.ZG48A4           AIF   (K'&ADJUNCT LE 0).ZG48A5  OK                    00300700
&ZCVAL            SETC '&ZCVAL ADJUNCT'         INCORRECT KEY USED      00300800
.ZG48A5           AIF   (K'&ENTRYDATA LE 0).ZG48A6  OK                  00300900
&ZCVAL            SETC '&ZCVAL ENTRYDATA'       INCORRECT KEY USED      00301000
.ZG48A6           AIF   (K'&ZCVAL LE 0).ZG48A7  OK                      00301100
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00301200
&ZMS              SETC  '"CLASSLEVEL'                                   00301300
&ZMS              SETC  '&ZMS.=&CLASSLEVEL"'                            00301400
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00301500
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00301600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00301700
.ZG48A7           ANOP  ,                                               00301800
.*----------------------------------------------------------------***   00301900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00302000
                  AIF   (N'&STARTVAL LE 1).ZG50A  CK NUM                00302100
&ZMS              SETC  '"STARTVAL='                                    00302200
&ZMS              SETC  '&ZMS.&STARTVAL"'                               00302300
&ZMS              SETC  '&ZMS "STARTVAL"'                               00302400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00302500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00302600
.ZG50A            ANOP  ,                                               00302700
.*-------------------------------------------------------------------   00302800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00302900
&ZXSTARTVAL       SETC  'INPUT'     SET IN/OUTPUT                       00303000
&XSTARTVAL        SETC  'ALL'                                           00303100
                  AIF   (K'&STARTVAL(1) LE 0).ZG50B  PARM               00303200
&XSTARTVAL        SETC  '&STARTVAL(1)'          SET XVARIABLE           00303300
                  AIF   (N'&STARTVAL GT 1).ZG50B  MULTI                 00303400
&XSTARTVAL        SETC  '&STARTVAL'             SET XVARIABLE           00303500
.ZG50B            ANOP  ,                                               00303600
.*-------------------------------------------------------------------   00303700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00303800
                  AIF   (K'&ZXSTARTVAL LE 0).ZG50R  NOT I/O             00303900
         AIF   ('&XSTARTVAL' EQ 'ALL').ZG50R                            00304000
                  AIF   ('&XSTARTVAL'(1,1) NE '(').ZG50R                00304100
&ZCGPR            SETC  '&XSTARTVAL'(2,K'&XSTARTVAL-2)                  00304200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG50P                    00304300
                  AIF   (K'&ZCGPR GT 2).ZG50Q                           00304400
                  AIF   ('&ZCGPR' EQ '0').ZG50Q                         00304500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00304600
                  AIF   (T'&ZCGPR NE 'N').ZG50Q  INVALID REG NAME       00304700
.ZG50P            ANOP  ,                                               00304800
                  AIF   (T'&ZCGPR NE 'N').ZG50R  NON NUMERIC            00304900
                  AIF   ('&ZCGPR' LT '2').ZG50Q                         00305000
                  AIF   ('&ZCGPR' LE '12').ZG50R                        00305100
.ZG50Q            ANOP  ,                                               00305200
&ZMS              SETC  '"STARTVAL='                                    00305300
&ZMS              SETC  '&ZMS.&STARTVAL"'                               00305400
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00305500
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00305600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00305700
.ZG50R            ANOP  ,                                               00305800
.*----------------------------------------------------------------***   00305900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00306000
                  AIF   (N'&ENDVAL LE 1).ZG52A  CK NUM                  00306100
&ZMS              SETC  '"ENDVAL='                                      00306200
&ZMS              SETC  '&ZMS.&ENDVAL"'                                 00306300
&ZMS              SETC  '&ZMS "ENDVAL"'                                 00306400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00306500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00306600
.ZG52A            ANOP  ,                                               00306700
.*-------------------------------------------------------------------   00306800
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00306900
&XENDVAL          SETC  'STARTVAL'  SET DEFAULT                         00307000
                  AIF   (K'&ENDVAL(1) LE 0).ZG52C  PARM                 00307100
&XENDVAL          SETC  '&ENDVAL(1)'            SET XVARIABLE           00307200
                  AIF   (N'&ENDVAL GT 1).ZG52B  MULTI                   00307300
&XENDVAL          SETC  '&ENDVAL'   SET XVARIABLE                       00307400
.ZG52B            AIF   (K'&STARTVAL(1) GT 0).ZG52C  KEY                00307500
&ZMS              SETC  '"ENDVAL'                                       00307600
&ZMS              SETC  '&ZMS.=&ENDVAL"'                                00307700
&ZMS              SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                 00307800
&ZMS              SETC  '&ZMS '                                         00307900
&ZMS              SETC  '&ZMS "STARTVAL"'                               00308000
                  MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                    00308100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00308200
.ZG52C            ANOP  ,                                               00308300
&ZXENDVAL         SETC  'INPUT'     SET IN/OUTPUT                       00308400
.*-------------------------------------------------------------------   00308500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00308600
                  AIF   (K'&ZXENDVAL LE 0).ZG52R  NOT I/O               00308700
         AIF   ('&XENDVAL' EQ 'STARTVAL').ZG52R                         00308800
                  AIF   ('&XENDVAL'(1,1) NE '(').ZG52R                  00308900
&ZCGPR            SETC  '&XENDVAL'(2,K'&XENDVAL-2)                      00309000
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG52P                    00309100
                  AIF   (K'&ZCGPR GT 2).ZG52Q                           00309200
                  AIF   ('&ZCGPR' EQ '0').ZG52Q                         00309300
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00309400
                  AIF   (T'&ZCGPR NE 'N').ZG52Q  INVALID REG NAME       00309500
.ZG52P            ANOP  ,                                               00309600
                  AIF   (T'&ZCGPR NE 'N').ZG52R  NON NUMERIC            00309700
                  AIF   ('&ZCGPR' LT '2').ZG52Q                         00309800
                  AIF   ('&ZCGPR' LE '12').ZG52R                        00309900
.ZG52Q            ANOP  ,                                               00310000
&ZMS              SETC  '"ENDVAL='                                      00310100
&ZMS              SETC  '&ZMS.&ENDVAL"'                                 00310200
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00310300
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00310400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00310500
.ZG52R            ANOP  ,                                               00310600
.*-------------------------------------------------------------------   00310700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00310800
.ZG55             ANOP  ,                                               00310900
&ZTLC             SETC 'ENTRY'                                          00311000
                  AIF   ('&CLASSLEVEL(1)' NE '&ZTLC').ZG80              00311100
&XCLASSLEVEL      SETC  'ENTRY'     SET KEYWORD                         00311200
                  AIF   (N'&CLASSLEVEL LE 1).ZG55A  CK NUM              00311300
&ZMS              SETC  '"CLASSLEVEL='                                  00311400
&ZMS              SETC  '&ZMS.&CLASSLEVEL"'                             00311500
&ZMS              SETC  '&ZMS "CLASSLEVEL"'                             00311600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00311700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00311800
.ZG55A            ANOP  ,                                               00311900
.*------------------------------------------------------------------    00312000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00312100
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00312200
.ZG55A0           AIF   (K'&STARTVAL LE 0).ZG55A1  OK                   00312300
&ZCVAL            SETC '&ZCVAL STARTVAL'        INCORRECT KEY USED      00312400
.ZG55A1           AIF   (K'&ENDVAL LE 0).ZG55A2  OK                     00312500
&ZCVAL            SETC '&ZCVAL ENDVAL'          INCORRECT KEY USED      00312600
.ZG55A2           AIF   (K'&ZCVAL LE 0).ZG55A3  OK                      00312700
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00312800
&ZMS              SETC  '"CLASSLEVEL'                                   00312900
&ZMS              SETC  '&ZMS.=&CLASSLEVEL"'                            00313000
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00313100
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00313200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00313300
.ZG55A3           ANOP  ,                                               00313400
.*----------------------------------------------------------------***   00313500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00313600
                  AIF   (N'&CLASSVAL LE 1).ZG57A  CK NUM                00313700
&ZMS              SETC  '"CLASSVAL='                                    00313800
&ZMS              SETC  '&ZMS.&CLASSVAL"'                               00313900
&ZMS              SETC  '&ZMS "CLASSVAL"'                               00314000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00314100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00314200
.ZG57A            ANOP  ,                                               00314300
.*-------------------------------------------------------------------   00314400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00314500
&ZXCLASSVAL       SETC  'INPUT'     SET IN/OUTPUT                       00314600
&XCLASSVAL        SETC  '&CLASSVAL(1)'          SET XVARIABLE           00314700
                  AIF   (N'&CLASSVAL GT 1).ZG57B  MULTI                 00314800
&XCLASSVAL        SETC  '&CLASSVAL'             SET XVARIABLE           00314900
.ZG57B            AIF   (K'&CLASSVAL(1) GT 0).ZG57C                     00315000
&ZXCLASSVAL       SETC  ''          RESET IN/OUTPUT                     00315100
&ZMS              SETC  ' '                                             00315200
&ZMS              SETC  '&ZMS "CLASSVAL" KEY AND ITS'                   00315300
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00315400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00315500
.ZG57C            ANOP  ,                                               00315600
.*-------------------------------------------------------------------   00315700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00315800
                  AIF   (K'&ZXCLASSVAL LE 0).ZG57R  NOT I/O             00315900
                  AIF   ('&XCLASSVAL'(1,1) NE '(').ZG57R                00316000
&ZCGPR            SETC  '&XCLASSVAL'(2,K'&XCLASSVAL-2)                  00316100
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG57P                    00316200
                  AIF   (K'&ZCGPR GT 2).ZG57Q                           00316300
                  AIF   ('&ZCGPR' EQ '0').ZG57Q                         00316400
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00316500
                  AIF   (T'&ZCGPR NE 'N').ZG57Q  INVALID REG NAME       00316600
.ZG57P            ANOP  ,                                               00316700
                  AIF   (T'&ZCGPR NE 'N').ZG57R  NON NUMERIC            00316800
                  AIF   ('&ZCGPR' LT '2').ZG57Q                         00316900
                  AIF   ('&ZCGPR' LE '12').ZG57R                        00317000
.ZG57Q            ANOP  ,                                               00317100
&ZMS              SETC  '"CLASSVAL='                                    00317200
&ZMS              SETC  '&ZMS.&CLASSVAL"'                               00317300
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00317400
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00317500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00317600
.ZG57R            ANOP  ,                                               00317700
.*----------------------------------------------------------------***   00317800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00317900
                  AIF   (N'&STARTPOS LE 1).ZG60A  CK NUM                00318000
&ZMS              SETC  '"STARTPOS='                                    00318100
&ZMS              SETC  '&ZMS.&STARTPOS"'                               00318200
&ZMS              SETC  '&ZMS "STARTPOS"'                               00318300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00318400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00318500
.ZG60A            ANOP  ,                                               00318600
.*-------------------------------------------------------------------   00318700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00318800
&ZXSTARTPOS       SETC  'INPUT'     SET IN/OUTPUT                       00318900
&XSTARTPOS        SETC  'ALL'                                           00319000
                  AIF   (K'&STARTPOS(1) LE 0).ZG60B  PARM               00319100
&XSTARTPOS        SETC  '&STARTPOS(1)'          SET XVARIABLE           00319200
                  AIF   (N'&STARTPOS GT 1).ZG60B  MULTI                 00319300
&XSTARTPOS        SETC  '&STARTPOS'             SET XVARIABLE           00319400
.ZG60B            ANOP  ,                                               00319500
.*-------------------------------------------------------------------   00319600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00319700
                  AIF   (K'&ZXSTARTPOS LE 0).ZG60R  NOT I/O             00319800
         AIF   ('&XSTARTPOS' EQ 'ALL').ZG60R                            00319900
                  AIF   ('&XSTARTPOS'(1,1) NE '(').ZG60R                00320000
&ZCGPR            SETC  '&XSTARTPOS'(2,K'&XSTARTPOS-2)                  00320100
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG60P                    00320200
                  AIF   (K'&ZCGPR GT 2).ZG60Q                           00320300
                  AIF   ('&ZCGPR' EQ '0').ZG60Q                         00320400
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00320500
                  AIF   (T'&ZCGPR NE 'N').ZG60Q  INVALID REG NAME       00320600
.ZG60P            ANOP  ,                                               00320700
                  AIF   (T'&ZCGPR NE 'N').ZG60R  NON NUMERIC            00320800
                  AIF   ('&ZCGPR' LT '2').ZG60Q                         00320900
                  AIF   ('&ZCGPR' LE '12').ZG60R                        00321000
.ZG60Q            ANOP  ,                                               00321100
&ZMS              SETC  '"STARTPOS='                                    00321200
&ZMS              SETC  '&ZMS.&STARTPOS"'                               00321300
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00321400
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00321500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00321600
.ZG60R            ANOP  ,                                               00321700
.*----------------------------------------------------------------***   00321800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00321900
                  AIF   (N'&ENDPOS LE 1).ZG62A  CK NUM                  00322000
&ZMS              SETC  '"ENDPOS='                                      00322100
&ZMS              SETC  '&ZMS.&ENDPOS"'                                 00322200
&ZMS              SETC  '&ZMS "ENDPOS"'                                 00322300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00322400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00322500
.ZG62A            ANOP  ,                                               00322600
.*-------------------------------------------------------------------   00322700
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00322800
&XENDPOS          SETC  'STARTPOS'  SET DEFAULT                         00322900
                  AIF   (K'&ENDPOS(1) LE 0).ZG62C  PARM                 00323000
&XENDPOS          SETC  '&ENDPOS(1)'            SET XVARIABLE           00323100
                  AIF   (N'&ENDPOS GT 1).ZG62B  MULTI                   00323200
&XENDPOS          SETC  '&ENDPOS'   SET XVARIABLE                       00323300
.ZG62B            AIF   (K'&STARTPOS(1) GT 0).ZG62C  KEY                00323400
&ZMS              SETC  '"ENDPOS'                                       00323500
&ZMS              SETC  '&ZMS.=&ENDPOS"'                                00323600
&ZMS              SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                 00323700
&ZMS              SETC  '&ZMS '                                         00323800
&ZMS              SETC  '&ZMS "STARTPOS"'                               00323900
                  MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                    00324000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00324100
.ZG62C            ANOP  ,                                               00324200
&ZXENDPOS         SETC  'INPUT'     SET IN/OUTPUT                       00324300
.*-------------------------------------------------------------------   00324400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00324500
                  AIF   (K'&ZXENDPOS LE 0).ZG62R  NOT I/O               00324600
         AIF   ('&XENDPOS' EQ 'STARTPOS').ZG62R                         00324700
                  AIF   ('&XENDPOS'(1,1) NE '(').ZG62R                  00324800
&ZCGPR            SETC  '&XENDPOS'(2,K'&XENDPOS-2)                      00324900
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG62P                    00325000
                  AIF   (K'&ZCGPR GT 2).ZG62Q                           00325100
                  AIF   ('&ZCGPR' EQ '0').ZG62Q                         00325200
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00325300
                  AIF   (T'&ZCGPR NE 'N').ZG62Q  INVALID REG NAME       00325400
.ZG62P            ANOP  ,                                               00325500
                  AIF   (T'&ZCGPR NE 'N').ZG62R  NON NUMERIC            00325600
                  AIF   ('&ZCGPR' LT '2').ZG62Q                         00325700
                  AIF   ('&ZCGPR' LE '12').ZG62R                        00325800
.ZG62Q            ANOP  ,                                               00325900
&ZMS              SETC  '"ENDPOS='                                      00326000
&ZMS              SETC  '&ZMS.&ENDPOS"'                                 00326100
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00326200
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00326300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00326400
.ZG62R            ANOP  ,                                               00326500
.*----------------------------------------------------------------***   00326600
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00326700
                  AIF   (N'&ORDER LE 1).ZG66A   CK NUM                  00326800
&ZMS              SETC  '"ORDER='                                       00326900
&ZMS              SETC  '&ZMS.&ORDER"'                                  00327000
&ZMS              SETC  '&ZMS "ORDER"'                                  00327100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00327200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00327300
.ZG66A            ANOP  ,                                               00327400
.*-------------------------------------------------------------------   00327500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00327600
&XORDER           SETC  ''          INITIALIZE XVARIABLE                00327700
.ZG67A   AIF   ('&ORDER(1)' NE 'HEAD').ZG68A                            00327800
&XORDER           SETC  'HEAD'      SET KEYWORD                         00327900
.*-------------------------------------------------------------------   00328000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00328100
.ZG68A   AIF   ('&ORDER(1)' NE 'TAIL').ZG69A                            00328200
&XORDER           SETC  'TAIL'      SET KEYWORD                         00328300
.*-------------------------------------------------------------------   00328400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00328500
.ZG69A            AIF   (K'&XORDER GT 0).ZG69C  KEYWORD                 00328600
                  AIF   (K'&ORDER(1) LE 0).ZG69B                        00328700
&ZMS              SETC  '"ORDER='                                       00328800
&ZMS              SETC  '&ZMS.&ORDER"'                                  00328900
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00329000
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00329100
&ZMS              SETC  '&ZMS "HEAD"'                                   00329200
&ZMS              SETC  '&ZMS OR "TAIL".'                               00329300
                  MNOTE 8,' &ZMS '                                      00329400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00329500
.ZG69B            ANOP  ,                                               00329600
&XORDER           SETC  'HEAD'      SET DEFAULT KEYWORD                 00329700
.ZG69C            ANOP  ,                                               00329800
&ZXORDER          SETC  'INPUT'     SET IN/OUTPUT                       00329900
.*----------------------------------------------------------------***   00330000
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00330100
                  AIF   (N'&ADJUNCT LE 1).ZG71A  CK NUM                 00330200
&ZMS              SETC  '"ADJUNCT='                                     00330300
&ZMS              SETC  '&ZMS.&ADJUNCT"'                                00330400
&ZMS              SETC  '&ZMS "ADJUNCT"'                                00330500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00330600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00330700
.ZG71A            ANOP  ,                                               00330800
.*-------------------------------------------------------------------   00330900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00331000
&XADJUNCT         SETC  ''          INITIALIZE XVARIABLE                00331100
.ZG72A   AIF   ('&ADJUNCT(1)' NE 'NO').ZG73A                            00331200
&XADJUNCT         SETC  'NO'        SET KEYWORD                         00331300
.*-------------------------------------------------------------------   00331400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00331500
.ZG73A   AIF   ('&ADJUNCT(1)' NE 'YES').ZG74A                           00331600
&XADJUNCT         SETC  'YES'       SET KEYWORD                         00331700
.*-------------------------------------------------------------------   00331800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00331900
.ZG74A            AIF   (K'&XADJUNCT GT 0).ZG74C  KEYWORD               00332000
                  AIF   (K'&ADJUNCT(1) LE 0).ZG74B                      00332100
&ZMS              SETC  '"ADJUNCT='                                     00332200
&ZMS              SETC  '&ZMS.&ADJUNCT"'                                00332300
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00332400
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00332500
&ZMS              SETC  '&ZMS "NO"'                                     00332600
&ZMS              SETC  '&ZMS OR "YES".'                                00332700
                  MNOTE 8,' &ZMS '                                      00332800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00332900
.ZG74B            ANOP  ,                                               00333000
&XADJUNCT         SETC  'NO'        SET DEFAULT KEYWORD                 00333100
.ZG74C            ANOP  ,                                               00333200
&ZXADJUNCT        SETC  'INPUT'     SET IN/OUTPUT                       00333300
.*----------------------------------------------------------------***   00333400
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00333500
                  AIF   (N'&ENTRYDATA LE 1).ZG76A  CK NUM               00333600
&ZMS              SETC  '"ENTRYDATA='                                   00333700
&ZMS              SETC  '&ZMS.&ENTRYDATA"'                              00333800
&ZMS              SETC  '&ZMS "ENTRYDATA"'                              00333900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00334000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00334100
.ZG76A            ANOP  ,                                               00334200
.*-------------------------------------------------------------------   00334300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00334400
&XENTRYDATA       SETC  ''          INITIALIZE XVARIABLE                00334500
.ZG77A   AIF   ('&ENTRYDATA(1)' NE 'NO').ZG78A                          00334600
&XENTRYDATA       SETC  'NO'        SET KEYWORD                         00334700
.*-------------------------------------------------------------------   00334800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00334900
.ZG78A   AIF   ('&ENTRYDATA(1)' NE 'YES').ZG79A                         00335000
&XENTRYDATA       SETC  'YES'       SET KEYWORD                         00335100
.*-------------------------------------------------------------------   00335200
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00335300
.ZG79A            AIF   (K'&XENTRYDATA GT 0).ZG79C  KEYWORD             00335400
                  AIF   (K'&ENTRYDATA(1) LE 0).ZG79B                    00335500
&ZMS              SETC  '"ENTRYDATA='                                   00335600
&ZMS              SETC  '&ZMS.&ENTRYDATA"'                              00335700
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00335800
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00335900
&ZMS              SETC  '&ZMS "NO"'                                     00336000
&ZMS              SETC  '&ZMS OR "YES".'                                00336100
                  MNOTE 8,' &ZMS '                                      00336200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00336300
.ZG79B            ANOP  ,                                               00336400
&XENTRYDATA       SETC  'NO'        SET DEFAULT KEYWORD                 00336500
.ZG79C            ANOP  ,                                               00336600
&ZXENTRYDATA      SETC  'INPUT'     SET IN/OUTPUT                       00336700
.*------------------------------------------------------------------    00336800
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00336900
.ZG80             ANOP  ,                                               00337000
&ZXCLASSLEVEL     SETC  'INPUT'     SET IN/OUTPUT                       00337100
                  AIF   (K'&XCLASSLEVEL GT 0).ZG80E  VALID ARG          00337200
                  AIF   (T'&CLASSLEVEL EQ 'O').ZG80D  OMITTED           00337300
&ZASYSLNDX        SETA  0                                               00337400
.ZG80A            ANOP  ,           POSITIONAL MACRO KEY                00337500
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00337600
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG80C                00337700
&ZTLC             SETC 'CLASSLEVEL'                                     00337800
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG80A       00337900
.ZG80B            ANOP  ,                                               00338000
&ZXCLASSLEVEL     SETC  ''          RESET IN/OUTPUT                     00338100
&ZMS              SETC  'THE "CLASSLEVEL" KEY'                          00338200
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00338300
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00338400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00338500
                  AGO   .ZG80E                                          00338600
.ZG80C            ANOP  ,                                               00338700
&ZXCLASSLEVEL     SETC  ''          RESET IN/OUTPUT                     00338800
&ZMS              SETC  '"CLASSLEVEL='                                  00338900
&ZMS              SETC  '&ZMS.&CLASSLEVEL"'                             00339000
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00339100
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00339200
&ZMS              SETC  '&ZMS "SUMMARY",'                               00339300
&ZMS              SETC  '&ZMS "DETAIL",'                                00339400
&ZMS              SETC  '&ZMS OR "ENTRY".'                              00339500
                  MNOTE 8,' &ZMS '                                      00339600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00339700
                  AGO   .ZG80E                                          00339800
.ZG80D            ANOP  ,                                               00339900
&XCLASSLEVEL      SETC  'SUMMARY'   SET DEFAULT KEYWORD                 00340000
.ZG80E            ANOP  ,                                               00340100
.*------------------------------------------------------------------    00340200
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00340300
                  AIF   (K'&CLASSLEVEL(1) GT 0).ZG80F  PARM             00340400
&XCLASSLEVEL      SETC  ''          ENSURE NULL KEYWORD                 00340500
&ZXCLASSLEVEL     SETC  ''          RESET IN/OUTPUT                     00340600
&ZMS              SETC  'THE'                                           00340700
&ZMS              SETC  '&ZMS "CLASSLEVEL" KEY AND ITS'                 00340800
&ZMS              SETC  '&ZMS ARGUMENT ARE REQUIRED.'                   00340900
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00341000
&ZMS              SETC  '&ZMS "SUMMARY",'                               00341100
&ZMS              SETC  '&ZMS "DETAIL",'                                00341200
&ZMS              SETC  '&ZMS OR "ENTRY".'                              00341300
                  MNOTE 8,' &ZMS '                                      00341400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00341500
.ZG80F            ANOP  ,                                               00341600
.*-------------------------------------------------------------------   00341700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00341800
.ZG81             ANOP  ,                                               00341900
&ZTLC             SETC 'LISTNUM'                                        00342000
                  AIF   ('&TYPE(1)' NE '&ZTLC').ZG133                   00342100
&XTYPE            SETC  'LISTNUM'   SET KEYWORD                         00342200
                  AIF   (N'&TYPE LE 1).ZG81A    CK NUM                  00342300
&ZMS              SETC  '"TYPE='                                        00342400
&ZMS              SETC  '&ZMS.&TYPE"'                                   00342500
&ZMS              SETC  '&ZMS "TYPE"'                                   00342600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00342700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00342800
.ZG81A            ANOP  ,                                               00342900
.*------------------------------------------------------------------    00343000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00343100
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00343200
.ZG81A0           AIF   (K'&STRLEVEL LE 0).ZG81A1  OK                   00343300
&ZCVAL            SETC '&ZCVAL STRLEVEL'        INCORRECT KEY USED      00343400
.ZG81A1           AIF   (K'&CLASSTYPE LE 0).ZG81A2  OK                  00343500
&ZCVAL            SETC '&ZCVAL CLASSTYPE'       INCORRECT KEY USED      00343600
.ZG81A2           AIF   (K'&CLASSLEVEL LE 0).ZG81A3  OK                 00343700
&ZCVAL            SETC '&ZCVAL CLASSLEVEL'      INCORRECT KEY USED      00343800
.ZG81A3           AIF   (K'&CLASSVAL LE 0).ZG81A4  OK                   00343900
&ZCVAL            SETC '&ZCVAL CLASSVAL'        INCORRECT KEY USED      00344000
.ZG81A4           AIF   (K'&ENTRYNAME LE 0).ZG81A5  OK                  00344100
&ZCVAL            SETC '&ZCVAL ENTRYNAME'       INCORRECT KEY USED      00344200
.ZG81A5           AIF   (K'&ENTRYID LE 0).ZG81A6  OK                    00344300
&ZCVAL            SETC '&ZCVAL ENTRYID'         INCORRECT KEY USED      00344400
.ZG81A6           AIF   (K'&EMCLEVEL LE 0).ZG81A7  OK                   00344500
&ZCVAL            SETC '&ZCVAL EMCLEVEL'        INCORRECT KEY USED      00344600
.ZG81A7           AIF   (K'&EQLEVEL LE 0).ZG81A8  OK                    00344700
&ZCVAL            SETC '&ZCVAL EQLEVEL'         INCORRECT KEY USED      00344800
.ZG81A8           AIF   (K'&CONIDVAL LE 0).ZG81A9  OK                   00344900
&ZCVAL            SETC '&ZCVAL CONIDVAL'        INCORRECT KEY USED      00345000
.ZG81A9           AIF   (K'&ZCVAL LE 0).ZG81A10  OK                     00345100
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00345200
&ZMS              SETC  '"TYPE'                                         00345300
&ZMS              SETC  '&ZMS.=&TYPE"'                                  00345400
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00345500
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00345600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00345700
.ZG81A10          ANOP  ,                                               00345800
.*----------------------------------------------------------------***   00345900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00346000
                  AIF   (N'&STRNAME LE 1).ZG83A  CK NUM                 00346100
&ZMS              SETC  '"STRNAME='                                     00346200
&ZMS              SETC  '&ZMS.&STRNAME"'                                00346300
&ZMS              SETC  '&ZMS "STRNAME"'                                00346400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00346500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00346600
.ZG83A            ANOP  ,                                               00346700
.*-------------------------------------------------------------------   00346800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00346900
&ZXSTRNAME        SETC  'INPUT'     SET IN/OUTPUT                       00347000
&XSTRNAME         SETC  '&STRNAME(1)'           SET XVARIABLE           00347100
                  AIF   (N'&STRNAME GT 1).ZG83B  MULTI                  00347200
&XSTRNAME         SETC  '&STRNAME'  SET XVARIABLE                       00347300
.ZG83B            AIF   (K'&STRNAME(1) GT 0).ZG83C                      00347400
&ZXSTRNAME        SETC  ''          RESET IN/OUTPUT                     00347500
&ZMS              SETC  ' '                                             00347600
&ZMS              SETC  '&ZMS "STRNAME" KEY AND ITS'                    00347700
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00347800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00347900
.ZG83C            ANOP  ,                                               00348000
.*-------------------------------------------------------------------   00348100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00348200
                  AIF   (K'&ZXSTRNAME LE 0).ZG83R  NOT I/O              00348300
                  AIF   ('&XSTRNAME'(1,1) NE '(').ZG83R                 00348400
&ZCGPR            SETC  '&XSTRNAME'(2,K'&XSTRNAME-2)                    00348500
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG83P                    00348600
                  AIF   (K'&ZCGPR GT 2).ZG83Q                           00348700
                  AIF   ('&ZCGPR' EQ '0').ZG83Q                         00348800
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00348900
                  AIF   (T'&ZCGPR NE 'N').ZG83Q  INVALID REG NAME       00349000
.ZG83P            ANOP  ,                                               00349100
                  AIF   (T'&ZCGPR NE 'N').ZG83R  NON NUMERIC            00349200
                  AIF   ('&ZCGPR' LT '2').ZG83Q                         00349300
                  AIF   ('&ZCGPR' LE '12').ZG83R                        00349400
.ZG83Q            ANOP  ,                                               00349500
&ZMS              SETC  '"STRNAME='                                     00349600
&ZMS              SETC  '&ZMS.&STRNAME"'                                00349700
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00349800
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00349900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00350000
.ZG83R            ANOP  ,                                               00350100
.*----------------------------------------------------------------***   00350200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00350300
                  AIF   (N'&STRDUMPID LE 1).ZG86A  CK NUM               00350400
&ZMS              SETC  '"STRDUMPID='                                   00350500
&ZMS              SETC  '&ZMS.&STRDUMPID"'                              00350600
&ZMS              SETC  '&ZMS "STRDUMPID"'                              00350700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00350800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00350900
.ZG86A            ANOP  ,                                               00351000
.*-------------------------------------------------------------------   00351100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00351200
&ZXSTRDUMPID      SETC  'INPUT'     SET IN/OUTPUT                       00351300
&XSTRDUMPID       SETC  '&STRDUMPID(1)'         SET XVARIABLE           00351400
                  AIF   (N'&STRDUMPID GT 1).ZG86B  MULTI                00351500
&XSTRDUMPID       SETC  '&STRDUMPID'            SET XVARIABLE           00351600
.ZG86B            AIF   (K'&STRDUMPID(1) GT 0).ZG86C                    00351700
&ZXSTRDUMPID      SETC  ''          RESET IN/OUTPUT                     00351800
&ZMS              SETC  ' '                                             00351900
&ZMS              SETC  '&ZMS "STRDUMPID" KEY AND ITS'                  00352000
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00352100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00352200
.ZG86C            ANOP  ,                                               00352300
.*-------------------------------------------------------------------   00352400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00352500
                  AIF   (K'&ZXSTRDUMPID LE 0).ZG86R  NOT I/O            00352600
                  AIF   ('&XSTRDUMPID'(1,1) NE '(').ZG86R               00352700
&ZCGPR            SETC  '&XSTRDUMPID'(2,K'&XSTRDUMPID-2)                00352800
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG86P                    00352900
                  AIF   (K'&ZCGPR GT 2).ZG86Q                           00353000
                  AIF   ('&ZCGPR' EQ '0').ZG86Q                         00353100
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00353200
                  AIF   (T'&ZCGPR NE 'N').ZG86Q  INVALID REG NAME       00353300
.ZG86P            ANOP  ,                                               00353400
                  AIF   (T'&ZCGPR NE 'N').ZG86R  NON NUMERIC            00353500
                  AIF   ('&ZCGPR' LT '2').ZG86Q                         00353600
                  AIF   ('&ZCGPR' LE '12').ZG86R                        00353700
.ZG86Q            ANOP  ,                                               00353800
&ZMS              SETC  '"STRDUMPID='                                   00353900
&ZMS              SETC  '&ZMS.&STRDUMPID"'                              00354000
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00354100
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00354200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00354300
.ZG86R            ANOP  ,                                               00354400
.*------------------------------------------------------------------    00354500
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00354600
&XLISTNUMLEVEL    SETC  ''          INITIALIZE XVARIABLE                00354700
.*-------------------------------------------------------------------   00354800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00354900
.ZG90             ANOP  ,                                               00355000
                  AIF   (K'&LISTNUMLEVEL(1) LE 0).ZG90A                 00355100
&ZTLC             SETC 'SUMMARY'                                        00355200
                  AIF   ('&LISTNUMLEVEL(1)' NE '&ZTLC').ZG97            00355300
&XLISTNUMLEVEL    SETC  'SUMMARY'   SET KEYWORD                         00355400
                  AIF   (N'&LISTNUMLEVEL LE 1).ZG90A  CK NUM            00355500
&ZMS              SETC  '"LISTNUMLEVEL='                                00355600
&ZMS              SETC  '&ZMS.&LISTNUMLEVEL"'                           00355700
&ZMS              SETC  '&ZMS "LISTNUMLEVEL"'                           00355800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00355900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00356000
.ZG90A            ANOP  ,                                               00356100
.*------------------------------------------------------------------    00356200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00356300
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00356400
.ZG90A0           AIF   (K'&LISTNUMVAL LE 0).ZG90A1  OK                 00356500
&ZCVAL            SETC '&ZCVAL LISTNUMVAL'      INCORRECT KEY USED      00356600
.ZG90A1           AIF   (K'&ENTRYKEY LE 0).ZG90A2  OK                   00356700
&ZCVAL            SETC '&ZCVAL ENTRYKEY'        INCORRECT KEY USED      00356800
.ZG90A2           AIF   (K'&STARTPOS LE 0).ZG90A3  OK                   00356900
&ZCVAL            SETC '&ZCVAL STARTPOS'        INCORRECT KEY USED      00357000
.ZG90A3           AIF   (K'&ENDPOS LE 0).ZG90A4  OK                     00357100
&ZCVAL            SETC '&ZCVAL ENDPOS'          INCORRECT KEY USED      00357200
.ZG90A4           AIF   (K'&ORDER LE 0).ZG90A5  OK                      00357300
&ZCVAL            SETC '&ZCVAL ORDER'           INCORRECT KEY USED      00357400
.ZG90A5           AIF   (K'&ADJUNCT LE 0).ZG90A6  OK                    00357500
&ZCVAL            SETC '&ZCVAL ADJUNCT'         INCORRECT KEY USED      00357600
.ZG90A6           AIF   (K'&ENTRYDATA LE 0).ZG90A7  OK                  00357700
&ZCVAL            SETC '&ZCVAL ENTRYDATA'       INCORRECT KEY USED      00357800
.ZG90A7           AIF   (K'&ZCVAL LE 0).ZG90A8  OK                      00357900
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00358000
&ZMS              SETC  '"LISTNUMLEVEL'                                 00358100
&ZMS              SETC  '&ZMS.=&LISTNUMLEVEL"'                          00358200
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00358300
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00358400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00358500
.ZG90A8           ANOP  ,                                               00358600
.*----------------------------------------------------------------***   00358700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00358800
                  AIF   (N'&STARTVAL LE 1).ZG92A  CK NUM                00358900
&ZMS              SETC  '"STARTVAL='                                    00359000
&ZMS              SETC  '&ZMS.&STARTVAL"'                               00359100
&ZMS              SETC  '&ZMS "STARTVAL"'                               00359200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00359300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00359400
.ZG92A            ANOP  ,                                               00359500
.*-------------------------------------------------------------------   00359600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00359700
&ZXSTARTVAL       SETC  'INPUT'     SET IN/OUTPUT                       00359800
&XSTARTVAL        SETC  'ALL'                                           00359900
                  AIF   (K'&STARTVAL(1) LE 0).ZG92B  PARM               00360000
&XSTARTVAL        SETC  '&STARTVAL(1)'          SET XVARIABLE           00360100
                  AIF   (N'&STARTVAL GT 1).ZG92B  MULTI                 00360200
&XSTARTVAL        SETC  '&STARTVAL'             SET XVARIABLE           00360300
.ZG92B            ANOP  ,                                               00360400
.*-------------------------------------------------------------------   00360500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00360600
                  AIF   (K'&ZXSTARTVAL LE 0).ZG92R  NOT I/O             00360700
         AIF   ('&XSTARTVAL' EQ 'ALL').ZG92R                            00360800
                  AIF   ('&XSTARTVAL'(1,1) NE '(').ZG92R                00360900
&ZCGPR            SETC  '&XSTARTVAL'(2,K'&XSTARTVAL-2)                  00361000
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG92P                    00361100
                  AIF   (K'&ZCGPR GT 2).ZG92Q                           00361200
                  AIF   ('&ZCGPR' EQ '0').ZG92Q                         00361300
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00361400
                  AIF   (T'&ZCGPR NE 'N').ZG92Q  INVALID REG NAME       00361500
.ZG92P            ANOP  ,                                               00361600
                  AIF   (T'&ZCGPR NE 'N').ZG92R  NON NUMERIC            00361700
                  AIF   ('&ZCGPR' LT '2').ZG92Q                         00361800
                  AIF   ('&ZCGPR' LE '12').ZG92R                        00361900
.ZG92Q            ANOP  ,                                               00362000
&ZMS              SETC  '"STARTVAL='                                    00362100
&ZMS              SETC  '&ZMS.&STARTVAL"'                               00362200
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00362300
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00362400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00362500
.ZG92R            ANOP  ,                                               00362600
.*----------------------------------------------------------------***   00362700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00362800
                  AIF   (N'&ENDVAL LE 1).ZG94A  CK NUM                  00362900
&ZMS              SETC  '"ENDVAL='                                      00363000
&ZMS              SETC  '&ZMS.&ENDVAL"'                                 00363100
&ZMS              SETC  '&ZMS "ENDVAL"'                                 00363200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00363300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00363400
.ZG94A            ANOP  ,                                               00363500
.*-------------------------------------------------------------------   00363600
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00363700
&XENDVAL          SETC  'STARTVAL'  SET DEFAULT                         00363800
                  AIF   (K'&ENDVAL(1) LE 0).ZG94C  PARM                 00363900
&XENDVAL          SETC  '&ENDVAL(1)'            SET XVARIABLE           00364000
                  AIF   (N'&ENDVAL GT 1).ZG94B  MULTI                   00364100
&XENDVAL          SETC  '&ENDVAL'   SET XVARIABLE                       00364200
.ZG94B            AIF   (K'&STARTVAL(1) GT 0).ZG94C  KEY                00364300
&ZMS              SETC  '"ENDVAL'                                       00364400
&ZMS              SETC  '&ZMS.=&ENDVAL"'                                00364500
&ZMS              SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                 00364600
&ZMS              SETC  '&ZMS '                                         00364700
&ZMS              SETC  '&ZMS "STARTVAL"'                               00364800
                  MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                    00364900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00365000
.ZG94C            ANOP  ,                                               00365100
&ZXENDVAL         SETC  'INPUT'     SET IN/OUTPUT                       00365200
.*-------------------------------------------------------------------   00365300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00365400
                  AIF   (K'&ZXENDVAL LE 0).ZG94R  NOT I/O               00365500
         AIF   ('&XENDVAL' EQ 'STARTVAL').ZG94R                         00365600
                  AIF   ('&XENDVAL'(1,1) NE '(').ZG94R                  00365700
&ZCGPR            SETC  '&XENDVAL'(2,K'&XENDVAL-2)                      00365800
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG94P                    00365900
                  AIF   (K'&ZCGPR GT 2).ZG94Q                           00366000
                  AIF   ('&ZCGPR' EQ '0').ZG94Q                         00366100
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00366200
                  AIF   (T'&ZCGPR NE 'N').ZG94Q  INVALID REG NAME       00366300
.ZG94P            ANOP  ,                                               00366400
                  AIF   (T'&ZCGPR NE 'N').ZG94R  NON NUMERIC            00366500
                  AIF   ('&ZCGPR' LT '2').ZG94Q                         00366600
                  AIF   ('&ZCGPR' LE '12').ZG94R                        00366700
.ZG94Q            ANOP  ,                                               00366800
&ZMS              SETC  '"ENDVAL='                                      00366900
&ZMS              SETC  '&ZMS.&ENDVAL"'                                 00367000
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00367100
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00367200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00367300
.ZG94R            ANOP  ,                                               00367400
.*-------------------------------------------------------------------   00367500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00367600
.ZG97             ANOP  ,                                               00367700
&ZTLC             SETC 'DETAIL'                                         00367800
                  AIF   ('&LISTNUMLEVEL(1)' NE '&ZTLC').ZG104           00367900
&XLISTNUMLEVEL    SETC  'DETAIL'    SET KEYWORD                         00368000
                  AIF   (N'&LISTNUMLEVEL LE 1).ZG97A  CK NUM            00368100
&ZMS              SETC  '"LISTNUMLEVEL='                                00368200
&ZMS              SETC  '&ZMS.&LISTNUMLEVEL"'                           00368300
&ZMS              SETC  '&ZMS "LISTNUMLEVEL"'                           00368400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00368500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00368600
.ZG97A            ANOP  ,                                               00368700
.*------------------------------------------------------------------    00368800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00368900
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00369000
.ZG97A0           AIF   (K'&LISTNUMVAL LE 0).ZG97A1  OK                 00369100
&ZCVAL            SETC '&ZCVAL LISTNUMVAL'      INCORRECT KEY USED      00369200
.ZG97A1           AIF   (K'&ENTRYKEY LE 0).ZG97A2  OK                   00369300
&ZCVAL            SETC '&ZCVAL ENTRYKEY'        INCORRECT KEY USED      00369400
.ZG97A2           AIF   (K'&STARTPOS LE 0).ZG97A3  OK                   00369500
&ZCVAL            SETC '&ZCVAL STARTPOS'        INCORRECT KEY USED      00369600
.ZG97A3           AIF   (K'&ENDPOS LE 0).ZG97A4  OK                     00369700
&ZCVAL            SETC '&ZCVAL ENDPOS'          INCORRECT KEY USED      00369800
.ZG97A4           AIF   (K'&ORDER LE 0).ZG97A5  OK                      00369900
&ZCVAL            SETC '&ZCVAL ORDER'           INCORRECT KEY USED      00370000
.ZG97A5           AIF   (K'&ADJUNCT LE 0).ZG97A6  OK                    00370100
&ZCVAL            SETC '&ZCVAL ADJUNCT'         INCORRECT KEY USED      00370200
.ZG97A6           AIF   (K'&ENTRYDATA LE 0).ZG97A7  OK                  00370300
&ZCVAL            SETC '&ZCVAL ENTRYDATA'       INCORRECT KEY USED      00370400
.ZG97A7           AIF   (K'&ZCVAL LE 0).ZG97A8  OK                      00370500
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00370600
&ZMS              SETC  '"LISTNUMLEVEL'                                 00370700
&ZMS              SETC  '&ZMS.=&LISTNUMLEVEL"'                          00370800
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00370900
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00371000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00371100
.ZG97A8           ANOP  ,                                               00371200
.*----------------------------------------------------------------***   00371300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00371400
                  AIF   (N'&STARTVAL LE 1).ZG99A  CK NUM                00371500
&ZMS              SETC  '"STARTVAL='                                    00371600
&ZMS              SETC  '&ZMS.&STARTVAL"'                               00371700
&ZMS              SETC  '&ZMS "STARTVAL"'                               00371800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00371900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00372000
.ZG99A            ANOP  ,                                               00372100
.*-------------------------------------------------------------------   00372200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00372300
&ZXSTARTVAL       SETC  'INPUT'     SET IN/OUTPUT                       00372400
&XSTARTVAL        SETC  'ALL'                                           00372500
                  AIF   (K'&STARTVAL(1) LE 0).ZG99B  PARM               00372600
&XSTARTVAL        SETC  '&STARTVAL(1)'          SET XVARIABLE           00372700
                  AIF   (N'&STARTVAL GT 1).ZG99B  MULTI                 00372800
&XSTARTVAL        SETC  '&STARTVAL'             SET XVARIABLE           00372900
.ZG99B            ANOP  ,                                               00373000
.*-------------------------------------------------------------------   00373100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00373200
                  AIF   (K'&ZXSTARTVAL LE 0).ZG99R  NOT I/O             00373300
         AIF   ('&XSTARTVAL' EQ 'ALL').ZG99R                            00373400
                  AIF   ('&XSTARTVAL'(1,1) NE '(').ZG99R                00373500
&ZCGPR            SETC  '&XSTARTVAL'(2,K'&XSTARTVAL-2)                  00373600
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG99P                    00373700
                  AIF   (K'&ZCGPR GT 2).ZG99Q                           00373800
                  AIF   ('&ZCGPR' EQ '0').ZG99Q                         00373900
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00374000
                  AIF   (T'&ZCGPR NE 'N').ZG99Q  INVALID REG NAME       00374100
.ZG99P            ANOP  ,                                               00374200
                  AIF   (T'&ZCGPR NE 'N').ZG99R  NON NUMERIC            00374300
                  AIF   ('&ZCGPR' LT '2').ZG99Q                         00374400
                  AIF   ('&ZCGPR' LE '12').ZG99R                        00374500
.ZG99Q            ANOP  ,                                               00374600
&ZMS              SETC  '"STARTVAL='                                    00374700
&ZMS              SETC  '&ZMS.&STARTVAL"'                               00374800
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00374900
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00375000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00375100
.ZG99R            ANOP  ,                                               00375200
.*----------------------------------------------------------------***   00375300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00375400
                  AIF   (N'&ENDVAL LE 1).ZG101A  CK NUM                 00375500
&ZMS              SETC  '"ENDVAL='                                      00375600
&ZMS              SETC  '&ZMS.&ENDVAL"'                                 00375700
&ZMS              SETC  '&ZMS "ENDVAL"'                                 00375800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00375900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00376000
.ZG101A           ANOP  ,                                               00376100
.*-------------------------------------------------------------------   00376200
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00376300
&XENDVAL          SETC  'STARTVAL'  SET DEFAULT                         00376400
                  AIF   (K'&ENDVAL(1) LE 0).ZG101C  PARM                00376500
&XENDVAL          SETC  '&ENDVAL(1)'            SET XVARIABLE           00376600
                  AIF   (N'&ENDVAL GT 1).ZG101B  MULTI                  00376700
&XENDVAL          SETC  '&ENDVAL'   SET XVARIABLE                       00376800
.ZG101B           AIF   (K'&STARTVAL(1) GT 0).ZG101C  KEY               00376900
&ZMS              SETC  '"ENDVAL'                                       00377000
&ZMS              SETC  '&ZMS.=&ENDVAL"'                                00377100
&ZMS              SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                 00377200
&ZMS              SETC  '&ZMS '                                         00377300
&ZMS              SETC  '&ZMS "STARTVAL"'                               00377400
                  MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                    00377500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00377600
.ZG101C           ANOP  ,                                               00377700
&ZXENDVAL         SETC  'INPUT'     SET IN/OUTPUT                       00377800
.*-------------------------------------------------------------------   00377900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00378000
                  AIF   (K'&ZXENDVAL LE 0).ZG101R  NOT I/O              00378100
         AIF   ('&XENDVAL' EQ 'STARTVAL').ZG101R                        00378200
                  AIF   ('&XENDVAL'(1,1) NE '(').ZG101R                 00378300
&ZCGPR            SETC  '&XENDVAL'(2,K'&XENDVAL-2)                      00378400
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG101P                   00378500
                  AIF   (K'&ZCGPR GT 2).ZG101Q                          00378600
                  AIF   ('&ZCGPR' EQ '0').ZG101Q                        00378700
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00378800
                  AIF   (T'&ZCGPR NE 'N').ZG101Q  INVALID REG NAME      00378900
.ZG101P           ANOP  ,                                               00379000
                  AIF   (T'&ZCGPR NE 'N').ZG101R  NON NUMERIC           00379100
                  AIF   ('&ZCGPR' LT '2').ZG101Q                        00379200
                  AIF   ('&ZCGPR' LE '12').ZG101R                       00379300
.ZG101Q           ANOP  ,                                               00379400
&ZMS              SETC  '"ENDVAL='                                      00379500
&ZMS              SETC  '&ZMS.&ENDVAL"'                                 00379600
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00379700
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00379800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00379900
.ZG101R           ANOP  ,                                               00380000
.*-------------------------------------------------------------------   00380100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00380200
.ZG104            ANOP  ,                                               00380300
&ZTLC             SETC 'ENTRY'                                          00380400
                  AIF   ('&LISTNUMLEVEL(1)' NE '&ZTLC').ZG132           00380500
&XLISTNUMLEVEL    SETC  'ENTRY'     SET KEYWORD                         00380600
                  AIF   (N'&LISTNUMLEVEL LE 1).ZG104A  CK NUM           00380700
&ZMS              SETC  '"LISTNUMLEVEL='                                00380800
&ZMS              SETC  '&ZMS.&LISTNUMLEVEL"'                           00380900
&ZMS              SETC  '&ZMS "LISTNUMLEVEL"'                           00381000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00381100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00381200
.ZG104A           ANOP  ,                                               00381300
.*------------------------------------------------------------------    00381400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00381500
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00381600
.ZG104A0          AIF   (K'&STARTVAL LE 0).ZG104A1  OK                  00381700
&ZCVAL            SETC '&ZCVAL STARTVAL'        INCORRECT KEY USED      00381800
.ZG104A1          AIF   (K'&ENDVAL LE 0).ZG104A2  OK                    00381900
&ZCVAL            SETC '&ZCVAL ENDVAL'          INCORRECT KEY USED      00382000
.ZG104A2          AIF   (K'&ZCVAL LE 0).ZG104A3  OK                     00382100
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00382200
&ZMS              SETC  '"LISTNUMLEVEL'                                 00382300
&ZMS              SETC  '&ZMS.=&LISTNUMLEVEL"'                          00382400
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00382500
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00382600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00382700
.ZG104A3          ANOP  ,                                               00382800
.*----------------------------------------------------------------***   00382900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00383000
                  AIF   (N'&LISTNUMVAL LE 1).ZG106A  CK NUM             00383100
&ZMS              SETC  '"LISTNUMVAL='                                  00383200
&ZMS              SETC  '&ZMS.&LISTNUMVAL"'                             00383300
&ZMS              SETC  '&ZMS "LISTNUMVAL"'                             00383400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00383500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00383600
.ZG106A           ANOP  ,                                               00383700
.*-------------------------------------------------------------------   00383800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00383900
&ZXLISTNUMVAL     SETC  'INPUT'     SET IN/OUTPUT                       00384000
&XLISTNUMVAL      SETC  '&LISTNUMVAL(1)'        SET XVARIABLE           00384100
                  AIF   (N'&LISTNUMVAL GT 1).ZG106B  MULTI              00384200
&XLISTNUMVAL      SETC  '&LISTNUMVAL'           SET XVARIABLE           00384300
.ZG106B           AIF   (K'&LISTNUMVAL(1) GT 0).ZG106C                  00384400
&ZXLISTNUMVAL     SETC  ''          RESET IN/OUTPUT                     00384500
&ZMS              SETC  ' '                                             00384600
&ZMS              SETC  '&ZMS "LISTNUMVAL" KEY AND ITS'                 00384700
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00384800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00384900
.ZG106C           ANOP  ,                                               00385000
.*-------------------------------------------------------------------   00385100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00385200
                  AIF   (K'&ZXLISTNUMVAL LE 0).ZG106R  NOT I/O          00385300
                  AIF   ('&XLISTNUMVAL'(1,1) NE '(').ZG106R             00385400
&ZCGPR            SETC  '&XLISTNUMVAL'(2,K'&XLISTNUMVAL-2)              00385500
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG106P                   00385600
                  AIF   (K'&ZCGPR GT 2).ZG106Q                          00385700
                  AIF   ('&ZCGPR' EQ '0').ZG106Q                        00385800
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00385900
                  AIF   (T'&ZCGPR NE 'N').ZG106Q  INVALID REG NAME      00386000
.ZG106P           ANOP  ,                                               00386100
                  AIF   (T'&ZCGPR NE 'N').ZG106R  NON NUMERIC           00386200
                  AIF   ('&ZCGPR' LT '2').ZG106Q                        00386300
                  AIF   ('&ZCGPR' LE '12').ZG106R                       00386400
.ZG106Q           ANOP  ,                                               00386500
&ZMS              SETC  '"LISTNUMVAL='                                  00386600
&ZMS              SETC  '&ZMS.&LISTNUMVAL"'                             00386700
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00386800
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00386900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00387000
.ZG106R           ANOP  ,                                               00387100
.*----------------------------------------------------------------***   00387200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00387300
                  AIF   (N'&ENTRYKEY LE 1).ZG109A  CK NUM               00387400
&ZMS              SETC  '"ENTRYKEY='                                    00387500
&ZMS              SETC  '&ZMS.&ENTRYKEY"'                               00387600
&ZMS              SETC  '&ZMS "ENTRYKEY"'                               00387700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00387800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00387900
.ZG109A           ANOP  ,                                               00388000
.*-------------------------------------------------------------------   00388100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00388200
&ZXENTRYKEY       SETC  'INPUT'     SET IN/OUTPUT                       00388300
&XENTRYKEY        SETC  'NO_KEY'                                        00388400
                  AIF   (K'&ENTRYKEY(1) LE 0).ZG109B  PARM              00388500
&XENTRYKEY        SETC  '&ENTRYKEY(1)'          SET XVARIABLE           00388600
                  AIF   (N'&ENTRYKEY GT 1).ZG109B  MULTI                00388700
&XENTRYKEY        SETC  '&ENTRYKEY'             SET XVARIABLE           00388800
.ZG109B           ANOP  ,                                               00388900
.*-------------------------------------------------------------------   00389000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00389100
                  AIF   (K'&ZXENTRYKEY LE 0).ZG109R  NOT I/O            00389200
         AIF   ('&XENTRYKEY' EQ 'NO_KEY').ZG109R                        00389300
                  AIF   ('&XENTRYKEY'(1,1) NE '(').ZG109R               00389400
&ZCGPR            SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)                  00389500
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG109P                   00389600
                  AIF   (K'&ZCGPR GT 2).ZG109Q                          00389700
                  AIF   ('&ZCGPR' EQ '0').ZG109Q                        00389800
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00389900
                  AIF   (T'&ZCGPR NE 'N').ZG109Q  INVALID REG NAME      00390000
.ZG109P           ANOP  ,                                               00390100
                  AIF   (T'&ZCGPR NE 'N').ZG109R  NON NUMERIC           00390200
                  AIF   ('&ZCGPR' LT '2').ZG109Q                        00390300
                  AIF   ('&ZCGPR' LE '12').ZG109R                       00390400
.ZG109Q           ANOP  ,                                               00390500
&ZMS              SETC  '"ENTRYKEY='                                    00390600
&ZMS              SETC  '&ZMS.&ENTRYKEY"'                               00390700
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00390800
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00390900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00391000
.ZG109R           ANOP  ,                                               00391100
.*----------------------------------------------------------------***   00391200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00391300
                  AIF   (N'&STARTPOS LE 1).ZG112A  CK NUM               00391400
&ZMS              SETC  '"STARTPOS='                                    00391500
&ZMS              SETC  '&ZMS.&STARTPOS"'                               00391600
&ZMS              SETC  '&ZMS "STARTPOS"'                               00391700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00391800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00391900
.ZG112A           ANOP  ,                                               00392000
.*-------------------------------------------------------------------   00392100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00392200
&ZXSTARTPOS       SETC  'INPUT'     SET IN/OUTPUT                       00392300
&XSTARTPOS        SETC  'ALL'                                           00392400
                  AIF   (K'&STARTPOS(1) LE 0).ZG112B  PARM              00392500
&XSTARTPOS        SETC  '&STARTPOS(1)'          SET XVARIABLE           00392600
                  AIF   (N'&STARTPOS GT 1).ZG112B  MULTI                00392700
&XSTARTPOS        SETC  '&STARTPOS'             SET XVARIABLE           00392800
.ZG112B           ANOP  ,                                               00392900
.*-------------------------------------------------------------------   00393000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00393100
                  AIF   (K'&ZXSTARTPOS LE 0).ZG112R  NOT I/O            00393200
         AIF   ('&XSTARTPOS' EQ 'ALL').ZG112R                           00393300
                  AIF   ('&XSTARTPOS'(1,1) NE '(').ZG112R               00393400
&ZCGPR            SETC  '&XSTARTPOS'(2,K'&XSTARTPOS-2)                  00393500
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG112P                   00393600
                  AIF   (K'&ZCGPR GT 2).ZG112Q                          00393700
                  AIF   ('&ZCGPR' EQ '0').ZG112Q                        00393800
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00393900
                  AIF   (T'&ZCGPR NE 'N').ZG112Q  INVALID REG NAME      00394000
.ZG112P           ANOP  ,                                               00394100
                  AIF   (T'&ZCGPR NE 'N').ZG112R  NON NUMERIC           00394200
                  AIF   ('&ZCGPR' LT '2').ZG112Q                        00394300
                  AIF   ('&ZCGPR' LE '12').ZG112R                       00394400
.ZG112Q           ANOP  ,                                               00394500
&ZMS              SETC  '"STARTPOS='                                    00394600
&ZMS              SETC  '&ZMS.&STARTPOS"'                               00394700
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00394800
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00394900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00395000
.ZG112R           ANOP  ,                                               00395100
.*----------------------------------------------------------------***   00395200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00395300
                  AIF   (N'&ENDPOS LE 1).ZG114A  CK NUM                 00395400
&ZMS              SETC  '"ENDPOS='                                      00395500
&ZMS              SETC  '&ZMS.&ENDPOS"'                                 00395600
&ZMS              SETC  '&ZMS "ENDPOS"'                                 00395700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00395800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00395900
.ZG114A           ANOP  ,                                               00396000
.*-------------------------------------------------------------------   00396100
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00396200
&XENDPOS          SETC  'STARTPOS'  SET DEFAULT                         00396300
                  AIF   (K'&ENDPOS(1) LE 0).ZG114C  PARM                00396400
&XENDPOS          SETC  '&ENDPOS(1)'            SET XVARIABLE           00396500
                  AIF   (N'&ENDPOS GT 1).ZG114B  MULTI                  00396600
&XENDPOS          SETC  '&ENDPOS'   SET XVARIABLE                       00396700
.ZG114B           AIF   (K'&STARTPOS(1) GT 0).ZG114C  KEY               00396800
&ZMS              SETC  '"ENDPOS'                                       00396900
&ZMS              SETC  '&ZMS.=&ENDPOS"'                                00397000
&ZMS              SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                 00397100
&ZMS              SETC  '&ZMS '                                         00397200
&ZMS              SETC  '&ZMS "STARTPOS"'                               00397300
                  MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                    00397400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00397500
.ZG114C           ANOP  ,                                               00397600
&ZXENDPOS         SETC  'INPUT'     SET IN/OUTPUT                       00397700
.*-------------------------------------------------------------------   00397800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00397900
                  AIF   (K'&ZXENDPOS LE 0).ZG114R  NOT I/O              00398000
         AIF   ('&XENDPOS' EQ 'STARTPOS').ZG114R                        00398100
                  AIF   ('&XENDPOS'(1,1) NE '(').ZG114R                 00398200
&ZCGPR            SETC  '&XENDPOS'(2,K'&XENDPOS-2)                      00398300
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG114P                   00398400
                  AIF   (K'&ZCGPR GT 2).ZG114Q                          00398500
                  AIF   ('&ZCGPR' EQ '0').ZG114Q                        00398600
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00398700
                  AIF   (T'&ZCGPR NE 'N').ZG114Q  INVALID REG NAME      00398800
.ZG114P           ANOP  ,                                               00398900
                  AIF   (T'&ZCGPR NE 'N').ZG114R  NON NUMERIC           00399000
                  AIF   ('&ZCGPR' LT '2').ZG114Q                        00399100
                  AIF   ('&ZCGPR' LE '12').ZG114R                       00399200
.ZG114Q           ANOP  ,                                               00399300
&ZMS              SETC  '"ENDPOS='                                      00399400
&ZMS              SETC  '&ZMS.&ENDPOS"'                                 00399500
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00399600
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00399700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00399800
.ZG114R           ANOP  ,                                               00399900
.*----------------------------------------------------------------***   00400000
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00400100
                  AIF   (N'&ORDER LE 1).ZG118A  CK NUM                  00400200
&ZMS              SETC  '"ORDER='                                       00400300
&ZMS              SETC  '&ZMS.&ORDER"'                                  00400400
&ZMS              SETC  '&ZMS "ORDER"'                                  00400500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00400600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00400700
.ZG118A           ANOP  ,                                               00400800
.*-------------------------------------------------------------------   00400900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00401000
&XORDER           SETC  ''          INITIALIZE XVARIABLE                00401100
.ZG119A   AIF   ('&ORDER(1)' NE 'HEAD').ZG120A                          00401200
&XORDER           SETC  'HEAD'      SET KEYWORD                         00401300
.*-------------------------------------------------------------------   00401400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00401500
.ZG120A   AIF   ('&ORDER(1)' NE 'TAIL').ZG121A                          00401600
&XORDER           SETC  'TAIL'      SET KEYWORD                         00401700
.*-------------------------------------------------------------------   00401800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00401900
.ZG121A           AIF   (K'&XORDER GT 0).ZG121C  KEYWORD                00402000
                  AIF   (K'&ORDER(1) LE 0).ZG121B                       00402100
&ZMS              SETC  '"ORDER='                                       00402200
&ZMS              SETC  '&ZMS.&ORDER"'                                  00402300
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00402400
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00402500
&ZMS              SETC  '&ZMS "HEAD"'                                   00402600
&ZMS              SETC  '&ZMS OR "TAIL".'                               00402700
                  MNOTE 8,' &ZMS '                                      00402800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00402900
.ZG121B           ANOP  ,                                               00403000
&XORDER           SETC  'HEAD'      SET DEFAULT KEYWORD                 00403100
.ZG121C           ANOP  ,                                               00403200
&ZXORDER          SETC  'INPUT'     SET IN/OUTPUT                       00403300
.*----------------------------------------------------------------***   00403400
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00403500
                  AIF   (N'&ADJUNCT LE 1).ZG123A  CK NUM                00403600
&ZMS              SETC  '"ADJUNCT='                                     00403700
&ZMS              SETC  '&ZMS.&ADJUNCT"'                                00403800
&ZMS              SETC  '&ZMS "ADJUNCT"'                                00403900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00404000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00404100
.ZG123A           ANOP  ,                                               00404200
.*-------------------------------------------------------------------   00404300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00404400
&XADJUNCT         SETC  ''          INITIALIZE XVARIABLE                00404500
.ZG124A   AIF   ('&ADJUNCT(1)' NE 'NO').ZG125A                          00404600
&XADJUNCT         SETC  'NO'        SET KEYWORD                         00404700
.*-------------------------------------------------------------------   00404800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00404900
.ZG125A   AIF   ('&ADJUNCT(1)' NE 'YES').ZG126A                         00405000
&XADJUNCT         SETC  'YES'       SET KEYWORD                         00405100
.*-------------------------------------------------------------------   00405200
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00405300
.ZG126A           AIF   (K'&XADJUNCT GT 0).ZG126C  KEYWORD              00405400
                  AIF   (K'&ADJUNCT(1) LE 0).ZG126B                     00405500
&ZMS              SETC  '"ADJUNCT='                                     00405600
&ZMS              SETC  '&ZMS.&ADJUNCT"'                                00405700
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00405800
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00405900
&ZMS              SETC  '&ZMS "NO"'                                     00406000
&ZMS              SETC  '&ZMS OR "YES".'                                00406100
                  MNOTE 8,' &ZMS '                                      00406200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00406300
.ZG126B           ANOP  ,                                               00406400
&XADJUNCT         SETC  'NO'        SET DEFAULT KEYWORD                 00406500
.ZG126C           ANOP  ,                                               00406600
&ZXADJUNCT        SETC  'INPUT'     SET IN/OUTPUT                       00406700
.*----------------------------------------------------------------***   00406800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00406900
                  AIF   (N'&ENTRYDATA LE 1).ZG128A  CK NUM              00407000
&ZMS              SETC  '"ENTRYDATA='                                   00407100
&ZMS              SETC  '&ZMS.&ENTRYDATA"'                              00407200
&ZMS              SETC  '&ZMS "ENTRYDATA"'                              00407300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00407400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00407500
.ZG128A           ANOP  ,                                               00407600
.*-------------------------------------------------------------------   00407700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00407800
&XENTRYDATA       SETC  ''          INITIALIZE XVARIABLE                00407900
.ZG129A   AIF   ('&ENTRYDATA(1)' NE 'NO').ZG130A                        00408000
&XENTRYDATA       SETC  'NO'        SET KEYWORD                         00408100
.*-------------------------------------------------------------------   00408200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00408300
.ZG130A   AIF   ('&ENTRYDATA(1)' NE 'YES').ZG131A                       00408400
&XENTRYDATA       SETC  'YES'       SET KEYWORD                         00408500
.*-------------------------------------------------------------------   00408600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00408700
.ZG131A           AIF   (K'&XENTRYDATA GT 0).ZG131C  KEYWORD            00408800
                  AIF   (K'&ENTRYDATA(1) LE 0).ZG131B                   00408900
&ZMS              SETC  '"ENTRYDATA='                                   00409000
&ZMS              SETC  '&ZMS.&ENTRYDATA"'                              00409100
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00409200
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00409300
&ZMS              SETC  '&ZMS "NO"'                                     00409400
&ZMS              SETC  '&ZMS OR "YES".'                                00409500
                  MNOTE 8,' &ZMS '                                      00409600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00409700
.ZG131B           ANOP  ,                                               00409800
&XENTRYDATA       SETC  'NO'        SET DEFAULT KEYWORD                 00409900
.ZG131C           ANOP  ,                                               00410000
&ZXENTRYDATA      SETC  'INPUT'     SET IN/OUTPUT                       00410100
.*------------------------------------------------------------------    00410200
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00410300
.ZG132            ANOP  ,                                               00410400
&ZXLISTNUMLEVEL   SETC  'INPUT'     SET IN/OUTPUT                       00410500
                  AIF   (K'&XLISTNUMLEVEL GT 0).ZG132E  VALID ARG       00410600
                  AIF   (T'&LISTNUMLEVEL EQ 'O').ZG132D  OMITTED        00410700
&ZASYSLNDX        SETA  0                                               00410800
.ZG132A           ANOP  ,           POSITIONAL MACRO KEY                00410900
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00411000
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG132C               00411100
&ZTLC             SETC 'LISTNUMLEVEL'                                   00411200
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG132A      00411300
.ZG132B           ANOP  ,                                               00411400
&ZXLISTNUMLEVEL   SETC  ''          RESET IN/OUTPUT                     00411500
&ZMS              SETC  'THE "LISTNUMLEVEL" KEY'                        00411600
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00411700
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00411800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00411900
                  AGO   .ZG132E                                         00412000
.ZG132C           ANOP  ,                                               00412100
&ZXLISTNUMLEVEL   SETC  ''          RESET IN/OUTPUT                     00412200
&ZMS              SETC  '"LISTNUMLEVEL='                                00412300
&ZMS              SETC  '&ZMS.&LISTNUMLEVEL"'                           00412400
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00412500
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00412600
&ZMS              SETC  '&ZMS "SUMMARY",'                               00412700
&ZMS              SETC  '&ZMS "DETAIL",'                                00412800
&ZMS              SETC  '&ZMS OR "ENTRY".'                              00412900
                  MNOTE 8,' &ZMS '                                      00413000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00413100
                  AGO   .ZG132E                                         00413200
.ZG132D           ANOP  ,                                               00413300
&XLISTNUMLEVEL    SETC  'SUMMARY'   SET DEFAULT KEYWORD                 00413400
.ZG132E           ANOP  ,                                               00413500
.*------------------------------------------------------------------    00413600
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00413700
                  AIF   (K'&LISTNUMLEVEL(1) GT 0).ZG132F  PARM          00413800
&XLISTNUMLEVEL    SETC  ''          ENSURE NULL KEYWORD                 00413900
&ZXLISTNUMLEVEL   SETC  ''          RESET IN/OUTPUT                     00414000
&ZMS              SETC  'THE'                                           00414100
&ZMS              SETC  '&ZMS "LISTNUMLEVEL" KEY AND ITS'               00414200
&ZMS              SETC  '&ZMS ARGUMENT ARE REQUIRED.'                   00414300
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00414400
&ZMS              SETC  '&ZMS "SUMMARY",'                               00414500
&ZMS              SETC  '&ZMS "DETAIL",'                                00414600
&ZMS              SETC  '&ZMS OR "ENTRY".'                              00414700
                  MNOTE 8,' &ZMS '                                      00414800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00414900
.ZG132F           ANOP  ,                                               00415000
.*-------------------------------------------------------------------   00415100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00415200
.ZG133            ANOP  ,                                               00415300
&ZTLC             SETC 'LOCKENTRIES'                                    00415400
                  AIF   ('&TYPE(1)' NE '&ZTLC').ZG146                   00415500
&XTYPE            SETC  'LOCKENTRIES'           SET KEYWORD             00415600
                  AIF   (N'&TYPE LE 1).ZG133A   CK NUM                  00415700
&ZMS              SETC  '"TYPE='                                        00415800
&ZMS              SETC  '&ZMS.&TYPE"'                                   00415900
&ZMS              SETC  '&ZMS "TYPE"'                                   00416000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00416100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00416200
.ZG133A           ANOP  ,                                               00416300
.*------------------------------------------------------------------    00416400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00416500
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00416600
.ZG133A0          AIF   (K'&STRLEVEL LE 0).ZG133A1  OK                  00416700
&ZCVAL            SETC '&ZCVAL STRLEVEL'        INCORRECT KEY USED      00416800
.ZG133A1          AIF   (K'&CLASSTYPE LE 0).ZG133A2  OK                 00416900
&ZCVAL            SETC '&ZCVAL CLASSTYPE'       INCORRECT KEY USED      00417000
.ZG133A2          AIF   (K'&CLASSLEVEL LE 0).ZG133A3  OK                00417100
&ZCVAL            SETC '&ZCVAL CLASSLEVEL'      INCORRECT KEY USED      00417200
.ZG133A3          AIF   (K'&CLASSVAL LE 0).ZG133A4  OK                  00417300
&ZCVAL            SETC '&ZCVAL CLASSVAL'        INCORRECT KEY USED      00417400
.ZG133A4          AIF   (K'&STARTPOS LE 0).ZG133A5  OK                  00417500
&ZCVAL            SETC '&ZCVAL STARTPOS'        INCORRECT KEY USED      00417600
.ZG133A5          AIF   (K'&ENDPOS LE 0).ZG133A6  OK                    00417700
&ZCVAL            SETC '&ZCVAL ENDPOS'          INCORRECT KEY USED      00417800
.ZG133A6          AIF   (K'&ORDER LE 0).ZG133A7  OK                     00417900
&ZCVAL            SETC '&ZCVAL ORDER'           INCORRECT KEY USED      00418000
.ZG133A7          AIF   (K'&ADJUNCT LE 0).ZG133A8  OK                   00418100
&ZCVAL            SETC '&ZCVAL ADJUNCT'         INCORRECT KEY USED      00418200
.ZG133A8          AIF   (K'&ENTRYDATA LE 0).ZG133A9  OK                 00418300
&ZCVAL            SETC '&ZCVAL ENTRYDATA'       INCORRECT KEY USED      00418400
.ZG133A9          AIF   (K'&LISTNUMLEVEL LE 0).ZG133A10  OK             00418500
&ZCVAL            SETC '&ZCVAL LISTNUMLEVEL'    INCORRECT KEY USED      00418600
.ZG133A10         AIF   (K'&LISTNUMVAL LE 0).ZG133A11  OK               00418700
&ZCVAL            SETC '&ZCVAL LISTNUMVAL'      INCORRECT KEY USED      00418800
.ZG133A11         AIF   (K'&ENTRYKEY LE 0).ZG133A12  OK                 00418900
&ZCVAL            SETC '&ZCVAL ENTRYKEY'        INCORRECT KEY USED      00419000
.ZG133A12         AIF   (K'&ENTRYNAME LE 0).ZG133A13  OK                00419100
&ZCVAL            SETC '&ZCVAL ENTRYNAME'       INCORRECT KEY USED      00419200
.ZG133A13         AIF   (K'&ENTRYID LE 0).ZG133A14  OK                  00419300
&ZCVAL            SETC '&ZCVAL ENTRYID'         INCORRECT KEY USED      00419400
.ZG133A14         AIF   (K'&EMCLEVEL LE 0).ZG133A15  OK                 00419500
&ZCVAL            SETC '&ZCVAL EMCLEVEL'        INCORRECT KEY USED      00419600
.ZG133A15         AIF   (K'&EQLEVEL LE 0).ZG133A16  OK                  00419700
&ZCVAL            SETC '&ZCVAL EQLEVEL'         INCORRECT KEY USED      00419800
.ZG133A16         AIF   (K'&CONIDVAL LE 0).ZG133A17  OK                 00419900
&ZCVAL            SETC '&ZCVAL CONIDVAL'        INCORRECT KEY USED      00420000
.ZG133A17         AIF   (K'&ZCVAL LE 0).ZG133A18  OK                    00420100
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00420200
&ZMS              SETC  '"TYPE'                                         00420300
&ZMS              SETC  '&ZMS.=&TYPE"'                                  00420400
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00420500
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00420600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00420700
.ZG133A18         ANOP  ,                                               00420800
.*----------------------------------------------------------------***   00420900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00421000
                  AIF   (N'&STRNAME LE 1).ZG135A  CK NUM                00421100
&ZMS              SETC  '"STRNAME='                                     00421200
&ZMS              SETC  '&ZMS.&STRNAME"'                                00421300
&ZMS              SETC  '&ZMS "STRNAME"'                                00421400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00421500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00421600
.ZG135A           ANOP  ,                                               00421700
.*-------------------------------------------------------------------   00421800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00421900
&ZXSTRNAME        SETC  'INPUT'     SET IN/OUTPUT                       00422000
&XSTRNAME         SETC  '&STRNAME(1)'           SET XVARIABLE           00422100
                  AIF   (N'&STRNAME GT 1).ZG135B  MULTI                 00422200
&XSTRNAME         SETC  '&STRNAME'  SET XVARIABLE                       00422300
.ZG135B           AIF   (K'&STRNAME(1) GT 0).ZG135C                     00422400
&ZXSTRNAME        SETC  ''          RESET IN/OUTPUT                     00422500
&ZMS              SETC  ' '                                             00422600
&ZMS              SETC  '&ZMS "STRNAME" KEY AND ITS'                    00422700
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00422800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00422900
.ZG135C           ANOP  ,                                               00423000
.*-------------------------------------------------------------------   00423100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00423200
                  AIF   (K'&ZXSTRNAME LE 0).ZG135R  NOT I/O             00423300
                  AIF   ('&XSTRNAME'(1,1) NE '(').ZG135R                00423400
&ZCGPR            SETC  '&XSTRNAME'(2,K'&XSTRNAME-2)                    00423500
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG135P                   00423600
                  AIF   (K'&ZCGPR GT 2).ZG135Q                          00423700
                  AIF   ('&ZCGPR' EQ '0').ZG135Q                        00423800
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00423900
                  AIF   (T'&ZCGPR NE 'N').ZG135Q  INVALID REG NAME      00424000
.ZG135P           ANOP  ,                                               00424100
                  AIF   (T'&ZCGPR NE 'N').ZG135R  NON NUMERIC           00424200
                  AIF   ('&ZCGPR' LT '2').ZG135Q                        00424300
                  AIF   ('&ZCGPR' LE '12').ZG135R                       00424400
.ZG135Q           ANOP  ,                                               00424500
&ZMS              SETC  '"STRNAME='                                     00424600
&ZMS              SETC  '&ZMS.&STRNAME"'                                00424700
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00424800
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00424900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00425000
.ZG135R           ANOP  ,                                               00425100
.*----------------------------------------------------------------***   00425200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00425300
                  AIF   (N'&STRDUMPID LE 1).ZG138A  CK NUM              00425400
&ZMS              SETC  '"STRDUMPID='                                   00425500
&ZMS              SETC  '&ZMS.&STRDUMPID"'                              00425600
&ZMS              SETC  '&ZMS "STRDUMPID"'                              00425700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00425800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00425900
.ZG138A           ANOP  ,                                               00426000
.*-------------------------------------------------------------------   00426100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00426200
&ZXSTRDUMPID      SETC  'INPUT'     SET IN/OUTPUT                       00426300
&XSTRDUMPID       SETC  '&STRDUMPID(1)'         SET XVARIABLE           00426400
                  AIF   (N'&STRDUMPID GT 1).ZG138B  MULTI               00426500
&XSTRDUMPID       SETC  '&STRDUMPID'            SET XVARIABLE           00426600
.ZG138B           AIF   (K'&STRDUMPID(1) GT 0).ZG138C                   00426700
&ZXSTRDUMPID      SETC  ''          RESET IN/OUTPUT                     00426800
&ZMS              SETC  ' '                                             00426900
&ZMS              SETC  '&ZMS "STRDUMPID" KEY AND ITS'                  00427000
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00427100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00427200
.ZG138C           ANOP  ,                                               00427300
.*-------------------------------------------------------------------   00427400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00427500
                  AIF   (K'&ZXSTRDUMPID LE 0).ZG138R  NOT I/O           00427600
                  AIF   ('&XSTRDUMPID'(1,1) NE '(').ZG138R              00427700
&ZCGPR            SETC  '&XSTRDUMPID'(2,K'&XSTRDUMPID-2)                00427800
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG138P                   00427900
                  AIF   (K'&ZCGPR GT 2).ZG138Q                          00428000
                  AIF   ('&ZCGPR' EQ '0').ZG138Q                        00428100
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00428200
                  AIF   (T'&ZCGPR NE 'N').ZG138Q  INVALID REG NAME      00428300
.ZG138P           ANOP  ,                                               00428400
                  AIF   (T'&ZCGPR NE 'N').ZG138R  NON NUMERIC           00428500
                  AIF   ('&ZCGPR' LT '2').ZG138Q                        00428600
                  AIF   ('&ZCGPR' LE '12').ZG138R                       00428700
.ZG138Q           ANOP  ,                                               00428800
&ZMS              SETC  '"STRDUMPID='                                   00428900
&ZMS              SETC  '&ZMS.&STRDUMPID"'                              00429000
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00429100
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00429200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00429300
.ZG138R           ANOP  ,                                               00429400
.*----------------------------------------------------------------***   00429500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00429600
                  AIF   (N'&STARTVAL LE 1).ZG141A  CK NUM               00429700
&ZMS              SETC  '"STARTVAL='                                    00429800
&ZMS              SETC  '&ZMS.&STARTVAL"'                               00429900
&ZMS              SETC  '&ZMS "STARTVAL"'                               00430000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00430100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00430200
.ZG141A           ANOP  ,                                               00430300
.*-------------------------------------------------------------------   00430400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00430500
&ZXSTARTVAL       SETC  'INPUT'     SET IN/OUTPUT                       00430600
&XSTARTVAL        SETC  'ALL'                                           00430700
                  AIF   (K'&STARTVAL(1) LE 0).ZG141B  PARM              00430800
&XSTARTVAL        SETC  '&STARTVAL(1)'          SET XVARIABLE           00430900
                  AIF   (N'&STARTVAL GT 1).ZG141B  MULTI                00431000
&XSTARTVAL        SETC  '&STARTVAL'             SET XVARIABLE           00431100
.ZG141B           ANOP  ,                                               00431200
.*-------------------------------------------------------------------   00431300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00431400
                  AIF   (K'&ZXSTARTVAL LE 0).ZG141R  NOT I/O            00431500
         AIF   ('&XSTARTVAL' EQ 'ALL').ZG141R                           00431600
                  AIF   ('&XSTARTVAL'(1,1) NE '(').ZG141R               00431700
&ZCGPR            SETC  '&XSTARTVAL'(2,K'&XSTARTVAL-2)                  00431800
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG141P                   00431900
                  AIF   (K'&ZCGPR GT 2).ZG141Q                          00432000
                  AIF   ('&ZCGPR' EQ '0').ZG141Q                        00432100
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00432200
                  AIF   (T'&ZCGPR NE 'N').ZG141Q  INVALID REG NAME      00432300
.ZG141P           ANOP  ,                                               00432400
                  AIF   (T'&ZCGPR NE 'N').ZG141R  NON NUMERIC           00432500
                  AIF   ('&ZCGPR' LT '2').ZG141Q                        00432600
                  AIF   ('&ZCGPR' LE '12').ZG141R                       00432700
.ZG141Q           ANOP  ,                                               00432800
&ZMS              SETC  '"STARTVAL='                                    00432900
&ZMS              SETC  '&ZMS.&STARTVAL"'                               00433000
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00433100
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00433200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00433300
.ZG141R           ANOP  ,                                               00433400
.*----------------------------------------------------------------***   00433500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00433600
                  AIF   (N'&ENDVAL LE 1).ZG143A  CK NUM                 00433700
&ZMS              SETC  '"ENDVAL='                                      00433800
&ZMS              SETC  '&ZMS.&ENDVAL"'                                 00433900
&ZMS              SETC  '&ZMS "ENDVAL"'                                 00434000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00434100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00434200
.ZG143A           ANOP  ,                                               00434300
.*-------------------------------------------------------------------   00434400
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00434500
&XENDVAL          SETC  'STARTVAL'  SET DEFAULT                         00434600
                  AIF   (K'&ENDVAL(1) LE 0).ZG143C  PARM                00434700
&XENDVAL          SETC  '&ENDVAL(1)'            SET XVARIABLE           00434800
                  AIF   (N'&ENDVAL GT 1).ZG143B  MULTI                  00434900
&XENDVAL          SETC  '&ENDVAL'   SET XVARIABLE                       00435000
.ZG143B           AIF   (K'&STARTVAL(1) GT 0).ZG143C  KEY               00435100
&ZMS              SETC  '"ENDVAL'                                       00435200
&ZMS              SETC  '&ZMS.=&ENDVAL"'                                00435300
&ZMS              SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                 00435400
&ZMS              SETC  '&ZMS '                                         00435500
&ZMS              SETC  '&ZMS "STARTVAL"'                               00435600
                  MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                    00435700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00435800
.ZG143C           ANOP  ,                                               00435900
&ZXENDVAL         SETC  'INPUT'     SET IN/OUTPUT                       00436000
.*-------------------------------------------------------------------   00436100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00436200
                  AIF   (K'&ZXENDVAL LE 0).ZG143R  NOT I/O              00436300
         AIF   ('&XENDVAL' EQ 'STARTVAL').ZG143R                        00436400
                  AIF   ('&XENDVAL'(1,1) NE '(').ZG143R                 00436500
&ZCGPR            SETC  '&XENDVAL'(2,K'&XENDVAL-2)                      00436600
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG143P                   00436700
                  AIF   (K'&ZCGPR GT 2).ZG143Q                          00436800
                  AIF   ('&ZCGPR' EQ '0').ZG143Q                        00436900
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00437000
                  AIF   (T'&ZCGPR NE 'N').ZG143Q  INVALID REG NAME      00437100
.ZG143P           ANOP  ,                                               00437200
                  AIF   (T'&ZCGPR NE 'N').ZG143R  NON NUMERIC           00437300
                  AIF   ('&ZCGPR' LT '2').ZG143Q                        00437400
                  AIF   ('&ZCGPR' LE '12').ZG143R                       00437500
.ZG143Q           ANOP  ,                                               00437600
&ZMS              SETC  '"ENDVAL='                                      00437700
&ZMS              SETC  '&ZMS.&ENDVAL"'                                 00437800
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00437900
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00438000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00438100
.ZG143R           ANOP  ,                                               00438200
.*-------------------------------------------------------------------   00438300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00438400
.ZG146            ANOP  ,                                               00438500
&ZTLC             SETC 'USERCNTLS'                                      00438600
                  AIF   ('&TYPE(1)' NE '&ZTLC').ZG159                   00438700
&XTYPE            SETC  'USERCNTLS'             SET KEYWORD             00438800
                  AIF   (N'&TYPE LE 1).ZG146A   CK NUM                  00438900
&ZMS              SETC  '"TYPE='                                        00439000
&ZMS              SETC  '&ZMS.&TYPE"'                                   00439100
&ZMS              SETC  '&ZMS "TYPE"'                                   00439200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00439300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00439400
.ZG146A           ANOP  ,                                               00439500
.*------------------------------------------------------------------    00439600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00439700
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00439800
.ZG146A0          AIF   (K'&STRLEVEL LE 0).ZG146A1  OK                  00439900
&ZCVAL            SETC '&ZCVAL STRLEVEL'        INCORRECT KEY USED      00440000
.ZG146A1          AIF   (K'&CLASSTYPE LE 0).ZG146A2  OK                 00440100
&ZCVAL            SETC '&ZCVAL CLASSTYPE'       INCORRECT KEY USED      00440200
.ZG146A2          AIF   (K'&CLASSLEVEL LE 0).ZG146A3  OK                00440300
&ZCVAL            SETC '&ZCVAL CLASSLEVEL'      INCORRECT KEY USED      00440400
.ZG146A3          AIF   (K'&CLASSVAL LE 0).ZG146A4  OK                  00440500
&ZCVAL            SETC '&ZCVAL CLASSVAL'        INCORRECT KEY USED      00440600
.ZG146A4          AIF   (K'&STARTPOS LE 0).ZG146A5  OK                  00440700
&ZCVAL            SETC '&ZCVAL STARTPOS'        INCORRECT KEY USED      00440800
.ZG146A5          AIF   (K'&ENDPOS LE 0).ZG146A6  OK                    00440900
&ZCVAL            SETC '&ZCVAL ENDPOS'          INCORRECT KEY USED      00441000
.ZG146A6          AIF   (K'&ORDER LE 0).ZG146A7  OK                     00441100
&ZCVAL            SETC '&ZCVAL ORDER'           INCORRECT KEY USED      00441200
.ZG146A7          AIF   (K'&ADJUNCT LE 0).ZG146A8  OK                   00441300
&ZCVAL            SETC '&ZCVAL ADJUNCT'         INCORRECT KEY USED      00441400
.ZG146A8          AIF   (K'&ENTRYDATA LE 0).ZG146A9  OK                 00441500
&ZCVAL            SETC '&ZCVAL ENTRYDATA'       INCORRECT KEY USED      00441600
.ZG146A9          AIF   (K'&LISTNUMLEVEL LE 0).ZG146A10  OK             00441700
&ZCVAL            SETC '&ZCVAL LISTNUMLEVEL'    INCORRECT KEY USED      00441800
.ZG146A10         AIF   (K'&LISTNUMVAL LE 0).ZG146A11  OK               00441900
&ZCVAL            SETC '&ZCVAL LISTNUMVAL'      INCORRECT KEY USED      00442000
.ZG146A11         AIF   (K'&ENTRYKEY LE 0).ZG146A12  OK                 00442100
&ZCVAL            SETC '&ZCVAL ENTRYKEY'        INCORRECT KEY USED      00442200
.ZG146A12         AIF   (K'&ENTRYNAME LE 0).ZG146A13  OK                00442300
&ZCVAL            SETC '&ZCVAL ENTRYNAME'       INCORRECT KEY USED      00442400
.ZG146A13         AIF   (K'&ENTRYID LE 0).ZG146A14  OK                  00442500
&ZCVAL            SETC '&ZCVAL ENTRYID'         INCORRECT KEY USED      00442600
.ZG146A14         AIF   (K'&EMCLEVEL LE 0).ZG146A15  OK                 00442700
&ZCVAL            SETC '&ZCVAL EMCLEVEL'        INCORRECT KEY USED      00442800
.ZG146A15         AIF   (K'&EQLEVEL LE 0).ZG146A16  OK                  00442900
&ZCVAL            SETC '&ZCVAL EQLEVEL'         INCORRECT KEY USED      00443000
.ZG146A16         AIF   (K'&CONIDVAL LE 0).ZG146A17  OK                 00443100
&ZCVAL            SETC '&ZCVAL CONIDVAL'        INCORRECT KEY USED      00443200
.ZG146A17         AIF   (K'&ZCVAL LE 0).ZG146A18  OK                    00443300
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00443400
&ZMS              SETC  '"TYPE'                                         00443500
&ZMS              SETC  '&ZMS.=&TYPE"'                                  00443600
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00443700
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00443800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00443900
.ZG146A18         ANOP  ,                                               00444000
.*----------------------------------------------------------------***   00444100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00444200
                  AIF   (N'&STRNAME LE 1).ZG148A  CK NUM                00444300
&ZMS              SETC  '"STRNAME='                                     00444400
&ZMS              SETC  '&ZMS.&STRNAME"'                                00444500
&ZMS              SETC  '&ZMS "STRNAME"'                                00444600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00444700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00444800
.ZG148A           ANOP  ,                                               00444900
.*-------------------------------------------------------------------   00445000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00445100
&ZXSTRNAME        SETC  'INPUT'     SET IN/OUTPUT                       00445200
&XSTRNAME         SETC  '&STRNAME(1)'           SET XVARIABLE           00445300
                  AIF   (N'&STRNAME GT 1).ZG148B  MULTI                 00445400
&XSTRNAME         SETC  '&STRNAME'  SET XVARIABLE                       00445500
.ZG148B           AIF   (K'&STRNAME(1) GT 0).ZG148C                     00445600
&ZXSTRNAME        SETC  ''          RESET IN/OUTPUT                     00445700
&ZMS              SETC  ' '                                             00445800
&ZMS              SETC  '&ZMS "STRNAME" KEY AND ITS'                    00445900
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00446000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00446100
.ZG148C           ANOP  ,                                               00446200
.*-------------------------------------------------------------------   00446300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00446400
                  AIF   (K'&ZXSTRNAME LE 0).ZG148R  NOT I/O             00446500
                  AIF   ('&XSTRNAME'(1,1) NE '(').ZG148R                00446600
&ZCGPR            SETC  '&XSTRNAME'(2,K'&XSTRNAME-2)                    00446700
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG148P                   00446800
                  AIF   (K'&ZCGPR GT 2).ZG148Q                          00446900
                  AIF   ('&ZCGPR' EQ '0').ZG148Q                        00447000
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00447100
                  AIF   (T'&ZCGPR NE 'N').ZG148Q  INVALID REG NAME      00447200
.ZG148P           ANOP  ,                                               00447300
                  AIF   (T'&ZCGPR NE 'N').ZG148R  NON NUMERIC           00447400
                  AIF   ('&ZCGPR' LT '2').ZG148Q                        00447500
                  AIF   ('&ZCGPR' LE '12').ZG148R                       00447600
.ZG148Q           ANOP  ,                                               00447700
&ZMS              SETC  '"STRNAME='                                     00447800
&ZMS              SETC  '&ZMS.&STRNAME"'                                00447900
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00448000
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00448100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00448200
.ZG148R           ANOP  ,                                               00448300
.*----------------------------------------------------------------***   00448400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00448500
                  AIF   (N'&STRDUMPID LE 1).ZG151A  CK NUM              00448600
&ZMS              SETC  '"STRDUMPID='                                   00448700
&ZMS              SETC  '&ZMS.&STRDUMPID"'                              00448800
&ZMS              SETC  '&ZMS "STRDUMPID"'                              00448900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00449000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00449100
.ZG151A           ANOP  ,                                               00449200
.*-------------------------------------------------------------------   00449300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00449400
&ZXSTRDUMPID      SETC  'INPUT'     SET IN/OUTPUT                       00449500
&XSTRDUMPID       SETC  '&STRDUMPID(1)'         SET XVARIABLE           00449600
                  AIF   (N'&STRDUMPID GT 1).ZG151B  MULTI               00449700
&XSTRDUMPID       SETC  '&STRDUMPID'            SET XVARIABLE           00449800
.ZG151B           AIF   (K'&STRDUMPID(1) GT 0).ZG151C                   00449900
&ZXSTRDUMPID      SETC  ''          RESET IN/OUTPUT                     00450000
&ZMS              SETC  ' '                                             00450100
&ZMS              SETC  '&ZMS "STRDUMPID" KEY AND ITS'                  00450200
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00450300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00450400
.ZG151C           ANOP  ,                                               00450500
.*-------------------------------------------------------------------   00450600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00450700
                  AIF   (K'&ZXSTRDUMPID LE 0).ZG151R  NOT I/O           00450800
                  AIF   ('&XSTRDUMPID'(1,1) NE '(').ZG151R              00450900
&ZCGPR            SETC  '&XSTRDUMPID'(2,K'&XSTRDUMPID-2)                00451000
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG151P                   00451100
                  AIF   (K'&ZCGPR GT 2).ZG151Q                          00451200
                  AIF   ('&ZCGPR' EQ '0').ZG151Q                        00451300
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00451400
                  AIF   (T'&ZCGPR NE 'N').ZG151Q  INVALID REG NAME      00451500
.ZG151P           ANOP  ,                                               00451600
                  AIF   (T'&ZCGPR NE 'N').ZG151R  NON NUMERIC           00451700
                  AIF   ('&ZCGPR' LT '2').ZG151Q                        00451800
                  AIF   ('&ZCGPR' LE '12').ZG151R                       00451900
.ZG151Q           ANOP  ,                                               00452000
&ZMS              SETC  '"STRDUMPID='                                   00452100
&ZMS              SETC  '&ZMS.&STRDUMPID"'                              00452200
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00452300
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00452400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00452500
.ZG151R           ANOP  ,                                               00452600
.*----------------------------------------------------------------***   00452700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00452800
                  AIF   (N'&STARTVAL LE 1).ZG154A  CK NUM               00452900
&ZMS              SETC  '"STARTVAL='                                    00453000
&ZMS              SETC  '&ZMS.&STARTVAL"'                               00453100
&ZMS              SETC  '&ZMS "STARTVAL"'                               00453200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00453300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00453400
.ZG154A           ANOP  ,                                               00453500
.*-------------------------------------------------------------------   00453600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00453700
&ZXSTARTVAL       SETC  'INPUT'     SET IN/OUTPUT                       00453800
&XSTARTVAL        SETC  'ALL'                                           00453900
                  AIF   (K'&STARTVAL(1) LE 0).ZG154B  PARM              00454000
&XSTARTVAL        SETC  '&STARTVAL(1)'          SET XVARIABLE           00454100
                  AIF   (N'&STARTVAL GT 1).ZG154B  MULTI                00454200
&XSTARTVAL        SETC  '&STARTVAL'             SET XVARIABLE           00454300
.ZG154B           ANOP  ,                                               00454400
.*-------------------------------------------------------------------   00454500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00454600
                  AIF   (K'&ZXSTARTVAL LE 0).ZG154R  NOT I/O            00454700
         AIF   ('&XSTARTVAL' EQ 'ALL').ZG154R                           00454800
                  AIF   ('&XSTARTVAL'(1,1) NE '(').ZG154R               00454900
&ZCGPR            SETC  '&XSTARTVAL'(2,K'&XSTARTVAL-2)                  00455000
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG154P                   00455100
                  AIF   (K'&ZCGPR GT 2).ZG154Q                          00455200
                  AIF   ('&ZCGPR' EQ '0').ZG154Q                        00455300
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00455400
                  AIF   (T'&ZCGPR NE 'N').ZG154Q  INVALID REG NAME      00455500
.ZG154P           ANOP  ,                                               00455600
                  AIF   (T'&ZCGPR NE 'N').ZG154R  NON NUMERIC           00455700
                  AIF   ('&ZCGPR' LT '2').ZG154Q                        00455800
                  AIF   ('&ZCGPR' LE '12').ZG154R                       00455900
.ZG154Q           ANOP  ,                                               00456000
&ZMS              SETC  '"STARTVAL='                                    00456100
&ZMS              SETC  '&ZMS.&STARTVAL"'                               00456200
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00456300
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00456400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00456500
.ZG154R           ANOP  ,                                               00456600
.*----------------------------------------------------------------***   00456700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00456800
                  AIF   (N'&ENDVAL LE 1).ZG156A  CK NUM                 00456900
&ZMS              SETC  '"ENDVAL='                                      00457000
&ZMS              SETC  '&ZMS.&ENDVAL"'                                 00457100
&ZMS              SETC  '&ZMS "ENDVAL"'                                 00457200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00457300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00457400
.ZG156A           ANOP  ,                                               00457500
.*-------------------------------------------------------------------   00457600
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00457700
&XENDVAL          SETC  'STARTVAL'  SET DEFAULT                         00457800
                  AIF   (K'&ENDVAL(1) LE 0).ZG156C  PARM                00457900
&XENDVAL          SETC  '&ENDVAL(1)'            SET XVARIABLE           00458000
                  AIF   (N'&ENDVAL GT 1).ZG156B  MULTI                  00458100
&XENDVAL          SETC  '&ENDVAL'   SET XVARIABLE                       00458200
.ZG156B           AIF   (K'&STARTVAL(1) GT 0).ZG156C  KEY               00458300
&ZMS              SETC  '"ENDVAL'                                       00458400
&ZMS              SETC  '&ZMS.=&ENDVAL"'                                00458500
&ZMS              SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                 00458600
&ZMS              SETC  '&ZMS '                                         00458700
&ZMS              SETC  '&ZMS "STARTVAL"'                               00458800
                  MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                    00458900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00459000
.ZG156C           ANOP  ,                                               00459100
&ZXENDVAL         SETC  'INPUT'     SET IN/OUTPUT                       00459200
.*-------------------------------------------------------------------   00459300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00459400
                  AIF   (K'&ZXENDVAL LE 0).ZG156R  NOT I/O              00459500
         AIF   ('&XENDVAL' EQ 'STARTVAL').ZG156R                        00459600
                  AIF   ('&XENDVAL'(1,1) NE '(').ZG156R                 00459700
&ZCGPR            SETC  '&XENDVAL'(2,K'&XENDVAL-2)                      00459800
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG156P                   00459900
                  AIF   (K'&ZCGPR GT 2).ZG156Q                          00460000
                  AIF   ('&ZCGPR' EQ '0').ZG156Q                        00460100
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00460200
                  AIF   (T'&ZCGPR NE 'N').ZG156Q  INVALID REG NAME      00460300
.ZG156P           ANOP  ,                                               00460400
                  AIF   (T'&ZCGPR NE 'N').ZG156R  NON NUMERIC           00460500
                  AIF   ('&ZCGPR' LT '2').ZG156Q                        00460600
                  AIF   ('&ZCGPR' LE '12').ZG156R                       00460700
.ZG156Q           ANOP  ,                                               00460800
&ZMS              SETC  '"ENDVAL='                                      00460900
&ZMS              SETC  '&ZMS.&ENDVAL"'                                 00461000
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00461100
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00461200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00461300
.ZG156R           ANOP  ,                                               00461400
.*-------------------------------------------------------------------   00461500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00461600
.ZG159            ANOP  ,                                               00461700
&ZTLC             SETC 'ENTRY'                                          00461800
                  AIF   ('&TYPE(1)' NE '&ZTLC').ZG180                   00461900
&XTYPE            SETC  'ENTRY'     SET KEYWORD                         00462000
                  AIF   (N'&TYPE LE 1).ZG159A   CK NUM                  00462100
&ZMS              SETC  '"TYPE='                                        00462200
&ZMS              SETC  '&ZMS.&TYPE"'                                   00462300
&ZMS              SETC  '&ZMS "TYPE"'                                   00462400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00462500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00462600
.ZG159A           ANOP  ,                                               00462700
.*------------------------------------------------------------------    00462800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00462900
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00463000
.ZG159A0          AIF   (K'&STRLEVEL LE 0).ZG159A1  OK                  00463100
&ZCVAL            SETC '&ZCVAL STRLEVEL'        INCORRECT KEY USED      00463200
.ZG159A1          AIF   (K'&CLASSTYPE LE 0).ZG159A2  OK                 00463300
&ZCVAL            SETC '&ZCVAL CLASSTYPE'       INCORRECT KEY USED      00463400
.ZG159A2          AIF   (K'&CLASSLEVEL LE 0).ZG159A3  OK                00463500
&ZCVAL            SETC '&ZCVAL CLASSLEVEL'      INCORRECT KEY USED      00463600
.ZG159A3          AIF   (K'&STARTVAL LE 0).ZG159A4  OK                  00463700
&ZCVAL            SETC '&ZCVAL STARTVAL'        INCORRECT KEY USED      00463800
.ZG159A4          AIF   (K'&ENDVAL LE 0).ZG159A5  OK                    00463900
&ZCVAL            SETC '&ZCVAL ENDVAL'          INCORRECT KEY USED      00464000
.ZG159A5          AIF   (K'&CLASSVAL LE 0).ZG159A6  OK                  00464100
&ZCVAL            SETC '&ZCVAL CLASSVAL'        INCORRECT KEY USED      00464200
.ZG159A6          AIF   (K'&STARTPOS LE 0).ZG159A7  OK                  00464300
&ZCVAL            SETC '&ZCVAL STARTPOS'        INCORRECT KEY USED      00464400
.ZG159A7          AIF   (K'&ENDPOS LE 0).ZG159A8  OK                    00464500
&ZCVAL            SETC '&ZCVAL ENDPOS'          INCORRECT KEY USED      00464600
.ZG159A8          AIF   (K'&ORDER LE 0).ZG159A9  OK                     00464700
&ZCVAL            SETC '&ZCVAL ORDER'           INCORRECT KEY USED      00464800
.ZG159A9          AIF   (K'&LISTNUMLEVEL LE 0).ZG159A10  OK             00464900
&ZCVAL            SETC '&ZCVAL LISTNUMLEVEL'    INCORRECT KEY USED      00465000
.ZG159A10         AIF   (K'&LISTNUMVAL LE 0).ZG159A11  OK               00465100
&ZCVAL            SETC '&ZCVAL LISTNUMVAL'      INCORRECT KEY USED      00465200
.ZG159A11         AIF   (K'&ENTRYKEY LE 0).ZG159A12  OK                 00465300
&ZCVAL            SETC '&ZCVAL ENTRYKEY'        INCORRECT KEY USED      00465400
.ZG159A12         AIF   (K'&EMCLEVEL LE 0).ZG159A13  OK                 00465500
&ZCVAL            SETC '&ZCVAL EMCLEVEL'        INCORRECT KEY USED      00465600
.ZG159A13         AIF   (K'&EQLEVEL LE 0).ZG159A14  OK                  00465700
&ZCVAL            SETC '&ZCVAL EQLEVEL'         INCORRECT KEY USED      00465800
.ZG159A14         AIF   (K'&CONIDVAL LE 0).ZG159A15  OK                 00465900
&ZCVAL            SETC '&ZCVAL CONIDVAL'        INCORRECT KEY USED      00466000
.ZG159A15         AIF   (K'&ZCVAL LE 0).ZG159A16  OK                    00466100
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00466200
&ZMS              SETC  '"TYPE'                                         00466300
&ZMS              SETC  '&ZMS.=&TYPE"'                                  00466400
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00466500
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00466600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00466700
.ZG159A16         ANOP  ,                                               00466800
.*----------------------------------------------------------------***   00466900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00467000
                  AIF   (N'&STRNAME LE 1).ZG161A  CK NUM                00467100
&ZMS              SETC  '"STRNAME='                                     00467200
&ZMS              SETC  '&ZMS.&STRNAME"'                                00467300
&ZMS              SETC  '&ZMS "STRNAME"'                                00467400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00467500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00467600
.ZG161A           ANOP  ,                                               00467700
.*-------------------------------------------------------------------   00467800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00467900
&ZXSTRNAME        SETC  'INPUT'     SET IN/OUTPUT                       00468000
&XSTRNAME         SETC  '&STRNAME(1)'           SET XVARIABLE           00468100
                  AIF   (N'&STRNAME GT 1).ZG161B  MULTI                 00468200
&XSTRNAME         SETC  '&STRNAME'  SET XVARIABLE                       00468300
.ZG161B           AIF   (K'&STRNAME(1) GT 0).ZG161C                     00468400
&ZXSTRNAME        SETC  ''          RESET IN/OUTPUT                     00468500
&ZMS              SETC  ' '                                             00468600
&ZMS              SETC  '&ZMS "STRNAME" KEY AND ITS'                    00468700
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00468800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00468900
.ZG161C           ANOP  ,                                               00469000
.*-------------------------------------------------------------------   00469100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00469200
                  AIF   (K'&ZXSTRNAME LE 0).ZG161R  NOT I/O             00469300
                  AIF   ('&XSTRNAME'(1,1) NE '(').ZG161R                00469400
&ZCGPR            SETC  '&XSTRNAME'(2,K'&XSTRNAME-2)                    00469500
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG161P                   00469600
                  AIF   (K'&ZCGPR GT 2).ZG161Q                          00469700
                  AIF   ('&ZCGPR' EQ '0').ZG161Q                        00469800
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00469900
                  AIF   (T'&ZCGPR NE 'N').ZG161Q  INVALID REG NAME      00470000
.ZG161P           ANOP  ,                                               00470100
                  AIF   (T'&ZCGPR NE 'N').ZG161R  NON NUMERIC           00470200
                  AIF   ('&ZCGPR' LT '2').ZG161Q                        00470300
                  AIF   ('&ZCGPR' LE '12').ZG161R                       00470400
.ZG161Q           ANOP  ,                                               00470500
&ZMS              SETC  '"STRNAME='                                     00470600
&ZMS              SETC  '&ZMS.&STRNAME"'                                00470700
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00470800
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00470900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00471000
.ZG161R           ANOP  ,                                               00471100
.*----------------------------------------------------------------***   00471200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00471300
                  AIF   (N'&STRDUMPID LE 1).ZG164A  CK NUM              00471400
&ZMS              SETC  '"STRDUMPID='                                   00471500
&ZMS              SETC  '&ZMS.&STRDUMPID"'                              00471600
&ZMS              SETC  '&ZMS "STRDUMPID"'                              00471700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00471800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00471900
.ZG164A           ANOP  ,                                               00472000
.*-------------------------------------------------------------------   00472100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00472200
&ZXSTRDUMPID      SETC  'INPUT'     SET IN/OUTPUT                       00472300
&XSTRDUMPID       SETC  '&STRDUMPID(1)'         SET XVARIABLE           00472400
                  AIF   (N'&STRDUMPID GT 1).ZG164B  MULTI               00472500
&XSTRDUMPID       SETC  '&STRDUMPID'            SET XVARIABLE           00472600
.ZG164B           AIF   (K'&STRDUMPID(1) GT 0).ZG164C                   00472700
&ZXSTRDUMPID      SETC  ''          RESET IN/OUTPUT                     00472800
&ZMS              SETC  ' '                                             00472900
&ZMS              SETC  '&ZMS "STRDUMPID" KEY AND ITS'                  00473000
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00473100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00473200
.ZG164C           ANOP  ,                                               00473300
.*-------------------------------------------------------------------   00473400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00473500
                  AIF   (K'&ZXSTRDUMPID LE 0).ZG164R  NOT I/O           00473600
                  AIF   ('&XSTRDUMPID'(1,1) NE '(').ZG164R              00473700
&ZCGPR            SETC  '&XSTRDUMPID'(2,K'&XSTRDUMPID-2)                00473800
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG164P                   00473900
                  AIF   (K'&ZCGPR GT 2).ZG164Q                          00474000
                  AIF   ('&ZCGPR' EQ '0').ZG164Q                        00474100
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00474200
                  AIF   (T'&ZCGPR NE 'N').ZG164Q  INVALID REG NAME      00474300
.ZG164P           ANOP  ,                                               00474400
                  AIF   (T'&ZCGPR NE 'N').ZG164R  NON NUMERIC           00474500
                  AIF   ('&ZCGPR' LT '2').ZG164Q                        00474600
                  AIF   ('&ZCGPR' LE '12').ZG164R                       00474700
.ZG164Q           ANOP  ,                                               00474800
&ZMS              SETC  '"STRDUMPID='                                   00474900
&ZMS              SETC  '&ZMS.&STRDUMPID"'                              00475000
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00475100
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00475200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00475300
.ZG164R           ANOP  ,                                               00475400
.*----------------------------------------------------------------***   00475500
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00475600
&XDUMMY1          SETC  ''          INITIALIZE XVARIABLE                00475700
                  AIF   (K'&ENTRYNAME LE 0).ZG167C                      00475800
&ZXDUMMY1         SETC  'INPUT'     SET IN/OUTPUT                       00475900
&XDUMMY1          SETC  'ENTRYNAME'             SET XVARIABLE           00476000
&ZXENTRYNAME      SETC  'INPUT'     SET IN/OUTPUT                       00476100
&XENTRYNAME       SETC  '&ENTRYNAME(1)'         SET XVARIABLE PARM      00476200
                  AIF   (N'&ENTRYNAME GT 1).ZG167A                      00476300
&XENTRYNAME       SETC  '&ENTRYNAME'            SET XVARIABLE PARM      00476400
.ZG167A           AIF   (N'&ENTRYNAME LE 1).ZG167B  CK NUM              00476500
&ZMS              SETC  '"ENTRYNAME='                                   00476600
&ZMS              SETC  '&ZMS.&ENTRYNAME"'                              00476700
&ZMS              SETC  '&ZMS "ENTRYNAME"'                              00476800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00476900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00477000
.ZG167B           AIF   (K'&XENTRYNAME GT 0).ZG167C  ONE PARM           00477100
&ZXDUMMY1         SETC  ''          RESET IN/OUTPUT                     00477200
&ZXENTRYNAME      SETC  ''          RESET IN/OUTPUT                     00477300
&ZMS              SETC  ' '                                             00477400
&ZMS              SETC  '&ZMS "ENTRYNAME" KEY AND ITS'                  00477500
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00477600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00477700
.ZG167C           ANOP  ,                                               00477800
.*----------------------------------------------------------------***   00477900
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00478000
                  AIF   (K'&ENTRYID LE 0).ZG168D  NO ME KEY             00478100
                  AIF   (N'&ENTRYID LE 1).ZG168A  CK NUM                00478200
&ZMS              SETC  '"ENTRYID='                                     00478300
&ZMS              SETC  '&ZMS.&ENTRYID"'                                00478400
&ZMS              SETC  '&ZMS "ENTRYID"'                                00478500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00478600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00478700
.ZG168A           AIF   (K'&XDUMMY1 LE 0).ZG168B                        00478800
&ZMS              SETC  '"ENTRYID'                                      00478900
&ZMS              SETC  '&ZMS.=&ENTRYID"'                               00479000
&ZMS              SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'           00479100
&ZMS              SETC  '&ZMS "&XDUMMY1"'                               00479200
                  MNOTE 8,' &ZMS KEY.'                                  00479300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00479400
                  AGO   .ZG168D                                         00479500
.*                                                                      00479600
.ZG168B           ANOP  ,                                               00479700
&ZXDUMMY1         SETC  'INPUT'     SET IN/OUTPUT                       00479800
&XDUMMY1          SETC  'ENTRYID'   SET XVARIABLE                       00479900
&ZXENTRYID        SETC  'INPUT'     SET IN/OUTPUT                       00480000
&XENTRYID         SETC  '&ENTRYID(1)'           SET XVARIABLE PARM      00480100
                  AIF   (N'&ENTRYID GT 1).ZG168C                        00480200
&XENTRYID         SETC  '&ENTRYID'  SET XVARIABLE PARM                  00480300
.ZG168C           AIF   (K'&XENTRYID GT 0).ZG168D  ONE PARM             00480400
&ZXDUMMY1         SETC  ''          RESET IN/OUTPUT                     00480500
&ZXENTRYID        SETC  ''          RESET IN/OUTPUT                     00480600
&ZMS              SETC  ' '                                             00480700
&ZMS              SETC  '&ZMS "ENTRYID" KEY AND ITS'                    00480800
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00480900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00481000
.ZG168D           ANOP  ,                                               00481100
.*------------------------------------------------------------------    00481200
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00481300
                  AIF   (K'&XDUMMY1 GT 0).ZG169B                        00481400
&ZXDUMMY1         SETC  ''          RESET IN/OUTPUT                     00481500
&ZXENTRYNAME      SETC  ''          RESET IN/OUTPUT                     00481600
&XDUMMY1          SETC  ''          ENSURE NULL                         00481700
&XENTRYNAME       SETC  ''          ENSURE NULL                         00481800
&ZMS              SETC  'ONE OF THE FOLLOWING'                          00481900
&ZMS              SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'             00482000
&ZMS              SETC  '&ZMS REQUIRED:'                                00482100
&ZMS              SETC  '&ZMS "ENTRYNAME"'      VALID ME KEY            00482200
&ZMS              SETC  '&ZMS OR "ENTRYID".'    VALID ME KEY            00482300
                  MNOTE 8,' &ZMS '                                      00482400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00482500
.ZG169B           ANOP  ,                                               00482600
.*-------------------------------------------------------------------   00482700
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00482800
.ZG167ZY  AIF    ('&XDUMMY1' NE 'ENTRYNAME').ZG168ZY                    00482900
.*-------------------------------------------------------------------   00483000
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00483100
                  AIF   (K'&ZXENTRYNAME LE 0).ZG167R  NOT I/O           00483200
                  AIF   ('&XENTRYNAME'(1,1) NE '(').ZG167R              00483300
&ZCGPR            SETC  '&XENTRYNAME'(2,K'&XENTRYNAME-2)                00483400
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG167P                   00483500
                  AIF   (K'&ZCGPR GT 2).ZG167Q                          00483600
                  AIF   ('&ZCGPR' EQ '0').ZG167Q                        00483700
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00483800
                  AIF   (T'&ZCGPR NE 'N').ZG167Q  INVALID REG NAME      00483900
.ZG167P           ANOP  ,                                               00484000
                  AIF   (T'&ZCGPR NE 'N').ZG167R  NON NUMERIC           00484100
                  AIF   ('&ZCGPR' LT '2').ZG167Q                        00484200
                  AIF   ('&ZCGPR' LE '12').ZG167R                       00484300
.ZG167Q           ANOP  ,                                               00484400
&ZMS              SETC  '"ENTRYNAME='                                   00484500
&ZMS              SETC  '&ZMS.&ENTRYNAME"'                              00484600
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00484700
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00484800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00484900
.ZG167R           ANOP  ,                                               00485000
.*-------------------------------------------------------------------   00485100
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00485200
.ZG168ZY  AIF    ('&XDUMMY1' NE 'ENTRYID').ZG169ZY                      00485300
.*-------------------------------------------------------------------   00485400
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00485500
                  AIF   (K'&ZXENTRYID LE 0).ZG168R  NOT I/O             00485600
                  AIF   ('&XENTRYID'(1,1) NE '(').ZG168R                00485700
&ZCGPR            SETC  '&XENTRYID'(2,K'&XENTRYID-2)                    00485800
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG168P                   00485900
                  AIF   (K'&ZCGPR GT 2).ZG168Q                          00486000
                  AIF   ('&ZCGPR' EQ '0').ZG168Q                        00486100
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00486200
                  AIF   (T'&ZCGPR NE 'N').ZG168Q  INVALID REG NAME      00486300
.ZG168P           ANOP  ,                                               00486400
                  AIF   (T'&ZCGPR NE 'N').ZG168R  NON NUMERIC           00486500
                  AIF   ('&ZCGPR' LT '2').ZG168Q                        00486600
                  AIF   ('&ZCGPR' LE '12').ZG168R                       00486700
.ZG168Q           ANOP  ,                                               00486800
&ZMS              SETC  '"ENTRYID='                                     00486900
&ZMS              SETC  '&ZMS.&ENTRYID"'                                00487000
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00487100
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00487200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00487300
.ZG168R           ANOP  ,                                               00487400
.*-------------------------------------------------------------------   00487500
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00487600
.ZG169ZY          ANOP ,            END MUTUALLY EXCLUSIVE KEYS         00487700
.*----------------------------------------------------------------***   00487800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00487900
                  AIF   (N'&ADJUNCT LE 1).ZG171A  CK NUM                00488000
&ZMS              SETC  '"ADJUNCT='                                     00488100
&ZMS              SETC  '&ZMS.&ADJUNCT"'                                00488200
&ZMS              SETC  '&ZMS "ADJUNCT"'                                00488300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00488400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00488500
.ZG171A           ANOP  ,                                               00488600
.*-------------------------------------------------------------------   00488700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00488800
&XADJUNCT         SETC  ''          INITIALIZE XVARIABLE                00488900
.ZG172A   AIF   ('&ADJUNCT(1)' NE 'NO').ZG173A                          00489000
&XADJUNCT         SETC  'NO'        SET KEYWORD                         00489100
.*-------------------------------------------------------------------   00489200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00489300
.ZG173A   AIF   ('&ADJUNCT(1)' NE 'YES').ZG174A                         00489400
&XADJUNCT         SETC  'YES'       SET KEYWORD                         00489500
.*-------------------------------------------------------------------   00489600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00489700
.ZG174A           AIF   (K'&XADJUNCT GT 0).ZG174C  KEYWORD              00489800
                  AIF   (K'&ADJUNCT(1) LE 0).ZG174B                     00489900
&ZMS              SETC  '"ADJUNCT='                                     00490000
&ZMS              SETC  '&ZMS.&ADJUNCT"'                                00490100
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00490200
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00490300
&ZMS              SETC  '&ZMS "NO"'                                     00490400
&ZMS              SETC  '&ZMS OR "YES".'                                00490500
                  MNOTE 8,' &ZMS '                                      00490600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00490700
.ZG174B           ANOP  ,                                               00490800
&XADJUNCT         SETC  'NO'        SET DEFAULT KEYWORD                 00490900
.ZG174C           ANOP  ,                                               00491000
&ZXADJUNCT        SETC  'INPUT'     SET IN/OUTPUT                       00491100
.*----------------------------------------------------------------***   00491200
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00491300
                  AIF   (N'&ENTRYDATA LE 1).ZG176A  CK NUM              00491400
&ZMS              SETC  '"ENTRYDATA='                                   00491500
&ZMS              SETC  '&ZMS.&ENTRYDATA"'                              00491600
&ZMS              SETC  '&ZMS "ENTRYDATA"'                              00491700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00491800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00491900
.ZG176A           ANOP  ,                                               00492000
.*-------------------------------------------------------------------   00492100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00492200
&XENTRYDATA       SETC  ''          INITIALIZE XVARIABLE                00492300
.ZG177A   AIF   ('&ENTRYDATA(1)' NE 'NO').ZG178A                        00492400
&XENTRYDATA       SETC  'NO'        SET KEYWORD                         00492500
.*-------------------------------------------------------------------   00492600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00492700
.ZG178A   AIF   ('&ENTRYDATA(1)' NE 'YES').ZG179A                       00492800
&XENTRYDATA       SETC  'YES'       SET KEYWORD                         00492900
.*-------------------------------------------------------------------   00493000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00493100
.ZG179A           AIF   (K'&XENTRYDATA GT 0).ZG179C  KEYWORD            00493200
                  AIF   (K'&ENTRYDATA(1) LE 0).ZG179B                   00493300
&ZMS              SETC  '"ENTRYDATA='                                   00493400
&ZMS              SETC  '&ZMS.&ENTRYDATA"'                              00493500
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00493600
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00493700
&ZMS              SETC  '&ZMS "NO"'                                     00493800
&ZMS              SETC  '&ZMS OR "YES".'                                00493900
                  MNOTE 8,' &ZMS '                                      00494000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00494100
.ZG179B           ANOP  ,                                               00494200
&XENTRYDATA       SETC  'NO'        SET DEFAULT KEYWORD                 00494300
.ZG179C           ANOP  ,                                               00494400
&ZXENTRYDATA      SETC  'INPUT'     SET IN/OUTPUT                       00494500
.*-------------------------------------------------------------------   00494600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00494700
.ZG180            ANOP  ,                                               00494800
&ZTLC             SETC 'EMCONTROLS'                                     00494900
                  AIF   ('&TYPE(1)' NE '&ZTLC').ZG204                   00495000
&XTYPE            SETC  'EMCONTROLS'            SET KEYWORD             00495100
                  AIF   (N'&TYPE LE 1).ZG180A   CK NUM                  00495200
&ZMS              SETC  '"TYPE='                                        00495300
&ZMS              SETC  '&ZMS.&TYPE"'                                   00495400
&ZMS              SETC  '&ZMS "TYPE"'                                   00495500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00495600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00495700
.ZG180A           ANOP  ,                                               00495800
.*------------------------------------------------------------------    00495900
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00496000
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00496100
.ZG180A0          AIF   (K'&STRLEVEL LE 0).ZG180A1  OK                  00496200
&ZCVAL            SETC '&ZCVAL STRLEVEL'        INCORRECT KEY USED      00496300
.ZG180A1          AIF   (K'&CLASSTYPE LE 0).ZG180A2  OK                 00496400
&ZCVAL            SETC '&ZCVAL CLASSTYPE'       INCORRECT KEY USED      00496500
.ZG180A2          AIF   (K'&CLASSLEVEL LE 0).ZG180A3  OK                00496600
&ZCVAL            SETC '&ZCVAL CLASSLEVEL'      INCORRECT KEY USED      00496700
.ZG180A3          AIF   (K'&CLASSVAL LE 0).ZG180A4  OK                  00496800
&ZCVAL            SETC '&ZCVAL CLASSVAL'        INCORRECT KEY USED      00496900
.ZG180A4          AIF   (K'&STARTPOS LE 0).ZG180A5  OK                  00497000
&ZCVAL            SETC '&ZCVAL STARTPOS'        INCORRECT KEY USED      00497100
.ZG180A5          AIF   (K'&ENDPOS LE 0).ZG180A6  OK                    00497200
&ZCVAL            SETC '&ZCVAL ENDPOS'          INCORRECT KEY USED      00497300
.ZG180A6          AIF   (K'&ORDER LE 0).ZG180A7  OK                     00497400
&ZCVAL            SETC '&ZCVAL ORDER'           INCORRECT KEY USED      00497500
.ZG180A7          AIF   (K'&ADJUNCT LE 0).ZG180A8  OK                   00497600
&ZCVAL            SETC '&ZCVAL ADJUNCT'         INCORRECT KEY USED      00497700
.ZG180A8          AIF   (K'&ENTRYDATA LE 0).ZG180A9  OK                 00497800
&ZCVAL            SETC '&ZCVAL ENTRYDATA'       INCORRECT KEY USED      00497900
.ZG180A9          AIF   (K'&LISTNUMLEVEL LE 0).ZG180A10  OK             00498000
&ZCVAL            SETC '&ZCVAL LISTNUMLEVEL'    INCORRECT KEY USED      00498100
.ZG180A10         AIF   (K'&ENTRYNAME LE 0).ZG180A11  OK                00498200
&ZCVAL            SETC '&ZCVAL ENTRYNAME'       INCORRECT KEY USED      00498300
.ZG180A11         AIF   (K'&ENTRYID LE 0).ZG180A12  OK                  00498400
&ZCVAL            SETC '&ZCVAL ENTRYID'         INCORRECT KEY USED      00498500
.ZG180A12         AIF   (K'&EQLEVEL LE 0).ZG180A13  OK                  00498600
&ZCVAL            SETC '&ZCVAL EQLEVEL'         INCORRECT KEY USED      00498700
.ZG180A13         AIF   (K'&CONIDVAL LE 0).ZG180A14  OK                 00498800
&ZCVAL            SETC '&ZCVAL CONIDVAL'        INCORRECT KEY USED      00498900
.ZG180A14         AIF   (K'&ZCVAL LE 0).ZG180A15  OK                    00499000
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00499100
&ZMS              SETC  '"TYPE'                                         00499200
&ZMS              SETC  '&ZMS.=&TYPE"'                                  00499300
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00499400
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00499500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00499600
.ZG180A15         ANOP  ,                                               00499700
.*----------------------------------------------------------------***   00499800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00499900
                  AIF   (N'&STRNAME LE 1).ZG182A  CK NUM                00500000
&ZMS              SETC  '"STRNAME='                                     00500100
&ZMS              SETC  '&ZMS.&STRNAME"'                                00500200
&ZMS              SETC  '&ZMS "STRNAME"'                                00500300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00500400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00500500
.ZG182A           ANOP  ,                                               00500600
.*-------------------------------------------------------------------   00500700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00500800
&ZXSTRNAME        SETC  'INPUT'     SET IN/OUTPUT                       00500900
&XSTRNAME         SETC  '&STRNAME(1)'           SET XVARIABLE           00501000
                  AIF   (N'&STRNAME GT 1).ZG182B  MULTI                 00501100
&XSTRNAME         SETC  '&STRNAME'  SET XVARIABLE                       00501200
.ZG182B           AIF   (K'&STRNAME(1) GT 0).ZG182C                     00501300
&ZXSTRNAME        SETC  ''          RESET IN/OUTPUT                     00501400
&ZMS              SETC  ' '                                             00501500
&ZMS              SETC  '&ZMS "STRNAME" KEY AND ITS'                    00501600
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00501700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00501800
.ZG182C           ANOP  ,                                               00501900
.*-------------------------------------------------------------------   00502000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00502100
                  AIF   (K'&ZXSTRNAME LE 0).ZG182R  NOT I/O             00502200
                  AIF   ('&XSTRNAME'(1,1) NE '(').ZG182R                00502300
&ZCGPR            SETC  '&XSTRNAME'(2,K'&XSTRNAME-2)                    00502400
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG182P                   00502500
                  AIF   (K'&ZCGPR GT 2).ZG182Q                          00502600
                  AIF   ('&ZCGPR' EQ '0').ZG182Q                        00502700
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00502800
                  AIF   (T'&ZCGPR NE 'N').ZG182Q  INVALID REG NAME      00502900
.ZG182P           ANOP  ,                                               00503000
                  AIF   (T'&ZCGPR NE 'N').ZG182R  NON NUMERIC           00503100
                  AIF   ('&ZCGPR' LT '2').ZG182Q                        00503200
                  AIF   ('&ZCGPR' LE '12').ZG182R                       00503300
.ZG182Q           ANOP  ,                                               00503400
&ZMS              SETC  '"STRNAME='                                     00503500
&ZMS              SETC  '&ZMS.&STRNAME"'                                00503600
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00503700
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00503800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00503900
.ZG182R           ANOP  ,                                               00504000
.*----------------------------------------------------------------***   00504100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00504200
                  AIF   (N'&STRDUMPID LE 1).ZG185A  CK NUM              00504300
&ZMS              SETC  '"STRDUMPID='                                   00504400
&ZMS              SETC  '&ZMS.&STRDUMPID"'                              00504500
&ZMS              SETC  '&ZMS "STRDUMPID"'                              00504600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00504700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00504800
.ZG185A           ANOP  ,                                               00504900
.*-------------------------------------------------------------------   00505000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00505100
&ZXSTRDUMPID      SETC  'INPUT'     SET IN/OUTPUT                       00505200
&XSTRDUMPID       SETC  '&STRDUMPID(1)'         SET XVARIABLE           00505300
                  AIF   (N'&STRDUMPID GT 1).ZG185B  MULTI               00505400
&XSTRDUMPID       SETC  '&STRDUMPID'            SET XVARIABLE           00505500
.ZG185B           AIF   (K'&STRDUMPID(1) GT 0).ZG185C                   00505600
&ZXSTRDUMPID      SETC  ''          RESET IN/OUTPUT                     00505700
&ZMS              SETC  ' '                                             00505800
&ZMS              SETC  '&ZMS "STRDUMPID" KEY AND ITS'                  00505900
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00506000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00506100
.ZG185C           ANOP  ,                                               00506200
.*-------------------------------------------------------------------   00506300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00506400
                  AIF   (K'&ZXSTRDUMPID LE 0).ZG185R  NOT I/O           00506500
                  AIF   ('&XSTRDUMPID'(1,1) NE '(').ZG185R              00506600
&ZCGPR            SETC  '&XSTRDUMPID'(2,K'&XSTRDUMPID-2)                00506700
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG185P                   00506800
                  AIF   (K'&ZCGPR GT 2).ZG185Q                          00506900
                  AIF   ('&ZCGPR' EQ '0').ZG185Q                        00507000
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00507100
                  AIF   (T'&ZCGPR NE 'N').ZG185Q  INVALID REG NAME      00507200
.ZG185P           ANOP  ,                                               00507300
                  AIF   (T'&ZCGPR NE 'N').ZG185R  NON NUMERIC           00507400
                  AIF   ('&ZCGPR' LT '2').ZG185Q                        00507500
                  AIF   ('&ZCGPR' LE '12').ZG185R                       00507600
.ZG185Q           ANOP  ,                                               00507700
&ZMS              SETC  '"STRDUMPID='                                   00507800
&ZMS              SETC  '&ZMS.&STRDUMPID"'                              00507900
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00508000
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00508100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00508200
.ZG185R           ANOP  ,                                               00508300
.*------------------------------------------------------------------    00508400
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00508500
&XEMCLEVEL        SETC  ''          INITIALIZE XVARIABLE                00508600
.*-------------------------------------------------------------------   00508700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00508800
.ZG189            ANOP  ,                                               00508900
                  AIF   (K'&EMCLEVEL(1) LE 0).ZG189A                    00509000
&ZTLC             SETC 'SUMMARY'                                        00509100
                  AIF   ('&EMCLEVEL(1)' NE '&ZTLC').ZG196               00509200
&XEMCLEVEL        SETC  'SUMMARY'   SET KEYWORD                         00509300
                  AIF   (N'&EMCLEVEL LE 1).ZG189A  CK NUM               00509400
&ZMS              SETC  '"EMCLEVEL='                                    00509500
&ZMS              SETC  '&ZMS.&EMCLEVEL"'                               00509600
&ZMS              SETC  '&ZMS "EMCLEVEL"'                               00509700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00509800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00509900
.ZG189A           ANOP  ,                                               00510000
.*------------------------------------------------------------------    00510100
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00510200
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00510300
.ZG189A0          AIF   (K'&LISTNUMVAL LE 0).ZG189A1  OK                00510400
&ZCVAL            SETC '&ZCVAL LISTNUMVAL'      INCORRECT KEY USED      00510500
.ZG189A1          AIF   (K'&ENTRYKEY LE 0).ZG189A2  OK                  00510600
&ZCVAL            SETC '&ZCVAL ENTRYKEY'        INCORRECT KEY USED      00510700
.ZG189A2          AIF   (K'&ZCVAL LE 0).ZG189A3  OK                     00510800
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00510900
&ZMS              SETC  '"EMCLEVEL'                                     00511000
&ZMS              SETC  '&ZMS.=&EMCLEVEL"'                              00511100
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00511200
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00511300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00511400
.ZG189A3          ANOP  ,                                               00511500
.*----------------------------------------------------------------***   00511600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00511700
                  AIF   (N'&STARTVAL LE 1).ZG191A  CK NUM               00511800
&ZMS              SETC  '"STARTVAL='                                    00511900
&ZMS              SETC  '&ZMS.&STARTVAL"'                               00512000
&ZMS              SETC  '&ZMS "STARTVAL"'                               00512100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00512200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00512300
.ZG191A           ANOP  ,                                               00512400
.*-------------------------------------------------------------------   00512500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00512600
&ZXSTARTVAL       SETC  'INPUT'     SET IN/OUTPUT                       00512700
&XSTARTVAL        SETC  'ALL'                                           00512800
                  AIF   (K'&STARTVAL(1) LE 0).ZG191B  PARM              00512900
&XSTARTVAL        SETC  '&STARTVAL(1)'          SET XVARIABLE           00513000
                  AIF   (N'&STARTVAL GT 1).ZG191B  MULTI                00513100
&XSTARTVAL        SETC  '&STARTVAL'             SET XVARIABLE           00513200
.ZG191B           ANOP  ,                                               00513300
.*-------------------------------------------------------------------   00513400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00513500
                  AIF   (K'&ZXSTARTVAL LE 0).ZG191R  NOT I/O            00513600
         AIF   ('&XSTARTVAL' EQ 'ALL').ZG191R                           00513700
                  AIF   ('&XSTARTVAL'(1,1) NE '(').ZG191R               00513800
&ZCGPR            SETC  '&XSTARTVAL'(2,K'&XSTARTVAL-2)                  00513900
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG191P                   00514000
                  AIF   (K'&ZCGPR GT 2).ZG191Q                          00514100
                  AIF   ('&ZCGPR' EQ '0').ZG191Q                        00514200
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00514300
                  AIF   (T'&ZCGPR NE 'N').ZG191Q  INVALID REG NAME      00514400
.ZG191P           ANOP  ,                                               00514500
                  AIF   (T'&ZCGPR NE 'N').ZG191R  NON NUMERIC           00514600
                  AIF   ('&ZCGPR' LT '2').ZG191Q                        00514700
                  AIF   ('&ZCGPR' LE '12').ZG191R                       00514800
.ZG191Q           ANOP  ,                                               00514900
&ZMS              SETC  '"STARTVAL='                                    00515000
&ZMS              SETC  '&ZMS.&STARTVAL"'                               00515100
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00515200
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00515300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00515400
.ZG191R           ANOP  ,                                               00515500
.*----------------------------------------------------------------***   00515600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00515700
                  AIF   (N'&ENDVAL LE 1).ZG193A  CK NUM                 00515800
&ZMS              SETC  '"ENDVAL='                                      00515900
&ZMS              SETC  '&ZMS.&ENDVAL"'                                 00516000
&ZMS              SETC  '&ZMS "ENDVAL"'                                 00516100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00516200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00516300
.ZG193A           ANOP  ,                                               00516400
.*-------------------------------------------------------------------   00516500
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00516600
&XENDVAL          SETC  'STARTVAL'  SET DEFAULT                         00516700
                  AIF   (K'&ENDVAL(1) LE 0).ZG193C  PARM                00516800
&XENDVAL          SETC  '&ENDVAL(1)'            SET XVARIABLE           00516900
                  AIF   (N'&ENDVAL GT 1).ZG193B  MULTI                  00517000
&XENDVAL          SETC  '&ENDVAL'   SET XVARIABLE                       00517100
.ZG193B           AIF   (K'&STARTVAL(1) GT 0).ZG193C  KEY               00517200
&ZMS              SETC  '"ENDVAL'                                       00517300
&ZMS              SETC  '&ZMS.=&ENDVAL"'                                00517400
&ZMS              SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                 00517500
&ZMS              SETC  '&ZMS '                                         00517600
&ZMS              SETC  '&ZMS "STARTVAL"'                               00517700
                  MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                    00517800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00517900
.ZG193C           ANOP  ,                                               00518000
&ZXENDVAL         SETC  'INPUT'     SET IN/OUTPUT                       00518100
.*-------------------------------------------------------------------   00518200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00518300
                  AIF   (K'&ZXENDVAL LE 0).ZG193R  NOT I/O              00518400
         AIF   ('&XENDVAL' EQ 'STARTVAL').ZG193R                        00518500
                  AIF   ('&XENDVAL'(1,1) NE '(').ZG193R                 00518600
&ZCGPR            SETC  '&XENDVAL'(2,K'&XENDVAL-2)                      00518700
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG193P                   00518800
                  AIF   (K'&ZCGPR GT 2).ZG193Q                          00518900
                  AIF   ('&ZCGPR' EQ '0').ZG193Q                        00519000
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00519100
                  AIF   (T'&ZCGPR NE 'N').ZG193Q  INVALID REG NAME      00519200
.ZG193P           ANOP  ,                                               00519300
                  AIF   (T'&ZCGPR NE 'N').ZG193R  NON NUMERIC           00519400
                  AIF   ('&ZCGPR' LT '2').ZG193Q                        00519500
                  AIF   ('&ZCGPR' LE '12').ZG193R                       00519600
.ZG193Q           ANOP  ,                                               00519700
&ZMS              SETC  '"ENDVAL='                                      00519800
&ZMS              SETC  '&ZMS.&ENDVAL"'                                 00519900
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00520000
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00520100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00520200
.ZG193R           ANOP  ,                                               00520300
.*-------------------------------------------------------------------   00520400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00520500
.ZG196            ANOP  ,                                               00520600
&ZTLC             SETC 'EMC'                                            00520700
                  AIF   ('&EMCLEVEL(1)' NE '&ZTLC').ZG203               00520800
&XEMCLEVEL        SETC  'EMC'       SET KEYWORD                         00520900
                  AIF   (N'&EMCLEVEL LE 1).ZG196A  CK NUM               00521000
&ZMS              SETC  '"EMCLEVEL='                                    00521100
&ZMS              SETC  '&ZMS.&EMCLEVEL"'                               00521200
&ZMS              SETC  '&ZMS "EMCLEVEL"'                               00521300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00521400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00521500
.ZG196A           ANOP  ,                                               00521600
.*------------------------------------------------------------------    00521700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00521800
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00521900
.ZG196A0          AIF   (K'&STARTVAL LE 0).ZG196A1  OK                  00522000
&ZCVAL            SETC '&ZCVAL STARTVAL'        INCORRECT KEY USED      00522100
.ZG196A1          AIF   (K'&ENDVAL LE 0).ZG196A2  OK                    00522200
&ZCVAL            SETC '&ZCVAL ENDVAL'          INCORRECT KEY USED      00522300
.ZG196A2          AIF   (K'&ZCVAL LE 0).ZG196A3  OK                     00522400
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00522500
&ZMS              SETC  '"EMCLEVEL'                                     00522600
&ZMS              SETC  '&ZMS.=&EMCLEVEL"'                              00522700
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00522800
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00522900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00523000
.ZG196A3          ANOP  ,                                               00523100
.*----------------------------------------------------------------***   00523200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00523300
                  AIF   (N'&LISTNUMVAL LE 1).ZG198A  CK NUM             00523400
&ZMS              SETC  '"LISTNUMVAL='                                  00523500
&ZMS              SETC  '&ZMS.&LISTNUMVAL"'                             00523600
&ZMS              SETC  '&ZMS "LISTNUMVAL"'                             00523700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00523800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00523900
.ZG198A           ANOP  ,                                               00524000
.*-------------------------------------------------------------------   00524100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00524200
&ZXLISTNUMVAL     SETC  'INPUT'     SET IN/OUTPUT                       00524300
&XLISTNUMVAL      SETC  '&LISTNUMVAL(1)'        SET XVARIABLE           00524400
                  AIF   (N'&LISTNUMVAL GT 1).ZG198B  MULTI              00524500
&XLISTNUMVAL      SETC  '&LISTNUMVAL'           SET XVARIABLE           00524600
.ZG198B           AIF   (K'&LISTNUMVAL(1) GT 0).ZG198C                  00524700
&ZXLISTNUMVAL     SETC  ''          RESET IN/OUTPUT                     00524800
&ZMS              SETC  ' '                                             00524900
&ZMS              SETC  '&ZMS "LISTNUMVAL" KEY AND ITS'                 00525000
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00525100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00525200
.ZG198C           ANOP  ,                                               00525300
.*-------------------------------------------------------------------   00525400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00525500
                  AIF   (K'&ZXLISTNUMVAL LE 0).ZG198R  NOT I/O          00525600
                  AIF   ('&XLISTNUMVAL'(1,1) NE '(').ZG198R             00525700
&ZCGPR            SETC  '&XLISTNUMVAL'(2,K'&XLISTNUMVAL-2)              00525800
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG198P                   00525900
                  AIF   (K'&ZCGPR GT 2).ZG198Q                          00526000
                  AIF   ('&ZCGPR' EQ '0').ZG198Q                        00526100
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00526200
                  AIF   (T'&ZCGPR NE 'N').ZG198Q  INVALID REG NAME      00526300
.ZG198P           ANOP  ,                                               00526400
                  AIF   (T'&ZCGPR NE 'N').ZG198R  NON NUMERIC           00526500
                  AIF   ('&ZCGPR' LT '2').ZG198Q                        00526600
                  AIF   ('&ZCGPR' LE '12').ZG198R                       00526700
.ZG198Q           ANOP  ,                                               00526800
&ZMS              SETC  '"LISTNUMVAL='                                  00526900
&ZMS              SETC  '&ZMS.&LISTNUMVAL"'                             00527000
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00527100
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00527200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00527300
.ZG198R           ANOP  ,                                               00527400
.*----------------------------------------------------------------***   00527500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00527600
                  AIF   (N'&ENTRYKEY LE 1).ZG201A  CK NUM               00527700
&ZMS              SETC  '"ENTRYKEY='                                    00527800
&ZMS              SETC  '&ZMS.&ENTRYKEY"'                               00527900
&ZMS              SETC  '&ZMS "ENTRYKEY"'                               00528000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00528100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00528200
.ZG201A           ANOP  ,                                               00528300
.*-------------------------------------------------------------------   00528400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00528500
&ZXENTRYKEY       SETC  'INPUT'     SET IN/OUTPUT                       00528600
&XENTRYKEY        SETC  'NO_KEY'                                        00528700
                  AIF   (K'&ENTRYKEY(1) LE 0).ZG201B  PARM              00528800
&XENTRYKEY        SETC  '&ENTRYKEY(1)'          SET XVARIABLE           00528900
                  AIF   (N'&ENTRYKEY GT 1).ZG201B  MULTI                00529000
&XENTRYKEY        SETC  '&ENTRYKEY'             SET XVARIABLE           00529100
.ZG201B           ANOP  ,                                               00529200
.*-------------------------------------------------------------------   00529300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00529400
                  AIF   (K'&ZXENTRYKEY LE 0).ZG201R  NOT I/O            00529500
         AIF   ('&XENTRYKEY' EQ 'NO_KEY').ZG201R                        00529600
                  AIF   ('&XENTRYKEY'(1,1) NE '(').ZG201R               00529700
&ZCGPR            SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)                  00529800
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG201P                   00529900
                  AIF   (K'&ZCGPR GT 2).ZG201Q                          00530000
                  AIF   ('&ZCGPR' EQ '0').ZG201Q                        00530100
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00530200
                  AIF   (T'&ZCGPR NE 'N').ZG201Q  INVALID REG NAME      00530300
.ZG201P           ANOP  ,                                               00530400
                  AIF   (T'&ZCGPR NE 'N').ZG201R  NON NUMERIC           00530500
                  AIF   ('&ZCGPR' LT '2').ZG201Q                        00530600
                  AIF   ('&ZCGPR' LE '12').ZG201R                       00530700
.ZG201Q           ANOP  ,                                               00530800
&ZMS              SETC  '"ENTRYKEY='                                    00530900
&ZMS              SETC  '&ZMS.&ENTRYKEY"'                               00531000
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00531100
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00531200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00531300
.ZG201R           ANOP  ,                                               00531400
.*------------------------------------------------------------------    00531500
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00531600
.ZG203            ANOP  ,                                               00531700
&ZXEMCLEVEL       SETC  'INPUT'     SET IN/OUTPUT                       00531800
                  AIF   (K'&XEMCLEVEL GT 0).ZG203E  VALID ARG           00531900
                  AIF   (T'&EMCLEVEL EQ 'O').ZG203D  OMITTED            00532000
&ZASYSLNDX        SETA  0                                               00532100
.ZG203A           ANOP  ,           POSITIONAL MACRO KEY                00532200
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00532300
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG203C               00532400
&ZTLC             SETC 'EMCLEVEL'                                       00532500
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG203A      00532600
.ZG203B           ANOP  ,                                               00532700
&ZXEMCLEVEL       SETC  ''          RESET IN/OUTPUT                     00532800
&ZMS              SETC  'THE "EMCLEVEL" KEY'                            00532900
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00533000
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00533100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00533200
                  AGO   .ZG203E                                         00533300
.ZG203C           ANOP  ,                                               00533400
&ZXEMCLEVEL       SETC  ''          RESET IN/OUTPUT                     00533500
&ZMS              SETC  '"EMCLEVEL='                                    00533600
&ZMS              SETC  '&ZMS.&EMCLEVEL"'                               00533700
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00533800
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00533900
&ZMS              SETC  '&ZMS "SUMMARY"'                                00534000
&ZMS              SETC  '&ZMS OR "EMC".'                                00534100
                  MNOTE 8,' &ZMS '                                      00534200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00534300
                  AGO   .ZG203E                                         00534400
.ZG203D           ANOP  ,                                               00534500
&XEMCLEVEL        SETC  'SUMMARY'   SET DEFAULT KEYWORD                 00534600
.ZG203E           ANOP  ,                                               00534700
.*------------------------------------------------------------------    00534800
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00534900
                  AIF   (K'&EMCLEVEL(1) GT 0).ZG203F  PARM              00535000
&XEMCLEVEL        SETC  ''          ENSURE NULL KEYWORD                 00535100
&ZXEMCLEVEL       SETC  ''          RESET IN/OUTPUT                     00535200
&ZMS              SETC  'THE'                                           00535300
&ZMS              SETC  '&ZMS "EMCLEVEL" KEY AND ITS'                   00535400
&ZMS              SETC  '&ZMS ARGUMENT ARE REQUIRED.'                   00535500
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00535600
&ZMS              SETC  '&ZMS "SUMMARY"'                                00535700
&ZMS              SETC  '&ZMS OR "EMC".'                                00535800
                  MNOTE 8,' &ZMS '                                      00535900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00536000
.ZG203F           ANOP  ,                                               00536100
.*-------------------------------------------------------------------   00536200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00536300
.ZG204            ANOP  ,                                               00536400
&ZTLC             SETC 'EVENTQS'                                        00536500
                  AIF   ('&TYPE(1)' NE '&ZTLC').ZG225                   00536600
&XTYPE            SETC  'EVENTQS'   SET KEYWORD                         00536700
                  AIF   (N'&TYPE LE 1).ZG204A   CK NUM                  00536800
&ZMS              SETC  '"TYPE='                                        00536900
&ZMS              SETC  '&ZMS.&TYPE"'                                   00537000
&ZMS              SETC  '&ZMS "TYPE"'                                   00537100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00537200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00537300
.ZG204A           ANOP  ,                                               00537400
.*------------------------------------------------------------------    00537500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00537600
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00537700
.ZG204A0          AIF   (K'&STRLEVEL LE 0).ZG204A1  OK                  00537800
&ZCVAL            SETC '&ZCVAL STRLEVEL'        INCORRECT KEY USED      00537900
.ZG204A1          AIF   (K'&CLASSTYPE LE 0).ZG204A2  OK                 00538000
&ZCVAL            SETC '&ZCVAL CLASSTYPE'       INCORRECT KEY USED      00538100
.ZG204A2          AIF   (K'&CLASSLEVEL LE 0).ZG204A3  OK                00538200
&ZCVAL            SETC '&ZCVAL CLASSLEVEL'      INCORRECT KEY USED      00538300
.ZG204A3          AIF   (K'&CLASSVAL LE 0).ZG204A4  OK                  00538400
&ZCVAL            SETC '&ZCVAL CLASSVAL'        INCORRECT KEY USED      00538500
.ZG204A4          AIF   (K'&STARTPOS LE 0).ZG204A5  OK                  00538600
&ZCVAL            SETC '&ZCVAL STARTPOS'        INCORRECT KEY USED      00538700
.ZG204A5          AIF   (K'&ENDPOS LE 0).ZG204A6  OK                    00538800
&ZCVAL            SETC '&ZCVAL ENDPOS'          INCORRECT KEY USED      00538900
.ZG204A6          AIF   (K'&ORDER LE 0).ZG204A7  OK                     00539000
&ZCVAL            SETC '&ZCVAL ORDER'           INCORRECT KEY USED      00539100
.ZG204A7          AIF   (K'&ADJUNCT LE 0).ZG204A8  OK                   00539200
&ZCVAL            SETC '&ZCVAL ADJUNCT'         INCORRECT KEY USED      00539300
.ZG204A8          AIF   (K'&ENTRYDATA LE 0).ZG204A9  OK                 00539400
&ZCVAL            SETC '&ZCVAL ENTRYDATA'       INCORRECT KEY USED      00539500
.ZG204A9          AIF   (K'&LISTNUMLEVEL LE 0).ZG204A10  OK             00539600
&ZCVAL            SETC '&ZCVAL LISTNUMLEVEL'    INCORRECT KEY USED      00539700
.ZG204A10         AIF   (K'&LISTNUMVAL LE 0).ZG204A11  OK               00539800
&ZCVAL            SETC '&ZCVAL LISTNUMVAL'      INCORRECT KEY USED      00539900
.ZG204A11         AIF   (K'&ENTRYKEY LE 0).ZG204A12  OK                 00540000
&ZCVAL            SETC '&ZCVAL ENTRYKEY'        INCORRECT KEY USED      00540100
.ZG204A12         AIF   (K'&ENTRYNAME LE 0).ZG204A13  OK                00540200
&ZCVAL            SETC '&ZCVAL ENTRYNAME'       INCORRECT KEY USED      00540300
.ZG204A13         AIF   (K'&ENTRYID LE 0).ZG204A14  OK                  00540400
&ZCVAL            SETC '&ZCVAL ENTRYID'         INCORRECT KEY USED      00540500
.ZG204A14         AIF   (K'&EMCLEVEL LE 0).ZG204A15  OK                 00540600
&ZCVAL            SETC '&ZCVAL EMCLEVEL'        INCORRECT KEY USED      00540700
.ZG204A15         AIF   (K'&ZCVAL LE 0).ZG204A16  OK                    00540800
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00540900
&ZMS              SETC  '"TYPE'                                         00541000
&ZMS              SETC  '&ZMS.=&TYPE"'                                  00541100
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00541200
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00541300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00541400
.ZG204A16         ANOP  ,                                               00541500
.*----------------------------------------------------------------***   00541600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00541700
                  AIF   (N'&STRNAME LE 1).ZG206A  CK NUM                00541800
&ZMS              SETC  '"STRNAME='                                     00541900
&ZMS              SETC  '&ZMS.&STRNAME"'                                00542000
&ZMS              SETC  '&ZMS "STRNAME"'                                00542100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00542200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00542300
.ZG206A           ANOP  ,                                               00542400
.*-------------------------------------------------------------------   00542500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00542600
&ZXSTRNAME        SETC  'INPUT'     SET IN/OUTPUT                       00542700
&XSTRNAME         SETC  '&STRNAME(1)'           SET XVARIABLE           00542800
                  AIF   (N'&STRNAME GT 1).ZG206B  MULTI                 00542900
&XSTRNAME         SETC  '&STRNAME'  SET XVARIABLE                       00543000
.ZG206B           AIF   (K'&STRNAME(1) GT 0).ZG206C                     00543100
&ZXSTRNAME        SETC  ''          RESET IN/OUTPUT                     00543200
&ZMS              SETC  ' '                                             00543300
&ZMS              SETC  '&ZMS "STRNAME" KEY AND ITS'                    00543400
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00543500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00543600
.ZG206C           ANOP  ,                                               00543700
.*-------------------------------------------------------------------   00543800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00543900
                  AIF   (K'&ZXSTRNAME LE 0).ZG206R  NOT I/O             00544000
                  AIF   ('&XSTRNAME'(1,1) NE '(').ZG206R                00544100
&ZCGPR            SETC  '&XSTRNAME'(2,K'&XSTRNAME-2)                    00544200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG206P                   00544300
                  AIF   (K'&ZCGPR GT 2).ZG206Q                          00544400
                  AIF   ('&ZCGPR' EQ '0').ZG206Q                        00544500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00544600
                  AIF   (T'&ZCGPR NE 'N').ZG206Q  INVALID REG NAME      00544700
.ZG206P           ANOP  ,                                               00544800
                  AIF   (T'&ZCGPR NE 'N').ZG206R  NON NUMERIC           00544900
                  AIF   ('&ZCGPR' LT '2').ZG206Q                        00545000
                  AIF   ('&ZCGPR' LE '12').ZG206R                       00545100
.ZG206Q           ANOP  ,                                               00545200
&ZMS              SETC  '"STRNAME='                                     00545300
&ZMS              SETC  '&ZMS.&STRNAME"'                                00545400
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00545500
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00545600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00545700
.ZG206R           ANOP  ,                                               00545800
.*----------------------------------------------------------------***   00545900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00546000
                  AIF   (N'&STRDUMPID LE 1).ZG209A  CK NUM              00546100
&ZMS              SETC  '"STRDUMPID='                                   00546200
&ZMS              SETC  '&ZMS.&STRDUMPID"'                              00546300
&ZMS              SETC  '&ZMS "STRDUMPID"'                              00546400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00546500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00546600
.ZG209A           ANOP  ,                                               00546700
.*-------------------------------------------------------------------   00546800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00546900
&ZXSTRDUMPID      SETC  'INPUT'     SET IN/OUTPUT                       00547000
&XSTRDUMPID       SETC  '&STRDUMPID(1)'         SET XVARIABLE           00547100
                  AIF   (N'&STRDUMPID GT 1).ZG209B  MULTI               00547200
&XSTRDUMPID       SETC  '&STRDUMPID'            SET XVARIABLE           00547300
.ZG209B           AIF   (K'&STRDUMPID(1) GT 0).ZG209C                   00547400
&ZXSTRDUMPID      SETC  ''          RESET IN/OUTPUT                     00547500
&ZMS              SETC  ' '                                             00547600
&ZMS              SETC  '&ZMS "STRDUMPID" KEY AND ITS'                  00547700
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00547800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00547900
.ZG209C           ANOP  ,                                               00548000
.*-------------------------------------------------------------------   00548100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00548200
                  AIF   (K'&ZXSTRDUMPID LE 0).ZG209R  NOT I/O           00548300
                  AIF   ('&XSTRDUMPID'(1,1) NE '(').ZG209R              00548400
&ZCGPR            SETC  '&XSTRDUMPID'(2,K'&XSTRDUMPID-2)                00548500
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG209P                   00548600
                  AIF   (K'&ZCGPR GT 2).ZG209Q                          00548700
                  AIF   ('&ZCGPR' EQ '0').ZG209Q                        00548800
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00548900
                  AIF   (T'&ZCGPR NE 'N').ZG209Q  INVALID REG NAME      00549000
.ZG209P           ANOP  ,                                               00549100
                  AIF   (T'&ZCGPR NE 'N').ZG209R  NON NUMERIC           00549200
                  AIF   ('&ZCGPR' LT '2').ZG209Q                        00549300
                  AIF   ('&ZCGPR' LE '12').ZG209R                       00549400
.ZG209Q           ANOP  ,                                               00549500
&ZMS              SETC  '"STRDUMPID='                                   00549600
&ZMS              SETC  '&ZMS.&STRDUMPID"'                              00549700
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00549800
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00549900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00550000
.ZG209R           ANOP  ,                                               00550100
.*------------------------------------------------------------------    00550200
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00550300
&XEQLEVEL         SETC  ''          INITIALIZE XVARIABLE                00550400
.*-------------------------------------------------------------------   00550500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00550600
.ZG213            ANOP  ,                                               00550700
                  AIF   (K'&EQLEVEL(1) LE 0).ZG213A                     00550800
&ZTLC             SETC 'DETAIL'                                         00550900
                  AIF   ('&EQLEVEL(1)' NE '&ZTLC').ZG220                00551000
&XEQLEVEL         SETC  'DETAIL'    SET KEYWORD                         00551100
                  AIF   (N'&EQLEVEL LE 1).ZG213A  CK NUM                00551200
&ZMS              SETC  '"EQLEVEL='                                     00551300
&ZMS              SETC  '&ZMS.&EQLEVEL"'                                00551400
&ZMS              SETC  '&ZMS "EQLEVEL"'                                00551500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00551600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00551700
.ZG213A           ANOP  ,                                               00551800
.*------------------------------------------------------------------    00551900
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00552000
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00552100
.ZG213A0          AIF   (K'&CONIDVAL LE 0).ZG213A1  OK                  00552200
&ZCVAL            SETC '&ZCVAL CONIDVAL'        INCORRECT KEY USED      00552300
.ZG213A1          AIF   (K'&ZCVAL LE 0).ZG213A2  OK                     00552400
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00552500
&ZMS              SETC  '"EQLEVEL'                                      00552600
&ZMS              SETC  '&ZMS.=&EQLEVEL"'                               00552700
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00552800
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00552900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00553000
.ZG213A2          ANOP  ,                                               00553100
.*----------------------------------------------------------------***   00553200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00553300
                  AIF   (N'&STARTVAL LE 1).ZG215A  CK NUM               00553400
&ZMS              SETC  '"STARTVAL='                                    00553500
&ZMS              SETC  '&ZMS.&STARTVAL"'                               00553600
&ZMS              SETC  '&ZMS "STARTVAL"'                               00553700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00553800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00553900
.ZG215A           ANOP  ,                                               00554000
.*-------------------------------------------------------------------   00554100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00554200
&ZXSTARTVAL       SETC  'INPUT'     SET IN/OUTPUT                       00554300
&XSTARTVAL        SETC  'ALL'                                           00554400
                  AIF   (K'&STARTVAL(1) LE 0).ZG215B  PARM              00554500
&XSTARTVAL        SETC  '&STARTVAL(1)'          SET XVARIABLE           00554600
                  AIF   (N'&STARTVAL GT 1).ZG215B  MULTI                00554700
&XSTARTVAL        SETC  '&STARTVAL'             SET XVARIABLE           00554800
.ZG215B           ANOP  ,                                               00554900
.*-------------------------------------------------------------------   00555000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00555100
                  AIF   (K'&ZXSTARTVAL LE 0).ZG215R  NOT I/O            00555200
         AIF   ('&XSTARTVAL' EQ 'ALL').ZG215R                           00555300
                  AIF   ('&XSTARTVAL'(1,1) NE '(').ZG215R               00555400
&ZCGPR            SETC  '&XSTARTVAL'(2,K'&XSTARTVAL-2)                  00555500
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG215P                   00555600
                  AIF   (K'&ZCGPR GT 2).ZG215Q                          00555700
                  AIF   ('&ZCGPR' EQ '0').ZG215Q                        00555800
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00555900
                  AIF   (T'&ZCGPR NE 'N').ZG215Q  INVALID REG NAME      00556000
.ZG215P           ANOP  ,                                               00556100
                  AIF   (T'&ZCGPR NE 'N').ZG215R  NON NUMERIC           00556200
                  AIF   ('&ZCGPR' LT '2').ZG215Q                        00556300
                  AIF   ('&ZCGPR' LE '12').ZG215R                       00556400
.ZG215Q           ANOP  ,                                               00556500
&ZMS              SETC  '"STARTVAL='                                    00556600
&ZMS              SETC  '&ZMS.&STARTVAL"'                               00556700
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00556800
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00556900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00557000
.ZG215R           ANOP  ,                                               00557100
.*----------------------------------------------------------------***   00557200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00557300
                  AIF   (N'&ENDVAL LE 1).ZG217A  CK NUM                 00557400
&ZMS              SETC  '"ENDVAL='                                      00557500
&ZMS              SETC  '&ZMS.&ENDVAL"'                                 00557600
&ZMS              SETC  '&ZMS "ENDVAL"'                                 00557700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00557800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00557900
.ZG217A           ANOP  ,                                               00558000
.*-------------------------------------------------------------------   00558100
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00558200
&XENDVAL          SETC  'STARTVAL'  SET DEFAULT                         00558300
                  AIF   (K'&ENDVAL(1) LE 0).ZG217C  PARM                00558400
&XENDVAL          SETC  '&ENDVAL(1)'            SET XVARIABLE           00558500
                  AIF   (N'&ENDVAL GT 1).ZG217B  MULTI                  00558600
&XENDVAL          SETC  '&ENDVAL'   SET XVARIABLE                       00558700
.ZG217B           AIF   (K'&STARTVAL(1) GT 0).ZG217C  KEY               00558800
&ZMS              SETC  '"ENDVAL'                                       00558900
&ZMS              SETC  '&ZMS.=&ENDVAL"'                                00559000
&ZMS              SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                 00559100
&ZMS              SETC  '&ZMS '                                         00559200
&ZMS              SETC  '&ZMS "STARTVAL"'                               00559300
                  MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                    00559400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00559500
.ZG217C           ANOP  ,                                               00559600
&ZXENDVAL         SETC  'INPUT'     SET IN/OUTPUT                       00559700
.*-------------------------------------------------------------------   00559800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00559900
                  AIF   (K'&ZXENDVAL LE 0).ZG217R  NOT I/O              00560000
         AIF   ('&XENDVAL' EQ 'STARTVAL').ZG217R                        00560100
                  AIF   ('&XENDVAL'(1,1) NE '(').ZG217R                 00560200
&ZCGPR            SETC  '&XENDVAL'(2,K'&XENDVAL-2)                      00560300
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG217P                   00560400
                  AIF   (K'&ZCGPR GT 2).ZG217Q                          00560500
                  AIF   ('&ZCGPR' EQ '0').ZG217Q                        00560600
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00560700
                  AIF   (T'&ZCGPR NE 'N').ZG217Q  INVALID REG NAME      00560800
.ZG217P           ANOP  ,                                               00560900
                  AIF   (T'&ZCGPR NE 'N').ZG217R  NON NUMERIC           00561000
                  AIF   ('&ZCGPR' LT '2').ZG217Q                        00561100
                  AIF   ('&ZCGPR' LE '12').ZG217R                       00561200
.ZG217Q           ANOP  ,                                               00561300
&ZMS              SETC  '"ENDVAL='                                      00561400
&ZMS              SETC  '&ZMS.&ENDVAL"'                                 00561500
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00561600
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00561700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00561800
.ZG217R           ANOP  ,                                               00561900
.*-------------------------------------------------------------------   00562000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00562100
.ZG220            ANOP  ,                                               00562200
&ZTLC             SETC 'EMC'                                            00562300
                  AIF   ('&EQLEVEL(1)' NE '&ZTLC').ZG224                00562400
&XEQLEVEL         SETC  'EMC'       SET KEYWORD                         00562500
                  AIF   (N'&EQLEVEL LE 1).ZG220A  CK NUM                00562600
&ZMS              SETC  '"EQLEVEL='                                     00562700
&ZMS              SETC  '&ZMS.&EQLEVEL"'                                00562800
&ZMS              SETC  '&ZMS "EQLEVEL"'                                00562900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00563000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00563100
.ZG220A           ANOP  ,                                               00563200
.*------------------------------------------------------------------    00563300
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00563400
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00563500
.ZG220A0          AIF   (K'&STARTVAL LE 0).ZG220A1  OK                  00563600
&ZCVAL            SETC '&ZCVAL STARTVAL'        INCORRECT KEY USED      00563700
.ZG220A1          AIF   (K'&ENDVAL LE 0).ZG220A2  OK                    00563800
&ZCVAL            SETC '&ZCVAL ENDVAL'          INCORRECT KEY USED      00563900
.ZG220A2          AIF   (K'&ZCVAL LE 0).ZG220A3  OK                     00564000
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00564100
&ZMS              SETC  '"EQLEVEL'                                      00564200
&ZMS              SETC  '&ZMS.=&EQLEVEL"'                               00564300
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00564400
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00564500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00564600
.ZG220A3          ANOP  ,                                               00564700
.*----------------------------------------------------------------***   00564800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00564900
                  AIF   (N'&CONIDVAL LE 1).ZG222A  CK NUM               00565000
&ZMS              SETC  '"CONIDVAL='                                    00565100
&ZMS              SETC  '&ZMS.&CONIDVAL"'                               00565200
&ZMS              SETC  '&ZMS "CONIDVAL"'                               00565300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00565400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00565500
.ZG222A           ANOP  ,                                               00565600
.*-------------------------------------------------------------------   00565700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00565800
&ZXCONIDVAL       SETC  'INPUT'     SET IN/OUTPUT                       00565900
&XCONIDVAL        SETC  '&CONIDVAL(1)'          SET XVARIABLE           00566000
                  AIF   (N'&CONIDVAL GT 1).ZG222B  MULTI                00566100
&XCONIDVAL        SETC  '&CONIDVAL'             SET XVARIABLE           00566200
.ZG222B           AIF   (K'&CONIDVAL(1) GT 0).ZG222C                    00566300
&ZXCONIDVAL       SETC  ''          RESET IN/OUTPUT                     00566400
&ZMS              SETC  ' '                                             00566500
&ZMS              SETC  '&ZMS "CONIDVAL" KEY AND ITS'                   00566600
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00566700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00566800
.ZG222C           ANOP  ,                                               00566900
.*-------------------------------------------------------------------   00567000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00567100
                  AIF   (K'&ZXCONIDVAL LE 0).ZG222R  NOT I/O            00567200
                  AIF   ('&XCONIDVAL'(1,1) NE '(').ZG222R               00567300
&ZCGPR            SETC  '&XCONIDVAL'(2,K'&XCONIDVAL-2)                  00567400
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG222P                   00567500
                  AIF   (K'&ZCGPR GT 2).ZG222Q                          00567600
                  AIF   ('&ZCGPR' EQ '0').ZG222Q                        00567700
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00567800
                  AIF   (T'&ZCGPR NE 'N').ZG222Q  INVALID REG NAME      00567900
.ZG222P           ANOP  ,                                               00568000
                  AIF   (T'&ZCGPR NE 'N').ZG222R  NON NUMERIC           00568100
                  AIF   ('&ZCGPR' LT '2').ZG222Q                        00568200
                  AIF   ('&ZCGPR' LE '12').ZG222R                       00568300
.ZG222Q           ANOP  ,                                               00568400
&ZMS              SETC  '"CONIDVAL='                                    00568500
&ZMS              SETC  '&ZMS.&CONIDVAL"'                               00568600
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00568700
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00568800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00568900
.ZG222R           ANOP  ,                                               00569000
.*------------------------------------------------------------------    00569100
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00569200
.ZG224            ANOP  ,                                               00569300
&ZXEQLEVEL        SETC  'INPUT'     SET IN/OUTPUT                       00569400
                  AIF   (K'&XEQLEVEL GT 0).ZG224E  VALID ARG            00569500
                  AIF   (T'&EQLEVEL EQ 'O').ZG224D  OMITTED             00569600
&ZASYSLNDX        SETA  0                                               00569700
.ZG224A           ANOP  ,           POSITIONAL MACRO KEY                00569800
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00569900
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG224C               00570000
&ZTLC             SETC 'EQLEVEL'                                        00570100
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG224A      00570200
.ZG224B           ANOP  ,                                               00570300
&ZXEQLEVEL        SETC  ''          RESET IN/OUTPUT                     00570400
&ZMS              SETC  'THE "EQLEVEL" KEY'                             00570500
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00570600
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00570700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00570800
                  AGO   .ZG224E                                         00570900
.ZG224C           ANOP  ,                                               00571000
&ZXEQLEVEL        SETC  ''          RESET IN/OUTPUT                     00571100
&ZMS              SETC  '"EQLEVEL='                                     00571200
&ZMS              SETC  '&ZMS.&EQLEVEL"'                                00571300
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00571400
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00571500
&ZMS              SETC  '&ZMS "DETAIL"'                                 00571600
&ZMS              SETC  '&ZMS OR "EMC".'                                00571700
                  MNOTE 8,' &ZMS '                                      00571800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00571900
                  AGO   .ZG224E                                         00572000
.ZG224D           ANOP  ,                                               00572100
&XEQLEVEL         SETC  'DETAIL'    SET DEFAULT KEYWORD                 00572200
.ZG224E           ANOP  ,                                               00572300
.*------------------------------------------------------------------    00572400
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00572500
                  AIF   (K'&EQLEVEL(1) GT 0).ZG224F  PARM               00572600
&XEQLEVEL         SETC  ''          ENSURE NULL KEYWORD                 00572700
&ZXEQLEVEL        SETC  ''          RESET IN/OUTPUT                     00572800
&ZMS              SETC  'THE'                                           00572900
&ZMS              SETC  '&ZMS "EQLEVEL" KEY AND ITS'                    00573000
&ZMS              SETC  '&ZMS ARGUMENT ARE REQUIRED.'                   00573100
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00573200
&ZMS              SETC  '&ZMS "DETAIL"'                                 00573300
&ZMS              SETC  '&ZMS OR "EMC".'                                00573400
                  MNOTE 8,' &ZMS '                                      00573500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00573600
.ZG224F           ANOP  ,                                               00573700
.*------------------------------------------------------------------    00573800
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00573900
.ZG225            ANOP  ,                                               00574000
&ZXTYPE           SETC  'INPUT'     SET IN/OUTPUT                       00574100
                  AIF   (K'&XTYPE GT 0).ZG225E  VALID ARG               00574200
                  AIF   (T'&TYPE EQ 'O').ZG225D  OMITTED                00574300
&ZASYSLNDX        SETA  0                                               00574400
.ZG225A           ANOP  ,           POSITIONAL MACRO KEY                00574500
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00574600
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG225C               00574700
&ZTLC             SETC 'TYPE'                                           00574800
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG225A      00574900
.ZG225B           ANOP  ,                                               00575000
&ZXTYPE           SETC  ''          RESET IN/OUTPUT                     00575100
&ZMS              SETC  'THE "TYPE" KEY'                                00575200
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00575300
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00575400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00575500
                  AGO   .ZG225E                                         00575600
.ZG225C           ANOP  ,                                               00575700
&ZXTYPE           SETC  ''          RESET IN/OUTPUT                     00575800
&ZMS              SETC  '"TYPE='                                        00575900
&ZMS              SETC  '&ZMS.&TYPE"'                                   00576000
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00576100
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00576200
&ZMS              SETC  '&ZMS "STRUCTURE",'                             00576300
&ZMS              SETC  '&ZMS "CLASS",'                                 00576400
&ZMS              SETC  '&ZMS "LISTNUM",'                               00576500
&ZMS              SETC  '&ZMS "LOCKENTRIES",'                           00576600
&ZMS              SETC  '&ZMS "USERCNTLS",'                             00576700
&ZMS              SETC  '&ZMS "ENTRY",'                                 00576800
&ZMS              SETC  '&ZMS "EMCONTROLS",'                            00576900
&ZMS              SETC  '&ZMS OR "EVENTQS".'                            00577000
                  MNOTE 8,' &ZMS '                                      00577100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00577200
                  AGO   .ZG225E                                         00577300
.ZG225D           ANOP  ,                                               00577400
&XTYPE            SETC  'STRUCTURE'             SET DEFAULT KEYWORD     00577500
.ZG225E           ANOP  ,                                               00577600
.*------------------------------------------------------------------    00577700
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00577800
                  AIF   (K'&TYPE(1) GT 0).ZG225F  PARM                  00577900
&XTYPE            SETC  ''          ENSURE NULL KEYWORD                 00578000
&ZXTYPE           SETC  ''          RESET IN/OUTPUT                     00578100
&ZMS              SETC  'THE'                                           00578200
&ZMS              SETC  '&ZMS "TYPE" KEY AND ITS'                       00578300
&ZMS              SETC  '&ZMS ARGUMENT ARE REQUIRED.'                   00578400
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00578500
&ZMS              SETC  '&ZMS "STRUCTURE",'                             00578600
&ZMS              SETC  '&ZMS "CLASS",'                                 00578700
&ZMS              SETC  '&ZMS "LISTNUM",'                               00578800
&ZMS              SETC  '&ZMS "LOCKENTRIES",'                           00578900
&ZMS              SETC  '&ZMS "USERCNTLS",'                             00579000
&ZMS              SETC  '&ZMS "ENTRY",'                                 00579100
&ZMS              SETC  '&ZMS "EMCONTROLS",'                            00579200
&ZMS              SETC  '&ZMS OR "EVENTQS".'                            00579300
                  MNOTE 8,' &ZMS '                                      00579400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00579500
.ZG225F           ANOP  ,                                               00579600
.*----------------------------------------------------------------***   00579700
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00579800
                  AIF   (N'&RETCODE LE 1).ZG227A  CK NUM                00579900
&ZMS              SETC  '"RETCODE='                                     00580000
&ZMS              SETC  '&ZMS.&RETCODE"'                                00580100
&ZMS              SETC  '&ZMS "RETCODE"'                                00580200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00580300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00580400
.ZG227A           ANOP  ,                                               00580500
.*-------------------------------------------------------------------   00580600
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00580700
                  AIF   (K'&RETCODE(1) LE 0).ZG227C  NO PARM            00580800
&ZXRETCODE        SETC  'OUTPUT'    SET OUTPUT                          00580900
&XRETCODE         SETC  '&RETCODE(1)'           SET XVARIABLE           00581000
                  AIF   (N'&RETCODE GT 1).ZG227C                        00581100
&XRETCODE         SETC  '&RETCODE'  SET XVARIABLE                       00581200
.ZG227C           ANOP  ,                                               00581300
.*-------------------------------------------------------------------   00581400
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00581500
                  AIF   (K'&ZXRETCODE LE 0).ZG227R  NOT I/O             00581600
                  AIF   ('&XRETCODE'(1,1) NE '(').ZG227R                00581700
&ZCGPR            SETC  '&XRETCODE'(2,K'&XRETCODE-2)                    00581800
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG227P                   00581900
                  AIF   (K'&ZCGPR GT 2).ZG227Q                          00582000
                  AIF   ('&ZCGPR' EQ '0').ZG227Q                        00582100
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00582200
                  AIF   (T'&ZCGPR NE 'N').ZG227Q  INVALID REG NAME      00582300
.ZG227P           ANOP  ,                                               00582400
                  AIF   (T'&ZCGPR NE 'N').ZG227R  NON NUMERIC           00582500
                  AIF   ('&ZCGPR' LT '2').ZG227Q                        00582600
                  AIF   ('&ZCGPR' LE '12').ZG227R                       00582700
.ZG227Q           ANOP  ,                                               00582800
&ZMS              SETC  '"RETCODE='                                     00582900
&ZMS              SETC  '&ZMS.&RETCODE"'                                00583000
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00583100
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00583200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00583300
.ZG227R           ANOP  ,                                               00583400
.*----------------------------------------------------------------***   00583500
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00583600
                  AIF   (N'&RSNCODE LE 1).ZG230A  CK NUM                00583700
&ZMS              SETC  '"RSNCODE='                                     00583800
&ZMS              SETC  '&ZMS.&RSNCODE"'                                00583900
&ZMS              SETC  '&ZMS "RSNCODE"'                                00584000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00584100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00584200
.ZG230A           ANOP  ,                                               00584300
.*-------------------------------------------------------------------   00584400
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00584500
                  AIF   (K'&RSNCODE(1) LE 0).ZG230C  NO PARM            00584600
&ZXRSNCODE        SETC  'OUTPUT'    SET OUTPUT                          00584700
&XRSNCODE         SETC  '&RSNCODE(1)'           SET XVARIABLE           00584800
                  AIF   (N'&RSNCODE GT 1).ZG230C                        00584900
&XRSNCODE         SETC  '&RSNCODE'  SET XVARIABLE                       00585000
.ZG230C           ANOP  ,                                               00585100
.*-------------------------------------------------------------------   00585200
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00585300
                  AIF   (K'&ZXRSNCODE LE 0).ZG230R  NOT I/O             00585400
                  AIF   ('&XRSNCODE'(1,1) NE '(').ZG230R                00585500
&ZCGPR            SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                    00585600
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG230P                   00585700
                  AIF   (K'&ZCGPR GT 2).ZG230Q                          00585800
                  AIF   ('&ZCGPR' EQ '0').ZG230Q                        00585900
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00586000
                  AIF   (T'&ZCGPR NE 'N').ZG230Q  INVALID REG NAME      00586100
.ZG230P           ANOP  ,                                               00586200
                  AIF   (T'&ZCGPR NE 'N').ZG230R  NON NUMERIC           00586300
                  AIF   ('&ZCGPR' LT '2').ZG230Q                        00586400
                  AIF   ('&ZCGPR' LE '12').ZG230R                       00586500
.ZG230Q           ANOP  ,                                               00586600
&ZMS              SETC  '"RSNCODE='                                     00586700
&ZMS              SETC  '&ZMS.&RSNCODE"'                                00586800
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00586900
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00587000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00587100
.ZG230R           ANOP  ,                                               00587200
.******************************************************************     00587300
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00587400
.******************************************************************     00587500
                  ACTR  10000                                           00587600
.*----------------------------------------------------------------***   00587700
.***AH.P02 EXTRA POSITIONALS                                            00587800
                  AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS            00587900
                  AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL            00588000
                  AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL        00588100
                  AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL         00588200
.ZGLISTX1         ANOP  ,                                               00588300
&ZCVAL            SETC  ''          ERROR FIELD                         00588400
&ZAWRK            SETA  0           POSITIONAL NUMBER                   00588500
.ZGLIST2          ANOP  ,                                               00588600
&ZAWRK            SETA  &ZAWRK+1    NEXT POSITIONAL                     00588700
                  AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE            00588800
&ZCVAL            SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                 00588900
                  AGO   .ZGLIST2                                        00589000
.*                                                                      00589100
.ZGLIST3          ANOP  ,                                               00589200
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)   STRIP COMMA             00589300
&ZMS              SETC  'POSITIONAL ARGUMENT(S),'                       00589400
&ZMS              SETC  '&ZMS "&ZCVAL"'                                 00589500
&ZMS              SETC  '&ZMS CANNOT BE USED.'                          00589600
&ZMS              SETC  '&ZMS NO POSITIONAL ARGUMENTS'                  00589700
                  MNOTE 8,' &ZMS ARE ALLOWED.'                          00589800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00589900
.ZGLISTX          ANOP  ,                                               00590000
&ZASYSLNDX        SETA  0                                               00590100
.*-------------------------------------------------------------------   00590200
.***AG.MF04 MF=(SLE)                                                    00590300
.ZGMFX            ANOP  ,           END OF FULL SYNTAX CHECK            00590400
.*******************************************************************    00590500
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00590600
.*******************************************************************    00590700
                  AIF   (&ZMACRET NE 0).ZLX2    ERROR DETECTED          00590800
.*******************************************************************    00590900
.***AE.01  START OF IXLZSTR MACRO CODE                                  00591000
.*******************************************************************    00591100
                  LCLC  &M0M0001                 NAME                   00591200
&M0M0001          SETC  '&XLABEL'                SET NAME               00591300
                  AIF   (K'&XLABEL NE 0).XLAB2                          00591400
&M0M0001          SETC  'M00M&SYSNDX'            DEFAULT NAME           00591500
.*                                                                      00591600
.XLAB2            ANOP  ,                                               00591700
                  AIF   ('&XMF' EQ 'L').XLAB3                           00591800
&M0M0001 DS    0H                             IXLZSTR-1                 00591900
.XLAB3            ANOP  ,                                               00592000
.*******************************************************************    00592100
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00592200
.*******************************************************************    00592300
              PUSH  PRINT                                               00592400
                  AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON      00592500
                  PRINT OFF         ++ PR01                             00592600
                  AGO   .ZPRNTXX                                        00592700
.ZPRINTX          PRINT ON                                              00592800
.ZPRNTXX          ANOP  ,                                               00592900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00593000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00593100
.********************************************************************   00593200
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00593300
.********************************************************************   00593400
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00593500
                      LCLA  &ZOPN1         INVOCATION INDEX             00593600
                      LCLC  &ZOPL(4095)    LABEL                        00593700
                      LCLC  &ZOPO(4095)    OPERATION                    00593800
                      LCLC  &ZOPV(4095)    VALUE                        00593900
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00594000
.*                                                                      00594100
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00594200
.******************************************************************     00594300
.***AL.L10 IXLZSTR FMT=LIST MF=S!L PARAMETERS                           00594400
.******************************************************************     00594500
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00594600
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00594700
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00594800
&XMFATTR              SETC  '0D'                                        00594900
.*                                                                      00595000
&ZOPN                 SETA  &ZOPN+1                                     00595100
&ZOPL(&ZOPN)          SETC  ' '                                         00595200
                      AIF   (&SYSALVL NE 0).ZALVL6A                     00595300
&ZOPO(&ZOPN)          SETC  'B'                                         00595400
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00595500
                      AGO   .ZALVL6B                                    00595600
.ZALVL6A              ANOP                                              00595700
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00595800
&ZOPV(&ZOPN)          SETC  '4,8'                                       00595900
&ZOPN                 SETA  &ZOPN+1                                     00596000
&ZOPL(&ZOPN)          SETC  ' '                                         00596100
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00596200
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00596300
.ZALVL6B              ANOP                                              00596400
&ZOPD(&ZOPN)          SETC  '++ IXLZSTR ARG PARMS'                      00596500
.*                                                                      00596600
&ZOPN                 SETA  &ZOPN+1                                     00596700
&ZOPL(&ZOPN)          SETC  ' '                                         00596800
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00596900
&ZOPV(&ZOPN)          SETC  '1'                                         00597000
&ZOPD(&ZOPN)          SETC  ' '                                         00597100
.*                                                                      00597200
.ZLMFSL2              ANOP  ,                                           00597300
.*-------------------------------------------------------------------   00597400
.***AM.L00  IXLZSTR FMT=LIST name                                       00597500
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00597600
&ZOPN                 SETA &ZOPN+1                                      00597700
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00597800
&ZOPO(&ZOPN)          SETC 'EQU'                                        00597900
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00598000
&ZOPD(&ZOPN)          SETC '++ IXLZSTR NAME'                            00598100
.ZLMFSL2M             ANOP  ,                                           00598200
.*-------------------------------------------------------------------   00598300
.***AM.L01  IXLZSTR FMT=LIST PARAMETERS                                 00598400
&ZOPN                 SETA &ZOPN+1                                      00598500
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00598600
&ZOPO(&ZOPN)          SETC 'DS'                                         00598700
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00598800
&ZOPD(&ZOPN)          SETC '++ IXLZSTR PARM LIST'                       00598900
.*-------------------------------------------------------------------   00599000
.***AM.L09  XABDPLPTR A                                                 00599100
&ZOPN                 SETA &ZOPN+1                                      00599200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XABDPLPTR'                        00599300
&ZOPO(&ZOPN)          SETC 'DS'                                         00599400
&ZOPV(&ZOPN)          SETC 'A'                                          00599500
&ZOPD(&ZOPN)          SETC '++ &ZXABDPLPTR '                            00599600
.*-------------------------------------------------------------------   00599700
.***AM.L09  XRSVSTR2 CL04                                               00599800
&ZOPN                 SETA &ZOPN+1                                      00599900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSVSTR2'                         00600000
&ZOPO(&ZOPN)          SETC 'DS'                                         00600100
&ZOPV(&ZOPN)          SETC 'CL04'                                       00600200
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00600300
.*-------------------------------------------------------------------   00600400
.***AM.L09  XRSVSTR3 CL04                                               00600500
&ZOPN                 SETA &ZOPN+1                                      00600600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSVSTR3'                         00600700
&ZOPO(&ZOPN)          SETC 'DS'                                         00600800
&ZOPV(&ZOPN)          SETC 'CL04'                                       00600900
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00601000
.*-------------------------------------------------------------------   00601100
.***AM.L02 XVERSION XL1                                                 00601200
&ZOPN                 SETA &ZOPN+1                                      00601300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00601400
&ZOPO(&ZOPN)          SETC 'DS'                                         00601500
&ZOPV(&ZOPN)          SETC 'XL1'                                        00601600
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00601700
.*-------------------------------------------------------------------   00601800
.***AM.L05 XLISTNUMLEVEL XL1                                            00601900
&ZOPN                 SETA &ZOPN+1                                      00602000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTNUMLEVEL'                    00602100
&ZOPO(&ZOPN)          SETC 'DS'                                         00602200
&ZOPV(&ZOPN)          SETC 'XL1'                                        00602300
&ZOPD(&ZOPN)          SETC '++ &ZXLISTNUMLEVEL XLISTNUMLEVEL'           00602400
.*                                                                      00602500
&ZOPN                 SETA  &ZOPN+1                                     00602600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLISTNUMLEVEL_SUMMARY'           00602700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00602800
&ZOPV(&ZOPN)          SETC  '1'                                         00602900
&ZOPD(&ZOPN)          SETC  '++ XLISTNUMLEVEL.'                         00603000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SUMMARY'                      00603100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00603200
.*                                                                      00603300
&ZOPN                 SETA  &ZOPN+1                                     00603400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLISTNUMLEVEL_DETAIL'            00603500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00603600
&ZOPV(&ZOPN)          SETC  '2'                                         00603700
&ZOPD(&ZOPN)          SETC  '++ XLISTNUMLEVEL.'                         00603800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DETAIL'                       00603900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00604000
.*                                                                      00604100
&ZOPN                 SETA  &ZOPN+1                                     00604200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLISTNUMLEVEL_ENTRY'             00604300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00604400
&ZOPV(&ZOPN)          SETC  '3'                                         00604500
&ZOPD(&ZOPN)          SETC  '++ XLISTNUMLEVEL.'                         00604600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ENTRY'                        00604700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00604800
.*-------------------------------------------------------------------   00604900
.***AM.L05 XCLASSLEVEL XL1                                              00605000
&ZOPN                 SETA &ZOPN+1                                      00605100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCLASSLEVEL'                      00605200
&ZOPO(&ZOPN)          SETC 'DS'                                         00605300
&ZOPV(&ZOPN)          SETC 'XL1'                                        00605400
&ZOPD(&ZOPN)          SETC '++ &ZXCLASSLEVEL XCLASSLEVEL'               00605500
.*                                                                      00605600
&ZOPN                 SETA  &ZOPN+1                                     00605700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCLASSLEVEL_SUMMARY'             00605800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00605900
&ZOPV(&ZOPN)          SETC  '1'                                         00606000
&ZOPD(&ZOPN)          SETC  '++ XCLASSLEVEL.'                           00606100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SUMMARY'                      00606200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00606300
.*                                                                      00606400
&ZOPN                 SETA  &ZOPN+1                                     00606500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCLASSLEVEL_DETAIL'              00606600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00606700
&ZOPV(&ZOPN)          SETC  '2'                                         00606800
&ZOPD(&ZOPN)          SETC  '++ XCLASSLEVEL.'                           00606900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DETAIL'                       00607000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00607100
.*                                                                      00607200
&ZOPN                 SETA  &ZOPN+1                                     00607300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCLASSLEVEL_ENTRY'               00607400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00607500
&ZOPV(&ZOPN)          SETC  '3'                                         00607600
&ZOPD(&ZOPN)          SETC  '++ XCLASSLEVEL.'                           00607700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ENTRY'                        00607800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00607900
.*-------------------------------------------------------------------   00608000
.***AM.L05 XSTRLEVEL XL1                                                00608100
&ZOPN                 SETA &ZOPN+1                                      00608200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTRLEVEL'                        00608300
&ZOPO(&ZOPN)          SETC 'DS'                                         00608400
&ZOPV(&ZOPN)          SETC 'XL1'                                        00608500
&ZOPD(&ZOPN)          SETC '++ &ZXSTRLEVEL XSTRLEVEL'                   00608600
.*                                                                      00608700
&ZOPN                 SETA  &ZOPN+1                                     00608800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSTRLEVEL_SUMMARY'               00608900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00609000
&ZOPV(&ZOPN)          SETC  '1'                                         00609100
&ZOPD(&ZOPN)          SETC  '++ XSTRLEVEL.'                             00609200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SUMMARY'                      00609300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00609400
.*                                                                      00609500
&ZOPN                 SETA  &ZOPN+1                                     00609600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSTRLEVEL_DETAIL'                00609700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00609800
&ZOPV(&ZOPN)          SETC  '2'                                         00609900
&ZOPD(&ZOPN)          SETC  '++ XSTRLEVEL.'                             00610000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DETAIL'                       00610100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00610200
.*-------------------------------------------------------------------   00610300
.***AM.L09  XRETCODE F                                                  00610400
&ZOPN                 SETA &ZOPN+1                                      00610500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRETCODE'                         00610600
&ZOPO(&ZOPN)          SETC 'DS'                                         00610700
&ZOPV(&ZOPN)          SETC 'F'                                          00610800
&ZOPD(&ZOPN)          SETC '++ &ZXRETCODE '                             00610900
.*-------------------------------------------------------------------   00611000
.***AM.L09  XRSNCODE F                                                  00611100
&ZOPN                 SETA &ZOPN+1                                      00611200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSNCODE'                         00611300
&ZOPO(&ZOPN)          SETC 'DS'                                         00611400
&ZOPV(&ZOPN)          SETC 'F'                                          00611500
&ZOPD(&ZOPN)          SETC '++ &ZXRSNCODE '                             00611600
.*-------------------------------------------------------------------   00611700
.***AM.L09 ADDR XANSAREA A                                              00611800
&ZOPN                 SETA &ZOPN+1                                      00611900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSAREA_ADDR'                    00612000
&ZOPO(&ZOPN)          SETC 'DS'                                         00612100
&ZOPV(&ZOPN)          SETC 'A'                                          00612200
&ZOPD(&ZOPN)          SETC '++ &ZXANSAREA ADDR'                         00612300
.*-------------------------------------------------------------------   00612400
.***AM.L09  XANSLEN F                                                   00612500
&ZOPN                 SETA &ZOPN+1                                      00612600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSLEN'                          00612700
&ZOPO(&ZOPN)          SETC 'DS'                                         00612800
&ZOPV(&ZOPN)          SETC 'F'                                          00612900
&ZOPD(&ZOPN)          SETC '++ &ZXANSLEN '                              00613000
.*-------------------------------------------------------------------   00613100
.***AM.L09  XRESTOKEN CL64                                              00613200
&ZOPN                 SETA &ZOPN+1                                      00613300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRESTOKEN'                        00613400
&ZOPO(&ZOPN)          SETC 'DS'                                         00613500
&ZOPV(&ZOPN)          SETC 'CL64'                                       00613600
&ZOPD(&ZOPN)          SETC '++ &ZXRESTOKEN '                            00613700
.*-------------------------------------------------------------------   00613800
.***AM.L09  XSTRNAME CL16                                               00613900
&ZOPN                 SETA &ZOPN+1                                      00614000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTRNAME'                         00614100
&ZOPO(&ZOPN)          SETC 'DS'                                         00614200
&ZOPV(&ZOPN)          SETC 'CL16'                                       00614300
&ZOPD(&ZOPN)          SETC '++ &ZXSTRNAME '                             00614400
.*-------------------------------------------------------------------   00614500
.***AM.L09  XENTRYNAME CL16                                             00614600
&ZOPN                 SETA &ZOPN+1                                      00614700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENTRYNAME'                       00614800
&ZOPO(&ZOPN)          SETC 'DS'                                         00614900
&ZOPV(&ZOPN)          SETC 'CL16'                                       00615000
&ZOPD(&ZOPN)          SETC '++ &ZXENTRYNAME '                           00615100
.*-------------------------------------------------------------------   00615200
.***AM.L09  XENTRYID CL12                                               00615300
&ZOPN                 SETA &ZOPN+1                                      00615400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENTRYID'                         00615500
&ZOPO(&ZOPN)          SETC 'DS'                                         00615600
&ZOPV(&ZOPN)          SETC 'CL12'                                       00615700
&ZOPD(&ZOPN)          SETC '++ &ZXENTRYID '                             00615800
.*-------------------------------------------------------------------   00615900
.***AM.L09  XSTARTVAL F                                                 00616000
&ZOPN                 SETA &ZOPN+1                                      00616100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTARTVAL'                        00616200
&ZOPO(&ZOPN)          SETC 'DS'                                         00616300
&ZOPV(&ZOPN)          SETC 'F'                                          00616400
&ZOPD(&ZOPN)          SETC '++ &ZXSTARTVAL '                            00616500
.*-------------------------------------------------------------------   00616600
.***AM.L09  XENDVAL F                                                   00616700
&ZOPN                 SETA &ZOPN+1                                      00616800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENDVAL'                          00616900
&ZOPO(&ZOPN)          SETC 'DS'                                         00617000
&ZOPV(&ZOPN)          SETC 'F'                                          00617100
&ZOPD(&ZOPN)          SETC '++ &ZXENDVAL '                              00617200
.*-------------------------------------------------------------------   00617300
.***AM.L09  XSTARTPOS F                                                 00617400
&ZOPN                 SETA &ZOPN+1                                      00617500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTARTPOS'                        00617600
&ZOPO(&ZOPN)          SETC 'DS'                                         00617700
&ZOPV(&ZOPN)          SETC 'F'                                          00617800
&ZOPD(&ZOPN)          SETC '++ &ZXSTARTPOS '                            00617900
.*-------------------------------------------------------------------   00618000
.***AM.L09  XENDPOS F                                                   00618100
&ZOPN                 SETA &ZOPN+1                                      00618200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENDPOS'                          00618300
&ZOPO(&ZOPN)          SETC 'DS'                                         00618400
&ZOPV(&ZOPN)          SETC 'F'                                          00618500
&ZOPD(&ZOPN)          SETC '++ &ZXENDPOS '                              00618600
.*-------------------------------------------------------------------   00618700
.***AM.L09  XCLASSVAL F                                                 00618800
&ZOPN                 SETA &ZOPN+1                                      00618900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCLASSVAL'                        00619000
&ZOPO(&ZOPN)          SETC 'DS'                                         00619100
&ZOPV(&ZOPN)          SETC 'F'                                          00619200
&ZOPD(&ZOPN)          SETC '++ &ZXCLASSVAL '                            00619300
.*-------------------------------------------------------------------   00619400
.***AM.L09  XLISTNUMVAL F                                               00619500
&ZOPN                 SETA &ZOPN+1                                      00619600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTNUMVAL'                      00619700
&ZOPO(&ZOPN)          SETC 'DS'                                         00619800
&ZOPV(&ZOPN)          SETC 'F'                                          00619900
&ZOPD(&ZOPN)          SETC '++ &ZXLISTNUMVAL '                          00620000
.*-------------------------------------------------------------------   00620100
.***AM.L09  XSTRDUMPID XL2                                              00620200
&ZOPN                 SETA &ZOPN+1                                      00620300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTRDUMPID'                       00620400
&ZOPO(&ZOPN)          SETC 'DS'                                         00620500
&ZOPV(&ZOPN)          SETC 'XL2'                                        00620600
&ZOPD(&ZOPN)          SETC '++ &ZXSTRDUMPID '                           00620700
.*-------------------------------------------------------------------   00620800
.***AM.L09  XRSV0030 CL2                                                00620900
&ZOPN                 SETA &ZOPN+1                                      00621000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0030'                         00621100
&ZOPO(&ZOPN)          SETC 'DS'                                         00621200
&ZOPV(&ZOPN)          SETC 'CL2'                                        00621300
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00621400
.*-------------------------------------------------------------------   00621500
.***AM.L09  XENTRYKEY CL16                                              00621600
&ZOPN                 SETA &ZOPN+1                                      00621700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENTRYKEY'                        00621800
&ZOPO(&ZOPN)          SETC 'DS'                                         00621900
&ZOPV(&ZOPN)          SETC 'CL16'                                       00622000
&ZOPD(&ZOPN)          SETC '++ &ZXENTRYKEY '                            00622100
.*-------------------------------------------------------------------   00622200
.***AM.L03 XCLASSTYPE BL.8                                              00622300
&ZOPN                 SETA &ZOPN+1                                      00622400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCLASSTYPE'                       00622500
&ZOPO(&ZOPN)          SETC 'DS'                                         00622600
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00622700
&ZOPD(&ZOPN)          SETC '++ INPUT'                                   00622800
.*                                                                      00622900
&ZOPN                 SETA  &ZOPN+1                                     00623000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCLASSTYPE_CASTOUT'              00623100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00623200
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00623300
&ZOPD(&ZOPN)          SETC  '++ XCLASSTYPE.'                            00623400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CASTOUT'                      00623500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00623600
.*                                                                      00623700
&ZOPN                 SETA  &ZOPN+1                                     00623800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCLASSTYPE_STORAGE'              00623900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00624000
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00624100
&ZOPD(&ZOPN)          SETC  '++ XCLASSTYPE.'                            00624200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).STORAGE'                      00624300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00624400
.*-------------------------------------------------------------------   00624500
.***AM.L03 XADJUNCT BL.8                                                00624600
&ZOPN                 SETA &ZOPN+1                                      00624700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XADJUNCT'                         00624800
&ZOPO(&ZOPN)          SETC 'DS'                                         00624900
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00625000
&ZOPD(&ZOPN)          SETC '++ INPUT'                                   00625100
.*                                                                      00625200
&ZOPN                 SETA  &ZOPN+1                                     00625300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XADJUNCT_NO'                     00625400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00625500
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00625600
&ZOPD(&ZOPN)          SETC  '++ XADJUNCT.'                              00625700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           00625800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00625900
.*                                                                      00626000
&ZOPN                 SETA  &ZOPN+1                                     00626100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XADJUNCT_YES'                    00626200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00626300
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00626400
&ZOPD(&ZOPN)          SETC  '++ XADJUNCT.'                              00626500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00626600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00626700
.*-------------------------------------------------------------------   00626800
.***AM.L03 XENTRYDATA BL.8                                              00626900
&ZOPN                 SETA &ZOPN+1                                      00627000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENTRYDATA'                       00627100
&ZOPO(&ZOPN)          SETC 'DS'                                         00627200
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00627300
&ZOPD(&ZOPN)          SETC '++ INPUT'                                   00627400
.*                                                                      00627500
&ZOPN                 SETA  &ZOPN+1                                     00627600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XENTRYDATA_NO'                   00627700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00627800
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00627900
&ZOPD(&ZOPN)          SETC  '++ XENTRYDATA.'                            00628000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           00628100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00628200
.*                                                                      00628300
&ZOPN                 SETA  &ZOPN+1                                     00628400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XENTRYDATA_YES'                  00628500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00628600
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00628700
&ZOPD(&ZOPN)          SETC  '++ XENTRYDATA.'                            00628800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00628900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00629000
.*-------------------------------------------------------------------   00629100
.***AM.L03 XFLAGS BL.8                                                  00629200
&ZOPN                 SETA &ZOPN+1                                      00629300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS'                           00629400
&ZOPO(&ZOPN)          SETC 'DS'                                         00629500
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00629600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00629700
.*                                                                      00629800
&ZOPN                 SETA  &ZOPN+1                                     00629900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_STARTVAL'                00630000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00630100
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00630200
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00630300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).STARTVAL'                     00630400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00630500
.*                                                                      00630600
&ZOPN                 SETA  &ZOPN+1                                     00630700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_ENDVAL'                  00630800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00630900
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00631000
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00631100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ENDVAL'                       00631200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00631300
.*                                                                      00631400
&ZOPN                 SETA  &ZOPN+1                                     00631500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_ENTRYNAME'               00631600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00631700
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00631800
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00631900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ENTRYNAME'                    00632000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00632100
.*                                                                      00632200
&ZOPN                 SETA  &ZOPN+1                                     00632300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_ENTRYID'                 00632400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00632500
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00632600
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00632700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ENTRYID'                      00632800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00632900
.*                                                                      00633000
&ZOPN                 SETA  &ZOPN+1                                     00633100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_ENTRYKEY'                00633200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00633300
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00633400
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00633500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ENTRYKEY'                     00633600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00633700
.*                                                                      00633800
&ZOPN                 SETA  &ZOPN+1                                     00633900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_STARTPOS'                00634000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00634100
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00634200
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00634300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).STARTPOS'                     00634400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00634500
.*                                                                      00634600
&ZOPN                 SETA  &ZOPN+1                                     00634700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_ENDPOS'                  00634800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00634900
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00635000
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00635100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ENDPOS'                       00635200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00635300
.*-------------------------------------------------------------------   00635400
.***AM.L03 XORDER BL.8                                                  00635500
&ZOPN                 SETA &ZOPN+1                                      00635600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XORDER'                           00635700
&ZOPO(&ZOPN)          SETC 'DS'                                         00635800
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00635900
&ZOPD(&ZOPN)          SETC '++ INPUT'                                   00636000
.*                                                                      00636100
&ZOPN                 SETA  &ZOPN+1                                     00636200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XORDER_HEAD'                     00636300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00636400
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00636500
&ZOPD(&ZOPN)          SETC  '++ XORDER.'                                00636600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).HEAD'                         00636700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00636800
.*                                                                      00636900
&ZOPN                 SETA  &ZOPN+1                                     00637000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XORDER_TAIL'                     00637100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00637200
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00637300
&ZOPD(&ZOPN)          SETC  '++ XORDER.'                                00637400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).TAIL'                         00637500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00637600
.*-------------------------------------------------------------------   00637700
.***AM.L05 XTYPE XL1                                                    00637800
&ZOPN                 SETA &ZOPN+1                                      00637900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTYPE'                            00638000
&ZOPO(&ZOPN)          SETC 'DS'                                         00638100
&ZOPV(&ZOPN)          SETC 'XL1'                                        00638200
&ZOPD(&ZOPN)          SETC '++ &ZXTYPE XTYPE'                           00638300
.*                                                                      00638400
&ZOPN                 SETA  &ZOPN+1                                     00638500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_STRUCTURE'                 00638600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00638700
&ZOPV(&ZOPN)          SETC  '1'                                         00638800
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00638900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).STRUCTURE'                    00639000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00639100
.*                                                                      00639200
&ZOPN                 SETA  &ZOPN+1                                     00639300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_CLASS'                     00639400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00639500
&ZOPV(&ZOPN)          SETC  '2'                                         00639600
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00639700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CLASS'                        00639800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00639900
.*                                                                      00640000
&ZOPN                 SETA  &ZOPN+1                                     00640100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_LISTNUM'                   00640200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00640300
&ZOPV(&ZOPN)          SETC  '3'                                         00640400
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00640500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LISTNUM'                      00640600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00640700
.*                                                                      00640800
&ZOPN                 SETA  &ZOPN+1                                     00640900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_LOCKENTRIES'               00641000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00641100
&ZOPV(&ZOPN)          SETC  '4'                                         00641200
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00641300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LOCKENTRIES'                  00641400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00641500
.*                                                                      00641600
&ZOPN                 SETA  &ZOPN+1                                     00641700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_USERCNTLS'                 00641800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00641900
&ZOPV(&ZOPN)          SETC  '5'                                         00642000
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00642100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).USERCNTLS'                    00642200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00642300
.*                                                                      00642400
&ZOPN                 SETA  &ZOPN+1                                     00642500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_ENTRY'                     00642600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00642700
&ZOPV(&ZOPN)          SETC  '6'                                         00642800
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00642900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ENTRY'                        00643000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00643100
.*                                                                      00643200
&ZOPN                 SETA  &ZOPN+1                                     00643300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_EMCONTROLS'                00643400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00643500
&ZOPV(&ZOPN)          SETC  '7'                                         00643600
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00643700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).EMCONTROLS'                   00643800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00643900
.*                                                                      00644000
&ZOPN                 SETA  &ZOPN+1                                     00644100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_EVENTQS'                   00644200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00644300
&ZOPV(&ZOPN)          SETC  '8'                                         00644400
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00644500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).EVENTQS'                      00644600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00644700
.*-------------------------------------------------------------------   00644800
.***AM.L05 XEMCLEVEL XL1                                                00644900
&ZOPN                 SETA &ZOPN+1                                      00645000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEMCLEVEL'                        00645100
&ZOPO(&ZOPN)          SETC 'DS'                                         00645200
&ZOPV(&ZOPN)          SETC 'XL1'                                        00645300
&ZOPD(&ZOPN)          SETC '++ &ZXEMCLEVEL XEMCLEVEL'                   00645400
.*                                                                      00645500
&ZOPN                 SETA  &ZOPN+1                                     00645600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XEMCLEVEL_SUMMARY'               00645700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00645800
&ZOPV(&ZOPN)          SETC  '1'                                         00645900
&ZOPD(&ZOPN)          SETC  '++ XEMCLEVEL.'                             00646000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SUMMARY'                      00646100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00646200
.*                                                                      00646300
&ZOPN                 SETA  &ZOPN+1                                     00646400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XEMCLEVEL_EMC'                   00646500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00646600
&ZOPV(&ZOPN)          SETC  '2'                                         00646700
&ZOPD(&ZOPN)          SETC  '++ XEMCLEVEL.'                             00646800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).EMC'                          00646900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00647000
.*-------------------------------------------------------------------   00647100
.***AM.L05 XEQLEVEL XL1                                                 00647200
&ZOPN                 SETA &ZOPN+1                                      00647300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEQLEVEL'                         00647400
&ZOPO(&ZOPN)          SETC 'DS'                                         00647500
&ZOPV(&ZOPN)          SETC 'XL1'                                        00647600
&ZOPD(&ZOPN)          SETC '++ &ZXEQLEVEL XEQLEVEL'                     00647700
.*                                                                      00647800
&ZOPN                 SETA  &ZOPN+1                                     00647900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XEQLEVEL_DETAIL'                 00648000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00648100
&ZOPV(&ZOPN)          SETC  '1'                                         00648200
&ZOPD(&ZOPN)          SETC  '++ XEQLEVEL.'                              00648300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DETAIL'                       00648400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00648500
.*                                                                      00648600
&ZOPN                 SETA  &ZOPN+1                                     00648700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XEQLEVEL_EMC'                    00648800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00648900
&ZOPV(&ZOPN)          SETC  '2'                                         00649000
&ZOPD(&ZOPN)          SETC  '++ XEQLEVEL.'                              00649100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).EMC'                          00649200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00649300
.*-------------------------------------------------------------------   00649400
.***AM.L09  XCONIDVAL XL1                                               00649500
&ZOPN                 SETA &ZOPN+1                                      00649600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONIDVAL'                        00649700
&ZOPO(&ZOPN)          SETC 'DS'                                         00649800
&ZOPV(&ZOPN)          SETC 'XL1'                                        00649900
&ZOPD(&ZOPN)          SETC '++ &ZXCONIDVAL '                            00650000
.*-------------------------------------------------------------------   00650100
.***AM.L09  XRSV0050 CL31                                               00650200
&ZOPN                 SETA &ZOPN+1                                      00650300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0050'                         00650400
&ZOPO(&ZOPN)          SETC 'DS'                                         00650500
&ZOPV(&ZOPN)          SETC 'CL31'                                       00650600
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00650700
.*-------------------------------------------------------------------   00650800
.***AM.L10 END OF IXLZSTR LIST PARAMETERS                               00650900
&ZOPN                 SETA &ZOPN+1                                      00651000
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00651100
&ZOPO(&ZOPN)          SETC 'EQU'                                        00651200
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00651300
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00651400
.*                                                                      00651500
&ZOPN                 SETA &ZOPN+1                                      00651600
&ZOPL(&ZOPN)          SETC ' '                                          00651700
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00651800
&ZOPV(&ZOPN)          SETC '1'                                          00651900
&ZOPD(&ZOPN)          SETC ' '                                          00652000
.*-------------------------------------------------------------------   00652100
.***AL.L12 IXLZSTR FMT=LIST MF=S!L PARAMETERS                           00652200
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00652300
.*                                                                      00652400
&ZOPN                 SETA  &ZOPN+1                                     00652500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00652600
&ZOPO(&ZOPN)          SETC  'DC'                                        00652700
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00652800
&ZOPD(&ZOPN)          SETC  '++ IXLZSTR ARG PARMS'                      00652900
.*                                                                      00653000
.ZLMFSLX              ANOP  ,                                           00653100
.*-------------------------------------------------------------------   00653200
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00653300
&ZPLLEN               SETA 224                                          00653400
.*                                                                      00653500
.******************************************************************     00653600
.***AI.L01 IXLZSTR FMT=LIST FILL IN PARAMETER AREA                      00653700
.******************************************************************     00653800
                      ACTR  10000                                       00653900
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00654000
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00654100
&ZCVAL                SETC  'LAE'          XAX MODE                     00654200
.ZIMFXA               ANOP ,                                            00654300
.*                                                                      00654400
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00654500
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00654600
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00654700
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00654800
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00654900
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00655000
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00655100
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00655200
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00655300
&ZOPN                 SETA  &ZOPN+1                                     00655400
&ZOPL(&ZOPN)          SETC  ' '                                         00655500
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00655600
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00655700
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00655800
                      AGO   .ZIMFNX                                     00655900
.*                                                                      00656000
.ZIMFN2               ANOP ,                                            00656100
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     00656200
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00656300
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00656400
&ZOPN                 SETA  &ZOPN+1                                     00656500
&ZOPL(&ZOPN)          SETC  ' '                                         00656600
&ZOPO(&ZOPN)          SETC  'LAE'                                       00656700
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00656800
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00656900
                      AGO   .ZIMFNX                                     00657000
.ZIMFNX1              ANOP ,                                            00657100
&ZOPN                 SETA  &ZOPN+1                                     00657200
&ZOPL(&ZOPN)          SETC  ' '                                         00657300
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00657400
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00657500
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00657600
.ZIMFNX               ANOP ,                                            00657700
.********************************************************************   00657800
.***AI.L02 IXLZSTR FMT=LIST INITIALIZE PARAMETER AREA                   00657900
.********************************************************************   00658000
.***AI.L03 MF=(SLE)                                                     00658100
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00658200
.*                                                                      00658300
&ZOPN                 SETA  &ZOPN+1                                     00658400
&ZOPL(&ZOPN)          SETC  ' '                                         00658500
&ZOPO(&ZOPN)          SETC  'XC'                                        00658600
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00658700
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00658800
.ZIMFLX               ANOP  ,                                           00658900
.*-------------------------------------------------------------------   00659000
.***AI.L25  XABDPLPTR AL4                                               00659100
                      AIF   ('&ZXABDPLPTR' EQ '').ZI1E                  00659200
                      AIF   ('&ZXABDPLPTR' EQ 'OUTPUT').ZI1E            00659300
&ZCGPR                SETC  '&XABDPLPTR'                                00659400
.*                                                                      00659500
                      AIF   ('&XABDPLPTR'(1,1) NE '(').ZI1B             00659600
&ZCGPR   SETC  '0('.'&XABDPLPTR'(2,K'&XABDPLPTR-2).')'                  00659700
                      AGO   .ZI1D                                       00659800
.ZI1B                 ANOP  ,                                           00659900
.*                                                                      00660000
&ZC                   SETC  '&XABDPLPTR'(1,1)                           00660100
                      AIF   (T'&ZC NE 'N').ZI1D                         00660200
&ZC                   SETC  '&XABDPLPTR'                                00660300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI1D                00660400
&ZCGPR                SETC  '=AL4(&XABDPLPTR)'                          00660500
.*                                                                      00660600
.ZI1D                 ANOP  ,                                           00660700
.*                                                                      00660800
&ZOPN                 SETA  &ZOPN+1                                     00660900
&ZOPL(&ZOPN)          SETC  ' '                                         00661000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00661100
&ZOPV(&ZOPN)          SETC  '0(4,1),&ZCGPR'                             00661200
&ZOPD(&ZOPN)          SETC  '++ &ZXABDPLPTR XABDPLPTR'                  00661300
.*                                                                      00661400
.ZI1E                 ANOP  ,                                           00661500
.*-------------------------------------------------------------------   00661600
.***AI.L04B XVERSION XL1                                                00661700
                      AIF   (&XPLISTVER EQ 0).ZIMFVZ                    00661800
&ZOPN                 SETA  &ZOPN+1                                     00661900
&ZOPL(&ZOPN)          SETC  ' '                                         00662000
&ZOPO(&ZOPN)          SETC  'MVI'                                       00662100
&ZOPV(&ZOPN)          SETC  '12(1),&XPLISTVER'                          00662200
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00662300
.ZIMFVZ               ANOP  ,                                           00662400
.*-------------------------------------------------------------------   00662500
.***AI.L07 XLISTNUMLEVEL AL1                                            00662600
&ZW                   SETC  ''                                          00662700
.*-------------------------------------------------------------------   00662800
.***AI.L15 XLISTNUMLEVEL "SUMMARY" AL1                                  00662900
         AIF   ('&XLISTNUMLEVEL' NE 'SUMMARY').ZI6A                     00663000
&ZW                   SETC  '1'                                         00663100
.ZI6A                 ANOP  ,                                           00663200
.*-------------------------------------------------------------------   00663300
.***AI.L15 XLISTNUMLEVEL "DETAIL" AL1                                   00663400
         AIF   ('&XLISTNUMLEVEL' NE 'DETAIL').ZI7A                      00663500
&ZW                   SETC  '2'                                         00663600
.ZI7A                 ANOP  ,                                           00663700
.*-------------------------------------------------------------------   00663800
.***AI.L15 XLISTNUMLEVEL "ENTRY" AL1                                    00663900
         AIF   ('&XLISTNUMLEVEL' NE 'ENTRY').ZI8A                       00664000
&ZW                   SETC  '3'                                         00664100
.ZI8A                 ANOP  ,                                           00664200
.*-------------------------------------------------------------------   00664300
.***AI.L17 XLISTNUMLEVEL AL1                                            00664400
                      AIF   ('&ZW' EQ '0').ZI8B                         00664500
                      AIF   ('&ZW' EQ '').ZI8B                          00664600
.*                                                                      00664700
&ZOPN                 SETA  &ZOPN+1                                     00664800
&ZOPL(&ZOPN)          SETC  ' '                                         00664900
&ZOPO(&ZOPN)          SETC  'MVI'                                       00665000
&ZOPV(&ZOPN)          SETC  '13(1),&ZW'                                 00665100
&ZOPD(&ZOPN)          SETC  '++ &ZXLISTNUMLEVEL XLISTNUMLEVEL'          00665200
.ZI8B                 ANOP  ,                                           00665300
.*-------------------------------------------------------------------   00665400
.***AI.L07 XCLASSLEVEL AL1                                              00665500
&ZW                   SETC  ''                                          00665600
.*-------------------------------------------------------------------   00665700
.***AI.L15 XCLASSLEVEL "SUMMARY" AL1                                    00665800
         AIF   ('&XCLASSLEVEL' NE 'SUMMARY').ZI10A                      00665900
&ZW                   SETC  '1'                                         00666000
.ZI10A                ANOP  ,                                           00666100
.*-------------------------------------------------------------------   00666200
.***AI.L15 XCLASSLEVEL "DETAIL" AL1                                     00666300
         AIF   ('&XCLASSLEVEL' NE 'DETAIL').ZI11A                       00666400
&ZW                   SETC  '2'                                         00666500
.ZI11A                ANOP  ,                                           00666600
.*-------------------------------------------------------------------   00666700
.***AI.L15 XCLASSLEVEL "ENTRY" AL1                                      00666800
         AIF   ('&XCLASSLEVEL' NE 'ENTRY').ZI12A                        00666900
&ZW                   SETC  '3'                                         00667000
.ZI12A                ANOP  ,                                           00667100
.*-------------------------------------------------------------------   00667200
.***AI.L17 XCLASSLEVEL AL1                                              00667300
                      AIF   ('&ZW' EQ '0').ZI12B                        00667400
                      AIF   ('&ZW' EQ '').ZI12B                         00667500
.*                                                                      00667600
&ZOPN                 SETA  &ZOPN+1                                     00667700
&ZOPL(&ZOPN)          SETC  ' '                                         00667800
&ZOPO(&ZOPN)          SETC  'MVI'                                       00667900
&ZOPV(&ZOPN)          SETC  '14(1),&ZW'                                 00668000
&ZOPD(&ZOPN)          SETC  '++ &ZXCLASSLEVEL XCLASSLEVEL'              00668100
.ZI12B                ANOP  ,                                           00668200
.*-------------------------------------------------------------------   00668300
.***AI.L07 XSTRLEVEL AL1                                                00668400
&ZW                   SETC  ''                                          00668500
.*-------------------------------------------------------------------   00668600
.***AI.L15 XSTRLEVEL "SUMMARY" AL1                                      00668700
         AIF   ('&XSTRLEVEL' NE 'SUMMARY').ZI14A                        00668800
&ZW                   SETC  '1'                                         00668900
.ZI14A                ANOP  ,                                           00669000
.*-------------------------------------------------------------------   00669100
.***AI.L15 XSTRLEVEL "DETAIL" AL1                                       00669200
         AIF   ('&XSTRLEVEL' NE 'DETAIL').ZI15A                         00669300
&ZW                   SETC  '2'                                         00669400
.ZI15A                ANOP  ,                                           00669500
.*-------------------------------------------------------------------   00669600
.***AI.L17 XSTRLEVEL AL1                                                00669700
                      AIF   ('&ZW' EQ '0').ZI15B                        00669800
                      AIF   ('&ZW' EQ '').ZI15B                         00669900
.*                                                                      00670000
&ZOPN                 SETA  &ZOPN+1                                     00670100
&ZOPL(&ZOPN)          SETC  ' '                                         00670200
&ZOPO(&ZOPN)          SETC  'MVI'                                       00670300
&ZOPV(&ZOPN)          SETC  '15(1),&ZW'                                 00670400
&ZOPD(&ZOPN)          SETC  '++ &ZXSTRLEVEL XSTRLEVEL'                  00670500
.ZI15B                ANOP  ,                                           00670600
.*-------------------------------------------------------------------   00670700
.***AI.L19 ADDR XANSAREA A                                              00670800
                      AIF   ('&ZXANSAREA' EQ '').ZI18H                  00670900
&ZCLNG                SETC  '&XANSAREA'                                 00671000
&ZCGPR                SETC  '14'                                        00671100
         AIF   ('&XANSAREA'(1,1) EQ '(').ZI18F  IN GPR                  00671200
.*                                                                      00671300
&ZOPN                 SETA  &ZOPN+1                                     00671400
&ZOPL(&ZOPN)          SETC  ' '                                         00671500
&ZOPO(&ZOPN)          SETC  'LA'                                        00671600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00671700
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    00671800
.*                                                                      00671900
                      AGO   .ZI18G                                      00672000
.*                                                                      00672100
.ZI18F                ANOP  ,                                           00672200
&ZCGPR   SETC  '&XANSAREA'(2,K'&XANSAREA-2)                             00672300
.*                                                                      00672400
.ZI18G                ANOP  ,                                           00672500
.*                                                                      00672600
&ZOPN                 SETA  &ZOPN+1                                     00672700
&ZOPL(&ZOPN)          SETC  ' '                                         00672800
&ZOPO(&ZOPN)          SETC  'ST'                                        00672900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,24(,1)'                             00673000
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    00673100
.*                                                                      00673200
.ZI18H                ANOP  ,                                           00673300
.*-------------------------------------------------------------------   00673400
.***AI.L25  XANSLEN F                                                   00673500
                      AIF   ('&ZXANSLEN' EQ '').ZI19E                   00673600
                      AIF   ('&ZXANSLEN' EQ 'OUTPUT').ZI19E             00673700
&ZCGPR                SETC  '&XANSLEN'                                  00673800
.*                                                                      00673900
                      AIF   ('&XANSLEN'(1,1) NE '(').ZI19B              00674000
&ZCGPR   SETC  '0('.'&XANSLEN'(2,K'&XANSLEN-2).')'                      00674100
                      AGO   .ZI19D                                      00674200
.ZI19B                ANOP  ,                                           00674300
.*                                                                      00674400
&ZC                   SETC  '&XANSLEN'(1,1)                             00674500
                      AIF   (T'&ZC NE 'N').ZI19D                        00674600
&ZC                   SETC  '&XANSLEN'                                  00674700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI19D               00674800
&ZCGPR                SETC  '=AL4(&XANSLEN)'                            00674900
.*                                                                      00675000
.ZI19D                ANOP  ,                                           00675100
.*                                                                      00675200
&ZOPN                 SETA  &ZOPN+1                                     00675300
&ZOPL(&ZOPN)          SETC  ' '                                         00675400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00675500
&ZOPV(&ZOPN)          SETC  '28(4,1),&ZCGPR'                            00675600
&ZOPD(&ZOPN)          SETC  '++ &ZXANSLEN XANSLEN'                      00675700
.*                                                                      00675800
.ZI19E                ANOP  ,                                           00675900
.*-------------------------------------------------------------------   00676000
.***AI.L25  XRESTOKEN CL64                                              00676100
                      AIF   ('&ZXRESTOKEN' EQ '').ZI20E                 00676200
                      AIF   ('&ZXRESTOKEN' EQ 'OUTPUT').ZI20E           00676300
&ZCGPR                SETC  '&XRESTOKEN'                                00676400
.*                                                                      00676500
                      AIF   ('&XRESTOKEN'(1,1) NE '(').ZI20B            00676600
&ZCGPR   SETC  '0('.'&XRESTOKEN'(2,K'&XRESTOKEN-2).')'                  00676700
.ZI20B                ANOP  ,                                           00676800
.*                                                                      00676900
&ZOPN                 SETA  &ZOPN+1                                     00677000
&ZOPL(&ZOPN)          SETC  ' '                                         00677100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00677200
&ZOPV(&ZOPN)          SETC  '32(64,1),&ZCGPR'                           00677300
&ZOPD(&ZOPN)          SETC  '++ &ZXRESTOKEN XRESTOKEN'                  00677400
.*                                                                      00677500
.ZI20E                ANOP  ,                                           00677600
.*-------------------------------------------------------------------   00677700
.***AI.L25  XSTRNAME CL16                                               00677800
                      AIF   ('&ZXSTRNAME' EQ '').ZI21E                  00677900
                      AIF   ('&ZXSTRNAME' EQ 'OUTPUT').ZI21E            00678000
&ZCGPR                SETC  '&XSTRNAME'                                 00678100
.*                                                                      00678200
                      AIF   ('&XSTRNAME'(1,1) NE '(').ZI21B             00678300
&ZCGPR   SETC  '0('.'&XSTRNAME'(2,K'&XSTRNAME-2).')'                    00678400
.ZI21B                ANOP  ,                                           00678500
.*                                                                      00678600
&ZOPN                 SETA  &ZOPN+1                                     00678700
&ZOPL(&ZOPN)          SETC  ' '                                         00678800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00678900
&ZOPV(&ZOPN)          SETC  '96(16,1),&ZCGPR'                           00679000
&ZOPD(&ZOPN)          SETC  '++ &ZXSTRNAME XSTRNAME'                    00679100
.*                                                                      00679200
.ZI21E                ANOP  ,                                           00679300
.*-------------------------------------------------------------------   00679400
.***AI.L25  XENTRYNAME CL16                                             00679500
                      AIF   ('&ZXENTRYNAME' EQ '').ZI22E                00679600
                      AIF   ('&ZXENTRYNAME' EQ 'OUTPUT').ZI22E          00679700
&ZCGPR                SETC  '&XENTRYNAME'                               00679800
.*                                                                      00679900
                      AIF   ('&XENTRYNAME'(1,1) NE '(').ZI22B           00680000
&ZCGPR   SETC  '0('.'&XENTRYNAME'(2,K'&XENTRYNAME-2).')'                00680100
.ZI22B                ANOP  ,                                           00680200
.*                                                                      00680300
&ZOPN                 SETA  &ZOPN+1                                     00680400
&ZOPL(&ZOPN)          SETC  ' '                                         00680500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00680600
&ZOPV(&ZOPN)          SETC  '112(16,1),&ZCGPR'                          00680700
&ZOPD(&ZOPN)          SETC  '++ &ZXENTRYNAME XENTRYNAME'                00680800
.*                                                                      00680900
.ZI22E                ANOP  ,                                           00681000
.*-------------------------------------------------------------------   00681100
.***AI.L25  XENTRYID CL12                                               00681200
                      AIF   ('&ZXENTRYID' EQ '').ZI23E                  00681300
                      AIF   ('&ZXENTRYID' EQ 'OUTPUT').ZI23E            00681400
&ZCGPR                SETC  '&XENTRYID'                                 00681500
.*                                                                      00681600
                      AIF   ('&XENTRYID'(1,1) NE '(').ZI23B             00681700
&ZCGPR   SETC  '0('.'&XENTRYID'(2,K'&XENTRYID-2).')'                    00681800
.ZI23B                ANOP  ,                                           00681900
.*                                                                      00682000
&ZOPN                 SETA  &ZOPN+1                                     00682100
&ZOPL(&ZOPN)          SETC  ' '                                         00682200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00682300
&ZOPV(&ZOPN)          SETC  '128(12,1),&ZCGPR'                          00682400
&ZOPD(&ZOPN)          SETC  '++ &ZXENTRYID XENTRYID'                    00682500
.*                                                                      00682600
.ZI23E                ANOP  ,                                           00682700
.*-------------------------------------------------------------------   00682800
.***AI.L18  XSTARTVAL F                                                 00682900
         AIF   ('&XSTARTVAL' NE 'ALL').ZI24                             00683000
&ZXSTARTVAL           SETC  ''             RESET INPUT/OUTPUT           00683100
.ZI24                 ANOP  ,                                           00683200
.*-------------------------------------------------------------------   00683300
.***AI.L25  XSTARTVAL F                                                 00683400
                      AIF   ('&ZXSTARTVAL' EQ '').ZI24E                 00683500
                      AIF   ('&ZXSTARTVAL' EQ 'OUTPUT').ZI24E           00683600
&ZCGPR                SETC  '&XSTARTVAL'                                00683700
.*                                                                      00683800
                      AIF   ('&XSTARTVAL'(1,1) NE '(').ZI24B            00683900
&ZCGPR   SETC  '0('.'&XSTARTVAL'(2,K'&XSTARTVAL-2).')'                  00684000
                      AGO   .ZI24D                                      00684100
.ZI24B                ANOP  ,                                           00684200
.*                                                                      00684300
&ZC                   SETC  '&XSTARTVAL'(1,1)                           00684400
                      AIF   (T'&ZC NE 'N').ZI24D                        00684500
&ZC                   SETC  '&XSTARTVAL'                                00684600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI24D               00684700
&ZCGPR                SETC  '=AL4(&XSTARTVAL)'                          00684800
.*                                                                      00684900
.ZI24D                ANOP  ,                                           00685000
.*                                                                      00685100
&ZOPN                 SETA  &ZOPN+1                                     00685200
&ZOPL(&ZOPN)          SETC  ' '                                         00685300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00685400
&ZOPV(&ZOPN)          SETC  '140(4,1),&ZCGPR'                           00685500
&ZOPD(&ZOPN)          SETC  '++ &ZXSTARTVAL XSTARTVAL'                  00685600
.*                                                                      00685700
.ZI24E                ANOP  ,                                           00685800
.*-------------------------------------------------------------------   00685900
.***AI.L18  XENDVAL F                                                   00686000
         AIF   ('&XENDVAL' NE 'STARTVAL').ZI25                          00686100
&ZXENDVAL             SETC  ''             RESET INPUT/OUTPUT           00686200
.ZI25                 ANOP  ,                                           00686300
.*-------------------------------------------------------------------   00686400
.***AI.L25  XENDVAL F                                                   00686500
                      AIF   ('&ZXENDVAL' EQ '').ZI25E                   00686600
                      AIF   ('&ZXENDVAL' EQ 'OUTPUT').ZI25E             00686700
&ZCGPR                SETC  '&XENDVAL'                                  00686800
.*                                                                      00686900
                      AIF   ('&XENDVAL'(1,1) NE '(').ZI25B              00687000
&ZCGPR   SETC  '0('.'&XENDVAL'(2,K'&XENDVAL-2).')'                      00687100
                      AGO   .ZI25D                                      00687200
.ZI25B                ANOP  ,                                           00687300
.*                                                                      00687400
&ZC                   SETC  '&XENDVAL'(1,1)                             00687500
                      AIF   (T'&ZC NE 'N').ZI25D                        00687600
&ZC                   SETC  '&XENDVAL'                                  00687700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI25D               00687800
&ZCGPR                SETC  '=AL4(&XENDVAL)'                            00687900
.*                                                                      00688000
.ZI25D                ANOP  ,                                           00688100
.*                                                                      00688200
&ZOPN                 SETA  &ZOPN+1                                     00688300
&ZOPL(&ZOPN)          SETC  ' '                                         00688400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00688500
&ZOPV(&ZOPN)          SETC  '144(4,1),&ZCGPR'                           00688600
&ZOPD(&ZOPN)          SETC  '++ &ZXENDVAL XENDVAL'                      00688700
.*                                                                      00688800
.ZI25E                ANOP  ,                                           00688900
.*-------------------------------------------------------------------   00689000
.***AI.L18  XSTARTPOS F                                                 00689100
         AIF   ('&XSTARTPOS' NE 'ALL').ZI26                             00689200
&ZXSTARTPOS           SETC  ''             RESET INPUT/OUTPUT           00689300
.ZI26                 ANOP  ,                                           00689400
.*-------------------------------------------------------------------   00689500
.***AI.L25  XSTARTPOS F                                                 00689600
                      AIF   ('&ZXSTARTPOS' EQ '').ZI26E                 00689700
                      AIF   ('&ZXSTARTPOS' EQ 'OUTPUT').ZI26E           00689800
&ZCGPR                SETC  '&XSTARTPOS'                                00689900
.*                                                                      00690000
                      AIF   ('&XSTARTPOS'(1,1) NE '(').ZI26B            00690100
&ZCGPR   SETC  '0('.'&XSTARTPOS'(2,K'&XSTARTPOS-2).')'                  00690200
                      AGO   .ZI26D                                      00690300
.ZI26B                ANOP  ,                                           00690400
.*                                                                      00690500
&ZC                   SETC  '&XSTARTPOS'(1,1)                           00690600
                      AIF   (T'&ZC NE 'N').ZI26D                        00690700
&ZC                   SETC  '&XSTARTPOS'                                00690800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI26D               00690900
&ZCGPR                SETC  '=AL4(&XSTARTPOS)'                          00691000
.*                                                                      00691100
.ZI26D                ANOP  ,                                           00691200
.*                                                                      00691300
&ZOPN                 SETA  &ZOPN+1                                     00691400
&ZOPL(&ZOPN)          SETC  ' '                                         00691500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00691600
&ZOPV(&ZOPN)          SETC  '148(4,1),&ZCGPR'                           00691700
&ZOPD(&ZOPN)          SETC  '++ &ZXSTARTPOS XSTARTPOS'                  00691800
.*                                                                      00691900
.ZI26E                ANOP  ,                                           00692000
.*-------------------------------------------------------------------   00692100
.***AI.L18  XENDPOS F                                                   00692200
         AIF   ('&XENDPOS' NE 'STARTPOS').ZI27                          00692300
&ZXENDPOS             SETC  ''             RESET INPUT/OUTPUT           00692400
.ZI27                 ANOP  ,                                           00692500
.*-------------------------------------------------------------------   00692600
.***AI.L25  XENDPOS F                                                   00692700
                      AIF   ('&ZXENDPOS' EQ '').ZI27E                   00692800
                      AIF   ('&ZXENDPOS' EQ 'OUTPUT').ZI27E             00692900
&ZCGPR                SETC  '&XENDPOS'                                  00693000
.*                                                                      00693100
                      AIF   ('&XENDPOS'(1,1) NE '(').ZI27B              00693200
&ZCGPR   SETC  '0('.'&XENDPOS'(2,K'&XENDPOS-2).')'                      00693300
                      AGO   .ZI27D                                      00693400
.ZI27B                ANOP  ,                                           00693500
.*                                                                      00693600
&ZC                   SETC  '&XENDPOS'(1,1)                             00693700
                      AIF   (T'&ZC NE 'N').ZI27D                        00693800
&ZC                   SETC  '&XENDPOS'                                  00693900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI27D               00694000
&ZCGPR                SETC  '=AL4(&XENDPOS)'                            00694100
.*                                                                      00694200
.ZI27D                ANOP  ,                                           00694300
.*                                                                      00694400
&ZOPN                 SETA  &ZOPN+1                                     00694500
&ZOPL(&ZOPN)          SETC  ' '                                         00694600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00694700
&ZOPV(&ZOPN)          SETC  '152(4,1),&ZCGPR'                           00694800
&ZOPD(&ZOPN)          SETC  '++ &ZXENDPOS XENDPOS'                      00694900
.*                                                                      00695000
.ZI27E                ANOP  ,                                           00695100
.*-------------------------------------------------------------------   00695200
.***AI.L25  XCLASSVAL F                                                 00695300
                      AIF   ('&ZXCLASSVAL' EQ '').ZI28E                 00695400
                      AIF   ('&ZXCLASSVAL' EQ 'OUTPUT').ZI28E           00695500
&ZCGPR                SETC  '&XCLASSVAL'                                00695600
.*                                                                      00695700
                      AIF   ('&XCLASSVAL'(1,1) NE '(').ZI28B            00695800
&ZCGPR   SETC  '0('.'&XCLASSVAL'(2,K'&XCLASSVAL-2).')'                  00695900
                      AGO   .ZI28D                                      00696000
.ZI28B                ANOP  ,                                           00696100
.*                                                                      00696200
&ZC                   SETC  '&XCLASSVAL'(1,1)                           00696300
                      AIF   (T'&ZC NE 'N').ZI28D                        00696400
&ZC                   SETC  '&XCLASSVAL'                                00696500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI28D               00696600
&ZCGPR                SETC  '=AL4(&XCLASSVAL)'                          00696700
.*                                                                      00696800
.ZI28D                ANOP  ,                                           00696900
.*                                                                      00697000
&ZOPN                 SETA  &ZOPN+1                                     00697100
&ZOPL(&ZOPN)          SETC  ' '                                         00697200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00697300
&ZOPV(&ZOPN)          SETC  '156(4,1),&ZCGPR'                           00697400
&ZOPD(&ZOPN)          SETC  '++ &ZXCLASSVAL XCLASSVAL'                  00697500
.*                                                                      00697600
.ZI28E                ANOP  ,                                           00697700
.*-------------------------------------------------------------------   00697800
.***AI.L25  XLISTNUMVAL F                                               00697900
                      AIF   ('&ZXLISTNUMVAL' EQ '').ZI29E               00698000
                      AIF   ('&ZXLISTNUMVAL' EQ 'OUTPUT').ZI29E         00698100
&ZCGPR                SETC  '&XLISTNUMVAL'                              00698200
.*                                                                      00698300
                      AIF   ('&XLISTNUMVAL'(1,1) NE '(').ZI29B          00698400
&ZCGPR   SETC  '0('.'&XLISTNUMVAL'(2,K'&XLISTNUMVAL-2).')'              00698500
                      AGO   .ZI29D                                      00698600
.ZI29B                ANOP  ,                                           00698700
.*                                                                      00698800
&ZC                   SETC  '&XLISTNUMVAL'(1,1)                         00698900
                      AIF   (T'&ZC NE 'N').ZI29D                        00699000
&ZC                   SETC  '&XLISTNUMVAL'                              00699100
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI29D               00699200
&ZCGPR                SETC  '=AL4(&XLISTNUMVAL)'                        00699300
.*                                                                      00699400
.ZI29D                ANOP  ,                                           00699500
.*                                                                      00699600
&ZOPN                 SETA  &ZOPN+1                                     00699700
&ZOPL(&ZOPN)          SETC  ' '                                         00699800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00699900
&ZOPV(&ZOPN)          SETC  '160(4,1),&ZCGPR'                           00700000
&ZOPD(&ZOPN)          SETC  '++ &ZXLISTNUMVAL XLISTNUMVAL'              00700100
.*                                                                      00700200
.ZI29E                ANOP  ,                                           00700300
.*-------------------------------------------------------------------   00700400
.***AI.L25  XSTRDUMPID XL2                                              00700500
                      AIF   ('&ZXSTRDUMPID' EQ '').ZI30E                00700600
                      AIF   ('&ZXSTRDUMPID' EQ 'OUTPUT').ZI30E          00700700
&ZCGPR                SETC  '&XSTRDUMPID'                               00700800
.*                                                                      00700900
                      AIF   ('&XSTRDUMPID'(1,1) NE '(').ZI30B           00701000
&ZCGPR   SETC  '0('.'&XSTRDUMPID'(2,K'&XSTRDUMPID-2).')'                00701100
                      AGO   .ZI30D                                      00701200
.ZI30B                ANOP  ,                                           00701300
.*                                                                      00701400
&ZC                   SETC  '&XSTRDUMPID'(1,1)                          00701500
                      AIF   (T'&ZC NE 'N').ZI30D                        00701600
&ZC                   SETC  '&XSTRDUMPID'                               00701700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI30D               00701800
&ZCGPR                SETC  '=AL2(&XSTRDUMPID)'                         00701900
.*                                                                      00702000
.ZI30D                ANOP  ,                                           00702100
.*                                                                      00702200
&ZOPN                 SETA  &ZOPN+1                                     00702300
&ZOPL(&ZOPN)          SETC  ' '                                         00702400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00702500
&ZOPV(&ZOPN)          SETC  '164(2,1),&ZCGPR'                           00702600
&ZOPD(&ZOPN)          SETC  '++ &ZXSTRDUMPID XSTRDUMPID'                00702700
.*                                                                      00702800
.ZI30E                ANOP  ,                                           00702900
.*-------------------------------------------------------------------   00703000
.***AI.L18  XENTRYKEY CL16                                              00703100
         AIF   ('&XENTRYKEY' NE 'NO_KEY').ZI32                          00703200
&ZXENTRYKEY           SETC  ''             RESET INPUT/OUTPUT           00703300
.ZI32                 ANOP  ,                                           00703400
.*-------------------------------------------------------------------   00703500
.***AI.L25  XENTRYKEY CL16                                              00703600
                      AIF   ('&ZXENTRYKEY' EQ '').ZI32E                 00703700
                      AIF   ('&ZXENTRYKEY' EQ 'OUTPUT').ZI32E           00703800
&ZCGPR                SETC  '&XENTRYKEY'                                00703900
.*                                                                      00704000
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZI32B            00704100
&ZCGPR   SETC  '0('.'&XENTRYKEY'(2,K'&XENTRYKEY-2).')'                  00704200
.ZI32B                ANOP  ,                                           00704300
.*                                                                      00704400
&ZOPN                 SETA  &ZOPN+1                                     00704500
&ZOPL(&ZOPN)          SETC  ' '                                         00704600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00704700
&ZOPV(&ZOPN)          SETC  '168(16,1),&ZCGPR'                          00704800
&ZOPD(&ZOPN)          SETC  '++ &ZXENTRYKEY XENTRYKEY'                  00704900
.*                                                                      00705000
.ZI32E                ANOP  ,                                           00705100
.*-------------------------------------------------------------------   00705200
.***AI.L05 XCLASSTYPE BL1                                               00705300
&ZW                   SETC  ''                                          00705400
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00705500
.*-------------------------------------------------------------------   00705600
.***AI.L08 XCLASSTYPE "CASTOUT"                                         00705700
.***      BL1'1XXXXXXX'                                                 00705800
         AIF   ('&XCLASSTYPE' NE 'CASTOUT').ZI34A                       00705900
&ZW                   SETC  '&ZW.1'                                     00706000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00706100
                      AGO   .ZI34C                                      00706200
.*                                                                      00706300
.ZI34A                ANOP  ,                                           00706400
&ZW                   SETC  '&ZW.0'                                     00706500
.ZI34C                ANOP  ,                                           00706600
.*-------------------------------------------------------------------   00706700
.***AI.L08 XCLASSTYPE "STORAGE"                                         00706800
.***      BL1'X1XXXXXX'                                                 00706900
         AIF   ('&XCLASSTYPE' NE 'STORAGE').ZI35A                       00707000
&ZW                   SETC  '&ZW.1000000'                               00707100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00707200
                      AGO   .ZI35C                                      00707300
.*                                                                      00707400
.ZI35A                ANOP  ,                                           00707500
&ZW                   SETC  '&ZW.0000000'                               00707600
.ZI35C                ANOP  ,                                           00707700
.*-------------------------------------------------------------------   00707800
.***AI.L11 XCLASSTYPE BL1                                               00707900
                      AIF   ('&ZCLNG' NE 'YES').ZI35E  ALL ZERO BITS    00708000
&ZOPN                 SETA  &ZOPN+1                                     00708100
&ZOPL(&ZOPN)          SETC  ' '                                         00708200
&ZOPO(&ZOPN)          SETC  'OI'                                        00708300
&ZOPV(&ZOPN)          SETC  '184(1),B''&ZW'''                           00708400
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00708500
.ZI35E                ANOP  ,                                           00708600
.*-------------------------------------------------------------------   00708700
.***AI.L05 XADJUNCT BL1                                                 00708800
&ZW                   SETC  ''                                          00708900
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00709000
.*-------------------------------------------------------------------   00709100
.***AI.L08 XADJUNCT "NO"                                                00709200
.***      BL1'1XXXXXXX'                                                 00709300
         AIF   ('&XADJUNCT' NE 'NO').ZI37A                              00709400
&ZW                   SETC  '&ZW.1'                                     00709500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00709600
                      AGO   .ZI37C                                      00709700
.*                                                                      00709800
.ZI37A                ANOP  ,                                           00709900
&ZW                   SETC  '&ZW.0'                                     00710000
.ZI37C                ANOP  ,                                           00710100
.*-------------------------------------------------------------------   00710200
.***AI.L08 XADJUNCT "YES"                                               00710300
.***      BL1'X1XXXXXX'                                                 00710400
         AIF   ('&XADJUNCT' NE 'YES').ZI38A                             00710500
&ZW                   SETC  '&ZW.1000000'                               00710600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00710700
                      AGO   .ZI38C                                      00710800
.*                                                                      00710900
.ZI38A                ANOP  ,                                           00711000
&ZW                   SETC  '&ZW.0000000'                               00711100
.ZI38C                ANOP  ,                                           00711200
.*-------------------------------------------------------------------   00711300
.***AI.L11 XADJUNCT BL1                                                 00711400
                      AIF   ('&ZCLNG' NE 'YES').ZI38E  ALL ZERO BITS    00711500
&ZOPN                 SETA  &ZOPN+1                                     00711600
&ZOPL(&ZOPN)          SETC  ' '                                         00711700
&ZOPO(&ZOPN)          SETC  'OI'                                        00711800
&ZOPV(&ZOPN)          SETC  '185(1),B''&ZW'''                           00711900
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00712000
.ZI38E                ANOP  ,                                           00712100
.*-------------------------------------------------------------------   00712200
.***AI.L05 XENTRYDATA BL1                                               00712300
&ZW                   SETC  ''                                          00712400
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00712500
.*-------------------------------------------------------------------   00712600
.***AI.L08 XENTRYDATA "NO"                                              00712700
.***      BL1'1XXXXXXX'                                                 00712800
         AIF   ('&XENTRYDATA' NE 'NO').ZI40A                            00712900
&ZW                   SETC  '&ZW.1'                                     00713000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00713100
                      AGO   .ZI40C                                      00713200
.*                                                                      00713300
.ZI40A                ANOP  ,                                           00713400
&ZW                   SETC  '&ZW.0'                                     00713500
.ZI40C                ANOP  ,                                           00713600
.*-------------------------------------------------------------------   00713700
.***AI.L08 XENTRYDATA "YES"                                             00713800
.***      BL1'X1XXXXXX'                                                 00713900
         AIF   ('&XENTRYDATA' NE 'YES').ZI41A                           00714000
&ZW                   SETC  '&ZW.1000000'                               00714100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00714200
                      AGO   .ZI41C                                      00714300
.*                                                                      00714400
.ZI41A                ANOP  ,                                           00714500
&ZW                   SETC  '&ZW.0000000'                               00714600
.ZI41C                ANOP  ,                                           00714700
.*-------------------------------------------------------------------   00714800
.***AI.L11 XENTRYDATA BL1                                               00714900
                      AIF   ('&ZCLNG' NE 'YES').ZI41E  ALL ZERO BITS    00715000
&ZOPN                 SETA  &ZOPN+1                                     00715100
&ZOPL(&ZOPN)          SETC  ' '                                         00715200
&ZOPO(&ZOPN)          SETC  'OI'                                        00715300
&ZOPV(&ZOPN)          SETC  '186(1),B''&ZW'''                           00715400
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00715500
.ZI41E                ANOP  ,                                           00715600
.*-------------------------------------------------------------------   00715700
.***AI.L05 XFLAGS BL1                                                   00715800
&ZW                   SETC  ''                                          00715900
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00716000
.*-------------------------------------------------------------------   00716100
.***AI.L08 XFLAGS "STARTVAL"                                            00716200
.***      BL1'1XXXXXXX'                                                 00716300
         AIF   ('&STARTVAL' EQ '').ZI43A                                00716400
         AIF   ('&STARTVAL' EQ 'ALL').ZI43A                             00716500
         AIF   ('&STARTVAL' EQ 'ALL').ZI43A                             00716600
         AIF   ('&STARTVAL' EQ 'ALL').ZI43A                             00716700
         AIF   ('&STARTVAL' EQ 'ALL').ZI43A                             00716800
         AIF   ('&STARTVAL' EQ 'ALL').ZI43A                             00716900
         AIF   ('&STARTVAL' EQ 'ALL').ZI43A                             00717000
         AIF   ('&STARTVAL' EQ 'ALL').ZI43A                             00717100
         AIF   ('&STARTVAL' EQ 'ALL').ZI43A                             00717200
&ZW                   SETC  '&ZW.1'                                     00717300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00717400
                      AGO   .ZI43C                                      00717500
.*                                                                      00717600
.ZI43A                ANOP  ,                                           00717700
&ZW                   SETC  '&ZW.0'                                     00717800
.ZI43C                ANOP  ,                                           00717900
.*-------------------------------------------------------------------   00718000
.***AI.L08 XFLAGS "ENDVAL"                                              00718100
.***      BL1'X1XXXXXX'                                                 00718200
         AIF   ('&ENDVAL' EQ '').ZI44A                                  00718300
         AIF   ('&ENDVAL' EQ 'STARTVAL').ZI44A                          00718400
         AIF   ('&ENDVAL' EQ 'STARTVAL').ZI44A                          00718500
         AIF   ('&ENDVAL' EQ 'STARTVAL').ZI44A                          00718600
         AIF   ('&ENDVAL' EQ 'STARTVAL').ZI44A                          00718700
         AIF   ('&ENDVAL' EQ 'STARTVAL').ZI44A                          00718800
         AIF   ('&ENDVAL' EQ 'STARTVAL').ZI44A                          00718900
         AIF   ('&ENDVAL' EQ 'STARTVAL').ZI44A                          00719000
         AIF   ('&ENDVAL' EQ 'STARTVAL').ZI44A                          00719100
&ZW                   SETC  '&ZW.1'                                     00719200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00719300
                      AGO   .ZI44C                                      00719400
.*                                                                      00719500
.ZI44A                ANOP  ,                                           00719600
&ZW                   SETC  '&ZW.0'                                     00719700
.ZI44C                ANOP  ,                                           00719800
.*-------------------------------------------------------------------   00719900
.***AI.L08 XFLAGS "ENTRYNAME"                                           00720000
.***      BL1'XX1XXXXX'                                                 00720100
         AIF   ('&ENTRYNAME' EQ '').ZI45A                               00720200
&ZW                   SETC  '&ZW.1'                                     00720300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00720400
                      AGO   .ZI45C                                      00720500
.*                                                                      00720600
.ZI45A                ANOP  ,                                           00720700
&ZW                   SETC  '&ZW.0'                                     00720800
.ZI45C                ANOP  ,                                           00720900
.*-------------------------------------------------------------------   00721000
.***AI.L08 XFLAGS "ENTRYID"                                             00721100
.***      BL1'XXX1XXXX'                                                 00721200
         AIF   ('&ENTRYID' EQ '').ZI46A                                 00721300
&ZW                   SETC  '&ZW.1'                                     00721400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00721500
                      AGO   .ZI46C                                      00721600
.*                                                                      00721700
.ZI46A                ANOP  ,                                           00721800
&ZW                   SETC  '&ZW.0'                                     00721900
.ZI46C                ANOP  ,                                           00722000
.*-------------------------------------------------------------------   00722100
.***AI.L08 XFLAGS "ENTRYKEY"                                            00722200
.***      BL1'XXXX1XXX'                                                 00722300
         AIF   ('&ENTRYKEY' EQ '').ZI47A                                00722400
         AIF   ('&ENTRYKEY' EQ 'NO_KEY').ZI47A                          00722500
         AIF   ('&ENTRYKEY' EQ 'NO_KEY').ZI47A                          00722600
&ZW                   SETC  '&ZW.1'                                     00722700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00722800
                      AGO   .ZI47C                                      00722900
.*                                                                      00723000
.ZI47A                ANOP  ,                                           00723100
&ZW                   SETC  '&ZW.0'                                     00723200
.ZI47C                ANOP  ,                                           00723300
.*-------------------------------------------------------------------   00723400
.***AI.L08 XFLAGS "STARTPOS"                                            00723500
.***      BL1'XXXXX1XX'                                                 00723600
         AIF   ('&STARTPOS' EQ '').ZI48A                                00723700
         AIF   ('&STARTPOS' EQ 'ALL').ZI48A                             00723800
         AIF   ('&STARTPOS' EQ 'ALL').ZI48A                             00723900
&ZW                   SETC  '&ZW.1'                                     00724000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00724100
                      AGO   .ZI48C                                      00724200
.*                                                                      00724300
.ZI48A                ANOP  ,                                           00724400
&ZW                   SETC  '&ZW.0'                                     00724500
.ZI48C                ANOP  ,                                           00724600
.*-------------------------------------------------------------------   00724700
.***AI.L08 XFLAGS "ENDPOS"                                              00724800
.***      BL1'XXXXXX1X'                                                 00724900
         AIF   ('&ENDPOS' EQ '').ZI49A                                  00725000
         AIF   ('&ENDPOS' EQ 'STARTPOS').ZI49A                          00725100
         AIF   ('&ENDPOS' EQ 'STARTPOS').ZI49A                          00725200
&ZW                   SETC  '&ZW.10'                                    00725300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00725400
                      AGO   .ZI49C                                      00725500
.*                                                                      00725600
.ZI49A                ANOP  ,                                           00725700
&ZW                   SETC  '&ZW.00'                                    00725800
.ZI49C                ANOP  ,                                           00725900
.*-------------------------------------------------------------------   00726000
.***AI.L11 XFLAGS BL1                                                   00726100
                      AIF   ('&ZCLNG' NE 'YES').ZI49E  ALL ZERO BITS    00726200
&ZOPN                 SETA  &ZOPN+1                                     00726300
&ZOPL(&ZOPN)          SETC  ' '                                         00726400
&ZOPO(&ZOPN)          SETC  'OI'                                        00726500
&ZOPV(&ZOPN)          SETC  '187(1),B''&ZW'''                           00726600
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00726700
.ZI49E                ANOP  ,                                           00726800
.*-------------------------------------------------------------------   00726900
.***AI.L05 XORDER BL1                                                   00727000
&ZW                   SETC  ''                                          00727100
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00727200
.*-------------------------------------------------------------------   00727300
.***AI.L08 XORDER "HEAD"                                                00727400
.***      BL1'1XXXXXXX'                                                 00727500
         AIF   ('&XORDER' NE 'HEAD').ZI51A                              00727600
&ZW                   SETC  '&ZW.1'                                     00727700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00727800
                      AGO   .ZI51C                                      00727900
.*                                                                      00728000
.ZI51A                ANOP  ,                                           00728100
&ZW                   SETC  '&ZW.0'                                     00728200
.ZI51C                ANOP  ,                                           00728300
.*-------------------------------------------------------------------   00728400
.***AI.L08 XORDER "TAIL"                                                00728500
.***      BL1'X1XXXXXX'                                                 00728600
         AIF   ('&XORDER' NE 'TAIL').ZI52A                              00728700
&ZW                   SETC  '&ZW.1000000'                               00728800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00728900
                      AGO   .ZI52C                                      00729000
.*                                                                      00729100
.ZI52A                ANOP  ,                                           00729200
&ZW                   SETC  '&ZW.0000000'                               00729300
.ZI52C                ANOP  ,                                           00729400
.*-------------------------------------------------------------------   00729500
.***AI.L11 XORDER BL1                                                   00729600
                      AIF   ('&ZCLNG' NE 'YES').ZI52E  ALL ZERO BITS    00729700
&ZOPN                 SETA  &ZOPN+1                                     00729800
&ZOPL(&ZOPN)          SETC  ' '                                         00729900
&ZOPO(&ZOPN)          SETC  'OI'                                        00730000
&ZOPV(&ZOPN)          SETC  '188(1),B''&ZW'''                           00730100
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00730200
.ZI52E                ANOP  ,                                           00730300
.*-------------------------------------------------------------------   00730400
.***AI.L07 XTYPE AL1                                                    00730500
&ZW                   SETC  ''                                          00730600
.*-------------------------------------------------------------------   00730700
.***AI.L15 XTYPE "STRUCTURE" AL1                                        00730800
         AIF   ('&XTYPE' NE 'STRUCTURE').ZI54A                          00730900
&ZW                   SETC  '1'                                         00731000
.ZI54A                ANOP  ,                                           00731100
.*-------------------------------------------------------------------   00731200
.***AI.L15 XTYPE "CLASS" AL1                                            00731300
         AIF   ('&XTYPE' NE 'CLASS').ZI55A                              00731400
&ZW                   SETC  '2'                                         00731500
.ZI55A                ANOP  ,                                           00731600
.*-------------------------------------------------------------------   00731700
.***AI.L15 XTYPE "LISTNUM" AL1                                          00731800
         AIF   ('&XTYPE' NE 'LISTNUM').ZI56A                            00731900
&ZW                   SETC  '3'                                         00732000
.ZI56A                ANOP  ,                                           00732100
.*-------------------------------------------------------------------   00732200
.***AI.L15 XTYPE "LOCKENTRIES" AL1                                      00732300
         AIF   ('&XTYPE' NE 'LOCKENTRIES').ZI57A                        00732400
&ZW                   SETC  '4'                                         00732500
.ZI57A                ANOP  ,                                           00732600
.*-------------------------------------------------------------------   00732700
.***AI.L15 XTYPE "USERCNTLS" AL1                                        00732800
         AIF   ('&XTYPE' NE 'USERCNTLS').ZI58A                          00732900
&ZW                   SETC  '5'                                         00733000
.ZI58A                ANOP  ,                                           00733100
.*-------------------------------------------------------------------   00733200
.***AI.L15 XTYPE "ENTRY" AL1                                            00733300
         AIF   ('&XTYPE' NE 'ENTRY').ZI59A                              00733400
&ZW                   SETC  '6'                                         00733500
.ZI59A                ANOP  ,                                           00733600
.*-------------------------------------------------------------------   00733700
.***AI.L15 XTYPE "EMCONTROLS" AL1                                       00733800
         AIF   ('&XTYPE' NE 'EMCONTROLS').ZI60A                         00733900
&ZW                   SETC  '7'                                         00734000
.ZI60A                ANOP  ,                                           00734100
.*-------------------------------------------------------------------   00734200
.***AI.L15 XTYPE "EVENTQS" AL1                                          00734300
         AIF   ('&XTYPE' NE 'EVENTQS').ZI61A                            00734400
&ZW                   SETC  '8'                                         00734500
.ZI61A                ANOP  ,                                           00734600
.*-------------------------------------------------------------------   00734700
.***AI.L17 XTYPE AL1                                                    00734800
                      AIF   ('&ZW' EQ '0').ZI61B                        00734900
                      AIF   ('&ZW' EQ '').ZI61B                         00735000
.*                                                                      00735100
&ZOPN                 SETA  &ZOPN+1                                     00735200
&ZOPL(&ZOPN)          SETC  ' '                                         00735300
&ZOPO(&ZOPN)          SETC  'MVI'                                       00735400
&ZOPV(&ZOPN)          SETC  '189(1),&ZW'                                00735500
&ZOPD(&ZOPN)          SETC  '++ &ZXTYPE XTYPE'                          00735600
.ZI61B                ANOP  ,                                           00735700
.*-------------------------------------------------------------------   00735800
.***AI.L07 XEMCLEVEL AL1                                                00735900
&ZW                   SETC  ''                                          00736000
.*-------------------------------------------------------------------   00736100
.***AI.L15 XEMCLEVEL "SUMMARY" AL1                                      00736200
         AIF   ('&XEMCLEVEL' NE 'SUMMARY').ZI63A                        00736300
&ZW                   SETC  '1'                                         00736400
.ZI63A                ANOP  ,                                           00736500
.*-------------------------------------------------------------------   00736600
.***AI.L15 XEMCLEVEL "EMC" AL1                                          00736700
         AIF   ('&XEMCLEVEL' NE 'EMC').ZI64A                            00736800
&ZW                   SETC  '2'                                         00736900
.ZI64A                ANOP  ,                                           00737000
.*-------------------------------------------------------------------   00737100
.***AI.L17 XEMCLEVEL AL1                                                00737200
                      AIF   ('&ZW' EQ '0').ZI64B                        00737300
                      AIF   ('&ZW' EQ '').ZI64B                         00737400
.*                                                                      00737500
&ZOPN                 SETA  &ZOPN+1                                     00737600
&ZOPL(&ZOPN)          SETC  ' '                                         00737700
&ZOPO(&ZOPN)          SETC  'MVI'                                       00737800
&ZOPV(&ZOPN)          SETC  '190(1),&ZW'                                00737900
&ZOPD(&ZOPN)          SETC  '++ &ZXEMCLEVEL XEMCLEVEL'                  00738000
.ZI64B                ANOP  ,                                           00738100
.*-------------------------------------------------------------------   00738200
.***AI.L07 XEQLEVEL AL1                                                 00738300
&ZW                   SETC  ''                                          00738400
.*-------------------------------------------------------------------   00738500
.***AI.L15 XEQLEVEL "DETAIL" AL1                                        00738600
         AIF   ('&XEQLEVEL' NE 'DETAIL').ZI66A                          00738700
&ZW                   SETC  '1'                                         00738800
.ZI66A                ANOP  ,                                           00738900
.*-------------------------------------------------------------------   00739000
.***AI.L15 XEQLEVEL "EMC" AL1                                           00739100
         AIF   ('&XEQLEVEL' NE 'EMC').ZI67A                             00739200
&ZW                   SETC  '2'                                         00739300
.ZI67A                ANOP  ,                                           00739400
.*-------------------------------------------------------------------   00739500
.***AI.L17 XEQLEVEL AL1                                                 00739600
                      AIF   ('&ZW' EQ '0').ZI67B                        00739700
                      AIF   ('&ZW' EQ '').ZI67B                         00739800
.*                                                                      00739900
&ZOPN                 SETA  &ZOPN+1                                     00740000
&ZOPL(&ZOPN)          SETC  ' '                                         00740100
&ZOPO(&ZOPN)          SETC  'MVI'                                       00740200
&ZOPV(&ZOPN)          SETC  '191(1),&ZW'                                00740300
&ZOPD(&ZOPN)          SETC  '++ &ZXEQLEVEL XEQLEVEL'                    00740400
.ZI67B                ANOP  ,                                           00740500
.*-------------------------------------------------------------------   00740600
.***AI.L25  XCONIDVAL XL1                                               00740700
                      AIF   ('&ZXCONIDVAL' EQ '').ZI68E                 00740800
                      AIF   ('&ZXCONIDVAL' EQ 'OUTPUT').ZI68E           00740900
&ZCGPR                SETC  '&XCONIDVAL'                                00741000
.*                                                                      00741100
                      AIF   ('&XCONIDVAL'(1,1) NE '(').ZI68B            00741200
&ZCGPR   SETC  '0('.'&XCONIDVAL'(2,K'&XCONIDVAL-2).')'                  00741300
                      AGO   .ZI68D                                      00741400
.ZI68B                ANOP  ,                                           00741500
.*                                                                      00741600
&ZC                   SETC  '&XCONIDVAL'(1,1)                           00741700
                      AIF   (T'&ZC NE 'N').ZI68D                        00741800
&ZC                   SETC  '&XCONIDVAL'                                00741900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI68D               00742000
&ZCGPR                SETC  '=AL1(&XCONIDVAL)'                          00742100
.*                                                                      00742200
.ZI68D                ANOP  ,                                           00742300
.*                                                                      00742400
&ZOPN                 SETA  &ZOPN+1                                     00742500
&ZOPL(&ZOPN)          SETC  ' '                                         00742600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00742700
&ZOPV(&ZOPN)          SETC  '192(1,1),&ZCGPR'                           00742800
&ZOPD(&ZOPN)          SETC  '++ &ZXCONIDVAL XCONIDVAL'                  00742900
.*                                                                      00743000
.ZI68E                ANOP  ,                                           00743100
.*-------------------------------------------------------------------   00743200
&ZOPN1                SETA &ZOPN                                        00743300
.*******************************************************************    00743400
.***  PROCESS IXLZSTR OUTPUT PARAMETERS                                 00743500
.*******************************************************************    00743600
                      ACTR  10000                                       00743700
.*------------------------------------------------------------------    00743800
.***AO.L02 XRETCODE F                                                   00743900
         AIF   ('&ZXRETCODE' EQ 'OUTPUT').ZO16A  OUTPUT                 00744000
         AIF   ('&ZXRETCODE' NE 'INOUT').ZO16C  INOUT                   00744100
.ZO16A    AIF   ('&XRETCODE'(1,1) NE '(').ZO16B  ADDR IN GPR            00744200
&ZCGPR   SETC  '&XRETCODE'(2,K'&XRETCODE-2)                             00744300
&ZOPN                 SETA  &ZOPN+1                                     00744400
&ZOPL(&ZOPN)          SETC  ' '                                         00744500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00744600
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),16(1)'                         00744700
&ZOPD(&ZOPN)          SETC  '++ XRETCODE F'                             00744800
                      AGO   .ZO16C                                      00744900
.*                                                                      00745000
.ZO16B                ANOP  ,                                           00745100
&ZAWRK   SETA  K'&XRETCODE                                              00745200
         AIF   ('&XRETCODE'(&ZAWRK,1) NE ')').ZO16G                     00745300
&ZN      SETA  2                                                        00745400
.ZO16H    ANOP                                                          00745500
         AIF   (&ZN GE &ZAWRK).ZO16G                                    00745600
         AIF   ('&XRETCODE'(&ZN,1) NE '(').ZO16I                        00745700
&ZC      SETC  '&XRETCODE'(1,&ZN).'4'.','                               00745800
&ZC      SETC  '&ZC'.'&XRETCODE'(&ZN+1,&ZAWRK-&ZN).',16(1)'             00745900
         AGO   .ZO16J                                                   00746000
.ZO16I    ANOP                                                          00746100
&ZN      SETA  &ZN+1                                                    00746200
         AGO   .ZO16H                                                   00746300
.ZO16G    ANOP                                                          00746400
&ZC      SETC  '&XRETCODE.(4),16(1)'                                    00746500
.ZO16J    ANOP                                                          00746600
&ZOPN                 SETA  &ZOPN+1                                     00746700
&ZOPL(&ZOPN)          SETC  ' '                                         00746800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00746900
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00747000
&ZOPD(&ZOPN)          SETC  '++ XRETCODE F'                             00747100
.ZO16C                ANOP  ,                                           00747200
.*------------------------------------------------------------------    00747300
.***AO.L02 XRSNCODE F                                                   00747400
         AIF   ('&ZXRSNCODE' EQ 'OUTPUT').ZO17A  OUTPUT                 00747500
         AIF   ('&ZXRSNCODE' NE 'INOUT').ZO17C  INOUT                   00747600
.ZO17A    AIF   ('&XRSNCODE'(1,1) NE '(').ZO17B  ADDR IN GPR            00747700
&ZCGPR   SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                             00747800
&ZOPN                 SETA  &ZOPN+1                                     00747900
&ZOPL(&ZOPN)          SETC  ' '                                         00748000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00748100
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),20(1)'                         00748200
&ZOPD(&ZOPN)          SETC  '++ XRSNCODE F'                             00748300
                      AGO   .ZO17C                                      00748400
.*                                                                      00748500
.ZO17B                ANOP  ,                                           00748600
&ZAWRK   SETA  K'&XRSNCODE                                              00748700
         AIF   ('&XRSNCODE'(&ZAWRK,1) NE ')').ZO17G                     00748800
&ZN      SETA  2                                                        00748900
.ZO17H    ANOP                                                          00749000
         AIF   (&ZN GE &ZAWRK).ZO17G                                    00749100
         AIF   ('&XRSNCODE'(&ZN,1) NE '(').ZO17I                        00749200
&ZC      SETC  '&XRSNCODE'(1,&ZN).'4'.','                               00749300
&ZC      SETC  '&ZC'.'&XRSNCODE'(&ZN+1,&ZAWRK-&ZN).',20(1)'             00749400
         AGO   .ZO17J                                                   00749500
.ZO17I    ANOP                                                          00749600
&ZN      SETA  &ZN+1                                                    00749700
         AGO   .ZO17H                                                   00749800
.ZO17G    ANOP                                                          00749900
&ZC      SETC  '&XRSNCODE.(4),20(1)'                                    00750000
.ZO17J    ANOP                                                          00750100
&ZOPN                 SETA  &ZOPN+1                                     00750200
&ZOPL(&ZOPN)          SETC  ' '                                         00750300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00750400
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00750500
&ZOPD(&ZOPN)          SETC  '++ XRSNCODE F'                             00750600
.ZO17C                ANOP  ,                                           00750700
.*------------------------------------------------------------------    00750800
.***AO.L02 XRESTOKEN CL64                                               00750900
         AIF   ('&ZXRESTOKEN' EQ 'OUTPUT').ZO20A  OUTPUT                00751000
         AIF   ('&ZXRESTOKEN' NE 'INOUT').ZO20C  INOUT                  00751100
.ZO20A    AIF   ('&XRESTOKEN'(1,1) NE '(').ZO20B  ADDR IN GPR           00751200
&ZCGPR   SETC  '&XRESTOKEN'(2,K'&XRESTOKEN-2)                           00751300
&ZOPN                 SETA  &ZOPN+1                                     00751400
&ZOPL(&ZOPN)          SETC  ' '                                         00751500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00751600
&ZOPV(&ZOPN)          SETC  '0(64,&ZCGPR),32(1)'                        00751700
&ZOPD(&ZOPN)          SETC  '++ XRESTOKEN CL64'                         00751800
                      AGO   .ZO20C                                      00751900
.*                                                                      00752000
.ZO20B                ANOP  ,                                           00752100
&ZAWRK   SETA  K'&XRESTOKEN                                             00752200
         AIF   ('&XRESTOKEN'(&ZAWRK,1) NE ')').ZO20G                    00752300
&ZN      SETA  2                                                        00752400
.ZO20H    ANOP                                                          00752500
         AIF   (&ZN GE &ZAWRK).ZO20G                                    00752600
         AIF   ('&XRESTOKEN'(&ZN,1) NE '(').ZO20I                       00752700
&ZC      SETC  '&XRESTOKEN'(1,&ZN).'64'.','                             00752800
&ZC      SETC  '&ZC'.'&XRESTOKEN'(&ZN+1,&ZAWRK-&ZN).',32(1)'            00752900
         AGO   .ZO20J                                                   00753000
.ZO20I    ANOP                                                          00753100
&ZN      SETA  &ZN+1                                                    00753200
         AGO   .ZO20H                                                   00753300
.ZO20G    ANOP                                                          00753400
&ZC      SETC  '&XRESTOKEN.(64),32(1)'                                  00753500
.ZO20J    ANOP                                                          00753600
&ZOPN                 SETA  &ZOPN+1                                     00753700
&ZOPL(&ZOPN)          SETC  ' '                                         00753800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00753900
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00754000
&ZOPD(&ZOPN)          SETC  '++ XRESTOKEN CL64'                         00754100
.ZO20C                ANOP  ,                                           00754200
.*******************************************************************    00754300
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00754400
.*******************************************************************    00754500
.ZMFLX                ANOP  ,              MF=L PROCESSING              00754600
.*******************************************************************    00754700
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00754800
.*******************************************************************    00754900
                      ACTR  10000                                       00755000
.*                                                                      00755100
                      LCLA  &ZLC           COLUMN POSITION              00755200
                      LCLA  &ZOPX          LIST TABLE INDEX             00755300
                      LCLC  &ZLL           LABEL                        00755400
                      LCLC  &ZLOP          OPERATION                    00755500
                      LCLC  &ZLV           VALUE                        00755600
                      LCLC  &ZLD           DESCRIPTION                  00755700
.*                                                                      00755800
&ZOPX                 SETA  1                                           00755900
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00756000
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00756100
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00756200
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00756300
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00756400
                      AIF   (K'&ZLD LE 0).ZL5                           00756500
&ZLC                  SETA  35             COMMENT COLUMN               00756600
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00756700
&ZLC                  SETA  33             COMMMENT COLUMN              00756800
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00756900
&ZLV                  SETC  '&ZLV'.' '                                  00757000
                      AGO   .ZL3                                        00757100
.*                                                                      00757200
.ZL4                  ANOP  ,                                           00757300
&ZLV                  SETC  '&ZLV'.' '                                  00757400
.ZL5                  ANOP  ,                                           00757500
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00757600
.*                                                                      00757700
&ZLL     &ZLOP &ZLV                                                     00757800
.*                                                                      00757900
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00758000
                      AGO   .ZL2           CONTINUE LOOPING             00758100
.*                                                                      00758200
.ZLX                  ANOP  ,                                           00758300
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00758400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00758500
.*                                                                      00758600
.*                                                                      00758700
.**  Parameter list offsets                                          ** 00758800
.*                                                                      00758900
.*  Offsets of parameter list sections                                  00759000
.*                                                                      00759100
                   LCLA  &PL_XABDPLPTR                                  00759200
                   LCLA  &PL_XRSVSTR2                                   00759300
                   LCLA  &PL_XRSVSTR3                                   00759400
                   LCLA  &PL_XRETCODE                                   00759500
                   LCLA  &PL_XRSNCODE                                   00759600
.*                                                                      00759700
&PL_XABDPLPTR   SETA  0                                                 00759800
&PL_XRSVSTR2    SETA  4                                                 00759900
&PL_XRSVSTR3    SETA  8                                                 00760000
&PL_XRETCODE    SETA  16                                                00760100
&PL_XRSNCODE    SETA  20                                                00760200
.*                                                                      00760300
&STRIU   SETC '#Z'.'&SYSNDX'(2,3).'A' Unique label base                 00760400
&STRLAB1 SETC '&STRIU'.'_1'           Generate unique label 1           00760500
&STRISNO SETC '&STRIU'.'_S'           Unique label for Service number   00760600
.*                                    word                              00760700
         SLR  0,0                  Zero out register 0                  00760800
         L    14,&PL_XABDPLPTR.(,1)  Get ABDPL addressability   @P3C    00760900
         ST   1,&PL_XRSVSTR3.(,1)  ADPLSERV parm 3 = @ of IXLZSTR parms 00761000
         LA   15,&STRISNO          Get address of fullword service #    00761100
         ST   15,&PL_XRSVSTR2.(,1) Save it as ADPLSERV parameter 2 @P3C 00761200
         B    &STRLAB1             Branch around constant               00761300
&STRISNO DC   AL4(ADPLSSTR)        Fullword containing ADPLSSTR         00761400
&STRLAB1 L    15,ADPLSERV-ABDPL(0,14) Get address of ADPLSERV routine   00761500
.*                                                                      00761600
         BALR 14,15                Call ADPLESRV router routine         00761700
.*                                                                      00761800
         L    15,&PL_XRETCODE.(,1) Put Return code into reg 15     @P3C 00761900
         L    0,&PL_XRSNCODE.(,1)  Put Reason code into reg 0      @P3C 00762000
.STREND               ANOP  ,                                           00762100
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00762200
.ZLINKX               ANOP  ,                                           00762300
.*******************************************************************    00762400
.***AP.X01  FORMAT GENERATED CODE                                       00762500
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00762600
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00762700
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00762800
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00762900
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00763000
                      AIF   (K'&ZLD LE 0).ZL51                          00763100
&ZLC                  SETA  35             COMMENT COLUMN               00763200
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00763300
&ZLC                  SETA  33             COMMENT COLUMN               00763400
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00763500
&ZLV                  SETC  '&ZLV'.' '                                  00763600
                      AGO   .ZL31                                       00763700
.*                                                                      00763800
.ZL41                 ANOP  ,                                           00763900
&ZLV                  SETC  '&ZLV'.' '                                  00764000
.ZL51                 ANOP  ,                                           00764100
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00764200
.*                                                                      00764300
&ZLL     &ZLOP &ZLV                                                     00764400
.*                                                                      00764500
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00764600
                      AGO   .ZL21          CONTINUE LOOPING             00764700
.*                                                                      00764800
.ZLX1                 ANOP  ,                                           00764900
.*******************************************************************    00765000
.***AP.X02  END OF IXLZSTR MACRO                                        00765100
&ZIXLZSTR             SETC  'YES'          SET IXLZSTR USED             00765200
         POP   PRINT                                                    00765300
*                                            IXLZSTR-1                  00765400
         SPACE 1                                                        00765500
.ZLX2                 ANOP  ,                                           00765600
         MEND                                                           00765700
**********************************************************************/ 00765800
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00765900
*%IXLZSTR: MACRO KEYS(ANSAREA,ANSLEN,RESTOKEN,ABDPLPTR,TYPE,STRLEVEL,   00766000
*                 STRNAME,STRDUMPID,CLASSTYPE,CLASSLEVEL,STARTVAL,      00766100
*                 ENDVAL,CLASSVAL,STARTPOS,ENDPOS,ORDER,ADJUNCT,        00766200
*                 ENTRYDATA,LISTNUMLEVEL,LISTNUMVAL,ENTRYKEY,           00766300
*                 ENTRYNAME,ENTRYID,EMCLEVEL,EQLEVEL,CONIDVAL,RETCODE,  00766400
*                 RSNCODE,PLISTVER,MF);                                 00766500
*  ANS('?'!!MACLABEL!!' '!!'IXLZSTRP '!!MACLIST!!                       00766600
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00766700
*%END IXLZSTR;                                                          00766800
