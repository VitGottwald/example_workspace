*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IFAWIC                                -08/04/20-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  SMF Workload Interaction Correlator           * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 2019, 2021                         * 00001200
*                                                                     * 00001300
* STATUS= HBB77D0                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      IBM z/OS Workload Interaction Correlator aids in collecting a  * 00002100
*      system wide view of a program that executes in multiple        * 00002200
*      instances across multiple address spaces.                      * 00002300
*                                                                     * 00002400
*      IBM z/OS Workload Interaction Correlator may be referred to as * 00002500
*      WIC below.                                                     * 00002600
*                                                                     * 00002700
*      The IFAWIC service  manages a program as a WIC exploiter with  * 00002800
*      the current primary address space and the system. The IFAWIC   * 00002900
*      caller indicates which program they represent by providing the * 00003000
*      IBM supplied subtype.                                          * 00003100
*                                                                     * 00003200
*      The register request returns a buffer to the caller to use for * 00003300
*      instrumenting program resource use metrics for the calling     * 00003400
*      primary address space. The register request should be used in  * 00003500
*      each address space a program runs in. This will supply each    * 00003600
*      address space with a distinct buffer for instrumenting address * 00003700
*      space metrics.                                                 * 00003800
*                                                                     * 00003900
*      The IFAWIC caller provides a exit routine that SMF will call   * 00004000
*      during the WIC processing. This exit routine will be           * 00004100
*      responsible for aggregating and summarizing metrics from all   * 00004200
*      address spaces a program runs in. The exit routine will also   * 00004300
*      be responsible to prepare and write a SMF type 98 record for a * 00004400
*      program's subtype.                                             * 00004500
*                                                                     * 00004600
*      The deregister request indicates that the program is no longer * 00004700
*      using the instrumentation buffer in the calling primary        * 00004800
*      address space. When a program has been deregistered from all   * 00004900
*      address spaces the WIC exit routine will no longer be called   * 00005000
*      and the system will clean it up.                               * 00005100
*                                                                     * 00005200
*      Deregistration occurs implicitly at address space or job-step  * 00005300
*      task termination.                                              * 00005400
*                                                                     * 00005500
*01* EXTERNAL CLASSIFICATION:  PI                                     * 00005600
*                                                                     * 00005700
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00005800
*                                                                     * 00005900
*01* ENVIRONMENT:                                                     * 00006000
*                                                                     * 00006100
*                                                                     * 00006200
*      Minimum authorization:                                         * 00006300
*                                                                     * 00006400
*                        The caller must be authorized with any of    * 00006500
*                        the following attributes: supervisor state,  * 00006600
*                        PKM 0-7, PSW key 0-7, or APF-authorized      * 00006700
*                                                                     * 00006800
*      Dispatchable unit mode: Task mode.                             * 00006900
*                                                                     * 00007000
*      Cross Memory Mode: PASN=HASN, any SASN.                        * 00007100
*                                                                     * 00007200
*      AMODE:            31- or 64-bit.                               * 00007300
*                                                                     * 00007400
*      ASC mode:         Primary or Access Register.                  * 00007500
*                                                                     * 00007600
*      Interrupt status: Enabled for I/O and external interrupts.     * 00007700
*                                                                     * 00007800
*      Locks:            No locks held.                               * 00007900
*                                                                     * 00008000
*      Control parameters: Control parameters must be in the primary  * 00008100
*                        address space or, for AR-mode callers, must  * 00008200
*                        be in an address/data space that is          * 00008300
*                        addressable through a public entry on the    * 00008400
*                        caller's dispatchable unit access list       * 00008500
*                        (DU-AL).  The control parameters must be     * 00008600
*                        accessible using the PSW key of the program  * 00008700
*                        making the request.                          * 00008800
*                                                                     * 00008900
*                                                                     * 00009000
*                                                                     * 00009100
*01* PROGRAMMING REQUIREMENTS:                                        * 00009200
*                                                                     * 00009300
*    The caller can include the IFAWICCB mapping macro to get equate  * 00009400
*    symbols for the return and reason codes provided by the IFAWIC   * 00009500
*    macro.                                                           * 00009600
*                                                                     * 00009700
*    The caller can listen for ENF event 85 for notifications about   * 00009800
*    their subtype. See macro IFAWICCB for more details.  Section     * 00009900
*    WicEnfQual describes the QUAL input to the ENFREQ request. Use   * 00010000
*    WicEnfQual_Subtype to get events for the program's subtype only. * 00010100
*    WicEnf provides a mapping of the parameter list that is passed   * 00010200
*    to the ENF listener exit in the first word of a 6 word parameter * 00010300
*    list in R1.                                                      * 00010400
*                                                                     * 00010500
*    The first IFAWIC REQUEST=REGISTER caller on the system for a     * 00010600
*    subtype must specify ExitVersion and ExitRoutine parameters.     * 00010700
*    This will establish the WIC exit routine to the program.         * 00010800
*                                                                     * 00010900
*    See z/OS MVS Programming: Authorized Assembler Services Guide    * 00011000
*    chapter on IBM z/OS Workload Interaction Correlator for details  * 00011100
*    on how to code a WIC exit routine and how to use the WIC exit    * 00011200
*    routine services.                                                * 00011300
*                                                                     * 00011400
*01* RESTRICTIONS:                                                    * 00011500
*                                                                     * 00011600
*    Dallers specifying REQUEST=REGISTER must not have functional     * 00011700
*    recovery routines (FRRs).                                        * 00011800
*                                                                     * 00011900
*01* INPUT REGISTER INFORMATION:                                      * 00012000
*                                                                     * 00012100
*    Before issuing the IFAWIC macro, the caller does not have to     * 00012200
*    place any information into any register unless using it in       * 00012300
*    register notation for a particular parameter, or using it as a   * 00012400
*    base register.                                                   * 00012500
*                                                                     * 00012600
*01* OUTPUT REGISTER INFORMATION:                                     * 00012700
*                                                                     * 00012800
*    When control returns to the caller, the GPRs contain:            * 00012900
*                                                                     * 00013000
*                                                                     * 00013100
*    REGISTER  CONTENTS                                               * 00013200
*                                                                     * 00013300
*    0         Reason code, if register 15 contains a non-zero return * 00013400
*              code                                                   * 00013500
*                                                                     * 00013600
*    1         Used as a work register by the system                  * 00013700
*                                                                     * 00013800
*    2-13      Unchanged                                              * 00013900
*                                                                     * 00014000
*    14        Used as a work register by the system                  * 00014100
*                                                                     * 00014200
*    15        Return code                                            * 00014300
*                                                                     * 00014400
*                                                                     * 00014500
*                                                                     * 00014600
*    When control returns to the caller, the ARs contain:             * 00014700
*                                                                     * 00014800
*                                                                     * 00014900
*    REGISTER  CONTENTS                                               * 00015000
*                                                                     * 00015100
*    0-1       Used as work registers by the system                   * 00015200
*                                                                     * 00015300
*    2-13      Unchanged                                              * 00015400
*                                                                     * 00015500
*    14-15     Used as work registers by the system.                  * 00015600
*                                                                     * 00015700
*                                                                     * 00015800
*                                                                     * 00015900
*    Some callers depend on register contents remaining the same      * 00016000
*    before and after issuing a service.  If the system changes the   * 00016100
*    contents of registers on which the caller depends, the caller    * 00016200
*    must save them before issuing the service, and restore them      * 00016300
*    after the system returns control.                                * 00016400
*                                                                     * 00016500
*01* PERFORMANCE IMPLICATIONS:                                        * 00016600
*                                                                     * 00016700
*    None.                                                            * 00016800
*                                                                     * 00016900
*01* SYNTAX:                                                          * 00017000
*                                                                     * 00017100
*Ýxlabel¨  IFAWIC  Ð  REQUEST=REGISTER                                * 00017200
*                  !   Ð ,BUFFERKEY=8                                 * 00017300
*                  !   ¿ ,BUFFERKEY=0                                 * 00017400
*                  !     ,BUFFER4KPAGES=xbuffer4kpages                * 00017500
*                  !     ,BUFFERPTR=xbufferptr                        * 00017600
*                  !    Ý,EXITVERSION=»xexitversion!NO_EXITVERSIONº   * 00017700
*                  !         ,EXITROUTINE=xexitroutine¨               * 00017800
*                  ¿ ,REQUEST=DEREGISTER                              * 00017900
*                    ,SUBTYPE=xsubtype                                * 00018000
*                   Ý,RETCODE=xretcode¨                               * 00018100
*                   Ý,RSNCODE=xrsncode¨                               * 00018200
*                   Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨           * 00018300
*                  ÐÝ,MF=S¨                                           * 00018400
*                  ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                    * 00018500
*                  ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                      * 00018600
*                                                                     * 00018700
*                                                                     * 00018800
*      Where:                                                         * 00018900
*                                                                     * 00019000
*                                                                     * 00019100
*      Ýxlabel¨                                                       * 00019200
*          is an optional symbol, starting in column 1, that is the   * 00019300
*          name on the IFAWIC macro invocation.  The name must        * 00019400
*          conform to the rules for an ordinary assembler language    * 00019500
*          symbol.                                                    * 00019600
*          DEFAULT: No name.                                          * 00019700
*                                                                     * 00019800
*                                                                     * 00019900
*                                                                     * 00020000
*                                                                     * 00020100
*      REQUEST=»REGISTER!DEREGISTERº                                  * 00020200
*          is a required keyword input which specifies an IFAWIC      * 00020300
*          request type                                               * 00020400
*                                                                     * 00020500
*                                                                     * 00020600
*          REQUEST=REGISTER                                           * 00020700
*              indicates to register the address space for WIC        * 00020800
*              instrumentation for the input subtype and to register  * 00020900
*              the input subtype with the system.                     * 00021000
*                                                                     * 00021100
*              When registering the address space for a subtype, the  * 00021200
*              caller provides the desired characteristics of the WIC * 00021300
*              instrumentation buffer in the BufferKey and            * 00021400
*              Buffer4kPages input fields.  The BufferKey must be the * 00021500
*              same across all register requests for the subtype.     * 00021600
*              The caller is provided with a buffer addressible by    * 00021700
*              the BufferPtr output field.  The provided buffer can   * 00021800
*              be used by the caller to save instrumentation data for * 00021900
*              the registering program for activity in calling        * 00022000
*              address space.                                         * 00022100
*                                                                     * 00022200
*              The first register call for a subtype must register    * 00022300
*              the subtype with the system by providing a WIC exit by * 00022400
*              specifying the ExitVersion and ExitRoutine fields.     * 00022500
*              Subsequent register requests may update the            * 00022600
*              ExitRoutine by specifying an incremented ExitVersion   * 00022700
*              number.                                                * 00022800
*                                                                     * 00022900
*                                                                     * 00023000
*              BUFFERKEY=»8!0º                                        * 00023100
*                  is a required keyword input which specifies the    * 00023200
*                  storage key of the WIC instrumentation buffer to   * 00023300
*                  obtain. The caller must specify the same Bufferkey * 00023400
*                  across all register requests for the same subtype. * 00023500
*                                                                     * 00023600
*                                                                     * 00023700
*                  BUFFERKEY=8                                        * 00023800
*                      indicates to obtain the instrumentation buffer * 00023900
*                      in key 8.  IBM recommends IFAWIC callers use   * 00024000
*                      BUFFERKEY=0 whenever possible to prevent       * 00024100
*                      unauthorized users and programs from modifying * 00024200
*                      WIC buffer contents.                           * 00024300
*                                                                     * 00024400
*                  BUFFERKEY=0                                        * 00024500
*                      indicates to obtain the instrumentation buffer * 00024600
*                      in key 0.                                      * 00024700
*                                                                     * 00024800
*                                                                     * 00024900
*                                                                     * 00025000
*                                                                     * 00025100
*                                                                     * 00025200
*                                                                     * 00025300
*              BUFFER4KPAGES=xbuffer4kpages                           * 00025400
*                  is the name (RS-type), or address in register      * 00025500
*                  (2)-(12), of a required fullword input which       * 00025600
*                  specifies the number of 4k pages in the WIC        * 00025700
*                  instrumentation buffer.                            * 00025800
*                                                                     * 00025900
*                  This number must be between 1 and 16 4k pages.     * 00026000
*                                                                     * 00026100
*                  It is desirable for the Buffer4kPages to be the    * 00026200
*                  same for all register request for the input        * 00026300
*                  subtype, however, the system will allow the value  * 00026400
*                  to change.  When specifying different              * 00026500
*                  Buffer4kPages values, it is up to the caller to    * 00026600
*                  remember how much data in each address space WIC   * 00026700
*                  instrumentation buffer is available for the WIC    * 00026800
*                  exit routine to use. Also, keep in mind when       * 00026900
*                  aggregating data that new data fields, may not be  * 00027000
*                  available for aggregation from older program       * 00027100
*                  versions.  Record data in the WIC instrumentation  * 00027200
*                  buffer to identify to the WIC ExitRoutine what     * 00027300
*                  data it should access and what fields it can       * 00027400
*                  aggregate.                                         * 00027500
*                                                                     * 00027600
*                                                                     * 00027700
*                                                                     * 00027800
*                                                                     * 00027900
*              BUFFERPTR=xbufferptr                                   * 00028000
*                  is the name (RS-type), or address in register      * 00028100
*                  (2)-(12), of a required 8 byte output that will    * 00028200
*                  contain the address of the page aligned WIC        * 00028300
*                  instrumentation buffer for the input subtype for   * 00028400
*                  the current primary address space.  This buffer    * 00028500
*                  must be accessed in AMODE 64.                      * 00028600
*                                                                     * 00028700
*                                                                     * 00028800
*                                                                     * 00028900
*                                                                     * 00029000
*              ÝEXITVERSION=»xexitversion!NO_EXITVERSIONº             * 00029100
*                  is the name (RS-type), or address in register      * 00029200
*                  (2)-(12), of an optional fullword input which      * 00029300
*                  specifies the unsigned exit version number.        * 00029400
*                                                                     * 00029500
*                  The ExitVersion number must be greater than 0,     * 00029600
*                  when specified.                                    * 00029700
*                                                                     * 00029800
*                  For the first IFAWIC REQUEST=REGISTER, or          * 00029900
*                  subsequent IFAWIC REQUEST=REGISTER when the        * 00030000
*                  ExitVersion number is larger than previously       * 00030100
*                  requested value for the input subtype, IFAWIC      * 00030200
*                  processing saves the input ExitRoutine and calls   * 00030300
*                  the ExitRoutine on the next WIC recording          * 00030400
*                  interval.                                          * 00030500
*                                                                     * 00030600
*                  When defaulted, or ExitVersion is or less than     * 00030700
*                  prevously requested, IFAWIC processing ignores the * 00030800
*                  ExitRoutine parameter, and continues to call the   * 00030900
*                  ExitRoutine associated with the largest            * 00031000
*                  ExitVersion value.                                 * 00031100
*                                                                     * 00031200
*                  When ExitVersion is equal to a previously          * 00031300
*                  specified request, IFAWIC processing validates     * 00031400
*                  that the ExitRoutine specified is the same as the  * 00031500
*                  previously requested ExitRoutine.  If the          * 00031600
*                  ExitRoutines are different the request will fail.  * 00031700
*                  IFAWIC processing will continue to call the        * 00031800
*                  ExitRoutine with the same associated ExitVersion   * 00031900
*                  value.                                             * 00032000
*                                                                     * 00032100
*                  In order to tell the system to use a new           * 00032200
*                  ExitRoutine, with the same or different name,      * 00032300
*                  specify an incremented ExitVersion number.         * 00032400
*                  DEFAULT: NO_EXITVERSION                            * 00032500
*                                                                     * 00032600
*                                                                     * 00032700
*                  EXITROUTINE=xexitroutine¨                          * 00032800
*                      is the name (RS-type), or address in register  * 00032900
*                      (2)-(12), of a required 8 character input      * 00033000
*                      which specifies the name of the WIC exit       * 00033100
*                      routine to be given control in the SMF address * 00033200
*                      space to generate SMF type 98 records for the  * 00033300
*                      input subtype.                                 * 00033400
*                                                                     * 00033500
*                      The specified ExitRoutine must be a valid      * 00033600
*                      module name residing in the calling program's  * 00033700
*                      tasklib, steplib, joblib, the systems LNKLST   * 00033800
*                      concatenation, or LPA. The provided            * 00033900
*                      ExitRoutine must be in an APF authorized       * 00034000
*                      library and be re-entrant.                     * 00034100
*                                                                     * 00034200
*                      The exit routine must be in AMODE 31 or AMODE  * 00034300
*                      64 and must access the WIC instrumentation     * 00034400
*                      buffers in AMODE 64.                           * 00034500
*                                                                     * 00034600
*                                                                     * 00034700
*                                                                     * 00034800
*                                                                     * 00034900
*                                                                     * 00035000
*          REQUEST=DEREGISTER                                         * 00035100
*              indicates a program is no longer instrumenting into    * 00035200
*              the buffer for the input subtype in the current        * 00035300
*              primary address space.                                 * 00035400
*                                                                     * 00035500
*              The WIC instrumentation buffer for this subtype in     * 00035600
*              this address space will become inaccessible, and the   * 00035700
*              caller must have already stopped referencing this      * 00035800
*              storage.  The WIC instrumentaion buffer for this       * 00035900
*              address space will still be accessible to the WIC exit * 00036000
*              in the SMF address space, so ensuring the storage is   * 00036100
*              accessible to the exit is not a concern to the caller. * 00036200
*                                                                     * 00036300
*              When all address spaces registered for a program's     * 00036400
*              subtype have deregistered, the system no longer calls  * 00036500
*              the WIC exit routine. The WIC exit routine is cleaned  * 00036600
*              up.                                                    * 00036700
*                                                                     * 00036800
*              Deregistration occurs implicity at address space or    * 00036900
*              job-step task termination.                             * 00037000
*                                                                     * 00037100
*                                                                     * 00037200
*                                                                     * 00037300
*                                                                     * 00037400
*                                                                     * 00037500
*                                                                     * 00037600
*      SUBTYPE=xsubtype                                               * 00037700
*          is the name (RS-type), or address in register (2)-(12), of * 00037800
*          a required halfword input Unsigned which specifies the IBM * 00037900
*          assigned subtype for writing SMF 98 records from WIC       * 00038000
*          instrumentation data.                                      * 00038100
*                                                                     * 00038200
*          Must be a supported subtype and a number in the range of   * 00038300
*          2-32767.                                                   * 00038400
*                                                                     * 00038500
*                                                                     * 00038600
*                                                                     * 00038700
*                                                                     * 00038800
*      ÝRETCODE=xretcode¨                                             * 00038900
*          is the name (RS-type) of an optional fullword output       * 00039000
*          variable, or register (2)-(12) or (15), into which the     * 00039100
*          return code is to be copied from GPR 15.  If you specify   * 00039200
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00039300
*          the value will be left in GPR 15.                          * 00039400
*                                                                     * 00039500
*                                                                     * 00039600
*                                                                     * 00039700
*                                                                     * 00039800
*      ÝRSNCODE=xrsncode¨                                             * 00039900
*          is the name (RS-type) of an optional fullword output       * 00040000
*          variable into which the reason code is to be copied from   * 00040100
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00040200
*          R0 (within or without parentheses), the value will be left * 00040300
*          in GPR 0.                                                  * 00040400
*                                                                     * 00040500
*                                                                     * 00040600
*                                                                     * 00040700
*                                                                     * 00040800
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00040900
*          is an optional byte input decimal value in the "0-0" range * 00041000
*          that specifies the macro version.  PLISTVER is the only    * 00041100
*          key allowed on the list form of MF and determines which    * 00041200
*          parameter list is generated.  Note that MAX may be         * 00041300
*          specified instead of a number, and the parameter list will * 00041400
*          be of the largest size currently supported. This size may  * 00041500
*          grow from release to release (thus possibly affecting the  * 00041600
*          amount of storage needed by your program).  If your        * 00041700
*          program can tolerate this, IBM recommends that you always  * 00041800
*          specify MAX when creating the list form parameter list as  * 00041900
*          that will ensure that the list form parameter list is      * 00042000
*          always long enough to hold whatever parameters might be    * 00042100
*          specified on the execute form.                             * 00042200
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00042300
*          default is the lowest version which allows all of the      * 00042400
*          parameters specified on the invocation to be processed.    * 00042500
*                                                                     * 00042600
*                                                                     * 00042700
*                                                                     * 00042800
*                                                                     * 00042900
*      ÝMF=»S!L!Eº¨                                                   * 00043000
*          is an optional keyword input which specifies the macro     * 00043100
*          form.                                                      * 00043200
*          DEFAULT: S                                                 * 00043300
*                                                                     * 00043400
*                                                                     * 00043500
*          ÝMF=S¨                                                     * 00043600
*              specifies the standard form of the macro.  The "S"     * 00043700
*              form generates code to put the parameters into an      * 00043800
*              in-line parameter list and invoke the desired service. * 00043900
*              Full checking for required macro keys is done along    * 00044000
*              with supplying defaults for omitted optional           * 00044100
*              parameters.                                            * 00044200
*                                                                     * 00044300
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00044400
*              specifies the list form of the macro.  The "L" form    * 00044500
*              defines an area to be used for the parameter list.     * 00044600
*              Only the PLISTVER key may be specified on the          * 00044700
*              invocation.  All other macro parameters are flagged as * 00044800
*              errors.  If PLISTVER is not specified, the original    * 00044900
*              parameter list definition is used.                     * 00045000
*                                                                     * 00045100
*            ,xmfctrl                                                 * 00045200
*              is a required input.  It is the name of a storage area * 00045300
*              for the parameter list.                                * 00045400
*                                                                     * 00045500
*            »,xmfattr!0Dº                                            * 00045600
*              is an optional 60 character input string that varies   * 00045700
*              from 1 to 60 characters. Use it to force boundary      * 00045800
*              alignment of the parameter list. Use only 0F or 0D.    * 00045900
*              DEFAULT: 0D which forces the parameter list to a       * 00046000
*              doubleword boundary.                                   * 00046100
*                                                                     * 00046200
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00046300
*              specifies the execute form of the macro.  The "E" form * 00046400
*              generates code to put the parameters into the          * 00046500
*              parameter list specified by xmfctrl and provides full  * 00046600
*              syntax checking with default setting.                  * 00046700
*                                                                     * 00046800
*            ,xmfctrl                                                 * 00046900
*              is a required input.  It is the name (RS-type), or     * 00047000
*              address in register (1)-(12), of a storage area for    * 00047100
*              the parameter list.                                    * 00047200
*                                                                     * 00047300
*            »,COMPLETEº                                              * 00047400
*              is an optional keyword input which specifies the       * 00047500
*              degree of macro parameter syntax checking.             * 00047600
*              DEFAULT: COMPLETE                                      * 00047700
*                                                                     * 00047800
*                                                                     * 00047900
*              COMPLETE                                               * 00048000
*                  Checking for required macro keys is done and       * 00048100
*                  defaults are supplied for omitted optional         * 00048200
*                  parameters.                                        * 00048300
*                                                                     * 00048400
*                                                                     * 00048500
*                                                                     * 00048600
*                                                                     * 00048700
*                                                                     * 00048800
*                                                                     * 00048900
*                                                                     * 00049000
*01* ABEND CODES:  None.                                              * 00049100
*                                                                     * 00049200
*01* RETURN CODES:                                                    * 00049300
*                                                                     * 00049400
*                                                                     * 00049500
*                 Macro IFAWICCB provides equate symbols for the      * 00049600
*                 return and reason codes.  Bits 0-15 of the reason   * 00049700
*                 code may contain component-diagnostic data and must * 00049800
*                 not be assumed to be 0.  Logically AND the reason   * 00049900
*                 code with mask IFAWIC_Rsncode_Mask in order to      * 00050000
*                 isolate the non-component-diagnostic portion of the * 00050100
*                 reason code.                                        * 00050200
*                                                                     * 00050300
*       0         Name: IFAWIC_Rc_Success                             * 00050400
*                                                                     * 00050500
*                 Meaning: IFAWIC request successful.                 * 00050600
*                                                                     * 00050700
*                 For REQUEST=REGISTER a BufferPtr has been provided  * 00050800
*                 to the current primary address.                     * 00050900
*                                                                     * 00051000
*                 If an ExitVersion has been specified, and this is   * 00051100
*                 the first REQUEST=REGISTER on the system for the    * 00051200
*                 input subtype, or the input ExitVersion is larger   * 00051300
*                 than the current ExitVersion the input subtype, the * 00051400
*                 ExitRoutine has been registered, and the system     * 00051500
*                 will switch to calling the new exit routine at the  * 00051600
*                 next WIC interval.                                  * 00051700
*                                                                     * 00051800
*                 The system issues ENF 85 signals to inform IFAWIC   * 00051900
*                 callers to start or stop writing instrumentation    * 00052000
*                 data to their instrumentation buffer. See macro     * 00052100
*                 IFAWICCB for additional information.                * 00052200
*                                                                     * 00052300
*                 For REQUEST=DEREGISTER the buffer is made           * 00052400
*                 unavailable to the current primary address.  By     * 00052500
*                 invoking REQUEST=DEREGISTER, the program certifies  * 00052600
*                 that the exploiter has stopped instrumenting into   * 00052700
*                 its buffer.  The program does not have to certify   * 00052800
*                 its WIC exit is not accessing the buffer.  Once     * 00052900
*                 REQUEST=DEREGISTER is invoked, the system is        * 00053000
*                 responsible for preventing the WIC exit from        * 00053100
*                 accessing the the buffer                            * 00053200
*                                                                     * 00053300
*                 If there are no more address spaces registered for  * 00053400
*                 the input subtype, the system will stop calling the * 00053500
*                 exit routine.                                       * 00053600
*                                                                     * 00053700
*                 Action:  For REQUEST=REGISTER, the program should   * 00053800
*                 begin instrumenting.                                * 00053900
*                                                                     * 00054000
*                 For REQUEST=DEREGISTER, none.                       * 00054100
*                                                                     * 00054200
*                                                                     * 00054300
*       4         Name: IFAWIC_Rc_Warning                             * 00054400
*                                                                     * 00054500
*                 Meaning:  IFAWIC request completed with a warning.  * 00054600
*                                                                     * 00054700
*                 The high half word of the reason code may contain   * 00054800
*                 indications of other warnings that have occurred    * 00054900
*                 besides the reason code portion in the lower half.  * 00055000
*                 See Wic_Warning_Rsn in IFAWICCB for a mapping of    * 00055100
*                 this area.                                          * 00055200
*                                                                     * 00055300
*                 For REQUEST=REGISTER, a BufferPtr has been provided * 00055400
*                 to the current primary address.                     * 00055500
*                                                                     * 00055600
*                 If an ExitVersion has been specified, and this is   * 00055700
*                 the first REQUEST=REGISTER on the system for the    * 00055800
*                 input subtype, or the input ExitVersion is larger   * 00055900
*                 than the current ExitVersion the input subtype, the * 00056000
*                 ExitRoutine has been registered, and the system     * 00056100
*                 will switch to calling the new exit routine at the  * 00056200
*                 next WIC interval.                                  * 00056300
*                                                                     * 00056400
*                 For REQUEST=DEREGISTER, the buffer is made          * 00056500
*                 unavailable to the current primary address.         * 00056600
*                                                                     * 00056700
*                 If there are no more address spaces registered for  * 00056800
*                 the input subtype, the system will will stop        * 00056900
*                 calling the exit routine.                           * 00057000
*                                                                     * 00057100
*                 Action:  Refer to the action provided with the      * 00057200
*                 specific reason code.                               * 00057300
*                                                                     * 00057400
*                 For REQUEST=REGISTER, the program should check the  * 00057500
*                 high half of the reason code for any conditions     * 00057600
*                 indicating the WIC services are not fully available * 00057700
*                 by testing for any bits being on in the first byte  * 00057800
*                 using the IFAWICCB field                            * 00057900
*                 Wic_NotFullyAvail_LowHighMask.                      * 00058000
*                                                                     * 00058100
*                  When no bits in the first byte of the reason code  * 00058200
*                 are on, the program should start writing            * 00058300
*                 instrumentation data to the instrumentation buffer  * 00058400
*                 because the program's WIC exit will be called at    * 00058500
*                 the next WIC interval.                              * 00058600
*                                                                     * 00058700
*                  When any bit in the first byte of the reason code  * 00058800
*                 is on, the program should not start writing         * 00058900
*                 instrumentation data to the instrumentation buffer  * 00059000
*                 because the WIC exit will not be called at the next * 00059100
*                 WIC interval                                        * 00059200
*                                                                     * 00059300
*                 The system issues ENF 85 signals to inform IFAWIC   * 00059400
*                 callers to start or stop writing instrumentation    * 00059500
*                 data to their instrumentation buffer. See macro     * 00059600
*                 IFAWICCB for additional information.                * 00059700
*                                                                     * 00059800
*                 For REQUEST=DEREGISTER, none.                       * 00059900
*                                                                     * 00060000
*                                                                     * 00060100
*                 HEX REASON  MEANING/ACTION                          * 00060200
*                 CODE                                                * 00060300
*                                                                     * 00060400
*                 xxxx0401    Name: IFAWIC_Rsn_Buffer4kPagesSmaller   * 00060500
*                                                                     * 00060600
*                             Meaning: A smaller Buffer4kPages value  * 00060700
*                             was requested than the value specified  * 00060800
*                             on a previous REQUEST=REGISTER for the  * 00060900
*                             same subtype.                           * 00061000
*                                                                     * 00061100
*                             The system reserves the requested       * 00061200
*                             buffer size for this address space.     * 00061300
*                                                                     * 00061400
*                             Action:  It is desirable for the        * 00061500
*                             Buffer4kPages to be the same for all    * 00061600
*                             register requests for the input         * 00061700
*                             subtype, however, the system will allow * 00061800
*                             the value to change.  When specifying   * 00061900
*                             different Buffer4kPages values, it is   * 00062000
*                             up to the caller to remember how much   * 00062100
*                             data in each address space WIC          * 00062200
*                             instrumentation buffer is available for * 00062300
*                             the WIC exit routine to use. Also, keep * 00062400
*                             in mind when aggregating data that new  * 00062500
*                             data fields may not be available for    * 00062600
*                             aggregation from older program          * 00062700
*                             versions.  Record data in the WIC       * 00062800
*                             instrumentation buffer to identify to   * 00062900
*                             the WIC ExitRoutine what data it should * 00063000
*                             access and what fields it can           * 00063100
*                             aggregate.                              * 00063200
*                                                                     * 00063300
*                 xxxx0402    Name: IFAWIC_Rsn_Buffer4kPagesLarger    * 00063400
*                                                                     * 00063500
*                             Meaning: A larger Buffer4kPages value   * 00063600
*                             was requested than the value specified  * 00063700
*                             on a previous REQUEST=REGISTER for the  * 00063800
*                             same subtype.                           * 00063900
*                                                                     * 00064000
*                             The system reserves the requested       * 00064100
*                             buffer size for this address space.     * 00064200
*                                                                     * 00064300
*                             Action:  It is desirable for the        * 00064400
*                             Buffer4kPages to be the same for all    * 00064500
*                             register requests for the input         * 00064600
*                             subtype, however, the system will allow * 00064700
*                             the value to change.  When specifying   * 00064800
*                             different Buffer4kPages values, it is   * 00064900
*                             up to the caller to remember how much   * 00065000
*                             data in each address space WIC          * 00065100
*                             instrumentation buffer is available for * 00065200
*                             the WIC exit routine to use. Also, keep * 00065300
*                             in mind when aggregating data that new  * 00065400
*                             data fields may not be available for    * 00065500
*                             aggregation from older program          * 00065600
*                             versions.  Record data in the WIC       * 00065700
*                             instrumentation buffer to identify to   * 00065800
*                             the WIC ExitRoutine what data it should * 00065900
*                             access and what fields it can           * 00066000
*                             aggregate.                              * 00066100
*                                                                     * 00066200
*                 xxxx0403    Name: IFAWIC_Rsn_AlreadyRegistered      * 00066300
*                                                                     * 00066400
*                             Meaning: A REQUEST=REGISTER was         * 00066500
*                             requested from an address space for a   * 00066600
*                             subtype that was already registered.    * 00066700
*                                                                     * 00066800
*                             Action: none needed.                    * 00066900
*                                                                     * 00067000
*                 xxxx0404    Name: IFAWIC_Rsn_NotRegistered          * 00067100
*                                                                     * 00067200
*                             Meaning: A REQUEST=DEREGISTER was       * 00067300
*                             requested from an address space for a   * 00067400
*                             subtype that was not currently          * 00067500
*                             registered.                             * 00067600
*                                                                     * 00067700
*                             Action: none needed.                    * 00067800
*                                                                     * 00067900
*                 xxxx0405    Name: IFAWIC_Rsn_ExitVersionIgnored     * 00068000
*                                                                     * 00068100
*                             Meaning: A REQUEST=REGISTER specified   * 00068200
*                             an ExitVersion that was less than the   * 00068300
*                             current ExitVersion. The ExitVersion    * 00068400
*                             and ExitRoutine parameters are ignored  * 00068500
*                             and the system continues using the      * 00068600
*                             current highest versioned exit routine. * 00068700
*                                                                     * 00068800
*                             Action: none needed.                    * 00068900
*                                                                     * 00069000
*                 xxxx0481    Name: IFAWIC_Rsn_WicFeatureNotEnabled   * 00069100
*                                                                     * 00069200
*                             Meaning: The WorkloadIntCorr feature    * 00069300
*                             was not enabled to product registry.    * 00069400
*                                                                     * 00069500
*                             Action:  Wait for ENF 85 signal and     * 00069600
*                             verify the WicEnf bit                   * 00069700
*                             WicEnf_InstrumentationRequested is on   * 00069800
*                             before writing to the instrumentation   * 00069900
*                             buffer.                                 * 00070000
*                                                                     * 00070100
*                 xxxx0482    Name: IFAWIC_Rsn_SubtypeNotCollected    * 00070200
*                                                                     * 00070300
*                             Meaning: SMF has not been configured to * 00070400
*                             collect the input SMF 98 subtype        * 00070500
*                             record.                                 * 00070600
*                                                                     * 00070700
*                             Action:  Wait for ENF85 signal and      * 00070800
*                             verify the WicEnf bit                   * 00070900
*                             WicEnf_InstrumentationRequested is on   * 00071000
*                             before writing to the instrumentation   * 00071100
*                             buffer.                                 * 00071200
*                                                                     * 00071300
*                                                                     * 00071400
*                                                                     * 00071500
*                                                                     * 00071600
*       8         Name: IFAWIC_Rc_UserError                           * 00071700
*                                                                     * 00071800
*                 Meaning: The IFAWIC request specified parameters    * 00071900
*                 that are not valid or the request is issued in an   * 00072000
*                 user-controllable environment that is not valid.    * 00072100
*                                                                     * 00072200
*                 The IFAWIC service did not complete successfully.   * 00072300
*                 For REQUEST=REGISTER, no WIC instrumentation buffer * 00072400
*                 was provided to the caller.                         * 00072500
*                                                                     * 00072600
*                 Action:  Refer to the action provided with the      * 00072700
*                 specific reason code.                               * 00072800
*                                                                     * 00072900
*                                                                     * 00073000
*                 HEX REASON  MEANING/ACTION                          * 00073100
*                 CODE                                                * 00073200
*                                                                     * 00073300
*                 xxxx0801    Name: IFAWIC_Rsn_ParmListAlet           * 00073400
*                                                                     * 00073500
*                             Meaning: Unable to use ALET of the      * 00073600
*                             IFAWIC parameter list.                  * 00073700
*                                                                     * 00073800
*                             Action:  Provide a valid ALET for the   * 00073900
*                             parameter list. The access register     * 00074000
*                             might not have been set up correctly.   * 00074100
*                                                                     * 00074200
*                 xxxx0802    Name: IFAWIC_Rsn_BadVersion             * 00074300
*                                                                     * 00074400
*                             Meaning: The provided PLISTVER is not   * 00074500
*                             valid.  This suggests the parameter     * 00074600
*                             list used to call IFAWIC was overlaid,  * 00074700
*                             or was not generated by the IFAWIC      * 00074800
*                             macro.                                  * 00074900
*                                                                     * 00075000
*                             Action: Check for possible storage      * 00075100
*                             overlay of the parameter list. Use the  * 00075200
*                             IFAWIC service to produce the parameter * 00075300
*                             list.                                   * 00075400
*                                                                     * 00075500
*                 xxxx0803    Name: IFAWIC_Rsn_ReservedNot0           * 00075600
*                                                                     * 00075700
*                             Meaning: The parameter list contains    * 00075800
*                             non-0 input in reserved fields. This    * 00075900
*                             suggests the parameter list used to     * 00076000
*                             call IFAWIC was overlaid, or was not    * 00076100
*                             generated by the IFAWIC macro.          * 00076200
*                                                                     * 00076300
*                             Action: Check for possible storage      * 00076400
*                             overlay of the parameter list. Use the  * 00076500
*                             IFAWIC service to produce the parameter * 00076600
*                             list.                                   * 00076700
*                                                                     * 00076800
*                 xxxx0804    Name: IFAWIC_Rsn_BadRequestType         * 00076900
*                                                                     * 00077000
*                             Meaning: The request type is not valid. * 00077100
*                             This suggests the parameter list used   * 00077200
*                             to call IFAWIC was overlaid, or was not * 00077300
*                             generated by the IFAWIC macro.          * 00077400
*                                                                     * 00077500
*                             Action: Check for possible storage      * 00077600
*                             overlay of the parameter list. Use the  * 00077700
*                             IFAWIC service to produce the parameter * 00077800
*                             list.                                   * 00077900
*                                                                     * 00078000
*                 xxxx0805    Name: IFAWIC_Rsn_BadBufferKey           * 00078100
*                                                                     * 00078200
*                             Meaning: The buffer key type is not     * 00078300
*                             valid.  This suggests the parameter     * 00078400
*                             list used to call IFAWIC was overlaid,  * 00078500
*                             or was not generated by the IFAWIC      * 00078600
*                             macro.                                  * 00078700
*                                                                     * 00078800
*                             Action: Check for possible storage      * 00078900
*                             overlay of the parameter list. Use the  * 00079000
*                             IFAWIC service to produce the parameter * 00079100
*                             list.                                   * 00079200
*                                                                     * 00079300
*                 xxxx0807    Name: IFAWIC_Rsn_ParmListFetch          * 00079400
*                                                                     * 00079500
*                             Meaning: An error was encountered when  * 00079600
*                             fetching the supplied parameter list.   * 00079700
*                                                                     * 00079800
*                             Action:  Call IFAWIC with a parameter   * 00079900
*                             list properly addressable.              * 00080000
*                                                                     * 00080100
*                 xxxx0808    Name: IFAWIC_Rsn_ParmListWrite          * 00080200
*                                                                     * 00080300
*                             Meaning: An error was encountered when  * 00080400
*                             writing to the supplied parameter list. * 00080500
*                                                                     * 00080600
*                             Action:  Call IFAWIC with a parameter   * 00080700
*                             list properly addressable and able to   * 00080800
*                             be written to.                          * 00080900
*                                                                     * 00081000
*                 xxxx0810    Name: IFAWIC_Rsn_NotEnabled             * 00081100
*                                                                     * 00081200
*                             Meaning: The IFAWIC caller was not      * 00081300
*                             enabled.                                * 00081400
*                                                                     * 00081500
*                             Action:  Call IFAWIC only when enabled. * 00081600
*                                                                     * 00081700
*                 xxxx0811    Name: IFAWIC_Rsn_Locked                 * 00081800
*                                                                     * 00081900
*                             Meaning: The IFAWIC caller was locked.  * 00082000
*                                                                     * 00082100
*                             Action:  Call IFAWIC without holding    * 00082200
*                             locks.                                  * 00082300
*                                                                     * 00082400
*                 xxxx0812    Name: IFAWIC_Rsn_HomeNotPrimary         * 00082500
*                                                                     * 00082600
*                             Meaning: The IFAWIC caller's primary    * 00082700
*                             home space was not equal to the         * 00082800
*                             caller's primary address space.         * 00082900
*                                                                     * 00083000
*                             Action:  Call IFAWIC when home equals   * 00083100
*                             primary address space.                  * 00083200
*                                                                     * 00083300
*                 xxxx0813    Name: IFAWIC_Rsn_CallerFRR              * 00083400
*                                                                     * 00083500
*                             Meaning: The IFAWIC REQUEST=REGISTER    * 00083600
*                             caller had FRR recovery established.    * 00083700
*                                                                     * 00083800
*                             Action:  Call IFAWIC without FRRs       * 00083900
*                             established.                            * 00084000
*                                                                     * 00084100
*                 xxxx0814    Name: IFAWIC_Rsn_NotAuthorized          * 00084200
*                                                                     * 00084300
*                             Meaning: The IFAWIC caller is not       * 00084400
*                             authorized.                             * 00084500
*                                                                     * 00084600
*                             Action:  Call IFAWIC only when          * 00084700
*                             authorized.                             * 00084800
*                                                                     * 00084900
*                 xxxx0820    Name: IFAWIC_Rsn_SubtypeInput           * 00085000
*                                                                     * 00085100
*                             Meaning: The provided SUBTYPE is not    * 00085200
*                             supported.                              * 00085300
*                                                                     * 00085400
*                             Action:  Supply the IBM provided        * 00085500
*                             program subtype.                        * 00085600
*                                                                     * 00085700
*                 xxxx0821    Name: IFAWIC_Rsn_ExitVersionZero        * 00085800
*                                                                     * 00085900
*                             Meaning: The ExitVersion input must not * 00086000
*                             be 0.                                   * 00086100
*                                                                     * 00086200
*                             Action:  Specify an ExitVersion that is * 00086300
*                             not  0.                                 * 00086400
*                                                                     * 00086500
*                 xxxx0822    Name: IFAWIC_Rsn_Buffer4kPagesZero      * 00086600
*                                                                     * 00086700
*                             Meaning: The Buffer4kPages must not be  * 00086800
*                             0.                                      * 00086900
*                                                                     * 00087000
*                             Action:  Specify Buffer4kPages that is  * 00087100
*                             not 0.                                  * 00087200
*                                                                     * 00087300
*                 xxxx0823    Name: IFAWIC_Rsn_Buffer4kPagesTooLarge  * 00087400
*                                                                     * 00087500
*                             Meaning: The Buffer4kPages input must   * 00087600
*                             be less than or equal to 16.            * 00087700
*                                                                     * 00087800
*                             Action:  Specify Buffer4kPages as less  * 00087900
*                             than or equal to 16.                    * 00088000
*                                                                     * 00088100
*                 xxxx0824    Name: IFAWIC_Rsn_BufferKeyMismatch      * 00088200
*                                                                     * 00088300
*                             Meaning: A previous REQUEST=REGISTER    * 00088400
*                             requested and received a buffer for a   * 00088500
*                             BUFFERKEY value that was different that * 00088600
*                             the BUFFERKEY specified on this         * 00088700
*                             request.                                * 00088800
*                                                                     * 00088900
*                             Action:  Update the program to request  * 00089000
*                             the same BUFFERKEY for each call to     * 00089100
*                             IFAWIC, even across different program   * 00089200
*                             versions.                               * 00089300
*                                                                     * 00089400
*                 xxxx0825    Name: IFAWIC_Rsn_SRBMode                * 00089500
*                                                                     * 00089600
*                             Meaning: IFAWIC was issued in SRB mode  * 00089700
*                                                                     * 00089800
*                             Action:  Do not issue IFAWIC in SRB     * 00089900
*                             mode                                    * 00090000
*                                                                     * 00090100
*                 xxxx0830    Name:                                   * 00090200
*                             IFAWIC_Rsn_SameVerExitRoutineMismatch   * 00090300
*                                                                     * 00090400
*                             Meaning: A ExitRoutine and ExitVersion  * 00090500
*                             was specified such that the ExitVersion * 00090600
*                             is the same as a previous               * 00090700
*                             specification, however, the ExitRoutine * 00090800
*                             is different.                           * 00090900
*                                                                     * 00091000
*                             Action:  Specify the same ExitRoutine   * 00091100
*                             to correspond with the same             * 00091200
*                             ExitVersion. If the program introduces  * 00091300
*                             a new exit routine, the ExitVersion     * 00091400
*                             must be incremented.                    * 00091500
*                                                                     * 00091600
*                 xxxx0831    Name: IFAWIC_Rsn_ExitRtnNotFound        * 00091700
*                                                                     * 00091800
*                             Meaning: The exit routine could not be  * 00091900
*                             found.                                  * 00092000
*                                                                     * 00092100
*                             Action:  Ensure the exit routine is     * 00092200
*                             located in either the invoking          * 00092300
*                             program's joblib, steplib, tasklib, in  * 00092400
*                             the system's LNKLST concatenation or in * 00092500
*                             LPA.                                    * 00092600
*                                                                     * 00092700
*                 xxxx0832    Name: IFAWIC_Rsn_ExitRtnNotInAPFLib     * 00092800
*                                                                     * 00092900
*                             Meaning: IFAWIC was unable to load the  * 00093000
*                             provided exit routine because did not   * 00093100
*                             reside in an APF authorized library.    * 00093200
*                                                                     * 00093300
*                             The "xxxx" portion of the reason code   * 00093400
*                             contains an informational code as       * 00093500
*                             documented with ABEND 306 reasons. No   * 00093600
*                             abend was generated.                    * 00093700
*                                                                     * 00093800
*                             Action:  Refer to "MVS System Codes",   * 00093900
*                             sections "System completion codes",     * 00094000
*                             "306", with the "xxxx" portion of the   * 00094100
*                             reason code to see what action is       * 00094200
*                             needed to resolve the condition.        * 00094300
*                                                                     * 00094400
*                             Ensure the exit routine resides in an   * 00094500
*                             APF authorized library and is           * 00094600
*                             re-entrant.                             * 00094700
*                                                                     * 00094800
*                 xxxx0833    Name: IFAWIC_Rsn_ExitRtnAmode24         * 00094900
*                                                                     * 00095000
*                             Meaning: The ExitRoutine must not be in * 00095100
*                             AMODE 24.                               * 00095200
*                                                                     * 00095300
*                             Action:  Provide an exit routine with   * 00095400
*                             an AMODE of 31 or 64.                   * 00095500
*                                                                     * 00095600
*                 xxxx0834    Name: IFAWIC_Rsn_ExitRtnNotReEntrant    * 00095700
*                                                                     * 00095800
*                             Meaning: The ExitRoutine must be        * 00095900
*                             re-entrant.                             * 00096000
*                                                                     * 00096100
*                             Action:  Provide an exit routine that   * 00096200
*                             is linked as re-entrant.                * 00096300
*                                                                     * 00096400
*                 xxxx0835    Name: IFAWIC_Rsn_ExitRtnNameNotUnique   * 00096500
*                                                                     * 00096600
*                             Meaning: Another subtype is using the   * 00096700
*                             same exit routine name.  The exit       * 00096800
*                             routine name must be unique per         * 00096900
*                             subtype.                                * 00097000
*                                                                     * 00097100
*                             Action:  Provide a unique exit routine  * 00097200
*                             name.                                   * 00097300
*                                                                     * 00097400
*                                                                     * 00097500
*                                                                     * 00097600
*                                                                     * 00097700
*       C         Name: IFAWIC_Rc_EnvError                            * 00097800
*                                                                     * 00097900
*                 Meaning: Environmental error                        * 00098000
*                                                                     * 00098100
*                 The IFAWIC service did not complete successfully.   * 00098200
*                 For REQUEST=REGISTER, no WIC instrumentation buffer * 00098300
*                 was provided to the caller.                         * 00098400
*                                                                     * 00098500
*                 Action:  Refer to the action provided with the      * 00098600
*                 specific reason code.                               * 00098700
*                                                                     * 00098800
*                                                                     * 00098900
*                 HEX REASON  MEANING/ACTION                          * 00099000
*                 CODE                                                * 00099100
*                                                                     * 00099200
*                 xxxx0C01    Name: IFAWIC_Rsn_SystemNotReady         * 00099300
*                                                                     * 00099400
*                             Meaning: IFAWIC was issued before the   * 00099500
*                             system is ready to start processing     * 00099600
*                             requests.                               * 00099700
*                                                                     * 00099800
*                             Action:  Wait for the system to be      * 00099900
*                             ready to accept IFAWIC requests and     * 00100000
*                             re-issue the IFAWIC request.            * 00100100
*                                                                     * 00100200
*                 xxxx0C02    Name: IFAWIC_Rsn_UnsupportedMachine     * 00100300
*                                                                     * 00100400
*                             Meaning: IFAWIC was issued from an      * 00100500
*                             unsupported machine.  WIC requires an   * 00100600
*                             IBM z14 or later hardware.              * 00100700
*                                                                     * 00100800
*                             Action:  Issue IFAWIC on a supported    * 00100900
*                             machine.                                * 00101000
*                                                                     * 00101100
*                 xxxx0C03    Name: IFAWIC_Rsn_EnvNoExit              * 00101200
*                                                                     * 00101300
*                             Meaning: IFAWIC REQUEST=REGISTER        * 00101400
*                             requests omitting ExitVersion and       * 00101500
*                             ExitRoutine, require a WIC exit routine * 00101600
*                             to have been already established by a   * 00101700
*                             previous IFAWIC REQUEST=REGISTER call   * 00101800
*                             specifying the ExitVersion and          * 00101900
*                             ExitRoutine parameters.                 * 00102000
*                                                                     * 00102100
*                             Action:  Specify ExitVersion and        * 00102200
*                             ExitRoutine or ensure an IFAWIC         * 00102300
*                             REQUEST=REGISTER call has already       * 00102400
*                             completed specifying ExitVersion and    * 00102500
*                             ExitRoutine before issuing IFAWIC       * 00102600
*                             REQUEST=REGISTER.                       * 00102700
*                                                                     * 00102800
*                 xxxx0C04    Name: IFAWIC_Rsn_SMFNOWICSpecified      * 00102900
*                                                                     * 00103000
*                             Meaning: SMF parameters specified NOWIC * 00103100
*                             which prevents programs from issuing    * 00103200
*                             IFAWIC REQUEST=REGISTER.                * 00103300
*                                                                     * 00103400
*                             Action:  Accept that WIC services will  * 00103500
*                             be unavailable for the program, or      * 00103600
*                             choose to handle WIC registration       * 00103700
*                             dynamically.  If the program can        * 00103800
*                             support dynamic WIC registration, wait  * 00103900
*                             for ENF 85 signal and check the WicEnf  * 00104000
*                             bit WicEnf_RegisterIsAvailable. When    * 00104100
*                             WicEnf_RegisterIsAvailable is on, The   * 00104200
*                             ENF listener exit can cause a task to   * 00104300
*                             wake up to re-issue IFAWIC              * 00104400
*                             REQUEST=REGISTER for the program.       * 00104500
*                                                                     * 00104600
*                             The system issues ENF 85 signals to     * 00104700
*                             inform IFAWIC callers that IFAWIC       * 00104800
*                             Register is available when SMF          * 00104900
*                             parameter WIC is specified. See macro   * 00105000
*                             IFAWICCB for additional information.    * 00105100
*                                                                     * 00105200
*                 xxxx0C10    Name: IFAWIC_Rsn_ExitRtnNoStorage       * 00105300
*                                                                     * 00105400
*                             Meaning: There was not sufficient       * 00105500
*                             storage for IFAWIC to process the exit  * 00105600
*                             routine.                                * 00105700
*                                                                     * 00105800
*                             Action:  Contact your system            * 00105900
*                             programmer. there is a shortage of      * 00106000
*                             common storage.                         * 00106100
*                                                                     * 00106200
*                 xxxx0C11    Name: IFAWIC_Rsn_UnexpectedLoadError    * 00106300
*                                                                     * 00106400
*                             Meaning: IFAWIC encountered errors      * 00106500
*                             trying to load the provided exit        * 00106600
*                             routine.                                * 00106700
*                                                                     * 00106800
*                             The "xxxx" portion of the reason code   * 00106900
*                             contains a code from the load service   * 00107000
*                             of what would have been the ABEND code. * 00107100
*                             No abend was generated.                 * 00107200
*                                                                     * 00107300
*                             Action:  Alert the system programmer.   * 00107400
*                             Refer to "MVS System Codes", sections   * 00107500
*                             "System completion codes", with the     * 00107600
*                             "xxxx" portion as the abend code to see * 00107700
*                             what action is needed to resolve the    * 00107800
*                             condition.  This may be accomonied with * 00107900
*                             system log messages with the CSV        * 00108000
*                             prefix.                                 * 00108100
*                                                                     * 00108200
*                                                                     * 00108300
*                                                                     * 00108400
*                                                                     * 00108500
*       10        Name: IFAWIC_Rc_CompError                           * 00108600
*                                                                     * 00108700
*                 Meaning: Unexpected failure.                        * 00108800
*                                                                     * 00108900
*                 Action:  Refer to the action provided with the      * 00109000
*                 specific reason code.                               * 00109100
*                                                                     * 00109200
*                                                                     * 00109300
*                 HEX REASON  MEANING/ACTION                          * 00109400
*                 CODE                                                * 00109500
*                                                                     * 00109600
*                 xxxx1001    Name: IFAWIC_Rsn_CompError              * 00109700
*                                                                     * 00109800
*                             Meaning: Unexpected failure. The state  * 00109900
*                             of the request is unpredictable.        * 00110000
*                                                                     * 00110100
*                             Action: Contact your system programer   * 00110200
*                             to report the problem to IBM service    * 00110300
*                                                                     * 00110400
*                                                                     * 00110500
*                                                                     * 00110600
*                                                                     * 00110700
*                                                                     * 00110800
*01* REASON CODES:                                                    * 00110900
*                                                                     * 00111000
*       Reason codes, as appropriate, are defined under their         * 00111100
*       corresponding return code.                                    * 00111200
*                                                                     * 00111300
*01* MODULE TYPE:  ASSEM MACRO                                        * 00111400
*                                                                     * 00111500
*02*   PROCESSOR:  ASSEM                                              * 00111600
*                                                                     * 00111700
*01* COMPONENT:  SC100                                                * 00111800
*                                                                     * 00111900
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00112000
*                                                                     * 00112100
*01* EXAMPLES:                                                        * 00112200
*                                                                     * 00112300
*    Example 1                                                        * 00112400
*                                                                     * 00112500
*    Operation:                                                       * 00112600
*                                                                     * 00112700
*                                                                     * 00112800
*    1.  Issue the IFAWIC service to start WIC instrumentation for a  * 00112900
*        test subtype                                                 * 00113000
*                                                                     * 00113100
*    2.  Issue the IFAWIC service to end WIC instrumentation for a    * 00113200
*        test subtype                                                 * 00113300
*                                                                     * 00113400
*                                                                     * 00113500
*                                                                     * 00113600
*    The code is as follows.                                          * 00113700
*                                                                     * 00113800
*       ... other code here ...                                       * 00113900
*                                                                     * 00114000
*               LARL  13,Wic_Fields                                   * 00114100
*               USING Wic_Fields,13                                   * 00114200
*               ENFREQ ACTION=LISTEN,CODE=ENFPC085,EOM=YES,         * * 00114300
*                     SRBEXIT=MyWicEnfExit,                         * * 00114400
*                     QUAL=MySubtype,QMASK=(BYTE3,BYTE4),           * * 00114500
*                     DTOKEN=MyWicEnfToken Listen for ENF 85          * 00114600
*               IFAWIC REQUEST=REGISTER,                            * * 00114700
*                     SUBTYPE=MySubtype,                            * * 00114800
*                     ExitRoutine=MyExitRtn,                        * * 00114900
*                     ExitVersion=MyExitVer,                        * * 00115000
*                     Buffer4kPages=MyBuf4kPg,                      * * 00115100
*                     BUFFERKEY=8,                                  * * 00115200
*                     BUFFERPTR=MyBuffer@  Register WIC subtype       * 00115300
*               CFI  15,IFAWIC_Rc_Warning  Check for a warning RC     * 00115400
*               JH   WicRegFailed          RC>4 is an error           * 00115500
*               JL   WicRegSuccess         RC=0 is a success          * 00115600
*               TMLH 0,Wic_NotFullyAvail_LowHighMask WIC services   * * 00115700
*                                          fully available?           * 00115800
*               JZ   WicRegSuccess         Yes, instrument            * 00115900
*               J    WicRegDone            No, do not instrument      * 00116000
*      WicRegFailed  DS 0H                 Register RC > 4            * 00116100
*               NI   MyWicFlags,MyWicRegisterFailed remember failed   * 00116200
*               ENFREQ ACTION=DELETE,CODE=ENFPC085,                 * * 00116300
*                     DTOKEN=MyWicEnfToken Stop listening to the ENF  * 00116400
*               J    WicRegDone                                       * 00116500
*      WicRegSuccess DS 0H                 Register succeeded         * 00116600
*               NI   MyWicEnfFlags,WicEnf_InstrumentationRequested  * * 00116700
*                                          Indicate to write        * * 00116800
*                                          instrumentation data       * 00116900
*      WicRegDone DS 0H                                               * 00117000
*      *                                                              * 00117100
*      * Place additional return/ reason code checking here           * 00117200
*      *                                                              * 00117300
*                                                                     * 00117400
*       ... other code here ...                                       * 00117500
*                                                                     * 00117600
*               TM   MyWicEnfFlags,WicEnf_InstrumentationRequested  * * 00117700
*                                          Instrumentation ok now?    * 00117800
*               JZ   InstrumentDone        No, do not instrument      * 00117900
*                                                                     * 00118000
*       ... code using the provided buffer here ...                   * 00118100
*                                                                     * 00118200
*      InstrumentDone DS 0H                After WIC instrumentation  * 00118300
*                                                                     * 00118400
*       ... other code here ...                                       * 00118500
*                                                                     * 00118600
*               TM   MyWicFlags,MyWicRegisterFailed WIC Reg fail?     * 00118700
*               JO   WicDeregDone          Skip dereg if reg failed   * 00118800
*               IFAWIC REQUEST=DEREGISTER,                          * * 00118900
*                     SUBTYPE=MySubtype    Deregister WIC subtype     * 00119000
*               ENFREQ ACTION=DELETE,CODE=ENFPC085,                 * * 00119100
*                     DTOKEN=MyWicEnfToken Stop listening to the ENF  * 00119200
*      *                                                              * 00119300
*      * Place code to check return/reason codes here                 * 00119400
*      *                                                              * 00119500
*      WicDeregDone DS 0H                                             * 00119600
*       ... other code here ...                                       * 00119700
*      WICENFXT DS 0H                      Entry to SRB               * 00119800
*               LARL 15,Wic_Fields         Load the working storage p * 00119900
*      tr                                                             * 00120000
*               USING Wic_Fields,15                                   * 00120100
*               L    1,0(1)                Load WicEnf Parmlist       * 00120200
*               USING WICENF,1                                        * 00120300
*               IC   0,WicEnf_Flags        Copy the WicEnf_Flags      * 00120400
*               STC  0,MyWicEnfFlags       Save in MyWicEnfFlags      * 00120500
*               BR   14                    Return from SRB            * 00120600
*                                                                     * 00120700
*       ... other code here ...                                       * 00120800
*      Wic_Fields DS 0D                                               * 00120900
*      MyBuffer@  DS D                                                * 00121000
*      MyExitRtn  DC CL8'WICEXIT '                                    * 00121100
*      MySubtype  DC F'24576'                                         * 00121200
*      MyExitVer  DC F'1'                                             * 00121300
*      MyBuf4kPg  DC F'4'                                             * 00121400
*      MyWicEnfToken DS F                                             * 00121500
*      MyWicEnfExit DC A(WICENFXT)                                    * 00121600
*      MyWicFlags DC X'00'                                            * 00121700
*      MyWicRegisterFailed EQU X'80'                                  * 00121800
*      MyWicEnfFlags DC X'00'                                         * 00121900
*                                                                     * 00122000
*                                                                     * 00122100
*       ... other code here ...                                       * 00122200
*                                                                     * 00122300
*                                                                     * 00122400
*                                                                     * 00122500
*01* MACRO USAGE NOTES:                                               * 00122600
*                                                                     * 00122700
*                                                                     * 00122800
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00122900
*        global macro variable.  Any value other than 'NO' will       * 00123000
*        result in the macro expansion being printed.  The default is * 00123100
*        'YES'.  The following examples illustrate how the ZPRINT     * 00123200
*        variable should be set.                                      * 00123300
*                                                                     * 00123400
*                    GBLC &ZPRINT                                     * 00123500
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00123600
*                                                                     * 00123700
*                                                                     * 00123800
*    2.  All  keys currently contained in the IFAWIC macro correspond * 00123900
*        to  version 0.  If you specify PLISTVER, use a value of 0 or * 00124000
*        MAX.                                                         * 00124100
*                                                                     * 00124200
*                                                                     * 00124300
*                                                                     * 00124400
*                                                                     * 00124500
*01* CHANGE ACTIVITY:                                                 * 00124600
*                                                                     * 00124700
*   Flag LineItem  FMID    Date   ID    Comment                       * 00124800
*                                                                     * 00124900
*    $00=OA57165  HBB77B0 200106 PD00NJ:  IFAWIC                      * 00125000
****** END OF SPECIFICATIONS *****************************************/ 00125100
*/********************************************************************* 00125200
         MACRO                                                          00125300
&XLABEL  IFAWIC &REQUEST=,&BUFFERKEY=,&BUFFER4KPAGES=,&BUFFERPTR=,     *00125400
               &EXITVERSION=,&EXITROUTINE=,&SUBTYPE=,&RETCODE=,        *00125500
               &RSNCODE=,&PLISTVER=,&MF=                                00125600
.*                                                                      00125700
*                   MACDATE -08/04/20-<0>                               00125800
.*                                                                      00125900
.*******************************************************************    00126000
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00126100
.*******************************************************************    00126200
                   GBLC  &ZPRINT     YES=PRINT NO=NO PRINT              00126300
                   GBLC  &ZTEST      YES=TEST NO=NO TEST                00126400
                   GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX        00126500
.*                                                                      00126600
                   GBLC  &ZIFAWIC    YES=MACRO USED AT LEAST ONCE       00126700
.*******************************************************************    00126800
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00126900
.*******************************************************************    00127000
                   LCLC  &ZMS        ERROR MESSAGE WORK AREA            00127100
                   LCLC  &ZCNDX      SYSNDX CHARACTERS                  00127200
                   LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED         00127300
                   LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR        00127400
                   LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE        00127500
                   LCLA  &ZAWRK      USED AS A WORK AREA                00127600
                   LCLA  &ZASIZ      USED FOR SIZE OF VALUE             00127700
                   LCLA  &ZN         NUMERIC WORK VARIABLE              00127800
                   LCLC  &ZC         CHARACTER WORK VARIABLE            00127900
                   LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE        00128000
                   LCLA  &ZTLA       VALUE TOO LONG VARIABLE            00128100
                   LCLC  &ZMAC_G     "G" or null                        00128200
&ZMAC_G            SETC  ''                                             00128300
                   LCLC  &ZMAC_LR                                       00128400
&ZMAC_LR           SETC  'LR'                                           00128500
                   LCLC  &ZMAC_L                                        00128600
&ZMAC_L            SETC  'L'                                            00128700
                   LCLC  &ZMAC_ST                                       00128800
&ZMAC_ST           SETC  'ST'                                           00128900
                   LCLC  &ZMAC_LLGT                                     00129000
&ZMAC_LLGT         SETC  'L'                                            00129100
                   LCLC  &ZMAC_LGR                                      00129200
&ZMAC_LGR          SETC  'LR'                                           00129300
                   LCLC  &ZMAC_LG                                       00129400
&ZMAC_LG           SETC  'L'                                            00129500
                   LCLC  &ZMAC_STG                                      00129600
&ZMAC_STG          SETC  'ST'                                           00129700
                   LCLA  &ZMACRET    MACRO RETURN CODE                  00129800
&ZMACRET           SETA  0           ASSUME NO ERRORS                   00129900
.*                                                                      00130000
                   LCLC  &ZCSYSLIST(255)        NONXKEY, POS ARRAY      00130100
                   LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()         00130200
                   LCLA  &ZPLLEN     PARAMETER LIST LENGTH              00130300
                   LCLC  &ZENDBASEPL            End of base PL          00130400
                   LCLA  &ZPLWORKA   PARAMETER LIST LENGTH              00130500
.*******************************************************************    00130600
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00130700
.*******************************************************************    00130800
                   LCLA  &ZI         INDEX FOR ARRAY                    00130900
                   LCLA  &ZJ         INDEX FOR PARMS                    00131000
                   LCLA  &ZK         INDEX FOR PARSE                    00131100
                   LCLA  &ZLO        LOW RANGE VALUE                    00131200
                   LCLA  &ZHI        HIGH RANGE VALUE                   00131300
                   LCLC  &ZW         WORK AREA FOR PARM                 00131400
.********************************************************************   00131500
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00131600
.********************************************************************   00131700
                   GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL            00131800
                   GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE     00131900
                   GBLA  &SYSALVL    SYSSTATE ARCHLVL                   00132000
                   GBLC  &SYSAM64    SYSSTATE AMODE64                   00132100
.*                                                                      00132200
                   AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED     00132300
                   AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED      00132400
                   SPLEVEL  TEST                                        00132500
.ZSYS2             ANOP  ,                                              00132600
                   AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1          00132700
                   AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1          00132800
                   SYSSTATE TEST                                        00132900
                   AGO   .ZSYS4                                         00133000
.ZSYS3             ANOP  ,                                              00133100
&SYSASCE           SETC  'P'         ASSUME SYSSTATE PRIMARY            00133200
.ZSYS4             ANOP  ,                                              00133300
                   AIF   ('&SYSAM64' NE 'YES').ZSYSN64                  00133400
&ZMAC_LLGT         SETC 'LLGT'                                          00133500
&ZMAC_LGR          SETC 'LGR'                                           00133600
&ZMAC_LG           SETC 'LG'                                            00133700
&ZMAC_STG          SETC 'STG'                                           00133800
.ZSYSN64           ANOP  ,                                              00133900
&ZMAC_G            SETC 'G'                                             00134000
&ZMAC_LR           SETC 'LGR'                                           00134100
&ZMAC_L            SETC 'LG'                                            00134200
&ZMAC_ST           SETC 'STG'                                           00134300
.*******************************************************************    00134400
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00134500
.*******************************************************************    00134600
                   LCLC  &XREQUEST   ++ VALUE                           00134700
                   LCLC  &XBUFFERKEY            ++ VALUE                00134800
                   LCLC  &XBUFFER4KPAGES        ++ NAME                 00134900
                   LCLC  &XBUFFERPTR            ++ NAME                 00135000
                   LCLC  &XEXITVERSION          ++ NAME                 00135100
                   LCLC  &XEXITROUTINE          ++ NAME                 00135200
                   LCLC  &XSUBTYPE   ++ NAME                            00135300
                   LCLC  &XRETCODE   ++ NAME                            00135400
                   LCLC  &XRSNCODE   ++ NAME                            00135500
                   LCLA  &XPLISTVER  ++ VALUE                           00135600
                   LCLC  &XMF        ++ VALUE                           00135700
                   LCLC  &XMFCTRL    ++ NAME                            00135800
                   LCLC  &XMFATTR    ++ VALUE                           00135900
                   LCLC  &XMFSCK     ++ VALUE                           00136000
.*******************************************************************    00136100
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00136200
.*******************************************************************    00136300
                   LCLC  &ZXREQUEST  ++ INPUT VALUE                     00136400
                   LCLC  &ZXBUFFERKEY           ++ INPUT VALUE          00136500
                   LCLC  &ZXBUFFER4KPAGES       ++ INPUT NAME           00136600
                   LCLC  &ZXBUFFERPTR           ++ OUTPUT NAME          00136700
                   LCLC  &ZXEXITVERSION         ++ INPUT NAME           00136800
                   LCLC  &ZXEXITROUTINE         ++ INPUT NAME           00136900
                   LCLC  &ZXSUBTYPE  ++ INPUT NAME                      00137000
                   LCLC  &ZXRETCODE  ++ OUTPUT NAME                     00137100
                   LCLC  &ZXRSNCODE  ++ OUTPUT NAME                     00137200
                   LCLC  &ZXPLISTVER            ++ INPUT VALUE          00137300
                   LCLC  &ZXMF       ++ INPUT VALUE                     00137400
                   LCLC  &ZXMFCTRL   ++ INPUT NAME                      00137500
                   LCLC  &ZXMFATTR   ++ INPUT VALUE                     00137600
                   LCLC  &ZXMFSCK    ++ INPUT VALUE                     00137700
.********************************************************************   00137800
.***AC.PLV01  PROCESS PLISTVER                                      *   00137900
.********************************************************************   00138000
&XPLISTVER      SETA  0                                                 00138100
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00138200
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00138300
&XPLISTVER      SETA  0                                                 00138400
.ZPLV0          ANOP  ,                                                 00138500
.*                                                                      00138600
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00138700
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00138800
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00138900
.*-------------------------------------------------------------------   00139000
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00139100
&ZMS            SETC  '"PLISTVER='                                      00139200
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00139300
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00139400
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00139500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00139600
                AGO   .ZPVCK2                                           00139700
.ZPVCK3         ANOP  ,                                                 00139800
.*-------------------------------------------------------------------   00139900
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00140000
&ZMS            SETC  '"PLISTVER='                                      00140100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00140200
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00140300
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00140400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00140500
                AGO   .ZPVCKE                                           00140600
.ZPVCK2         ANOP  ,                                                 00140700
.*-------------------------------------------------------------------   00140800
&ZCVAL          SETC  '&PLISTVER(1)'                                    00140900
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00141000
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00141100
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00141200
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00141300
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00141400
.ZPVCK6         ANOP  ,                                                 00141500
&ZMS            SETC  '"PLISTVER='                                      00141600
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00141700
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00141800
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00141900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00142000
&XPLISTVER      SETA  0                                                 00142100
                AGO   .ZPVCKE                                           00142200
.*-------------------------------------------------------------------   00142300
.ZPVCK4A        ANOP  ,                                                 00142400
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00142500
&ZMS            SETC  'PLISTVER='                                       00142600
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00142700
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00142800
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00142900
                MNOTE 8,' &ZMS IS REQUIRED.'                            00143000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00143100
                AGO   .ZPVCK5                                           00143200
.ZPVCK4         ANOP  ,                                                 00143300
&XPLISTVER      SETA  &PLISTVER(1)                                      00143400
.ZPVCK5         ANOP  ,                                                 00143500
.ZPVCKE         ANOP  ,                                                 00143600
.********************************************************************   00143700
.***AG.MF01 PROCESS MF MACRO FORMS                                      00143800
.********************************************************************   00143900
                   ACTR  10000                                          00144000
.*------------------------------------------------------------------    00144100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00144200
&XMF               SETC  ''          INITIALIZE XVARIABLE               00144300
.*-------------------------------------------------------------------   00144400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00144500
.ZG37              ANOP  ,                                              00144600
&ZTLC              SETC 'S'                                             00144700
                   AIF   ('&MF(1)' NE '&ZTLC').ZG38                     00144800
&XMF               SETC  'S'         SET KEYWORD                        00144900
                   AIF   (N'&MF LE 1).ZG37A     CK NUM                  00145000
&ZMS               SETC  '"MF='                                         00145100
&ZMS               SETC  '&ZMS.&MF"'                                    00145200
&ZMS               SETC  '&ZMS "MF"'                                    00145300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00145400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00145500
.ZG37A             ANOP  ,                                              00145600
.*-------------------------------------------------------------------   00145700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00145800
.ZG38              ANOP  ,                                              00145900
&ZTLC              SETC 'L'                                             00146000
                   AIF   ('&MF(1)' NE '&ZTLC').ZG45                     00146100
&XMF               SETC  'L'         SET KEYWORD                        00146200
                   AIF   (N'&MF LE 3).ZG38A     CK NUM                  00146300
&ZMS               SETC  '"MF='                                         00146400
&ZMS               SETC  '&ZMS.&MF"'                                    00146500
&ZMS               SETC  '&ZMS "MF"'                                    00146600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'           00146700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00146800
.ZG38A             ANOP  ,                                              00146900
.*-------------------------------------------------------------------   00147000
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00147100
                   AIF   (N'&SYSLIST NE 0).ZG38B  POSITIONALS?          00147200
                   AIF   ('&REQUEST' NE '').ZG38B  KEYS?                00147300
                   AIF   ('&BUFFERKEY' NE '').ZG38B  KEYS?              00147400
                   AIF   ('&BUFFER4KPAGES' NE '').ZG38B  KEYS?          00147500
                   AIF   ('&BUFFERPTR' NE '').ZG38B  KEYS?              00147600
                   AIF   ('&EXITVERSION' NE '').ZG38B  KEYS?            00147700
                   AIF   ('&EXITROUTINE' NE '').ZG38B  KEYS?            00147800
                   AIF   ('&SUBTYPE' NE '').ZG38B  KEYS?                00147900
                   AIF   ('&RETCODE' NE '').ZG38B  KEYS?                00148000
                   AIF   ('&RSNCODE' NE '').ZG38B  KEYS?                00148100
                   AGO    .ZG38C     INVOCATION OKAY                    00148200
.ZG38B             ANOP  ,                                              00148300
&ZMS               SETC  'THE "L" FORM OF "MF"'                         00148400
&ZMS               SETC  '&ZMS CAN ONLY HAVE'                           00148500
&ZMS               SETC  '&ZMS THE "PLISTVER" KEY'                      00148600
                   MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'         00148700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00148800
.ZG38C             ANOP  ,                                              00148900
.*-------------------------------------------------------------------   00149000
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00149100
&ZXMFCTRL          SETC  'INPUT'     SET IN/OUTPUT                      00149200
&XMFCTRL           SETC  '&MF(2,1)'  SET XVARIABLE                      00149300
                   AIF   (N'&MF(2) GT 1).ZG40B  MULTI                   00149400
&XMFCTRL           SETC  '&MF(2)'    SET XVARIABLE                      00149500
.ZG40B             AIF   (K'&MF(2) GT 0).ZG40C                          00149600
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    00149700
&ZMS               SETC  'WHEN "L" IS SPECIFIED'                        00149800
&ZMS               SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'            00149900
                   MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                   00150000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00150100
.ZG40C             ANOP  ,                                              00150200
.*-------------------------------------------------------------------   00150300
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00150400
                   AIF   (K'&ZXMFCTRL LE 0).ZG40P  NOT I/O              00150500
                   AIF   ('&XMFCTRL'(1,1) NE '(').ZG40P                 00150600
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    00150700
&ZMS               SETC  '"MF='                                         00150800
&ZMS               SETC  '&ZMS.&MF"'                                    00150900
&ZMS               SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'      00151000
                   MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'              00151100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00151200
.ZG40P             ANOP  ,                                              00151300
.*-------------------------------------------------------------------   00151400
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00151500
&ZXMFATTR          SETC  'INPUT'     SET IN/OUTPUT                      00151600
&XMFATTR           SETC  '0D'                                           00151700
                   AIF   (K'&MF(3) LE 0).ZG43B  PARM                    00151800
&XMFATTR           SETC  '&MF(3,1)'  SET XVARIABLE                      00151900
                   AIF   (N'&MF(3) GT 1).ZG43B  MULTI                   00152000
&XMFATTR           SETC  '&MF(3)'    SET XVARIABLE                      00152100
.ZG43B             ANOP  ,                                              00152200
.*-------------------------------------------------------------------   00152300
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00152400
                   AIF   (K'&ZXMFATTR LE 0).ZG43P  NOT I/O              00152500
                   AIF   ('&XMFATTR'(1,1) NE '(').ZG43P                 00152600
&ZXMFATTR          SETC  ''          RESET IN/OUTPUT                    00152700
&ZMS               SETC  '"MF='                                         00152800
&ZMS               SETC  '&ZMS.&MF"'                                    00152900
&ZMS               SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'      00153000
                   MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'              00153100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00153200
.ZG43P             ANOP  ,                                              00153300
.*-------------------------------------------------------------------   00153400
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00153500
                   AIF   (K'&ZXMFATTR LE 0).ZG43S  NOT I/O              00153600
                   AIF   (K'&XMFATTR LE 60).ZG43S  LNG OK               00153700
&ZXMFATTR          SETC  ''          RESET IN/OUTPUT                    00153800
&ZMS               SETC  '"MF='                                         00153900
&ZMS               SETC  '&ZMS.&MF"'                                    00154000
&ZMS               SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'          00154100
                   MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'             00154200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00154300
.ZG43S             ANOP  ,                                              00154400
.*-------------------------------------------------------------------   00154500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00154600
.ZG45              ANOP  ,                                              00154700
&ZTLC              SETC 'E'                                             00154800
                   AIF   ('&MF(1)' NE '&ZTLC').ZG53                     00154900
&XMF               SETC  'E'         SET KEYWORD                        00155000
                   AIF   (N'&MF LE 3).ZG45A     CK NUM                  00155100
&ZMS               SETC  '"MF='                                         00155200
&ZMS               SETC  '&ZMS.&MF"'                                    00155300
&ZMS               SETC  '&ZMS "MF"'                                    00155400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'           00155500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00155600
.ZG45A             ANOP  ,                                              00155700
.*-------------------------------------------------------------------   00155800
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00155900
&ZXMFCTRL          SETC  'INPUT'     SET IN/OUTPUT                      00156000
&XMFCTRL           SETC  '&MF(2,1)'  SET XVARIABLE                      00156100
                   AIF   (N'&MF(2) GT 1).ZG47B  MULTI                   00156200
&XMFCTRL           SETC  '&MF(2)'    SET XVARIABLE                      00156300
.ZG47B             AIF   (K'&MF(2) GT 0).ZG47C                          00156400
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    00156500
&ZMS               SETC  'WHEN "E" IS SPECIFIED'                        00156600
&ZMS               SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'            00156700
                   MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                   00156800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00156900
.ZG47C             ANOP  ,                                              00157000
.*-------------------------------------------------------------------   00157100
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00157200
                   AIF   (K'&ZXMFCTRL LE 0).ZG47R  NOT I/O              00157300
                   AIF   ('&XMFCTRL'(1,1) NE '(').ZG47R                 00157400
&ZCGPR             SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                     00157500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG47P                   00157600
                   AIF   (K'&ZCGPR GT 2).ZG47Q                          00157700
                   AIF   ('&ZCGPR' EQ '0').ZG47Q                        00157800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00157900
                   AIF   (T'&ZCGPR NE 'N').ZG47Q  INVALID REG NAME      00158000
.ZG47P             ANOP  ,                                              00158100
                   AIF   (T'&ZCGPR NE 'N').ZG47R  NON NUMERIC           00158200
                   AIF   ('&ZCGPR' LT '1').ZG47Q                        00158300
                   AIF   ('&ZCGPR' LE '12').ZG47R                       00158400
.ZG47Q             ANOP  ,                                              00158500
&ZMS               SETC  '"MF='                                         00158600
&ZMS               SETC  '&ZMS.&MF"'                                    00158700
&ZMS               SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'      00158800
                   MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'               00158900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00159000
.ZG47R             ANOP  ,                                              00159100
.*-------------------------------------------------------------------   00159200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00159300
&XMFSCK            SETC  ''          INITIALIZE XVARIABLE               00159400
.ZG51A   AIF   ('&MF(3)' NE 'COMPLETE').ZG52A                           00159500
&XMFSCK            SETC  'COMPLETE'  SET KEYWORD                        00159600
.*-------------------------------------------------------------------   00159700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00159800
.ZG52A             AIF   (K'&XMFSCK GT 0).ZG52C  KEYWORD                00159900
                   AIF   (K'&MF(3) LE 0).ZG52B                          00160000
&ZMS               SETC  '"MF='                                         00160100
&ZMS               SETC  '&ZMS.&MF"'                                    00160200
&ZMS               SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '      00160300
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00160400
&ZMS               SETC  '&ZMS "COMPLETE".'                             00160500
                   MNOTE 8,' &ZMS '                                     00160600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00160700
.ZG52B             ANOP  ,                                              00160800
&XMFSCK            SETC  'COMPLETE'  SET DEFAULT KEYWORD                00160900
.ZG52C             ANOP  ,                                              00161000
&ZXMFSCK           SETC  'INPUT'     SET IN/OUTPUT                      00161100
.*------------------------------------------------------------------    00161200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00161300
.ZG53              ANOP  ,                                              00161400
&ZXMF              SETC  'INPUT'     SET IN/OUTPUT                      00161500
                   AIF   (K'&XMF GT 0).ZG53E    VALID ARG               00161600
                   AIF   (T'&MF EQ 'O').ZG53D   OMITTED                 00161700
&ZASYSLNDX         SETA  0                                              00161800
.ZG53A             ANOP  ,           POSITIONAL MACRO KEY               00161900
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00162000
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG53C               00162100
&ZTLC              SETC 'MF'                                            00162200
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG53A      00162300
.ZG53B             ANOP  ,                                              00162400
&ZXMF              SETC  ''          RESET IN/OUTPUT                    00162500
&ZMS               SETC  'THE "MF" KEY'                                 00162600
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00162700
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00162800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00162900
                   AGO   .ZG53E                                         00163000
.ZG53C             ANOP  ,                                              00163100
&ZXMF              SETC  ''          RESET IN/OUTPUT                    00163200
&ZMS               SETC  '"MF='                                         00163300
&ZMS               SETC  '&ZMS.&MF"'                                    00163400
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00163500
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00163600
&ZMS               SETC  '&ZMS "S",'                                    00163700
&ZMS               SETC  '&ZMS "L",'                                    00163800
&ZMS               SETC  '&ZMS OR "E".'                                 00163900
                   MNOTE 8,' &ZMS '                                     00164000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00164100
                   AGO   .ZG53E                                         00164200
.ZG53D             ANOP  ,                                              00164300
&XMF               SETC  'S'         SET DEFAULT KEYWORD                00164400
&XMFSCK            SETC  'COMPLETE'  COMPLETE CHECKING                  00164500
.ZG53E             ANOP  ,                                              00164600
.********************************************************************   00164700
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00164800
.********************************************************************   00164900
                   ACTR  10000                                          00165000
.*-------------------------------------------------------------------   00165100
.***AG.MF03 MF=(SLE)                                                    00165200
                   AIF   ('&XMF' EQ 'L').ZGMFX                          00165300
.*------------------------------------------------------------------    00165400
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00165500
&XREQUEST          SETC  ''          INITIALIZE XVARIABLE               00165600
.*-------------------------------------------------------------------   00165700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00165800
.ZG3               ANOP  ,                                              00165900
                   AIF   (K'&REQUEST(1) LE 0).ZG3A                      00166000
&ZTLC              SETC 'REGISTER'                                      00166100
                   AIF   ('&REQUEST(1)' NE '&ZTLC').ZG21                00166200
&XREQUEST          SETC  'REGISTER'  SET KEYWORD                        00166300
                   AIF   (N'&REQUEST LE 1).ZG3A  CK NUM                 00166400
&ZMS               SETC  '"REQUEST='                                    00166500
&ZMS               SETC  '&ZMS.&REQUEST"'                               00166600
&ZMS               SETC  '&ZMS "REQUEST"'                               00166700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00166800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00166900
.ZG3A              ANOP  ,                                              00167000
.*------------------------------------------------------------------    00167100
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00167200
&XBUFFERKEY        SETC  ''          INITIALIZE XVARIABLE               00167300
.*-------------------------------------------------------------------   00167400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00167500
.ZG6               ANOP  ,                                              00167600
                   AIF   (K'&BUFFERKEY(1) LE 0).ZG6A                    00167700
&ZTLC              SETC '8'                                             00167800
                   AIF   ('&BUFFERKEY(1)' NE '&ZTLC').ZG7               00167900
&XBUFFERKEY        SETC  '8'         SET KEYWORD                        00168000
                   AIF   (N'&BUFFERKEY LE 1).ZG6A  CK NUM               00168100
&ZMS               SETC  '"BUFFERKEY='                                  00168200
&ZMS               SETC  '&ZMS.&BUFFERKEY"'                             00168300
&ZMS               SETC  '&ZMS "BUFFERKEY"'                             00168400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00168500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00168600
.ZG6A              ANOP  ,                                              00168700
.*-------------------------------------------------------------------   00168800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00168900
.ZG7               ANOP  ,                                              00169000
&ZTLC              SETC '0'                                             00169100
                   AIF   ('&BUFFERKEY(1)' NE '&ZTLC').ZG8               00169200
&XBUFFERKEY        SETC  '0'         SET KEYWORD                        00169300
                   AIF   (N'&BUFFERKEY LE 1).ZG7A  CK NUM               00169400
&ZMS               SETC  '"BUFFERKEY='                                  00169500
&ZMS               SETC  '&ZMS.&BUFFERKEY"'                             00169600
&ZMS               SETC  '&ZMS "BUFFERKEY"'                             00169700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00169800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00169900
.ZG7A              ANOP  ,                                              00170000
.*------------------------------------------------------------------    00170100
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00170200
.ZG8               ANOP  ,                                              00170300
&ZXBUFFERKEY       SETC  'INPUT'     SET IN/OUTPUT                      00170400
                   AIF   (K'&XBUFFERKEY GT 0).ZG8E  VALID ARG           00170500
                   AIF   (T'&BUFFERKEY EQ 'O').ZG8D  OMITTED            00170600
&ZASYSLNDX         SETA  0                                              00170700
.ZG8A              ANOP  ,           POSITIONAL MACRO KEY               00170800
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00170900
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG8C                00171000
&ZTLC              SETC 'BUFFERKEY'                                     00171100
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG8A       00171200
.ZG8B              ANOP  ,                                              00171300
&ZXBUFFERKEY       SETC  ''          RESET IN/OUTPUT                    00171400
&ZMS               SETC  'THE "BUFFERKEY" KEY'                          00171500
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00171600
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00171700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00171800
                   AGO   .ZG8E                                          00171900
.ZG8C              ANOP  ,                                              00172000
&ZXBUFFERKEY       SETC  ''          RESET IN/OUTPUT                    00172100
&ZMS               SETC  '"BUFFERKEY='                                  00172200
&ZMS               SETC  '&ZMS.&BUFFERKEY"'                             00172300
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00172400
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00172500
&ZMS               SETC  '&ZMS "8"'                                     00172600
&ZMS               SETC  '&ZMS OR "0".'                                 00172700
                   MNOTE 8,' &ZMS '                                     00172800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00172900
                   AGO   .ZG8E                                          00173000
.ZG8D              ANOP  ,                                              00173100
&XBUFFERKEY        SETC  '8'         SET DEFAULT KEYWORD                00173200
.ZG8E              ANOP  ,                                              00173300
.*------------------------------------------------------------------    00173400
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00173500
                   AIF   (K'&BUFFERKEY(1) GT 0).ZG8F  PARM              00173600
&XBUFFERKEY        SETC  ''          ENSURE NULL KEYWORD                00173700
&ZXBUFFERKEY       SETC  ''          RESET IN/OUTPUT                    00173800
&ZMS               SETC  'THE'                                          00173900
&ZMS               SETC  '&ZMS "BUFFERKEY" KEY AND ITS'                 00174000
&ZMS               SETC  '&ZMS ARGUMENT ARE REQUIRED.'                  00174100
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00174200
&ZMS               SETC  '&ZMS "8"'                                     00174300
&ZMS               SETC  '&ZMS OR "0".'                                 00174400
                   MNOTE 8,' &ZMS '                                     00174500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00174600
.ZG8F              ANOP  ,                                              00174700
.*----------------------------------------------------------------***   00174800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00174900
                   AIF   (N'&BUFFER4KPAGES LE 1).ZG10A  CK NUM          00175000
&ZMS               SETC  '"BUFFER4KPAGES='                              00175100
&ZMS               SETC  '&ZMS.&BUFFER4KPAGES"'                         00175200
&ZMS               SETC  '&ZMS "BUFFER4KPAGES"'                         00175300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00175400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00175500
.ZG10A             ANOP  ,                                              00175600
.*-------------------------------------------------------------------   00175700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00175800
&ZXBUFFER4KPAGES   SETC  'INPUT'     SET IN/OUTPUT                      00175900
&XBUFFER4KPAGES    SETC  '&BUFFER4KPAGES(1)'    SET XVARIABLE           00176000
                   AIF   (N'&BUFFER4KPAGES GT 1).ZG10B  MULTI           00176100
&XBUFFER4KPAGES    SETC  '&BUFFER4KPAGES'       SET XVARIABLE           00176200
.ZG10B             AIF   (K'&BUFFER4KPAGES(1) GT 0).ZG10C               00176300
&ZXBUFFER4KPAGES   SETC  ''          RESET IN/OUTPUT                    00176400
&ZMS               SETC  ' '                                            00176500
&ZMS               SETC  '&ZMS "BUFFER4KPAGES" KEY AND ITS'             00176600
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00176700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00176800
.ZG10C             ANOP  ,                                              00176900
.*-------------------------------------------------------------------   00177000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00177100
                   AIF   (K'&ZXBUFFER4KPAGES LE 0).ZG10R  NOT I/O       00177200
                   AIF   ('&XBUFFER4KPAGES'(1,1) NE '(').ZG10R          00177300
&ZCGPR             SETC  '&XBUFFER4KPAGES'(2,K'&XBUFFER4KPAGES-2)       00177400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG10P                   00177500
                   AIF   (K'&ZCGPR GT 2).ZG10Q                          00177600
                   AIF   ('&ZCGPR' EQ '0').ZG10Q                        00177700
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00177800
                   AIF   (T'&ZCGPR NE 'N').ZG10Q  INVALID REG NAME      00177900
.ZG10P             ANOP  ,                                              00178000
                   AIF   (T'&ZCGPR NE 'N').ZG10R  NON NUMERIC           00178100
                   AIF   ('&ZCGPR' LT '2').ZG10Q                        00178200
                   AIF   ('&ZCGPR' LE '12').ZG10R                       00178300
.ZG10Q             ANOP  ,                                              00178400
&ZMS               SETC  '"BUFFER4KPAGES='                              00178500
&ZMS               SETC  '&ZMS.&BUFFER4KPAGES"'                         00178600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00178700
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00178800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00178900
.ZG10R             ANOP  ,                                              00179000
.*----------------------------------------------------------------***   00179100
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00179200
                   AIF   (N'&BUFFERPTR LE 1).ZG13A  CK NUM              00179300
&ZMS               SETC  '"BUFFERPTR='                                  00179400
&ZMS               SETC  '&ZMS.&BUFFERPTR"'                             00179500
&ZMS               SETC  '&ZMS "BUFFERPTR"'                             00179600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00179700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00179800
.ZG13A             ANOP  ,                                              00179900
.*-------------------------------------------------------------------   00180000
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00180100
&ZXBUFFERPTR       SETC  'OUTPUT'    SET IN/OUTPUT                      00180200
&XBUFFERPTR        SETC  '&BUFFERPTR(1)'        SET XVARIABLE           00180300
                   AIF   (N'&BUFFERPTR GT 1).ZG13B  MULTI               00180400
&XBUFFERPTR        SETC  '&BUFFERPTR'           SET XVARIABLE           00180500
.ZG13B             AIF   (K'&BUFFERPTR(1) GT 0).ZG13C                   00180600
&ZXBUFFERPTR       SETC  ''          RESET IN/OUTPUT                    00180700
&ZMS               SETC  ' '                                            00180800
&ZMS               SETC  '&ZMS "BUFFERPTR" KEY AND ITS'                 00180900
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00181000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00181100
.ZG13C             ANOP  ,                                              00181200
.*-------------------------------------------------------------------   00181300
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00181400
                   AIF   (K'&ZXBUFFERPTR LE 0).ZG13R  NOT I/O           00181500
                   AIF   ('&XBUFFERPTR'(1,1) NE '(').ZG13R              00181600
&ZCGPR             SETC  '&XBUFFERPTR'(2,K'&XBUFFERPTR-2)               00181700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG13P                   00181800
                   AIF   (K'&ZCGPR GT 2).ZG13Q                          00181900
                   AIF   ('&ZCGPR' EQ '0').ZG13Q                        00182000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00182100
                   AIF   (T'&ZCGPR NE 'N').ZG13Q  INVALID REG NAME      00182200
.ZG13P             ANOP  ,                                              00182300
                   AIF   (T'&ZCGPR NE 'N').ZG13R  NON NUMERIC           00182400
                   AIF   ('&ZCGPR' LT '2').ZG13Q                        00182500
                   AIF   ('&ZCGPR' LE '12').ZG13R                       00182600
.ZG13Q             ANOP  ,                                              00182700
&ZMS               SETC  '"BUFFERPTR='                                  00182800
&ZMS               SETC  '&ZMS.&BUFFERPTR"'                             00182900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00183000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00183100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00183200
.ZG13R             ANOP  ,                                              00183300
.*----------------------------------------------------------------***   00183400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00183500
                   AIF   (N'&EXITVERSION LE 1).ZG16A  CK NUM            00183600
&ZMS               SETC  '"EXITVERSION='                                00183700
&ZMS               SETC  '&ZMS.&EXITVERSION"'                           00183800
&ZMS               SETC  '&ZMS "EXITVERSION"'                           00183900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00184000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00184100
.ZG16A             ANOP  ,                                              00184200
.*-------------------------------------------------------------------   00184300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00184400
&ZXEXITVERSION     SETC  'INPUT'     SET IN/OUTPUT                      00184500
&XEXITVERSION      SETC  'NO_EXITVERSION'                               00184600
                   AIF   (K'&EXITVERSION(1) LE 0).ZG16B  PARM           00184700
&XEXITVERSION      SETC  '&EXITVERSION(1)'      SET XVARIABLE           00184800
                   AIF   (N'&EXITVERSION GT 1).ZG16B  MULTI             00184900
&XEXITVERSION      SETC  '&EXITVERSION'         SET XVARIABLE           00185000
.ZG16B             ANOP  ,                                              00185100
.*-------------------------------------------------------------------   00185200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00185300
                   AIF   (K'&ZXEXITVERSION LE 0).ZG16R  NOT I/O         00185400
         AIF   ('&XEXITVERSION' EQ 'NO_EXITVERSION').ZG16R              00185500
                   AIF   ('&XEXITVERSION'(1,1) NE '(').ZG16R            00185600
&ZCGPR             SETC  '&XEXITVERSION'(2,K'&XEXITVERSION-2)           00185700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG16P                   00185800
                   AIF   (K'&ZCGPR GT 2).ZG16Q                          00185900
                   AIF   ('&ZCGPR' EQ '0').ZG16Q                        00186000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00186100
                   AIF   (T'&ZCGPR NE 'N').ZG16Q  INVALID REG NAME      00186200
.ZG16P             ANOP  ,                                              00186300
                   AIF   (T'&ZCGPR NE 'N').ZG16R  NON NUMERIC           00186400
                   AIF   ('&ZCGPR' LT '2').ZG16Q                        00186500
                   AIF   ('&ZCGPR' LE '12').ZG16R                       00186600
.ZG16Q             ANOP  ,                                              00186700
&ZMS               SETC  '"EXITVERSION='                                00186800
&ZMS               SETC  '&ZMS.&EXITVERSION"'                           00186900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00187000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00187100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00187200
.ZG16R             ANOP  ,                                              00187300
.*----------------------------------------------------------------***   00187400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00187500
                   AIF   (N'&EXITROUTINE LE 1).ZG18A  CK NUM            00187600
&ZMS               SETC  '"EXITROUTINE='                                00187700
&ZMS               SETC  '&ZMS.&EXITROUTINE"'                           00187800
&ZMS               SETC  '&ZMS "EXITROUTINE"'                           00187900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00188000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00188100
.ZG18A             ANOP  ,                                              00188200
.*-------------------------------------------------------------------   00188300
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00188400
&ZXEXITROUTINE     SETC  'INPUT'     SET IN/OUTPUT                      00188500
&XEXITROUTINE      SETC  '&EXITROUTINE(1)'      SET XVARIABLE           00188600
                   AIF   (N'&EXITROUTINE GT 1).ZG18B  MULTI             00188700
&XEXITROUTINE      SETC  '&EXITROUTINE'         SET XVARIABLE           00188800
.ZG18B             AIF   (K'&EXITVERSION(1) GT 0).ZG18C  KEY            00188900
                   AIF   (K'&EXITROUTINE(1) LE 0).ZG18D  PARM           00189000
&ZMS               SETC  '"EXITROUTINE'                                 00189100
&ZMS               SETC  '&ZMS.=&EXITROUTINE"'                          00189200
&ZMS               SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                00189300
&ZMS               SETC  '&ZMS '                                        00189400
&ZMS               SETC  '&ZMS "EXITVERSION"'                           00189500
                   MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                   00189600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00189700
                   AGO   .ZG18E                                         00189800
.*                                                                      00189900
.ZG18C             AIF   (K'&EXITROUTINE(1) GT 0).ZG18E  PARM           00190000
&ZXEXITROUTINE     SETC  ''          RESET IN/OUTPUT                    00190100
&ZMS               SETC  'WHEN "EXITVERSION" IS SPECIFIED'              00190200
&ZMS               SETC  '&ZMS , "EXITROUTINE" KEY AND ITS'             00190300
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00190400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00190500
.ZG18D             ANOP  ,                                              00190600
&XEXITROUTINE      SETC  '0'         SET DEFAULT                        00190700
.ZG18E             ANOP  ,                                              00190800
.*-------------------------------------------------------------------   00190900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00191000
                   AIF   (K'&ZXEXITROUTINE LE 0).ZG18R  NOT I/O         00191100
                   AIF   ('&XEXITROUTINE'(1,1) NE '(').ZG18R            00191200
&ZCGPR             SETC  '&XEXITROUTINE'(2,K'&XEXITROUTINE-2)           00191300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG18P                   00191400
                   AIF   (K'&ZCGPR GT 2).ZG18Q                          00191500
                   AIF   ('&ZCGPR' EQ '0').ZG18Q                        00191600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00191700
                   AIF   (T'&ZCGPR NE 'N').ZG18Q  INVALID REG NAME      00191800
.ZG18P             ANOP  ,                                              00191900
                   AIF   (T'&ZCGPR NE 'N').ZG18R  NON NUMERIC           00192000
                   AIF   ('&ZCGPR' LT '2').ZG18Q                        00192100
                   AIF   ('&ZCGPR' LE '12').ZG18R                       00192200
.ZG18Q             ANOP  ,                                              00192300
&ZMS               SETC  '"EXITROUTINE='                                00192400
&ZMS               SETC  '&ZMS.&EXITROUTINE"'                           00192500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00192600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00192700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00192800
.ZG18R             ANOP  ,                                              00192900
.*-------------------------------------------------------------------   00193000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00193100
.ZG21              ANOP  ,                                              00193200
&ZTLC              SETC 'DEREGISTER'                                    00193300
                   AIF   ('&REQUEST(1)' NE '&ZTLC').ZG22                00193400
&XREQUEST          SETC  'DEREGISTER'           SET KEYWORD             00193500
                   AIF   (N'&REQUEST LE 1).ZG21A  CK NUM                00193600
&ZMS               SETC  '"REQUEST='                                    00193700
&ZMS               SETC  '&ZMS.&REQUEST"'                               00193800
&ZMS               SETC  '&ZMS "REQUEST"'                               00193900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00194000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00194100
.ZG21A             ANOP  ,                                              00194200
.*------------------------------------------------------------------    00194300
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00194400
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00194500
.ZG21A0            AIF   (K'&BUFFERKEY LE 0).ZG21A1  OK                 00194600
&ZCVAL             SETC '&ZCVAL BUFFERKEY'      INCORRECT KEY USED      00194700
.ZG21A1            AIF   (K'&BUFFER4KPAGES LE 0).ZG21A2  OK             00194800
&ZCVAL             SETC '&ZCVAL BUFFER4KPAGES'  INCORRECT KEY USED      00194900
.ZG21A2            AIF   (K'&BUFFERPTR LE 0).ZG21A3  OK                 00195000
&ZCVAL             SETC '&ZCVAL BUFFERPTR'      INCORRECT KEY USED      00195100
.ZG21A3            AIF   (K'&EXITVERSION LE 0).ZG21A4  OK               00195200
&ZCVAL             SETC '&ZCVAL EXITVERSION'    INCORRECT KEY USED      00195300
.ZG21A4            AIF   (K'&EXITROUTINE LE 0).ZG21A5  OK               00195400
&ZCVAL             SETC '&ZCVAL EXITROUTINE'    INCORRECT KEY USED      00195500
.ZG21A5            AIF   (K'&ZCVAL LE 0).ZG21A6  OK                     00195600
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00195700
&ZMS               SETC  '"REQUEST'                                     00195800
&ZMS               SETC  '&ZMS.=&REQUEST"'                              00195900
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00196000
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00196100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00196200
.ZG21A6            ANOP  ,                                              00196300
.*------------------------------------------------------------------    00196400
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00196500
.ZG22              ANOP  ,                                              00196600
&ZXREQUEST         SETC  'INPUT'     SET IN/OUTPUT                      00196700
                   AIF   (K'&XREQUEST GT 0).ZG22E  VALID ARG            00196800
                   AIF   (T'&REQUEST EQ 'O').ZG22D  OMITTED             00196900
&ZASYSLNDX         SETA  0                                              00197000
.ZG22A             ANOP  ,           POSITIONAL MACRO KEY               00197100
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00197200
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG22C               00197300
&ZTLC              SETC 'REQUEST'                                       00197400
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG22A      00197500
.ZG22B             ANOP  ,                                              00197600
&ZXREQUEST         SETC  ''          RESET IN/OUTPUT                    00197700
&ZMS               SETC  'THE "REQUEST" KEY'                            00197800
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00197900
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00198000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00198100
                   AGO   .ZG22E                                         00198200
.ZG22C             ANOP  ,                                              00198300
&ZXREQUEST         SETC  ''          RESET IN/OUTPUT                    00198400
&ZMS               SETC  '"REQUEST='                                    00198500
&ZMS               SETC  '&ZMS.&REQUEST"'                               00198600
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00198700
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00198800
&ZMS               SETC  '&ZMS "REGISTER"'                              00198900
&ZMS               SETC  '&ZMS OR "DEREGISTER".'                        00199000
                   MNOTE 8,' &ZMS '                                     00199100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00199200
                   AGO   .ZG22E                                         00199300
.ZG22D             ANOP  ,                                              00199400
&XREQUEST          SETC  'REGISTER'  SET DEFAULT KEYWORD                00199500
.ZG22E             ANOP  ,                                              00199600
.*------------------------------------------------------------------    00199700
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00199800
                   AIF   (K'&REQUEST(1) GT 0).ZG22F  PARM               00199900
&XREQUEST          SETC  ''          ENSURE NULL KEYWORD                00200000
&ZXREQUEST         SETC  ''          RESET IN/OUTPUT                    00200100
&ZMS               SETC  'THE'                                          00200200
&ZMS               SETC  '&ZMS "REQUEST" KEY AND ITS'                   00200300
&ZMS               SETC  '&ZMS ARGUMENT ARE REQUIRED.'                  00200400
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00200500
&ZMS               SETC  '&ZMS "REGISTER"'                              00200600
&ZMS               SETC  '&ZMS OR "DEREGISTER".'                        00200700
                   MNOTE 8,' &ZMS '                                     00200800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00200900
.ZG22F             ANOP  ,                                              00201000
.*----------------------------------------------------------------***   00201100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00201200
                   AIF   (N'&SUBTYPE LE 1).ZG24A  CK NUM                00201300
&ZMS               SETC  '"SUBTYPE='                                    00201400
&ZMS               SETC  '&ZMS.&SUBTYPE"'                               00201500
&ZMS               SETC  '&ZMS "SUBTYPE"'                               00201600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00201700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00201800
.ZG24A             ANOP  ,                                              00201900
.*-------------------------------------------------------------------   00202000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00202100
&ZXSUBTYPE         SETC  'INPUT'     SET IN/OUTPUT                      00202200
&XSUBTYPE          SETC  '&SUBTYPE(1)'          SET XVARIABLE           00202300
                   AIF   (N'&SUBTYPE GT 1).ZG24B  MULTI                 00202400
&XSUBTYPE          SETC  '&SUBTYPE'  SET XVARIABLE                      00202500
.ZG24B             AIF   (K'&SUBTYPE(1) GT 0).ZG24C                     00202600
&ZXSUBTYPE         SETC  ''          RESET IN/OUTPUT                    00202700
&ZMS               SETC  ' '                                            00202800
&ZMS               SETC  '&ZMS "SUBTYPE" KEY AND ITS'                   00202900
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00203000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00203100
.ZG24C             ANOP  ,                                              00203200
.*-------------------------------------------------------------------   00203300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00203400
                   AIF   (K'&ZXSUBTYPE LE 0).ZG24R  NOT I/O             00203500
                   AIF   ('&XSUBTYPE'(1,1) NE '(').ZG24R                00203600
&ZCGPR             SETC  '&XSUBTYPE'(2,K'&XSUBTYPE-2)                   00203700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG24P                   00203800
                   AIF   (K'&ZCGPR GT 2).ZG24Q                          00203900
                   AIF   ('&ZCGPR' EQ '0').ZG24Q                        00204000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00204100
                   AIF   (T'&ZCGPR NE 'N').ZG24Q  INVALID REG NAME      00204200
.ZG24P             ANOP  ,                                              00204300
                   AIF   (T'&ZCGPR NE 'N').ZG24R  NON NUMERIC           00204400
                   AIF   ('&ZCGPR' LT '2').ZG24Q                        00204500
                   AIF   ('&ZCGPR' LE '12').ZG24R                       00204600
.ZG24Q             ANOP  ,                                              00204700
&ZMS               SETC  '"SUBTYPE='                                    00204800
&ZMS               SETC  '&ZMS.&SUBTYPE"'                               00204900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00205000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00205100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00205200
.ZG24R             ANOP  ,                                              00205300
.*----------------------------------------------------------------***   00205400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00205500
                   AIF   (N'&RETCODE LE 1).ZG27A  CK NUM                00205600
&ZMS               SETC  '"RETCODE='                                    00205700
&ZMS               SETC  '&ZMS.&RETCODE"'                               00205800
&ZMS               SETC  '&ZMS "RETCODE"'                               00205900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00206000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00206100
.ZG27A             ANOP  ,                                              00206200
.*-------------------------------------------------------------------   00206300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00206400
                   AIF   (K'&RETCODE(1) LE 0).ZG27C  NO PARM            00206500
&ZXRETCODE         SETC  'OUTPUT'    SET OUTPUT                         00206600
&XRETCODE          SETC  '&RETCODE(1)'          SET XVARIABLE           00206700
                   AIF   (N'&RETCODE GT 1).ZG27C                        00206800
&XRETCODE          SETC  '&RETCODE'  SET XVARIABLE                      00206900
.ZG27C             ANOP  ,                                              00207000
.*-------------------------------------------------------------------   00207100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00207200
                   AIF   (K'&ZXRETCODE LE 0).ZG27R  NOT I/O             00207300
                   AIF   ('&XRETCODE'(1,1) NE '(').ZG27R                00207400
&ZCGPR             SETC  '&XRETCODE'(2,K'&XRETCODE-2)                   00207500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG27P                   00207600
                   AIF   (K'&ZCGPR GT 2).ZG27Q                          00207700
                   AIF   ('&ZCGPR' EQ '0').ZG27Q                        00207800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00207900
                   AIF   (T'&ZCGPR NE 'N').ZG27Q  INVALID REG NAME      00208000
.ZG27P             ANOP  ,                                              00208100
                   AIF   (T'&ZCGPR NE 'N').ZG27R  NON NUMERIC           00208200
                   AIF   ('&ZCGPR' EQ '15').ZG27R                       00208300
                   AIF   ('&ZCGPR' LT '2').ZG27Q                        00208400
                   AIF   ('&ZCGPR' LE '12').ZG27R                       00208500
.ZG27Q             ANOP  ,                                              00208600
&ZMS               SETC  '"RETCODE='                                    00208700
&ZMS               SETC  '&ZMS.&RETCODE"'                               00208800
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00208900
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'       00209000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00209100
.ZG27R             ANOP  ,                                              00209200
.*----------------------------------------------------------------***   00209300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00209400
                   AIF   (N'&RSNCODE LE 1).ZG30A  CK NUM                00209500
&ZMS               SETC  '"RSNCODE='                                    00209600
&ZMS               SETC  '&ZMS.&RSNCODE"'                               00209700
&ZMS               SETC  '&ZMS "RSNCODE"'                               00209800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00209900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00210000
.ZG30A             ANOP  ,                                              00210100
.*-------------------------------------------------------------------   00210200
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00210300
                   AIF   (K'&RSNCODE(1) LE 0).ZG30C  NO PARM            00210400
&ZXRSNCODE         SETC  'OUTPUT'    SET OUTPUT                         00210500
&XRSNCODE          SETC  '&RSNCODE(1)'          SET XVARIABLE           00210600
                   AIF   (N'&RSNCODE GT 1).ZG30C                        00210700
&XRSNCODE          SETC  '&RSNCODE'  SET XVARIABLE                      00210800
.ZG30C             ANOP  ,                                              00210900
.*-------------------------------------------------------------------   00211000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00211100
                   AIF   (K'&ZXRSNCODE LE 0).ZG30R  NOT I/O             00211200
                   AIF   ('&XRSNCODE'(1,1) NE '(').ZG30R                00211300
&ZCGPR             SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                   00211400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG30P                   00211500
                   AIF   (K'&ZCGPR GT 2).ZG30Q                          00211600
                   AIF   ('&ZCGPR' EQ '0').ZG30R                        00211700
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00211800
                   AIF   (T'&ZCGPR NE 'N').ZG30Q  INVALID REG NAME      00211900
.ZG30P             ANOP  ,                                              00212000
                   AIF   (T'&ZCGPR NE 'N').ZG30R  NON NUMERIC           00212100
                   AIF   ('&ZCGPR' EQ '0').ZG30R                        00212200
                   AIF   ('&ZCGPR' LT '2').ZG30Q                        00212300
                   AIF   ('&ZCGPR' LE '12').ZG30R                       00212400
.ZG30Q             ANOP  ,                                              00212500
&ZMS               SETC  '"RSNCODE='                                    00212600
&ZMS               SETC  '&ZMS.&RSNCODE"'                               00212700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00212800
                   MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'        00212900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00213000
.ZG30R             ANOP  ,                                              00213100
.******************************************************************     00213200
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00213300
.******************************************************************     00213400
                   ACTR  10000                                          00213500
.*----------------------------------------------------------------***   00213600
.***AH.P02 EXTRA POSITIONALS                                            00213700
                   AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS           00213800
                   AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL           00213900
                   AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL       00214000
                   AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL        00214100
.ZGLISTX1          ANOP  ,                                              00214200
&ZCVAL             SETC  ''          ERROR FIELD                        00214300
&ZAWRK             SETA  0           POSITIONAL NUMBER                  00214400
.ZGLIST2           ANOP  ,                                              00214500
&ZAWRK             SETA  &ZAWRK+1    NEXT POSITIONAL                    00214600
                   AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE           00214700
&ZCVAL             SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                00214800
                   AGO   .ZGLIST2                                       00214900
.*                                                                      00215000
.ZGLIST3           ANOP  ,                                              00215100
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA             00215200
&ZMS               SETC  'POSITIONAL ARGUMENT(S),'                      00215300
&ZMS               SETC  '&ZMS "&ZCVAL"'                                00215400
&ZMS               SETC  '&ZMS CANNOT BE USED.'                         00215500
&ZMS               SETC  '&ZMS NO POSITIONAL ARGUMENTS'                 00215600
                   MNOTE 8,' &ZMS ARE ALLOWED.'                         00215700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00215800
.ZGLISTX           ANOP  ,                                              00215900
&ZASYSLNDX         SETA  0                                              00216000
.*-------------------------------------------------------------------   00216100
.***AG.MF04 MF=(SLE)                                                    00216200
.ZGMFX             ANOP  ,           END OF FULL SYNTAX CHECK           00216300
.*******************************************************************    00216400
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00216500
.*******************************************************************    00216600
                   AIF   (&ZMACRET NE 0).ZLX2   ERROR DETECTED          00216700
.*******************************************************************    00216800
.***AE.01  START OF IFAWIC MACRO CODE                                   00216900
.*******************************************************************    00217000
                   LCLC  &M0M0001                 NAME                  00217100
&M0M0001           SETC  '&XLABEL'                SET NAME              00217200
                   AIF   (K'&XLABEL NE 0).XLAB2                         00217300
&M0M0001           SETC  'M00M&SYSNDX'            DEFAULT NAME          00217400
.*                                                                      00217500
.XLAB2             ANOP  ,                                              00217600
                   AIF   ('&XMF' EQ 'L').XLAB3                          00217700
&M0M0001 DS    0H                             IFAWIC-0                  00217800
.XLAB3             ANOP  ,                                              00217900
.*******************************************************************    00218000
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00218100
.*******************************************************************    00218200
              PUSH  PRINT                                               00218300
                   AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON     00218400
                   PRINT OFF         ++ PR01                            00218500
                   AGO   .ZPRNTXX                                       00218600
.ZPRINTX           PRINT ON                                             00218700
.ZPRNTXX           ANOP  ,                                              00218800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00218900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00219000
.********************************************************************   00219100
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00219200
.********************************************************************   00219300
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00219400
                      LCLA  &ZOPN1         INVOCATION INDEX             00219500
                      LCLC  &ZOPL(4095)    LABEL                        00219600
                      LCLC  &ZOPO(4095)    OPERATION                    00219700
                      LCLC  &ZOPV(4095)    VALUE                        00219800
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00219900
.*                                                                      00220000
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00220100
.******************************************************************     00220200
.***AL.L10 IFAWIC FMT=LIST MF=S!L PARAMETERS                            00220300
.******************************************************************     00220400
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00220500
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00220600
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00220700
&XMFATTR              SETC  '0D'                                        00220800
.*                                                                      00220900
&ZOPN                 SETA  &ZOPN+1                                     00221000
&ZOPL(&ZOPN)          SETC  ' '                                         00221100
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00221200
&ZOPV(&ZOPN)          SETC  '4,8'                                       00221300
&ZOPN                 SETA  &ZOPN+1                                     00221400
&ZOPL(&ZOPN)          SETC  ' '                                         00221500
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00221600
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00221700
&ZOPD(&ZOPN)          SETC  '++ IFAWIC ARG PARMS'                       00221800
.*                                                                      00221900
&ZOPN                 SETA  &ZOPN+1                                     00222000
&ZOPL(&ZOPN)          SETC  ' '                                         00222100
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00222200
&ZOPV(&ZOPN)          SETC  '1'                                         00222300
&ZOPD(&ZOPN)          SETC  ' '                                         00222400
.*                                                                      00222500
.ZLMFSL2              ANOP  ,                                           00222600
.*-------------------------------------------------------------------   00222700
.***AM.L00  IFAWIC FMT=LIST name                                        00222800
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00222900
&ZOPN                 SETA &ZOPN+1                                      00223000
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00223100
&ZOPO(&ZOPN)          SETC 'EQU'                                        00223200
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00223300
&ZOPD(&ZOPN)          SETC '++ IFAWIC NAME'                             00223400
.ZLMFSL2M             ANOP  ,                                           00223500
.*-------------------------------------------------------------------   00223600
.***AM.L01  IFAWIC FMT=LIST PARAMETERS                                  00223700
&ZOPN                 SETA &ZOPN+1                                      00223800
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00223900
&ZOPO(&ZOPN)          SETC 'DS'                                         00224000
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00224100
&ZOPD(&ZOPN)          SETC '++ IFAWIC PARM LIST'                        00224200
.*-------------------------------------------------------------------   00224300
.***AM.L02 XVERSION XL1                                                 00224400
&ZOPN                 SETA &ZOPN+1                                      00224500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00224600
&ZOPO(&ZOPN)          SETC 'DS'                                         00224700
&ZOPV(&ZOPN)          SETC 'XL1'                                        00224800
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00224900
.*-------------------------------------------------------------------   00225000
.***AM.L05 XREQUEST XL1                                                 00225100
&ZOPN                 SETA &ZOPN+1                                      00225200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQUEST'                         00225300
&ZOPO(&ZOPN)          SETC 'DS'                                         00225400
&ZOPV(&ZOPN)          SETC 'XL1'                                        00225500
&ZOPD(&ZOPN)          SETC '++ &ZXREQUEST XREQUEST'                     00225600
.*                                                                      00225700
&ZOPN                 SETA  &ZOPN+1                                     00225800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_REGISTER'               00225900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00226000
&ZOPV(&ZOPN)          SETC  '0'                                         00226100
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              00226200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).REGISTER'                     00226300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00226400
.*                                                                      00226500
&ZOPN                 SETA  &ZOPN+1                                     00226600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_DEREGISTER'             00226700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00226800
&ZOPV(&ZOPN)          SETC  '1'                                         00226900
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              00227000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DEREGISTER'                   00227100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00227200
.*-------------------------------------------------------------------   00227300
.***AM.L05 XBUFFERKEY XL1                                               00227400
&ZOPN                 SETA &ZOPN+1                                      00227500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFFERKEY'                       00227600
&ZOPO(&ZOPN)          SETC 'DS'                                         00227700
&ZOPV(&ZOPN)          SETC 'XL1'                                        00227800
&ZOPD(&ZOPN)          SETC '++ &ZXBUFFERKEY XBUFFERKEY'                 00227900
.*                                                                      00228000
&ZOPN                 SETA  &ZOPN+1                                     00228100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XBUFFERKEY_0'                    00228200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00228300
&ZOPV(&ZOPN)          SETC  '0'                                         00228400
&ZOPD(&ZOPN)          SETC  '++ XBUFFERKEY.'                            00228500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).0'                            00228600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00228700
.*                                                                      00228800
&ZOPN                 SETA  &ZOPN+1                                     00228900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XBUFFERKEY_8'                    00229000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00229100
&ZOPV(&ZOPN)          SETC  '1'                                         00229200
&ZOPD(&ZOPN)          SETC  '++ XBUFFERKEY.'                            00229300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).8'                            00229400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00229500
.*-------------------------------------------------------------------   00229600
.***AM.L09  XRSV0003 CL1                                                00229700
&ZOPN                 SETA &ZOPN+1                                      00229800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0003'                         00229900
&ZOPO(&ZOPN)          SETC 'DS'                                         00230000
&ZOPV(&ZOPN)          SETC 'CL1'                                        00230100
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00230200
.*-------------------------------------------------------------------   00230300
.***AM.L09  XSUBTYPE XL2                                                00230400
&ZOPN                 SETA &ZOPN+1                                      00230500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSUBTYPE'                         00230600
&ZOPO(&ZOPN)          SETC 'DS'                                         00230700
&ZOPV(&ZOPN)          SETC 'XL2'                                        00230800
&ZOPD(&ZOPN)          SETC '++ &ZXSUBTYPE '                             00230900
.*-------------------------------------------------------------------   00231000
.***AM.L03 XFLAGS BL.16                                                 00231100
&ZOPN                 SETA &ZOPN+1                                      00231200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS'                           00231300
&ZOPO(&ZOPN)          SETC 'DS'                                         00231400
&ZOPV(&ZOPN)          SETC 'BL.16'                                      00231500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00231600
.*                                                                      00231700
&ZOPN                 SETA  &ZOPN+1                                     00231800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_EXITVERSION'             00231900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00232000
&ZOPV(&ZOPN)          SETC  'B''1000000000000000'''                     00232100
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00232200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).EXITVERSION'                  00232300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00232400
.*-------------------------------------------------------------------   00232500
.***AM.L09  XBUFFERPTR AD                                               00232600
&ZOPN                 SETA &ZOPN+1                                      00232700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFFERPTR'                       00232800
&ZOPO(&ZOPN)          SETC 'DS'                                         00232900
&ZOPV(&ZOPN)          SETC 'AD'                                         00233000
&ZOPD(&ZOPN)          SETC '++ &ZXBUFFERPTR '                           00233100
.*-------------------------------------------------------------------   00233200
.***AM.L09  XEXITROUTINE CL8                                            00233300
&ZOPN                 SETA &ZOPN+1                                      00233400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEXITROUTINE'                     00233500
&ZOPO(&ZOPN)          SETC 'DS'                                         00233600
&ZOPV(&ZOPN)          SETC 'CL8'                                        00233700
&ZOPD(&ZOPN)          SETC '++ &ZXEXITROUTINE '                         00233800
.*-------------------------------------------------------------------   00233900
.***AM.L09  XBUFFER4KPAGES F                                            00234000
&ZOPN                 SETA &ZOPN+1                                      00234100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFFER4KPAGES'                   00234200
&ZOPO(&ZOPN)          SETC 'DS'                                         00234300
&ZOPV(&ZOPN)          SETC 'F'                                          00234400
&ZOPD(&ZOPN)          SETC '++ &ZXBUFFER4KPAGES '                       00234500
.*-------------------------------------------------------------------   00234600
.***AM.L09  XEXITVERSION F                                              00234700
&ZOPN                 SETA &ZOPN+1                                      00234800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEXITVERSION'                     00234900
&ZOPO(&ZOPN)          SETC 'DS'                                         00235000
&ZOPV(&ZOPN)          SETC 'F'                                          00235100
&ZOPD(&ZOPN)          SETC '++ &ZXEXITVERSION '                         00235200
.*-------------------------------------------------------------------   00235300
.***AM.L10 END OF IFAWIC LIST PARAMETERS                                00235400
&ZOPN                 SETA &ZOPN+1                                      00235500
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00235600
&ZOPO(&ZOPN)          SETC 'EQU'                                        00235700
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00235800
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00235900
.*                                                                      00236000
&ZOPN                 SETA &ZOPN+1                                      00236100
&ZOPL(&ZOPN)          SETC ' '                                          00236200
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00236300
&ZOPV(&ZOPN)          SETC '1'                                          00236400
&ZOPD(&ZOPN)          SETC ' '                                          00236500
.*-------------------------------------------------------------------   00236600
.***AL.L12 IFAWIC FMT=LIST MF=S!L PARAMETERS                            00236700
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00236800
.*                                                                      00236900
&ZOPN                 SETA  &ZOPN+1                                     00237000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00237100
&ZOPO(&ZOPN)          SETC  'DC'                                        00237200
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00237300
&ZOPD(&ZOPN)          SETC  '++ IFAWIC ARG PARMS'                       00237400
.*                                                                      00237500
.ZLMFSLX              ANOP  ,                                           00237600
.*-------------------------------------------------------------------   00237700
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00237800
&ZPLLEN               SETA 32                                           00237900
.*                                                                      00238000
.******************************************************************     00238100
.***AI.L01 IFAWIC FMT=LIST FILL IN PARAMETER AREA                       00238200
.******************************************************************     00238300
                      ACTR  10000                                       00238400
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00238500
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00238600
&ZCVAL                SETC  'LAE'          XAX MODE                     00238700
.ZIMFXA               ANOP ,                                            00238800
.*                                                                      00238900
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00239000
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00239100
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00239200
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00239300
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00239400
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00239500
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00239600
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00239700
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00239800
&ZOPN                 SETA  &ZOPN+1                                     00239900
&ZOPL(&ZOPN)          SETC  ' '                                         00240000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00240100
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00240200
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00240300
                      AGO   .ZIMFNX                                     00240400
.*                                                                      00240500
.ZIMFN2               ANOP ,                                            00240600
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00240700
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00240800
&ZOPN                 SETA  &ZOPN+1                                     00240900
&ZOPL(&ZOPN)          SETC  ' '                                         00241000
&ZOPO(&ZOPN)          SETC  'LAE'                                       00241100
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00241200
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00241300
                      AGO   .ZIMFNX                                     00241400
.ZIMFNX1              ANOP ,                                            00241500
&ZOPN                 SETA  &ZOPN+1                                     00241600
&ZOPL(&ZOPN)          SETC  ' '                                         00241700
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00241800
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00241900
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00242000
.ZIMFNX               ANOP ,                                            00242100
.********************************************************************   00242200
.***AI.L02 IFAWIC FMT=LIST INITIALIZE PARAMETER AREA                    00242300
.********************************************************************   00242400
.***AI.L03 MF=(SLE)                                                     00242500
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00242600
.*                                                                      00242700
&ZOPN                 SETA  &ZOPN+1                                     00242800
&ZOPL(&ZOPN)          SETC  ' '                                         00242900
&ZOPO(&ZOPN)          SETC  'XC'                                        00243000
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00243100
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00243200
.ZIMFLX               ANOP  ,                                           00243300
.*-------------------------------------------------------------------   00243400
.***AI.L07 XREQUEST AL1                                                 00243500
&ZW                   SETC  ''                                          00243600
.*-------------------------------------------------------------------   00243700
.***AI.L15 XREQUEST "REGISTER" AL1                                      00243800
         AIF   ('&XREQUEST' NE 'REGISTER').ZI3A                         00243900
&ZW                   SETC  '0'                                         00244000
.ZI3A                 ANOP  ,                                           00244100
.*-------------------------------------------------------------------   00244200
.***AI.L15 XREQUEST "DEREGISTER" AL1                                    00244300
         AIF   ('&XREQUEST' NE 'DEREGISTER').ZI4A                       00244400
&ZW                   SETC  '1'                                         00244500
.ZI4A                 ANOP  ,                                           00244600
.*-------------------------------------------------------------------   00244700
.***AI.L17 XREQUEST AL1                                                 00244800
                      AIF   ('&ZW' EQ '0').ZI4B                         00244900
                      AIF   ('&ZW' EQ '').ZI4B                          00245000
.*                                                                      00245100
&ZOPN                 SETA  &ZOPN+1                                     00245200
&ZOPL(&ZOPN)          SETC  ' '                                         00245300
&ZOPO(&ZOPN)          SETC  'MVI'                                       00245400
&ZOPV(&ZOPN)          SETC  '1(1),&ZW'                                  00245500
&ZOPD(&ZOPN)          SETC  '++ &ZXREQUEST XREQUEST'                    00245600
.ZI4B                 ANOP  ,                                           00245700
.*-------------------------------------------------------------------   00245800
.***AI.L07 XBUFFERKEY AL1                                               00245900
&ZW                   SETC  ''                                          00246000
.*-------------------------------------------------------------------   00246100
.***AI.L15 XBUFFERKEY "0" AL1                                           00246200
         AIF   ('&XBUFFERKEY' NE '0').ZI6A                              00246300
&ZW                   SETC  '0'                                         00246400
.ZI6A                 ANOP  ,                                           00246500
.*-------------------------------------------------------------------   00246600
.***AI.L15 XBUFFERKEY "8" AL1                                           00246700
         AIF   ('&XBUFFERKEY' NE '8').ZI7A                              00246800
&ZW                   SETC  '1'                                         00246900
.ZI7A                 ANOP  ,                                           00247000
.*-------------------------------------------------------------------   00247100
.***AI.L17 XBUFFERKEY AL1                                               00247200
                      AIF   ('&ZW' EQ '0').ZI7B                         00247300
                      AIF   ('&ZW' EQ '').ZI7B                          00247400
.*                                                                      00247500
&ZOPN                 SETA  &ZOPN+1                                     00247600
&ZOPL(&ZOPN)          SETC  ' '                                         00247700
&ZOPO(&ZOPN)          SETC  'MVI'                                       00247800
&ZOPV(&ZOPN)          SETC  '2(1),&ZW'                                  00247900
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFFERKEY XBUFFERKEY'                00248000
.ZI7B                 ANOP  ,                                           00248100
.*-------------------------------------------------------------------   00248200
.***AI.L25  XSUBTYPE XL2                                                00248300
                      AIF   ('&ZXSUBTYPE' EQ '').ZI9E                   00248400
                      AIF   ('&ZXSUBTYPE' EQ 'OUTPUT').ZI9E             00248500
&ZCGPR                SETC  '&XSUBTYPE'                                 00248600
.*                                                                      00248700
                      AIF   ('&XSUBTYPE'(1,1) NE '(').ZI9B              00248800
&ZCGPR   SETC  '0('.'&XSUBTYPE'(2,K'&XSUBTYPE-2).')'                    00248900
                      AGO   .ZI9D                                       00249000
.ZI9B                 ANOP  ,                                           00249100
.*                                                                      00249200
&ZC                   SETC  '&XSUBTYPE'(1,1)                            00249300
                      AIF   (T'&ZC NE 'N').ZI9D                         00249400
&ZC                   SETC  '&XSUBTYPE'                                 00249500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI9D                00249600
&ZCGPR                SETC  '=FL2''&XSUBTYPE'''                         00249700
.*                                                                      00249800
.ZI9D                 ANOP  ,                                           00249900
.*                                                                      00250000
&ZOPN                 SETA  &ZOPN+1                                     00250100
&ZOPL(&ZOPN)          SETC  ' '                                         00250200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00250300
&ZOPV(&ZOPN)          SETC  '4(2,1),&ZCGPR'                             00250400
&ZOPD(&ZOPN)          SETC  '++ &ZXSUBTYPE XSUBTYPE'                    00250500
.*                                                                      00250600
.ZI9E                 ANOP  ,                                           00250700
.*-------------------------------------------------------------------   00250800
.***AI.L05 XFLAGS BL2                                                   00250900
&ZW                   SETC  ''                                          00251000
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00251100
.*-------------------------------------------------------------------   00251200
.***AI.L08 XFLAGS "EXITVERSION"                                         00251300
.***      BL2'1XXXXXXXXXXXXXXX'                                         00251400
         AIF   ('&EXITVERSION' EQ '').ZI11A                             00251500
&ZW                   SETC  '&ZW.1000000000000000'                      00251600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00251700
                      AGO   .ZI11C                                      00251800
.*                                                                      00251900
.ZI11A                ANOP  ,                                           00252000
&ZW                   SETC  '&ZW.0000000000000000'                      00252100
.ZI11C                ANOP  ,                                           00252200
.*-------------------------------------------------------------------   00252300
.***AI.L10 XFLAGS BL2                                                   00252400
                      AIF   ('&ZCLNG' NE 'YES').ZI11E  ALL ZERO BITS    00252500
&ZOPN                 SETA  &ZOPN+1                                     00252600
&ZOPL(&ZOPN)          SETC  ' '                                         00252700
&ZOPO(&ZOPN)          SETC  'OC'                                        00252800
&ZOPV(&ZOPN)          SETC  '6(2,1),=BL2''&ZW'''                        00252900
&ZOPD(&ZOPN)          SETC  '++ INPUT BL2'                              00253000
.ZI11E                ANOP  ,                                           00253100
.*-------------------------------------------------------------------   00253200
.***AI.L25  XEXITROUTINE CL8                                            00253300
                      AIF   ('&ZXEXITROUTINE' EQ '').ZI13E              00253400
                      AIF   ('&ZXEXITROUTINE' EQ 'OUTPUT').ZI13E        00253500
&ZCGPR                SETC  '&XEXITROUTINE'                             00253600
.*                                                                      00253700
                      AIF   ('&XEXITROUTINE'(1,1) NE '(').ZI13B         00253800
&ZCGPR   SETC  '0('.'&XEXITROUTINE'(2,K'&XEXITROUTINE-2).')'            00253900
.ZI13B                ANOP  ,                                           00254000
.*                                                                      00254100
&ZOPN                 SETA  &ZOPN+1                                     00254200
&ZOPL(&ZOPN)          SETC  ' '                                         00254300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00254400
&ZOPV(&ZOPN)          SETC  '16(8,1),&ZCGPR'                            00254500
&ZOPD(&ZOPN)          SETC  '++ &ZXEXITROUTINE XEXITROUTINE'            00254600
.*                                                                      00254700
.ZI13E                ANOP  ,                                           00254800
.*-------------------------------------------------------------------   00254900
.***AI.L25  XBUFFER4KPAGES F                                            00255000
                      AIF   ('&ZXBUFFER4KPAGES' EQ '').ZI14E            00255100
                      AIF   ('&ZXBUFFER4KPAGES' EQ 'OUTPUT').ZI14E      00255200
&ZCGPR                SETC  '&XBUFFER4KPAGES'                           00255300
.*                                                                      00255400
                      AIF   ('&XBUFFER4KPAGES'(1,1) NE '(').ZI14B       00255500
&ZCGPR   SETC  '0('.'&XBUFFER4KPAGES'(2,K'&XBUFFER4KPAGES-2).')'        00255600
                      AGO   .ZI14D                                      00255700
.ZI14B                ANOP  ,                                           00255800
.*                                                                      00255900
&ZC                   SETC  '&XBUFFER4KPAGES'(1,1)                      00256000
                      AIF   (T'&ZC NE 'N').ZI14D                        00256100
&ZC                   SETC  '&XBUFFER4KPAGES'                           00256200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI14D               00256300
&ZCGPR                SETC  '=AL4(&XBUFFER4KPAGES)'                     00256400
.*                                                                      00256500
.ZI14D                ANOP  ,                                           00256600
.*                                                                      00256700
&ZOPN                 SETA  &ZOPN+1                                     00256800
&ZOPL(&ZOPN)          SETC  ' '                                         00256900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00257000
&ZOPV(&ZOPN)          SETC  '24(4,1),&ZCGPR'                            00257100
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFFER4KPAGES XBUFFER4KPAGES'        00257200
.*                                                                      00257300
.ZI14E                ANOP  ,                                           00257400
.*-------------------------------------------------------------------   00257500
.***AI.L18  XEXITVERSION F                                              00257600
         AIF   ('&XEXITVERSION' NE 'NO_EXITVERSION').ZI15               00257700
&ZXEXITVERSION        SETC  ''             RESET INPUT/OUTPUT           00257800
.ZI15                 ANOP  ,                                           00257900
.*-------------------------------------------------------------------   00258000
.***AI.L25  XEXITVERSION F                                              00258100
                      AIF   ('&ZXEXITVERSION' EQ '').ZI15E              00258200
                      AIF   ('&ZXEXITVERSION' EQ 'OUTPUT').ZI15E        00258300
&ZCGPR                SETC  '&XEXITVERSION'                             00258400
.*                                                                      00258500
                      AIF   ('&XEXITVERSION'(1,1) NE '(').ZI15B         00258600
&ZCGPR   SETC  '0('.'&XEXITVERSION'(2,K'&XEXITVERSION-2).')'            00258700
                      AGO   .ZI15D                                      00258800
.ZI15B                ANOP  ,                                           00258900
.*                                                                      00259000
&ZC                   SETC  '&XEXITVERSION'(1,1)                        00259100
                      AIF   (T'&ZC NE 'N').ZI15D                        00259200
&ZC                   SETC  '&XEXITVERSION'                             00259300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI15D               00259400
&ZCGPR                SETC  '=AL4(&XEXITVERSION)'                       00259500
.*                                                                      00259600
.ZI15D                ANOP  ,                                           00259700
.*                                                                      00259800
&ZOPN                 SETA  &ZOPN+1                                     00259900
&ZOPL(&ZOPN)          SETC  ' '                                         00260000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00260100
&ZOPV(&ZOPN)          SETC  '28(4,1),&ZCGPR'                            00260200
&ZOPD(&ZOPN)          SETC  '++ &ZXEXITVERSION XEXITVERSION'            00260300
.*                                                                      00260400
.ZI15E                ANOP  ,                                           00260500
.*-------------------------------------------------------------------   00260600
&ZOPN1                SETA &ZOPN                                        00260700
.*******************************************************************    00260800
.***  PROCESS IFAWIC OUTPUT PARAMETERS                                  00260900
.*******************************************************************    00261000
                      ACTR  10000                                       00261100
.*------------------------------------------------------------------    00261200
.***AO.L02 XBUFFERPTR AL8                                               00261300
         AIF   ('&ZXBUFFERPTR' EQ 'OUTPUT').ZO12A  OUTPUT               00261400
         AIF   ('&ZXBUFFERPTR' NE 'INOUT').ZO12C  INOUT                 00261500
.ZO12A    AIF   ('&XBUFFERPTR'(1,1) NE '(').ZO12B  ADDR IN GPR          00261600
&ZCGPR   SETC  '&XBUFFERPTR'(2,K'&XBUFFERPTR-2)                         00261700
&ZOPN                 SETA  &ZOPN+1                                     00261800
&ZOPL(&ZOPN)          SETC  ' '                                         00261900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00262000
&ZOPV(&ZOPN)          SETC  '0(8,&ZCGPR),8(1)'                          00262100
&ZOPD(&ZOPN)          SETC  '++ XBUFFERPTR AL8'                         00262200
                      AGO   .ZO12C                                      00262300
.*                                                                      00262400
.ZO12B                ANOP  ,                                           00262500
&ZAWRK   SETA  K'&XBUFFERPTR                                            00262600
         AIF   ('&XBUFFERPTR'(&ZAWRK,1) NE ')').ZO12G                   00262700
&ZN      SETA  2                                                        00262800
.ZO12H    ANOP                                                          00262900
         AIF   (&ZN GE &ZAWRK).ZO12G                                    00263000
         AIF   ('&XBUFFERPTR'(&ZN,1) NE '(').ZO12I                      00263100
&ZC      SETC  '&XBUFFERPTR'(1,&ZN).'8'.','                             00263200
&ZC      SETC  '&ZC'.'&XBUFFERPTR'(&ZN+1,&ZAWRK-&ZN).',8(1)'            00263300
         AGO   .ZO12J                                                   00263400
.ZO12I    ANOP                                                          00263500
&ZN      SETA  &ZN+1                                                    00263600
         AGO   .ZO12H                                                   00263700
.ZO12G    ANOP                                                          00263800
&ZC      SETC  '&XBUFFERPTR.(8),8(1)'                                   00263900
.ZO12J    ANOP                                                          00264000
&ZOPN                 SETA  &ZOPN+1                                     00264100
&ZOPL(&ZOPN)          SETC  ' '                                         00264200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00264300
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00264400
&ZOPD(&ZOPN)          SETC  '++ XBUFFERPTR AL8'                         00264500
.ZO12C                ANOP  ,                                           00264600
.*******************************************************************    00264700
.***AO.X02  RETURN CODE PROCESSING                                      00264800
.*******************************************************************    00264900
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00265000
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00265100
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00265200
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00265300
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00265400
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00265500
&ZOPN                 SETA  &ZOPN+1                                     00265600
&ZOPL(&ZOPN)          SETC  ' '                                         00265700
&ZOPO(&ZOPN)          SETC  'ST'                                        00265800
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00265900
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00266000
                      AGO   .ZMRETX                                     00266100
.*                                                                      00266200
.ZMRET2               ANOP  ,                                           00266300
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00266400
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00266500
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00266600
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00266700
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00266800
&ZOPN                 SETA  &ZOPN+1                                     00266900
&ZOPL(&ZOPN)          SETC  ' '                                         00267000
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00267100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00267200
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00267300
.ZMRETX               ANOP  ,                                           00267400
.*******************************************************************    00267500
.***AO.X03  REASON CODE PROCESSING                                      00267600
.*******************************************************************    00267700
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00267800
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00267900
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00268000
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00268100
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00268200
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00268300
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00268400
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00268500
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00268600
&ZOPN                 SETA  &ZOPN+1                                     00268700
&ZOPL(&ZOPN)          SETC  ' '                                         00268800
&ZOPO(&ZOPN)          SETC  'ST'                                        00268900
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00269000
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00269100
                      AGO   .ZMRSNX                                     00269200
.*                                                                      00269300
.ZMRSN2               ANOP  ,                                           00269400
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00269500
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00269600
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00269700
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00269800
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00269900
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00270000
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00270100
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00270200
&ZOPN                 SETA  &ZOPN+1                                     00270300
&ZOPL(&ZOPN)          SETC  ' '                                         00270400
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00270500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00270600
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00270700
.ZMRSNX               ANOP  ,                                           00270800
.*******************************************************************    00270900
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00271000
.*******************************************************************    00271100
.ZMFLX                ANOP  ,              MF=L PROCESSING              00271200
.*******************************************************************    00271300
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00271400
.*******************************************************************    00271500
                      ACTR  10000                                       00271600
.*                                                                      00271700
                      LCLA  &ZLC           COLUMN POSITION              00271800
                      LCLA  &ZOPX          LIST TABLE INDEX             00271900
                      LCLC  &ZLL           LABEL                        00272000
                      LCLC  &ZLOP          OPERATION                    00272100
                      LCLC  &ZLV           VALUE                        00272200
                      LCLC  &ZLD           DESCRIPTION                  00272300
.*                                                                      00272400
&ZOPX                 SETA  1                                           00272500
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00272600
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00272700
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00272800
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00272900
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00273000
                      AIF   (K'&ZLD LE 0).ZL5                           00273100
&ZLC                  SETA  35             COMMENT COLUMN               00273200
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00273300
&ZLC                  SETA  33             COMMMENT COLUMN              00273400
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00273500
&ZLV                  SETC  '&ZLV'.' '                                  00273600
                      AGO   .ZL3                                        00273700
.*                                                                      00273800
.ZL4                  ANOP  ,                                           00273900
&ZLV                  SETC  '&ZLV'.' '                                  00274000
.ZL5                  ANOP  ,                                           00274100
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00274200
.*                                                                      00274300
&ZLL     &ZLOP &ZLV                                                     00274400
.*                                                                      00274500
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00274600
                      AGO   .ZL2           CONTINUE LOOPING             00274700
.*                                                                      00274800
.ZLX                  ANOP  ,                                           00274900
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00275000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00275100
         &ZMAC_LLGT 14,16(0,0)      GET CVT ADDRESS                     00275200
         L     14,772(14,0)         GET SFT ADDRESS                     00275300
         L     14,660(14,0)         Get IFAWIC PC number                00275400
         PC    0(14)                PC to IFAWIPCT in Caller AS         00275500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00275600
.ZLINKX               ANOP  ,                                           00275700
.*******************************************************************    00275800
.***AP.X01  FORMAT GENERATED CODE                                       00275900
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00276000
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00276100
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00276200
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00276300
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00276400
                      AIF   (K'&ZLD LE 0).ZL51                          00276500
&ZLC                  SETA  35             COMMENT COLUMN               00276600
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00276700
&ZLC                  SETA  33             COMMENT COLUMN               00276800
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00276900
&ZLV                  SETC  '&ZLV'.' '                                  00277000
                      AGO   .ZL31                                       00277100
.*                                                                      00277200
.ZL41                 ANOP  ,                                           00277300
&ZLV                  SETC  '&ZLV'.' '                                  00277400
.ZL51                 ANOP  ,                                           00277500
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00277600
.*                                                                      00277700
&ZLL     &ZLOP &ZLV                                                     00277800
.*                                                                      00277900
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00278000
                      AGO   .ZL21          CONTINUE LOOPING             00278100
.*                                                                      00278200
.ZLX1                 ANOP  ,                                           00278300
.*******************************************************************    00278400
.***AP.X02  END OF IFAWIC MACRO                                         00278500
&ZIFAWIC              SETC  'YES'          SET IFAWIC USED              00278600
         POP   PRINT                                                    00278700
*                                            IFAWIC-0                   00278800
         SPACE 1                                                        00278900
.ZLX2                 ANOP  ,                                           00279000
         MEND                                                           00279100
**********************************************************************/ 00279200
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00279300
*%IFAWIC: MACRO KEYS(REQUEST,BUFFERKEY,BUFFER4KPAGES,BUFFERPTR,         00279400
*                 EXITVERSION,EXITROUTINE,SUBTYPE,RETCODE,RSNCODE,      00279500
*                 PLISTVER,MF);                                         00279600
*  ANS('?'!!MACLABEL!!' '!!'IFAWICP '!!MACLIST!!                        00279700
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00279800
*%END IFAWIC;                                                           00279900
