*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IEATEDS                               -06/08/18-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Timed Event Data Services                     * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 2010, 2019                         * 00001200
*                                                                     * 00001300
* STATUS= HBB77C0                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      IEATEDS provides Timed Event Data Services.                    * 00002100
*                                                                     * 00002200
*      IEATEDS allows the user to record events to a Timed Event Data * 00002300
*      Table to provide information that will help determine flow and * 00002400
*      performance. Each event is time stamped and includes data      * 00002500
*      provided by the caller and additional data collected by the    * 00002600
*      service.  A REXX Exec is also provided to obtain a formatted   * 00002700
*      report of the events.                                          * 00002800
*                                                                     * 00002900
*      To use the Timed Event Data service:                           * 00003000
*                                                                     * 00003100
*                                                                     * 00003200
*      1.  Invoke IEATEDS with REQUEST=REGISTER to obtain and         * 00003300
*          initialize a Timed Event Data Table.  The size of the      * 00003400
*          Timed Event Data Table is determined by the MaxEvents      * 00003500
*          argument.  Note that the Timed Event Data Table will not   * 00003600
*          wrap.  The REGISTER service will provide a Timed Event     * 00003700
*          Data Token as output which will identify the newly created * 00003800
*          Timed Event Data Table on subsequent IEATEDS requests.     * 00003900
*                                                                     * 00004000
*      2.  Invoke IEATEDS with REQUEST=RECORD, passing the Timed      * 00004100
*          Event Data Token and other arguments, including up to 16   * 00004200
*          bytes of user data. Several RECORD requests may be made    * 00004300
*          throughout the code to understand the flow and             * 00004400
*          performance. Once the maximum number of events has been    * 00004500
*          recorded, subsequent requests will be ignored.             * 00004600
*                                                                     * 00004700
*      3.  Execute REXX Exec IEAVFTED to output the Timed Event Data  * 00004800
*          Report to a data set.  The Timed Event Data Report         * 00004900
*          parameters are described below and the format of the       * 00005000
*          output is described in the IEATEDS macro example section.  * 00005100
*          Note that IEAVFTED does not clear the Timed Event Data     * 00005200
*          Table. Thus, IEAVFTED may be executed at any time to       * 00005300
*          produce an up-to-date report containing all of the events  * 00005400
*          that have been recorded so far.                            * 00005500
*                                                                     * 00005600
*                                                                     * 00005700
*                                                                     * 00005800
*      TIMED EVENT DATA REPORT                                        * 00005900
*                                                                     * 00006000
*      The IBM supplied IEAVFTED REXX exec is used to produce a Timed * 00006100
*      Event Data Report in either a TSO or IPCS environment.  When   * 00006200
*      run under TSO, the user must specify either a pre-allocated    * 00006300
*      data set or a z/OS UNIX file in which to place the report. The * 00006400
*      dataset option requires the user to allocate a data set with   * 00006500
*      an LRECL of 512 and a RECFM of V or VB.  The z/OS UNIX file    * 00006600
*      option requires the TSO environment to have an OMVS segment.   * 00006700
*      When run under IPCS, the Timed Event Data report will normally * 00006800
*      be displayed within IPCS.  An example is provided in the       * 00006900
*      IEATEDS example section that shows how to have IPCS place the  * 00007000
*      Timed Event Data report into a pre-allocated data set.         * 00007100
*                                                                     * 00007200
*      The Timed Event Data Report will consist of two sections, the  * 00007300
*      first section consisting of human readable text, and the       * 00007400
*      second section consisting of spreadsheet data (unless the NOSS * 00007500
*      parameter, described below, is specified). Note that the IPL   * 00007600
*      Statistics Table (IPST) will also be placed into the Timed     * 00007700
*      Event Data report.                                             * 00007800
*                                                                     * 00007900
*      The IEAVFTED REXX exec is a compiled REXX program which        * 00008000
*      requires the full REXX compiler run-time libraries (at least   * 00008100
*      REXX LIBR BASE MVS FMID HWJ9140) installed before attempting   * 00008200
*      to use IEAVFTED. Note that IEAVFTED will not work with the     * 00008300
*      REXX Alternate Runtime Library z/OS Base HWJ9143.              * 00008400
*                                                                     * 00008500
*      The IEAVFTED code resides in data set SYS1.SBLSCLI0. IEAVFTED  * 00008600
*      must be run from a data set with an LRECL of 80 and a RECFM of * 00008700
*      F or FB.                                                       * 00008800
*                                                                     * 00008900
*      The following describes the required and optional parameters   * 00009000
*      for IEAVFTED:                                                  * 00009100
*                                                                     * 00009200
*                                                                     * 00009300
*      o   DATASET('output_data_set') or DA('output_data_set') is     * 00009400
*          used to specify the name of the pre-allocated data set     * 00009500
*          where the Timed Event Data Report will be written when     * 00009600
*          IEAVFTED is run under TSO.  The name must be fully         * 00009700
*          qualified and the data set must have an LRECL of 512 with  * 00009800
*          a RECFM of V or VB.  Note that one and only one of         * 00009900
*          DATASET('output_data_set'), DA('output_data_set'), or      * 00010000
*          PATH('z/OS UNIX file') must be specified when IEAVFTED is  * 00010100
*          run under TSO. Neither DATASET('output_data_set') nor      * 00010200
*          DA('output_data_set') is allowed when IEAVFTED is run      * 00010300
*          under IPCS (an example is provided in the IEATEDS macro    * 00010400
*          example section that shows how to have IPCS place the      * 00010500
*          Timed Event Data report into a pre-allocated data set).    * 00010600
*                                                                     * 00010700
*      o   PATH('z/OS UNIX file') is used to specify the name of a    * 00010800
*          z/OS UNIX file where the Timed Event Data Report will be   * 00010900
*          written when IEAVFTED is run under TSO.  A z/OS UNIX file  * 00011000
*          is created along with its directories with the authority   * 00011100
*          options of 770.  Note that one and only one of PATH('z/OS  * 00011200
*          UNIX file'), DATASET('output_data_set'), or                * 00011300
*          DA('output_data_set') must be specified when IEAVFTED is   * 00011400
*          run under TSO. PATH('z/OS UNIX file') is not allowed when  * 00011500
*          IEAVFTED is run under IPCS as IPCS does not directly       * 00011600
*          support putting output to a z/OS UNIX file.                * 00011700
*                                                                     * 00011800
*      o   IPCSDA('input_data_set') is an optional specification that * 00011900
*          is used only with a special IEAVFTED invocation that will  * 00012000
*          convert the spreadsheet data into a proper format in order * 00012100
*          to import it into a spreadsheet program. This is needed    * 00012200
*          for the case where the Timed Event Data report was         * 00012300
*          obtained under IPCS using the example technique described  * 00012400
*          in the IEATEDS macro example section. In that example      * 00012500
*          technique, the output data set needs to be pre-allocated   * 00012600
*          with an LRECL of 255 to satisfy IPCS, but in order to      * 00012700
*          import the spreadsheet data into a spreadsheet program,    * 00012800
*          the speadsheet data needs to be in a 512 character data    * 00012900
*          set or in a z/OS UNIX file.  Invoking IEAVFTED with        * 00013000
*          IPCSDA('input_data_set') does not produce a new report,    * 00013100
*          but instead extracts the spreadsheet data contained in     * 00013200
*          IPCSDA('input_data_set') and places it into the required   * 00013300
*          data set as specified by one and only one of               * 00013400
*          DATASET('output_data_set'), DA('output_data_set'), or      * 00013500
*          PATH('z/OS UNIX file'). Parameters SS, NOSS,               * 00013600
*          Component(component_name), and Comp(component_name) are    * 00013700
*          ignored when IPCSDA is specified.  Note that               * 00013800
*          'input_data_set' and 'output_data_set' must be different   * 00013900
*          data set names.                                            * 00014000
*                                                                     * 00014100
*      o   Component(component_name) or Comp(component_name) is       * 00014200
*          optional and is used as a filter to obtain Timed Event     * 00014300
*          Data Table information for a specific component.  Each     * 00014400
*          Timed Event Data Table is created with the component name  * 00014500
*          specified as CompName on the IEATEDS REGISTER request.     * 00014600
*          When component(component_name) is specified, the Timed     * 00014700
*          Event Data report will include Timed Event Data Table      * 00014800
*          information only for those Timed Event Data Tables with a  * 00014900
*          matching component name.  Note that if the component_name  * 00015000
*          contains blanks, it must be enclosed within quotes.  The   * 00015100
*          component_name is not case sensitive and will be converted * 00015200
*          to uppercase.  Also, Component(IPST) can be used to obtain * 00015300
*          only the IPL Statistics Table.  When neither Component()   * 00015400
*          nor Comp() is specified, all Timed Event Data Tables for   * 00015500
*          all components are included in the report.  Note that      * 00015600
*          Component() and Comp() are ignored when IPCSDA is          * 00015700
*          specified.                                                 * 00015800
*                                                                     * 00015900
*      o   SS(char) is optional and is used to specify the character  * 00016000
*          delimiter for the spreadsheet fields. The default          * 00016100
*          character is a semicolon (;).  Note that SS(char) is       * 00016200
*          ignored when NOSS or IPCSDA are specified.                 * 00016300
*                                                                     * 00016400
*      o   NOSS is optional and is used to cause the spreadsheet data * 00016500
*          to be omitted from the Timed Event Data Report.  Note that * 00016600
*          NOSS is ignored when IPCSDA is specified.                  * 00016700
*                                                                     * 00016800
*      o   HELP or ? is optional and is used to get a description of  * 00016900
*          IEAVFTED and its parameters.                               * 00017000
*                                                                     * 00017100
*                                                                     * 00017200
*                                                                     * 00017300
*01* EXTERNAL CLASSIFICATION:                                         * 00017400
*                                                                     * 00017500
*02* PI:   BASE                                                       * 00017600
*                                                                     * 00017700
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00017800
*                                                                     * 00017900
*01* ENVIRONMENT:                                                     * 00018000
*                                                                     * 00018100
*                                                                     * 00018200
*      Minimum authorization: Supervisor state.  Any PSW key.         * 00018300
*                                                                     * 00018400
*      Dispatchable unit mode: Task or SRB mode.                      * 00018500
*                                                                     * 00018600
*      Cross Memory Mode: Any primary, any home, and any secondary    * 00018700
*                        address space.                               * 00018800
*                                                                     * 00018900
*      AMODE:            31-bit.                                      * 00019000
*                                                                     * 00019100
*      ASC mode:         Primary or Access Register.                  * 00019200
*                                                                     * 00019300
*      Interrupt status: Enabled for I/O and external interrupts.     * 00019400
*                                                                     * 00019500
*      Locks:            The caller may hold a local lock, or a local * 00019600
*                        lock and the CMS lock.                       * 00019700
*                                                                     * 00019800
*      Control parameters: Control parameters must be in the primary  * 00019900
*                        address space.                               * 00020000
*                                                                     * 00020100
*                                                                     * 00020200
*                                                                     * 00020300
*01* PROGRAMMING REQUIREMENTS:                                        * 00020400
*                                                                     * 00020500
*    The caller must include the IHAPSA, CVT, IHAECVT, and IHATEDS    * 00020600
*    macros.  Note that the IHATEDS macro has equate symbols for the  * 00020700
*    return and reason codes, and for the length of the WorkArea.     * 00020800
*                                                                     * 00020900
*01* RESTRICTIONS:                                                    * 00021000
*                                                                     * 00021100
*    None                                                             * 00021200
*                                                                     * 00021300
*01* INPUT REGISTER INFORMATION:                                      * 00021400
*                                                                     * 00021500
*    Before issuing the IEATEDS macro, the caller must ensure that    * 00021600
*    general register 13 contains the address of a 216 byte save      * 00021700
*    area.  The save area must be in primary storage in the first 2G  * 00021800
*    of storage.  The caller does not have to place any information   * 00021900
*    into any other general purpose register (GPR) unless using it in * 00022000
*    register notation for a particular parameter, or using it as a   * 00022100
*    base register.                                                   * 00022200
*                                                                     * 00022300
*01* OUTPUT REGISTER INFORMATION:                                     * 00022400
*                                                                     * 00022500
*    When control returns to the caller, the GPRs contain:            * 00022600
*                                                                     * 00022700
*                                                                     * 00022800
*    REGISTER    CONTENTS                                             * 00022900
*                                                                     * 00023000
*    0           Reason Code if GPR15 is not zero.                    * 00023100
*                                                                     * 00023200
*    1           Used as a work register by the system                * 00023300
*                                                                     * 00023400
*    2-13        Unchanged                                            * 00023500
*                                                                     * 00023600
*    14          Used as a work register by the system                * 00023700
*                                                                     * 00023800
*    15          Return code                                          * 00023900
*                                                                     * 00024000
*                                                                     * 00024100
*                                                                     * 00024200
*    When control returns to the caller, the ARs contain:             * 00024300
*                                                                     * 00024400
*                                                                     * 00024500
*    REGISTER    CONTENTS                                             * 00024600
*                                                                     * 00024700
*    0-1         Used as work registers by the system                 * 00024800
*                                                                     * 00024900
*    2-13        Unchanged                                            * 00025000
*                                                                     * 00025100
*    14-15       Used as work registers by the system                 * 00025200
*                                                                     * 00025300
*                                                                     * 00025400
*                                                                     * 00025500
*    Some callers depend on register contents remaining the same      * 00025600
*    before and after issuing a service.  If the system changes the   * 00025700
*    contents of registers on which the caller depends, the caller    * 00025800
*    must save them before issuing the service, and restore them      * 00025900
*    after the system returns control.                                * 00026000
*                                                                     * 00026100
*01* PERFORMANCE IMPLICATIONS:                                        * 00026200
*    None.                                                            * 00026300
*                                                                     * 00026400
*01* SYNTAX:                                                          * 00026500
*                                                                     * 00026600
*Ýxlabel¨  IEATEDS  Ð  REQUEST=REGISTER                               * 00026700
*                   !     ,COMPNAME=xcompname                         * 00026800
*                   !     ,MAXEVENTS=xmaxevents                       * 00026900
*                   !     ,TEDTOKEN=xtedtoken                         * 00027000
*                   ¿ ,REQUEST=RECORD                                 * 00027100
*                         ,TEDTOKEN=xtedtoken                         * 00027200
*                       Ð ,EVENTTYPE=START                            * 00027300
*                       Ô ,EVENTTYPE=MID                              * 00027400
*                       ¿ ,EVENTTYPE=END                              * 00027500
*                         ,EVENTTHREAD=xeventthread                   * 00027600
*                         ,EVENTDESC=xeventdesc                       * 00027700
*                         ,MODNAME=xmodname                           * 00027800
*                         ,MODLEVEL=xmodlevel                         * 00027900
*                        Ý,USERDATA                                   * 00028000
*                                   =»(xuserdataÝ,xuserdata...¨)!NO_U * 00028100
*                                   SERDATAº¨                         * 00028200
*                     ,WORKAREA=xworkarea                             * 00028300
*                    Ý,RETCODE=xretcode¨                              * 00028400
*                    Ý,RSNCODE=xrsncode¨                              * 00028500
*                    Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨          * 00028600
*                   ÐÝ,MF=S¨                                          * 00028700
*                   ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                   * 00028800
*                   ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                     * 00028900
*                                                                     * 00029000
*                                                                     * 00029100
*      Where:                                                         * 00029200
*                                                                     * 00029300
*                                                                     * 00029400
*      Ýxlabel¨                                                       * 00029500
*          is an optional symbol, starting in column 1, that is the   * 00029600
*          name on the IEATEDS macro invocation.  The name must       * 00029700
*          conform to the rules for an ordinary assembler language    * 00029800
*          symbol.                                                    * 00029900
*          DEFAULT: No name.                                          * 00030000
*                                                                     * 00030100
*                                                                     * 00030200
*                                                                     * 00030300
*                                                                     * 00030400
*      REQUEST=»REGISTER!RECORDº                                      * 00030500
*          is a required keyword input that indicates which service   * 00030600
*          to perform.                                                * 00030700
*                                                                     * 00030800
*                                                                     * 00030900
*          REQUEST=REGISTER                                           * 00031000
*              Register the user for the Timed Event Data service.    * 00031100
*                                                                     * 00031200
*                                                                     * 00031300
*              COMPNAME=xcompname                                     * 00031400
*                  is the name (RS-type), or address in register      * 00031500
*                  (2)-(12), of a required 32 character input that    * 00031600
*                  specifies the component name that is registering.  * 00031700
*                  A mixed case value is supported.                   * 00031800
*                                                                     * 00031900
*                                                                     * 00032000
*                                                                     * 00032100
*                                                                     * 00032200
*              MAXEVENTS=xmaxevents                                   * 00032300
*                  is the name (RS-type), or address in register      * 00032400
*                  (2)-(12), of a required fullword input that        * 00032500
*                  specifies the maximum number of events that will   * 00032600
*                  be recorded. This value will be used to determine  * 00032700
*                  the amount of storage to be allocated for the      * 00032800
*                  Timed Event Data Table for recording the events.   * 00032900
*                  The Timed Event Data Table size will be capped at  * 00033000
*                  2M bytes, meaning that the value specified for     * 00033100
*                  MaxEvents will be reduced as necessary to a value  * 00033200
*                  where the Timed Event Data Table will be created   * 00033300
*                  within 2M bytes of storage.  A return code and     * 00033400
*                  reason code will be returned if the MaxEvents was  * 00033500
*                  reduced, unless some other more serious error is   * 00033600
*                  returned.                                          * 00033700
*                                                                     * 00033800
*                  Note also that all Timed Event Data Table storage  * 00033900
*                  is capped at 2G bytes, and any attempt to REGISTER * 00034000
*                  once the 2G limit is reached will be rejected with * 00034100
*                  a return code and reason code. No attempt will be  * 00034200
*                  made to reduce the MaxEvents in order to build a   * 00034300
*                  Timed Event Data Table any smaller than 2M just to * 00034400
*                  get it to fit into the remaining storage that is   * 00034500
*                  near the 2G limit.  Note also that there may be    * 00034600
*                  additional system controls or environmental        * 00034700
*                  conditions that limit this size to something       * 00034800
*                  smaller than 2G bytes.                             * 00034900
*                                                                     * 00035000
*                  The number of events that will fit into a 2M Timed * 00035100
*                  Event Data Table is a function of the size of each * 00035200
*                  entry. Since the entry size could grow over time,  * 00035300
*                  the number of events that will fit could be        * 00035400
*                  reduced in the future.  This makes it difficult to * 00035500
*                  accurately state the maximum number of events a    * 00035600
*                  Timed Event Data Table will hold, but a maximum of * 00035700
*                  at least 2000 events is guaranteed.                * 00035800
*                                                                     * 00035900
*                  Note that any attempt to record events beyond the  * 00036000
*                  resultant MaxEvents will not be recorded, but will * 00036100
*                  be counted as an overflow count to assist in       * 00036200
*                  determining whether the number of RECORD requests  * 00036300
*                  should be decreased or MaxEvents should be         * 00036400
*                  increased (if not already at or above the maximum  * 00036500
*                  for a 2M Timed Event Data Table). The overflow     * 00036600
*                  count, requested MaxEvents, resultant MaxEvents,   * 00036700
*                  and the size of the resultant Timed Event Data     * 00036800
*                  Table can be found in the Timed Event Data Report  * 00036900
*                  which is described in the macro example section.   * 00037000
*                                                                     * 00037100
*                                                                     * 00037200
*                                                                     * 00037300
*                                                                     * 00037400
*              TEDTOKEN=xtedtoken                                     * 00037500
*                  is the name (RS-type), or address in register      * 00037600
*                  (2)-(12), of a required 16 character output whose  * 00037700
*                  returned value must be provided as input on        * 00037800
*                  subsequent REQUEST=RECORD calls.                   * 00037900
*                                                                     * 00038000
*                                                                     * 00038100
*                                                                     * 00038200
*          REQUEST=RECORD                                             * 00038300
*              Record the Timed Event Data.                           * 00038400
*                                                                     * 00038500
*                                                                     * 00038600
*              TEDTOKEN=xtedtoken                                     * 00038700
*                  is the name (RS-type), or address in register      * 00038800
*                  (2)-(12), of a required 16 character input that is * 00038900
*                  used to identify the Timed Event Data collection   * 00039000
*                  to which this event shall be placed. This must be  * 00039100
*                  the TedToken that was returned as output from the  * 00039200
*                  Register request.                                  * 00039300
*                                                                     * 00039400
*                                                                     * 00039500
*                                                                     * 00039600
*                                                                     * 00039700
*              EVENTTYPE=»START!MID!ENDº                              * 00039800
*                  is a required keyword input that indicates the     * 00039900
*                  type of event to record.                           * 00040000
*                                                                     * 00040100
*                                                                     * 00040200
*                  EVENTTYPE=START                                    * 00040300
*                      The event is the start of a series of events.  * 00040400
*                                                                     * 00040500
*                  EVENTTYPE=MID                                      * 00040600
*                      The event is one of a series of events. This   * 00040700
*                      mid event is matched to the start event whose  * 00040800
*                      EventThread matches the EventThread provided   * 00040900
*                      on this request.                               * 00041000
*                                                                     * 00041100
*                  EVENTTYPE=END                                      * 00041200
*                      The event is the last of a series of events.   * 00041300
*                      This end event is matched to the start event   * 00041400
*                      whose EventThread matches the EventThread      * 00041500
*                      provided on this request.                      * 00041600
*                                                                     * 00041700
*                                                                     * 00041800
*                                                                     * 00041900
*                                                                     * 00042000
*                                                                     * 00042100
*                                                                     * 00042200
*              EVENTTHREAD=xeventthread                               * 00042300
*                  is the name (RS-type), or address in register      * 00042400
*                  (2)-(12), of a required 8 character input that is  * 00042500
*                  used to provide an association for a series of     * 00042600
*                  events consisting of a start event, zero or more   * 00042700
*                  mid events, and an end event.  This can be any     * 00042800
*                  character or hex value that the component finds    * 00042900
*                  useful.  Using a unique value for each series of   * 00043000
*                  associated start, mid, and end events will help in * 00043100
*                  understanding the flow and timing of the events.   * 00043200
*                  The Timed Event Data report will include both the  * 00043300
*                  hex and the EBCDIC values for the thread.  See the * 00043400
*                  macro example section for more information         * 00043500
*                  regarding the Timed Event Data report.             * 00043600
*                                                                     * 00043700
*                                                                     * 00043800
*                                                                     * 00043900
*                                                                     * 00044000
*              EVENTDESC=xeventdesc                                   * 00044100
*                  is the name (RS-type), or address in register      * 00044200
*                  (2)-(12), of a required 32 character input that is * 00044300
*                  used to describe the event. A mixed case value is  * 00044400
*                  supported.                                         * 00044500
*                                                                     * 00044600
*                                                                     * 00044700
*                                                                     * 00044800
*                                                                     * 00044900
*              MODNAME=xmodname                                       * 00045000
*                  is the name (RS-type), or address in register      * 00045100
*                  (2)-(12), of a required 8 character input that     * 00045200
*                  specifies the module name that is recording this   * 00045300
*                  event.                                             * 00045400
*                                                                     * 00045500
*                                                                     * 00045600
*                                                                     * 00045700
*                                                                     * 00045800
*              MODLEVEL=xmodlevel                                     * 00045900
*                  is the name (RS-type), or address in register      * 00046000
*                  (2)-(12), of a required 8 character input that     * 00046100
*                  specifies the module level that is recording this  * 00046200
*                  event.                                             * 00046300
*                                                                     * 00046400
*                                                                     * 00046500
*                                                                     * 00046600
*                                                                     * 00046700
*              ÝUSERDATA=»(xuserdataÝ,xuserdata...¨)!NO_USERDATAº¨    * 00046800
*                                                                     * 00046900
*                xuserdata                                            * 00047000
*                  is a group of name(s) (RS-type) of an optional     * 00047100
*                  character input(s) consisting of a comma delimited * 00047200
*                  list of one or more variable names with a combined * 00047300
*                  length (determined using L'varname for each        * 00047400
*                  variable) that does not exceed a total of 16       * 00047500
*                  bytes. UserData may be any data that the user      * 00047600
*                  finds helpful in understanding the timed events.   * 00047700
*                  Note that the values must be simple items - for    * 00047800
*                  example, using substringed references is not       * 00047900
*                  allowed.                                           * 00048000
*                  DEFAULT: NO_USERDATA                               * 00048100
*                                                                     * 00048200
*                                                                     * 00048300
*                                                                     * 00048400
*                                                                     * 00048500
*                                                                     * 00048600
*                                                                     * 00048700
*                                                                     * 00048800
*                                                                     * 00048900
*      WORKAREA=xworkarea                                             * 00049000
*          is the name (RS-type) of a required character input that   * 00049100
*          specifies a work area on a double word boundary to be used * 00049200
*          by the Timed Event Data service.  The work area must be of * 00049300
*          size IEATEDS_WorkAreaSize (in macro IHATEDS) and must      * 00049400
*          reside within the first 2G of primary storage in any key.  * 00049500
*                                                                     * 00049600
*                                                                     * 00049700
*                                                                     * 00049800
*                                                                     * 00049900
*      ÝRETCODE=xretcode¨                                             * 00050000
*          is the name (RS-type) of an optional fullword output       * 00050100
*          variable, or register (2)-(12) or (15), into which the     * 00050200
*          return code is to be copied from GPR 15.  If you specify   * 00050300
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00050400
*          the value will be left in GPR 15.                          * 00050500
*                                                                     * 00050600
*                                                                     * 00050700
*                                                                     * 00050800
*                                                                     * 00050900
*      ÝRSNCODE=xrsncode¨                                             * 00051000
*          is the name (RS-type) of an optional fullword output       * 00051100
*          variable into which the reason code is to be copied from   * 00051200
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00051300
*          R0 (within or without parentheses), the value will be left * 00051400
*          in GPR 0.                                                  * 00051500
*                                                                     * 00051600
*                                                                     * 00051700
*                                                                     * 00051800
*                                                                     * 00051900
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00052000
*          is an optional byte input decimal value in the "0-0" range * 00052100
*          that specifies the macro version.  PLISTVER is the only    * 00052200
*          key allowed on the list form of MF and determines which    * 00052300
*          parameter list is generated.  Note that MAX may be         * 00052400
*          specified instead of a number, and the parameter list will * 00052500
*          be of the largest size currently supported. This size may  * 00052600
*          grow from release to release (thus possibly affecting the  * 00052700
*          amount of storage needed by your program).  If your        * 00052800
*          program can tolerate this, IBM recommends that you always  * 00052900
*          specify MAX when creating the list form parameter list as  * 00053000
*          that will ensure that the list form parameter list is      * 00053100
*          always long enough to hold whatever parameters might be    * 00053200
*          specified on the execute form.                             * 00053300
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00053400
*          default is the lowest version which allows all of the      * 00053500
*          parameters specified on the invocation to be processed.    * 00053600
*                                                                     * 00053700
*                                                                     * 00053800
*                                                                     * 00053900
*                                                                     * 00054000
*      ÝMF=»S!L!Eº¨                                                   * 00054100
*          is an optional keyword input which specifies the macro     * 00054200
*          form.                                                      * 00054300
*          DEFAULT: S                                                 * 00054400
*                                                                     * 00054500
*                                                                     * 00054600
*          ÝMF=S¨                                                     * 00054700
*              specifies the standard form of the macro.  The "S"     * 00054800
*              form generates code to put the parameters into an      * 00054900
*              in-line parameter list and invoke the desired service. * 00055000
*              Full checking for required macro keys is done along    * 00055100
*              with supplying defaults for omitted optional           * 00055200
*              parameters.                                            * 00055300
*                                                                     * 00055400
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00055500
*              specifies the list form of the macro.  The "L" form    * 00055600
*              defines an area to be used for the parameter list.     * 00055700
*              Only the PLISTVER key may be specified on the          * 00055800
*              invocation.  All other macro parameters are flagged as * 00055900
*              errors.  If PLISTVER is not specified, the original    * 00056000
*              parameter list definition is used.                     * 00056100
*                                                                     * 00056200
*            ,xmfctrl                                                 * 00056300
*              is a required input.  It is the name of a storage area * 00056400
*              for the parameter list.                                * 00056500
*                                                                     * 00056600
*            »,xmfattr!0Dº                                            * 00056700
*              is an optional 60 character input string that varies   * 00056800
*              from 1 to 60 characters. Use it to force boundary      * 00056900
*              alignment of the parameter list. Use only 0F or 0D.    * 00057000
*              DEFAULT: 0D which forces the parameter list to a       * 00057100
*              doubleword boundary.                                   * 00057200
*                                                                     * 00057300
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00057400
*              specifies the execute form of the macro.  The "E" form * 00057500
*              generates code to put the parameters into the          * 00057600
*              parameter list specified by xmfctrl and provides full  * 00057700
*              syntax checking with default setting.                  * 00057800
*                                                                     * 00057900
*            ,xmfctrl                                                 * 00058000
*              is a required input.  It is the name (RS-type), or     * 00058100
*              address in register (1)-(12), of a storage area for    * 00058200
*              the parameter list.                                    * 00058300
*                                                                     * 00058400
*            »,COMPLETEº                                              * 00058500
*              is an optional keyword input which specifies the       * 00058600
*              degree of macro parameter syntax checking.             * 00058700
*              DEFAULT: COMPLETE                                      * 00058800
*                                                                     * 00058900
*                                                                     * 00059000
*              COMPLETE                                               * 00059100
*                  Checking for required macro keys is done and       * 00059200
*                  defaults are supplied for omitted optional         * 00059300
*                  parameters.                                        * 00059400
*                                                                     * 00059500
*                                                                     * 00059600
*                                                                     * 00059700
*                                                                     * 00059800
*                                                                     * 00059900
*                                                                     * 00060000
*                                                                     * 00060100
*01* RETURN CODES:                                                    * 00060200
*                                                                     * 00060300
*                                                                     * 00060400
*                 Macro IHATEDS provides equate symbols for the       * 00060500
*                 return and reason codes. Note that the return and   * 00060600
*                 reason codes described below are hexadecimal        * 00060700
*                 values.                                             * 00060800
*                                                                     * 00060900
*                                                                     * 00061000
*                                                                     * 00061100
*       0         Name: IEATEDSRc_OK                                  * 00061200
*                                                                     * 00061300
*                 Meaning:  IEATEDS request was successful.           * 00061400
*                                                                     * 00061500
*                 Action: None required.                              * 00061600
*                                                                     * 00061700
*                                                                     * 00061800
*                 REGISTER  MEANING: The Timed Event Data Table was   * 00061900
*                           obtained and initialized and is ready for * 00062000
*                           events to be recorded.                    * 00062100
*                                                                     * 00062200
*                           ACTION: None required.                    * 00062300
*                                                                     * 00062400
*                 RECORD    MEANING: The event was placed into the    * 00062500
*                           Timed Event Data Table.                   * 00062600
*                                                                     * 00062700
*                           ACTION: None required.                    * 00062800
*                                                                     * 00062900
*                                                                     * 00063000
*                                                                     * 00063100
*                                                                     * 00063200
*                                                                     * 00063300
*       4         Name: IEATEDSRc_Warn                                * 00063400
*                                                                     * 00063500
*                 Meaning: Warning                                    * 00063600
*                                                                     * 00063700
*                 Action:  Refer to the action provided with the      * 00063800
*                 specific reason code.                               * 00063900
*                                                                     * 00064000
*                                                                     * 00064100
*                 HEX REASON  MEANING/ACTION                          * 00064200
*                 CODE                                                * 00064300
*                                                                     * 00064400
*                 00000401    Name: IEATEDSRsn_TedTableFull           * 00064500
*                                                                     * 00064600
*                             Meaning: An IEATEDS RECORD request was  * 00064700
*                             unable to place the new entry into the  * 00064800
*                             caller's Timed Event Data Table because * 00064900
*                             the Timed Event Data Table is full. The * 00065000
*                             Timed Event Data Table overflow count   * 00065100
*                             has been incremented.                   * 00065200
*                                                                     * 00065300
*                             Action: Try increasing the value        * 00065400
*                             specified for MaxEvents on the IEATEDS  * 00065500
*                             REGISTER request. Note, however, that   * 00065600
*                             there is a limit of 2M bytes of storage * 00065700
*                             for each Timed Event Data table, and an * 00065800
*                             overall limit of 2G bytes of storage    * 00065900
*                             for all of the Timed Event Data Tables  * 00066000
*                             in the system. You can execute the      * 00066100
*                             Timed Event Data Report REXX Exec to    * 00066200
*                             examine the overflow count to determine * 00066300
*                             the number of additional entries        * 00066400
*                             required to allow all of the RECORD     * 00066500
*                             requests to succeed. The Timed Event    * 00066600
*                             Data Report will also show the          * 00066700
*                             requested MaxEvents, the resultant      * 00066800
*                             MaxEvents, and the size of the Timed    * 00066900
*                             Event Data Table. If the size of the    * 00067000
*                             Timed Event Data table is already at    * 00067100
*                             the 2M byte limit, try reducing the     * 00067200
*                             number of IEATEDS RECORD requests.      * 00067300
*                                                                     * 00067400
*                 00000402    Name: IEATEDSRsn_MaxEventsReduced       * 00067500
*                                                                     * 00067600
*                             Meaning: An IEATEDS REGISTER request    * 00067700
*                             reduced the specified MaxEvents to      * 00067800
*                             allow the Timed Event Data Table to be  * 00067900
*                             built within the 2M Byte storage limit. * 00068000
*                                                                     * 00068100
*                             Action: Execute the Timed Event Data    * 00068200
*                             Report REXX Exec and examine the        * 00068300
*                             overflow count to determine whether the * 00068400
*                             reduced MaxEvents has resulted in some  * 00068500
*                             RECORD requests not being recorded. If  * 00068600
*                             so, consider reducing the number of     * 00068700
*                             RECORD requests to a value that is no   * 00068800
*                             greater than the reduced MaxEvents      * 00068900
*                             (shown in the report as the resultant   * 00069000
*                             MaxEvents).                             * 00069100
*                                                                     * 00069200
*                                                                     * 00069300
*                                                                     * 00069400
*                                                                     * 00069500
*                                                                     * 00069600
*       8         Name: IEATEDSRc_InvParm                             * 00069700
*                                                                     * 00069800
*                 Meaning:  IEATEDS request specified parameters that * 00069900
*                 are not valid.                                      * 00070000
*                                                                     * 00070100
*                 Action:  Refer to the action provided with the      * 00070200
*                 specific reason code.                               * 00070300
*                                                                     * 00070400
*                                                                     * 00070500
*                 HEX REASON  MEANING/ACTION                          * 00070600
*                 CODE                                                * 00070700
*                                                                     * 00070800
*                 00000801    Name: IEATEDSRsn_BadTedToken            * 00070900
*                                                                     * 00071000
*                             Meaning: An IEATEDS RECORD request      * 00071100
*                             supplied a TedToken value that was      * 00071200
*                             unable to locate a valid Timed Event    * 00071300
*                             Data Table.  The RECORD request was not * 00071400
*                             completed.                              * 00071500
*                                                                     * 00071600
*                             Action: Ensure that the TedToken        * 00071700
*                             returned from the REGISTER request is   * 00071800
*                             not corrupted and is provided on the    * 00071900
*                             subsequent IEATEDS RECORD requests.     * 00072000
*                             Note that this error will also occur in * 00072100
*                             the case of a Timed Event Data Table    * 00072200
*                             being corrupted or the storage becoming * 00072300
*                             inaccessible.  Execute the Timed Event  * 00072400
*                             Data Report REXX Exec (described in the * 00072500
*                             macro example section) to see whether   * 00072600
*                             the Timed Event Data Table in question  * 00072700
*                             was able to be located. If so, then the * 00072800
*                             problem is with the specified TedToken. * 00072900
*                                                                     * 00073000
*                                                                     * 00073100
*                                                                     * 00073200
*                                                                     * 00073300
*                                                                     * 00073400
*       C         Name: IEATEDSRc_Env                                 * 00073500
*                                                                     * 00073600
*                 Meaning: Environmental error                        * 00073700
*                                                                     * 00073800
*                 Action:  Refer to the action provided with the      * 00073900
*                 specific reason code.                               * 00074000
*                                                                     * 00074100
*                                                                     * 00074200
*                 HEX REASON  MEANING/ACTION                          * 00074300
*                 CODE                                                * 00074400
*                                                                     * 00074500
*                 00000C01    Name: IEATEDSRsn_NoTedTableStorage      * 00074600
*                                                                     * 00074700
*                             Meaning: An IEATEDS REGISTER request    * 00074800
*                             was unable to obtain storage for the    * 00074900
*                             Timed Event Data Table.                 * 00075000
*                                                                     * 00075100
*                             Action: Ensure that the system has      * 00075200
*                             enough above the bar common storage to  * 00075300
*                             satisfy a request for a Timed Event     * 00075400
*                             Data Table of the size being requested. * 00075500
*                             Note that the maximum size allowed for  * 00075600
*                             a Timed Event Data Table is 2M byte,    * 00075700
*                             and the maximum size for all Timed      * 00075800
*                             Event Data Table storage to 2G bytes.   * 00075900
*                             Note also that there may be additional  * 00076000
*                             system controls or environmental        * 00076100
*                             conditions that limit this size to      * 00076200
*                             something smaller than 2G bytes.        * 00076300
*                                                                     * 00076400
*                 00000C02    Name:                                   * 00076500
*                             IEATEDSRsn_NoTedVectorTableStorage      * 00076600
*                                                                     * 00076700
*                             Meaning: An IEATEDS REGISTER request    * 00076800
*                             was unable to obtain storage for a      * 00076900
*                             Timed Event Data Vector Table.          * 00077000
*                                                                     * 00077100
*                             Action: Ensure that the system has      * 00077200
*                             enough above the bar common storage to  * 00077300
*                             satisfy a request for a Timed Event     * 00077400
*                             Data Vector Table which has a size of   * 00077500
*                             4k.                                     * 00077600
*                                                                     * 00077700
*                                                                     * 00077800
*                                                                     * 00077900
*                                                                     * 00078000
*                                                                     * 00078100
*       10        Name: IEATEDSRc_CompError                           * 00078200
*                                                                     * 00078300
*                 Meaning:  Unexpected failure.                       * 00078400
*                                                                     * 00078500
*                 Action:  Contact your system programmer.            * 00078600
*                                                                     * 00078700
*                                                                     * 00078800
*                 HEX REASON  MEANING/ACTION                          * 00078900
*                 CODE                                                * 00079000
*                                                                     * 00079100
*                 00001001    Name: IEATEDSRsn_UnexpectedError        * 00079200
*                                                                     * 00079300
*                             Meaning: An IEATEDS REGISTER or RECORD  * 00079400
*                             request had an unexpected error.  The   * 00079500
*                             REGISTER of RECORD request completion   * 00079600
*                             status is unknown.                      * 00079700
*                                                                     * 00079800
*                             Action:  The system programmer should   * 00079900
*                             gather any diagnostic information that  * 00080000
*                             was produced and contact IBM support.   * 00080100
*                                                                     * 00080200
*                                                                     * 00080300
*                                                                     * 00080400
*                                                                     * 00080500
*                                                                     * 00080600
*                                                                     * 00080700
*01* REASON CODES:                                                    * 00080800
*                                                                     * 00080900
*       Reason codes, as appropriate, are defined under their         * 00081000
*       corresponding return code.                                    * 00081100
*                                                                     * 00081200
*01* MODULE TYPE:  ASSEM MACRO                                        * 00081300
*                                                                     * 00081400
*02*   PROCESSOR:  ASSEM                                              * 00081500
*                                                                     * 00081600
*01* COMPONENT:  SC1C9                                                * 00081700
*                                                                     * 00081800
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00081900
*                                                                     * 00082000
*01* ABEND CODES:                                                     * 00082100
*                                                                     * 00082200
*                                                                     * 00082300
*       0C2       MEANING:  Privileged-Operation exception.  A        * 00082400
*                 problem state caller attempted to use IEATEDS.      * 00082500
*                                                                     * 00082600
*                 ACTION:  Get into supervisor state before invoking  * 00082700
*                 the function, perhaps by the MODESET macro.         * 00082800
*                                                                     * 00082900
*                                                                     * 00083000
*                                                                     * 00083100
*01* MACRO USAGE NOTES:                                               * 00083200
*                                                                     * 00083300
*                                                                     * 00083400
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00083500
*        global macro variable.  Any value other than 'NO' will       * 00083600
*        result in the macro expansion being printed.  The default is * 00083700
*        'YES'.  The following examples illustrate how the ZPRINT     * 00083800
*        variable should be set.                                      * 00083900
*                                                                     * 00084000
*                    GBLC &ZPRINT                                     * 00084100
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00084200
*                                                                     * 00084300
*                                                                     * 00084400
*    2.  All keys currently contained in the IEATEDS macro correspond * 00084500
*        to  version 0.  If you specify PLISTVER, use a value of 0 or * 00084600
*        MAX.                                                         * 00084700
*                                                                     * 00084800
*                                                                     * 00084900
*    3.  The  collected  data  for the Timed Event Data Tables can be * 00085000
*        written  to  a data set using the IBM supplied IEAVFTED REXX * 00085100
*        Exec. Note that this data could be viewed by anyone who runs * 00085200
*        the  REXX  Exec  -  care  must  be  taken  to ensure that no * 00085300
*        sensitive   data   are  recorded  with  the  IEATEDS  RECORD * 00085400
*        requests.                                                    * 00085500
*                                                                     * 00085600
*                                                                     * 00085700
*                                                                     * 00085800
*01* EXAMPLES:                                                        * 00085900
*                                                                     * 00086000
*    Example 1                                                        * 00086100
*                                                                     * 00086200
*    Operation:                                                       * 00086300
*                                                                     * 00086400
*    The following is an example of invoking IEATEDS to:              * 00086500
*                                                                     * 00086600
*                                                                     * 00086700
*    o   Invoke IEATEDS to REGISTER                                   * 00086800
*                                                                     * 00086900
*    o   Invoke IEATEDS to RECORD a Start event                       * 00087000
*                                                                     * 00087100
*    o   Invoke IEATEDS to RECORD a Mid event                         * 00087200
*                                                                     * 00087300
*    o   Invoke IEATEDS to RECORD an End event                        * 00087400
*                                                                     * 00087500
*                                                                     * 00087600
*                                                                     * 00087700
*    The code is as follows.                                          * 00087800
*                                                                     * 00087900
*               TITLE 'Sample code to register/record Timed Event Dat * 00088000
*      a'                                                             * 00088100
*      TEDSAMPL CSECT                                                 * 00088200
*      TEDSAMPL AMODE  31                                             * 00088300
*      TEDSAMPL RMODE  ANY                                            * 00088400
*      */* START OF SPECIFICATIONS *********************************  * 00088500
*      *                                                              * 00088600
*      *01* MODULE-NAME = TEDSAMPL                                    * 00088700
*      *                                                              * 00088800
*      *02*   DESCRIPTIVE-NAME = Sample program to register and       * 00088900
*      *                         record Timed Event Data.             * 00089000
*      *01* DISCLAIMER =                                              * 00089100
*      *      This sample source is provided for tutorial purposes    * 00089200
*      *      only. A complete handling of error conditions has not   * 00089300
*      *      been shown or attempted, and this source has not been   * 00089400
*      *      submitted to formal IBM testing. This source is         * 00089500
*      *      distributed on an 'as is' basis without any warranties  * 00089600
*      *      either expressed or implied.                            * 00089700
*      *                                                              * 00089800
*      **** END OF SPECIFICATIONS *********************************/  * 00089900
*               EJECT                                                 * 00090000
*               BAKR  R14,0           Save on stack,return using r14  * 00090100
*               BASR  12,0                                            * 00090200
*               USING START,R12                                       * 00090300
*      START    EQU   *                                               * 00090400
*               MODID ,                                               * 00090500
*      *************************************************************  * 00090600
*      *        START OF CODE                                         * 00090700
*      *************************************************************  * 00090800
*               STORAGE OBTAIN,LENGTH=DynAreaLen,Addr=(R1),COND=NO, * * 00090900
*                     LOC=ANY,SP=240                                  * 00091000
*               LR R13,R1                                             * 00091100
*               USING DynArea,R13                                     * 00091200
*      *************************************************************  * 00091300
*      *        Register for Timed Event Data Recording               * 00091400
*      *************************************************************  * 00091500
*               IEATEDS Request=REGISTER,                           * * 00091600
*                     CompName==CL32'TheProduct',                   * * 00091700
*                     MaxEvents==F'64',                             * * 00091800
*                     TedToken=TedToken,                            * * 00091900
*                     WorkArea=TedWorkArea,                         * * 00092000
*                     RetCode=RetCode,                              * * 00092100
*                     RsnCode=RsnCode,                              * * 00092200
*                     MF=(E,MyTedPLD,COMPLETE)                        * 00092300
*      *                                                              * 00092400
*      * Place code to check return/reason codes here.                * 00092500
*      *                                                              * 00092600
*      *************************************************************  * 00092700
*      *        Record Timed Event Data for Event Thread SAMPLE       * 00092800
*      *************************************************************  * 00092900
*               LA    R2,1                                            * 00093000
*               ST    R2,DATA1                                        * 00093100
*               MVC   DATA2(4),=CL4' RCD'                             * 00093200
*               IEATEDS Request=RECORD,                             * * 00093300
*                     EventType=START,                              * * 00093400
*                     EventThread==CL8'SAMPLE',                     * * 00093500
*                     EventDesc==CL32'Timed Event Data sample',     * * 00093600
*                     UserData=(Data1,Data2),                       * * 00093700
*                     ModName==CL8'TEDSAMPL',                       * * 00093800
*                     ModLevel==CL8'Level101',                      * * 00093900
*                     TedToken=TedToken,                            * * 00094000
*                     WorkArea=TedWorkArea,                         * * 00094100
*                     RetCode=RetCode,                              * * 00094200
*                     RsnCode=RsnCode,                              * * 00094300
*                     MF=(E,MyTedPLD,COMPLETE)                        * 00094400
*      *                                                              * 00094500
*      * Place code to check return/reason codes here.                * 00094600
*      *                                                              * 00094700
*      *************************************************************  * 00094800
*      *        Record Mid Timed Event Data                           * 00094900
*      *************************************************************  * 00095000
*               LA    R2,2                                            * 00095100
*               ST    R2,DATA1                                        * 00095200
*               MVC   DATA2(4),=CL4'XYZ1'                             * 00095300
*               MVC   DATA3(6),=CL6'FUNC 1'                           * 00095400
*               IEATEDS Request=RECORD,                             * * 00095500
*                     EventType=MID,                                * * 00095600
*                     EventThread==CL8'SAMPLE',                     * * 00095700
*                     EventDesc==CL32'Before doing XYZ',            * * 00095800
*                     UserData=(Data1,Data2,Data3),                 * * 00095900
*                     ModName==CL8'TEDSAMPL',                       * * 00096000
*                     ModLevel==CL8'Level101',                      * * 00096100
*                     TedToken=TedToken,                            * * 00096200
*                     WorkArea=TedWorkArea,                         * * 00096300
*                     RetCode=RetCode,                              * * 00096400
*                     RsnCode=RsnCode,                              * * 00096500
*                     MF=(E,MyTedPLD,COMPLETE)                        * 00096600
*      *                                                              * 00096700
*      * Place code to check return/reason codes here.                * 00096800
*      *                                                              * 00096900
*      *************************************************************  * 00097000
*      *        Record Last Timed Event Data for this Thread          * 00097100
*      *************************************************************  * 00097200
*               LA    R2,3                                            * 00097300
*               ST    R2,DATA1                                        * 00097400
*               MVC   DATA2(4),=CL4'XYZ1'                             * 00097500
*               MVC   DATA3(6),=CL6'FUNC 2'                           * 00097600
*               IEATEDS Request=RECORD,                             * * 00097700
*                     EventType=END,                                * * 00097800
*                     EventThread==CL8'SAMPLE',                     * * 00097900
*                     EventDesc==CL32'After doing XYZ',             * * 00098000
*                     UserData=(Data1,Data2,Data3),                 * * 00098100
*                     ModName==CL8'TEDSAMPL',                       * * 00098200
*                     ModLevel==CL8'Level101',                      * * 00098300
*                     TedToken=TedToken,                            * * 00098400
*                     WorkArea=TedWorkArea,                         * * 00098500
*                     RetCode=RetCode,                              * * 00098600
*                     RsnCode=RsnCode,                              * * 00098700
*                     MF=(E,MyTedPLD,COMPLETE)                        * 00098800
*      *                                                              * 00098900
*      * Place code to check return/reason codes here.                * 00099000
*      *                                                              * 00099100
*      *************************************************************  * 00099200
*      *        Free Dynamic Area and Return                          * 00099300
*      *************************************************************  * 00099400
*               LA    R0,DynAreaLen       Length of Dynamic Area      * 00099500
*               STORAGE RELEASE,LENGTH=(R0),ADDR=(R13),SP=240         * 00099600
*                                                                     * 00099700
*               PR                                                    * 00099800
*      *************************************************************  * 00099900
*      *        Dynamic Area                                          * 00100000
*      *************************************************************  * 00100100
*      DynArea   DSECT                                                * 00100200
*      SaveArea  DS    XL216                                          * 00100300
*      TedToken  DS    XL16           Timed Event Data Token          * 00100400
*      Data1     DS    F              One word                        * 00100500
*      Data2     DS    CL4            Four bytes                      * 00100600
*      Data3     DS    CL6            Six Bytes                       * 00100700
*      Data4     DS    CL2            Two Bytes                       * 00100800
*      RetCode   DS    F              Return Code from Timed Event  x * 00100900
*                                     Data Service                    * 00101000
*      RsnCode   DS    F              Reason Code from Timed Event  x * 00101100
*                                     Data Service                    * 00101200
*                DS    0D             Align TedWorkArea on dbl word   * 00101300
*      TedWorkArea DS  XL(IEATEDS_WORKAREASIZE)                       * 00101400
*                IEATEDS MF=(L,MyTedPLD)                              * 00101500
*      DynAreaLen EQU *-DynArea       Length of DynArea               * 00101600
*               IHATEDS               Constants and ret/rsn codes     * 00101700
*      *************************************************************  * 00101800
*      *        REGISTER EQUATES                                      * 00101900
*      *************************************************************  * 00102000
*               SPACE 1                                               * 00102100
*      R0       EQU   0                                               * 00102200
*      R1       EQU   1                                               * 00102300
*      R2       EQU   2                                               * 00102400
*      R3       EQU   3                                               * 00102500
*      R4       EQU   4                                               * 00102600
*      R5       EQU   5                                               * 00102700
*      R6       EQU   6                                               * 00102800
*      R7       EQU   7                                               * 00102900
*      R8       EQU   8                                               * 00103000
*      R9       EQU   9                                               * 00103100
*      R10      EQU   10                                              * 00103200
*      R11      EQU   11                                              * 00103300
*      R12      EQU   12                                              * 00103400
*      R13      EQU   13                                              * 00103500
*      R14      EQU   14                                              * 00103600
*      R15      EQU   15                                              * 00103700
*               EJECT                                                 * 00103800
*      ************************************************************** * 00103900
*      * Mappings                                                     * 00104000
*      ************************************************************** * 00104100
*               CVT DSECT=YES                                         * 00104200
*               IHAPSA DSECT=YES                                      * 00104300
*               IHAECVT                                               * 00104400
*               END                                                   * 00104500
*                                                                     * 00104600
*                                                                     * 00104700
*    TIMED EVENT DATA REPORT EXAMPLE INVOCATIONS                      * 00104800
*                                                                     * 00104900
*    EXAMPLE INVOCATIONS FOR TSO:                                     * 00105000
*                                                                     * 00105100
*    The following example invocation will produce a Timed Event Data * 00105200
*    Report  with  all  components  with  spreadsheet  data  with the * 00105300
*    default  spreadsheet  delimiter of a semicolon.  IBM may request * 00105400
*    that   this  data  be  sent  to  IBM  for  analysis.  Note  that * 00105500
*    output_data_set  must  be  the  name of a pre-allocated data set * 00105600
*    with an LRECL of 512 and a RECFM of V or VB.                     * 00105700
*                                                                     * 00105800
*    IEAVFTED DA('output_data_set')                                   * 00105900
*                                                                     * 00106000
*                                                                     * 00106100
*    The following example invocation will produce a Timed Event Data * 00106200
*    Report  for  component  ABC  with  spreadsheet  data  and with a * 00106300
*    spreadsheet  delimiter  of  a  question  mark.    Note  that the * 00106400
*    component name is not case sensitive.                            * 00106500
*                                                                     * 00106600
*    IEAVFTED DA('output_data_set(member)') COMPONENT(ABC) SS(?)      * 00106700
*                                                                     * 00106800
*                                                                     * 00106900
*    The  following invocation will produce a Timed Event Data Report * 00107000
*    with all components without the spreadsheet data:                * 00107100
*                                                                     * 00107200
*    IEAVFTED DA('output_data_set') NOSS                              * 00107300
*                                                                     * 00107400
*                                                                     * 00107500
*    The  following invocation will produce a Timed Event Data Report * 00107600
*    to  a  z/OS  UNIX  file for component ABC with spreadsheet data: * 00107700
*    Note  that the file name is case sensitive, the directories need * 00107800
*    not exist and COMP is abbreviated for COMPONENT.                 * 00107900
*                                                                     * 00108000
*    IEAVFTED PATH('/usr/ted_data/Performance_Data_For_System_XYZ')   * 00108100
*             COMP(ABC)                                               * 00108200
*                                                                     * 00108300
*                                                                     * 00108400
*    The following example JCL will run the IEAVFTED REXX exec in the * 00108500
*    TSO  background.  Note  that  the  SYSEXEC data set must have an * 00108600
*    LRECL of 80 and a RECFM of F or FB.                              * 00108700
*                                                                     * 00108800
*    //IEAVFTED JOB '123456,?',                                       * 00108900
*    // 'name',REGION=0M,                                             * 00109000
*    // MSGLEVEL=(1,1),CLASS=J,NOTIFY=name,                           * 00109100
*    // MSGCLASS=H                                                    * 00109200
*    //IEAVFTED EXEC PGM=IKJEFT01,ROLL=(NO,NO),DYNAMNBR=400,REGION=0M * 00109300
*    //************************************************************** * 00109400
*    //* Notes:                                                       * 00109500
*    //*  - The REXX compiler run-time libraries must be installed.   * 00109600
*    //*                                                              * 00109700
*    //*  - The data set containing the IEAVFTED exec                 * 00109800
*    //*    (SYS1.SBLSCLI0) must have an LRECL of 80 and a RECFM of   * 00109900
*    //*    F or FB.                                                  * 00110000
*    //************************************************************** * 00110100
*    //SYSEXEC DD DISP=SHR,DSN=SYS1.SBLSCLI0                          * 00110200
*    //SYSPRINT DD SYSOUT=*                                           * 00110300
*    //SYSTSPRT DD SYSOUT=*                                           * 00110400
*    //SYSTSIN DD *                                                   * 00110500
*    IEAVFTED DA('output_data_set')                                   * 00110600
*    /*                                                               * 00110700
*                                                                     * 00110800
*                                                                     * 00110900
*    The  following  example JCL is a started procedure that will run * 00111000
*    the  IEAVFTED  REXX  exec  in  the  TSO background. Required and * 00111100
*    optional  parameters  for  IEAVFTED  are  passed  via  the  PARM * 00111200
*    keyword.  Please  see  the  descriptions  for  the  required and * 00111300
*    optional  IEAVFTED parameters under "Timed Event Data Report" in * 00111400
*    this macro.                                                      * 00111500
*                                                                     * 00111600
*    //TEDRPT     JOB MSGCLASS=A                                      * 00111700
*    //TEDRPT     PROC PARM='PATH(/usr/ted/ted_report)'               * 00111800
*    //  EXEC  PGM=IKJEFT01,                                          * 00111900
*    //   PARM='IEAVFTED &PARM'                                       * 00112000
*    //SYSEXEC  DD DSN=SYS1.SBLSCLI0,DISP=SHR                         * 00112100
*    //SYSPROC  DD DSN=SYS1.PROCLIB,DISP=SHR                          * 00112200
*    //SYSTSIN  DD DUMMY                                              * 00112300
*    //SYSTSPRT DD SYSOUT=*                                           * 00112400
*    //SYSINT   DD SYSOUT=(A,INTRDR),DCB=(LRECL=80,RECFM=FB)          * 00112500
*    //       PEND                                                    * 00112600
*    //       EXEC TEDRPT                                             * 00112700
*                                                                     * 00112800
*                                                                     * 00112900
*    An  example  of  a  started  procedure  invocation  using system * 00113000
*    symbolics as parameters:                                         * 00113100
*                                                                     * 00113200
*    S TEDRPT,PARM='PATH(/usr/&SYSPLEX/&SYSNAME/ted_from_12_1_2009)   * 00113300
*      COMP(ABC)'                                                     * 00113400
*                                                                     * 00113500
*                                                                     * 00113600
*    An  example  of  a started procedure invocation specifying a TSO * 00113700
*    dataset and having NOSS (no spreadsheet data).                   * 00113800
*                                                                     * 00113900
*    S TEDRPT,PARM='da(console.mttr.output(sample)) noss'             * 00114000
*                                                                     * 00114100
*                                                                     * 00114200
*    EXAMPLE IPCS INVOCATIONS:                                        * 00114300
*                                                                     * 00114400
*    The  following  example  will  produce a Timed Event Data Report * 00114500
*    with  all  components  with  spreadsheet data with a spreadsheet * 00114600
*    delimiter  of a semicolon (the default).  The output will be put * 00114700
*    into  a data set that must be pre-allocated with an LRECL of 255 * 00114800
*    and  a RECFM of V or VB.  Note that IPCS only supports a maximum * 00114900
*    of  255 characters for the data set, but if the spreadsheet data * 00115000
*    needs  to  be  imported  into  a  spreadsheet  program,  then an * 00115100
*    additional  procedure  (described  below)  must  be performed to * 00115200
*    extract the spreadsheet data from the 255 character data set and * 00115300
*    place it into either a pre-allocated 512 character data set or a * 00115400
*    z/OS  UNIX  file.    Note that no data will be truncated or lost * 00115500
*    with  the  255  character data set.   The ALTLIB statement tells * 00115600
*    IPCS  where  to  find the IEAVFTED exec.  Note that the data set * 00115700
*    containing IEAVFTED (SYS1.SBLSCLI0) must have an LRECL of 80 and * 00115800
*    a RECFM of F or FB.                                              * 00115900
*                                                                     * 00116000
*    Create an output dsn (LRECL of 255, RECFM of V or VB)            * 00116100
*    TSO ALLOC F(IPCSPRNT) DA(dsn) SHR REUS                           * 00116200
*    IP ALTLIB ACTIVATE APPL(EXEC) DA('SYS1.SBLSCLI0')                * 00116300
*    IP SETDEF PRINT NOTERM                                           * 00116400
*    IP IEAVFTED                                                      * 00116500
*    IP CLOSE PRINT                                                   * 00116600
*    IP SETDEF TERM NOPRINT                                           * 00116700
*    Data set dsn now contains the Timed Event Data Report            * 00116800
*                                                                     * 00116900
*                                                                     * 00117000
*    If  the spreadsheet data needs to be imported into a spreadsheet * 00117100
*    program  then  one of the following IEAVFTED invocations must be * 00117200
*    issued from TSO.  In the first example, the output_data_set must * 00117300
*    be  pre-allocated  with  an LRECL of 512 and a RECFM of V or VB. * 00117400
*    In  the  second example, the output will go to a z/OS UNIX file. * 00117500
*    In  both  examples, the input_data_set is the 255 character data * 00117600
*    set  from  the  above procedure for IPCS.  IEAVFTED will extract * 00117700
*    the  spreadsheet  data  from input_data_set, convert it into the * 00117800
*    proper format, and write it to the 512 character output_data_set * 00117900
*    or to the z/OS UNIX file, either of which can then be downloaded * 00118000
*    or FTP'd and imported into a spreadsheet program.                * 00118100
*                                                                     * 00118200
*    IEAVFTED IPCSDA('input_data_set') DA('output_data_set')          * 00118300
*                                                                     * 00118400
*                                                                     * 00118500
*    ...or...                                                         * 00118600
*                                                                     * 00118700
*    IEAVFTED IPCSDA('input_data_set') PATH('z/OS UNIX file')         * 00118800
*                                                                     * 00118900
*                                                                     * 00119000
*    FORMATTED TIMED EVENT DATA REPORT                                * 00119100
*                                                                     * 00119200
*    The formatted Timed Event Data report will consist of:           * 00119300
*                                                                     * 00119400
*                                                                     * 00119500
*    o   a header section for the start of the report                 * 00119600
*                                                                     * 00119700
*    o   Timed  Event  Data Table sections with each Timed Event Data * 00119800
*        Table section comprised of a header section, the Timed Event * 00119900
*        Data  Table  formatted  information,  Timed Event Data Table * 00120000
*        formatted entries, and a trailer section                     * 00120100
*                                                                     * 00120200
*    o   a  header  section  for  the  IPST  (IPL  Statistics  Table) * 00120300
*        followed by the formatted IPST                               * 00120400
*                                                                     * 00120500
*    o   the  spreadsheet  format  of  the  IPST and Timed Event Data * 00120600
*        entries                                                      * 00120700
*                                                                     * 00120800
*                                                                     * 00120900
*                                                                     * 00121000
*    The  following  describes each of the formatted sections in more * 00121100
*    detail:                                                          * 00121200
*                                                                     * 00121300
*    The header section for the start of the report contains the text * 00121400
*    "IBM z/OS Timed Event Data Report" and the following fields:     * 00121500
*                                                                     * 00121600
*                                                                     * 00121700
*    o   Level:  the  product  and  version  of  the Timed Event Data * 00121800
*        Report REXX Exec (IEAVFTED)                                  * 00121900
*                                                                     * 00122000
*    o   Date/Time of Report: the local date and time when the report * 00122100
*        was run                                                      * 00122200
*                                                                     * 00122300
*    o   Component Filter: the filter used to select which entries to * 00122400
*        format. If no filter was specified, ALL is displayed.        * 00122500
*                                                                     * 00122600
*    o   Sysplex:  the  name of the sysplex for the system from which * 00122700
*        the report was obtained                                      * 00122800
*                                                                     * 00122900
*    o   System:  name  of  the  system  from  which  the  report was * 00123000
*        obtained                                                     * 00123100
*                                                                     * 00123200
*    o   FMID:  the  FMID  of  the  system  from which the report was * 00123300
*        obtained and the z/OS release level                          * 00123400
*                                                                     * 00123500
*    o   Machine: The model of the machine where the report was run   * 00123600
*                                                                     * 00123700
*    o   Online  CPs:  The  number of online standard CPs, zCBP/zAAPs * 00123800
*        and zIIPS                                                    * 00123900
*                                                                     * 00124000
*    o   IPL  Start  Date/Time:  the local date and time when the IPL * 00124100
*        was  started  for  the  system  from  which  the  report was * 00124200
*        obtained                                                     * 00124300
*                                                                     * 00124400
*    o   Total  Timed  Event  Data Table Storage: the total number of * 00124500
*        hexadecimal  bytes  of  storage that is currently in use for * 00124600
*        the Timed Event Data Tables                                  * 00124700
*                                                                     * 00124800
*                                                                     * 00124900
*                                                                     * 00125000
*    The  header  section  for  a Timed Event Data Table includes the * 00125100
*    following fields:                                                * 00125200
*                                                                     * 00125300
*                                                                     * 00125400
*    o   Component:  the  value specified for the COMPNAME keyword on * 00125500
*        the IEATEDS REGISTER request                                 * 00125600
*                                                                     * 00125700
*    o   Address:  the  address in storage where the Timed Event Data * 00125800
*        Table resides                                                * 00125900
*                                                                     * 00126000
*    o   Table  Size:  number  of hexadecimal bytes allocated for the * 00126100
*        Timed Event Data Table                                       * 00126200
*                                                                     * 00126300
*    o   Register  Date/Time:  the local date and time when the Timed * 00126400
*        Event  Data  Table  was registered with the IEATEDS REGISTER * 00126500
*        request                                                      * 00126600
*                                                                     * 00126700
*    o   Requested MaxEvents: the maximum number of events originally * 00126800
*        specified on the IEATEDS REGISTER request                    * 00126900
*                                                                     * 00127000
*    o   Resultant  MaxEvents:  the maximum number of events for this * 00127100
*        Timed Event Data Table that can be recorded with the IEATEDS * 00127200
*        RECORD request.  This value may be the requested value, or a * 00127300
*        reduced  value that allowed the Timed Event Data Table to be * 00127400
*        built within the 2M byte storage limit.                      * 00127500
*                                                                     * 00127600
*    o   Current  NumEvents:  the  number  of  events  that have been * 00127700
*        recorded thus far                                            * 00127800
*                                                                     * 00127900
*    o   Overflow  NumEvents:  the  number  of  events  that were not * 00128000
*        recorded because the Timed Event Data Table is full          * 00128100
*                                                                     * 00128200
*                                                                     * 00128300
*                                                                     * 00128400
*    Following  the  Timed Event Data Table formatted header section, * 00128500
*    the  report  continues  with  zero or more formatted events that * 00128600
*    were  recorded  with  IEATEDS RECORD requests, with each request * 00128700
*    having the following fields:                                     * 00128800
*                                                                     * 00128900
*                                                                     * 00129000
*    o   EntryNum:  this  will start with 1 for each Timed Event Data * 00129100
*        Table and will increment for each event                      * 00129200
*                                                                     * 00129300
*    o   Event  Type/Thread:  the  type will be Start, Mid, or End as * 00129400
*        was  specified  for  the  EVENTTYPE  keyword  on the IEATEDS * 00129500
*        RECORD  request.   For Timed Event Data entries, the Thread, * 00129600
*        which  is  the  value specified on the EVENTTREAD keyword of * 00129700
*        the IEATEDS RECORD request, will follow as formatted hex and * 00129800
*        again as formatted EBCDIC contained within asterisk borders. * 00129900
*        For IPST entries, the thread will always be in EBCDIC.       * 00130000
*                                                                     * 00130100
*    o   Event  Date/Time: the local date and time that the event was * 00130200
*        recorded.                                                    * 00130300
*                                                                     * 00130400
*    o   "***  Incomplete  Event  ***"  will  be  displayed  if it is * 00130500
*        determined  that  the entry is incomplete. In this case, the * 00130600
*        data for this event should be ignored.                       * 00130700
*                                                                     * 00130800
*    o   Description: the value specified for the DESCRIPTION keyword * 00130900
*        on the IEATEDS RECORD request                                * 00131000
*                                                                     * 00131100
*    o   HASN:  the  ASID  (address  space  identity)  for  the  home * 00131200
*        addresss space at the time of IEATEDS RECORD request.        * 00131300
*                                                                     * 00131400
*    o   PASN:  the  ASID  (address  space  identity) for the primary * 00131500
*        addresss space at the time of IEATEDS RECORD request         * 00131600
*                                                                     * 00131700
*    o   Jobname:  the jobname for the home address space at the time * 00131800
*        of the IEATEDS RECORD request                                * 00131900
*                                                                     * 00132000
*    o   TCB:  the  TCB  (Task  Control Block) address at the time of * 00132100
*        IEATEDS  RECORD  request (which will be zero when running as * 00132200
*        an SRB)                                                      * 00132300
*                                                                     * 00132400
*    o   Module/Level/Offset: the values specified on the MODNAME and * 00132500
*        MODLEVEL  keywords  on  the  IEATEDS RECORD request, and the * 00132600
*        offset  in  the  module where the IEATEDS RECORD request was * 00132700
*        issued.  Note that the offset is calculated by obtaining the * 00132800
*        difference  between  the  current location and &SYSECT which * 00132900
*        names  the  current  control  section  but  which  might not * 00133000
*        necessarily be the name of the module.                       * 00133100
*                                                                     * 00133200
*    o   SRB/Task  Time:  the  SRB  and task time values for the home * 00133300
*        address space at the time of IEATEDS RECORD request          * 00133400
*                                                                     * 00133500
*    o   User  Data:  the value(s) specified for the USERDATA keyword * 00133600
*        on  the  IEATEDS RECORD request, displayed as both printable * 00133700
*        hex and printable EBCDIC enclosed in asterisk borders.  Note * 00133800
*        that  zeros  are  appended  to  the user data to ensure that * 00133900
*        there  are  16 bytes of data in the case where the specified * 00134000
*        user data combined size is less than 16 bytes.               * 00134100
*                                                                     * 00134200
*    o   OUXBFCON:  the  formatted  time from OUXBFCON which contains * 00134300
*        the accumulated I/O FICON connect time for the address space * 00134400
*                                                                     * 00134500
*    o   OUXBFDIS:  the  formatted  time from OUXBFDIS which contains * 00134600
*        the  accumulated  I/O  FICON disconnect time for the address * 00134700
*        space                                                        * 00134800
*                                                                     * 00134900
*    o   OUXBFMNO:  the  formatted  time from OUXBFMNO which contains * 00135000
*        the  FICON  magic  number  -  for every I/O interrupt from a * 00135100
*        device  attached  to  a FICON native CHPID, IOS will add one * 00135200
*        millisecond to this field                                    * 00135300
*                                                                     * 00135400
*    o   OUXBFWAIT:  the formatted time from OUXBFWAIT which contains * 00135500
*        the  accumulated  I/O  FICON wait time for the address space * 00135600
*        This  value  includes  pending  time  and control unit queue * 00135700
*        time.                                                        * 00135800
*                                                                     * 00135900
*    o   IPL  Start Delta: the elapsed time from the start of the IPL * 00136000
*        to the time of the IEATEDS RECORD request for this event     * 00136100
*                                                                     * 00136200
*    o   Timed  Event  Data Registration Delta: the elapsed time from * 00136300
*        when  the  IEATEDS  REGISTER request was made to the time of * 00136400
*        the IEATEDS RECORD request for this event                    * 00136500
*                                                                     * 00136600
*    o   Thread  Start  Event  Delta:  the elapsed time from when the * 00136700
*        IEATEDS  RECORD  request with an EVENTTYPE of START was made * 00136800
*        to the time of the IEATEDS RECORD request for this event and * 00136900
*        this  event  has an EVENTTHREAD value that matches the START * 00137000
*        event                                                        * 00137100
*                                                                     * 00137200
*    o   Thread  Prior  Event  Delta:  the elapsed time from when the * 00137300
*        IEATEDS RECORD request for the prior event in the same Timed * 00137400
*        Event  Data Table with the same Event Thread was made to the * 00137500
*        time of the IEATEDS RECORD request for this event            * 00137600
*                                                                     * 00137700
*                                                                     * 00137800
*                                                                     * 00137900
*    The  trailer section for the Timed Event Data Table includes the * 00138000
*    following fields:                                                * 00138100
*                                                                     * 00138200
*                                                                     * 00138300
*    o   Component:  the value specified for the COMPONENT keyword on * 00138400
*        the IEATEDS REGISTER request                                 * 00138500
*                                                                     * 00138600
*    o   Number  of Events:   the number of processed START, MID, and * 00138700
*        END  events.    The  number  of  start events and end events * 00138800
*        should  normally  match unless there were incomplete entries * 00138900
*        or an overflow of entries.                                   * 00139000
*                                                                     * 00139100
*                                                                     * 00139200
*                                                                     * 00139300
*    Note that error messages may be issued if a storage access error * 00139400
*    occurs,  in  which  case  the IPST, one of more Timed Event Data * 00139500
*    Tables,  or  Timed  Event Data Table entries may be missing from * 00139600
*    the report.                                                      * 00139700
*                                                                     * 00139800
*    Other  error  messages  may  be  issued  for  data set errors or * 00139900
*    processing errors.                                               * 00140000
*                                                                     * 00140100
*    The  Timed  Event  Data  Report REXX Exec provides the following * 00140200
*    return codes:                                                    * 00140300
*                                                                     * 00140400
*                                                                     * 00140500
*    o   Return Code=d'00' - Report written successfully.             * 00140600
*                                                                     * 00140700
*    o   Return  Code=d'16'  -  Report  was  not  completed. An error * 00140800
*        message  will  be  output to either the screen or within the * 00140900
*        report.                                                      * 00141000
*                                                                     * 00141100
*                                                                     * 00141200
*                                                                     * 00141300
*    If  you  want  to  load  the  Timed  Event  Data  Report  into a * 00141400
*    spreadsheet program, perform the following:                      * 00141500
*                                                                     * 00141600
*                                                                     * 00141700
*    o   If  the  Timed  Event  Data  Report  was  placed  into a 512 * 00141800
*        character data set or a z/OS UNIX file, edit the data set or * 00141900
*        file  (or a copy) to delete everything above the spreadsheet * 00142000
*        data (including the directions).                             * 00142100
*                                                                     * 00142200
*    o   If  the  Timed  Event  Data  Report  was  placed  into a 255 * 00142300
*        character  data set (i.e., obtained from a dump under IPCS), * 00142400
*        invoke  IEAVFTED  with  the IPCSDA option which will extract * 00142500
*        the  spreadsheet  data  from  the 255 character data set and * 00142600
*        place  it into either a pre-allocated 512 character data set * 00142700
*        or a z/OS UNIX file.                                         * 00142800
*                                                                     * 00142900
*    o   When  you  download or FTP the data set, choose the download * 00143000
*        options of ASCII or TEXT.  Do NOT download as binary.        * 00143100
*                                                                     * 00143200
*    o   When  importing  into the spreadsheet program, indicate that * 00143300
*        the  data  is  delimited with a delimiter of a semicolon (or * 00143400
*        the  character  that  was  specifed with the SS keyword when * 00143500
*        IEAVFTED  was  invoked  to  generate  the  Timed  Event Data * 00143600
*        Report).                                                     * 00143700
*                                                                     * 00143800
*    o   Sorting  by  the  'Event  Time' column will put all the data * 00143900
*        into chronological order.                                    * 00144000
*                                                                     * 00144100
*    o   Sorting  by  the 'Event Thread' and the 'Event Time' columns * 00144200
*        will  group  all  the related events in chronological order. * 00144300
*        Examining  the 'Thread Prior Event Delta' will help identify * 00144400
*        events that took a long time.                                * 00144500
*                                                                     * 00144600
*                                                                     * 00144700
*                                                                     * 00144800
*01* CHANGE ACTIVITY:                                                 * 00144900
*                                                                     * 00145000
*   Flag LineItem  FMID    Date   ID    Comment                       * 00145100
*                                                                     * 00145200
*    $L0=MTTRINST HBB7770 090814 PD00DV:  Timed Event Data Service    * 00145300
*    $L1=MTTRINST HBB7770 091225 PD00SS:  Formatter Description       * 00145400
*    $P1=ME18478  HBB7770 100228 PD00SS:  Update for formatter        * 00145500
*                                         changes                     * 00145600
*    $P2=ME18782  HBB7770 100317 PD00SS:  Wording changes             * 00145700
*    $01=OA32583  HBB7770 100415 PD00DV:  Update description          * 00145800
*    $L2=zCBP     HBB77C0 170825 PD00NJ:  zCBP                        * 00145900
****** END OF SPECIFICATIONS *****************************************/ 00146000
*/********************************************************************* 00146100
         MACRO                                                          00146200
&XLABEL  IEATEDS &REQUEST=,&COMPNAME=,&MAXEVENTS=,&TEDTOKEN=,          *00146300
               &EVENTTYPE=,&EVENTTHREAD=,&EVENTDESC=,&MODNAME=,        *00146400
               &MODLEVEL=,&USERDATA=,&WORKAREA=,&RETCODE=,&RSNCODE=,   *00146500
               &PLISTVER=,&MF=                                          00146600
.*                                                                      00146700
*                 MACDATE -06/08/18-<0>                                 00146800
.*                                                                      00146900
.*******************************************************************    00147000
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00147100
.*******************************************************************    00147200
                 GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                00147300
                 GBLC  &ZTEST      YES=TEST NO=NO TEST                  00147400
                 GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX          00147500
.*                                                                      00147600
                 GBLC  &ZIEATEDS   YES=MACRO USED AT LEAST ONCE         00147700
.*******************************************************************    00147800
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00147900
.*******************************************************************    00148000
                 LCLC  &ZMS        ERROR MESSAGE WORK AREA              00148100
                 LCLC  &ZCNDX      SYSNDX CHARACTERS                    00148200
                 LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED           00148300
                 LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR          00148400
                 LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE          00148500
                 LCLA  &ZAWRK      USED AS A WORK AREA                  00148600
                 LCLA  &ZASIZ      USED FOR SIZE OF VALUE               00148700
                 LCLA  &ZN         NUMERIC WORK VARIABLE                00148800
                 LCLC  &ZC         CHARACTER WORK VARIABLE              00148900
                 LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE          00149000
                 LCLA  &ZTLA       VALUE TOO LONG VARIABLE              00149100
                 LCLC  &ZMAC_G     "G" or null                          00149200
&ZMAC_G          SETC  ''                                               00149300
                 LCLC  &ZMAC_LR                                         00149400
&ZMAC_LR         SETC  'LR'                                             00149500
                 LCLC  &ZMAC_L                                          00149600
&ZMAC_L          SETC  'L'                                              00149700
                 LCLC  &ZMAC_ST                                         00149800
&ZMAC_ST         SETC  'ST'                                             00149900
                 LCLC  &ZMAC_LLGT                                       00150000
&ZMAC_LLGT       SETC  'L'                                              00150100
                 LCLC  &ZMAC_LGR                                        00150200
&ZMAC_LGR        SETC  'LR'                                             00150300
                 LCLC  &ZMAC_LG                                         00150400
&ZMAC_LG         SETC  'L'                                              00150500
                 LCLC  &ZMAC_STG                                        00150600
&ZMAC_STG        SETC  'ST'                                             00150700
                 LCLA  &ZMACRET    MACRO RETURN CODE                    00150800
&ZMACRET         SETA  0           ASSUME NO ERRORS                     00150900
.*                                                                      00151000
                 LCLC  &ZCSYSLIST(255)          NONXKEY, POS ARRAY      00151100
                 LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()           00151200
                 LCLA  &ZPLLEN     PARAMETER LIST LENGTH                00151300
                 LCLC  &ZENDBASEPL              End of base PL          00151400
                 LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                00151500
.*******************************************************************    00151600
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00151700
.*******************************************************************    00151800
                 LCLA  &ZI         INDEX FOR ARRAY                      00151900
                 LCLA  &ZJ         INDEX FOR PARMS                      00152000
                 LCLA  &ZK         INDEX FOR PARSE                      00152100
                 LCLA  &ZLO        LOW RANGE VALUE                      00152200
                 LCLA  &ZHI        HIGH RANGE VALUE                     00152300
                 LCLC  &ZW         WORK AREA FOR PARM                   00152400
.********************************************************************   00152500
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00152600
.********************************************************************   00152700
                 GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL              00152800
                 GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE       00152900
                 GBLA  &SYSALVL    SYSSTATE ARCHLVL                     00153000
                 GBLC  &SYSAM64    SYSSTATE AMODE64                     00153100
.*                                                                      00153200
                 AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED       00153300
                 AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED        00153400
                 SPLEVEL  TEST                                          00153500
.ZSYS2           ANOP  ,                                                00153600
                 AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1            00153700
                 AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1            00153800
                 SYSSTATE TEST                                          00153900
                 AGO   .ZSYS4                                           00154000
.ZSYS3           ANOP  ,                                                00154100
&SYSASCE         SETC  'P'         ASSUME SYSSTATE PRIMARY              00154200
.ZSYS4           ANOP  ,                                                00154300
                 AIF   ('&SYSAM64' NE 'YES').ZSYSN64                    00154400
&ZMAC_LLGT       SETC 'LLGT'                                            00154500
&ZMAC_LGR        SETC 'LGR'                                             00154600
&ZMAC_LG         SETC 'LG'                                              00154700
&ZMAC_STG        SETC 'STG'                                             00154800
.ZSYSN64         ANOP  ,                                                00154900
.*******************************************************************    00155000
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00155100
.*******************************************************************    00155200
                 LCLC  &XREQUEST   ++ VALUE                             00155300
                 LCLC  &XCOMPNAME  ++ NAME                              00155400
                 LCLC  &XMAXEVENTS              ++ NAME                 00155500
                 LCLC  &XTEDTOKEN  ++ NAME                              00155600
                 LCLC  &XEVENTTYPE              ++ VALUE                00155700
                 LCLC  &XEVENTTHREAD            ++ NAME                 00155800
                 LCLC  &XEVENTDESC              ++ NAME                 00155900
                 LCLC  &XMODNAME   ++ NAME                              00156000
                 LCLC  &XMODLEVEL  ++ NAME                              00156100
                 LCLC  &XUSERDATA(257)          ++ NAME                 00156200
                 LCLC  &XWORKAREA  ++ NAME                              00156300
                 LCLC  &XRETCODE   ++ NAME                              00156400
                 LCLC  &XRSNCODE   ++ NAME                              00156500
                 LCLA  &XPLISTVER  ++ VALUE                             00156600
                 LCLC  &XMF        ++ VALUE                             00156700
                 LCLC  &XMFCTRL    ++ NAME                              00156800
                 LCLC  &XMFATTR    ++ VALUE                             00156900
                 LCLC  &XMFSCK     ++ VALUE                             00157000
.*******************************************************************    00157100
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00157200
.*******************************************************************    00157300
                 LCLC  &ZXREQUEST  ++ INPUT VALUE                       00157400
                 LCLC  &ZXCOMPNAME              ++ INPUT NAME           00157500
                 LCLC  &ZXMAXEVENTS             ++ INPUT NAME           00157600
                 LCLC  &ZXTEDTOKEN              ++ OUTPUT NAME          00157700
                 LCLC  &ZXEVENTTYPE             ++ INPUT VALUE          00157800
                 LCLC  &ZXEVENTTHREAD           ++ INPUT NAME           00157900
                 LCLC  &ZXEVENTDESC             ++ INPUT NAME           00158000
                 LCLC  &ZXMODNAME  ++ INPUT NAME                        00158100
                 LCLC  &ZXMODLEVEL              ++ INPUT NAME           00158200
                 LCLC  &ZXUSERDATA              ++ INPUT NAME           00158300
                 LCLC  &ZXWORKAREA              ++ INPUT NAME           00158400
                 LCLC  &ZXRETCODE  ++ OUTPUT NAME                       00158500
                 LCLC  &ZXRSNCODE  ++ OUTPUT NAME                       00158600
                 LCLC  &ZXPLISTVER              ++ INPUT VALUE          00158700
                 LCLC  &ZXMF       ++ INPUT VALUE                       00158800
                 LCLC  &ZXMFCTRL   ++ INPUT NAME                        00158900
                 LCLC  &ZXMFATTR   ++ INPUT VALUE                       00159000
                 LCLC  &ZXMFSCK    ++ INPUT VALUE                       00159100
.********************************************************************   00159200
.***AC.PLV01  PROCESS PLISTVER                                      *   00159300
.********************************************************************   00159400
&XPLISTVER      SETA  0                                                 00159500
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00159600
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00159700
&XPLISTVER      SETA  0                                                 00159800
.ZPLV0          ANOP  ,                                                 00159900
.*                                                                      00160000
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00160100
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00160200
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00160300
.*-------------------------------------------------------------------   00160400
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00160500
&ZMS            SETC  '"PLISTVER='                                      00160600
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00160700
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00160800
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00160900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00161000
                AGO   .ZPVCK2                                           00161100
.ZPVCK3         ANOP  ,                                                 00161200
.*-------------------------------------------------------------------   00161300
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00161400
&ZMS            SETC  '"PLISTVER='                                      00161500
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00161600
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00161700
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00161800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00161900
                AGO   .ZPVCKE                                           00162000
.ZPVCK2         ANOP  ,                                                 00162100
.*-------------------------------------------------------------------   00162200
&ZCVAL          SETC  '&PLISTVER(1)'                                    00162300
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00162400
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00162500
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00162600
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00162700
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00162800
.ZPVCK6         ANOP  ,                                                 00162900
&ZMS            SETC  '"PLISTVER='                                      00163000
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00163100
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00163200
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00163300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00163400
&XPLISTVER      SETA  0                                                 00163500
                AGO   .ZPVCKE                                           00163600
.*-------------------------------------------------------------------   00163700
.ZPVCK4A        ANOP  ,                                                 00163800
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00163900
&ZMS            SETC  'PLISTVER='                                       00164000
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00164100
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00164200
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00164300
                MNOTE 8,' &ZMS IS REQUIRED.'                            00164400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00164500
                AGO   .ZPVCK5                                           00164600
.ZPVCK4         ANOP  ,                                                 00164700
&XPLISTVER      SETA  &PLISTVER(1)                                      00164800
.ZPVCK5         ANOP  ,                                                 00164900
.ZPVCKE         ANOP  ,                                                 00165000
.********************************************************************   00165100
.***AG.MF01 PROCESS MF MACRO FORMS                                      00165200
.********************************************************************   00165300
                 ACTR  10000                                            00165400
.*------------------------------------------------------------------    00165500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00165600
&XMF             SETC  ''          INITIALIZE XVARIABLE                 00165700
.*-------------------------------------------------------------------   00165800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00165900
.ZG53            ANOP  ,                                                00166000
&ZTLC            SETC 'S'                                               00166100
                 AIF   ('&MF(1)' NE '&ZTLC').ZG54                       00166200
&XMF             SETC  'S'         SET KEYWORD                          00166300
                 AIF   (N'&MF LE 1).ZG53A       CK NUM                  00166400
&ZMS             SETC  '"MF='                                           00166500
&ZMS             SETC  '&ZMS.&MF"'                                      00166600
&ZMS             SETC  '&ZMS "MF"'                                      00166700
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00166800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00166900
.ZG53A           ANOP  ,                                                00167000
.*-------------------------------------------------------------------   00167100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00167200
.ZG54            ANOP  ,                                                00167300
&ZTLC            SETC 'L'                                               00167400
                 AIF   ('&MF(1)' NE '&ZTLC').ZG61                       00167500
&XMF             SETC  'L'         SET KEYWORD                          00167600
                 AIF   (N'&MF LE 3).ZG54A       CK NUM                  00167700
&ZMS             SETC  '"MF='                                           00167800
&ZMS             SETC  '&ZMS.&MF"'                                      00167900
&ZMS             SETC  '&ZMS "MF"'                                      00168000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'             00168100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00168200
.ZG54A           ANOP  ,                                                00168300
.*-------------------------------------------------------------------   00168400
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00168500
                 AIF   (N'&SYSLIST NE 0).ZG54B  POSITIONALS?            00168600
                 AIF   ('&REQUEST' NE '').ZG54B  KEYS?                  00168700
                 AIF   ('&COMPNAME' NE '').ZG54B  KEYS?                 00168800
                 AIF   ('&MAXEVENTS' NE '').ZG54B  KEYS?                00168900
                 AIF   ('&TEDTOKEN' NE '').ZG54B  KEYS?                 00169000
                 AIF   ('&EVENTTYPE' NE '').ZG54B  KEYS?                00169100
                 AIF   ('&EVENTTHREAD' NE '').ZG54B  KEYS?              00169200
                 AIF   ('&EVENTDESC' NE '').ZG54B  KEYS?                00169300
                 AIF   ('&MODNAME' NE '').ZG54B  KEYS?                  00169400
                 AIF   ('&MODLEVEL' NE '').ZG54B  KEYS?                 00169500
                 AIF   ('&USERDATA' NE '').ZG54B  KEYS?                 00169600
                 AIF   ('&WORKAREA' NE '').ZG54B  KEYS?                 00169700
                 AIF   ('&RETCODE' NE '').ZG54B  KEYS?                  00169800
                 AIF   ('&RSNCODE' NE '').ZG54B  KEYS?                  00169900
                 AGO    .ZG54C     INVOCATION OKAY                      00170000
.ZG54B           ANOP  ,                                                00170100
&ZMS             SETC  'THE "L" FORM OF "MF"'                           00170200
&ZMS             SETC  '&ZMS CAN ONLY HAVE'                             00170300
&ZMS             SETC  '&ZMS THE "PLISTVER" KEY'                        00170400
                 MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'           00170500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00170600
.ZG54C           ANOP  ,                                                00170700
.*-------------------------------------------------------------------   00170800
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00170900
&ZXMFCTRL        SETC  'INPUT'     SET IN/OUTPUT                        00171000
&XMFCTRL         SETC  '&MF(2,1)'  SET XVARIABLE                        00171100
                 AIF   (N'&MF(2) GT 1).ZG56B    MULTI                   00171200
&XMFCTRL         SETC  '&MF(2)'    SET XVARIABLE                        00171300
.ZG56B           AIF   (K'&MF(2) GT 0).ZG56C                            00171400
&ZXMFCTRL        SETC  ''          RESET IN/OUTPUT                      00171500
&ZMS             SETC  'WHEN "L" IS SPECIFIED'                          00171600
&ZMS             SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'              00171700
                 MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                     00171800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00171900
.ZG56C           ANOP  ,                                                00172000
.*-------------------------------------------------------------------   00172100
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00172200
                 AIF   (K'&ZXMFCTRL LE 0).ZG56P  NOT I/O                00172300
                 AIF   ('&XMFCTRL'(1,1) NE '(').ZG56P                   00172400
&ZXMFCTRL        SETC  ''          RESET IN/OUTPUT                      00172500
&ZMS             SETC  '"MF='                                           00172600
&ZMS             SETC  '&ZMS.&MF"'                                      00172700
&ZMS             SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'        00172800
                 MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                00172900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00173000
.ZG56P           ANOP  ,                                                00173100
.*-------------------------------------------------------------------   00173200
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00173300
&ZXMFATTR        SETC  'INPUT'     SET IN/OUTPUT                        00173400
&XMFATTR         SETC  '0D'                                             00173500
                 AIF   (K'&MF(3) LE 0).ZG59B    PARM                    00173600
&XMFATTR         SETC  '&MF(3,1)'  SET XVARIABLE                        00173700
                 AIF   (N'&MF(3) GT 1).ZG59B    MULTI                   00173800
&XMFATTR         SETC  '&MF(3)'    SET XVARIABLE                        00173900
.ZG59B           ANOP  ,                                                00174000
.*-------------------------------------------------------------------   00174100
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00174200
                 AIF   (K'&ZXMFATTR LE 0).ZG59P  NOT I/O                00174300
                 AIF   ('&XMFATTR'(1,1) NE '(').ZG59P                   00174400
&ZXMFATTR        SETC  ''          RESET IN/OUTPUT                      00174500
&ZMS             SETC  '"MF='                                           00174600
&ZMS             SETC  '&ZMS.&MF"'                                      00174700
&ZMS             SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'        00174800
                 MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                00174900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00175000
.ZG59P           ANOP  ,                                                00175100
.*-------------------------------------------------------------------   00175200
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00175300
                 AIF   (K'&ZXMFATTR LE 0).ZG59S  NOT I/O                00175400
                 AIF   (K'&XMFATTR LE 60).ZG59S  LNG OK                 00175500
&ZXMFATTR        SETC  ''          RESET IN/OUTPUT                      00175600
&ZMS             SETC  '"MF='                                           00175700
&ZMS             SETC  '&ZMS.&MF"'                                      00175800
&ZMS             SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'            00175900
                 MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'               00176000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00176100
.ZG59S           ANOP  ,                                                00176200
.*-------------------------------------------------------------------   00176300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00176400
.ZG61            ANOP  ,                                                00176500
&ZTLC            SETC 'E'                                               00176600
                 AIF   ('&MF(1)' NE '&ZTLC').ZG69                       00176700
&XMF             SETC  'E'         SET KEYWORD                          00176800
                 AIF   (N'&MF LE 3).ZG61A       CK NUM                  00176900
&ZMS             SETC  '"MF='                                           00177000
&ZMS             SETC  '&ZMS.&MF"'                                      00177100
&ZMS             SETC  '&ZMS "MF"'                                      00177200
                 MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'             00177300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00177400
.ZG61A           ANOP  ,                                                00177500
.*-------------------------------------------------------------------   00177600
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00177700
&ZXMFCTRL        SETC  'INPUT'     SET IN/OUTPUT                        00177800
&XMFCTRL         SETC  '&MF(2,1)'  SET XVARIABLE                        00177900
                 AIF   (N'&MF(2) GT 1).ZG63B    MULTI                   00178000
&XMFCTRL         SETC  '&MF(2)'    SET XVARIABLE                        00178100
.ZG63B           AIF   (K'&MF(2) GT 0).ZG63C                            00178200
&ZXMFCTRL        SETC  ''          RESET IN/OUTPUT                      00178300
&ZMS             SETC  'WHEN "E" IS SPECIFIED'                          00178400
&ZMS             SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'              00178500
                 MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                     00178600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00178700
.ZG63C           ANOP  ,                                                00178800
.*-------------------------------------------------------------------   00178900
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00179000
                 AIF   (K'&ZXMFCTRL LE 0).ZG63R  NOT I/O                00179100
                 AIF   ('&XMFCTRL'(1,1) NE '(').ZG63R                   00179200
&ZCGPR           SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                       00179300
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG63P                     00179400
                 AIF   (K'&ZCGPR GT 2).ZG63Q                            00179500
                 AIF   ('&ZCGPR' EQ '0').ZG63Q                          00179600
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00179700
                 AIF   (T'&ZCGPR NE 'N').ZG63Q  INVALID REG NAME        00179800
.ZG63P           ANOP  ,                                                00179900
                 AIF   (T'&ZCGPR NE 'N').ZG63R  NON NUMERIC             00180000
                 AIF   ('&ZCGPR' LT '1').ZG63Q                          00180100
                 AIF   ('&ZCGPR' LE '12').ZG63R                         00180200
.ZG63Q           ANOP  ,                                                00180300
&ZMS             SETC  '"MF='                                           00180400
&ZMS             SETC  '&ZMS.&MF"'                                      00180500
&ZMS             SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'        00180600
                 MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                 00180700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00180800
.ZG63R           ANOP  ,                                                00180900
.*-------------------------------------------------------------------   00181000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00181100
&XMFSCK          SETC  ''          INITIALIZE XVARIABLE                 00181200
.ZG67A   AIF   ('&MF(3)' NE 'COMPLETE').ZG68A                           00181300
&XMFSCK          SETC  'COMPLETE'  SET KEYWORD                          00181400
.*-------------------------------------------------------------------   00181500
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00181600
.ZG68A           AIF   (K'&XMFSCK GT 0).ZG68C   KEYWORD                 00181700
                 AIF   (K'&MF(3) LE 0).ZG68B                            00181800
&ZMS             SETC  '"MF='                                           00181900
&ZMS             SETC  '&ZMS.&MF"'                                      00182000
&ZMS             SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '        00182100
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00182200
&ZMS             SETC  '&ZMS "COMPLETE".'                               00182300
                 MNOTE 8,' &ZMS '                                       00182400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00182500
.ZG68B           ANOP  ,                                                00182600
&XMFSCK          SETC  'COMPLETE'  SET DEFAULT KEYWORD                  00182700
.ZG68C           ANOP  ,                                                00182800
&ZXMFSCK         SETC  'INPUT'     SET IN/OUTPUT                        00182900
.*------------------------------------------------------------------    00183000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00183100
.ZG69            ANOP  ,                                                00183200
&ZXMF            SETC  'INPUT'     SET IN/OUTPUT                        00183300
                 AIF   (K'&XMF GT 0).ZG69E      VALID ARG               00183400
                 AIF   (T'&MF EQ 'O').ZG69D     OMITTED                 00183500
&ZASYSLNDX       SETA  0                                                00183600
.ZG69A           ANOP  ,           POSITIONAL MACRO KEY                 00183700
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00183800
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG69C                 00183900
&ZTLC            SETC 'MF'                                              00184000
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG69A        00184100
.ZG69B           ANOP  ,                                                00184200
&ZXMF            SETC  ''          RESET IN/OUTPUT                      00184300
&ZMS             SETC  'THE "MF" KEY'                                   00184400
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00184500
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00184600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00184700
                 AGO   .ZG69E                                           00184800
.ZG69C           ANOP  ,                                                00184900
&ZXMF            SETC  ''          RESET IN/OUTPUT                      00185000
&ZMS             SETC  '"MF='                                           00185100
&ZMS             SETC  '&ZMS.&MF"'                                      00185200
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00185300
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00185400
&ZMS             SETC  '&ZMS "S",'                                      00185500
&ZMS             SETC  '&ZMS "L",'                                      00185600
&ZMS             SETC  '&ZMS OR "E".'                                   00185700
                 MNOTE 8,' &ZMS '                                       00185800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00185900
                 AGO   .ZG69E                                           00186000
.ZG69D           ANOP  ,                                                00186100
&XMF             SETC  'S'         SET DEFAULT KEYWORD                  00186200
&XMFSCK          SETC  'COMPLETE'  COMPLETE CHECKING                    00186300
.ZG69E           ANOP  ,                                                00186400
.********************************************************************   00186500
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00186600
.********************************************************************   00186700
                 ACTR  10000                                            00186800
.*-------------------------------------------------------------------   00186900
.***AG.MF03 MF=(SLE)                                                    00187000
                 AIF   ('&XMF' EQ 'L').ZGMFX                            00187100
.*------------------------------------------------------------------    00187200
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00187300
&XREQUEST        SETC  ''          INITIALIZE XVARIABLE                 00187400
.*-------------------------------------------------------------------   00187500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00187600
.ZG3             ANOP  ,                                                00187700
                 AIF   (K'&REQUEST(1) LE 0).ZG3A                        00187800
&ZTLC            SETC 'REGISTER'                                        00187900
                 AIF   ('&REQUEST(1)' NE '&ZTLC').ZG13                  00188000
&XREQUEST        SETC  'REGISTER'  SET KEYWORD                          00188100
                 AIF   (N'&REQUEST LE 1).ZG3A   CK NUM                  00188200
&ZMS             SETC  '"REQUEST='                                      00188300
&ZMS             SETC  '&ZMS.&REQUEST"'                                 00188400
&ZMS             SETC  '&ZMS "REQUEST"'                                 00188500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00188600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00188700
.ZG3A            ANOP  ,                                                00188800
.*------------------------------------------------------------------    00188900
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00189000
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00189100
.ZG3A0           AIF   (K'&EVENTTYPE LE 0).ZG3A1  OK                    00189200
&ZCVAL           SETC '&ZCVAL EVENTTYPE'        INCORRECT KEY USED      00189300
.ZG3A1           AIF   (K'&EVENTTHREAD LE 0).ZG3A2  OK                  00189400
&ZCVAL           SETC '&ZCVAL EVENTTHREAD'      INCORRECT KEY USED      00189500
.ZG3A2           AIF   (K'&EVENTDESC LE 0).ZG3A3  OK                    00189600
&ZCVAL           SETC '&ZCVAL EVENTDESC'        INCORRECT KEY USED      00189700
.ZG3A3           AIF   (K'&MODNAME LE 0).ZG3A4  OK                      00189800
&ZCVAL           SETC '&ZCVAL MODNAME'          INCORRECT KEY USED      00189900
.ZG3A4           AIF   (K'&MODLEVEL LE 0).ZG3A5  OK                     00190000
&ZCVAL           SETC '&ZCVAL MODLEVEL'         INCORRECT KEY USED      00190100
.ZG3A5           AIF   (K'&USERDATA LE 0).ZG3A6  OK                     00190200
&ZCVAL           SETC '&ZCVAL USERDATA'         INCORRECT KEY USED      00190300
.ZG3A6           AIF   (K'&ZCVAL LE 0).ZG3A7    OK                      00190400
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00190500
&ZMS             SETC  '"REQUEST'                                       00190600
&ZMS             SETC  '&ZMS.=&REQUEST"'                                00190700
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00190800
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00190900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00191000
.ZG3A7           ANOP  ,                                                00191100
.*----------------------------------------------------------------***   00191200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00191300
                 AIF   (N'&COMPNAME LE 1).ZG5A  CK NUM                  00191400
&ZMS             SETC  '"COMPNAME='                                     00191500
&ZMS             SETC  '&ZMS.&COMPNAME"'                                00191600
&ZMS             SETC  '&ZMS "COMPNAME"'                                00191700
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00191800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00191900
.ZG5A            ANOP  ,                                                00192000
.*-------------------------------------------------------------------   00192100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00192200
&ZXCOMPNAME      SETC  'INPUT'     SET IN/OUTPUT                        00192300
&XCOMPNAME       SETC  '&COMPNAME(1)'           SET XVARIABLE           00192400
                 AIF   (N'&COMPNAME GT 1).ZG5B  MULTI                   00192500
&XCOMPNAME       SETC  '&COMPNAME'              SET XVARIABLE           00192600
.ZG5B            AIF   (K'&COMPNAME(1) GT 0).ZG5C                       00192700
&ZXCOMPNAME      SETC  ''          RESET IN/OUTPUT                      00192800
&ZMS             SETC  ' '                                              00192900
&ZMS             SETC  '&ZMS "COMPNAME" KEY AND ITS'                    00193000
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00193100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00193200
.ZG5C            ANOP  ,                                                00193300
.*-------------------------------------------------------------------   00193400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00193500
                 AIF   (K'&ZXCOMPNAME LE 0).ZG5R  NOT I/O               00193600
                 AIF   ('&XCOMPNAME'(1,1) NE '(').ZG5R                  00193700
&ZCGPR           SETC  '&XCOMPNAME'(2,K'&XCOMPNAME-2)                   00193800
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                      00193900
                 AIF   (K'&ZCGPR GT 2).ZG5Q                             00194000
                 AIF   ('&ZCGPR' EQ '0').ZG5Q                           00194100
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00194200
                 AIF   (T'&ZCGPR NE 'N').ZG5Q   INVALID REG NAME        00194300
.ZG5P            ANOP  ,                                                00194400
                 AIF   (T'&ZCGPR NE 'N').ZG5R   NON NUMERIC             00194500
                 AIF   ('&ZCGPR' LT '2').ZG5Q                           00194600
                 AIF   ('&ZCGPR' LE '12').ZG5R                          00194700
.ZG5Q            ANOP  ,                                                00194800
&ZMS             SETC  '"COMPNAME='                                     00194900
&ZMS             SETC  '&ZMS.&COMPNAME"'                                00195000
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00195100
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00195200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00195300
.ZG5R            ANOP  ,                                                00195400
.*----------------------------------------------------------------***   00195500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00195600
                 AIF   (N'&MAXEVENTS LE 1).ZG8A  CK NUM                 00195700
&ZMS             SETC  '"MAXEVENTS='                                    00195800
&ZMS             SETC  '&ZMS.&MAXEVENTS"'                               00195900
&ZMS             SETC  '&ZMS "MAXEVENTS"'                               00196000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00196100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00196200
.ZG8A            ANOP  ,                                                00196300
.*-------------------------------------------------------------------   00196400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00196500
&ZXMAXEVENTS     SETC  'INPUT'     SET IN/OUTPUT                        00196600
&XMAXEVENTS      SETC  '&MAXEVENTS(1)'          SET XVARIABLE           00196700
                 AIF   (N'&MAXEVENTS GT 1).ZG8B  MULTI                  00196800
&XMAXEVENTS      SETC  '&MAXEVENTS'             SET XVARIABLE           00196900
.ZG8B            AIF   (K'&MAXEVENTS(1) GT 0).ZG8C                      00197000
&ZXMAXEVENTS     SETC  ''          RESET IN/OUTPUT                      00197100
&ZMS             SETC  ' '                                              00197200
&ZMS             SETC  '&ZMS "MAXEVENTS" KEY AND ITS'                   00197300
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00197400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00197500
.ZG8C            ANOP  ,                                                00197600
.*-------------------------------------------------------------------   00197700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00197800
                 AIF   (K'&ZXMAXEVENTS LE 0).ZG8R  NOT I/O              00197900
                 AIF   ('&XMAXEVENTS'(1,1) NE '(').ZG8R                 00198000
&ZCGPR           SETC  '&XMAXEVENTS'(2,K'&XMAXEVENTS-2)                 00198100
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                      00198200
                 AIF   (K'&ZCGPR GT 2).ZG8Q                             00198300
                 AIF   ('&ZCGPR' EQ '0').ZG8Q                           00198400
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00198500
                 AIF   (T'&ZCGPR NE 'N').ZG8Q   INVALID REG NAME        00198600
.ZG8P            ANOP  ,                                                00198700
                 AIF   (T'&ZCGPR NE 'N').ZG8R   NON NUMERIC             00198800
                 AIF   ('&ZCGPR' LT '2').ZG8Q                           00198900
                 AIF   ('&ZCGPR' LE '12').ZG8R                          00199000
.ZG8Q            ANOP  ,                                                00199100
&ZMS             SETC  '"MAXEVENTS='                                    00199200
&ZMS             SETC  '&ZMS.&MAXEVENTS"'                               00199300
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00199400
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00199500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00199600
.ZG8R            ANOP  ,                                                00199700
.*----------------------------------------------------------------***   00199800
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00199900
                 AIF   (N'&TEDTOKEN LE 1).ZG11A  CK NUM                 00200000
&ZMS             SETC  '"TEDTOKEN='                                     00200100
&ZMS             SETC  '&ZMS.&TEDTOKEN"'                                00200200
&ZMS             SETC  '&ZMS "TEDTOKEN"'                                00200300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00200400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00200500
.ZG11A           ANOP  ,                                                00200600
.*-------------------------------------------------------------------   00200700
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00200800
&ZXTEDTOKEN      SETC  'OUTPUT'    SET IN/OUTPUT                        00200900
&XTEDTOKEN       SETC  '&TEDTOKEN(1)'           SET XVARIABLE           00201000
                 AIF   (N'&TEDTOKEN GT 1).ZG11B  MULTI                  00201100
&XTEDTOKEN       SETC  '&TEDTOKEN'              SET XVARIABLE           00201200
.ZG11B           AIF   (K'&TEDTOKEN(1) GT 0).ZG11C                      00201300
&ZXTEDTOKEN      SETC  ''          RESET IN/OUTPUT                      00201400
&ZMS             SETC  ' '                                              00201500
&ZMS             SETC  '&ZMS "TEDTOKEN" KEY AND ITS'                    00201600
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00201700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00201800
.ZG11C           ANOP  ,                                                00201900
.*-------------------------------------------------------------------   00202000
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00202100
                 AIF   (K'&ZXTEDTOKEN LE 0).ZG11R  NOT I/O              00202200
                 AIF   ('&XTEDTOKEN'(1,1) NE '(').ZG11R                 00202300
&ZCGPR           SETC  '&XTEDTOKEN'(2,K'&XTEDTOKEN-2)                   00202400
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                     00202500
                 AIF   (K'&ZCGPR GT 2).ZG11Q                            00202600
                 AIF   ('&ZCGPR' EQ '0').ZG11Q                          00202700
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00202800
                 AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME        00202900
.ZG11P           ANOP  ,                                                00203000
                 AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC             00203100
                 AIF   ('&ZCGPR' LT '2').ZG11Q                          00203200
                 AIF   ('&ZCGPR' LE '12').ZG11R                         00203300
.ZG11Q           ANOP  ,                                                00203400
&ZMS             SETC  '"TEDTOKEN='                                     00203500
&ZMS             SETC  '&ZMS.&TEDTOKEN"'                                00203600
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00203700
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00203800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00203900
.ZG11R           ANOP  ,                                                00204000
.*-------------------------------------------------------------------   00204100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00204200
.ZG13            ANOP  ,                                                00204300
&ZTLC            SETC 'RECORD'                                          00204400
                 AIF   ('&REQUEST(1)' NE '&ZTLC').ZG38                  00204500
&XREQUEST        SETC  'RECORD'    SET KEYWORD                          00204600
                 AIF   (N'&REQUEST LE 1).ZG13A  CK NUM                  00204700
&ZMS             SETC  '"REQUEST='                                      00204800
&ZMS             SETC  '&ZMS.&REQUEST"'                                 00204900
&ZMS             SETC  '&ZMS "REQUEST"'                                 00205000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00205100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00205200
.ZG13A           ANOP  ,                                                00205300
.*------------------------------------------------------------------    00205400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00205500
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00205600
.ZG13A0          AIF   (K'&COMPNAME LE 0).ZG13A1  OK                    00205700
&ZCVAL           SETC '&ZCVAL COMPNAME'         INCORRECT KEY USED      00205800
.ZG13A1          AIF   (K'&MAXEVENTS LE 0).ZG13A2  OK                   00205900
&ZCVAL           SETC '&ZCVAL MAXEVENTS'        INCORRECT KEY USED      00206000
.ZG13A2          AIF   (K'&ZCVAL LE 0).ZG13A3   OK                      00206100
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00206200
&ZMS             SETC  '"REQUEST'                                       00206300
&ZMS             SETC  '&ZMS.=&REQUEST"'                                00206400
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00206500
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00206600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00206700
.ZG13A3          ANOP  ,                                                00206800
.*----------------------------------------------------------------***   00206900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00207000
                 AIF   (N'&TEDTOKEN LE 1).ZG15A  CK NUM                 00207100
&ZMS             SETC  '"TEDTOKEN='                                     00207200
&ZMS             SETC  '&ZMS.&TEDTOKEN"'                                00207300
&ZMS             SETC  '&ZMS "TEDTOKEN"'                                00207400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00207500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00207600
.ZG15A           ANOP  ,                                                00207700
.*-------------------------------------------------------------------   00207800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00207900
&ZXTEDTOKEN      SETC  'INPUT'     SET IN/OUTPUT                        00208000
&XTEDTOKEN       SETC  '&TEDTOKEN(1)'           SET XVARIABLE           00208100
                 AIF   (N'&TEDTOKEN GT 1).ZG15B  MULTI                  00208200
&XTEDTOKEN       SETC  '&TEDTOKEN'              SET XVARIABLE           00208300
.ZG15B           AIF   (K'&TEDTOKEN(1) GT 0).ZG15C                      00208400
&ZXTEDTOKEN      SETC  ''          RESET IN/OUTPUT                      00208500
&ZMS             SETC  ' '                                              00208600
&ZMS             SETC  '&ZMS "TEDTOKEN" KEY AND ITS'                    00208700
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00208800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00208900
.ZG15C           ANOP  ,                                                00209000
.*-------------------------------------------------------------------   00209100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00209200
                 AIF   (K'&ZXTEDTOKEN LE 0).ZG15R  NOT I/O              00209300
                 AIF   ('&XTEDTOKEN'(1,1) NE '(').ZG15R                 00209400
&ZCGPR           SETC  '&XTEDTOKEN'(2,K'&XTEDTOKEN-2)                   00209500
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG15P                     00209600
                 AIF   (K'&ZCGPR GT 2).ZG15Q                            00209700
                 AIF   ('&ZCGPR' EQ '0').ZG15Q                          00209800
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00209900
                 AIF   (T'&ZCGPR NE 'N').ZG15Q  INVALID REG NAME        00210000
.ZG15P           ANOP  ,                                                00210100
                 AIF   (T'&ZCGPR NE 'N').ZG15R  NON NUMERIC             00210200
                 AIF   ('&ZCGPR' LT '2').ZG15Q                          00210300
                 AIF   ('&ZCGPR' LE '12').ZG15R                         00210400
.ZG15Q           ANOP  ,                                                00210500
&ZMS             SETC  '"TEDTOKEN='                                     00210600
&ZMS             SETC  '&ZMS.&TEDTOKEN"'                                00210700
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00210800
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00210900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00211000
.ZG15R           ANOP  ,                                                00211100
.*------------------------------------------------------------------    00211200
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00211300
&XEVENTTYPE      SETC  ''          INITIALIZE XVARIABLE                 00211400
.*-------------------------------------------------------------------   00211500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00211600
.ZG19            ANOP  ,                                                00211700
                 AIF   (K'&EVENTTYPE(1) LE 0).ZG19A                     00211800
&ZTLC            SETC 'START'                                           00211900
                 AIF   ('&EVENTTYPE(1)' NE '&ZTLC').ZG20                00212000
&XEVENTTYPE      SETC  'START'     SET KEYWORD                          00212100
                 AIF   (N'&EVENTTYPE LE 1).ZG19A  CK NUM                00212200
&ZMS             SETC  '"EVENTTYPE='                                    00212300
&ZMS             SETC  '&ZMS.&EVENTTYPE"'                               00212400
&ZMS             SETC  '&ZMS "EVENTTYPE"'                               00212500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00212600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00212700
.ZG19A           ANOP  ,                                                00212800
.*-------------------------------------------------------------------   00212900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00213000
.ZG20            ANOP  ,                                                00213100
&ZTLC            SETC 'MID'                                             00213200
                 AIF   ('&EVENTTYPE(1)' NE '&ZTLC').ZG21                00213300
&XEVENTTYPE      SETC  'MID'       SET KEYWORD                          00213400
                 AIF   (N'&EVENTTYPE LE 1).ZG20A  CK NUM                00213500
&ZMS             SETC  '"EVENTTYPE='                                    00213600
&ZMS             SETC  '&ZMS.&EVENTTYPE"'                               00213700
&ZMS             SETC  '&ZMS "EVENTTYPE"'                               00213800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00213900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00214000
.ZG20A           ANOP  ,                                                00214100
.*-------------------------------------------------------------------   00214200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00214300
.ZG21            ANOP  ,                                                00214400
&ZTLC            SETC 'END'                                             00214500
                 AIF   ('&EVENTTYPE(1)' NE '&ZTLC').ZG22                00214600
&XEVENTTYPE      SETC  'END'       SET KEYWORD                          00214700
                 AIF   (N'&EVENTTYPE LE 1).ZG21A  CK NUM                00214800
&ZMS             SETC  '"EVENTTYPE='                                    00214900
&ZMS             SETC  '&ZMS.&EVENTTYPE"'                               00215000
&ZMS             SETC  '&ZMS "EVENTTYPE"'                               00215100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00215200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00215300
.ZG21A           ANOP  ,                                                00215400
.*------------------------------------------------------------------    00215500
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00215600
.ZG22            ANOP  ,                                                00215700
&ZXEVENTTYPE     SETC  'INPUT'     SET IN/OUTPUT                        00215800
                 AIF   (K'&XEVENTTYPE GT 0).ZG22E  VALID ARG            00215900
                 AIF   (T'&EVENTTYPE EQ 'O').ZG22D  OMITTED             00216000
&ZASYSLNDX       SETA  0                                                00216100
.ZG22A           ANOP  ,           POSITIONAL MACRO KEY                 00216200
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00216300
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG22C                 00216400
&ZTLC            SETC 'EVENTTYPE'                                       00216500
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG22A        00216600
.ZG22B           ANOP  ,                                                00216700
&ZXEVENTTYPE     SETC  ''          RESET IN/OUTPUT                      00216800
&ZMS             SETC  'THE "EVENTTYPE" KEY'                            00216900
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00217000
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00217100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00217200
                 AGO   .ZG22E                                           00217300
.ZG22C           ANOP  ,                                                00217400
&ZXEVENTTYPE     SETC  ''          RESET IN/OUTPUT                      00217500
&ZMS             SETC  '"EVENTTYPE='                                    00217600
&ZMS             SETC  '&ZMS.&EVENTTYPE"'                               00217700
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00217800
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00217900
&ZMS             SETC  '&ZMS "START",'                                  00218000
&ZMS             SETC  '&ZMS "MID",'                                    00218100
&ZMS             SETC  '&ZMS OR "END".'                                 00218200
                 MNOTE 8,' &ZMS '                                       00218300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00218400
                 AGO   .ZG22E                                           00218500
.ZG22D           ANOP  ,                                                00218600
&XEVENTTYPE      SETC  'START'     SET DEFAULT KEYWORD                  00218700
.ZG22E           ANOP  ,                                                00218800
.*------------------------------------------------------------------    00218900
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00219000
                 AIF   (K'&EVENTTYPE(1) GT 0).ZG22F  PARM               00219100
&XEVENTTYPE      SETC  ''          ENSURE NULL KEYWORD                  00219200
&ZXEVENTTYPE     SETC  ''          RESET IN/OUTPUT                      00219300
&ZMS             SETC  'THE'                                            00219400
&ZMS             SETC  '&ZMS "EVENTTYPE" KEY AND ITS'                   00219500
&ZMS             SETC  '&ZMS ARGUMENT ARE REQUIRED.'                    00219600
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00219700
&ZMS             SETC  '&ZMS "START",'                                  00219800
&ZMS             SETC  '&ZMS "MID",'                                    00219900
&ZMS             SETC  '&ZMS OR "END".'                                 00220000
                 MNOTE 8,' &ZMS '                                       00220100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00220200
.ZG22F           ANOP  ,                                                00220300
.*----------------------------------------------------------------***   00220400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00220500
                 AIF   (N'&EVENTTHREAD LE 1).ZG24A  CK NUM              00220600
&ZMS             SETC  '"EVENTTHREAD='                                  00220700
&ZMS             SETC  '&ZMS.&EVENTTHREAD"'                             00220800
&ZMS             SETC  '&ZMS "EVENTTHREAD"'                             00220900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00221000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00221100
.ZG24A           ANOP  ,                                                00221200
.*-------------------------------------------------------------------   00221300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00221400
&ZXEVENTTHREAD   SETC  'INPUT'     SET IN/OUTPUT                        00221500
&XEVENTTHREAD    SETC  '&EVENTTHREAD(1)'        SET XVARIABLE           00221600
                 AIF   (N'&EVENTTHREAD GT 1).ZG24B  MULTI               00221700
&XEVENTTHREAD    SETC  '&EVENTTHREAD'           SET XVARIABLE           00221800
.ZG24B           AIF   (K'&EVENTTHREAD(1) GT 0).ZG24C                   00221900
&ZXEVENTTHREAD   SETC  ''          RESET IN/OUTPUT                      00222000
&ZMS             SETC  ' '                                              00222100
&ZMS             SETC  '&ZMS "EVENTTHREAD" KEY AND ITS'                 00222200
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00222300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00222400
.ZG24C           ANOP  ,                                                00222500
.*-------------------------------------------------------------------   00222600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00222700
                 AIF   (K'&ZXEVENTTHREAD LE 0).ZG24R  NOT I/O           00222800
                 AIF   ('&XEVENTTHREAD'(1,1) NE '(').ZG24R              00222900
&ZCGPR           SETC  '&XEVENTTHREAD'(2,K'&XEVENTTHREAD-2)             00223000
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG24P                     00223100
                 AIF   (K'&ZCGPR GT 2).ZG24Q                            00223200
                 AIF   ('&ZCGPR' EQ '0').ZG24Q                          00223300
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00223400
                 AIF   (T'&ZCGPR NE 'N').ZG24Q  INVALID REG NAME        00223500
.ZG24P           ANOP  ,                                                00223600
                 AIF   (T'&ZCGPR NE 'N').ZG24R  NON NUMERIC             00223700
                 AIF   ('&ZCGPR' LT '2').ZG24Q                          00223800
                 AIF   ('&ZCGPR' LE '12').ZG24R                         00223900
.ZG24Q           ANOP  ,                                                00224000
&ZMS             SETC  '"EVENTTHREAD='                                  00224100
&ZMS             SETC  '&ZMS.&EVENTTHREAD"'                             00224200
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00224300
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00224400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00224500
.ZG24R           ANOP  ,                                                00224600
.*----------------------------------------------------------------***   00224700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00224800
                 AIF   (N'&EVENTDESC LE 1).ZG27A  CK NUM                00224900
&ZMS             SETC  '"EVENTDESC='                                    00225000
&ZMS             SETC  '&ZMS.&EVENTDESC"'                               00225100
&ZMS             SETC  '&ZMS "EVENTDESC"'                               00225200
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00225300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00225400
.ZG27A           ANOP  ,                                                00225500
.*-------------------------------------------------------------------   00225600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00225700
&ZXEVENTDESC     SETC  'INPUT'     SET IN/OUTPUT                        00225800
&XEVENTDESC      SETC  '&EVENTDESC(1)'          SET XVARIABLE           00225900
                 AIF   (N'&EVENTDESC GT 1).ZG27B  MULTI                 00226000
&XEVENTDESC      SETC  '&EVENTDESC'             SET XVARIABLE           00226100
.ZG27B           AIF   (K'&EVENTDESC(1) GT 0).ZG27C                     00226200
&ZXEVENTDESC     SETC  ''          RESET IN/OUTPUT                      00226300
&ZMS             SETC  ' '                                              00226400
&ZMS             SETC  '&ZMS "EVENTDESC" KEY AND ITS'                   00226500
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00226600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00226700
.ZG27C           ANOP  ,                                                00226800
.*-------------------------------------------------------------------   00226900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00227000
                 AIF   (K'&ZXEVENTDESC LE 0).ZG27R  NOT I/O             00227100
                 AIF   ('&XEVENTDESC'(1,1) NE '(').ZG27R                00227200
&ZCGPR           SETC  '&XEVENTDESC'(2,K'&XEVENTDESC-2)                 00227300
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG27P                     00227400
                 AIF   (K'&ZCGPR GT 2).ZG27Q                            00227500
                 AIF   ('&ZCGPR' EQ '0').ZG27Q                          00227600
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00227700
                 AIF   (T'&ZCGPR NE 'N').ZG27Q  INVALID REG NAME        00227800
.ZG27P           ANOP  ,                                                00227900
                 AIF   (T'&ZCGPR NE 'N').ZG27R  NON NUMERIC             00228000
                 AIF   ('&ZCGPR' LT '2').ZG27Q                          00228100
                 AIF   ('&ZCGPR' LE '12').ZG27R                         00228200
.ZG27Q           ANOP  ,                                                00228300
&ZMS             SETC  '"EVENTDESC='                                    00228400
&ZMS             SETC  '&ZMS.&EVENTDESC"'                               00228500
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00228600
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00228700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00228800
.ZG27R           ANOP  ,                                                00228900
.*----------------------------------------------------------------***   00229000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00229100
                 AIF   (N'&MODNAME LE 1).ZG30A  CK NUM                  00229200
&ZMS             SETC  '"MODNAME='                                      00229300
&ZMS             SETC  '&ZMS.&MODNAME"'                                 00229400
&ZMS             SETC  '&ZMS "MODNAME"'                                 00229500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00229600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00229700
.ZG30A           ANOP  ,                                                00229800
.*-------------------------------------------------------------------   00229900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00230000
&ZXMODNAME       SETC  'INPUT'     SET IN/OUTPUT                        00230100
&XMODNAME        SETC  '&MODNAME(1)'            SET XVARIABLE           00230200
                 AIF   (N'&MODNAME GT 1).ZG30B  MULTI                   00230300
&XMODNAME        SETC  '&MODNAME'  SET XVARIABLE                        00230400
.ZG30B           AIF   (K'&MODNAME(1) GT 0).ZG30C                       00230500
&ZXMODNAME       SETC  ''          RESET IN/OUTPUT                      00230600
&ZMS             SETC  ' '                                              00230700
&ZMS             SETC  '&ZMS "MODNAME" KEY AND ITS'                     00230800
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00230900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00231000
.ZG30C           ANOP  ,                                                00231100
.*-------------------------------------------------------------------   00231200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00231300
                 AIF   (K'&ZXMODNAME LE 0).ZG30R  NOT I/O               00231400
                 AIF   ('&XMODNAME'(1,1) NE '(').ZG30R                  00231500
&ZCGPR           SETC  '&XMODNAME'(2,K'&XMODNAME-2)                     00231600
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG30P                     00231700
                 AIF   (K'&ZCGPR GT 2).ZG30Q                            00231800
                 AIF   ('&ZCGPR' EQ '0').ZG30Q                          00231900
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00232000
                 AIF   (T'&ZCGPR NE 'N').ZG30Q  INVALID REG NAME        00232100
.ZG30P           ANOP  ,                                                00232200
                 AIF   (T'&ZCGPR NE 'N').ZG30R  NON NUMERIC             00232300
                 AIF   ('&ZCGPR' LT '2').ZG30Q                          00232400
                 AIF   ('&ZCGPR' LE '12').ZG30R                         00232500
.ZG30Q           ANOP  ,                                                00232600
&ZMS             SETC  '"MODNAME='                                      00232700
&ZMS             SETC  '&ZMS.&MODNAME"'                                 00232800
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00232900
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00233000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00233100
.ZG30R           ANOP  ,                                                00233200
.*----------------------------------------------------------------***   00233300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00233400
                 AIF   (N'&MODLEVEL LE 1).ZG33A  CK NUM                 00233500
&ZMS             SETC  '"MODLEVEL='                                     00233600
&ZMS             SETC  '&ZMS.&MODLEVEL"'                                00233700
&ZMS             SETC  '&ZMS "MODLEVEL"'                                00233800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00233900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00234000
.ZG33A           ANOP  ,                                                00234100
.*-------------------------------------------------------------------   00234200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00234300
&ZXMODLEVEL      SETC  'INPUT'     SET IN/OUTPUT                        00234400
&XMODLEVEL       SETC  '&MODLEVEL(1)'           SET XVARIABLE           00234500
                 AIF   (N'&MODLEVEL GT 1).ZG33B  MULTI                  00234600
&XMODLEVEL       SETC  '&MODLEVEL'              SET XVARIABLE           00234700
.ZG33B           AIF   (K'&MODLEVEL(1) GT 0).ZG33C                      00234800
&ZXMODLEVEL      SETC  ''          RESET IN/OUTPUT                      00234900
&ZMS             SETC  ' '                                              00235000
&ZMS             SETC  '&ZMS "MODLEVEL" KEY AND ITS'                    00235100
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00235200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00235300
.ZG33C           ANOP  ,                                                00235400
.*-------------------------------------------------------------------   00235500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00235600
                 AIF   (K'&ZXMODLEVEL LE 0).ZG33R  NOT I/O              00235700
                 AIF   ('&XMODLEVEL'(1,1) NE '(').ZG33R                 00235800
&ZCGPR           SETC  '&XMODLEVEL'(2,K'&XMODLEVEL-2)                   00235900
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG33P                     00236000
                 AIF   (K'&ZCGPR GT 2).ZG33Q                            00236100
                 AIF   ('&ZCGPR' EQ '0').ZG33Q                          00236200
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00236300
                 AIF   (T'&ZCGPR NE 'N').ZG33Q  INVALID REG NAME        00236400
.ZG33P           ANOP  ,                                                00236500
                 AIF   (T'&ZCGPR NE 'N').ZG33R  NON NUMERIC             00236600
                 AIF   ('&ZCGPR' LT '2').ZG33Q                          00236700
                 AIF   ('&ZCGPR' LE '12').ZG33R                         00236800
.ZG33Q           ANOP  ,                                                00236900
&ZMS             SETC  '"MODLEVEL='                                     00237000
&ZMS             SETC  '&ZMS.&MODLEVEL"'                                00237100
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00237200
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00237300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00237400
.ZG33R           ANOP  ,                                                00237500
.*----------------------------------------------------------------***   00237600
.***AG.KXVAR15 NAME, OPT INPUT, KEYS -MULTIPLE ARGUMENTS                00237700
&ZXUSERDATA      SETC  'INPUT'     SET IN/OUTPUT                        00237800
&ZI              SETA  0           ARRAY INDEX                          00237900
&ZJ              SETA  0           PARM INDEX                           00238000
                 AIF   (N'&USERDATA LE 0).ZG36C                         00238100
.ZG36A           ANOP  ,           LOOP TO GET PARMS                    00238200
&ZJ              SETA  &ZJ+1       NEXT PARM                            00238300
                 AIF   (&ZJ GT N'&USERDATA).ZG36B  DONE                 00238400
                 AIF   (K'&USERDATA(&ZJ) LE 0).ZG36A  NULL              00238500
&ZI              SETA  &ZI+1       NEXT ARRAY ENTRY                     00238600
&XUSERDATA(&ZI)  SETC  '&USERDATA(&ZJ)'                                 00238700
                 AGO   .ZG36A                                           00238800
.*                                                                      00238900
.ZG36B           ANOP  ,                                                00239000
&ZI              SETA  &ZI+1       NEXT ARRAY ENTRY                     00239100
&XUSERDATA(&ZI)  SETC  ''          NULL AT ARRAY END                    00239200
                 AIF   (&ZI GT 1).ZG36D         PARMS                   00239300
.ZG36C           ANOP  ,                                                00239400
&XUSERDATA(1)    SETC  'NO_USERDATA'            SET DEFAULT             00239500
&XUSERDATA(2)    SETC  ''          NULL AT ARRAY END                    00239600
.ZG36D           ANOP  ,                                                00239700
.*------------------------------------------------------------------    00239800
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00239900
.ZG38            ANOP  ,                                                00240000
&ZXREQUEST       SETC  'INPUT'     SET IN/OUTPUT                        00240100
                 AIF   (K'&XREQUEST GT 0).ZG38E  VALID ARG              00240200
                 AIF   (T'&REQUEST EQ 'O').ZG38D  OMITTED               00240300
&ZASYSLNDX       SETA  0                                                00240400
.ZG38A           ANOP  ,           POSITIONAL MACRO KEY                 00240500
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00240600
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG38C                 00240700
&ZTLC            SETC 'REQUEST'                                         00240800
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG38A        00240900
.ZG38B           ANOP  ,                                                00241000
&ZXREQUEST       SETC  ''          RESET IN/OUTPUT                      00241100
&ZMS             SETC  'THE "REQUEST" KEY'                              00241200
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00241300
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00241400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00241500
                 AGO   .ZG38E                                           00241600
.ZG38C           ANOP  ,                                                00241700
&ZXREQUEST       SETC  ''          RESET IN/OUTPUT                      00241800
&ZMS             SETC  '"REQUEST='                                      00241900
&ZMS             SETC  '&ZMS.&REQUEST"'                                 00242000
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00242100
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00242200
&ZMS             SETC  '&ZMS "REGISTER"'                                00242300
&ZMS             SETC  '&ZMS OR "RECORD".'                              00242400
                 MNOTE 8,' &ZMS '                                       00242500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00242600
                 AGO   .ZG38E                                           00242700
.ZG38D           ANOP  ,                                                00242800
&XREQUEST        SETC  'REGISTER'  SET DEFAULT KEYWORD                  00242900
.ZG38E           ANOP  ,                                                00243000
.*------------------------------------------------------------------    00243100
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00243200
                 AIF   (K'&REQUEST(1) GT 0).ZG38F  PARM                 00243300
&XREQUEST        SETC  ''          ENSURE NULL KEYWORD                  00243400
&ZXREQUEST       SETC  ''          RESET IN/OUTPUT                      00243500
&ZMS             SETC  'THE'                                            00243600
&ZMS             SETC  '&ZMS "REQUEST" KEY AND ITS'                     00243700
&ZMS             SETC  '&ZMS ARGUMENT ARE REQUIRED.'                    00243800
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00243900
&ZMS             SETC  '&ZMS "REGISTER"'                                00244000
&ZMS             SETC  '&ZMS OR "RECORD".'                              00244100
                 MNOTE 8,' &ZMS '                                       00244200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00244300
.ZG38F           ANOP  ,                                                00244400
.*----------------------------------------------------------------***   00244500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00244600
                 AIF   (N'&WORKAREA LE 1).ZG40A  CK NUM                 00244700
&ZMS             SETC  '"WORKAREA='                                     00244800
&ZMS             SETC  '&ZMS.&WORKAREA"'                                00244900
&ZMS             SETC  '&ZMS "WORKAREA"'                                00245000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00245100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00245200
.ZG40A           ANOP  ,                                                00245300
.*-------------------------------------------------------------------   00245400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00245500
&ZXWORKAREA      SETC  'INPUT'     SET IN/OUTPUT                        00245600
&XWORKAREA       SETC  '&WORKAREA(1)'           SET XVARIABLE           00245700
                 AIF   (N'&WORKAREA GT 1).ZG40B  MULTI                  00245800
&XWORKAREA       SETC  '&WORKAREA'              SET XVARIABLE           00245900
.ZG40B           AIF   (K'&WORKAREA(1) GT 0).ZG40C                      00246000
&ZXWORKAREA      SETC  ''          RESET IN/OUTPUT                      00246100
&ZMS             SETC  ' '                                              00246200
&ZMS             SETC  '&ZMS "WORKAREA" KEY AND ITS'                    00246300
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00246400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00246500
.ZG40C           ANOP  ,                                                00246600
.*-------------------------------------------------------------------   00246700
.***AG.KCK01 NAME, RQD INPUT, KEYS -GPR NOT ALLOWED                     00246800
                 AIF   (K'&ZXWORKAREA LE 0).ZG40P  NOT I/O              00246900
                 AIF   ('&XWORKAREA'(1,1) NE '(').ZG40P                 00247000
&ZXWORKAREA      SETC  ''          RESET IN/OUTPUT                      00247100
&ZMS             SETC  '"WORKAREA='                                     00247200
&ZMS             SETC  '&ZMS.&WORKAREA"'                                00247300
&ZMS             SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'        00247400
                 MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                00247500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00247600
.ZG40P           ANOP  ,                                                00247700
.*----------------------------------------------------------------***   00247800
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00247900
                 AIF   (N'&RETCODE LE 1).ZG43A  CK NUM                  00248000
&ZMS             SETC  '"RETCODE='                                      00248100
&ZMS             SETC  '&ZMS.&RETCODE"'                                 00248200
&ZMS             SETC  '&ZMS "RETCODE"'                                 00248300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00248400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00248500
.ZG43A           ANOP  ,                                                00248600
.*-------------------------------------------------------------------   00248700
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00248800
                 AIF   (K'&RETCODE(1) LE 0).ZG43C  NO PARM              00248900
&ZXRETCODE       SETC  'OUTPUT'    SET OUTPUT                           00249000
&XRETCODE        SETC  '&RETCODE(1)'            SET XVARIABLE           00249100
                 AIF   (N'&RETCODE GT 1).ZG43C                          00249200
&XRETCODE        SETC  '&RETCODE'  SET XVARIABLE                        00249300
.ZG43C           ANOP  ,                                                00249400
.*-------------------------------------------------------------------   00249500
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00249600
                 AIF   (K'&ZXRETCODE LE 0).ZG43R  NOT I/O               00249700
                 AIF   ('&XRETCODE'(1,1) NE '(').ZG43R                  00249800
&ZCGPR           SETC  '&XRETCODE'(2,K'&XRETCODE-2)                     00249900
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG43P                     00250000
                 AIF   (K'&ZCGPR GT 2).ZG43Q                            00250100
                 AIF   ('&ZCGPR' EQ '0').ZG43Q                          00250200
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00250300
                 AIF   (T'&ZCGPR NE 'N').ZG43Q  INVALID REG NAME        00250400
.ZG43P           ANOP  ,                                                00250500
                 AIF   (T'&ZCGPR NE 'N').ZG43R  NON NUMERIC             00250600
                 AIF   ('&ZCGPR' EQ '15').ZG43R                         00250700
                 AIF   ('&ZCGPR' LT '2').ZG43Q                          00250800
                 AIF   ('&ZCGPR' LE '12').ZG43R                         00250900
.ZG43Q           ANOP  ,                                                00251000
&ZMS             SETC  '"RETCODE='                                      00251100
&ZMS             SETC  '&ZMS.&RETCODE"'                                 00251200
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00251300
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'         00251400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00251500
.ZG43R           ANOP  ,                                                00251600
.*----------------------------------------------------------------***   00251700
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00251800
                 AIF   (N'&RSNCODE LE 1).ZG46A  CK NUM                  00251900
&ZMS             SETC  '"RSNCODE='                                      00252000
&ZMS             SETC  '&ZMS.&RSNCODE"'                                 00252100
&ZMS             SETC  '&ZMS "RSNCODE"'                                 00252200
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00252300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00252400
.ZG46A           ANOP  ,                                                00252500
.*-------------------------------------------------------------------   00252600
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00252700
                 AIF   (K'&RSNCODE(1) LE 0).ZG46C  NO PARM              00252800
&ZXRSNCODE       SETC  'OUTPUT'    SET OUTPUT                           00252900
&XRSNCODE        SETC  '&RSNCODE(1)'            SET XVARIABLE           00253000
                 AIF   (N'&RSNCODE GT 1).ZG46C                          00253100
&XRSNCODE        SETC  '&RSNCODE'  SET XVARIABLE                        00253200
.ZG46C           ANOP  ,                                                00253300
.*-------------------------------------------------------------------   00253400
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00253500
                 AIF   (K'&ZXRSNCODE LE 0).ZG46R  NOT I/O               00253600
                 AIF   ('&XRSNCODE'(1,1) NE '(').ZG46R                  00253700
&ZCGPR           SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                     00253800
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG46P                     00253900
                 AIF   (K'&ZCGPR GT 2).ZG46Q                            00254000
                 AIF   ('&ZCGPR' EQ '0').ZG46R                          00254100
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00254200
                 AIF   (T'&ZCGPR NE 'N').ZG46Q  INVALID REG NAME        00254300
.ZG46P           ANOP  ,                                                00254400
                 AIF   (T'&ZCGPR NE 'N').ZG46R  NON NUMERIC             00254500
                 AIF   ('&ZCGPR' EQ '0').ZG46R                          00254600
                 AIF   ('&ZCGPR' LT '2').ZG46Q                          00254700
                 AIF   ('&ZCGPR' LE '12').ZG46R                         00254800
.ZG46Q           ANOP  ,                                                00254900
&ZMS             SETC  '"RSNCODE='                                      00255000
&ZMS             SETC  '&ZMS.&RSNCODE"'                                 00255100
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00255200
                 MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'          00255300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00255400
.ZG46R           ANOP  ,                                                00255500
.******************************************************************     00255600
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00255700
.******************************************************************     00255800
                 ACTR  10000                                            00255900
.*----------------------------------------------------------------***   00256000
.***AH.P02 EXTRA POSITIONALS                                            00256100
                 AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS             00256200
                 AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL             00256300
                 AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL         00256400
                 AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL          00256500
.ZGLISTX1        ANOP  ,                                                00256600
&ZCVAL           SETC  ''          ERROR FIELD                          00256700
&ZAWRK           SETA  0           POSITIONAL NUMBER                    00256800
.ZGLIST2         ANOP  ,                                                00256900
&ZAWRK           SETA  &ZAWRK+1    NEXT POSITIONAL                      00257000
                 AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE             00257100
&ZCVAL           SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                  00257200
                 AGO   .ZGLIST2                                         00257300
.*                                                                      00257400
.ZGLIST3         ANOP  ,                                                00257500
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)    STRIP COMMA             00257600
&ZMS             SETC  'POSITIONAL ARGUMENT(S),'                        00257700
&ZMS             SETC  '&ZMS "&ZCVAL"'                                  00257800
&ZMS             SETC  '&ZMS CANNOT BE USED.'                           00257900
&ZMS             SETC  '&ZMS NO POSITIONAL ARGUMENTS'                   00258000
                 MNOTE 8,' &ZMS ARE ALLOWED.'                           00258100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00258200
.ZGLISTX         ANOP  ,                                                00258300
&ZASYSLNDX       SETA  0                                                00258400
.*-------------------------------------------------------------------   00258500
.***AG.MF04 MF=(SLE)                                                    00258600
.ZGMFX           ANOP  ,           END OF FULL SYNTAX CHECK             00258700
.*******************************************************************    00258800
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00258900
.*******************************************************************    00259000
                 AIF   (&ZMACRET NE 0).ZLX2     ERROR DETECTED          00259100
.*******************************************************************    00259200
.***AE.01  START OF IEATEDS MACRO CODE                                  00259300
.*******************************************************************    00259400
                 LCLC  &M0M0001                 NAME                    00259500
&M0M0001         SETC  '&XLABEL'                SET NAME                00259600
                 AIF   (K'&XLABEL NE 0).XLAB2                           00259700
&M0M0001         SETC  'M00M&SYSNDX'            DEFAULT NAME            00259800
.*                                                                      00259900
.XLAB2           ANOP  ,                                                00260000
                 AIF   ('&XMF' EQ 'L').XLAB3                            00260100
&M0M0001 DS    0H                             IEATEDS-0                 00260200
.XLAB3           ANOP  ,                                                00260300
.*******************************************************************    00260400
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00260500
.*******************************************************************    00260600
              PUSH  PRINT                                               00260700
                 AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON       00260800
                 PRINT OFF         ++ PR01                              00260900
                 AGO   .ZPRNTXX                                         00261000
.ZPRINTX         PRINT ON                                               00261100
.ZPRNTXX         ANOP  ,                                                00261200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00261300
.**------------------------------------------------------------------** 00261400
.* Skip all validity checking for MF=L                                  00261500
         AIF   ('&MF(1)' EQ 'L').ENDPARMVALIDATION                      00261600
.*********************************************************************  00261700
.* Check to ensure AMODE 31.                                            00261800
.* Note that PLX does not need this check since PLX will get into       00261900
.* AMODE 31 before calling IEAVTEDS.                                    00262000
.*********************************************************************  00262100
                 AIF   ('&SYSAM64' NE 'YES').AMODETHIRTYONE             00262200
                 MNOTE 8,'IEATEDS - MUST BE IN AMODE(31).'              00262300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00262400
.AMODETHIRTYONE ANOP ,                                                  00262500
.ENDPARMVALIDATION ANOP ,                                               00262600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00262700
.********************************************************************   00262800
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00262900
.********************************************************************   00263000
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00263100
                      LCLA  &ZOPN1         INVOCATION INDEX             00263200
                      LCLC  &ZOPL(4095)    LABEL                        00263300
                      LCLC  &ZOPO(4095)    OPERATION                    00263400
                      LCLC  &ZOPV(4095)    VALUE                        00263500
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00263600
.*                                                                      00263700
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00263800
.******************************************************************     00263900
.***AL.L10 IEATEDS FMT=LIST MF=S!L PARAMETERS                           00264000
.******************************************************************     00264100
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00264200
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00264300
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00264400
&XMFATTR              SETC  '0D'                                        00264500
.*                                                                      00264600
&ZOPN                 SETA  &ZOPN+1                                     00264700
&ZOPL(&ZOPN)          SETC  ' '                                         00264800
                      AIF   (&SYSALVL NE 0).ZALVL6A                     00264900
&ZOPO(&ZOPN)          SETC  'B'                                         00265000
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00265100
                      AGO   .ZALVL6B                                    00265200
.ZALVL6A              ANOP                                              00265300
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00265400
&ZOPV(&ZOPN)          SETC  '4,8'                                       00265500
&ZOPN                 SETA  &ZOPN+1                                     00265600
&ZOPL(&ZOPN)          SETC  ' '                                         00265700
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00265800
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00265900
.ZALVL6B              ANOP                                              00266000
&ZOPD(&ZOPN)          SETC  '++ IEATEDS ARG PARMS'                      00266100
.*                                                                      00266200
&ZOPN                 SETA  &ZOPN+1                                     00266300
&ZOPL(&ZOPN)          SETC  ' '                                         00266400
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00266500
&ZOPV(&ZOPN)          SETC  '1'                                         00266600
&ZOPD(&ZOPN)          SETC  ' '                                         00266700
.*                                                                      00266800
.ZLMFSL2              ANOP  ,                                           00266900
.*-------------------------------------------------------------------   00267000
.***AM.L00  IEATEDS FMT=LIST name                                       00267100
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00267200
&ZOPN                 SETA &ZOPN+1                                      00267300
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00267400
&ZOPO(&ZOPN)          SETC 'EQU'                                        00267500
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00267600
&ZOPD(&ZOPN)          SETC '++ IEATEDS NAME'                            00267700
.ZLMFSL2M             ANOP  ,                                           00267800
.*-------------------------------------------------------------------   00267900
.***AM.L01  IEATEDS FMT=LIST PARAMETERS                                 00268000
&ZOPN                 SETA &ZOPN+1                                      00268100
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00268200
&ZOPO(&ZOPN)          SETC 'DS'                                         00268300
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00268400
&ZOPD(&ZOPN)          SETC '++ IEATEDS PARM LIST'                       00268500
.*-------------------------------------------------------------------   00268600
.***AM.L02 XVERSION XL1                                                 00268700
&ZOPN                 SETA &ZOPN+1                                      00268800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00268900
&ZOPO(&ZOPN)          SETC 'DS'                                         00269000
&ZOPV(&ZOPN)          SETC 'XL1'                                        00269100
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00269200
.*-------------------------------------------------------------------   00269300
.***AM.L05 XREQUEST XL1                                                 00269400
&ZOPN                 SETA &ZOPN+1                                      00269500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQUEST'                         00269600
&ZOPO(&ZOPN)          SETC 'DS'                                         00269700
&ZOPV(&ZOPN)          SETC 'XL1'                                        00269800
&ZOPD(&ZOPN)          SETC '++ &ZXREQUEST XREQUEST'                     00269900
.*                                                                      00270000
&ZOPN                 SETA  &ZOPN+1                                     00270100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_RECORD'                 00270200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00270300
&ZOPV(&ZOPN)          SETC  '0'                                         00270400
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              00270500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).RECORD'                       00270600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00270700
.*                                                                      00270800
&ZOPN                 SETA  &ZOPN+1                                     00270900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_REGISTER'               00271000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00271100
&ZOPV(&ZOPN)          SETC  '1'                                         00271200
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              00271300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).REGISTER'                     00271400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00271500
.*-------------------------------------------------------------------   00271600
.***AM.L05 XEVENTTYPE XL1                                               00271700
&ZOPN                 SETA &ZOPN+1                                      00271800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEVENTTYPE'                       00271900
&ZOPO(&ZOPN)          SETC 'DS'                                         00272000
&ZOPV(&ZOPN)          SETC 'XL1'                                        00272100
&ZOPD(&ZOPN)          SETC '++ &ZXEVENTTYPE XEVENTTYPE'                 00272200
.*                                                                      00272300
&ZOPN                 SETA  &ZOPN+1                                     00272400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XEVENTTYPE_START'                00272500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00272600
&ZOPV(&ZOPN)          SETC  '0'                                         00272700
&ZOPD(&ZOPN)          SETC  '++ XEVENTTYPE.'                            00272800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).START'                        00272900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00273000
.*                                                                      00273100
&ZOPN                 SETA  &ZOPN+1                                     00273200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XEVENTTYPE_MID'                  00273300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00273400
&ZOPV(&ZOPN)          SETC  '1'                                         00273500
&ZOPD(&ZOPN)          SETC  '++ XEVENTTYPE.'                            00273600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MID'                          00273700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00273800
.*                                                                      00273900
&ZOPN                 SETA  &ZOPN+1                                     00274000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XEVENTTYPE_END'                  00274100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00274200
&ZOPV(&ZOPN)          SETC  '2'                                         00274300
&ZOPD(&ZOPN)          SETC  '++ XEVENTTYPE.'                            00274400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).END'                          00274500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00274600
.*-------------------------------------------------------------------   00274700
.***AM.L09  XRSV0002 CL1                                                00274800
&ZOPN                 SETA &ZOPN+1                                      00274900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0002'                         00275000
&ZOPO(&ZOPN)          SETC 'DS'                                         00275100
&ZOPV(&ZOPN)          SETC 'CL1'                                        00275200
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00275300
.*-------------------------------------------------------------------   00275400
.***AM.L09  XCOMPNAME CL32                                              00275500
&ZOPN                 SETA &ZOPN+1                                      00275600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCOMPNAME'                        00275700
&ZOPO(&ZOPN)          SETC 'DS'                                         00275800
&ZOPV(&ZOPN)          SETC 'CL32'                                       00275900
&ZOPD(&ZOPN)          SETC '++ &ZXCOMPNAME '                            00276000
.*-------------------------------------------------------------------   00276100
.***AM.L09  XMODNAME CL8                                                00276200
&ZOPN                 SETA &ZOPN+1                                      00276300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMODNAME'                         00276400
&ZOPO(&ZOPN)          SETC 'DS'                                         00276500
&ZOPV(&ZOPN)          SETC 'CL8'                                        00276600
&ZOPD(&ZOPN)          SETC '++ &ZXMODNAME '                             00276700
.*-------------------------------------------------------------------   00276800
.***AM.L09  XMODLEVEL CL8                                               00276900
&ZOPN                 SETA &ZOPN+1                                      00277000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMODLEVEL'                        00277100
&ZOPO(&ZOPN)          SETC 'DS'                                         00277200
&ZOPV(&ZOPN)          SETC 'CL8'                                        00277300
&ZOPD(&ZOPN)          SETC '++ &ZXMODLEVEL '                            00277400
.*-------------------------------------------------------------------   00277500
.***AM.L09  XMODOFFSET F                                                00277600
&ZOPN                 SETA &ZOPN+1                                      00277700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMODOFFSET'                       00277800
&ZOPO(&ZOPN)          SETC 'DS'                                         00277900
&ZOPV(&ZOPN)          SETC 'F'                                          00278000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            00278100
.*-------------------------------------------------------------------   00278200
.***AM.L09  XEVENTTHREAD CL8                                            00278300
&ZOPN                 SETA &ZOPN+1                                      00278400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEVENTTHREAD'                     00278500
&ZOPO(&ZOPN)          SETC 'DS'                                         00278600
&ZOPV(&ZOPN)          SETC 'CL8'                                        00278700
&ZOPD(&ZOPN)          SETC '++ &ZXEVENTTHREAD '                         00278800
.*-------------------------------------------------------------------   00278900
.***AM.L09  XTEDTOKEN CL16                                              00279000
&ZOPN                 SETA &ZOPN+1                                      00279100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTEDTOKEN'                        00279200
&ZOPO(&ZOPN)          SETC 'DS'                                         00279300
&ZOPV(&ZOPN)          SETC 'CL16'                                       00279400
&ZOPD(&ZOPN)          SETC '++ &ZXTEDTOKEN '                            00279500
.*-------------------------------------------------------------------   00279600
.***AM.L09  XEVENTDESC CL32                                             00279700
&ZOPN                 SETA &ZOPN+1                                      00279800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEVENTDESC'                       00279900
&ZOPO(&ZOPN)          SETC 'DS'                                         00280000
&ZOPV(&ZOPN)          SETC 'CL32'                                       00280100
&ZOPD(&ZOPN)          SETC '++ &ZXEVENTDESC '                           00280200
.*-------------------------------------------------------------------   00280300
.***AM.L09  XUSERDATACOMBI CL16                                         00280400
&ZOPN                 SETA &ZOPN+1                                      00280500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUSERDATACOMBI'                   00280600
&ZOPO(&ZOPN)          SETC 'DS'                                         00280700
&ZOPV(&ZOPN)          SETC 'CL16'                                       00280800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            00280900
.*-------------------------------------------------------------------   00281000
.***AM.L09  XMAXEVENTS F                                                00281100
&ZOPN                 SETA &ZOPN+1                                      00281200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMAXEVENTS'                       00281300
&ZOPO(&ZOPN)          SETC 'DS'                                         00281400
&ZOPV(&ZOPN)          SETC 'F'                                          00281500
&ZOPD(&ZOPN)          SETC '++ &ZXMAXEVENTS '                           00281600
.*-------------------------------------------------------------------   00281700
.***AM.L09 ADDR XWORKAREA A                                             00281800
&ZOPN                 SETA &ZOPN+1                                      00281900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XWORKAREA_ADDR'                   00282000
&ZOPO(&ZOPN)          SETC 'DS'                                         00282100
&ZOPV(&ZOPN)          SETC 'A'                                          00282200
&ZOPD(&ZOPN)          SETC '++ &ZXWORKAREA ADDR'                        00282300
.*-------------------------------------------------------------------   00282400
.***AM.L09  XRSV0004 CL24                                               00282500
&ZOPN                 SETA &ZOPN+1                                      00282600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0004'                         00282700
&ZOPO(&ZOPN)          SETC 'DS'                                         00282800
&ZOPV(&ZOPN)          SETC 'CL24'                                       00282900
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00283000
.*-------------------------------------------------------------------   00283100
.***AM.L10 END OF IEATEDS LIST PARAMETERS                               00283200
&ZOPN                 SETA &ZOPN+1                                      00283300
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00283400
&ZOPO(&ZOPN)          SETC 'EQU'                                        00283500
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00283600
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00283700
.*                                                                      00283800
&ZOPN                 SETA &ZOPN+1                                      00283900
&ZOPL(&ZOPN)          SETC ' '                                          00284000
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00284100
&ZOPV(&ZOPN)          SETC '1'                                          00284200
&ZOPD(&ZOPN)          SETC ' '                                          00284300
.*-------------------------------------------------------------------   00284400
.***AL.L12 IEATEDS FMT=LIST MF=S!L PARAMETERS                           00284500
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00284600
.*                                                                      00284700
&ZOPN                 SETA  &ZOPN+1                                     00284800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00284900
&ZOPO(&ZOPN)          SETC  'DC'                                        00285000
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00285100
&ZOPD(&ZOPN)          SETC  '++ IEATEDS ARG PARMS'                      00285200
.*                                                                      00285300
.ZLMFSLX              ANOP  ,                                           00285400
.*-------------------------------------------------------------------   00285500
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00285600
&ZPLLEN               SETA 160                                          00285700
.*                                                                      00285800
.******************************************************************     00285900
.***AI.L01 IEATEDS FMT=LIST FILL IN PARAMETER AREA                      00286000
.******************************************************************     00286100
                      ACTR  10000                                       00286200
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00286300
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00286400
&ZCVAL                SETC  'LAE'          XAX MODE                     00286500
.ZIMFXA               ANOP ,                                            00286600
.*                                                                      00286700
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00286800
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00286900
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00287000
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00287100
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00287200
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00287300
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00287400
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00287500
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00287600
&ZOPN                 SETA  &ZOPN+1                                     00287700
&ZOPL(&ZOPN)          SETC  ' '                                         00287800
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00287900
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00288000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00288100
                      AGO   .ZIMFNX                                     00288200
.*                                                                      00288300
.ZIMFN2               ANOP ,                                            00288400
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     00288500
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00288600
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00288700
&ZOPN                 SETA  &ZOPN+1                                     00288800
&ZOPL(&ZOPN)          SETC  ' '                                         00288900
&ZOPO(&ZOPN)          SETC  'LAE'                                       00289000
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00289100
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00289200
                      AGO   .ZIMFNX                                     00289300
.ZIMFNX1              ANOP ,                                            00289400
&ZOPN                 SETA  &ZOPN+1                                     00289500
&ZOPL(&ZOPN)          SETC  ' '                                         00289600
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00289700
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00289800
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00289900
.ZIMFNX               ANOP ,                                            00290000
.********************************************************************   00290100
.***AI.L02 IEATEDS FMT=LIST INITIALIZE PARAMETER AREA                   00290200
.********************************************************************   00290300
.***AI.L03 MF=(SLE)                                                     00290400
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00290500
.*                                                                      00290600
&ZOPN                 SETA  &ZOPN+1                                     00290700
&ZOPL(&ZOPN)          SETC  ' '                                         00290800
&ZOPO(&ZOPN)          SETC  'XC'                                        00290900
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00291000
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00291100
.ZIMFLX               ANOP  ,                                           00291200
.*-------------------------------------------------------------------   00291300
.***AI.L07 XREQUEST AL1                                                 00291400
&ZW                   SETC  ''                                          00291500
.*-------------------------------------------------------------------   00291600
.***AI.L15 XREQUEST "RECORD" AL1                                        00291700
         AIF   ('&XREQUEST' NE 'RECORD').ZI3A                           00291800
&ZW                   SETC  '0'                                         00291900
.ZI3A                 ANOP  ,                                           00292000
.*-------------------------------------------------------------------   00292100
.***AI.L15 XREQUEST "REGISTER" AL1                                      00292200
         AIF   ('&XREQUEST' NE 'REGISTER').ZI4A                         00292300
&ZW                   SETC  '1'                                         00292400
.ZI4A                 ANOP  ,                                           00292500
.*-------------------------------------------------------------------   00292600
.***AI.L17 XREQUEST AL1                                                 00292700
                      AIF   ('&ZW' EQ '0').ZI4B                         00292800
                      AIF   ('&ZW' EQ '').ZI4B                          00292900
.*                                                                      00293000
&ZOPN                 SETA  &ZOPN+1                                     00293100
&ZOPL(&ZOPN)          SETC  ' '                                         00293200
&ZOPO(&ZOPN)          SETC  'MVI'                                       00293300
&ZOPV(&ZOPN)          SETC  '1(1),&ZW'                                  00293400
&ZOPD(&ZOPN)          SETC  '++ &ZXREQUEST XREQUEST'                    00293500
.ZI4B                 ANOP  ,                                           00293600
.*-------------------------------------------------------------------   00293700
.***AI.L07 XEVENTTYPE AL1                                               00293800
&ZW                   SETC  ''                                          00293900
.*-------------------------------------------------------------------   00294000
.***AI.L15 XEVENTTYPE "START" AL1                                       00294100
         AIF   ('&XEVENTTYPE' NE 'START').ZI6A                          00294200
&ZW                   SETC  '0'                                         00294300
.ZI6A                 ANOP  ,                                           00294400
.*-------------------------------------------------------------------   00294500
.***AI.L15 XEVENTTYPE "MID" AL1                                         00294600
         AIF   ('&XEVENTTYPE' NE 'MID').ZI7A                            00294700
&ZW                   SETC  '1'                                         00294800
.ZI7A                 ANOP  ,                                           00294900
.*-------------------------------------------------------------------   00295000
.***AI.L15 XEVENTTYPE "END" AL1                                         00295100
         AIF   ('&XEVENTTYPE' NE 'END').ZI8A                            00295200
&ZW                   SETC  '2'                                         00295300
.ZI8A                 ANOP  ,                                           00295400
.*-------------------------------------------------------------------   00295500
.***AI.L17 XEVENTTYPE AL1                                               00295600
                      AIF   ('&ZW' EQ '0').ZI8B                         00295700
                      AIF   ('&ZW' EQ '').ZI8B                          00295800
.*                                                                      00295900
&ZOPN                 SETA  &ZOPN+1                                     00296000
&ZOPL(&ZOPN)          SETC  ' '                                         00296100
&ZOPO(&ZOPN)          SETC  'MVI'                                       00296200
&ZOPV(&ZOPN)          SETC  '2(1),&ZW'                                  00296300
&ZOPD(&ZOPN)          SETC  '++ &ZXEVENTTYPE XEVENTTYPE'                00296400
.ZI8B                 ANOP  ,                                           00296500
.*-------------------------------------------------------------------   00296600
.***AI.L25  XCOMPNAME CL32                                              00296700
                      AIF   ('&ZXCOMPNAME' EQ '').ZI10E                 00296800
                      AIF   ('&ZXCOMPNAME' EQ 'OUTPUT').ZI10E           00296900
&ZCGPR                SETC  '&XCOMPNAME'                                00297000
.*                                                                      00297100
                      AIF   ('&XCOMPNAME'(1,1) NE '(').ZI10B            00297200
&ZCGPR   SETC  '0('.'&XCOMPNAME'(2,K'&XCOMPNAME-2).')'                  00297300
.ZI10B                ANOP  ,                                           00297400
.*                                                                      00297500
&ZOPN                 SETA  &ZOPN+1                                     00297600
&ZOPL(&ZOPN)          SETC  ' '                                         00297700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00297800
&ZOPV(&ZOPN)          SETC  '4(32,1),&ZCGPR'                            00297900
&ZOPD(&ZOPN)          SETC  '++ &ZXCOMPNAME XCOMPNAME'                  00298000
.*                                                                      00298100
.ZI10E                ANOP  ,                                           00298200
.*-------------------------------------------------------------------   00298300
.***AI.L25  XMODNAME CL8                                                00298400
                      AIF   ('&ZXMODNAME' EQ '').ZI11E                  00298500
                      AIF   ('&ZXMODNAME' EQ 'OUTPUT').ZI11E            00298600
&ZCGPR                SETC  '&XMODNAME'                                 00298700
.*                                                                      00298800
                      AIF   ('&XMODNAME'(1,1) NE '(').ZI11B             00298900
&ZCGPR   SETC  '0('.'&XMODNAME'(2,K'&XMODNAME-2).')'                    00299000
.ZI11B                ANOP  ,                                           00299100
.*                                                                      00299200
&ZOPN                 SETA  &ZOPN+1                                     00299300
&ZOPL(&ZOPN)          SETC  ' '                                         00299400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00299500
&ZOPV(&ZOPN)          SETC  '36(8,1),&ZCGPR'                            00299600
&ZOPD(&ZOPN)          SETC  '++ &ZXMODNAME XMODNAME'                    00299700
.*                                                                      00299800
.ZI11E                ANOP  ,                                           00299900
.*-------------------------------------------------------------------   00300000
.***AI.L25  XMODLEVEL CL8                                               00300100
                      AIF   ('&ZXMODLEVEL' EQ '').ZI12E                 00300200
                      AIF   ('&ZXMODLEVEL' EQ 'OUTPUT').ZI12E           00300300
&ZCGPR                SETC  '&XMODLEVEL'                                00300400
.*                                                                      00300500
                      AIF   ('&XMODLEVEL'(1,1) NE '(').ZI12B            00300600
&ZCGPR   SETC  '0('.'&XMODLEVEL'(2,K'&XMODLEVEL-2).')'                  00300700
.ZI12B                ANOP  ,                                           00300800
.*                                                                      00300900
&ZOPN                 SETA  &ZOPN+1                                     00301000
&ZOPL(&ZOPN)          SETC  ' '                                         00301100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00301200
&ZOPV(&ZOPN)          SETC  '44(8,1),&ZCGPR'                            00301300
&ZOPD(&ZOPN)          SETC  '++ &ZXMODLEVEL XMODLEVEL'                  00301400
.*                                                                      00301500
.ZI12E                ANOP  ,                                           00301600
.*-------------------------------------------------------------------   00301700
.***AI.L25  XEVENTTHREAD CL8                                            00301800
                      AIF   ('&ZXEVENTTHREAD' EQ '').ZI14E              00301900
                      AIF   ('&ZXEVENTTHREAD' EQ 'OUTPUT').ZI14E        00302000
&ZCGPR                SETC  '&XEVENTTHREAD'                             00302100
.*                                                                      00302200
                      AIF   ('&XEVENTTHREAD'(1,1) NE '(').ZI14B         00302300
&ZCGPR   SETC  '0('.'&XEVENTTHREAD'(2,K'&XEVENTTHREAD-2).')'            00302400
.ZI14B                ANOP  ,                                           00302500
.*                                                                      00302600
&ZOPN                 SETA  &ZOPN+1                                     00302700
&ZOPL(&ZOPN)          SETC  ' '                                         00302800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00302900
&ZOPV(&ZOPN)          SETC  '56(8,1),&ZCGPR'                            00303000
&ZOPD(&ZOPN)          SETC  '++ &ZXEVENTTHREAD XEVENTTHREAD'            00303100
.*                                                                      00303200
.ZI14E                ANOP  ,                                           00303300
.*-------------------------------------------------------------------   00303400
.***AI.L25  XTEDTOKEN CL16                                              00303500
                      AIF   ('&ZXTEDTOKEN' EQ '').ZI15E                 00303600
                      AIF   ('&ZXTEDTOKEN' EQ 'OUTPUT').ZI15E           00303700
&ZCGPR                SETC  '&XTEDTOKEN'                                00303800
.*                                                                      00303900
                      AIF   ('&XTEDTOKEN'(1,1) NE '(').ZI15B            00304000
&ZCGPR   SETC  '0('.'&XTEDTOKEN'(2,K'&XTEDTOKEN-2).')'                  00304100
.ZI15B                ANOP  ,                                           00304200
.*                                                                      00304300
&ZOPN                 SETA  &ZOPN+1                                     00304400
&ZOPL(&ZOPN)          SETC  ' '                                         00304500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00304600
&ZOPV(&ZOPN)          SETC  '64(16,1),&ZCGPR'                           00304700
&ZOPD(&ZOPN)          SETC  '++ &ZXTEDTOKEN XTEDTOKEN'                  00304800
.*                                                                      00304900
.ZI15E                ANOP  ,                                           00305000
.*-------------------------------------------------------------------   00305100
.***AI.L25  XEVENTDESC CL32                                             00305200
                      AIF   ('&ZXEVENTDESC' EQ '').ZI16E                00305300
                      AIF   ('&ZXEVENTDESC' EQ 'OUTPUT').ZI16E          00305400
&ZCGPR                SETC  '&XEVENTDESC'                               00305500
.*                                                                      00305600
                      AIF   ('&XEVENTDESC'(1,1) NE '(').ZI16B           00305700
&ZCGPR   SETC  '0('.'&XEVENTDESC'(2,K'&XEVENTDESC-2).')'                00305800
.ZI16B                ANOP  ,                                           00305900
.*                                                                      00306000
&ZOPN                 SETA  &ZOPN+1                                     00306100
&ZOPL(&ZOPN)          SETC  ' '                                         00306200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00306300
&ZOPV(&ZOPN)          SETC  '80(32,1),&ZCGPR'                           00306400
&ZOPD(&ZOPN)          SETC  '++ &ZXEVENTDESC XEVENTDESC'                00306500
.*                                                                      00306600
.ZI16E                ANOP  ,                                           00306700
.*-------------------------------------------------------------------   00306800
.***AI.L25  XMAXEVENTS F                                                00306900
                      AIF   ('&ZXMAXEVENTS' EQ '').ZI18E                00307000
                      AIF   ('&ZXMAXEVENTS' EQ 'OUTPUT').ZI18E          00307100
&ZCGPR                SETC  '&XMAXEVENTS'                               00307200
.*                                                                      00307300
                      AIF   ('&XMAXEVENTS'(1,1) NE '(').ZI18B           00307400
&ZCGPR   SETC  '0('.'&XMAXEVENTS'(2,K'&XMAXEVENTS-2).')'                00307500
                      AGO   .ZI18D                                      00307600
.ZI18B                ANOP  ,                                           00307700
.*                                                                      00307800
&ZC                   SETC  '&XMAXEVENTS'(1,1)                          00307900
                      AIF   (T'&ZC NE 'N').ZI18D                        00308000
&ZC                   SETC  '&XMAXEVENTS'                               00308100
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI18D               00308200
&ZCGPR                SETC  '=AL4(&XMAXEVENTS)'                         00308300
.*                                                                      00308400
.ZI18D                ANOP  ,                                           00308500
.*                                                                      00308600
&ZOPN                 SETA  &ZOPN+1                                     00308700
&ZOPL(&ZOPN)          SETC  ' '                                         00308800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00308900
&ZOPV(&ZOPN)          SETC  '128(4,1),&ZCGPR'                           00309000
&ZOPD(&ZOPN)          SETC  '++ &ZXMAXEVENTS XMAXEVENTS'                00309100
.*                                                                      00309200
.ZI18E                ANOP  ,                                           00309300
.*-------------------------------------------------------------------   00309400
.***AI.L19 ADDR XWORKAREA A                                             00309500
                      AIF   ('&ZXWORKAREA' EQ '').ZI19H                 00309600
&ZCLNG                SETC  '&XWORKAREA'                                00309700
&ZCGPR                SETC  '14'                                        00309800
.*                                                                      00309900
&ZOPN                 SETA  &ZOPN+1                                     00310000
&ZOPL(&ZOPN)          SETC  ' '                                         00310100
&ZOPO(&ZOPN)          SETC  'LA'                                        00310200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00310300
&ZOPD(&ZOPN)          SETC  '++ &ZXWORKAREA XWORKAREA'                  00310400
.*                                                                      00310500
&ZOPN                 SETA  &ZOPN+1                                     00310600
&ZOPL(&ZOPN)          SETC  ' '                                         00310700
&ZOPO(&ZOPN)          SETC  'ST'                                        00310800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,132(,1)'                            00310900
&ZOPD(&ZOPN)          SETC  '++ &ZXWORKAREA XWORKAREA'                  00311000
.*                                                                      00311100
.ZI19H                ANOP  ,                                           00311200
.*-------------------------------------------------------------------   00311300
&ZOPN1                SETA &ZOPN                                        00311400
.*******************************************************************    00311500
.***  PROCESS IEATEDS OUTPUT PARAMETERS                                 00311600
.*******************************************************************    00311700
                      ACTR  10000                                       00311800
.*------------------------------------------------------------------    00311900
.***AO.L02 XTEDTOKEN CL16                                               00312000
         AIF   ('&ZXTEDTOKEN' EQ 'OUTPUT').ZO15A  OUTPUT                00312100
         AIF   ('&ZXTEDTOKEN' NE 'INOUT').ZO15C  INOUT                  00312200
.ZO15A    AIF   ('&XTEDTOKEN'(1,1) NE '(').ZO15B  ADDR IN GPR           00312300
&ZCGPR   SETC  '&XTEDTOKEN'(2,K'&XTEDTOKEN-2)                           00312400
&ZOPN                 SETA  &ZOPN+1                                     00312500
&ZOPL(&ZOPN)          SETC  ' '                                         00312600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00312700
&ZOPV(&ZOPN)          SETC  '0(16,&ZCGPR),64(1)'                        00312800
&ZOPD(&ZOPN)          SETC  '++ XTEDTOKEN CL16'                         00312900
                      AGO   .ZO15C                                      00313000
.*                                                                      00313100
.ZO15B                ANOP  ,                                           00313200
&ZAWRK   SETA  K'&XTEDTOKEN                                             00313300
         AIF   ('&XTEDTOKEN'(&ZAWRK,1) NE ')').ZO15G                    00313400
&ZN      SETA  2                                                        00313500
.ZO15H    ANOP                                                          00313600
         AIF   (&ZN GE &ZAWRK).ZO15G                                    00313700
         AIF   ('&XTEDTOKEN'(&ZN,1) NE '(').ZO15I                       00313800
&ZC      SETC  '&XTEDTOKEN'(1,&ZN).'16'.','                             00313900
&ZC      SETC  '&ZC'.'&XTEDTOKEN'(&ZN+1,&ZAWRK-&ZN).',64(1)'            00314000
         AGO   .ZO15J                                                   00314100
.ZO15I    ANOP                                                          00314200
&ZN      SETA  &ZN+1                                                    00314300
         AGO   .ZO15H                                                   00314400
.ZO15G    ANOP                                                          00314500
&ZC      SETC  '&XTEDTOKEN.(16),64(1)'                                  00314600
.ZO15J    ANOP                                                          00314700
&ZOPN                 SETA  &ZOPN+1                                     00314800
&ZOPL(&ZOPN)          SETC  ' '                                         00314900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00315000
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00315100
&ZOPD(&ZOPN)          SETC  '++ XTEDTOKEN CL16'                         00315200
.ZO15C                ANOP  ,                                           00315300
.*******************************************************************    00315400
.***AO.X02  RETURN CODE PROCESSING                                      00315500
.*******************************************************************    00315600
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00315700
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00315800
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00315900
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00316000
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00316100
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00316200
&ZOPN                 SETA  &ZOPN+1                                     00316300
&ZOPL(&ZOPN)          SETC  ' '                                         00316400
&ZOPO(&ZOPN)          SETC  'ST'                                        00316500
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00316600
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00316700
                      AGO   .ZMRETX                                     00316800
.*                                                                      00316900
.ZMRET2               ANOP  ,                                           00317000
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00317100
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00317200
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00317300
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00317400
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00317500
&ZOPN                 SETA  &ZOPN+1                                     00317600
&ZOPL(&ZOPN)          SETC  ' '                                         00317700
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00317800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00317900
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00318000
.ZMRETX               ANOP  ,                                           00318100
.*******************************************************************    00318200
.***AO.X03  REASON CODE PROCESSING                                      00318300
.*******************************************************************    00318400
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00318500
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00318600
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00318700
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00318800
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00318900
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00319000
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00319100
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00319200
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00319300
&ZOPN                 SETA  &ZOPN+1                                     00319400
&ZOPL(&ZOPN)          SETC  ' '                                         00319500
&ZOPO(&ZOPN)          SETC  'ST'                                        00319600
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00319700
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00319800
                      AGO   .ZMRSNX                                     00319900
.*                                                                      00320000
.ZMRSN2               ANOP  ,                                           00320100
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00320200
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00320300
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00320400
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00320500
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00320600
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00320700
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00320800
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00320900
&ZOPN                 SETA  &ZOPN+1                                     00321000
&ZOPL(&ZOPN)          SETC  ' '                                         00321100
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00321200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00321300
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00321400
.ZMRSNX               ANOP  ,                                           00321500
.*******************************************************************    00321600
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00321700
.*******************************************************************    00321800
.ZMFLX                ANOP  ,              MF=L PROCESSING              00321900
.*******************************************************************    00322000
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00322100
.*******************************************************************    00322200
                      ACTR  10000                                       00322300
.*                                                                      00322400
                      LCLA  &ZLC           COLUMN POSITION              00322500
                      LCLA  &ZOPX          LIST TABLE INDEX             00322600
                      LCLC  &ZLL           LABEL                        00322700
                      LCLC  &ZLOP          OPERATION                    00322800
                      LCLC  &ZLV           VALUE                        00322900
                      LCLC  &ZLD           DESCRIPTION                  00323000
.*                                                                      00323100
&ZOPX                 SETA  1                                           00323200
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00323300
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00323400
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00323500
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00323600
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00323700
                      AIF   (K'&ZLD LE 0).ZL5                           00323800
&ZLC                  SETA  35             COMMENT COLUMN               00323900
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00324000
&ZLC                  SETA  33             COMMMENT COLUMN              00324100
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00324200
&ZLV                  SETC  '&ZLV'.' '                                  00324300
                      AGO   .ZL3                                        00324400
.*                                                                      00324500
.ZL4                  ANOP  ,                                           00324600
&ZLV                  SETC  '&ZLV'.' '                                  00324700
.ZL5                  ANOP  ,                                           00324800
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00324900
.*                                                                      00325000
&ZLL     &ZLOP &ZLV                                                     00325100
.*                                                                      00325200
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00325300
                      AGO   .ZL2           CONTINUE LOOPING             00325400
.*                                                                      00325500
.ZLX                  ANOP  ,                                           00325600
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00325700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00325800
.*********************************************************************  00325900
.* The following instructions will obtain the offset of                 00326000
.* the module as the difference between the current location            00326100
.* and the control section named by &SYSECT (which may not necessarily  00326200
.* be the name of the module).                                          00326300
.* Note that the BASR instruction may leave bit 32 ON in the            00326400
.* offset. Module IEAVTEDS will clear the high order bit.               00326500
.*********************************************************************  00326600
         AIF   ('&XREQUEST' NE 'RECORD').TedNoModOffset                 00326700
                 LCLA  &TEDMOFOFF Numeric Start of ModOffset            00326800
&TEDMOFOFF       SETA  52         Offset in PList of ModOffset          00326900
&ZLV             SETC '14,'.'&TEDMOFOFF'.'(1,0)'                        00327000
         LARL     15,&SYSECT                                            00327100
         BASR     14,0                                                  00327200
         SLR      14,15                                                 00327300
         ST       &ZLV                                                  00327400
.TEDNOMODOFFSET  ANOP ,                                                 00327500
.*********************************************************************  00327600
.* Handle the USERDATA specification                                    00327700
.*********************************************************************  00327800
                 LCLC  &TEDUDVAL  Character Arg Value                   00327900
                 LCLC  &TEDUDLEN  Character Arg Length                  00328000
                 LCLA  &TEDUDOFF  Numeric Offset                        00328100
                 LCLC  &TEDUDOFFC Character Offset                      00328200
                 LCLA  &TEDUD2OFF Numeric Start of UserDataCombi        00328300
                 LCLA  &TEDUD2LEN Numeric Length of UserDataCombi       00328400
.*********************************************************************  00328500
.* Check to see if UserData was specified - branch if not               00328600
.*********************************************************************  00328700
         AIF   ('&XREQUEST' NE 'RECORD').TedNoUserData                  00328800
         AIF   ('&XUSERDATA(1)' EQ 'NO_USERDATA').TedNoUserData         00328900
.*********************************************************************  00329000
.* Initialize variables                                                 00329100
.*********************************************************************  00329200
&ZI              SETA  0           Array index                          00329300
&TEDUD2OFF       SETA  112         Starting offset of UserDataCombi     00329400
&TEDUD2LEN       SETA  16          Numeric length of UserDataCombi      00329500
&TEDUDOFF        SETA  0           Numeric offset                       00329600
&TEDUDOFFC       SETC  SIGNED(&TEDUD2OFF) Init to start UserDataCombi   00329700
.*********************************************************************  00329800
.* Loop through the UserData array of args and create a MVC             00329900
.* instruction for each arg to move it into the 16 byte UserDataCombi   00330000
.* area. Each arg can be any length such that the total length of       00330100
.* all of the args does not exceed the UserDataCombi length.            00330200
.*********************************************************************  00330300
.TEDUSERDATALOOP ANOP  ,           Top of loop to get each arg          00330400
&ZI              SETA  &ZI+1       Increment the array index            00330500
.*********************************************************************  00330600
.* Note that we check for EQ instead of GT for end of the array because 00330700
.* the array contains one extra element at the end that is set to NULL  00330800
.*********************************************************************  00330900
                 AIF   (&ZI EQ N'&XUSERDATA).TedEndUserData Done        00331000
.*                                                                      00331100
&TEDUDVAL        SETC  '&XUSERDATA(&ZI)'    Get the arg                 00331200
&TEDUDLEN        SETC  SIGNED(L'&TEDUDVAL)  Get the arg length          00331300
&ZLV             SETC '&TEDUDOFFC'.'(&TEDUDLEN,1),&TEDUDVAL'            00331400
.* The following line will emit the MVC instruction and operands        00331500
         MVC   &ZLV                                                     00331600
.*********************************************************************  00331700
.* Update the offset for the next arg (if one), and check to make       00331800
.* sure the MVC we just built will not move data beyond the 16 byte     00331900
.* UserDataCombi area.                                                  00332000
.*********************************************************************  00332100
&TEDUDOFF        SETA  &TEDUDOFF+&TEDUDLEN  Update offset with arg len  00332200
                 AIF   (&TEDUDOFF GT &TEDUD2LEN).TedDataLenExceeded     00332300
&TEDUDOFFC       SETC  SIGNED(&TEDUD2OFF+&TEDUDOFF)                     00332400
                 AGO   .TEDUSERDATALOOP                                 00332500
.*                                                                      00332600
.TedDataLenExceeded ANOP ,                                              00332700
&ZMS             SETC  'IEATEDS - TOTAL LENGTH OF USERDATA ARGUMENTS'   00332800
                 MNOTE 8,' &ZMS MUST NOT EXCEED 16 BYTES.'              00332900
&ZMACRET         SETA  8           Set macro error return code          00333000
.TEDNOUSERDATA   ANOP ,                                                 00333100
.TEDENDUSERDATA  ANOP ,                                                 00333200
.*                                                                      00333300
.*********************************************************************  00333400
.* Get address of IEAVTEDS and branch if address not zero               00333500
.*********************************************************************  00333600
         L     15,FLCCVT-FLC(0,0)                                       00333700
         L     15,CVTECVT-CVT(0,15)                                     00333800
         L     15,ECVTTEDS-ECVT(15)                                     00333900
         BASR  14,15                                                    00334000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00334100
.ZLINKX               ANOP  ,                                           00334200
.*******************************************************************    00334300
.***AP.X01  FORMAT GENERATED CODE                                       00334400
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00334500
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00334600
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00334700
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00334800
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00334900
                      AIF   (K'&ZLD LE 0).ZL51                          00335000
&ZLC                  SETA  35             COMMENT COLUMN               00335100
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00335200
&ZLC                  SETA  33             COMMENT COLUMN               00335300
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00335400
&ZLV                  SETC  '&ZLV'.' '                                  00335500
                      AGO   .ZL31                                       00335600
.*                                                                      00335700
.ZL41                 ANOP  ,                                           00335800
&ZLV                  SETC  '&ZLV'.' '                                  00335900
.ZL51                 ANOP  ,                                           00336000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00336100
.*                                                                      00336200
&ZLL     &ZLOP &ZLV                                                     00336300
.*                                                                      00336400
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00336500
                      AGO   .ZL21          CONTINUE LOOPING             00336600
.*                                                                      00336700
.ZLX1                 ANOP  ,                                           00336800
.*******************************************************************    00336900
.***AP.X02  END OF IEATEDS MACRO                                        00337000
&ZIEATEDS             SETC  'YES'          SET IEATEDS USED             00337100
         POP   PRINT                                                    00337200
*                                            IEATEDS-0                  00337300
         SPACE 1                                                        00337400
.ZLX2                 ANOP  ,                                           00337500
         MEND                                                           00337600
**********************************************************************/ 00337700
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00337800
*%IEATEDS: MACRO KEYS(REQUEST,COMPNAME,MAXEVENTS,TEDTOKEN,EVENTTYPE,    00337900
*                 EVENTTHREAD,EVENTDESC,MODNAME,MODLEVEL,USERDATA,      00338000
*                 WORKAREA,RETCODE,RSNCODE,PLISTVER,MF);                00338100
*  ANS('?'!!MACLABEL!!' '!!'IEATEDSP '!!MACLIST!!                       00338200
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00338300
*%END IEATEDS;                                                          00338400
