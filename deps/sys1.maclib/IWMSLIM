*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWMSLIM                               -01/02/02-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  WLM Application Environment Limit Service     * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5694-A01 (C) COPYRIGHT IBM CORP. 1999, 2001                     * 00001200
*                                                                     * 00001300
* STATUS= HBB7705                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The IWMSLIM service should be used to tell WLM the total       * 00002100
*      number of server instances which are supported by the          * 00002200
*      application. WLM will ensure that no more server instances     * 00002300
*      will be started in the system.                                 * 00002400
*                                                                     * 00002500
*      In addition the caller can define a minimum number of servers  * 00002600
*      which should be made available by WLM regardless whether work  * 00002700
*      is available to execute or not.  If the user defines multiple  * 00002800
*      service classes to give the work of the application different  * 00002900
*      service goals the caller can define that the minimum number of * 00003000
*      servers is spread across these service classes to ensure that  * 00003100
*      servers are available for all work executed by the             * 00003200
*      application.                                                   * 00003300
*                                                                     * 00003400
*      The caller must have previously connected to WLM using the     * 00003500
*      IWMCONN service specifying SERVER_MANAGER=YES and              * 00003600
*      SERVER_TYPE=QUEUE.  It is recommended to use the IWMSLIM       * 00003700
*      service directly after IWMCONN. If any server uses this        * 00003800
*      service to define limits the limits apply for all servers of   * 00003900
*      the application environment regardless whether other server    * 00004000
*      use the service or not.                                        * 00004100
*                                                                     * 00004200
*      If a server defines new limits during execution, WLM attempts  * 00004300
*      to meet the new limit definitions as soon as possible. If the  * 00004400
*      maximum limit for servers is reduced during execution it is    * 00004500
*      not predictable when WLM is able to meet the new maximum       * 00004600
*      definition. This depends highly on the execution time of the   * 00004700
*      running work requests.  Therefore changing the limits during   * 00004800
*      execution should be used very carefully and primarily during   * 00004900
*      times of low application utilization.                          * 00005000
*                                                                     * 00005100
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00005200
*                                                                     * 00005300
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00005400
*                                                                     * 00005500
*01* ENVIRONMENT:                                                     * 00005600
*                                                                     * 00005700
*                                                                     * 00005800
*      Minimum authorization: Problem or Supervisor state.  Any PSW   * 00005900
*                        key.                                         * 00006000
*                                                                     * 00006100
*      Dispatchable unit mode: Task mode.                             * 00006200
*                                                                     * 00006300
*      Cross Memory Mode: PASN=HASN=SASN.                             * 00006400
*                                                                     * 00006500
*      AMODE:            31-bit.                                      * 00006600
*                                                                     * 00006700
*      ASC mode:         Primary.                                     * 00006800
*                                                                     * 00006900
*      Interrupt status: Enabled for I/O and external interrupts.     * 00007000
*                                                                     * 00007100
*      Locks:            No locks held.                               * 00007200
*                                                                     * 00007300
*      Control parameters: Control parameters must be in the primary  * 00007400
*                        address space.                               * 00007500
*                                                                     * 00007600
*                                                                     * 00007700
*                                                                     * 00007800
*01* PROGRAMMING REQUIREMENTS:                                        * 00007900
*                                                                     * 00008000
*                                                                     * 00008100
*    1.  Make sure no EUT FRRs are established.                       * 00008200
*                                                                     * 00008300
*    2.  The macro CVT must be included to use this macro.            * 00008400
*                                                                     * 00008500
*    3.  The macro IWMYCON must be included to use this macro.        * 00008600
*                                                                     * 00008700
*    4.  The macro IWMPB must be in the library concatenation, since  * 00008800
*        it is included by IWMYCON.                                   * 00008900
*                                                                     * 00009000
*    5.  Note that the high order halfword of register 0, and the     * 00009100
*        reason code variable when specified, may be non-zero and     * 00009200
*        represents diagnostic data which is NOT part of the external * 00009300
*        interface.  The high order halfword should thus be excluded  * 00009400
*        from comparison with the reason code values described above. * 00009500
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00009600
*        be used for this purpose.                                    * 00009700
*                                                                     * 00009800
*                                                                     * 00009900
*                                                                     * 00010000
*01* RESTRICTIONS:                                                    * 00010100
*                                                                     * 00010200
*                                                                     * 00010300
*    1.  The PL/X  version of the macro needs the EPILOG macro to be  * 00010400
*        included.                                                    * 00010500
*                                                                     * 00010600
*    2.  This macro must be used immediately after the connect        * 00010700
*        service (IWMCONN). Whenever the macro is used at a different * 00010800
*        point in time the values are ignored.                        * 00010900
*                                                                     * 00011000
*    3.  This macro may not be used during task/address space         * 00011100
*        termination.                                                 * 00011200
*                                                                     * 00011300
*    4.  Only a single invocation is allowed to be active for a given * 00011400
*        address space at any given time.                             * 00011500
*                                                                     * 00011600
*    5.  Before using this macro the caller must connect to WLM via   * 00011700
*        IWMCONN Server_Manager=YES, Server_Type=Queue.               * 00011800
*                                                                     * 00011900
*    6.  The macro must be used directly after using IWMCONN.         * 00012000
*                                                                     * 00012100
*                                                                     * 00012200
*                                                                     * 00012300
*01* INPUT REGISTER INFORMATION:                                      * 00012400
*                                                                     * 00012500
*    Before issuing the IWMSLIM macro, the caller does not have to    * 00012600
*    place any information into any register unless using it in       * 00012700
*    register notation for a particular parameter, or using it as a   * 00012800
*    base register.                                                   * 00012900
*                                                                     * 00013000
*01* OUTPUT REGISTER INFORMATION:                                     * 00013100
*                                                                     * 00013200
*    When control returns to the caller, the GPRs contain:            * 00013300
*                                                                     * 00013400
*                                                                     * 00013500
*    REGISTER  CONTENTS                                               * 00013600
*                                                                     * 00013700
*    0         Reason code if GR15 return code is non-zero            * 00013800
*                                                                     * 00013900
*    1         Used as work registers by the system                   * 00014000
*                                                                     * 00014100
*    2-13      Unchanged                                              * 00014200
*                                                                     * 00014300
*    14        Used as work registers by the system                   * 00014400
*                                                                     * 00014500
*    15        Return code                                            * 00014600
*                                                                     * 00014700
*                                                                     * 00014800
*                                                                     * 00014900
*    When control returns to the caller, the ARs contain:             * 00015000
*                                                                     * 00015100
*                                                                     * 00015200
*    REGISTER  CONTENTS                                               * 00015300
*                                                                     * 00015400
*    0-1       Used as work registers by the system                   * 00015500
*                                                                     * 00015600
*    2-13      Unchanged                                              * 00015700
*                                                                     * 00015800
*    14-15     Used as work registers by the system                   * 00015900
*                                                                     * 00016000
*                                                                     * 00016100
*                                                                     * 00016200
*    Some callers depend on register contents remaining the same      * 00016300
*    before and after issuing a service.  If the system changes the   * 00016400
*    contents of registers on which the caller depends, the caller    * 00016500
*    must save them before issuing the service, and restore them      * 00016600
*    after the system returns control.                                * 00016700
*                                                                     * 00016800
*01* PERFORMANCE IMPLICATIONS:                                        * 00016900
*                                                                     * 00017000
*    None                                                             * 00017100
*                                                                     * 00017200
*01* SYNTAX:                                                          * 00017300
*                                                                     * 00017400
*Ýxlabel¨  IWMSLIM   Ý AE_SERVERMAX=»xae_servermax!0º¨                * 00017500
*                    Ý,AE_SERVERMIN=»xae_servermin!0º                 * 00017600
*                       ÐÝ,AE_SPREADMIN=NO¨                           * 00017700
*                       ¿Ý,AE_SPREADMIN=YES¨¨                         * 00017800
*                    Ý,RETCODE=xretcode¨                              * 00017900
*                    Ý,RSNCODE=xrsncode¨                              * 00018000
*                    Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨          * 00018100
*                   ÐÝ,MF=S¨                                          * 00018200
*                   ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                   * 00018300
*                   ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                     * 00018400
*                                                                     * 00018500
*                                                                     * 00018600
*      Where:                                                         * 00018700
*                                                                     * 00018800
*                                                                     * 00018900
*      Ýxlabel¨                                                       * 00019000
*          is an optional symbol, starting in column 1, that is the   * 00019100
*          name on the IWMSLIM macro invocation.  The name must       * 00019200
*          conform to the rules for an ordinary assembler language    * 00019300
*          symbol.                                                    * 00019400
*          DEFAULT: No name.                                          * 00019500
*                                                                     * 00019600
*                                                                     * 00019700
*                                                                     * 00019800
*                                                                     * 00019900
*      ÝAE_SERVERMAX=»xae_servermax!0º¨                               * 00020000
*          is the name (RS-type), or address in register (2)-(12), of * 00020100
*          an optional halfword input which indicates the             * 00020200
*          architectural limit for the total number of server tasks   * 00020300
*          which can run concurrently across the application          * 00020400
*          environment for a given subsystem type and subsystem name. * 00020500
*                                                                     * 00020600
*          This parameter represents a physical limit, such as the    * 00020700
*          maximum number of available connections to a back-end      * 00020800
*          subsystem.  WLM will not start more than this number of    * 00020900
*          server tasks, even if goals cannot be met because of the   * 00021000
*          limit.  This value should be an integral multiple of the   * 00021100
*          PARALLEL_EU value defined on IWMCONN service.  If          * 00021200
*          AE_SERVERMAX is not an even multiple of PARALLEL_EU, WLM   * 00021300
*          will round this value down to the next integral multiple.  * 00021400
*                                                                     * 00021500
*          The maximum limit and the number of service classes to     * 00021600
*          execute work requests should be defined carefully. If the  * 00021700
*          number of service classes exceeds the quotient of          * 00021800
*          AE_SERVERMAX divided by PARALLEL_EU WLM cannot start       * 00021900
*          enough server address spaces to execute the work requests  * 00022000
*          for all service classes.                                   * 00022100
*          DEFAULT: 0 no maximum limit specified                      * 00022200
*                                                                     * 00022300
*                                                                     * 00022400
*                                                                     * 00022500
*                                                                     * 00022600
*      ÝAE_SERVERMIN=»xae_servermin!0º                                * 00022700
*          is the name (RS-type), or address in register (2)-(12), of * 00022800
*          an optional halfword input which indicates the minimum     * 00022900
*          number of servers which should be up and running at all    * 00023000
*          times.                                                     * 00023100
*                                                                     * 00023200
*          This parameter can be used to tell WLM that a certain      * 00023300
*          amount of server tasks should always be kept available to  * 00023400
*          select work.  This value should be an integral multiple of * 00023500
*          the PARALLEL_EU value defined on IWMCONN service.  If      * 00023600
*          AE_SERVERMIN is not an even multiple of PARALLEL_EU, WLM   * 00023700
*          will round this value down to the next integral multiple.  * 00023800
*          DEFAULT: 0 no limit specified                              * 00023900
*                                                                     * 00024000
*                                                                     * 00024100
*          ÝAE_SPREADMIN=»NO!YESº¨                                    * 00024200
*              is an optional keyword input which indicates whether   * 00024300
*              WLM will distribute the minimum number of servers as   * 00024400
*              evenly as possible across the service classes being    * 00024500
*              used to process the work requests.                     * 00024600
*              DEFAULT: NO                                            * 00024700
*                                                                     * 00024800
*                                                                     * 00024900
*              ÝAE_SPREADMIN=NO¨                                      * 00025000
*                  The server tasks specified in AE_SERVERMIN will be * 00025100
*                  distributed to service classes as needed in order  * 00025200
*                  to meet goals.                                     * 00025300
*                                                                     * 00025400
*              ÝAE_SPREADMIN=YES¨¨                                    * 00025500
*                  The server tasks specified in AE_SERVERMIN will be * 00025600
*                  distributed as evenly as possible to all service   * 00025700
*                  classes being used to execute work requests.       * 00025800
*                                                                     * 00025900
*                                                                     * 00026000
*                                                                     * 00026100
*                                                                     * 00026200
*                                                                     * 00026300
*                                                                     * 00026400
*                                                                     * 00026500
*                                                                     * 00026600
*      ÝRETCODE=xretcode¨                                             * 00026700
*          is the name (RS-type) of an optional fullword output       * 00026800
*          variable, or register (2)-(12), into which the return code * 00026900
*          is to be copied from GPR 15.                               * 00027000
*                                                                     * 00027100
*                                                                     * 00027200
*                                                                     * 00027300
*                                                                     * 00027400
*      ÝRSNCODE=xrsncode¨                                             * 00027500
*          is the name (RS-type) of an optional fullword output       * 00027600
*          variable, or register (2)-(12), into which the reason code * 00027700
*          is to be copied from GPR 0.                                * 00027800
*                                                                     * 00027900
*                                                                     * 00028000
*                                                                     * 00028100
*                                                                     * 00028200
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00028300
*          is an optional byte input decimal value in the "0-0" range * 00028400
*          that specifies the macro version.  PLISTVER is the only    * 00028500
*          key allowed on the list form of MF and determines which    * 00028600
*          parameter list is generated.  Note that MAX may be         * 00028700
*          specified instead of a number, and the parameter list will * 00028800
*          be of the largest size currently supported. This size may  * 00028900
*          grow from release to release (thus possibly affecting the  * 00029000
*          amount of storage needed by your program).  If your        * 00029100
*          program can tolerate this, IBM recommends that you always  * 00029200
*          specify MAX when creating the list form parameter list as  * 00029300
*          that will ensure that the list form parameter list is      * 00029400
*          always long enough to hold whatever parameters might be    * 00029500
*          specified on the execute form.                             * 00029600
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00029700
*          default is the lowest version which allows all of the      * 00029800
*          parameters specified on the invocation to be processed.    * 00029900
*                                                                     * 00030000
*                                                                     * 00030100
*                                                                     * 00030200
*                                                                     * 00030300
*      ÝMF=»S!L!Eº¨                                                   * 00030400
*          is an optional keyword input which specifies the macro     * 00030500
*          form.                                                      * 00030600
*          DEFAULT: S                                                 * 00030700
*                                                                     * 00030800
*                                                                     * 00030900
*          ÝMF=S¨                                                     * 00031000
*              specifies the standard form of the macro.  The "S"     * 00031100
*              form generates code to put the parameters into an      * 00031200
*              in-line parameter list and invoke the desired service. * 00031300
*              Full checking for required macro keys is done along    * 00031400
*              with supplying defaults for omitted optional           * 00031500
*              parameters.                                            * 00031600
*                                                                     * 00031700
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00031800
*              specifies the list form of the macro.  The "L" form    * 00031900
*              defines an area to be used for the parameter list.     * 00032000
*              Only the PLISTVER key may be specified on the          * 00032100
*              invocation.  All other macro parameters are flagged as * 00032200
*              errors.  If PLISTVER is not specified, the original    * 00032300
*              parameter list definition is used.                     * 00032400
*                                                                     * 00032500
*            ,xmfctrl                                                 * 00032600
*              is a required input.  It is the name of a storage area * 00032700
*              for the parameter list.                                * 00032800
*                                                                     * 00032900
*            »,xmfattr!0Dº                                            * 00033000
*              is an optional 60 character input string that varies   * 00033100
*              from 1 to 60 characters. Use it to force boundary      * 00033200
*              alignment of the parameter list. Use only 0F or 0D.    * 00033300
*              DEFAULT: 0D which forces the parameter list to a       * 00033400
*              doubleword boundary.                                   * 00033500
*                                                                     * 00033600
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00033700
*              specifies the execute form of the macro.  The "E" form * 00033800
*              generates code to put the parameters into the          * 00033900
*              parameter list specified by xmfctrl and provides full  * 00034000
*              syntax checking with default setting.                  * 00034100
*                                                                     * 00034200
*            ,xmfctrl                                                 * 00034300
*              is a required input.  It is the name (RS-type), or     * 00034400
*              address in register (1)-(12), of a storage area for    * 00034500
*              the parameter list.                                    * 00034600
*                                                                     * 00034700
*            »,COMPLETEº                                              * 00034800
*              is an optional keyword input which specifies the       * 00034900
*              degree of macro parameter syntax checking.             * 00035000
*              DEFAULT: COMPLETE                                      * 00035100
*                                                                     * 00035200
*                                                                     * 00035300
*              COMPLETE                                               * 00035400
*                  Checking for required macro keys is done and       * 00035500
*                  defaults are supplied for omitted optional         * 00035600
*                  parameters.                                        * 00035700
*                                                                     * 00035800
*                                                                     * 00035900
*                                                                     * 00036000
*                                                                     * 00036100
*                                                                     * 00036200
*                                                                     * 00036300
*                                                                     * 00036400
*01* ABEND CODES:  None.                                              * 00036500
*                                                                     * 00036600
*01* RETURN CODES:                                                    * 00036700
*                                                                     * 00036800
*                                                                     * 00036900
*            0    Name: IwmRetCodeOk                                  * 00037000
*                                                                     * 00037100
*                 Meaning: Successful completion.                     * 00037200
*                                                                     * 00037300
*                 Action: None required.                              * 00037400
*                                                                     * 00037500
*                                                                     * 00037600
*                                                                     * 00037700
*                                                                     * 00037800
*            8    Name: IwmRetCodeInvocError                          * 00037900
*                                                                     * 00038000
*                 Meaning: Invalid invocation environment or          * 00038100
*                 parameters.                                         * 00038200
*                                                                     * 00038300
*                                                                     * 00038400
*                                                                     * 00038500
*                 HEX REASON  MEANING/ACTION                          * 00038600
*                 CODE                                                * 00038700
*                                                                     * 00038800
*                 xxxx0801    Name: IwmRsnCodeSrbMode                 * 00038900
*                                                                     * 00039000
*                             Meaning: Caller is in SRB mode.         * 00039100
*                                                                     * 00039200
*                             Action: Avoid requesting this function  * 00039300
*                             while in SRB mode.                      * 00039400
*                                                                     * 00039500
*                 xxxx0803    Name: IwmRsnCodeDisabled                * 00039600
*                                                                     * 00039700
*                             Meaning: Caller is disabled.            * 00039800
*                                                                     * 00039900
*                             Action: Avoid requesting this function  * 00040000
*                             while disabled.                         * 00040100
*                                                                     * 00040200
*                 xxxx0804    Name: IwmRsnCodeLocked                  * 00040300
*                                                                     * 00040400
*                             Meaning: Caller is locked.              * 00040500
*                                                                     * 00040600
*                             Action: Avoid requesting this function  * 00040700
*                             while locked.                           * 00040800
*                                                                     * 00040900
*                 xxxx080B    Name: IwmRsnCodeBadPl                   * 00041000
*                                                                     * 00041100
*                             Meaning: Error accessing parameter      * 00041200
*                             list.                                   * 00041300
*                                                                     * 00041400
*                             Action: Check for possible storage      * 00041500
*                             overlay.  Also check if you call this   * 00041600
*                             macro in 64 bit adressing mode (see     * 00041700
*                             explanations for xxxx089E).             * 00041800
*                                                                     * 00041900
*                 xxxx0824    Name: IwmRsnCodeAmode24                 * 00042000
*                                                                     * 00042100
*                             Meaning: Caller invoked service but was * 00042200
*                             in 24 bit addressing mode.              * 00042300
*                                                                     * 00042400
*                             Action: Request this function only when * 00042500
*                             you are in 31 bit addressing mode.      * 00042600
*                                                                     * 00042700
*                 xxxx0825    Name: IwmRsnCodeAscModeNotPrimary       * 00042800
*                                                                     * 00042900
*                             Meaning: Caller invoked service but was * 00043000
*                             not in primary ASC mode.                * 00043100
*                                                                     * 00043200
*                             Action: Avoid requesting this function  * 00043300
*                             in this environment.                    * 00043400
*                                                                     * 00043500
*                 xxxx0828    Name: IwmRsnCodeBadVersion              * 00043600
*                                                                     * 00043700
*                             Meaning: Version number in parameter    * 00043800
*                             list is not valid.                      * 00043900
*                                                                     * 00044000
*                             Action: Check for possible storage      * 00044100
*                             overlay of the parameter list.          * 00044200
*                                                                     * 00044300
*                 xxxx0840    Name: IwmRsnCodeServiceNotEnabled       * 00044400
*                                                                     * 00044500
*                             Meaning: Caller's space connection is   * 00044600
*                             not enabled for this service.           * 00044700
*                                                                     * 00044800
*                             Action: Make sure that                  * 00044900
*                             SERVER_MANAGER=YES and                  * 00045000
*                             SERVER_TYPE=QUEUE is specified on the   * 00045100
*                             IWMCONN request to enable this service. * 00045200
*                                                                     * 00045300
*                 xxxx0841    Name: IwmRsnCodeXmemMode                * 00045400
*                                                                     * 00045500
*                             Meaning: Caller is in cross-memory      * 00045600
*                             mode.                                   * 00045700
*                                                                     * 00045800
*                             Action: Request this function only when * 00045900
*                             you are not in cross-memory mode.       * 00046000
*                                                                     * 00046100
*                 xxxx0842    Name: IwmRsnCodeNoWLMConnect            * 00046200
*                                                                     * 00046300
*                             Meaning: Caller's space is not          * 00046400
*                             connected to WLM.                       * 00046500
*                                                                     * 00046600
*                             Action:  Invoke the IWMCONN macro       * 00046700
*                             before invoking this macro.             * 00046800
*                                                                     * 00046900
*                 xxxx087D    Name: IWMRSNCODEBADNUMAESRVMAX          * 00047000
*                                                                     * 00047100
*                             Meaning: The server maximum value is    * 00047200
*                             incorrect.                              * 00047300
*                                                                     * 00047400
*                             Action:  Make sure that the maximum     * 00047500
*                             value is greater than the minimum value * 00047600
*                             and that is is greater than the         * 00047700
*                             parallel_eu value                       * 00047800
*                                                                     * 00047900
*                 xxxx089E    Name: IwmRsnCodeServiceAModeMismatch    * 00048000
*                                                                     * 00048100
*                             Meaning:  The caller works in 64-bit    * 00048200
*                             address mode and tried to invoke a      * 00048300
*                             service macro that is only enabled for  * 00048400
*                             a 31-bit address environment.           * 00048500
*                                                                     * 00048600
*                             Action:  Use the 64-bit enabled service * 00048700
*                             macro (IWM4SLI ) or change the          * 00048800
*                             addressing mode of the caller to        * 00048900
*                             31-bit.                                 * 00049000
*                                                                     * 00049100
*                                                                     * 00049200
*                                                                     * 00049300
*                                                                     * 00049400
*                                                                     * 00049500
*            10   Name: IwmRetCodeCompError                           * 00049600
*                                                                     * 00049700
*                 Meaning: Component error.                           * 00049800
*                                                                     * 00049900
*                 Action: Contact your system programmer.             * 00050000
*                                                                     * 00050100
*                                                                     * 00050200
*                                                                     * 00050300
*                                                                     * 00050400
*01* REASON CODES:                                                    * 00050500
*                                                                     * 00050600
*       A unique reason code will be returned whenever the return     * 00050700
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00050800
*       under their corresponding return code.  Reason code and       * 00050900
*       return code constants are defined within IWMYCON.  Note that  * 00051000
*       the high order halfword of register 0, and the reason code    * 00051100
*       variable when specified, may be non-zero and represents       * 00051200
*       diagnostic data which is NOT part of the external interface.  * 00051300
*       The high order halfword should thus be excluded from          * 00051400
*       comparison with the reason code values described above.  The  * 00051500
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00051600
*       used for this purpose.                                        * 00051700
*                                                                     * 00051800
*01* MODULE TYPE:  ASSEM MACRO                                        * 00051900
*                                                                     * 00052000
*02*   PROCESSOR:  ASSEM                                              * 00052100
*                                                                     * 00052200
*01* COMPONENT:  SCWLM                                                * 00052300
*                                                                     * 00052400
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00052500
*                                                                     * 00052600
*01* EXAMPLES:                                                        * 00052700
*                                                                     * 00052800
*    To specify application limits to WLM.                            * 00052900
*                                                                     * 00053000
*        IWMCONN WORK_MANAGER=YES,                                    * 00053100
*                SERVER_MANAGER=YES,                                  * 00053200
*                PARALLEL_EU=EUNITS,                                  * 00053300
*                SERVER_TYPE=QUEUE,                                   * 00053400
*                CONNTKN=CTKN,                                        * 00053500
*                CONNTKNKEY=PSWKEY,                                   * 00053600
*                RETCODE=RC,                                          * 00053700
*                RSNCODE=RSN                                          * 00053800
*                                                                     * 00053900
*        IWMSLIM AE_SERVERMAX=MAXSRVS,                                * 00054000
*                AE_SERVERMIN=MINSRVS,                                * 00054100
*                RETCODE=RC,                                          * 00054200
*                RSNCODE=RSN                                          * 00054300
*      *                                                              * 00054400
*      * Storage areas                                                * 00054500
*      *                                                              * 00054600
*      EUNITS   DS    F               Number of Tasks which will be s * 00054700
*      tarted                                                         * 00054800
*      *                              if the system runs in compatibi * 00054900
*      lity mode                                                      * 00055000
*      MAXSRVS  DS    H               Maximum Number of Servers suppo * 00055100
*      rted                                                           * 00055200
*      *                              by the application.             * 00055300
*      MINSRVS  DS    H               Minimum number of servers which * 00055400
*       should                                                        * 00055500
*      *                              be up and running all time      * 00055600
*      CTKN     DS    FL4             Connect Token                   * 00055700
*      RC       DS    F               Return code                     * 00055800
*      RSN      DS    F               Reason code                     * 00055900
*                                                                     * 00056000
*                                                                     * 00056100
*01* MACRO USAGE NOTES:                                               * 00056200
*                                                                     * 00056300
*                                                                     * 00056400
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00056500
*        global macro variable.  Any value other than 'NO' will       * 00056600
*        result in the macro expansion being printed.  The default is * 00056700
*        'YES'.  The following examples illustrate how the ZPRINT     * 00056800
*        variable should be set.                                      * 00056900
*                                                                     * 00057000
*                    GBLC &ZPRINT                                     * 00057100
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00057200
*                                                                     * 00057300
*                                                                     * 00057400
*    2.  All keys currently contained in the IWMSLIM macro correspond * 00057500
*        to  version 0.  If you specify PLISTVER, use a value of 0 or * 00057600
*        MAX.                                                         * 00057700
*                                                                     * 00057800
*                                                                     * 00057900
*                                                                     * 00058000
*                                                                     * 00058100
*01* CHANGE ACTIVITY:                                                 * 00058200
*                                                                     * 00058300
*   Flag LineItem  FMID    Date   ID    Comment                       * 00058400
*                                                                     * 00058500
*    $L0=OWASAHI  JBB6607 991121 B9HARV:  Application Environment     * 00058600
*                                         Limits                      * 00058700
*    $L1=OW47156  JBB6607 001130 3241RV:  Ship for consistency with   * 00058800
*                                         previous releases           * 00058900
*    $L2=OW47156  HBB7705 010202 3241BH:  Ship for consistency with   * 00059000
*                                         previous releases           * 00059100
*    $L3=WLMP64W  HBB7709 030315 3241NN:  IWM4SLI  created. Please do * 00059200
*                                         not change this macro any   * 00059300
*                                         longer.                     * 00059400
*    $P1=ME02076  HBB7720 041015 3241NN:  Added reason code for       * 00059500
*                                         callers in AMODE 64.        * 00059600
*                                         Specific to 31-bit version. * 00059700
****** END OF SPECIFICATIONS *****************************************/ 00059800
*/********************************************************************* 00059900
         MACRO                                                          00060000
&XLABEL  IWMSLIM &AE_SERVERMAX=,&AE_SERVERMIN=,&AE_SPREADMIN=,         *00060100
               &RETCODE=,&RSNCODE=,&PLISTVER=,&MF=                      00060200
.*                                                                      00060300
*                  MACDATE -01/02/02-<0>                                00060400
.*                                                                      00060500
.*******************************************************************    00060600
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00060700
.*******************************************************************    00060800
                  GBLC  &ZPRINT     YES=PRINT NO=NO PRINT               00060900
                  GBLC  &ZTEST      YES=TEST NO=NO TEST                 00061000
                  GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX         00061100
.*                                                                      00061200
                  GBLC  &ZIWMSLIM   YES=MACRO USED AT LEAST ONCE        00061300
.*******************************************************************    00061400
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00061500
.*******************************************************************    00061600
                  LCLC  &ZMS        ERROR MESSAGE WORK AREA             00061700
                  LCLC  &ZCNDX      SYSNDX CHARACTERS                   00061800
                  LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED          00061900
                  LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR         00062000
                  LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE         00062100
                  LCLA  &ZAWRK      USED AS A WORK AREA                 00062200
                  LCLA  &ZASIZ      USED FOR SIZE OF VALUE              00062300
                  LCLA  &ZN         NUMERIC WORK VARIABLE               00062400
                  LCLC  &ZC         CHARACTER WORK VARIABLE             00062500
                  LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE         00062600
                  LCLA  &ZTLA       VALUE TOO LONG VARIABLE             00062700
                  LCLC  &ZMAC_G     "G" or null                         00062800
&ZMAC_G           SETC  ''                                              00062900
                  LCLC  &ZMAC_LR                                        00063000
&ZMAC_LR          SETC  'LR'                                            00063100
                  LCLC  &ZMAC_L                                         00063200
&ZMAC_L           SETC  'L'                                             00063300
                  LCLC  &ZMAC_ST                                        00063400
&ZMAC_ST          SETC  'ST'                                            00063500
                  LCLA  &ZMACRET    MACRO RETURN CODE                   00063600
&ZMACRET          SETA  0           ASSUME NO ERRORS                    00063700
.*                                                                      00063800
                  LCLC  &ZCSYSLIST(255)         NONXKEY, POS ARRAY      00063900
                  LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()          00064000
                  LCLA  &ZPLLEN     PARAMETER LIST LENGTH               00064100
                  LCLC  &ZENDBASEPL             End of base PL          00064200
                  LCLA  &ZPLWORKA   PARAMETER LIST LENGTH               00064300
.*******************************************************************    00064400
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00064500
.*******************************************************************    00064600
                  LCLA  &ZI         INDEX FOR ARRAY                     00064700
                  LCLA  &ZJ         INDEX FOR PARMS                     00064800
                  LCLA  &ZK         INDEX FOR PARSE                     00064900
                  LCLA  &ZLO        LOW RANGE VALUE                     00065000
                  LCLA  &ZHI        HIGH RANGE VALUE                    00065100
                  LCLC  &ZW         WORK AREA FOR PARM                  00065200
.********************************************************************   00065300
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00065400
.********************************************************************   00065500
                  GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL             00065600
                  GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE      00065700
                  GBLA  &SYSALVL    SYSSTATE ARCHLVL                    00065800
                  GBLC  &SYSAM64    SYSSTATE AMODE64                    00065900
.*                                                                      00066000
                  AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED      00066100
                  AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED       00066200
                  SPLEVEL  TEST                                         00066300
.ZSYS2            ANOP  ,                                               00066400
                  AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1           00066500
                  AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1           00066600
                  SYSSTATE TEST                                         00066700
                  AGO   .ZSYS4                                          00066800
.ZSYS3            ANOP  ,                                               00066900
&SYSASCE          SETC  'P'         ASSUME SYSSTATE PRIMARY             00067000
.ZSYS4            ANOP  ,                                               00067100
.*******************************************************************    00067200
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00067300
.*******************************************************************    00067400
                  LCLC  &XAE_SERVERMAX          ++ NAME                 00067500
                  LCLC  &XAE_SERVERMIN          ++ NAME                 00067600
                  LCLC  &XAE_SPREADMIN          ++ VALUE                00067700
                  LCLC  &XRETCODE   ++ NAME                             00067800
                  LCLC  &XRSNCODE   ++ NAME                             00067900
                  LCLA  &XPLISTVER  ++ VALUE                            00068000
                  LCLC  &XMF        ++ VALUE                            00068100
                  LCLC  &XMFCTRL    ++ NAME                             00068200
                  LCLC  &XMFATTR    ++ VALUE                            00068300
                  LCLC  &XMFSCK     ++ VALUE                            00068400
.*******************************************************************    00068500
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00068600
.*******************************************************************    00068700
                  LCLC  &ZXAE_SERVERMAX         ++ INPUT NAME           00068800
                  LCLC  &ZXAE_SERVERMIN         ++ INPUT NAME           00068900
                  LCLC  &ZXAE_SPREADMIN         ++ INPUT VALUE          00069000
                  LCLC  &ZXRETCODE  ++ OUTPUT NAME                      00069100
                  LCLC  &ZXRSNCODE  ++ OUTPUT NAME                      00069200
                  LCLC  &ZXPLISTVER             ++ INPUT VALUE          00069300
                  LCLC  &ZXMF       ++ INPUT VALUE                      00069400
                  LCLC  &ZXMFCTRL   ++ INPUT NAME                       00069500
                  LCLC  &ZXMFATTR   ++ INPUT VALUE                      00069600
                  LCLC  &ZXMFSCK    ++ INPUT VALUE                      00069700
.********************************************************************   00069800
.***AC.PLV01  PROCESS PLISTVER                                      *   00069900
.********************************************************************   00070000
&XPLISTVER      SETA  0                                                 00070100
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00070200
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00070300
&XPLISTVER      SETA  0                                                 00070400
.ZPLV0          ANOP  ,                                                 00070500
.*                                                                      00070600
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00070700
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00070800
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00070900
.*-------------------------------------------------------------------   00071000
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00071100
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00071200
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00071300
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00071400
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00071500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00071600
                AGO   .ZPVCK2                                           00071700
.ZPVCK3         ANOP  ,                                                 00071800
.*-------------------------------------------------------------------   00071900
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00072000
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00072100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00072200
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00072300
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00072400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00072500
                AGO   .ZPVCKE                                           00072600
.ZPVCK2         ANOP  ,                                                 00072700
.*-------------------------------------------------------------------   00072800
&ZCVAL          SETC  '&PLISTVER(1)'                                    00072900
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00073000
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00073100
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00073200
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00073300
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00073400
.ZPVCK6         ANOP  ,                                                 00073500
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00073600
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00073700
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00073800
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00073900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00074000
&XPLISTVER      SETA  0                                                 00074100
                AGO   .ZPVCKE                                           00074200
.*-------------------------------------------------------------------   00074300
.ZPVCK4A        ANOP  ,                                                 00074400
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00074500
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00074600
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00074700
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00074800
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00074900
                MNOTE 8,' &ZMS IS REQUIRED.'                            00075000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00075100
                AGO   .ZPVCK5                                           00075200
.ZPVCK4         ANOP  ,                                                 00075300
&XPLISTVER      SETA  &PLISTVER(1)                                      00075400
.ZPVCK5         ANOP  ,                                                 00075500
.ZPVCKE         ANOP  ,                                                 00075600
.********************************************************************   00075700
.***AG.MF01 PROCESS MF MACRO FORMS                                      00075800
.********************************************************************   00075900
                  ACTR  10000                                           00076000
.*------------------------------------------------------------------    00076100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00076200
&XMF              SETC  ''          INITIALIZE XVARIABLE                00076300
.*-------------------------------------------------------------------   00076400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00076500
.ZG23             ANOP  ,                                               00076600
&ZTLC             SETC 'S'                                              00076700
                  AIF   ('&MF(1)' NE '&ZTLC').ZG24                      00076800
&XMF              SETC  'S'         SET KEYWORD                         00076900
                  AIF   (N'&MF LE 1).ZG23A      CK NUM                  00077000
&ZMS              SETC  '"MF='      *KPOSA* MNOTE                       00077100
&ZMS              SETC  '&ZMS.&MF"'                                     00077200
&ZMS              SETC  '&ZMS "MF"'                                     00077300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00077400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00077500
.ZG23A            ANOP  ,                                               00077600
.*-------------------------------------------------------------------   00077700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00077800
.ZG24             ANOP  ,                                               00077900
&ZTLC             SETC 'L'                                              00078000
                  AIF   ('&MF(1)' NE '&ZTLC').ZG31                      00078100
&XMF              SETC  'L'         SET KEYWORD                         00078200
                  AIF   (N'&MF LE 3).ZG24A      CK NUM                  00078300
&ZMS              SETC  '"MF='      *KPOSA* MNOTE                       00078400
&ZMS              SETC  '&ZMS.&MF"'                                     00078500
&ZMS              SETC  '&ZMS "MF"'                                     00078600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'            00078700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00078800
.ZG24A            ANOP  ,                                               00078900
.*-------------------------------------------------------------------   00079000
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00079100
                  AIF   (N'&SYSLIST NE 0).ZG24B  POSITIONALS?           00079200
                  AIF   ('&AE_SERVERMAX' NE '').ZG24B  KEYS?            00079300
                  AIF   ('&AE_SERVERMIN' NE '').ZG24B  KEYS?            00079400
                  AIF   ('&AE_SPREADMIN' NE '').ZG24B  KEYS?            00079500
                  AIF   ('&RETCODE' NE '').ZG24B  KEYS?                 00079600
                  AIF   ('&RSNCODE' NE '').ZG24B  KEYS?                 00079700
                  AGO    .ZG24C     INVOCATION OKAY                     00079800
.ZG24B            ANOP  ,                                               00079900
&ZMS              SETC  'THE "L" FORM OF "MF"'  *MFLA* MNOTE            00080000
&ZMS              SETC  '&ZMS CAN ONLY HAVE'                            00080100
&ZMS              SETC  '&ZMS THE "PLISTVER" KEY'                       00080200
                  MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'          00080300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00080400
.ZG24C            ANOP  ,                                               00080500
.*-------------------------------------------------------------------   00080600
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00080700
&ZXMFCTRL         SETC  'INPUT'     SET IN/OUTPUT                       00080800
&XMFCTRL          SETC  '&MF(2,1)'  SET XVARIABLE                       00080900
                  AIF   (N'&MF(2) GT 1).ZG26B   MULTI PARMS             00081000
&XMFCTRL          SETC  '&MF(2)'    SET XVARIABLE                       00081100
.ZG26B            AIF   (K'&MF(2) GT 0).ZG26C                           00081200
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00081300
&ZMS              SETC  'WHEN "L" IS SPECIFIED'  *KRQDA*                00081400
&ZMS              SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'             00081500
                  MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                    00081600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00081700
.ZG26C            ANOP  ,                                               00081800
.*-------------------------------------------------------------------   00081900
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00082000
                  AIF   (K'&ZXMFCTRL LE 0).ZG26P  NOT I/O               00082100
                  AIF   ('&XMFCTRL'(1,1) NE '(').ZG26P                  00082200
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00082300
&ZMS              SETC  '"MF='      *KGPRA* MNOTE                       00082400
&ZMS              SETC  '&ZMS.&MF"'                                     00082500
&ZMS              SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'       00082600
                  MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'               00082700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00082800
.ZG26P            ANOP  ,                                               00082900
.*-------------------------------------------------------------------   00083000
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00083100
&ZXMFATTR         SETC  'INPUT'     SET IN/OUTPUT                       00083200
&XMFATTR          SETC  '0D'                                            00083300
                  AIF   (K'&MF(3) LE 0).ZG29B   PARM                    00083400
&XMFATTR          SETC  '&MF(3,1)'  SET XVARIABLE                       00083500
                  AIF   (N'&MF(3) GT 1).ZG29B   MULTI PARMS             00083600
&XMFATTR          SETC  '&MF(3)'    SET XVARIABLE                       00083700
.ZG29B            ANOP  ,                                               00083800
.*-------------------------------------------------------------------   00083900
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00084000
                  AIF   (K'&ZXMFATTR LE 0).ZG29P  NOT I/O               00084100
                  AIF   ('&XMFATTR'(1,1) NE '(').ZG29P                  00084200
&ZXMFATTR         SETC  ''          RESET IN/OUTPUT                     00084300
&ZMS              SETC  '"MF='      *KGPRA* MNOTE                       00084400
&ZMS              SETC  '&ZMS.&MF"'                                     00084500
&ZMS              SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'       00084600
                  MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'               00084700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00084800
.ZG29P            ANOP  ,                                               00084900
.*-------------------------------------------------------------------   00085000
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00085100
                  AIF   (K'&ZXMFATTR LE 0).ZG29S  NOT I/O               00085200
                  AIF   (K'&XMFATTR LE 60).ZG29S  LNG OK                00085300
&ZXMFATTR         SETC  ''          RESET IN/OUTPUT                     00085400
&ZMS              SETC  '"MF='      *KLNGA* MNOTE                       00085500
&ZMS              SETC  '&ZMS.&MF"'                                     00085600
&ZMS              SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'           00085700
                  MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'              00085800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00085900
.ZG29S            ANOP  ,                                               00086000
.*-------------------------------------------------------------------   00086100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00086200
.ZG31             ANOP  ,                                               00086300
&ZTLC             SETC 'E'                                              00086400
                  AIF   ('&MF(1)' NE '&ZTLC').ZG39                      00086500
&XMF              SETC  'E'         SET KEYWORD                         00086600
                  AIF   (N'&MF LE 3).ZG31A      CK NUM                  00086700
&ZMS              SETC  '"MF='      *KPOSA* MNOTE                       00086800
&ZMS              SETC  '&ZMS.&MF"'                                     00086900
&ZMS              SETC  '&ZMS "MF"'                                     00087000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'            00087100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00087200
.ZG31A            ANOP  ,                                               00087300
.*-------------------------------------------------------------------   00087400
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00087500
&ZXMFCTRL         SETC  'INPUT'     SET IN/OUTPUT                       00087600
&XMFCTRL          SETC  '&MF(2,1)'  SET XVARIABLE                       00087700
                  AIF   (N'&MF(2) GT 1).ZG33B   MULTI PARMS             00087800
&XMFCTRL          SETC  '&MF(2)'    SET XVARIABLE                       00087900
.ZG33B            AIF   (K'&MF(2) GT 0).ZG33C                           00088000
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00088100
&ZMS              SETC  'WHEN "E" IS SPECIFIED'  *KRQDA*                00088200
&ZMS              SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'             00088300
                  MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                    00088400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00088500
.ZG33C            ANOP  ,                                               00088600
.*-------------------------------------------------------------------   00088700
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00088800
                  AIF   (K'&ZXMFCTRL LE 0).ZG33R  NOT I/O               00088900
                  AIF   ('&XMFCTRL'(1,1) NE '(').ZG33R                  00089000
&ZCGPR            SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                      00089100
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG33P                    00089200
                  AIF   (K'&ZCGPR GT 2).ZG33Q                           00089300
                  AIF   ('&ZCGPR' EQ '0').ZG33Q                         00089400
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00089500
                  AIF   (T'&ZCGPR NE 'N').ZG33Q  INVALID REG NAME       00089600
.ZG33P            ANOP  ,                                               00089700
                  AIF   (T'&ZCGPR NE 'N').ZG33R  NON NUMERIC            00089800
                  AIF   ('&ZCGPR' LT '1').ZG33Q                         00089900
                  AIF   ('&ZCGPR' LE '12').ZG33R                        00090000
.ZG33Q            ANOP  ,                                               00090100
&ZMS              SETC  '"MF='      *KGPRA* MNOTE                       00090200
&ZMS              SETC  '&ZMS.&MF"'                                     00090300
&ZMS              SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'       00090400
                  MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                00090500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00090600
.ZG33R            ANOP  ,                                               00090700
.*-------------------------------------------------------------------   00090800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00090900
&XMFSCK           SETC  ''          INITIALIZE XVARIABLE                00091000
.ZG37A   AIF   ('&MF(3)' NE 'COMPLETE').ZG38A                           00091100
&XMFSCK           SETC  'COMPLETE'  SET KEYWORD                         00091200
.*-------------------------------------------------------------------   00091300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00091400
.ZG38A            AIF   (K'&XMFSCK GT 0).ZG38C  KEYWORD                 00091500
                  AIF   (K'&MF(3) LE 0).ZG38B                           00091600
&ZMS              SETC  '"MF='      *KUKWA* MNOTE                       00091700
&ZMS              SETC  '&ZMS.&MF"'                                     00091800
&ZMS              SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '       00091900
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00092000
&ZMS              SETC  '&ZMS "COMPLETE".'                              00092100
                  MNOTE 8,' &ZMS '                                      00092200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00092300
.ZG38B            ANOP  ,                                               00092400
&XMFSCK           SETC  'COMPLETE'  SET DEFAULT KEYWORD                 00092500
.ZG38C            ANOP  ,                                               00092600
&ZXMFSCK          SETC  'INPUT'     SET IN/OUTPUT                       00092700
.*------------------------------------------------------------------    00092800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00092900
.ZG39             ANOP  ,                                               00093000
&ZXMF             SETC  'INPUT'     SET IN/OUTPUT                       00093100
                  AIF   (K'&XMF GT 0).ZG39E     VALID ARG               00093200
                  AIF   (T'&MF EQ 'O').ZG39D    OMITTED                 00093300
&ZASYSLNDX        SETA  0                                               00093400
.ZG39A            ANOP  ,           POSITIONAL MACRO KEY                00093500
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00093600
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG39C                00093700
&ZTLC             SETC 'MF'                                             00093800
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG39A       00093900
.ZG39B            ANOP  ,                                               00094000
&ZXMF             SETC  ''          RESET IN/OUTPUT                     00094100
&ZMS              SETC  'THE "MF" KEY'          *KOPTA* MNOTE           00094200
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00094300
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00094400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00094500
                  AGO   .ZG39E                                          00094600
.ZG39C            ANOP  ,                                               00094700
&ZXMF             SETC  ''          RESET IN/OUTPUT                     00094800
&ZMS              SETC  '"MF='      *KUKWA* MNOTE                       00094900
&ZMS              SETC  '&ZMS.&MF"'                                     00095000
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00095100
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00095200
&ZMS              SETC  '&ZMS "S",'                                     00095300
&ZMS              SETC  '&ZMS "L",'                                     00095400
&ZMS              SETC  '&ZMS OR "E".'                                  00095500
                  MNOTE 8,' &ZMS '                                      00095600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00095700
                  AGO   .ZG39E                                          00095800
.ZG39D            ANOP  ,                                               00095900
&XMF              SETC  'S'         SET DEFAULT KEYWORD                 00096000
&XMFSCK           SETC  'COMPLETE'  COMPLETE CHECKING                   00096100
.ZG39E            ANOP  ,                                               00096200
.********************************************************************   00096300
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00096400
.********************************************************************   00096500
                  ACTR  10000                                           00096600
.*-------------------------------------------------------------------   00096700
.***AG.MF03 MF=(SLE)                                                    00096800
                  AIF   ('&XMF' EQ 'L').ZGMFX                           00096900
.*----------------------------------------------------------------***   00097000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00097100
                  AIF   (N'&AE_SERVERMAX LE 1).ZG2A  CK NUM             00097200
&ZMS              SETC  '"AE_SERVERMAX='        *KPOSA* MNOTE           00097300
&ZMS              SETC  '&ZMS.&AE_SERVERMAX"'                           00097400
&ZMS              SETC  '&ZMS "AE_SERVERMAX"'                           00097500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00097600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00097700
.ZG2A             ANOP  ,                                               00097800
.*-------------------------------------------------------------------   00097900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00098000
&ZXAE_SERVERMAX   SETC  'INPUT'     SET IN/OUTPUT                       00098100
&XAE_SERVERMAX    SETC  '0'                                             00098200
                  AIF   (K'&AE_SERVERMAX(1) LE 0).ZG2B  PARM            00098300
&XAE_SERVERMAX    SETC  '&AE_SERVERMAX(1)'      SET XVARIABLE           00098400
                  AIF   (N'&AE_SERVERMAX GT 1).ZG2B  MULTI PARMS        00098500
&XAE_SERVERMAX    SETC  '&AE_SERVERMAX'         SET XVARIABLE           00098600
.ZG2B             ANOP  ,                                               00098700
.*-------------------------------------------------------------------   00098800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00098900
                  AIF   (K'&ZXAE_SERVERMAX LE 0).ZG2R  NOT I/O          00099000
                  AIF   ('&XAE_SERVERMAX'(1,1) NE '(').ZG2R             00099100
&ZCGPR            SETC  '&XAE_SERVERMAX'(2,K'&XAE_SERVERMAX-2)          00099200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                     00099300
                  AIF   (K'&ZCGPR GT 2).ZG2Q                            00099400
                  AIF   ('&ZCGPR' EQ '0').ZG2Q                          00099500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00099600
                  AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME        00099700
.ZG2P             ANOP  ,                                               00099800
                  AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC             00099900
                  AIF   ('&ZCGPR' LT '2').ZG2Q                          00100000
                  AIF   ('&ZCGPR' LE '12').ZG2R                         00100100
.ZG2Q             ANOP  ,                                               00100200
&ZMS              SETC  '"AE_SERVERMAX='        *KGPRA* MNOTE           00100300
&ZMS              SETC  '&ZMS.&AE_SERVERMAX"'                           00100400
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00100500
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00100600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00100700
.ZG2R             ANOP  ,                                               00100800
.*----------------------------------------------------------------***   00100900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00101000
                  AIF   (N'&AE_SERVERMIN LE 1).ZG5A  CK NUM             00101100
&ZMS              SETC  '"AE_SERVERMIN='        *KPOSA* MNOTE           00101200
&ZMS              SETC  '&ZMS.&AE_SERVERMIN"'                           00101300
&ZMS              SETC  '&ZMS "AE_SERVERMIN"'                           00101400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00101500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00101600
.ZG5A             ANOP  ,                                               00101700
.*-------------------------------------------------------------------   00101800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00101900
&ZXAE_SERVERMIN   SETC  'INPUT'     SET IN/OUTPUT                       00102000
&XAE_SERVERMIN    SETC  '0'                                             00102100
                  AIF   (K'&AE_SERVERMIN(1) LE 0).ZG5B  PARM            00102200
&XAE_SERVERMIN    SETC  '&AE_SERVERMIN(1)'      SET XVARIABLE           00102300
                  AIF   (N'&AE_SERVERMIN GT 1).ZG5B  MULTI PARMS        00102400
&XAE_SERVERMIN    SETC  '&AE_SERVERMIN'         SET XVARIABLE           00102500
.ZG5B             ANOP  ,                                               00102600
.*-------------------------------------------------------------------   00102700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00102800
                  AIF   (K'&ZXAE_SERVERMIN LE 0).ZG5R  NOT I/O          00102900
                  AIF   ('&XAE_SERVERMIN'(1,1) NE '(').ZG5R             00103000
&ZCGPR            SETC  '&XAE_SERVERMIN'(2,K'&XAE_SERVERMIN-2)          00103100
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                     00103200
                  AIF   (K'&ZCGPR GT 2).ZG5Q                            00103300
                  AIF   ('&ZCGPR' EQ '0').ZG5Q                          00103400
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00103500
                  AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME        00103600
.ZG5P             ANOP  ,                                               00103700
                  AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC             00103800
                  AIF   ('&ZCGPR' LT '2').ZG5Q                          00103900
                  AIF   ('&ZCGPR' LE '12').ZG5R                         00104000
.ZG5Q             ANOP  ,                                               00104100
&ZMS              SETC  '"AE_SERVERMIN='        *KGPRA* MNOTE           00104200
&ZMS              SETC  '&ZMS.&AE_SERVERMIN"'                           00104300
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00104400
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00104500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00104600
.ZG5R             ANOP  ,                                               00104700
.*------------------------------------------------------------------    00104800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00104900
&XAE_SPREADMIN    SETC  ''          INITIALIZE XVARIABLE                00105000
.*-------------------------------------------------------------------   00105100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00105200
.ZG8              ANOP  ,                                               00105300
                  AIF   (K'&AE_SPREADMIN(1) LE 0).ZG8A                  00105400
&ZTLC             SETC 'NO'                                             00105500
                  AIF   ('&AE_SPREADMIN(1)' NE '&ZTLC').ZG9             00105600
&XAE_SPREADMIN    SETC  'NO'        SET KEYWORD                         00105700
                  AIF   (N'&AE_SPREADMIN LE 1).ZG8A  CK NUM             00105800
&ZMS              SETC  '"AE_SPREADMIN='        *KPOSA* MNOTE           00105900
&ZMS              SETC  '&ZMS.&AE_SPREADMIN"'                           00106000
&ZMS              SETC  '&ZMS "AE_SPREADMIN"'                           00106100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00106200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00106300
.ZG8A             ANOP  ,                                               00106400
.*-------------------------------------------------------------------   00106500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00106600
.ZG9              ANOP  ,                                               00106700
&ZTLC             SETC 'YES'                                            00106800
                  AIF   ('&AE_SPREADMIN(1)' NE '&ZTLC').ZG10            00106900
&XAE_SPREADMIN    SETC  'YES'       SET KEYWORD                         00107000
                  AIF   (N'&AE_SPREADMIN LE 1).ZG9A  CK NUM             00107100
&ZMS              SETC  '"AE_SPREADMIN='        *KPOSA* MNOTE           00107200
&ZMS              SETC  '&ZMS.&AE_SPREADMIN"'                           00107300
&ZMS              SETC  '&ZMS "AE_SPREADMIN"'                           00107400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00107500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00107600
.ZG9A             ANOP  ,                                               00107700
.*------------------------------------------------------------------    00107800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00107900
.ZG10             ANOP  ,                                               00108000
&ZXAE_SPREADMIN   SETC  'INPUT'     SET IN/OUTPUT                       00108100
                  AIF   (K'&XAE_SPREADMIN GT 0).ZG10E  VALID ARG        00108200
                  AIF   (T'&AE_SPREADMIN EQ 'O').ZG10D  OMITTED         00108300
&ZASYSLNDX        SETA  0                                               00108400
.ZG10A            ANOP  ,           POSITIONAL MACRO KEY                00108500
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00108600
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG10C                00108700
&ZTLC             SETC 'AE_SPREADMIN'                                   00108800
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG10A       00108900
.ZG10B            ANOP  ,                                               00109000
&ZXAE_SPREADMIN   SETC  ''          RESET IN/OUTPUT                     00109100
&ZMS              SETC  'THE "AE_SPREADMIN" KEY'  *KOPTA* MNOTE         00109200
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00109300
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00109400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00109500
                  AGO   .ZG10E                                          00109600
.ZG10C            ANOP  ,                                               00109700
&ZXAE_SPREADMIN   SETC  ''          RESET IN/OUTPUT                     00109800
&ZMS              SETC  '"AE_SPREADMIN='        *KUKWA* MNOTE           00109900
&ZMS              SETC  '&ZMS.&AE_SPREADMIN"'                           00110000
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00110100
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00110200
&ZMS              SETC  '&ZMS "NO"'                                     00110300
&ZMS              SETC  '&ZMS OR "YES".'                                00110400
                  MNOTE 8,' &ZMS '                                      00110500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00110600
                  AGO   .ZG10E                                          00110700
.ZG10D            ANOP  ,                                               00110800
&XAE_SPREADMIN    SETC  'NO'        SET DEFAULT KEYWORD                 00110900
.ZG10E            ANOP  ,                                               00111000
.*------------------------------------------------------------------    00111100
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00111200
                  AIF   (K'&AE_SERVERMIN(1) GT 0).ZG10F  KEY            00111300
                  AIF   (K'&AE_SPREADMIN(1) LE 0).ZG10F  PARM           00111400
&ZMS              SETC  '"AE_SPREADMIN'         *KDEPA* MNOTE           00111500
&ZMS              SETC  '&ZMS.=&AE_SPREADMIN"'                          00111600
&ZMS              SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                 00111700
&ZMS              SETC  '&ZMS '                                         00111800
&ZMS              SETC  '&ZMS "AE_SERVERMIN"'                           00111900
                  MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                    00112000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00112100
.ZG10F            ANOP  ,                                               00112200
.*----------------------------------------------------------------***   00112300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00112400
                  AIF   (N'&RETCODE LE 1).ZG13A  CK NUM                 00112500
&ZMS              SETC  '"RETCODE='             *KPOSA* MNOTE           00112600
&ZMS              SETC  '&ZMS.&RETCODE"'                                00112700
&ZMS              SETC  '&ZMS "RETCODE"'                                00112800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00112900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00113000
.ZG13A            ANOP  ,                                               00113100
.*-------------------------------------------------------------------   00113200
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00113300
                  AIF   (K'&RETCODE(1) LE 0).ZG13C  NO PARM             00113400
&ZXRETCODE        SETC  'OUTPUT'    SET OUTPUT                          00113500
&XRETCODE         SETC  '&RETCODE(1)'           SET XVARIABLE           00113600
                  AIF   (N'&RETCODE GT 1).ZG13C                         00113700
&XRETCODE         SETC  '&RETCODE'  SET XVARIABLE                       00113800
.ZG13C            ANOP  ,                                               00113900
.*-------------------------------------------------------------------   00114000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00114100
                  AIF   (K'&ZXRETCODE LE 0).ZG13R  NOT I/O              00114200
                  AIF   ('&XRETCODE'(1,1) NE '(').ZG13R                 00114300
&ZCGPR            SETC  '&XRETCODE'(2,K'&XRETCODE-2)                    00114400
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG13P                    00114500
                  AIF   (K'&ZCGPR GT 2).ZG13Q                           00114600
                  AIF   ('&ZCGPR' EQ '0').ZG13Q                         00114700
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00114800
                  AIF   (T'&ZCGPR NE 'N').ZG13Q  INVALID REG NAME       00114900
.ZG13P            ANOP  ,                                               00115000
                  AIF   (T'&ZCGPR NE 'N').ZG13R  NON NUMERIC            00115100
                  AIF   ('&ZCGPR' LT '2').ZG13Q                         00115200
                  AIF   ('&ZCGPR' LE '12').ZG13R                        00115300
.ZG13Q            ANOP  ,                                               00115400
&ZMS              SETC  '"RETCODE='             *KGPRA* MNOTE           00115500
&ZMS              SETC  '&ZMS.&RETCODE"'                                00115600
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00115700
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00115800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00115900
.ZG13R            ANOP  ,                                               00116000
.*----------------------------------------------------------------***   00116100
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00116200
                  AIF   (N'&RSNCODE LE 1).ZG16A  CK NUM                 00116300
&ZMS              SETC  '"RSNCODE='             *KPOSA* MNOTE           00116400
&ZMS              SETC  '&ZMS.&RSNCODE"'                                00116500
&ZMS              SETC  '&ZMS "RSNCODE"'                                00116600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00116700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00116800
.ZG16A            ANOP  ,                                               00116900
.*-------------------------------------------------------------------   00117000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00117100
                  AIF   (K'&RSNCODE(1) LE 0).ZG16C  NO PARM             00117200
&ZXRSNCODE        SETC  'OUTPUT'    SET OUTPUT                          00117300
&XRSNCODE         SETC  '&RSNCODE(1)'           SET XVARIABLE           00117400
                  AIF   (N'&RSNCODE GT 1).ZG16C                         00117500
&XRSNCODE         SETC  '&RSNCODE'  SET XVARIABLE                       00117600
.ZG16C            ANOP  ,                                               00117700
.*-------------------------------------------------------------------   00117800
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00117900
                  AIF   (K'&ZXRSNCODE LE 0).ZG16R  NOT I/O              00118000
                  AIF   ('&XRSNCODE'(1,1) NE '(').ZG16R                 00118100
&ZCGPR            SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                    00118200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG16P                    00118300
                  AIF   (K'&ZCGPR GT 2).ZG16Q                           00118400
                  AIF   ('&ZCGPR' EQ '0').ZG16Q                         00118500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00118600
                  AIF   (T'&ZCGPR NE 'N').ZG16Q  INVALID REG NAME       00118700
.ZG16P            ANOP  ,                                               00118800
                  AIF   (T'&ZCGPR NE 'N').ZG16R  NON NUMERIC            00118900
                  AIF   ('&ZCGPR' LT '2').ZG16Q                         00119000
                  AIF   ('&ZCGPR' LE '12').ZG16R                        00119100
.ZG16Q            ANOP  ,                                               00119200
&ZMS              SETC  '"RSNCODE='             *KGPRA* MNOTE           00119300
&ZMS              SETC  '&ZMS.&RSNCODE"'                                00119400
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00119500
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00119600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00119700
.ZG16R            ANOP  ,                                               00119800
.******************************************************************     00119900
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00120000
.******************************************************************     00120100
                  ACTR  10000                                           00120200
.*----------------------------------------------------------------***   00120300
.***AH.P02 EXTRA POSITIONALS                                            00120400
                  AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS            00120500
                  AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL            00120600
                  AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL        00120700
                  AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL         00120800
.ZGLISTX1         ANOP  ,                                               00120900
&ZCVAL            SETC  ''          ERROR FIELD                         00121000
&ZAWRK            SETA  0           POSITIONAL NUMBER                   00121100
.ZGLIST2          ANOP  ,                                               00121200
&ZAWRK            SETA  &ZAWRK+1    NEXT POSITIONAL                     00121300
                  AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE            00121400
&ZCVAL            SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                 00121500
                  AGO   .ZGLIST2                                        00121600
.*                                                                      00121700
.ZGLIST3          ANOP  ,                                               00121800
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)   STRIP COMMA             00121900
&ZMS              SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE        00122000
&ZMS              SETC  '&ZMS "&ZCVAL"'                                 00122100
&ZMS              SETC  '&ZMS CANNOT BE USED.'                          00122200
&ZMS              SETC  '&ZMS NO POSITIONAL ARGUMENTS'                  00122300
                  MNOTE 8,' &ZMS ARE ALLOWED.'                          00122400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00122500
.ZGLISTX          ANOP  ,                                               00122600
&ZASYSLNDX        SETA  0                                               00122700
.*-------------------------------------------------------------------   00122800
.***AG.MF04 MF=(SLE)                                                    00122900
.ZGMFX            ANOP  ,           END OF FULL SYNTAX CHECK            00123000
.*******************************************************************    00123100
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00123200
.*******************************************************************    00123300
                  AIF   (&ZMACRET NE 0).ZLX2    ERROR DETECTED          00123400
.*******************************************************************    00123500
.***AE.01  START OF IWMSLIM MACRO CODE                                  00123600
.*******************************************************************    00123700
                  LCLC  &M0M0001                 NAME                   00123800
&M0M0001          SETC  '&XLABEL'                SET NAME               00123900
                  AIF   (K'&XLABEL NE 0).XLAB2                          00124000
&M0M0001          SETC  'M00M&SYSNDX'            DEFAULT NAME           00124100
.*                                                                      00124200
.XLAB2            ANOP  ,                                               00124300
                  AIF   ('&XMF' EQ 'L').XLAB3                           00124400
&M0M0001 DS    0H                             IWMSLIM-0                 00124500
.XLAB3            ANOP  ,                                               00124600
.*******************************************************************    00124700
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00124800
.*******************************************************************    00124900
              PUSH  PRINT                                               00125000
                  AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON      00125100
                  PRINT OFF         ++ PR01                             00125200
                  AGO   .ZPRNTXX                                        00125300
.ZPRINTX          PRINT ON                                              00125400
.ZPRNTXX          ANOP  ,                                               00125500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00125600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00125700
.********************************************************************   00125800
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00125900
.********************************************************************   00126000
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00126100
                      LCLA  &ZOPN1         INVOCATION INDEX             00126200
                      LCLC  &ZOPL(4095)    LABEL                        00126300
                      LCLC  &ZOPO(4095)    OPERATION                    00126400
                      LCLC  &ZOPV(4095)    VALUE                        00126500
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00126600
.*                                                                      00126700
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00126800
.******************************************************************     00126900
.***AL.L10 IWMSLIM FMT=LIST MF=S!L PARAMETERS                           00127000
.******************************************************************     00127100
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00127200
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00127300
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00127400
&XMFATTR              SETC  '0D'                                        00127500
.*                                                                      00127600
&ZOPN                 SETA  &ZOPN+1                                     00127700
&ZOPL(&ZOPN)          SETC  ' '                                         00127800
                      AIF   (&SYSALVL NE 0).ZALVL6A                     00127900
&ZOPO(&ZOPN)          SETC  'B'                                         00128000
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00128100
                      AGO   .ZALVL6B                                    00128200
.ZALVL6A              ANOP                                              00128300
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00128400
&ZOPV(&ZOPN)          SETC  '4,8'                                       00128500
&ZOPN                 SETA  &ZOPN+1                                     00128600
&ZOPL(&ZOPN)          SETC  ' '                                         00128700
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00128800
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00128900
.ZALVL6B              ANOP                                              00129000
&ZOPD(&ZOPN)          SETC  '++ IWMSLIM ARG PARMS'                      00129100
.*                                                                      00129200
&ZOPN                 SETA  &ZOPN+1                                     00129300
&ZOPL(&ZOPN)          SETC  ' '                                         00129400
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00129500
&ZOPV(&ZOPN)          SETC  '1'                                         00129600
&ZOPD(&ZOPN)          SETC  ' '                                         00129700
.*                                                                      00129800
.ZLMFSL2              ANOP  ,                                           00129900
.*-------------------------------------------------------------------   00130000
.***AM.L00  IWMSLIM FMT=LIST name                                       00130100
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00130200
&ZOPN                 SETA &ZOPN+1                                      00130300
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00130400
&ZOPO(&ZOPN)          SETC 'EQU'                                        00130500
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00130600
&ZOPD(&ZOPN)          SETC '++ IWMSLIM NAME'                            00130700
.ZLMFSL2M             ANOP  ,                                           00130800
.*-------------------------------------------------------------------   00130900
.***AM.L01  IWMSLIM FMT=LIST PARAMETERS                                 00131000
&ZOPN                 SETA &ZOPN+1                                      00131100
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00131200
&ZOPO(&ZOPN)          SETC 'DS'                                         00131300
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00131400
&ZOPD(&ZOPN)          SETC '++ IWMSLIM PARM LIST'                       00131500
.*-------------------------------------------------------------------   00131600
.***AM.L02 XVERSION XL1                                                 00131700
&ZOPN                 SETA &ZOPN+1                                      00131800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00131900
&ZOPO(&ZOPN)          SETC 'DS'                                         00132000
&ZOPV(&ZOPN)          SETC 'XL1'                                        00132100
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00132200
.*-------------------------------------------------------------------   00132300
.***AM.L09  XOPTIONS BL.8                                               00132400
&ZOPN                 SETA &ZOPN+1                                      00132500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOPTIONS'                         00132600
&ZOPO(&ZOPN)          SETC 'DS'                                         00132700
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00132800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XOPTIONS'                   00132900
.*-------------------------------------------------------------------   00133000
.***AM.L09  XPLISTLEN XL2                                               00133100
&ZOPN                 SETA &ZOPN+1                                      00133200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        00133300
&ZOPO(&ZOPN)          SETC 'DS'                                         00133400
&ZOPV(&ZOPN)          SETC 'XL2'                                        00133500
&ZOPD(&ZOPN)          SETC '++ INPUT  XPLISTLEN'                        00133600
.*-------------------------------------------------------------------   00133700
.***AM.L03 XFLAG_WORD BL.8                                              00133800
&ZOPN                 SETA &ZOPN+1                                      00133900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAG_WORD'                       00134000
&ZOPO(&ZOPN)          SETC 'DS'                                         00134100
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00134200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00134300
.*                                                                      00134400
&ZOPN                 SETA  &ZOPN+1                                     00134500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XAE_SPREADMIN_YES'               00134600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00134700
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00134800
&ZOPD(&ZOPN)          SETC  '++ XAE_SPREADMIN.'                         00134900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00135000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00135100
.*-------------------------------------------------------------------   00135200
.***AM.L09  XRSV0002 CL1                                                00135300
&ZOPN                 SETA &ZOPN+1                                      00135400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0002'                         00135500
&ZOPO(&ZOPN)          SETC 'DS'                                         00135600
&ZOPV(&ZOPN)          SETC 'CL1'                                        00135700
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0002'                      00135800
.*-------------------------------------------------------------------   00135900
.***AM.L09  XAE_SERVERMAX XL2                                           00136000
&ZOPN                 SETA &ZOPN+1                                      00136100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XAE_SERVERMAX'                    00136200
&ZOPO(&ZOPN)          SETC 'DS'                                         00136300
&ZOPV(&ZOPN)          SETC 'XL2'                                        00136400
&ZOPD(&ZOPN)          SETC '++ &ZXAE_SERVERMAX  XAE_SERVERMAX'          00136500
.*-------------------------------------------------------------------   00136600
.***AM.L09  XAE_SERVERMIN XL2                                           00136700
&ZOPN                 SETA &ZOPN+1                                      00136800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XAE_SERVERMIN'                    00136900
&ZOPO(&ZOPN)          SETC 'DS'                                         00137000
&ZOPV(&ZOPN)          SETC 'XL2'                                        00137100
&ZOPD(&ZOPN)          SETC '++ &ZXAE_SERVERMIN  XAE_SERVERMIN'          00137200
.*-------------------------------------------------------------------   00137300
.***AM.L10 END OF IWMSLIM LIST PARAMETERS                               00137400
&ZOPN                 SETA &ZOPN+1                                      00137500
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00137600
&ZOPO(&ZOPN)          SETC 'EQU'                                        00137700
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00137800
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00137900
.*                                                                      00138000
&ZOPN                 SETA &ZOPN+1                                      00138100
&ZOPL(&ZOPN)          SETC ' '                                          00138200
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00138300
&ZOPV(&ZOPN)          SETC '1'                                          00138400
&ZOPD(&ZOPN)          SETC ' '                                          00138500
.*-------------------------------------------------------------------   00138600
.***AL.L12 IWMSLIM FMT=LIST MF=S!L PARAMETERS                           00138700
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00138800
.*                                                                      00138900
&ZOPN                 SETA  &ZOPN+1                                     00139000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00139100
&ZOPO(&ZOPN)          SETC  'DC'                                        00139200
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00139300
&ZOPD(&ZOPN)          SETC  '++ IWMSLIM ARG PARMS'                      00139400
.*                                                                      00139500
.ZLMFSLX              ANOP  ,                                           00139600
.*-------------------------------------------------------------------   00139700
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00139800
&ZPLLEN               SETA 10                                           00139900
.*                                                                      00140000
.******************************************************************     00140100
.***AI.L01 IWMSLIM FMT=LIST FILL IN PARAMETER AREA                      00140200
.******************************************************************     00140300
                      ACTR  10000                                       00140400
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00140500
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00140600
&ZCVAL                SETC  'LAE'          XAX MODE                     00140700
.ZIMFXA               ANOP ,                                            00140800
.*                                                                      00140900
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00141000
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00141100
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00141200
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00141300
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00141400
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00141500
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00141600
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00141700
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00141800
&ZOPN                 SETA  &ZOPN+1                                     00141900
&ZOPL(&ZOPN)          SETC  ' '                                         00142000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00142100
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00142200
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00142300
                      AGO   .ZIMFNX                                     00142400
.*                                                                      00142500
.ZIMFN2               ANOP ,                                            00142600
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     00142700
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00142800
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00142900
&ZOPN                 SETA  &ZOPN+1                                     00143000
&ZOPL(&ZOPN)          SETC  ' '                                         00143100
&ZOPO(&ZOPN)          SETC  'LAE'                                       00143200
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00143300
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00143400
                      AGO   .ZIMFNX                                     00143500
.ZIMFNX1              ANOP ,                                            00143600
&ZOPN                 SETA  &ZOPN+1                                     00143700
&ZOPL(&ZOPN)          SETC  ' '                                         00143800
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00143900
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00144000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00144100
.ZIMFNX               ANOP ,                                            00144200
.********************************************************************   00144300
.***AI.L02 IWMSLIM FMT=LIST INITIALIZE PARAMETER AREA                   00144400
.********************************************************************   00144500
.***AI.L03 MF=(SLE)                                                     00144600
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00144700
.*                                                                      00144800
&ZOPN                 SETA  &ZOPN+1                                     00144900
&ZOPL(&ZOPN)          SETC  ' '                                         00145000
&ZOPO(&ZOPN)          SETC  'XC'                                        00145100
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00145200
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00145300
.ZIMFLX               ANOP  ,                                           00145400
.*-------------------------------------------------------------------   00145500
.***AI.L04 XPLISTLEN XL2                                                00145600
&ZOPN                 SETA  &ZOPN+1                                     00145700
&ZOPL(&ZOPN)          SETC  ' '                                         00145800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00145900
&ZOPV(&ZOPN)          SETC  '2(2,1),=AL2(&ZPLLEN)'                      00146000
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    00146100
.*-------------------------------------------------------------------   00146200
.***AI.L05 XFLAG_WORD BL1                                               00146300
&ZW                   SETC  ''                                          00146400
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00146500
.*-------------------------------------------------------------------   00146600
.***AI.L08 XFLAG_WORD "YES"                                             00146700
.***      BL1'1XXXXXXX'                                                 00146800
         AIF   ('&XAE_SPREADMIN' NE 'YES').ZI5A                         00146900
&ZW                   SETC  '&ZW.10000000'                              00147000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00147100
                      AGO   .ZI5C                                       00147200
.*                                                                      00147300
.ZI5A                 ANOP  ,                                           00147400
&ZW                   SETC  '&ZW.00000000'                              00147500
.ZI5C                 ANOP  ,                                           00147600
.*-------------------------------------------------------------------   00147700
.***AI.L11 XFLAG_WORD BL1                                               00147800
                      AIF   ('&ZCLNG' NE 'YES').ZI5E  ALL ZERO BITS     00147900
&ZOPN                 SETA  &ZOPN+1                                     00148000
&ZOPL(&ZOPN)          SETC  ' '                                         00148100
&ZOPO(&ZOPN)          SETC  'OI'                                        00148200
&ZOPV(&ZOPN)          SETC  '4(1),B''&ZW'''                             00148300
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00148400
.ZI5E                 ANOP  ,                                           00148500
.*-------------------------------------------------------------------   00148600
.***AI.L25  XAE_SERVERMAX XL2                                           00148700
                      AIF   ('&ZXAE_SERVERMAX' EQ '').ZI7E              00148800
                      AIF   ('&ZXAE_SERVERMAX' EQ 'OUTPUT').ZI7E        00148900
&ZCGPR                SETC  '&XAE_SERVERMAX'                            00149000
         AIF   ('&XAE_SERVERMAX' EQ '0').ZI7E                           00149100
         AIF   ('&XAE_SERVERMAX' EQ '0').ZI7E                           00149200
.*                                                                      00149300
                      AIF   ('&XAE_SERVERMAX'(1,1) NE '(').ZI7B         00149400
&ZCGPR   SETC  '0('.'&XAE_SERVERMAX'(2,K'&XAE_SERVERMAX-2).')'          00149500
                      AGO   .ZI7D                                       00149600
.ZI7B                 ANOP  ,                                           00149700
.*                                                                      00149800
&ZC                   SETC  '&XAE_SERVERMAX'(1,1)                       00149900
                      AIF   (T'&ZC NE 'N').ZI7D                         00150000
&ZC                   SETC  '&XAE_SERVERMAX'                            00150100
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI7D                00150200
&ZCGPR                SETC  '=AL2(&XAE_SERVERMAX)'                      00150300
.*                                                                      00150400
.ZI7D                 ANOP  ,                                           00150500
.*                                                                      00150600
&ZOPN                 SETA  &ZOPN+1                                     00150700
&ZOPL(&ZOPN)          SETC  ' '                                         00150800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00150900
&ZOPV(&ZOPN)          SETC  '6(2,1),&ZCGPR'                             00151000
&ZOPD(&ZOPN)          SETC  '++ &ZXAE_SERVERMAX XAE_SERVERMAX'          00151100
.*                                                                      00151200
.ZI7E                 ANOP  ,                                           00151300
.*-------------------------------------------------------------------   00151400
.***AI.L25  XAE_SERVERMIN XL2                                           00151500
                      AIF   ('&ZXAE_SERVERMIN' EQ '').ZI8E              00151600
                      AIF   ('&ZXAE_SERVERMIN' EQ 'OUTPUT').ZI8E        00151700
&ZCGPR                SETC  '&XAE_SERVERMIN'                            00151800
         AIF   ('&XAE_SERVERMIN' EQ '0').ZI8E                           00151900
         AIF   ('&XAE_SERVERMIN' EQ '0').ZI8E                           00152000
.*                                                                      00152100
                      AIF   ('&XAE_SERVERMIN'(1,1) NE '(').ZI8B         00152200
&ZCGPR   SETC  '0('.'&XAE_SERVERMIN'(2,K'&XAE_SERVERMIN-2).')'          00152300
                      AGO   .ZI8D                                       00152400
.ZI8B                 ANOP  ,                                           00152500
.*                                                                      00152600
&ZC                   SETC  '&XAE_SERVERMIN'(1,1)                       00152700
                      AIF   (T'&ZC NE 'N').ZI8D                         00152800
&ZC                   SETC  '&XAE_SERVERMIN'                            00152900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI8D                00153000
&ZCGPR                SETC  '=AL2(&XAE_SERVERMIN)'                      00153100
.*                                                                      00153200
.ZI8D                 ANOP  ,                                           00153300
.*                                                                      00153400
&ZOPN                 SETA  &ZOPN+1                                     00153500
&ZOPL(&ZOPN)          SETC  ' '                                         00153600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00153700
&ZOPV(&ZOPN)          SETC  '8(2,1),&ZCGPR'                             00153800
&ZOPD(&ZOPN)          SETC  '++ &ZXAE_SERVERMIN XAE_SERVERMIN'          00153900
.*                                                                      00154000
.ZI8E                 ANOP  ,                                           00154100
.*-------------------------------------------------------------------   00154200
&ZOPN1                SETA &ZOPN                                        00154300
.*******************************************************************    00154400
.***  PROCESS IWMSLIM OUTPUT PARAMETERS                                 00154500
.*******************************************************************    00154600
                      ACTR  10000                                       00154700
.*******************************************************************    00154800
.***AO.X02  RETURN CODE PROCESSING                                      00154900
.*******************************************************************    00155000
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00155100
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00155200
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00155300
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00155400
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00155500
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00155600
&ZOPN                 SETA  &ZOPN+1                                     00155700
&ZOPL(&ZOPN)          SETC  ' '                                         00155800
&ZOPO(&ZOPN)          SETC  'ST'                                        00155900
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00156000
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00156100
                      AGO   .ZMRETX                                     00156200
.*                                                                      00156300
.ZMRET2               ANOP  ,                                           00156400
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00156500
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00156600
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00156700
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00156800
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00156900
&ZOPN                 SETA  &ZOPN+1                                     00157000
&ZOPL(&ZOPN)          SETC  ' '                                         00157100
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00157200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00157300
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00157400
.ZMRETX               ANOP  ,                                           00157500
.*******************************************************************    00157600
.***AO.X03  REASON CODE PROCESSING                                      00157700
.*******************************************************************    00157800
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00157900
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00158000
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00158100
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00158200
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00158300
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00158400
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00158500
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00158600
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00158700
&ZOPN                 SETA  &ZOPN+1                                     00158800
&ZOPL(&ZOPN)          SETC  ' '                                         00158900
&ZOPO(&ZOPN)          SETC  'ST'                                        00159000
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00159100
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00159200
                      AGO   .ZMRSNX                                     00159300
.*                                                                      00159400
.ZMRSN2               ANOP  ,                                           00159500
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00159600
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00159700
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00159800
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00159900
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00160000
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00160100
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00160200
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00160300
&ZOPN                 SETA  &ZOPN+1                                     00160400
&ZOPL(&ZOPN)          SETC  ' '                                         00160500
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00160600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00160700
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00160800
.ZMRSNX               ANOP  ,                                           00160900
.*******************************************************************    00161000
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00161100
.*******************************************************************    00161200
.ZMFLX                ANOP  ,              MF=L PROCESSING              00161300
.*******************************************************************    00161400
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00161500
.*******************************************************************    00161600
                      ACTR  10000                                       00161700
.*                                                                      00161800
                      LCLA  &ZLC           COLUMN POSITION              00161900
                      LCLA  &ZOPX          LIST TABLE INDEX             00162000
                      LCLC  &ZLL           LABEL                        00162100
                      LCLC  &ZLOP          OPERATION                    00162200
                      LCLC  &ZLV           VALUE                        00162300
                      LCLC  &ZLD           DESCRIPTION                  00162400
.*                                                                      00162500
&ZOPX                 SETA  1                                           00162600
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00162700
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00162800
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00162900
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00163000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00163100
                      AIF   (K'&ZLD LE 0).ZL5                           00163200
&ZLC                  SETA  35             COMMENT COLUMN               00163300
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00163400
&ZLC                  SETA  33             COMMMENT COLUMN              00163500
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00163600
&ZLV                  SETC  '&ZLV'.' '                                  00163700
                      AGO   .ZL3                                        00163800
.*                                                                      00163900
.ZL4                  ANOP  ,                                           00164000
&ZLV                  SETC  '&ZLV'.' '                                  00164100
.ZL5                  ANOP  ,                                           00164200
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00164300
.*                                                                      00164400
&ZLL     &ZLOP &ZLV                                                     00164500
.*                                                                      00164600
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00164700
                      AGO   .ZL2           CONTINUE LOOPING             00164800
.*                                                                      00164900
.ZLX                  ANOP  ,                                           00165000
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00165100
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00165200
         L     14,16(0,0)              GET CVT ADDRESS                  00165300
         L     14,772(14,0)            GET SFT ADDRESS                  00165400
         L     14,380(14,0)            GET LX FOR SERVICE ROUTINE       00165500
         LA    15,71                   GET EX FOR SERVICE ROUTINE       00165600
         OR    14,15                   GET PC NUMBER                    00165700
         PC    0(14)                                                    00165800
END&SYSNDX DS    0H                    END LABEL                        00165900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00166000
.ZLINKX               ANOP  ,                                           00166100
.*******************************************************************    00166200
.***AP.X01  FORMAT GENERATED CODE                                       00166300
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00166400
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00166500
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00166600
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00166700
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00166800
                      AIF   (K'&ZLD LE 0).ZL51                          00166900
&ZLC                  SETA  35             COMMENT COLUMN               00167000
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00167100
&ZLC                  SETA  33             COMMENT COLUMN               00167200
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00167300
&ZLV                  SETC  '&ZLV'.' '                                  00167400
                      AGO   .ZL31                                       00167500
.*                                                                      00167600
.ZL41                 ANOP  ,                                           00167700
&ZLV                  SETC  '&ZLV'.' '                                  00167800
.ZL51                 ANOP  ,                                           00167900
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00168000
.*                                                                      00168100
&ZLL     &ZLOP &ZLV                                                     00168200
.*                                                                      00168300
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00168400
                      AGO   .ZL21          CONTINUE LOOPING             00168500
.*                                                                      00168600
.ZLX1                 ANOP  ,                                           00168700
.*******************************************************************    00168800
.***AP.X02  END OF IWMSLIM MACRO                                        00168900
&ZIWMSLIM             SETC  'YES'          SET IWMSLIM USED             00169000
         POP   PRINT                                                    00169100
*                                            IWMSLIM-0                  00169200
         SPACE 1                                                        00169300
.ZLX2                 ANOP  ,                                           00169400
         MEND                                                           00169500
**********************************************************************/ 00169600
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00169700
*%IWMSLIM: MACRO KEYS(AE_SERVERMAX,AE_SERVERMIN,AE_SPREADMIN,RETCODE,   00169800
*                 RSNCODE,PLISTVER,MF);                                 00169900
*  ANS('?'!!MACLABEL!!' '!!'IWMSLIMP '!!MACLIST!!                       00170000
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00170100
*%END IWMSLIM;                                                          00170200
