*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXZXIXSM                              -10/16/01-<2> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Send a message to a mailbox                   * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5645-001 (C) COPYRIGHT IBM CORP. 1996, 1997                     * 00001200
*                                                                     * 00001300
* STATUS= HBB6603                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      Purpose:  The IXZXIXSM service will send messages between JES  * 00002100
*      subcomponents on the same or different members of the JESPlex. * 00002200
*      Messages can be sent from any JES environment, but can only be * 00002300
*      received in a JES address space (JES or FSS). This structure   * 00002400
*      allows for communications to occur in one of two ways:         * 00002500
*                                                                     * 00002600
*                                                                     * 00002700
*      1.  JES Dispatchable Unit (JDU's) can communicate information  * 00002800
*          between members.                                           * 00002900
*                                                                     * 00003000
*      2.  JES code in a user's address space can make requests of    * 00003100
*          the JES address space (REQTYPE=SYNC) for service.          * 00003200
*                                                                     * 00003300
*      3.  JES code in a user's address space can forward information * 00003400
*          to the JES address space for processing. For example, the  * 00003500
*          JES3 Subsystem interface routines get control in the       * 00003600
*          user's address sapce when a WTO is issued, JES3 will use   * 00003700
*          this service to send a copy of the WTO to the JES3 Global  * 00003800
*          address space for inclusion in the SYSLOG.                 * 00003900
*                                                                     * 00004000
*                                                                     * 00004100
*                                                                     * 00004200
*      IBM use of the interface:  IBM will use this service for all   * 00004300
*      of the functions listed above.                                 * 00004400
*                                                                     * 00004500
*      Customer use of the interface:  Those installations making     * 00004600
*      modifications (via JES installation exits and/or JES3 DSPs)    * 00004700
*      can use this service to perform the same functions described   * 00004800
*      above. The service provided is limited to the JES environment, * 00004900
*      so this is not a set of services that can be used in           * 00005000
*      applications, or other MVS environments.                       * 00005100
*                                                                     * 00005200
*      CDPI Implications:                                             * 00005300
*                                                                     * 00005400
*      This macro is a General Use Programming Interface.  It is      * 00005500
*      intended to be used as part of JES exits and JES3 dynamic      * 00005600
*      support programs. The macro is only used in JES environments.  * 00005700
*                                                                     * 00005800
*      EEC Implications:                                              * 00005900
*                                                                     * 00006000
*      This macro is not an EEC interface.                            * 00006100
*                                                                     * 00006200
*      Related Macros:                                                * 00006300
*                                                                     * 00006400
*      The following macros are required in order to use this macro   * 00006500
*      service:                                                       * 00006600
*                                                                     * 00006700
*                                                                     * 00006800
*      o   JES2:                                                      * 00006900
*                                                                     * 00007000
*                                                                     * 00007100
*          -   $MODULE - must be included in the module and must have * 00007200
*              been invoked before the IXZXIXSM macro service.        * 00007300
*                                                                     * 00007400
*                                                                     * 00007500
*                                                                     * 00007600
*      o   JES3:                                                      * 00007700
*                                                                     * 00007800
*                                                                     * 00007900
*          -   IATYMOD - must be included in the module and must have * 00008000
*              been invoked before the IXZXIXSM macro service.        * 00008100
*                                                                     * 00008200
*                                                                     * 00008300
*                                                                     * 00008400
*                                                                     * 00008500
*                                                                     * 00008600
*      The following macros are used with this macro to manage the    * 00008700
*      transport of data and monitoring of system events:             * 00008800
*                                                                     * 00008900
*                                                                     * 00009000
*      o   IXZXIXMB - Build a mailbox                                 * 00009100
*                                                                     * 00009200
*      o   IXZXIXMC - Clear a mailbox                                 * 00009300
*                                                                     * 00009400
*      o   IXZXIXMD - Delete XCF Mailbox                              * 00009500
*                                                                     * 00009600
*      o   IXZXIXRM - Receive a message from a mailbox                * 00009700
*                                                                     * 00009800
*      o   IXZXIXAC - Acknowledge receive of a message                * 00009900
*                                                                     * 00010000
*      o   IXZXIXIF - Obtain member information                       * 00010100
*                                                                     * 00010200
*                                                                     * 00010300
*                                                                     * 00010400
*      Requirements                                                   * 00010500
*                                                                     * 00010600
*                                                                     * 00010700
*      o   Authorization: Supervisor state - key 0 or 1               * 00010800
*                                                                     * 00010900
*      o   Dispatchable unit mode: Task                               * 00011000
*                                                                     * 00011100
*      o   Cross memory mode: PASN = HASN = SASN                      * 00011200
*                                                                     * 00011300
*      o   AMODE: 31                                                  * 00011400
*                                                                     * 00011500
*      o   ASC mode: Primary                                          * 00011600
*                                                                     * 00011700
*      o   Serialization: Enabled for interrupts                      * 00011800
*                                                                     * 00011900
*      o   Locks:  This service assumes no locks are held by the      * 00012000
*          user.                                                      * 00012100
*                                                                     * 00012200
*      o   Control Parameters:  None                                  * 00012300
*                                                                     * 00012400
*      o   JES Environments:                                          * 00012500
*                                                                     * 00012600
*                                                                     * 00012700
*          -   JES2 Main Task                                         * 00012800
*                                                                     * 00012900
*          -   JES3 Main Task                                         * 00013000
*                                                                     * 00013100
*          -   JES2 Subtask                                           * 00013200
*                                                                     * 00013300
*          -   JES3 Subtask                                           * 00013400
*                                                                     * 00013500
*          -   JES3 FSS                                               * 00013600
*                                                                     * 00013700
*          -   User Address Space                                     * 00013800
*                                                                     * 00013900
*                                                                     * 00014000
*                                                                     * 00014100
*                                                                     * 00014200
*                                                                     * 00014300
*      Register Information                                           * 00014400
*                                                                     * 00014500
*                                                                     * 00014600
*      o   Input registers                                            * 00014700
*                                                                     * 00014800
*                                                                     * 00014900
*          -   R0-R15 - Undefined                                     * 00015000
*                                                                     * 00015100
*                                                                     * 00015200
*                                                                     * 00015300
*      o   Output registers                                           * 00015400
*                                                                     * 00015500
*                                                                     * 00015600
*          -   R0 - Reason code                                       * 00015700
*                                                                     * 00015800
*          -   R1 - Unpredictable                                     * 00015900
*                                                                     * 00016000
*          -   R2-R13 - Unchanged                                     * 00016100
*                                                                     * 00016200
*          -   R14 - Unpredictable                                    * 00016300
*                                                                     * 00016400
*          -   R15 - Return code                                      * 00016500
*                                                                     * 00016600
*                                                                     * 00016700
*                                                                     * 00016800
*                                                                     * 00016900
*                                                                     * 00017000
*      Programming Notes/Requirements                                 * 00017100
*                                                                     * 00017200
*                                                                     * 00017300
*      1.  The programmer must supply a mailbox name. A mailbox name  * 00017400
*          is a 1 to 16 byte identifier that is used to indicate      * 00017500
*          where the data is to be sent. This identifier is used to   * 00017600
*          inform the JES XCF common subcomponent where to deliver    * 00017700
*          messages and whom to notify of the delivery.  The IXZXIXMB * 00017800
*          macro service can be used by the installation to create a  * 00017900
*          mailbox into which they can place messages.                * 00018000
*                                                                     * 00018100
*      2.  The programmer must supply the member name to which the    * 00018200
*          message is to be delivered. The member information can be  * 00018300
*          obtained by using the IXZXIXIF service to obtain member    * 00018400
*          information.                                               * 00018500
*                                                                     * 00018600
*      3.  If a synchronous message that requires acknowledgement is  * 00018700
*          sent the processor of the message can return a single      * 00018800
*          segment of information to the caller. This segment is      * 00018900
*          return via the RESPDATA= parameter.  The message buffer    * 00019000
*          returned should by handled like message returned by the    * 00019100
*          IXZXIXRM service. The response segment must be             * 00019200
*          acknowledged with the IXZXIXAC macro like all messages.    * 00019300
*                                                                     * 00019400
*      4.  Asynchronous message that require acknowledgement will     * 00019500
*          receive response messages packaged with the                * 00019600
*          acknowledgment.                                            * 00019700
*                                                                     * 00019800
*      5.  Synchronous message (REQTYPE=SYNC) should not be issued    * 00019900
*          while in the JES2 or JES3 main task environments.          * 00020000
*          Synchronous message issued in the JES2 or JES3 main task   * 00020100
*          environments will have an adverse effect on system         * 00020200
*          performance.                                               * 00020300
*                                                                     * 00020400
*      6.  When issing synchronous messages (REQTYPE=SYNC) care must  * 00020500
*          be taken to ensure that the receiver will in fact be able  * 00020600
*          to process the message. The sender of the message will     * 00020700
*          wait until the receiver has acknowledged the message.      * 00020800
*                                                                     * 00020900
*      7.  Information on multi-segmented messages:                   * 00021000
*                                                                     * 00021100
*                                                                     * 00021200
*          a.  A multi-segmented message is not considered completed  * 00021300
*              until a LAST segment has been sent. A multi-segmented  * 00021400
*              message can be started and multiple intervening single * 00021500
*              lines can be sent before the end line is sent. In this * 00021600
*              case all the single line messages will be delivered    * 00021700
*              before the multi-segmented message.                    * 00021800
*                                                                     * 00021900
*          b.  Multiple multi-segmented messages can be active a      * 00022000
*              time. The order of delivery will be order that the     * 00022100
*              LAST segment is received.                              * 00022200
*                                                                     * 00022300
*          c.  A multi-segmented message can be aborted               * 00022400
*              (SEGTYPE=ABORT). This causes the multi-segmented       * 00022500
*              message to be ended, with the first and last segment   * 00022600
*              of the message containing an indicator that the        * 00022700
*              message was aborted. The message will be delivered to  * 00022800
*              the mailbox with this indicator on.                    * 00022900
*                                                                     * 00023000
*          d.  If a multi-segmented message requires an               * 00023100
*              acknowledgment to flow to the sending system           * 00023200
*              (REQTYPE=(SYNC!ASYNC!ASYNCACK)). This acknowledgement  * 00023300
*              message will be built and sent when the LAST line is   * 00023400
*              acknowledged.                                          * 00023500
*                                                                     * 00023600
*                                                                     * 00023700
*                                                                     * 00023800
*×××××××××××××××××××××× Internal information ×××××××××××××××××××××××¯ * 00023900
*                                                                     * 00024000
*                                                                     * 00024100
*      8.  The EXIT= and ECB= are optional ways of having the send    * 00024200
*          message service routine notify the caller when an          * 00024300
*          acknowledgement to the message they sent is complete. The  * 00024400
*          data returned is copied into a buffer provided by the      * 00024500
*          caller using the RESPDATA= parameter.  Data upto the       * 00024600
*          length specified on the RESPDLEN= parameter will be copied * 00024700
*          into the buffer.                                           * 00024800
*                                                                     * 00024900
*                                                                     * 00025000
*          a.  For EXIT= an address of a SRB routine is given. The    * 00025100
*              send message service routine will schedule a local SRB * 00025200
*              in the IXZXIXSM callers address space to cause the     * 00025300
*              exit routine to run.  The address of the buffer        * 00025400
*              specified on the RESPDATA= parameter is passed as a    * 00025500
*              parameter to SRB.                                      * 00025600
*                                                                     * 00025700
*                                                                     * 00025800
*              1)  RIPSIZE= is an optional way to pass to JESXCF the  * 00025900
*                  size of the TYPE=REPLY Information Prefix used for * 00026000
*                  Exit Processing in JES3.  This is an internal      * 00026100
*                  parameter and is not part of the General Use       * 00026200
*                  Programming Interface.                             * 00026300
*                                                                     * 00026400
*                                                                     * 00026500
*                                                                     * 00026600
*          b.  For ECB= an ECB address is passed to the service       * 00026700
*              routine. This ECB will be posted when processing is    * 00026800
*              complete and the acknowledgement data has been passed  * 00026900
*              to the caller via the RESPDATA= parameter.             * 00027000
*                                                                     * 00027100
*                                                                     * 00027200
*                                                                     * 00027300
*      9.  RELEASE_CADS=YES is an optional way to have JESXCF clean   * 00027400
*          up the CADS buffer in the case that JES3 does a JSERV      * 00027500
*          TYPE=PURGE.  This is an internal parameter and is not part * 00027600
*          of the General Use Programming Interface.                  * 00027700
*                                                                     * 00027800
*××××××××××××××××××× End of Internal information ×××××××××××××××××××| * 00027900
*                                                                     * 00028000
*                                                                     * 00028100
*                                                                     * 00028200
*                                                                     * 00028300
*      Restrictions                                                   * 00028400
*                                                                     * 00028500
*                                                                     * 00028600
*      o   Can not be issued until JES initialization has both        * 00028700
*          attached and initialized the JES XCF common subcomponent   * 00028800
*                                                                     * 00028900
*                                                                     * 00029000
*                                                                     * 00029100
*      Performance Implications:                                      * 00029200
*                                                                     * 00029300
*      This macro has no performance impact.                          * 00029400
*                                                                     * 00029500
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00029600
*                                                                     * 00029700
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00029800
*                                                                     * 00029900
*01* SYNTAX:                                                          * 00030000
*                                                                     * 00030100
*Ýxlabel¨  IXZXIXSM     MBOXNAME=xmboxname                            * 00030200
*                      ,MEMBER=xmember                                * 00030300
*                      ,DATA=xdata                                    * 00030400
*                         Ý,DATAALET=»xdataalet!0º¨                   * 00030500
*                          ,DATALEN=xdatalen                          * 00030600
*                     Ý,REQTYPE=»COMM!ASYNCACK!ASYNC!SYNCº¨           * 00030700
*                     Ý,SEGTYPE=»SINGLE!FIRST!MIDDLE!LAST!ABORTº¨     * 00030800
*                     Ý,CONNECT=»xconnect!0º¨                         * 00030900
*                      ,GROUPTOKEN=xgrouptoken                        * 00031000
*                     Ý,RESPDATA=»xrespdata!0º                        * 00031100
*                         Ý,RESPDLEN=»xrespdlen!0º                    * 00031200
*                             Ý,RESPDALT=»xrespdalt!0º¨¨¨             * 00031300
*                     Ý,REQMBOX=»xreqmbox!]None]º                     * 00031400
*                         Ý,REQTOKEN=xreqtoken¨¨                      * 00031500
*                     Ý,EXIT=»xexit!NONEº¨                            * 00031600
*                     Ý,ECB=»xecb!NONEº¨                              * 00031700
*                     Ý,MSGTOKEN=xmsgtoken¨                           * 00031800
*                     Ý,USERRC=xuserrc¨                               * 00031900
*                     Ý,MSGATTR=»NONE!J3CONNECT!EXPRESSº¨             * 00032000
*                     Ý,RELEASE_CADS=»NO!YESº¨                        * 00032100
*                     Ý,RIPSIZE=»xripsize!0º¨                         * 00032200
*                     Ý,RTNCODE=xrtncode¨                             * 00032300
*                     Ý,RSNCODE=xrsncode¨                             * 00032400
*                     Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨         * 00032500
*                    ÐÝ,MF=S¨                                         * 00032600
*                    ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                  * 00032700
*                    ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                    * 00032800
*                                                                     * 00032900
*                                                                     * 00033000
*      Where:                                                         * 00033100
*                                                                     * 00033200
*                                                                     * 00033300
*      Ýxlabel¨                                                       * 00033400
*          is an optional symbol, starting in column 1, that is the   * 00033500
*          name on the IXZXIXSM macro invocation.  The name must      * 00033600
*          conform to the rules for an ordinary assembler language    * 00033700
*          symbol.                                                    * 00033800
*          DEFAULT: No name.                                          * 00033900
*                                                                     * 00034000
*                                                                     * 00034100
*                                                                     * 00034200
*                                                                     * 00034300
*      MBOXNAME=xmboxname                                             * 00034400
*          is the name (RS-type), or address in register (2)-(12), of * 00034500
*          a required 16 character input containing the mailbox name. * 00034600
*          This mailbox name is the location the JES XCF common       * 00034700
*          subcomponent will use to place messages so that another    * 00034800
*          JDU can process them.                                      * 00034900
*                                                                     * 00035000
*                                                                     * 00035100
*                                                                     * 00035200
*                                                                     * 00035300
*      MEMBER=xmember                                                 * 00035400
*          is the name (RS-type), or address in register (2)-(12), of * 00035500
*          a required 16 character input containing the name of the   * 00035600
*          member to which the message should be forwarded. it can be * 00035700
*          any member in the XCF group, including the sending system. * 00035800
*                                                                     * 00035900
*                                                                     * 00036000
*                                                                     * 00036100
*                                                                     * 00036200
*      DATA=xdata                                                     * 00036300
*          is the name (RS-type), or address in register (2)-(12), of * 00036400
*          a required 4 byte input that contains the address of the   * 00036500
*          message data to be sent.                                   * 00036600
*                                                                     * 00036700
*                                                                     * 00036800
*          ÝDATAALET=»xdataalet!0º¨                                   * 00036900
*              is the name (RS-type), or address in register          * 00037000
*              (2)-(12), of an optional fullword input that specifies * 00037100
*              the alet to be used to access the data to be sent to   * 00037200
*              the receiver.  This is an internal parameter and is    * 00037300
*              not part of the General Use Programming Interface.     * 00037400
*              DEFAULT: 0 The service assumes that the data is in the * 00037500
*              callers address space.                                 * 00037600
*                                                                     * 00037700
*                                                                     * 00037800
*                                                                     * 00037900
*                                                                     * 00038000
*          DATALEN=xdatalen                                           * 00038100
*              is the name (RS-type), or address in register          * 00038200
*              (2)-(12), of a required fullword input that contains   * 00038300
*              the length of the message data to be sent.             * 00038400
*                                                                     * 00038500
*                                                                     * 00038600
*                                                                     * 00038700
*                                                                     * 00038800
*                                                                     * 00038900
*                                                                     * 00039000
*      ÝREQTYPE=»COMM!ASYNCACK!ASYNC!SYNCº¨                           * 00039100
*          is an optional keyword input that specifies how            * 00039200
*          acknowledgement processing will be handled.                * 00039300
*          DEFAULT: COMM                                              * 00039400
*                                                                     * 00039500
*                                                                     * 00039600
*          REQTYPE=COMM                                               * 00039700
*              Process the message asynchronously. No recovery action * 00039800
*              will be taken if either the sending or receiving       * 00039900
*              system fail before the message has been processed.     * 00040000
*                                                                     * 00040100
*          REQTYPE=ASYNCACK                                           * 00040200
*              Processing the message asynchronously. The sender of   * 00040300
*              the message will receive an acknowledgement message    * 00040400
*              from the receiver of the message.  This allows for a   * 00040500
*              two-phase commit for updates. This allows for recovery * 00040600
*              of failures, and keeps the sender involved in          * 00040700
*              potential recovery scenarios.                          * 00040800
*                                                                     * 00040900
*          REQTYPE=ASYNC                                              * 00041000
*              Process the message asynchronously. An acknowledgement * 00041100
*              message will not be sent to the sender of the message. * 00041200
*              The JES XCF common subcomponent will handle recovery   * 00041300
*              scenarios for this message.                            * 00041400
*                                                                     * 00041500
*          REQTYPE=SYNC                                               * 00041600
*              Processing the message synchronously, wait until the   * 00041700
*              message has been acknowledged by the receiver before   * 00041800
*              allowing the caller to continue processing.            * 00041900
*                                                                     * 00042000
*                                                                     * 00042100
*                                                                     * 00042200
*                                                                     * 00042300
*                                                                     * 00042400
*                                                                     * 00042500
*      ÝSEGTYPE=»SINGLE!FIRST!MIDDLE!LAST!ABORTº¨                     * 00042600
*          is an optional keyword input that specifies the type of    * 00042700
*          message that is being processed (Single line message,      * 00042800
*          First line of a multiple line message, Middle line, or     * 00042900
*          last line of a multiple line message.                      * 00043000
*          DEFAULT: SINGLE                                            * 00043100
*                                                                     * 00043200
*                                                                     * 00043300
*          SEGTYPE=SINGLE                                             * 00043400
*              The message being processed is a single line message.  * 00043500
*                                                                     * 00043600
*          SEGTYPE=FIRST                                              * 00043700
*              The message is the first line of a multiple line       * 00043800
*              message. A token is returned via the CONNECT parameter * 00043900
*              and must be passed as input on all subsequent lines of * 00044000
*              the message                                            * 00044100
*                                                                     * 00044200
*          SEGTYPE=MIDDLE                                             * 00044300
*              The message is a middle line of a multiple line        * 00044400
*              message.                                               * 00044500
*                                                                     * 00044600
*          SEGTYPE=LAST                                               * 00044700
*              The message is the last line of a multiple line        * 00044800
*              message.                                               * 00044900
*                                                                     * 00045000
*          SEGTYPE=ABORT                                              * 00045100
*              This causes the multiple segment message to be ended,  * 00045200
*              and the message delivered to the receiver with an      * 00045300
*              indication that the message was aborted. This          * 00045400
*              indicator is located in the first and last message     * 00045500
*              segment, the flag is ABORT_SEGMENT in the IXZYIXEN     * 00045600
*              envelope mapping.                                      * 00045700
*                                                                     * 00045800
*                                                                     * 00045900
*                                                                     * 00046000
*                                                                     * 00046100
*                                                                     * 00046200
*                                                                     * 00046300
*      ÝCONNECT=»xconnect!0º¨                                         * 00046400
*          is the name (RS-type), or address in register (2)-(12), of * 00046500
*          an optional 64 bit input/output containing a token that is * 00046600
*          used to match the lines of a multiple line message. The    * 00046700
*          token is returned on the MSGTYPE=FIRST and is passed as    * 00046800
*          input on MSGTYPE=MIDDLE and MSGTYPE=LAST. CONNECT is not   * 00046900
*          used on MSGTYPE=SINGLE.                                    * 00047000
*          DEFAULT: 0 No connect id used, the message must be a       * 00047100
*          single segment message.                                    * 00047200
*                                                                     * 00047300
*                                                                     * 00047400
*                                                                     * 00047500
*                                                                     * 00047600
*      GROUPTOKEN=xgrouptoken                                         * 00047700
*          is the name (RS-type), or address in register (2)-(12), of * 00047800
*          a required fullword input that contains the JES XCF group  * 00047900
*          token.                                                     * 00048000
*                                                                     * 00048100
*                                                                     * 00048200
*                                                                     * 00048300
*                                                                     * 00048400
*      ÝRESPDATA=»xrespdata!0º                                        * 00048500
*          is the name (RS-type), or address in register (2)-(12), of * 00048600
*          an optional fullword input/output Address of the response  * 00048700
*          data received from a REQTYPE=SYNC message.  Or, if ECB= or * 00048800
*          EXIT= are specified this parameter is used to pass the     * 00048900
*          address of the message buffer, into which the response     * 00049000
*          will be placed                                             * 00049100
*          DEFAULT: 0                                                 * 00049200
*                                                                     * 00049300
*                                                                     * 00049400
*          ÝRESPDLEN=»xrespdlen!0º                                    * 00049500
*              is the name (RS-type), or address in register          * 00049600
*              (2)-(12), of an optional fullword input/output Length  * 00049700
*              of the data returned to a REQTYPE=SYNC message.  Or,   * 00049800
*              if ECB= or EXIT= are specified this parameter is used  * 00049900
*              to pass the length of the message buffer, into which   * 00050000
*              the response will be placed.                           * 00050100
*              DEFAULT: 0                                             * 00050200
*                                                                     * 00050300
*                                                                     * 00050400
*              ÝRESPDALT=»xrespdalt!0º¨¨¨                             * 00050500
*                  is the name (RS-type), or address in register      * 00050600
*                  (2)-(12), of an optional fullword input Alet used  * 00050700
*                  to qualify the RESPDATA= keyword when used as      * 00050800
*                  input.  This is an internal parameter and is not   * 00050900
*                  part of the General Use Programming Interface.     * 00051000
*                  DEFAULT: 0                                         * 00051100
*                                                                     * 00051200
*                                                                     * 00051300
*                                                                     * 00051400
*                                                                     * 00051500
*                                                                     * 00051600
*                                                                     * 00051700
*                                                                     * 00051800
*                                                                     * 00051900
*      ÝREQMBOX=»xreqmbox!]None]º                                     * 00052000
*          is the name (RS-type), or address in register (2)-(12), of * 00052100
*          an optional 16 character input containing the name of the  * 00052200
*          mailbox into which the acknowledgment message will be      * 00052300
*          returned. The keyword is required for invocations that     * 00052400
*          specify (REQTYPE=ASYNCACK).                                * 00052500
*          DEFAULT: 'None'                                            * 00052600
*                                                                     * 00052700
*                                                                     * 00052800
*          ÝREQTOKEN=xreqtoken¨¨                                      * 00052900
*              is the name (RS-type), or address in register          * 00053000
*              (2)-(12), of an optional 64 bit output containing a    * 00053100
*              token that can be used to match an acknowledgement     * 00053200
*              with an issuance of the IXZXIXSM macro. REQTOKEN is    * 00053300
*              only returned if the TYPE=ASYNCACK parameter is        * 00053400
*              specified; otherwise, binary zero is returned.         * 00053500
*                                                                     * 00053600
*                                                                     * 00053700
*                                                                     * 00053800
*                                                                     * 00053900
*                                                                     * 00054000
*                                                                     * 00054100
*      ÝEXIT=»xexit!NONEº¨                                            * 00054200
*          is the name (RS-type), or address in register (2)-(12), of * 00054300
*          an optional fullword input Specifies the address of a      * 00054400
*          routine that will receive control under a SRB in the       * 00054500
*          callers address space. This routine will notify the issuer * 00054600
*          of a message that acknowledgement data have been returned  * 00054700
*          via RESPDATA parameter. This internal parameter is not     * 00054800
*          part of the General Use Programming Interface.             * 00054900
*          DEFAULT: NONE                                              * 00055000
*                                                                     * 00055100
*                                                                     * 00055200
*                                                                     * 00055300
*                                                                     * 00055400
*      ÝECB=»xecb!NONEº¨                                              * 00055500
*          is the name (RS-type), or address in register (2)-(12), of * 00055600
*          an optional fullword input Specifies an ECB that will be   * 00055700
*          posted when the message has been processed and             * 00055800
*          acknowledgement data has been returned to the caller via   * 00055900
*          the RESPDATA parameter.  This is an internal parameter an  * 00056000
*          is not part of the General Use Programming Interface.      * 00056100
*          DEFAULT: NONE                                              * 00056200
*                                                                     * 00056300
*                                                                     * 00056400
*                                                                     * 00056500
*                                                                     * 00056600
*      ÝMSGTOKEN=xmsgtoken¨                                           * 00056700
*          is the name (RS-type), or address in register (2)-(12), of * 00056800
*          an optional 64 bit output that contains a token that       * 00056900
*          represents the response message. The token is returned to  * 00057000
*          the XCF Subtask via the IXZXIXAC macro service once the    * 00057100
*          message has been processed. The IXZXIXAC macro will return * 00057200
*          any resources held by the message and will perform the     * 00057300
*          required acknowledgment processing.                        * 00057400
*                                                                     * 00057500
*                                                                     * 00057600
*                                                                     * 00057700
*                                                                     * 00057800
*      ÝUSERRC=xuserrc¨                                               * 00057900
*          is the name (RS-type), or address in register (2)-(12), of * 00058000
*          an optional fullword output that returns the processing    * 00058100
*          results as specified by the receiver of the message. The   * 00058200
*          USERRC is only used used by synchronous messages (REQTYPE= * 00058300
*          SYNC). The return information is returned in the           * 00058400
*          acknowledgement message for asynchronous messages that     * 00058500
*          require an acknowledgement, USERRC returns binary zero in  * 00058600
*          this case.  Asynchronous messages that do not require an   * 00058700
*          acknowledgment do not return processing results, USERRC    * 00058800
*          returns binary zero.                                       * 00058900
*                                                                     * 00059000
*                                                                     * 00059100
*                                                                     * 00059200
*                                                                     * 00059300
*      ÝMSGATTR=»NONE!J3CONNECT!EXPRESSº¨                             * 00059400
*          is an optional keyword input that assigns special          * 00059500
*          attributes to a message that is being sent. This is an     * 00059600
*          internal parameter and is not part of the general use      * 00059700
*          programming interface.                                     * 00059800
*          DEFAULT: NONE                                              * 00059900
*                                                                     * 00060000
*                                                                     * 00060100
*          MSGATTR=NONE                                               * 00060200
*              This message has no special message attributes.  This  * 00060300
*              is an internal parameter and is not part of the        * 00060400
*              general use programming interface.                     * 00060500
*                                                                     * 00060600
*          MSGATTR=J3CONNECT                                          * 00060700
*              This is a JES3 connect message. It should should be    * 00060800
*              sent to the receiver before JES3 connect processing    * 00060900
*              has completed and should be sent even if a slow down   * 00061000
*              is in progress. This is an internal parameter and is   * 00061100
*              not part of the general use programming interface.     * 00061200
*                                                                     * 00061300
*          MSGATTR=EXPRESS                                            * 00061400
*              This message should be sent, even in a buffer          * 00061500
*              constraint situation.  This is an internal parameter   * 00061600
*              and is not part of the general use programming         * 00061700
*              interface.                                             * 00061800
*                                                                     * 00061900
*                                                                     * 00062000
*                                                                     * 00062100
*                                                                     * 00062200
*                                                                     * 00062300
*                                                                     * 00062400
*      ÝRELEASE_CADS=»NO!YESº¨                                        * 00062500
*          is an optional keyword input that lets JESXCF know it      * 00062600
*          should return the CADS buffer being used.                  * 00062700
*          DEFAULT: NO                                                * 00062800
*                                                                     * 00062900
*                                                                     * 00063000
*          RELEASE_CADS=NO                                            * 00063100
*              There is to be no special cleanup.  This is an         * 00063200
*              internal parameter and is not part of the general use  * 00063300
*              programming interface.                                 * 00063400
*                                                                     * 00063500
*          RELEASE_CADS=YES                                           * 00063600
*              This is a message that is being built using a CADS     * 00063700
*              buffer, and JESXCF should return the CADS buffer.      * 00063800
*              This is an internal parameter and is not part of the   * 00063900
*              general use programming interface.                     * 00064000
*                                                                     * 00064100
*                                                                     * 00064200
*                                                                     * 00064300
*                                                                     * 00064400
*                                                                     * 00064500
*                                                                     * 00064600
*      ÝRIPSIZE=»xripsize!0º¨                                         * 00064700
*          is the name (RS-type), or address in register (2)-(12), of * 00064800
*          an optional fullword input that contains the length of the * 00064900
*          TYPE=REPLY Information Prefix for Exit Processing used by  * 00065000
*          JES3.  This is an internal parameter and is not part of    * 00065100
*          the general use programming interface.                     * 00065200
*          DEFAULT: 0                                                 * 00065300
*                                                                     * 00065400
*                                                                     * 00065500
*                                                                     * 00065600
*                                                                     * 00065700
*      ÝRTNCODE=xrtncode¨                                             * 00065800
*          is the name (RS-type) of an optional fullword output       * 00065900
*          variable, or register (2)-(12), into which the return code * 00066000
*          is to be copied from GPR 15.                               * 00066100
*                                                                     * 00066200
*                                                                     * 00066300
*                                                                     * 00066400
*                                                                     * 00066500
*      ÝRSNCODE=xrsncode¨                                             * 00066600
*          is the name (RS-type) of an optional fullword output       * 00066700
*          variable, or register (2)-(12), into which the reason code * 00066800
*          is to be copied from GPR 0.                                * 00066900
*                                                                     * 00067000
*                                                                     * 00067100
*                                                                     * 00067200
*                                                                     * 00067300
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00067400
*          is an optional byte input decimal value in the "1-2" range * 00067500
*          that specifies the macro version.  PLISTVER is the only    * 00067600
*          key allowed on the list form of MF and determines which    * 00067700
*          parameter list is generated.  The macro keys associated    * 00067800
*          with each supported version of the macro are listed in     * 00067900
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 00068000
*          instead of a number, and the parameter list will be of the * 00068100
*          largest size currently supported. This size may grow from  * 00068200
*          release to release (thus possibly affecting the amount of  * 00068300
*          storage needed by your program).  If your program can      * 00068400
*          tolerate this, IBM recommends that you always specify MAX  * 00068500
*          when creating the list form parameter list as that will    * 00068600
*          ensure that the list form parameter list is always long    * 00068700
*          enough to hold whatever parameters might be specified on   * 00068800
*          the execute form.                                          * 00068900
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00069000
*          default is the lowest version which allows all of the      * 00069100
*          parameters specified on the invocation to be processed.    * 00069200
*                                                                     * 00069300
*                                                                     * 00069400
*                                                                     * 00069500
*                                                                     * 00069600
*      ÝMF=»S!L!Eº¨                                                   * 00069700
*          is an optional keyword input which specifies the macro     * 00069800
*          form.                                                      * 00069900
*          DEFAULT: S                                                 * 00070000
*                                                                     * 00070100
*                                                                     * 00070200
*          ÝMF=S¨                                                     * 00070300
*              specifies the standard form of the macro.  The "S"     * 00070400
*              form generates code to put the parameters into an      * 00070500
*              in-line parameter list and invoke the desired service. * 00070600
*              Full checking for required macro keys is done along    * 00070700
*              with supplying defaults for omitted optional           * 00070800
*              parameters.                                            * 00070900
*                                                                     * 00071000
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00071100
*              specifies the list form of the macro.  The "L" form    * 00071200
*              defines an area to be used for the parameter list.     * 00071300
*              Only the PLISTVER key may be specified on the          * 00071400
*              invocation.  All other macro parameters are flagged as * 00071500
*              errors.  If PLISTVER is not specified, the original    * 00071600
*              parameter list definition is used.                     * 00071700
*                                                                     * 00071800
*            ,xmfctrl                                                 * 00071900
*              is a required input.  It is the name of a storage area * 00072000
*              for the parameter list.                                * 00072100
*                                                                     * 00072200
*            »,xmfattr!0Dº                                            * 00072300
*              is an optional 60 character input string that varies   * 00072400
*              from 1 to 60 characters. Use it to force boundary      * 00072500
*              alignment of the parameter list. Use only 0F or 0D.    * 00072600
*              DEFAULT: 0D which forces the parameter list to a       * 00072700
*              doubleword boundary.                                   * 00072800
*                                                                     * 00072900
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00073000
*              specifies the execute form of the macro.  The "E" form * 00073100
*              generates code to put the parameters into the          * 00073200
*              parameter list specified by xmfctrl and provides full  * 00073300
*              syntax checking with default setting.                  * 00073400
*                                                                     * 00073500
*            ,xmfctrl                                                 * 00073600
*              is a required input.  It is the name (RS-type), or     * 00073700
*              address in register (1)-(12), of a storage area for    * 00073800
*              the parameter list.                                    * 00073900
*                                                                     * 00074000
*            »,COMPLETEº                                              * 00074100
*              is an optional keyword input which specifies the       * 00074200
*              degree of macro parameter syntax checking.             * 00074300
*              DEFAULT: COMPLETE                                      * 00074400
*                                                                     * 00074500
*                                                                     * 00074600
*              COMPLETE                                               * 00074700
*                  Checking for required macro keys is done and       * 00074800
*                  defaults are supplied for omitted optional         * 00074900
*                  parameters.                                        * 00075000
*                                                                     * 00075100
*                                                                     * 00075200
*                                                                     * 00075300
*                                                                     * 00075400
*                                                                     * 00075500
*                                                                     * 00075600
*                                                                     * 00075700
*01* RETURN CODES:                                                    * 00075800
*                                                                     * 00075900
*                                                                     * 00076000
*            0    Processing was sucessful, a message was passed to   * 00076100
*                 the JES XCF coupling support.                       * 00076200
*                                                                     * 00076300
*            4    Invalid user input was received, the message was    * 00076400
*                 not sent.                                           * 00076500
*                                                                     * 00076600
*            8    A system error occurred while processing the        * 00076700
*                 request.  The message was not sent.                 * 00076800
*                                                                     * 00076900
*            C    A system abend occurred while processing the        * 00077000
*                 request.  The message was not sent.                 * 00077100
*                                                                     * 00077200
*                                                                     * 00077300
*                                                                     * 00077400
*01* REASON CODES:                                                    * 00077500
*                                                                     * 00077600
*       REASON    RETURN                                              * 00077700
*       CODE      CODE      DESCRIPTION                               * 00077800
*       ××××××××  ××××××××  ×××××××××××                               * 00077900
*                                                                     * 00078000
*                                                                     * 00078100
*              0  0         The  processing  requested was performed. * 00078200
*                           If  the call was asynchronous the message * 00078300
*                           was  queue  to  be  sent. If the call was * 00078400
*                           synchronous  the message was delivered to * 00078500
*                           the receiver and acknowledged.            * 00078600
*                                                                     * 00078700
*              4  4         Processing  failed  because the parameter * 00078800
*                           list   passed  to  the  IXZXIXSM  service * 00078900
*                           routine does not have a valid eyecatcher. * 00079000
*                                                                     * 00079100
*              8  4         Processing  failed because, the parameter * 00079200
*                           list   passed  to  the  IXZXIXSM  service * 00079300
*                           routine had an invalid version indicator. * 00079400
*                           The caller may need to be recompiled.     * 00079500
*                                                                     * 00079600
*              C  4         Processing failed because, the grouptoken * 00079700
*                           passed  to  the  IXZXIXSM service routine * 00079800
*                           was not valid.                            * 00079900
*                                                                     * 00080000
*             10  4         Processing  failed because, the parameter * 00080100
*                           list   passed  to  the  IXZXIXSM  service * 00080200
*                           routine had an invalid member name.  Only * 00080300
*                           A-Z, 0-9 and $ @ # are valid and imbedded * 00080400
*                           blanks are not allowed.                   * 00080500
*                                                                     * 00080600
*             14  4         The MBOXNAME passed in the parameter list * 00080700
*                           to  the  IXZXIXSM  macro service contains * 00080800
*                           characters  that  are  not  valid.    The * 00080900
*                           request is rejected.                      * 00081000
*                                                                     * 00081100
*             18  4         The  REQMBOX passed in the parameter list * 00081200
*                           to  the  IXZXIXSM  macro service contains * 00081300
*                           characters  that  are  not  valid.    The * 00081400
*                           request is rejected.                      * 00081500
*                                                                     * 00081600
*             24  4         CONNECT   was   not   specified   in  the * 00081700
*                           parameter  list  passed  to  the  IXZIXSM * 00081800
*                           macro  service.    When SEGTYPE is first, * 00081900
*                           middle,   last,   or  abort,  CONNECT  is * 00082000
*                           required.                                 * 00082100
*                                                                     * 00082200
*             28  4         MSGTOKEN   was   not   specified  in  the * 00082300
*                           parameter  list  passed  to  the  IXZIXSM * 00082400
*                           macro  service.    When  REQTYPE is sync, * 00082500
*                           MSGTOKEN is required.                     * 00082600
*                                                                     * 00082700
*             34  4         The   Connect   id   is  invalid  in  the * 00082800
*                           parameter  list  passed  to  the  IXZIXSM * 00082900
*                           macro service.  A SEGTYPE of middle, last * 00083000
*                           or  abort  was  specified  but, the first * 00083100
*                           seqment was not found or the last segment * 00083200
*                           was already sent.                         * 00083300
*                                                                     * 00083400
*             38  4         The  DATALEN  is invalid in the parameter * 00083500
*                           list passed to the IXZIXSM macro service. * 00083600
*                           The DATALEN must be a positive number and * 00083700
*                           less than 60 Kbytes (decimal).            * 00083800
*                                                                     * 00083900
*             3C  4         RESPDATA  and RESPDLEN were not specified * 00084000
*                           parameters  when EXIT= or ECB= parameters * 00084100
*                           were specified.                           * 00084200
*                                                                     * 00084300
*                                                                     * 00084400
*                                                                     * 00084500
*01* MODULE TYPE:  ASSEM MACRO                                        * 00084600
*                                                                     * 00084700
*02*   PROCESSOR:  ASSEM                                              * 00084800
*                                                                     * 00084900
*01* COMPONENT:  SCJSC                                                * 00085000
*                                                                     * 00085100
*01* MACRO USAGE NOTES:                                               * 00085200
*                                                                     * 00085300
*                                                                     * 00085400
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00085500
*        global macro variable.  Any value other than 'NO' will       * 00085600
*        result in the macro expansion being printed.  The default is * 00085700
*        'YES'.  The following examples illustrate how the ZPRINT     * 00085800
*        variable should be set.                                      * 00085900
*                                                                     * 00086000
*                    GBLC &ZPRINT                                     * 00086100
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00086200
*                                                                     * 00086300
*                                                                     * 00086400
*    2.  The IXZXIXSM macro supports multiple versions. The macro key * 00086500
*        list  below  contains the version level in which the key was * 00086600
*        first  introduced.  Positionals  are  identified by the word * 00086700
*        'Positional'  followed by the numeric value of its position. * 00086800
*        Nested  positionals  are  preceded  by their outer key.  The * 00086900
*        lowest value represents the original version and the highest * 00087000
*        value  represents  the  most  recent version of the IXZXIXSM * 00087100
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00087200
*        least  as high as the highest version number of all the keys * 00087300
*        being used.                                                  * 00087400
*                                                                     * 00087500
*        VERSION   KEY                                                * 00087600
*                                                                     * 00087700
*              1      CONNECT                                         * 00087800
*                     DATA                                            * 00087900
*                     DATAALET                                        * 00088000
*                     DATALEN                                         * 00088100
*                     ECB                                             * 00088200
*                     EXIT                                            * 00088300
*                     GROUPTOKEN                                      * 00088400
*                     MBOXNAME                                        * 00088500
*                     MEMBER                                          * 00088600
*                     MSGATTR                                         * 00088700
*                     MSGTOKEN                                        * 00088800
*                     REQMBOX                                         * 00088900
*                     REQTOKEN                                        * 00089000
*                     REQTYPE                                         * 00089100
*                     RESPDALT                                        * 00089200
*                     RESPDATA                                        * 00089300
*                     RESPDLEN                                        * 00089400
*                     RTNCODE                                         * 00089500
*                     SEGTYPE                                         * 00089600
*                     USERRC                                          * 00089700
*              2      RELEASE_CADS                                    * 00089800
*                     RIPSIZE                                         * 00089900
*                                                                     * 00090000
*                                                                     * 00090100
*                                                                     * 00090200
*01* CHANGE ACTIVITY:                                                 * 00090300
*                                                                     * 00090400
*   Flag LineItem  FMID    Date   ID    Comment                       * 00090500
*                                                                     * 00090600
*    $N0=JESXCF   HBB5510 921201 PD0AL:                               * 00090700
*    $N0=PIG2008  HBB5510 930624 PD0AL:                               * 00090800
*    $N0=J3XCF    HBB5510 930811 PD0AL:                               * 00090900
*    $SF=OW55533  HBB7708 020719 PS0JK:                               * 00091000
****** END OF SPECIFICATIONS *****************************************/ 00091100
*/* TLINE 1 *********************************************************** 00091200
         MACRO                                                          00091300
&XLABEL  IXZXIXSM &MBOXNAME=,&MEMBER=,&DATA=,&DATAALET=,&DATALEN=,     *00091400
               &REQTYPE=,&SEGTYPE=,&CONNECT=,&GROUPTOKEN=,&RESPDATA=,  *00091500
               &RESPDLEN=,&RESPDALT=,&REQMBOX=,&REQTOKEN=,&EXIT=,&ECB=,*00091600
               &MSGTOKEN=,&USERRC=,&MSGATTR=,&RELEASE_CADS=,&RIPSIZE=, *00091700
               &RTNCODE=,&RSNCODE=,&PLISTVER=,&MF=                      00091800
.*                                                                      00091900
*                  MACDATE -10/16/01-<2>                                00092000
.*                                                                      00092100
.*******************************************************************    00092200
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00092300
.*******************************************************************    00092400
                  GBLC  &ZPRINT     YES=PRINT NO=NO PRINT               00092500
                  GBLC  &ZTEST      YES=TEST NO=NO TEST                 00092600
                  GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX         00092700
.*                                                                      00092800
                  GBLC  &ZIXZXIXSM  YES=MACRO USED AT LEAST ONCE        00092900
.*******************************************************************    00093000
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00093100
.*******************************************************************    00093200
                  LCLC  &ZMS        ERROR MESSAGE WORK AREA             00093300
                  LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS        00093400
                  LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED          00093500
                  LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR         00093600
                  LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE         00093700
                  LCLA  &ZAWRK      USED AS A WORK AREA                 00093800
                  LCLA  &ZASIZ      USED FOR SIZE OF VALUE              00093900
                  LCLA  &ZN         NUMERIC WORK VARIABLE               00094000
                  LCLC  &ZC         CHARACTER WORK VARIABLE             00094100
                  LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE         00094200
                  LCLA  &ZTLA       VALUE TOO LONG VARIABLE             00094300
                  LCLC  &ZMAC_G     "G" or null                         00094400
&ZMAC_G           SETC  ''                                              00094500
                  LCLC  &ZMAC_LR                                        00094600
&ZMAC_LR          SETC  'LR'                                            00094700
                  LCLC  &ZMAC_L                                         00094800
&ZMAC_L           SETC  'L'                                             00094900
                  LCLC  &ZMAC_ST                                        00095000
&ZMAC_ST          SETC  'ST'                                            00095100
                  LCLA  &ZMACRET    MACRO RETURN CODE                   00095200
&ZMACRET          SETA  0           ASSUME NO ERRORS                    00095300
.*                                                                      00095400
                  LCLC  &ZCSYSLIST(255)         NONXKEY, POS ARRAY      00095500
                  LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()          00095600
                  LCLA  &ZPLLEN     PARAMETER LIST LENGTH               00095700
                  LCLC  &ZENDBASEPL             End of base PL          00095800
                  LCLA  &ZPLWORKA   PARAMETER LIST LENGTH               00095900
.*******************************************************************    00096000
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00096100
.*******************************************************************    00096200
                  LCLA  &ZI         INDEX FOR ARRAY                     00096300
                  LCLA  &ZJ         INDEX FOR PARMS                     00096400
                  LCLA  &ZK         INDEX FOR PARSE                     00096500
                  LCLA  &ZLO        LOW RANGE VALUE                     00096600
                  LCLA  &ZHI        HIGH RANGE VALUE                    00096700
                  LCLC  &ZW         WORK AREA FOR PARM                  00096800
.********************************************************************   00096900
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00097000
.********************************************************************   00097100
                  GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL             00097200
                  GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE      00097300
                  GBLA  &SYSALVL    SYSSTATE ARCHLVL                    00097400
                  GBLC  &SYSAM64    SYSSTATE AMODE64                    00097500
.*                                                                      00097600
                  AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED      00097700
                  AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED       00097800
                  SPLEVEL  TEST                                         00097900
.ZSYS2            ANOP  ,                                               00098000
                  AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1           00098100
                  AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1           00098200
                  SYSSTATE TEST                                         00098300
                  AGO   .ZSYS4                                          00098400
.ZSYS3            ANOP  ,                                               00098500
&SYSASCE          SETC  'P'         ASSUME SYSSTATE PRIMARY             00098600
.ZSYS4            ANOP  ,                                               00098700
.*******************************************************************    00098800
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00098900
.*******************************************************************    00099000
                  LCLC  &XMBOXNAME  ++ NAME                             00099100
                  LCLC  &XMEMBER    ++ NAME                             00099200
                  LCLC  &XDATA      ++ NAME                             00099300
                  LCLC  &XDATAALET  ++ NAME                             00099400
                  LCLC  &XDATALEN   ++ NAME                             00099500
                  LCLC  &XREQTYPE   ++ VALUE                            00099600
                  LCLC  &XSEGTYPE   ++ VALUE                            00099700
                  LCLC  &XCONNECT   ++ NAME                             00099800
                  LCLC  &XGROUPTOKEN            ++ NAME                 00099900
                  LCLC  &XRESPDATA  ++ NAME                             00100000
                  LCLC  &XRESPDLEN  ++ NAME                             00100100
                  LCLC  &XRESPDALT  ++ NAME                             00100200
                  LCLC  &XREQMBOX   ++ NAME                             00100300
                  LCLC  &XREQTOKEN  ++ NAME                             00100400
                  LCLC  &XEXIT      ++ NAME                             00100500
                  LCLC  &XECB       ++ NAME                             00100600
                  LCLC  &XMSGTOKEN  ++ NAME                             00100700
                  LCLC  &XUSERRC    ++ NAME                             00100800
                  LCLC  &XMSGATTR   ++ VALUE                            00100900
                  LCLC  &XRELEASE_CADS          ++ VALUE                00101000
                  LCLC  &XRIPSIZE   ++ NAME                             00101100
                  LCLC  &XRTNCODE   ++ NAME                             00101200
                  LCLC  &XRSNCODE   ++ NAME                             00101300
                  LCLA  &XPLISTVER  ++ VALUE                            00101400
                  LCLC  &XMF        ++ VALUE                            00101500
                  LCLC  &XMFCTRL    ++ NAME                             00101600
                  LCLC  &XMFATTR    ++ VALUE                            00101700
                  LCLC  &XMFSCK     ++ VALUE                            00101800
.*******************************************************************    00101900
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00102000
.*******************************************************************    00102100
                  LCLC  &ZXMBOXNAME             ++ INPUT NAME           00102200
                  LCLC  &ZXMEMBER   ++ INPUT NAME                       00102300
                  LCLC  &ZXDATA     ++ INPUT NAME                       00102400
                  LCLC  &ZXDATAALET             ++ INPUT NAME           00102500
                  LCLC  &ZXDATALEN  ++ INPUT NAME                       00102600
                  LCLC  &ZXREQTYPE  ++ INPUT VALUE                      00102700
                  LCLC  &ZXSEGTYPE  ++ INPUT VALUE                      00102800
                  LCLC  &ZXCONNECT  ++ INOUT NAME                       00102900
                  LCLC  &ZXGROUPTOKEN           ++ INPUT NAME           00103000
                  LCLC  &ZXRESPDATA             ++ INOUT NAME           00103100
                  LCLC  &ZXRESPDLEN             ++ INOUT NAME           00103200
                  LCLC  &ZXRESPDALT             ++ INPUT NAME           00103300
                  LCLC  &ZXREQMBOX  ++ INPUT NAME                       00103400
                  LCLC  &ZXREQTOKEN             ++ OUTPUT NAME          00103500
                  LCLC  &ZXEXIT     ++ INPUT NAME                       00103600
                  LCLC  &ZXECB      ++ INPUT NAME                       00103700
                  LCLC  &ZXMSGTOKEN             ++ OUTPUT NAME          00103800
                  LCLC  &ZXUSERRC   ++ OUTPUT NAME                      00103900
                  LCLC  &ZXMSGATTR  ++ INPUT VALUE                      00104000
                  LCLC  &ZXRELEASE_CADS         ++ INPUT VALUE          00104100
                  LCLC  &ZXRIPSIZE  ++ INPUT NAME                       00104200
                  LCLC  &ZXRTNCODE  ++ OUTPUT NAME                      00104300
                  LCLC  &ZXRSNCODE  ++ OUTPUT NAME                      00104400
                  LCLC  &ZXPLISTVER             ++ INPUT VALUE          00104500
                  LCLC  &ZXMF       ++ INPUT VALUE                      00104600
                  LCLC  &ZXMFCTRL   ++ INPUT NAME                       00104700
                  LCLC  &ZXMFATTR   ++ INPUT VALUE                      00104800
                  LCLC  &ZXMFSCK    ++ INPUT VALUE                      00104900
.********************************************************************   00105000
.***AC.PLV01  PROCESS PLISTVER                                      *   00105100
.********************************************************************   00105200
&XPLISTVER      SETA  1                                                 00105300
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00105400
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00105500
&XPLISTVER      SETA  2                                                 00105600
.ZPLV0          ANOP  ,                                                 00105700
.*                                                                      00105800
                AIF   ('&RELEASE_CADS' EQ '').ZPLV1E                    00105900
                AIF   (&XPLISTVER GE 2).ZPLV1E                          00106000
&XPLISTVER      SETA  2                                                 00106100
.ZPLV1E         ANOP  ,                                                 00106200
.*                                                                      00106300
                AIF   ('&RIPSIZE' EQ '').ZPLV2E                         00106400
                AIF   (&XPLISTVER GE 2).ZPLV2E                          00106500
&XPLISTVER      SETA  2                                                 00106600
.ZPLV2E         ANOP  ,                                                 00106700
.*                                                                      00106800
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00106900
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00107000
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00107100
.*-------------------------------------------------------------------   00107200
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00107300
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00107400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00107500
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00107600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00107700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00107800
                AGO   .ZPVCK2                                           00107900
.ZPVCK3         ANOP  ,                                                 00108000
.*-------------------------------------------------------------------   00108100
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00108200
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00108300
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00108400
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00108500
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00108600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00108700
                AGO   .ZPVCKE                                           00108800
.ZPVCK2         ANOP  ,                                                 00108900
.*-------------------------------------------------------------------   00109000
&ZCVAL          SETC  '&PLISTVER(1)'                                    00109100
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00109200
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00109300
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00109400
                AIF   (&ZN LT 1).ZPVCK6    TOO LOW                      00109500
                AIF   (&ZN LE 2).ZPVCK4A   NOT HIGH                     00109600
.ZPVCK6         ANOP  ,                                                 00109700
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00109800
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00109900
&ZMS            SETC  '&ZMS THE RANGE IS "1-2"'                         00110000
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00110100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00110200
&XPLISTVER      SETA  2                                                 00110300
                AGO   .ZPVCKE                                           00110400
.*-------------------------------------------------------------------   00110500
.ZPVCK4A        ANOP  ,                                                 00110600
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00110700
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00110800
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00110900
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00111000
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00111100
                MNOTE 8,' &ZMS IS REQUIRED.'                            00111200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00111300
                AGO   .ZPVCK5                                           00111400
.ZPVCK4         ANOP  ,                                                 00111500
&XPLISTVER      SETA  &PLISTVER(1)                                      00111600
.ZPVCK5         ANOP  ,                                                 00111700
.ZPVCKE         ANOP  ,                                                 00111800
.********************************************************************   00111900
.***AG.MF01 PROCESS MF MACRO FORMS                                      00112000
.********************************************************************   00112100
                  ACTR  10000                                           00112200
.*------------------------------------------------------------------    00112300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00112400
&XMF              SETC  ''          INITIALIZE XVARIABLE                00112500
.*-------------------------------------------------------------------   00112600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00112700
.ZG89             ANOP  ,                                               00112800
&ZTLC             SETC 'S'                                              00112900
                  AIF   ('&MF(1)' NE '&ZTLC').ZG90                      00113000
&XMF              SETC  'S'         SET KEYWORD                         00113100
                  AIF   (N'&MF LE 1).ZG89A      CK NUM                  00113200
&ZMS              SETC  '"MF='      *KPOSA* MNOTE                       00113300
&ZMS              SETC  '&ZMS.&MF"'                                     00113400
&ZMS              SETC  '&ZMS "MF"'                                     00113500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00113600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00113700
.ZG89A            ANOP  ,                                               00113800
.*-------------------------------------------------------------------   00113900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00114000
.ZG90             ANOP  ,                                               00114100
&ZTLC             SETC 'L'                                              00114200
                  AIF   ('&MF(1)' NE '&ZTLC').ZG97                      00114300
&XMF              SETC  'L'         SET KEYWORD                         00114400
                  AIF   (N'&MF LE 3).ZG90A      CK NUM                  00114500
&ZMS              SETC  '"MF='      *KPOSA* MNOTE                       00114600
&ZMS              SETC  '&ZMS.&MF"'                                     00114700
&ZMS              SETC  '&ZMS "MF"'                                     00114800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'            00114900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00115000
.ZG90A            ANOP  ,                                               00115100
.*-------------------------------------------------------------------   00115200
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00115300
                  AIF   (N'&SYSLIST NE 0).ZG90B  POSITIONALS?           00115400
                  AIF   ('&MBOXNAME' NE '').ZG90B  KEYS?                00115500
                  AIF   ('&MEMBER' NE '').ZG90B  KEYS?                  00115600
                  AIF   ('&DATA' NE '').ZG90B   KEYS?                   00115700
                  AIF   ('&DATAALET' NE '').ZG90B  KEYS?                00115800
                  AIF   ('&DATALEN' NE '').ZG90B  KEYS?                 00115900
                  AIF   ('&REQTYPE' NE '').ZG90B  KEYS?                 00116000
                  AIF   ('&SEGTYPE' NE '').ZG90B  KEYS?                 00116100
                  AIF   ('&CONNECT' NE '').ZG90B  KEYS?                 00116200
                  AIF   ('&GROUPTOKEN' NE '').ZG90B  KEYS?              00116300
                  AIF   ('&RESPDATA' NE '').ZG90B  KEYS?                00116400
                  AIF   ('&RESPDLEN' NE '').ZG90B  KEYS?                00116500
                  AIF   ('&RESPDALT' NE '').ZG90B  KEYS?                00116600
                  AIF   ('&REQMBOX' NE '').ZG90B  KEYS?                 00116700
                  AIF   ('&REQTOKEN' NE '').ZG90B  KEYS?                00116800
                  AIF   ('&EXIT' NE '').ZG90B   KEYS?                   00116900
                  AIF   ('&ECB' NE '').ZG90B    KEYS?                   00117000
                  AIF   ('&MSGTOKEN' NE '').ZG90B  KEYS?                00117100
                  AIF   ('&USERRC' NE '').ZG90B  KEYS?                  00117200
                  AIF   ('&MSGATTR' NE '').ZG90B  KEYS?                 00117300
                  AIF   ('&RELEASE_CADS' NE '').ZG90B  KEYS?            00117400
                  AIF   ('&RIPSIZE' NE '').ZG90B  KEYS?                 00117500
                  AIF   ('&RTNCODE' NE '').ZG90B  KEYS?                 00117600
                  AIF   ('&RSNCODE' NE '').ZG90B  KEYS?                 00117700
                  AGO    .ZG90C     INVOCATION OKAY                     00117800
.ZG90B            ANOP  ,                                               00117900
&ZMS              SETC  'THE "L" FORM OF "MF"'  *MFLA* MNOTE            00118000
&ZMS              SETC  '&ZMS CAN ONLY HAVE'                            00118100
&ZMS              SETC  '&ZMS THE "PLISTVER" KEY'                       00118200
                  MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'          00118300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00118400
.ZG90C            ANOP  ,                                               00118500
.*-------------------------------------------------------------------   00118600
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00118700
&ZXMFCTRL         SETC  'INPUT'     SET IN/OUTPUT                       00118800
&XMFCTRL          SETC  '&MF(2,1)'  SET XVARIABLE                       00118900
                  AIF   (N'&MF(2) GT 1).ZG92B   MULTI PARMS             00119000
&XMFCTRL          SETC  '&MF(2)'    SET XVARIABLE                       00119100
.ZG92B            AIF   (K'&MF(2) GT 0).ZG92C                           00119200
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00119300
&ZMS              SETC  ' '         *KRQDA*                             00119400
&ZMS              SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'             00119500
                  MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                    00119600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00119700
.ZG92C            ANOP  ,                                               00119800
.*-------------------------------------------------------------------   00119900
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00120000
                  AIF   (K'&ZXMFCTRL LE 0).ZG92P  NOT I/O               00120100
                  AIF   ('&XMFCTRL'(1,1) NE '(').ZG92P                  00120200
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00120300
&ZMS              SETC  '"MF='      *KGPRA* MNOTE                       00120400
&ZMS              SETC  '&ZMS.&MF"'                                     00120500
&ZMS              SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'       00120600
                  MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'               00120700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00120800
.ZG92P            ANOP  ,                                               00120900
.*-------------------------------------------------------------------   00121000
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00121100
&ZXMFATTR         SETC  'INPUT'     SET IN/OUTPUT                       00121200
&XMFATTR          SETC  '0D'                                            00121300
                  AIF   (K'&MF(3) LE 0).ZG95B   PARM                    00121400
&XMFATTR          SETC  '&MF(3,1)'  SET XVARIABLE                       00121500
                  AIF   (N'&MF(3) GT 1).ZG95B   MULTI PARMS             00121600
&XMFATTR          SETC  '&MF(3)'    SET XVARIABLE                       00121700
.ZG95B            ANOP  ,                                               00121800
.*-------------------------------------------------------------------   00121900
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00122000
                  AIF   (K'&ZXMFATTR LE 0).ZG95P  NOT I/O               00122100
                  AIF   ('&XMFATTR'(1,1) NE '(').ZG95P                  00122200
&ZXMFATTR         SETC  ''          RESET IN/OUTPUT                     00122300
&ZMS              SETC  '"MF='      *KGPRA* MNOTE                       00122400
&ZMS              SETC  '&ZMS.&MF"'                                     00122500
&ZMS              SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'       00122600
                  MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'               00122700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00122800
.ZG95P            ANOP  ,                                               00122900
.*-------------------------------------------------------------------   00123000
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00123100
                  AIF   (K'&ZXMFATTR LE 0).ZG95S  NOT I/O               00123200
                  AIF   (K'&XMFATTR LE 60).ZG95S  LNG OK                00123300
&ZXMFATTR         SETC  ''          RESET IN/OUTPUT                     00123400
&ZMS              SETC  '"MF='      *KLNGA* MNOTE                       00123500
&ZMS              SETC  '&ZMS.&MF"'                                     00123600
&ZMS              SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'           00123700
                  MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'              00123800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00123900
.ZG95S            ANOP  ,                                               00124000
.*-------------------------------------------------------------------   00124100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00124200
.ZG97             ANOP  ,                                               00124300
&ZTLC             SETC 'E'                                              00124400
                  AIF   ('&MF(1)' NE '&ZTLC').ZG105                     00124500
&XMF              SETC  'E'         SET KEYWORD                         00124600
                  AIF   (N'&MF LE 3).ZG97A      CK NUM                  00124700
&ZMS              SETC  '"MF='      *KPOSA* MNOTE                       00124800
&ZMS              SETC  '&ZMS.&MF"'                                     00124900
&ZMS              SETC  '&ZMS "MF"'                                     00125000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'            00125100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00125200
.ZG97A            ANOP  ,                                               00125300
.*-------------------------------------------------------------------   00125400
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00125500
&ZXMFCTRL         SETC  'INPUT'     SET IN/OUTPUT                       00125600
&XMFCTRL          SETC  '&MF(2,1)'  SET XVARIABLE                       00125700
                  AIF   (N'&MF(2) GT 1).ZG99B   MULTI PARMS             00125800
&XMFCTRL          SETC  '&MF(2)'    SET XVARIABLE                       00125900
.ZG99B            AIF   (K'&MF(2) GT 0).ZG99C                           00126000
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00126100
&ZMS              SETC  ' '         *KRQDA*                             00126200
&ZMS              SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'             00126300
                  MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                    00126400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00126500
.ZG99C            ANOP  ,                                               00126600
.*-------------------------------------------------------------------   00126700
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00126800
                  AIF   (K'&ZXMFCTRL LE 0).ZG99R  NOT I/O               00126900
                  AIF   ('&XMFCTRL'(1,1) NE '(').ZG99R                  00127000
&ZCGPR            SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                      00127100
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG99P                    00127200
                  AIF   (K'&ZCGPR GT 2).ZG99Q                           00127300
                  AIF   ('&ZCGPR' EQ '0').ZG99Q                         00127400
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00127500
                  AIF   (T'&ZCGPR NE 'N').ZG99Q  INVALID REG NAME       00127600
.ZG99P            ANOP  ,                                               00127700
                  AIF   (T'&ZCGPR NE 'N').ZG99R  NON NUMERIC            00127800
                  AIF   ('&ZCGPR' LT '1').ZG99Q                         00127900
                  AIF   ('&ZCGPR' LE '12').ZG99R                        00128000
.ZG99Q            ANOP  ,                                               00128100
&ZMS              SETC  '"MF='      *KGPRA* MNOTE                       00128200
&ZMS              SETC  '&ZMS.&MF"'                                     00128300
&ZMS              SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'       00128400
                  MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                00128500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00128600
.ZG99R            ANOP  ,                                               00128700
.*-------------------------------------------------------------------   00128800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00128900
&XMFSCK           SETC  ''          INITIALIZE XVARIABLE                00129000
.ZG103A   AIF   ('&MF(3)' NE 'COMPLETE').ZG104A                         00129100
&XMFSCK           SETC  'COMPLETE'  SET KEYWORD                         00129200
.*-------------------------------------------------------------------   00129300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00129400
.ZG104A           AIF   (K'&XMFSCK GT 0).ZG104C  KEYWORD                00129500
                  AIF   (K'&MF(3) LE 0).ZG104B                          00129600
&ZMS              SETC  '"MF='      *KUKWA* MNOTE                       00129700
&ZMS              SETC  '&ZMS.&MF"'                                     00129800
&ZMS              SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '       00129900
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00130000
&ZMS              SETC  '&ZMS "COMPLETE".'                              00130100
                  MNOTE 8,' &ZMS '                                      00130200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00130300
.ZG104B           ANOP  ,                                               00130400
&XMFSCK           SETC  'COMPLETE'  SET DEFAULT KEYWORD                 00130500
.ZG104C           ANOP  ,                                               00130600
&ZXMFSCK          SETC  'INPUT'     SET IN/OUTPUT                       00130700
.*------------------------------------------------------------------    00130800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00130900
.ZG105            ANOP  ,                                               00131000
&ZXMF             SETC  'INPUT'     SET IN/OUTPUT                       00131100
                  AIF   (K'&XMF GT 0).ZG105E    VALID ARG               00131200
                  AIF   (T'&MF EQ 'O').ZG105D   OMITTED                 00131300
&ZASYSLNDX        SETA  0                                               00131400
.ZG105A           ANOP  ,           POSITIONAL MACRO KEY                00131500
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00131600
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG105C               00131700
&ZTLC             SETC 'MF'                                             00131800
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG105A      00131900
.ZG105B           ANOP  ,                                               00132000
&ZXMF             SETC  ''          RESET IN/OUTPUT                     00132100
&ZMS              SETC  'THE "MF" KEY'          *KOPTA* MNOTE           00132200
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00132300
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00132400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00132500
                  AGO   .ZG105E                                         00132600
.ZG105C           ANOP  ,                                               00132700
&ZXMF             SETC  ''          RESET IN/OUTPUT                     00132800
&ZMS              SETC  '"MF='      *KUKWA* MNOTE                       00132900
&ZMS              SETC  '&ZMS.&MF"'                                     00133000
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00133100
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00133200
&ZMS              SETC  '&ZMS "S",'                                     00133300
&ZMS              SETC  '&ZMS "L",'                                     00133400
&ZMS              SETC  '&ZMS OR "E".'                                  00133500
                  MNOTE 8,' &ZMS '                                      00133600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00133700
                  AGO   .ZG105E                                         00133800
.ZG105D           ANOP  ,                                               00133900
&XMF              SETC  'S'         SET DEFAULT KEYWORD                 00134000
&XMFSCK           SETC  'COMPLETE'  COMPLETE CHECKING                   00134100
.ZG105E           ANOP  ,                                               00134200
.********************************************************************   00134300
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00134400
.********************************************************************   00134500
                  ACTR  10000                                           00134600
.*-------------------------------------------------------------------   00134700
.***AG.MF03 MF=(SLE)                                                    00134800
                  AIF   ('&XMF' EQ 'L').ZGMFX                           00134900
.*----------------------------------------------------------------***   00135000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00135100
                  AIF   (N'&MBOXNAME LE 1).ZG2A  CK NUM                 00135200
&ZMS              SETC  '"MBOXNAME='            *KPOSA* MNOTE           00135300
&ZMS              SETC  '&ZMS.&MBOXNAME"'                               00135400
&ZMS              SETC  '&ZMS "MBOXNAME"'                               00135500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00135600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00135700
.ZG2A             ANOP  ,                                               00135800
.*-------------------------------------------------------------------   00135900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00136000
&ZXMBOXNAME       SETC  'INPUT'     SET IN/OUTPUT                       00136100
&XMBOXNAME        SETC  '&MBOXNAME(1)'          SET XVARIABLE           00136200
                  AIF   (N'&MBOXNAME GT 1).ZG2B  MULTI PARMS            00136300
&XMBOXNAME        SETC  '&MBOXNAME'             SET XVARIABLE           00136400
.ZG2B             AIF   (K'&MBOXNAME(1) GT 0).ZG2C                      00136500
&ZXMBOXNAME       SETC  ''          RESET IN/OUTPUT                     00136600
&ZMS              SETC  ' '         *KRQDA*                             00136700
&ZMS              SETC  '&ZMS "MBOXNAME" KEY AND ITS'                   00136800
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00136900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00137000
.ZG2C             ANOP  ,                                               00137100
.*-------------------------------------------------------------------   00137200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00137300
                  AIF   (K'&ZXMBOXNAME LE 0).ZG2R  NOT I/O              00137400
                  AIF   ('&XMBOXNAME'(1,1) NE '(').ZG2R                 00137500
&ZCGPR            SETC  '&XMBOXNAME'(2,K'&XMBOXNAME-2)                  00137600
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                     00137700
                  AIF   (K'&ZCGPR GT 2).ZG2Q                            00137800
                  AIF   ('&ZCGPR' EQ '0').ZG2Q                          00137900
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00138000
                  AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME        00138100
.ZG2P             ANOP  ,                                               00138200
                  AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC             00138300
                  AIF   ('&ZCGPR' LT '2').ZG2Q                          00138400
                  AIF   ('&ZCGPR' LE '12').ZG2R                         00138500
.ZG2Q             ANOP  ,                                               00138600
&ZMS              SETC  '"MBOXNAME='            *KGPRA* MNOTE           00138700
&ZMS              SETC  '&ZMS.&MBOXNAME"'                               00138800
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00138900
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00139000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00139100
.ZG2R             ANOP  ,                                               00139200
.*----------------------------------------------------------------***   00139300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00139400
                  AIF   (N'&MEMBER LE 1).ZG5A   CK NUM                  00139500
&ZMS              SETC  '"MEMBER='  *KPOSA* MNOTE                       00139600
&ZMS              SETC  '&ZMS.&MEMBER"'                                 00139700
&ZMS              SETC  '&ZMS "MEMBER"'                                 00139800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00139900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00140000
.ZG5A             ANOP  ,                                               00140100
.*-------------------------------------------------------------------   00140200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00140300
&ZXMEMBER         SETC  'INPUT'     SET IN/OUTPUT                       00140400
&XMEMBER          SETC  '&MEMBER(1)'            SET XVARIABLE           00140500
                  AIF   (N'&MEMBER GT 1).ZG5B   MULTI PARMS             00140600
&XMEMBER          SETC  '&MEMBER'   SET XVARIABLE                       00140700
.ZG5B             AIF   (K'&MEMBER(1) GT 0).ZG5C                        00140800
&ZXMEMBER         SETC  ''          RESET IN/OUTPUT                     00140900
&ZMS              SETC  ' '         *KRQDA*                             00141000
&ZMS              SETC  '&ZMS "MEMBER" KEY AND ITS'                     00141100
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00141200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00141300
.ZG5C             ANOP  ,                                               00141400
.*-------------------------------------------------------------------   00141500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00141600
                  AIF   (K'&ZXMEMBER LE 0).ZG5R  NOT I/O                00141700
                  AIF   ('&XMEMBER'(1,1) NE '(').ZG5R                   00141800
&ZCGPR            SETC  '&XMEMBER'(2,K'&XMEMBER-2)                      00141900
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                     00142000
                  AIF   (K'&ZCGPR GT 2).ZG5Q                            00142100
                  AIF   ('&ZCGPR' EQ '0').ZG5Q                          00142200
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00142300
                  AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME        00142400
.ZG5P             ANOP  ,                                               00142500
                  AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC             00142600
                  AIF   ('&ZCGPR' LT '2').ZG5Q                          00142700
                  AIF   ('&ZCGPR' LE '12').ZG5R                         00142800
.ZG5Q             ANOP  ,                                               00142900
&ZMS              SETC  '"MEMBER='  *KGPRA* MNOTE                       00143000
&ZMS              SETC  '&ZMS.&MEMBER"'                                 00143100
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00143200
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00143300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00143400
.ZG5R             ANOP  ,                                               00143500
.*----------------------------------------------------------------***   00143600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00143700
                  AIF   (N'&DATA LE 1).ZG8A     CK NUM                  00143800
&ZMS              SETC  '"DATA='    *KPOSA* MNOTE                       00143900
&ZMS              SETC  '&ZMS.&DATA"'                                   00144000
&ZMS              SETC  '&ZMS "DATA"'                                   00144100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00144200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00144300
.ZG8A             ANOP  ,                                               00144400
.*-------------------------------------------------------------------   00144500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00144600
&ZXDATA           SETC  'INPUT'     SET IN/OUTPUT                       00144700
&XDATA            SETC  '&DATA(1)'  SET XVARIABLE                       00144800
                  AIF   (N'&DATA GT 1).ZG8B     MULTI PARMS             00144900
&XDATA            SETC  '&DATA'     SET XVARIABLE                       00145000
.ZG8B             AIF   (K'&DATA(1) GT 0).ZG8C                          00145100
&ZXDATA           SETC  ''          RESET IN/OUTPUT                     00145200
&ZMS              SETC  ' '         *KRQDA*                             00145300
&ZMS              SETC  '&ZMS "DATA" KEY AND ITS'                       00145400
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00145500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00145600
.ZG8C             ANOP  ,                                               00145700
.*-------------------------------------------------------------------   00145800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00145900
                  AIF   (K'&ZXDATA LE 0).ZG8R   NOT I/O                 00146000
                  AIF   ('&XDATA'(1,1) NE '(').ZG8R                     00146100
&ZCGPR            SETC  '&XDATA'(2,K'&XDATA-2)                          00146200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                     00146300
                  AIF   (K'&ZCGPR GT 2).ZG8Q                            00146400
                  AIF   ('&ZCGPR' EQ '0').ZG8Q                          00146500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00146600
                  AIF   (T'&ZCGPR NE 'N').ZG8Q  INVALID REG NAME        00146700
.ZG8P             ANOP  ,                                               00146800
                  AIF   (T'&ZCGPR NE 'N').ZG8R  NON NUMERIC             00146900
                  AIF   ('&ZCGPR' LT '2').ZG8Q                          00147000
                  AIF   ('&ZCGPR' LE '12').ZG8R                         00147100
.ZG8Q             ANOP  ,                                               00147200
&ZMS              SETC  '"DATA='    *KGPRA* MNOTE                       00147300
&ZMS              SETC  '&ZMS.&DATA"'                                   00147400
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00147500
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00147600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00147700
.ZG8R             ANOP  ,                                               00147800
.*----------------------------------------------------------------***   00147900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00148000
                  AIF   (N'&DATAALET LE 1).ZG10A  CK NUM                00148100
&ZMS              SETC  '"DATAALET='            *KPOSA* MNOTE           00148200
&ZMS              SETC  '&ZMS.&DATAALET"'                               00148300
&ZMS              SETC  '&ZMS "DATAALET"'                               00148400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00148500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00148600
.ZG10A            ANOP  ,                                               00148700
.*-------------------------------------------------------------------   00148800
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00148900
&XDATAALET        SETC  '0'         SET DEFAULT                         00149000
                  AIF   (K'&DATAALET(1) LE 0).ZG10C  PARM               00149100
&XDATAALET        SETC  '&DATAALET(1)'          SET XVARIABLE           00149200
                  AIF   (N'&DATAALET GT 1).ZG10B  MULTI PARMS           00149300
&XDATAALET        SETC  '&DATAALET'             SET XVARIABLE           00149400
.ZG10B            AIF   (K'&DATA(1) GT 0).ZG10C  KEY                    00149500
&ZMS              SETC  '"DATAALET'             *KDEPA* MNOTE           00149600
&ZMS              SETC  '&ZMS.=&DATAALET"'                              00149700
&ZMS              SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                 00149800
&ZMS              SETC  '&ZMS '                                         00149900
&ZMS              SETC  '&ZMS "DATA"'                                   00150000
                  MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                    00150100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00150200
.ZG10C            ANOP  ,                                               00150300
&ZXDATAALET       SETC  'INPUT'     SET IN/OUTPUT                       00150400
.*-------------------------------------------------------------------   00150500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00150600
                  AIF   (K'&ZXDATAALET LE 0).ZG10R  NOT I/O             00150700
                  AIF   ('&XDATAALET'(1,1) NE '(').ZG10R                00150800
&ZCGPR            SETC  '&XDATAALET'(2,K'&XDATAALET-2)                  00150900
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG10P                    00151000
                  AIF   (K'&ZCGPR GT 2).ZG10Q                           00151100
                  AIF   ('&ZCGPR' EQ '0').ZG10Q                         00151200
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00151300
                  AIF   (T'&ZCGPR NE 'N').ZG10Q  INVALID REG NAME       00151400
.ZG10P            ANOP  ,                                               00151500
                  AIF   (T'&ZCGPR NE 'N').ZG10R  NON NUMERIC            00151600
                  AIF   ('&ZCGPR' LT '2').ZG10Q                         00151700
                  AIF   ('&ZCGPR' LE '12').ZG10R                        00151800
.ZG10Q            ANOP  ,                                               00151900
&ZMS              SETC  '"DATAALET='            *KGPRA* MNOTE           00152000
&ZMS              SETC  '&ZMS.&DATAALET"'                               00152100
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00152200
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00152300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00152400
.ZG10R            ANOP  ,                                               00152500
.*----------------------------------------------------------------***   00152600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00152700
                  AIF   (N'&DATALEN LE 1).ZG13A  CK NUM                 00152800
&ZMS              SETC  '"DATALEN='             *KPOSA* MNOTE           00152900
&ZMS              SETC  '&ZMS.&DATALEN"'                                00153000
&ZMS              SETC  '&ZMS "DATALEN"'                                00153100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00153200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00153300
.ZG13A            ANOP  ,                                               00153400
.*-------------------------------------------------------------------   00153500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00153600
&ZXDATALEN        SETC  'INPUT'     SET IN/OUTPUT                       00153700
&XDATALEN         SETC  '&DATALEN(1)'           SET XVARIABLE           00153800
                  AIF   (N'&DATALEN GT 1).ZG13B  MULTI PARMS            00153900
&XDATALEN         SETC  '&DATALEN'  SET XVARIABLE                       00154000
.ZG13B            AIF   (K'&DATALEN(1) GT 0).ZG13C                      00154100
&ZXDATALEN        SETC  ''          RESET IN/OUTPUT                     00154200
&ZMS              SETC  ' '         *KRQDA*                             00154300
&ZMS              SETC  '&ZMS "DATALEN" KEY AND ITS'                    00154400
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00154500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00154600
.ZG13C            ANOP  ,                                               00154700
.*-------------------------------------------------------------------   00154800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00154900
                  AIF   (K'&ZXDATALEN LE 0).ZG13R  NOT I/O              00155000
                  AIF   ('&XDATALEN'(1,1) NE '(').ZG13R                 00155100
&ZCGPR            SETC  '&XDATALEN'(2,K'&XDATALEN-2)                    00155200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG13P                    00155300
                  AIF   (K'&ZCGPR GT 2).ZG13Q                           00155400
                  AIF   ('&ZCGPR' EQ '0').ZG13Q                         00155500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00155600
                  AIF   (T'&ZCGPR NE 'N').ZG13Q  INVALID REG NAME       00155700
.ZG13P            ANOP  ,                                               00155800
                  AIF   (T'&ZCGPR NE 'N').ZG13R  NON NUMERIC            00155900
                  AIF   ('&ZCGPR' LT '2').ZG13Q                         00156000
                  AIF   ('&ZCGPR' LE '12').ZG13R                        00156100
.ZG13Q            ANOP  ,                                               00156200
&ZMS              SETC  '"DATALEN='             *KGPRA* MNOTE           00156300
&ZMS              SETC  '&ZMS.&DATALEN"'                                00156400
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00156500
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00156600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00156700
.ZG13R            ANOP  ,                                               00156800
.*----------------------------------------------------------------***   00156900
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00157000
                  AIF   (N'&REQTYPE LE 1).ZG17A  CK NUM                 00157100
&ZMS              SETC  '"REQTYPE='             *KPOSA* MNOTE           00157200
&ZMS              SETC  '&ZMS.&REQTYPE"'                                00157300
&ZMS              SETC  '&ZMS "REQTYPE"'                                00157400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00157500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00157600
.ZG17A            ANOP  ,                                               00157700
.*-------------------------------------------------------------------   00157800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00157900
&XREQTYPE         SETC  ''          INITIALIZE XVARIABLE                00158000
.ZG18A   AIF   ('&REQTYPE(1)' NE 'COMM').ZG19A                          00158100
&XREQTYPE         SETC  'COMM'      SET KEYWORD                         00158200
.*-------------------------------------------------------------------   00158300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00158400
.ZG19A   AIF   ('&REQTYPE(1)' NE 'ASYNCACK').ZG20A                      00158500
&XREQTYPE         SETC  'ASYNCACK'  SET KEYWORD                         00158600
.*-------------------------------------------------------------------   00158700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00158800
.ZG20A   AIF   ('&REQTYPE(1)' NE 'ASYNC').ZG21A                         00158900
&XREQTYPE         SETC  'ASYNC'     SET KEYWORD                         00159000
.*-------------------------------------------------------------------   00159100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00159200
.ZG21A   AIF   ('&REQTYPE(1)' NE 'SYNC').ZG22A                          00159300
&XREQTYPE         SETC  'SYNC'      SET KEYWORD                         00159400
.*-------------------------------------------------------------------   00159500
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00159600
.ZG22A            AIF   (K'&XREQTYPE GT 0).ZG22C  KEYWORD               00159700
                  AIF   (K'&REQTYPE(1) LE 0).ZG22B                      00159800
&ZMS              SETC  '"REQTYPE='             *KUKWA* MNOTE           00159900
&ZMS              SETC  '&ZMS.&REQTYPE"'                                00160000
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00160100
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00160200
&ZMS              SETC  '&ZMS "COMM",'                                  00160300
&ZMS              SETC  '&ZMS "ASYNCACK",'                              00160400
&ZMS              SETC  '&ZMS "ASYNC",'                                 00160500
&ZMS              SETC  '&ZMS OR "SYNC".'                               00160600
                  MNOTE 8,' &ZMS '                                      00160700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00160800
.ZG22B            ANOP  ,                                               00160900
&XREQTYPE         SETC  'COMM'      SET DEFAULT KEYWORD                 00161000
.ZG22C            ANOP  ,                                               00161100
&ZXREQTYPE        SETC  'INPUT'     SET IN/OUTPUT                       00161200
.*----------------------------------------------------------------***   00161300
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00161400
                  AIF   (N'&SEGTYPE LE 1).ZG24A  CK NUM                 00161500
&ZMS              SETC  '"SEGTYPE='             *KPOSA* MNOTE           00161600
&ZMS              SETC  '&ZMS.&SEGTYPE"'                                00161700
&ZMS              SETC  '&ZMS "SEGTYPE"'                                00161800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00161900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00162000
.ZG24A            ANOP  ,                                               00162100
.*-------------------------------------------------------------------   00162200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00162300
&XSEGTYPE         SETC  ''          INITIALIZE XVARIABLE                00162400
.ZG25A   AIF   ('&SEGTYPE(1)' NE 'SINGLE').ZG26A                        00162500
&XSEGTYPE         SETC  'SINGLE'    SET KEYWORD                         00162600
.*-------------------------------------------------------------------   00162700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00162800
.ZG26A   AIF   ('&SEGTYPE(1)' NE 'FIRST').ZG27A                         00162900
&XSEGTYPE         SETC  'FIRST'     SET KEYWORD                         00163000
.*-------------------------------------------------------------------   00163100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00163200
.ZG27A   AIF   ('&SEGTYPE(1)' NE 'MIDDLE').ZG28A                        00163300
&XSEGTYPE         SETC  'MIDDLE'    SET KEYWORD                         00163400
.*-------------------------------------------------------------------   00163500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00163600
.ZG28A   AIF   ('&SEGTYPE(1)' NE 'LAST').ZG29A                          00163700
&XSEGTYPE         SETC  'LAST'      SET KEYWORD                         00163800
.*-------------------------------------------------------------------   00163900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00164000
.ZG29A   AIF   ('&SEGTYPE(1)' NE 'ABORT').ZG30A                         00164100
&XSEGTYPE         SETC  'ABORT'     SET KEYWORD                         00164200
.*-------------------------------------------------------------------   00164300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00164400
.ZG30A            AIF   (K'&XSEGTYPE GT 0).ZG30C  KEYWORD               00164500
                  AIF   (K'&SEGTYPE(1) LE 0).ZG30B                      00164600
&ZMS              SETC  '"SEGTYPE='             *KUKWA* MNOTE           00164700
&ZMS              SETC  '&ZMS.&SEGTYPE"'                                00164800
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00164900
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00165000
&ZMS              SETC  '&ZMS "SINGLE",'                                00165100
&ZMS              SETC  '&ZMS "FIRST",'                                 00165200
&ZMS              SETC  '&ZMS "MIDDLE",'                                00165300
&ZMS              SETC  '&ZMS "LAST",'                                  00165400
&ZMS              SETC  '&ZMS OR "ABORT".'                              00165500
                  MNOTE 8,' &ZMS '                                      00165600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00165700
.ZG30B            ANOP  ,                                               00165800
&XSEGTYPE         SETC  'SINGLE'    SET DEFAULT KEYWORD                 00165900
.ZG30C            ANOP  ,                                               00166000
&ZXSEGTYPE        SETC  'INPUT'     SET IN/OUTPUT                       00166100
.*----------------------------------------------------------------***   00166200
.***AG.KXVAR05 NAME, OPT INOUT, KEYS -XVARIABLE KEY                     00166300
                  AIF   (N'&CONNECT LE 1).ZG32A  CK NUM                 00166400
&ZMS              SETC  '"CONNECT='             *KPOSA* MNOTE           00166500
&ZMS              SETC  '&ZMS.&CONNECT"'                                00166600
&ZMS              SETC  '&ZMS "CONNECT"'                                00166700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00166800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00166900
.ZG32A            ANOP  ,                                               00167000
.*-------------------------------------------------------------------   00167100
.***AG.KXVAR13 NAME, OPT INOUT, KEYS -XVARIABLE                         00167200
&ZXCONNECT        SETC  'INOUT'     SET IN/OUTPUT                       00167300
&XCONNECT         SETC  '0'                                             00167400
                  AIF   (K'&CONNECT(1) LE 0).ZG32B  PARM                00167500
&XCONNECT         SETC  '&CONNECT(1)'           SET XVARIABLE           00167600
                  AIF   (N'&CONNECT GT 1).ZG32B  MULTI PARMS            00167700
&XCONNECT         SETC  '&CONNECT'  SET XVARIABLE                       00167800
.ZG32B            ANOP  ,                                               00167900
.*-------------------------------------------------------------------   00168000
.***AG.KCK02 NAME, OPT INOUT, KEYS -GPR OUT OF RANGE                    00168100
                  AIF   (K'&ZXCONNECT LE 0).ZG32R  NOT I/O              00168200
                  AIF   ('&XCONNECT'(1,1) NE '(').ZG32R                 00168300
&ZCGPR            SETC  '&XCONNECT'(2,K'&XCONNECT-2)                    00168400
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG32P                    00168500
                  AIF   (K'&ZCGPR GT 2).ZG32Q                           00168600
                  AIF   ('&ZCGPR' EQ '0').ZG32Q                         00168700
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00168800
                  AIF   (T'&ZCGPR NE 'N').ZG32Q  INVALID REG NAME       00168900
.ZG32P            ANOP  ,                                               00169000
                  AIF   (T'&ZCGPR NE 'N').ZG32R  NON NUMERIC            00169100
                  AIF   ('&ZCGPR' LT '2').ZG32Q                         00169200
                  AIF   ('&ZCGPR' LE '12').ZG32R                        00169300
.ZG32Q            ANOP  ,                                               00169400
&ZMS              SETC  '"CONNECT='             *KGPRA* MNOTE           00169500
&ZMS              SETC  '&ZMS.&CONNECT"'                                00169600
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00169700
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00169800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00169900
.ZG32R            ANOP  ,                                               00170000
.*----------------------------------------------------------------***   00170100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00170200
                  AIF   (N'&GROUPTOKEN LE 1).ZG35A  CK NUM              00170300
&ZMS              SETC  '"GROUPTOKEN='          *KPOSA* MNOTE           00170400
&ZMS              SETC  '&ZMS.&GROUPTOKEN"'                             00170500
&ZMS              SETC  '&ZMS "GROUPTOKEN"'                             00170600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00170700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00170800
.ZG35A            ANOP  ,                                               00170900
.*-------------------------------------------------------------------   00171000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00171100
&ZXGROUPTOKEN     SETC  'INPUT'     SET IN/OUTPUT                       00171200
&XGROUPTOKEN      SETC  '&GROUPTOKEN(1)'        SET XVARIABLE           00171300
                  AIF   (N'&GROUPTOKEN GT 1).ZG35B  MULTI PARMS         00171400
&XGROUPTOKEN      SETC  '&GROUPTOKEN'           SET XVARIABLE           00171500
.ZG35B            AIF   (K'&GROUPTOKEN(1) GT 0).ZG35C                   00171600
&ZXGROUPTOKEN     SETC  ''          RESET IN/OUTPUT                     00171700
&ZMS              SETC  ' '         *KRQDA*                             00171800
&ZMS              SETC  '&ZMS "GROUPTOKEN" KEY AND ITS'                 00171900
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00172000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00172100
.ZG35C            ANOP  ,                                               00172200
.*-------------------------------------------------------------------   00172300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00172400
                  AIF   (K'&ZXGROUPTOKEN LE 0).ZG35R  NOT I/O           00172500
                  AIF   ('&XGROUPTOKEN'(1,1) NE '(').ZG35R              00172600
&ZCGPR            SETC  '&XGROUPTOKEN'(2,K'&XGROUPTOKEN-2)              00172700
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG35P                    00172800
                  AIF   (K'&ZCGPR GT 2).ZG35Q                           00172900
                  AIF   ('&ZCGPR' EQ '0').ZG35Q                         00173000
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00173100
                  AIF   (T'&ZCGPR NE 'N').ZG35Q  INVALID REG NAME       00173200
.ZG35P            ANOP  ,                                               00173300
                  AIF   (T'&ZCGPR NE 'N').ZG35R  NON NUMERIC            00173400
                  AIF   ('&ZCGPR' LT '2').ZG35Q                         00173500
                  AIF   ('&ZCGPR' LE '12').ZG35R                        00173600
.ZG35Q            ANOP  ,                                               00173700
&ZMS              SETC  '"GROUPTOKEN='          *KGPRA* MNOTE           00173800
&ZMS              SETC  '&ZMS.&GROUPTOKEN"'                             00173900
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00174000
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00174100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00174200
.ZG35R            ANOP  ,                                               00174300
.*----------------------------------------------------------------***   00174400
.***AG.KXVAR05 NAME, OPT INOUT, KEYS -XVARIABLE KEY                     00174500
                  AIF   (N'&RESPDATA LE 1).ZG38A  CK NUM                00174600
&ZMS              SETC  '"RESPDATA='            *KPOSA* MNOTE           00174700
&ZMS              SETC  '&ZMS.&RESPDATA"'                               00174800
&ZMS              SETC  '&ZMS "RESPDATA"'                               00174900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00175000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00175100
.ZG38A            ANOP  ,                                               00175200
.*-------------------------------------------------------------------   00175300
.***AG.KXVAR13 NAME, OPT INOUT, KEYS -XVARIABLE                         00175400
&ZXRESPDATA       SETC  'INOUT'     SET IN/OUTPUT                       00175500
&XRESPDATA        SETC  '0'                                             00175600
                  AIF   (K'&RESPDATA(1) LE 0).ZG38B  PARM               00175700
&XRESPDATA        SETC  '&RESPDATA(1)'          SET XVARIABLE           00175800
                  AIF   (N'&RESPDATA GT 1).ZG38B  MULTI PARMS           00175900
&XRESPDATA        SETC  '&RESPDATA'             SET XVARIABLE           00176000
.ZG38B            ANOP  ,                                               00176100
.*-------------------------------------------------------------------   00176200
.***AG.KCK02 NAME, OPT INOUT, KEYS -GPR OUT OF RANGE                    00176300
                  AIF   (K'&ZXRESPDATA LE 0).ZG38R  NOT I/O             00176400
                  AIF   ('&XRESPDATA'(1,1) NE '(').ZG38R                00176500
&ZCGPR            SETC  '&XRESPDATA'(2,K'&XRESPDATA-2)                  00176600
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG38P                    00176700
                  AIF   (K'&ZCGPR GT 2).ZG38Q                           00176800
                  AIF   ('&ZCGPR' EQ '0').ZG38Q                         00176900
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00177000
                  AIF   (T'&ZCGPR NE 'N').ZG38Q  INVALID REG NAME       00177100
.ZG38P            ANOP  ,                                               00177200
                  AIF   (T'&ZCGPR NE 'N').ZG38R  NON NUMERIC            00177300
                  AIF   ('&ZCGPR' LT '2').ZG38Q                         00177400
                  AIF   ('&ZCGPR' LE '12').ZG38R                        00177500
.ZG38Q            ANOP  ,                                               00177600
&ZMS              SETC  '"RESPDATA='            *KGPRA* MNOTE           00177700
&ZMS              SETC  '&ZMS.&RESPDATA"'                               00177800
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00177900
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00178000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00178100
.ZG38R            ANOP  ,                                               00178200
.*----------------------------------------------------------------***   00178300
.***AG.KXVAR05 NAME, OPT INOUT, KEYS -XVARIABLE KEY                     00178400
                  AIF   (N'&RESPDLEN LE 1).ZG40A  CK NUM                00178500
&ZMS              SETC  '"RESPDLEN='            *KPOSA* MNOTE           00178600
&ZMS              SETC  '&ZMS.&RESPDLEN"'                               00178700
&ZMS              SETC  '&ZMS "RESPDLEN"'                               00178800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00178900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00179000
.ZG40A            ANOP  ,                                               00179100
.*-------------------------------------------------------------------   00179200
.***AG.KXVAR17 NAME, OPT INOUT, KEYS -XVARIABLE                         00179300
&XRESPDLEN        SETC  '0'         SET DEFAULT                         00179400
                  AIF   (K'&RESPDLEN(1) LE 0).ZG40C  PARM               00179500
&XRESPDLEN        SETC  '&RESPDLEN(1)'          SET XVARIABLE           00179600
                  AIF   (N'&RESPDLEN GT 1).ZG40B  MULTI PARMS           00179700
&XRESPDLEN        SETC  '&RESPDLEN'             SET XVARIABLE           00179800
.ZG40B            AIF   (K'&RESPDATA(1) GT 0).ZG40C  KEY                00179900
&ZMS              SETC  '"RESPDLEN'             *KDEPA* MNOTE           00180000
&ZMS              SETC  '&ZMS.=&RESPDLEN"'                              00180100
&ZMS              SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                 00180200
&ZMS              SETC  '&ZMS '                                         00180300
&ZMS              SETC  '&ZMS "RESPDATA"'                               00180400
                  MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                    00180500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00180600
.ZG40C            ANOP  ,                                               00180700
&ZXRESPDLEN       SETC  'INOUT'     SET IN/OUTPUT                       00180800
.*-------------------------------------------------------------------   00180900
.***AG.KCK02 NAME, OPT INOUT, KEYS -GPR OUT OF RANGE                    00181000
                  AIF   (K'&ZXRESPDLEN LE 0).ZG40R  NOT I/O             00181100
                  AIF   ('&XRESPDLEN'(1,1) NE '(').ZG40R                00181200
&ZCGPR            SETC  '&XRESPDLEN'(2,K'&XRESPDLEN-2)                  00181300
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG40P                    00181400
                  AIF   (K'&ZCGPR GT 2).ZG40Q                           00181500
                  AIF   ('&ZCGPR' EQ '0').ZG40Q                         00181600
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00181700
                  AIF   (T'&ZCGPR NE 'N').ZG40Q  INVALID REG NAME       00181800
.ZG40P            ANOP  ,                                               00181900
                  AIF   (T'&ZCGPR NE 'N').ZG40R  NON NUMERIC            00182000
                  AIF   ('&ZCGPR' LT '2').ZG40Q                         00182100
                  AIF   ('&ZCGPR' LE '12').ZG40R                        00182200
.ZG40Q            ANOP  ,                                               00182300
&ZMS              SETC  '"RESPDLEN='            *KGPRA* MNOTE           00182400
&ZMS              SETC  '&ZMS.&RESPDLEN"'                               00182500
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00182600
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00182700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00182800
.ZG40R            ANOP  ,                                               00182900
.*----------------------------------------------------------------***   00183000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00183100
                  AIF   (N'&RESPDALT LE 1).ZG42A  CK NUM                00183200
&ZMS              SETC  '"RESPDALT='            *KPOSA* MNOTE           00183300
&ZMS              SETC  '&ZMS.&RESPDALT"'                               00183400
&ZMS              SETC  '&ZMS "RESPDALT"'                               00183500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00183600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00183700
.ZG42A            ANOP  ,                                               00183800
.*-------------------------------------------------------------------   00183900
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00184000
&XRESPDALT        SETC  '0'         SET DEFAULT                         00184100
                  AIF   (K'&RESPDALT(1) LE 0).ZG42C  PARM               00184200
&XRESPDALT        SETC  '&RESPDALT(1)'          SET XVARIABLE           00184300
                  AIF   (N'&RESPDALT GT 1).ZG42B  MULTI PARMS           00184400
&XRESPDALT        SETC  '&RESPDALT'             SET XVARIABLE           00184500
.ZG42B            AIF   (K'&RESPDLEN(1) GT 0).ZG42C  KEY                00184600
&ZMS              SETC  '"RESPDALT'             *KDEPA* MNOTE           00184700
&ZMS              SETC  '&ZMS.=&RESPDALT"'                              00184800
&ZMS              SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                 00184900
&ZMS              SETC  '&ZMS '                                         00185000
&ZMS              SETC  '&ZMS "RESPDLEN"'                               00185100
                  MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                    00185200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00185300
.ZG42C            ANOP  ,                                               00185400
&ZXRESPDALT       SETC  'INPUT'     SET IN/OUTPUT                       00185500
.*-------------------------------------------------------------------   00185600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00185700
                  AIF   (K'&ZXRESPDALT LE 0).ZG42R  NOT I/O             00185800
                  AIF   ('&XRESPDALT'(1,1) NE '(').ZG42R                00185900
&ZCGPR            SETC  '&XRESPDALT'(2,K'&XRESPDALT-2)                  00186000
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG42P                    00186100
                  AIF   (K'&ZCGPR GT 2).ZG42Q                           00186200
                  AIF   ('&ZCGPR' EQ '0').ZG42Q                         00186300
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00186400
                  AIF   (T'&ZCGPR NE 'N').ZG42Q  INVALID REG NAME       00186500
.ZG42P            ANOP  ,                                               00186600
                  AIF   (T'&ZCGPR NE 'N').ZG42R  NON NUMERIC            00186700
                  AIF   ('&ZCGPR' LT '2').ZG42Q                         00186800
                  AIF   ('&ZCGPR' LE '12').ZG42R                        00186900
.ZG42Q            ANOP  ,                                               00187000
&ZMS              SETC  '"RESPDALT='            *KGPRA* MNOTE           00187100
&ZMS              SETC  '&ZMS.&RESPDALT"'                               00187200
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00187300
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00187400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00187500
.ZG42R            ANOP  ,                                               00187600
.*----------------------------------------------------------------***   00187700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00187800
                  AIF   (N'&REQMBOX LE 1).ZG47A  CK NUM                 00187900
&ZMS              SETC  '"REQMBOX='             *KPOSA* MNOTE           00188000
&ZMS              SETC  '&ZMS.&REQMBOX"'                                00188100
&ZMS              SETC  '&ZMS "REQMBOX"'                                00188200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00188300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00188400
.ZG47A            ANOP  ,                                               00188500
.*-------------------------------------------------------------------   00188600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00188700
&ZXREQMBOX        SETC  'INPUT'     SET IN/OUTPUT                       00188800
&XREQMBOX         SETC  ']NONE]'                                        00188900
                  AIF   (K'&REQMBOX(1) LE 0).ZG47B  PARM                00189000
&XREQMBOX         SETC  '&REQMBOX(1)'           SET XVARIABLE           00189100
                  AIF   (N'&REQMBOX GT 1).ZG47B  MULTI PARMS            00189200
&XREQMBOX         SETC  '&REQMBOX'  SET XVARIABLE                       00189300
.ZG47B            ANOP  ,                                               00189400
.*-------------------------------------------------------------------   00189500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00189600
                  AIF   (K'&ZXREQMBOX LE 0).ZG47R  NOT I/O              00189700
                  AIF   ('&XREQMBOX'(1,1) NE '(').ZG47R                 00189800
&ZCGPR            SETC  '&XREQMBOX'(2,K'&XREQMBOX-2)                    00189900
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG47P                    00190000
                  AIF   (K'&ZCGPR GT 2).ZG47Q                           00190100
                  AIF   ('&ZCGPR' EQ '0').ZG47Q                         00190200
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00190300
                  AIF   (T'&ZCGPR NE 'N').ZG47Q  INVALID REG NAME       00190400
.ZG47P            ANOP  ,                                               00190500
                  AIF   (T'&ZCGPR NE 'N').ZG47R  NON NUMERIC            00190600
                  AIF   ('&ZCGPR' LT '2').ZG47Q                         00190700
                  AIF   ('&ZCGPR' LE '12').ZG47R                        00190800
.ZG47Q            ANOP  ,                                               00190900
&ZMS              SETC  '"REQMBOX='             *KGPRA* MNOTE           00191000
&ZMS              SETC  '&ZMS.&REQMBOX"'                                00191100
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00191200
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00191300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00191400
.ZG47R            ANOP  ,                                               00191500
.*----------------------------------------------------------------***   00191600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00191700
                  AIF   (N'&REQTOKEN LE 1).ZG49A  CK NUM                00191800
&ZMS              SETC  '"REQTOKEN='            *KPOSA* MNOTE           00191900
&ZMS              SETC  '&ZMS.&REQTOKEN"'                               00192000
&ZMS              SETC  '&ZMS "REQTOKEN"'                               00192100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00192200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00192300
.ZG49A            ANOP  ,                                               00192400
.*-------------------------------------------------------------------   00192500
.***AG.KXVAR18 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00192600
                  AIF   (K'&REQTOKEN(1) LE 0).ZG49C  PARM               00192700
&ZXREQTOKEN       SETC  'OUTPUT'    SET OUTPUT                          00192800
&XREQTOKEN        SETC  '&REQTOKEN(1)'          SET XVARIABLE           00192900
                  AIF   (N'&REQTOKEN GT 1).ZG49B  MULTIPLE PARMS        00193000
&XREQTOKEN        SETC  '&REQTOKEN'             SET XVARIABLE           00193100
.ZG49B            AIF   (K'&REQMBOX(1) GT 0).ZG49C  KEY                 00193200
&ZMS              SETC  '"REQTOKEN'             *KDEPA* MNOTE           00193300
&ZMS              SETC  '&ZMS.=&REQTOKEN"'                              00193400
&ZMS              SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                 00193500
&ZMS              SETC  '&ZMS '                                         00193600
&ZMS              SETC  '&ZMS "REQMBOX"'                                00193700
                  MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                    00193800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00193900
.ZG49C            ANOP  ,                                               00194000
.*-------------------------------------------------------------------   00194100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00194200
                  AIF   (K'&ZXREQTOKEN LE 0).ZG49R  NOT I/O             00194300
                  AIF   ('&XREQTOKEN'(1,1) NE '(').ZG49R                00194400
&ZCGPR            SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)                  00194500
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG49P                    00194600
                  AIF   (K'&ZCGPR GT 2).ZG49Q                           00194700
                  AIF   ('&ZCGPR' EQ '0').ZG49Q                         00194800
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00194900
                  AIF   (T'&ZCGPR NE 'N').ZG49Q  INVALID REG NAME       00195000
.ZG49P            ANOP  ,                                               00195100
                  AIF   (T'&ZCGPR NE 'N').ZG49R  NON NUMERIC            00195200
                  AIF   ('&ZCGPR' LT '2').ZG49Q                         00195300
                  AIF   ('&ZCGPR' LE '12').ZG49R                        00195400
.ZG49Q            ANOP  ,                                               00195500
&ZMS              SETC  '"REQTOKEN='            *KGPRA* MNOTE           00195600
&ZMS              SETC  '&ZMS.&REQTOKEN"'                               00195700
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00195800
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00195900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00196000
.ZG49R            ANOP  ,                                               00196100
.*----------------------------------------------------------------***   00196200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00196300
                  AIF   (N'&EXIT LE 1).ZG53A    CK NUM                  00196400
&ZMS              SETC  '"EXIT='    *KPOSA* MNOTE                       00196500
&ZMS              SETC  '&ZMS.&EXIT"'                                   00196600
&ZMS              SETC  '&ZMS "EXIT"'                                   00196700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00196800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00196900
.ZG53A            ANOP  ,                                               00197000
.*-------------------------------------------------------------------   00197100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00197200
&ZXEXIT           SETC  'INPUT'     SET IN/OUTPUT                       00197300
&XEXIT            SETC  'NONE'                                          00197400
                  AIF   (K'&EXIT(1) LE 0).ZG53B  PARM                   00197500
&XEXIT            SETC  '&EXIT(1)'  SET XVARIABLE                       00197600
                  AIF   (N'&EXIT GT 1).ZG53B    MULTI PARMS             00197700
&XEXIT            SETC  '&EXIT'     SET XVARIABLE                       00197800
.ZG53B            ANOP  ,                                               00197900
.*-------------------------------------------------------------------   00198000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00198100
                  AIF   (K'&ZXEXIT LE 0).ZG53R  NOT I/O                 00198200
         AIF   ('&XEXIT' EQ 'NONE').ZG53R                               00198300
                  AIF   ('&XEXIT'(1,1) NE '(').ZG53R                    00198400
&ZCGPR            SETC  '&XEXIT'(2,K'&XEXIT-2)                          00198500
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG53P                    00198600
                  AIF   (K'&ZCGPR GT 2).ZG53Q                           00198700
                  AIF   ('&ZCGPR' EQ '0').ZG53Q                         00198800
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00198900
                  AIF   (T'&ZCGPR NE 'N').ZG53Q  INVALID REG NAME       00199000
.ZG53P            ANOP  ,                                               00199100
                  AIF   (T'&ZCGPR NE 'N').ZG53R  NON NUMERIC            00199200
                  AIF   ('&ZCGPR' LT '2').ZG53Q                         00199300
                  AIF   ('&ZCGPR' LE '12').ZG53R                        00199400
.ZG53Q            ANOP  ,                                               00199500
&ZMS              SETC  '"EXIT='    *KGPRA* MNOTE                       00199600
&ZMS              SETC  '&ZMS.&EXIT"'                                   00199700
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00199800
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00199900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00200000
.ZG53R            ANOP  ,                                               00200100
.*----------------------------------------------------------------***   00200200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00200300
                  AIF   (N'&ECB LE 1).ZG56A     CK NUM                  00200400
&ZMS              SETC  '"ECB='     *KPOSA* MNOTE                       00200500
&ZMS              SETC  '&ZMS.&ECB"'                                    00200600
&ZMS              SETC  '&ZMS "ECB"'                                    00200700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00200800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00200900
.ZG56A            ANOP  ,                                               00201000
.*-------------------------------------------------------------------   00201100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00201200
&ZXECB            SETC  'INPUT'     SET IN/OUTPUT                       00201300
&XECB             SETC  'NONE'                                          00201400
                  AIF   (K'&ECB(1) LE 0).ZG56B  PARM                    00201500
&XECB             SETC  '&ECB(1)'   SET XVARIABLE                       00201600
                  AIF   (N'&ECB GT 1).ZG56B     MULTI PARMS             00201700
&XECB             SETC  '&ECB'      SET XVARIABLE                       00201800
.ZG56B            ANOP  ,                                               00201900
.*-------------------------------------------------------------------   00202000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00202100
                  AIF   (K'&ZXECB LE 0).ZG56R   NOT I/O                 00202200
         AIF   ('&XECB' EQ 'NONE').ZG56R                                00202300
                  AIF   ('&XECB'(1,1) NE '(').ZG56R                     00202400
&ZCGPR            SETC  '&XECB'(2,K'&XECB-2)                            00202500
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG56P                    00202600
                  AIF   (K'&ZCGPR GT 2).ZG56Q                           00202700
                  AIF   ('&ZCGPR' EQ '0').ZG56Q                         00202800
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00202900
                  AIF   (T'&ZCGPR NE 'N').ZG56Q  INVALID REG NAME       00203000
.ZG56P            ANOP  ,                                               00203100
                  AIF   (T'&ZCGPR NE 'N').ZG56R  NON NUMERIC            00203200
                  AIF   ('&ZCGPR' LT '2').ZG56Q                         00203300
                  AIF   ('&ZCGPR' LE '12').ZG56R                        00203400
.ZG56Q            ANOP  ,                                               00203500
&ZMS              SETC  '"ECB='     *KGPRA* MNOTE                       00203600
&ZMS              SETC  '&ZMS.&ECB"'                                    00203700
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00203800
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00203900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00204000
.ZG56R            ANOP  ,                                               00204100
.*----------------------------------------------------------------***   00204200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00204300
                  AIF   (N'&MSGTOKEN LE 1).ZG59A  CK NUM                00204400
&ZMS              SETC  '"MSGTOKEN='            *KPOSA* MNOTE           00204500
&ZMS              SETC  '&ZMS.&MSGTOKEN"'                               00204600
&ZMS              SETC  '&ZMS "MSGTOKEN"'                               00204700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00204800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00204900
.ZG59A            ANOP  ,                                               00205000
.*-------------------------------------------------------------------   00205100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00205200
                  AIF   (K'&MSGTOKEN(1) LE 0).ZG59C  NO PARM            00205300
&ZXMSGTOKEN       SETC  'OUTPUT'    SET OUTPUT                          00205400
&XMSGTOKEN        SETC  '&MSGTOKEN(1)'          SET XVARIABLE           00205500
                  AIF   (N'&MSGTOKEN GT 1).ZG59C                        00205600
&XMSGTOKEN        SETC  '&MSGTOKEN'             SET XVARIABLE           00205700
.ZG59C            ANOP  ,                                               00205800
.*-------------------------------------------------------------------   00205900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00206000
                  AIF   (K'&ZXMSGTOKEN LE 0).ZG59R  NOT I/O             00206100
                  AIF   ('&XMSGTOKEN'(1,1) NE '(').ZG59R                00206200
&ZCGPR            SETC  '&XMSGTOKEN'(2,K'&XMSGTOKEN-2)                  00206300
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG59P                    00206400
                  AIF   (K'&ZCGPR GT 2).ZG59Q                           00206500
                  AIF   ('&ZCGPR' EQ '0').ZG59Q                         00206600
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00206700
                  AIF   (T'&ZCGPR NE 'N').ZG59Q  INVALID REG NAME       00206800
.ZG59P            ANOP  ,                                               00206900
                  AIF   (T'&ZCGPR NE 'N').ZG59R  NON NUMERIC            00207000
                  AIF   ('&ZCGPR' LT '2').ZG59Q                         00207100
                  AIF   ('&ZCGPR' LE '12').ZG59R                        00207200
.ZG59Q            ANOP  ,                                               00207300
&ZMS              SETC  '"MSGTOKEN='            *KGPRA* MNOTE           00207400
&ZMS              SETC  '&ZMS.&MSGTOKEN"'                               00207500
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00207600
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00207700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00207800
.ZG59R            ANOP  ,                                               00207900
.*----------------------------------------------------------------***   00208000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00208100
                  AIF   (N'&USERRC LE 1).ZG62A  CK NUM                  00208200
&ZMS              SETC  '"USERRC='  *KPOSA* MNOTE                       00208300
&ZMS              SETC  '&ZMS.&USERRC"'                                 00208400
&ZMS              SETC  '&ZMS "USERRC"'                                 00208500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00208600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00208700
.ZG62A            ANOP  ,                                               00208800
.*-------------------------------------------------------------------   00208900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00209000
                  AIF   (K'&USERRC(1) LE 0).ZG62C  NO PARM              00209100
&ZXUSERRC         SETC  'OUTPUT'    SET OUTPUT                          00209200
&XUSERRC          SETC  '&USERRC(1)'            SET XVARIABLE           00209300
                  AIF   (N'&USERRC GT 1).ZG62C                          00209400
&XUSERRC          SETC  '&USERRC'   SET XVARIABLE                       00209500
.ZG62C            ANOP  ,                                               00209600
.*-------------------------------------------------------------------   00209700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00209800
                  AIF   (K'&ZXUSERRC LE 0).ZG62R  NOT I/O               00209900
                  AIF   ('&XUSERRC'(1,1) NE '(').ZG62R                  00210000
&ZCGPR            SETC  '&XUSERRC'(2,K'&XUSERRC-2)                      00210100
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG62P                    00210200
                  AIF   (K'&ZCGPR GT 2).ZG62Q                           00210300
                  AIF   ('&ZCGPR' EQ '0').ZG62Q                         00210400
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00210500
                  AIF   (T'&ZCGPR NE 'N').ZG62Q  INVALID REG NAME       00210600
.ZG62P            ANOP  ,                                               00210700
                  AIF   (T'&ZCGPR NE 'N').ZG62R  NON NUMERIC            00210800
                  AIF   ('&ZCGPR' LT '2').ZG62Q                         00210900
                  AIF   ('&ZCGPR' LE '12').ZG62R                        00211000
.ZG62Q            ANOP  ,                                               00211100
&ZMS              SETC  '"USERRC='  *KGPRA* MNOTE                       00211200
&ZMS              SETC  '&ZMS.&USERRC"'                                 00211300
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00211400
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00211500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00211600
.ZG62R            ANOP  ,                                               00211700
.*----------------------------------------------------------------***   00211800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00211900
                  AIF   (N'&MSGATTR LE 1).ZG65A  CK NUM                 00212000
&ZMS              SETC  '"MSGATTR='             *KPOSA* MNOTE           00212100
&ZMS              SETC  '&ZMS.&MSGATTR"'                                00212200
&ZMS              SETC  '&ZMS "MSGATTR"'                                00212300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00212400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00212500
.ZG65A            ANOP  ,                                               00212600
.*-------------------------------------------------------------------   00212700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00212800
&XMSGATTR         SETC  ''          INITIALIZE XVARIABLE                00212900
.ZG66A   AIF   ('&MSGATTR(1)' NE 'NONE').ZG67A                          00213000
&XMSGATTR         SETC  'NONE'      SET KEYWORD                         00213100
.*-------------------------------------------------------------------   00213200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00213300
.ZG67A   AIF   ('&MSGATTR(1)' NE 'J3CONNECT').ZG68A                     00213400
&XMSGATTR         SETC  'J3CONNECT'             SET KEYWORD             00213500
.*-------------------------------------------------------------------   00213600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00213700
.ZG68A   AIF   ('&MSGATTR(1)' NE 'EXPRESS').ZG69A                       00213800
&XMSGATTR         SETC  'EXPRESS'   SET KEYWORD                         00213900
.*-------------------------------------------------------------------   00214000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00214100
.ZG69A            AIF   (K'&XMSGATTR GT 0).ZG69C  KEYWORD               00214200
                  AIF   (K'&MSGATTR(1) LE 0).ZG69B                      00214300
&ZMS              SETC  '"MSGATTR='             *KUKWA* MNOTE           00214400
&ZMS              SETC  '&ZMS.&MSGATTR"'                                00214500
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00214600
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00214700
&ZMS              SETC  '&ZMS "NONE",'                                  00214800
&ZMS              SETC  '&ZMS "J3CONNECT",'                             00214900
&ZMS              SETC  '&ZMS OR "EXPRESS".'                            00215000
                  MNOTE 8,' &ZMS '                                      00215100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00215200
.ZG69B            ANOP  ,                                               00215300
&XMSGATTR         SETC  'NONE'      SET DEFAULT KEYWORD                 00215400
.ZG69C            ANOP  ,                                               00215500
&ZXMSGATTR        SETC  'INPUT'     SET IN/OUTPUT                       00215600
.*----------------------------------------------------------------***   00215700
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00215800
                  AIF   (N'&RELEASE_CADS LE 1).ZG71A  CK NUM            00215900
&ZMS              SETC  '"RELEASE_CADS='        *KPOSA* MNOTE           00216000
&ZMS              SETC  '&ZMS.&RELEASE_CADS"'                           00216100
&ZMS              SETC  '&ZMS "RELEASE_CADS"'                           00216200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00216300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00216400
.ZG71A            ANOP  ,                                               00216500
.*-------------------------------------------------------------------   00216600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00216700
&XRELEASE_CADS    SETC  ''          INITIALIZE XVARIABLE                00216800
.ZG72A   AIF   ('&RELEASE_CADS(1)' NE 'NO').ZG73A                       00216900
&XRELEASE_CADS    SETC  'NO'        SET KEYWORD                         00217000
.*-------------------------------------------------------------------   00217100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00217200
.ZG73A   AIF   ('&RELEASE_CADS(1)' NE 'YES').ZG74A                      00217300
&XRELEASE_CADS    SETC  'YES'       SET KEYWORD                         00217400
.*-------------------------------------------------------------------   00217500
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00217600
.ZG74A            AIF   (K'&XRELEASE_CADS GT 0).ZG74C  KEYWORD          00217700
                  AIF   (K'&RELEASE_CADS(1) LE 0).ZG74B                 00217800
&ZMS              SETC  '"RELEASE_CADS='        *KUKWA* MNOTE           00217900
&ZMS              SETC  '&ZMS.&RELEASE_CADS"'                           00218000
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00218100
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00218200
&ZMS              SETC  '&ZMS "NO"'                                     00218300
&ZMS              SETC  '&ZMS OR "YES".'                                00218400
                  MNOTE 8,' &ZMS '                                      00218500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00218600
.ZG74B            ANOP  ,                                               00218700
&XRELEASE_CADS    SETC  'NO'        SET DEFAULT KEYWORD                 00218800
.ZG74C            ANOP  ,                                               00218900
&ZXRELEASE_CADS   SETC  'INPUT'     SET IN/OUTPUT                       00219000
.*----------------------------------------------------------------***   00219100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00219200
                  AIF   (N'&RIPSIZE LE 1).ZG76A  CK NUM                 00219300
&ZMS              SETC  '"RIPSIZE='             *KPOSA* MNOTE           00219400
&ZMS              SETC  '&ZMS.&RIPSIZE"'                                00219500
&ZMS              SETC  '&ZMS "RIPSIZE"'                                00219600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00219700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00219800
.ZG76A            ANOP  ,                                               00219900
.*-------------------------------------------------------------------   00220000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00220100
&ZXRIPSIZE        SETC  'INPUT'     SET IN/OUTPUT                       00220200
&XRIPSIZE         SETC  '0'                                             00220300
                  AIF   (K'&RIPSIZE(1) LE 0).ZG76B  PARM                00220400
&XRIPSIZE         SETC  '&RIPSIZE(1)'           SET XVARIABLE           00220500
                  AIF   (N'&RIPSIZE GT 1).ZG76B  MULTI PARMS            00220600
&XRIPSIZE         SETC  '&RIPSIZE'  SET XVARIABLE                       00220700
.ZG76B            ANOP  ,                                               00220800
.*-------------------------------------------------------------------   00220900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00221000
                  AIF   (K'&ZXRIPSIZE LE 0).ZG76R  NOT I/O              00221100
                  AIF   ('&XRIPSIZE'(1,1) NE '(').ZG76R                 00221200
&ZCGPR            SETC  '&XRIPSIZE'(2,K'&XRIPSIZE-2)                    00221300
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG76P                    00221400
                  AIF   (K'&ZCGPR GT 2).ZG76Q                           00221500
                  AIF   ('&ZCGPR' EQ '0').ZG76Q                         00221600
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00221700
                  AIF   (T'&ZCGPR NE 'N').ZG76Q  INVALID REG NAME       00221800
.ZG76P            ANOP  ,                                               00221900
                  AIF   (T'&ZCGPR NE 'N').ZG76R  NON NUMERIC            00222000
                  AIF   ('&ZCGPR' LT '2').ZG76Q                         00222100
                  AIF   ('&ZCGPR' LE '12').ZG76R                        00222200
.ZG76Q            ANOP  ,                                               00222300
&ZMS              SETC  '"RIPSIZE='             *KGPRA* MNOTE           00222400
&ZMS              SETC  '&ZMS.&RIPSIZE"'                                00222500
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00222600
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00222700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00222800
.ZG76R            ANOP  ,                                               00222900
.*----------------------------------------------------------------***   00223000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00223100
                  AIF   (N'&RTNCODE LE 1).ZG79A  CK NUM                 00223200
&ZMS              SETC  '"RTNCODE='             *KPOSA* MNOTE           00223300
&ZMS              SETC  '&ZMS.&RTNCODE"'                                00223400
&ZMS              SETC  '&ZMS "RTNCODE"'                                00223500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00223600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00223700
.ZG79A            ANOP  ,                                               00223800
.*-------------------------------------------------------------------   00223900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00224000
                  AIF   (K'&RTNCODE(1) LE 0).ZG79C  NO PARM             00224100
&ZXRTNCODE        SETC  'OUTPUT'    SET OUTPUT                          00224200
&XRTNCODE         SETC  '&RTNCODE(1)'           SET XVARIABLE           00224300
                  AIF   (N'&RTNCODE GT 1).ZG79C                         00224400
&XRTNCODE         SETC  '&RTNCODE'  SET XVARIABLE                       00224500
.ZG79C            ANOP  ,                                               00224600
.*-------------------------------------------------------------------   00224700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00224800
                  AIF   (K'&ZXRTNCODE LE 0).ZG79R  NOT I/O              00224900
                  AIF   ('&XRTNCODE'(1,1) NE '(').ZG79R                 00225000
&ZCGPR            SETC  '&XRTNCODE'(2,K'&XRTNCODE-2)                    00225100
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG79P                    00225200
                  AIF   (K'&ZCGPR GT 2).ZG79Q                           00225300
                  AIF   ('&ZCGPR' EQ '0').ZG79Q                         00225400
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00225500
                  AIF   (T'&ZCGPR NE 'N').ZG79Q  INVALID REG NAME       00225600
.ZG79P            ANOP  ,                                               00225700
                  AIF   (T'&ZCGPR NE 'N').ZG79R  NON NUMERIC            00225800
                  AIF   ('&ZCGPR' LT '2').ZG79Q                         00225900
                  AIF   ('&ZCGPR' LE '12').ZG79R                        00226000
.ZG79Q            ANOP  ,                                               00226100
&ZMS              SETC  '"RTNCODE='             *KGPRA* MNOTE           00226200
&ZMS              SETC  '&ZMS.&RTNCODE"'                                00226300
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00226400
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00226500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00226600
.ZG79R            ANOP  ,                                               00226700
.*----------------------------------------------------------------***   00226800
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00226900
                  AIF   (N'&RSNCODE LE 1).ZG82A  CK NUM                 00227000
&ZMS              SETC  '"RSNCODE='             *KPOSA* MNOTE           00227100
&ZMS              SETC  '&ZMS.&RSNCODE"'                                00227200
&ZMS              SETC  '&ZMS "RSNCODE"'                                00227300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00227400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00227500
.ZG82A            ANOP  ,                                               00227600
.*-------------------------------------------------------------------   00227700
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00227800
                  AIF   (K'&RSNCODE(1) LE 0).ZG82C  NO PARM             00227900
&ZXRSNCODE        SETC  'OUTPUT'    SET OUTPUT                          00228000
&XRSNCODE         SETC  '&RSNCODE(1)'           SET XVARIABLE           00228100
                  AIF   (N'&RSNCODE GT 1).ZG82C                         00228200
&XRSNCODE         SETC  '&RSNCODE'  SET XVARIABLE                       00228300
.ZG82C            ANOP  ,                                               00228400
.*-------------------------------------------------------------------   00228500
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00228600
                  AIF   (K'&ZXRSNCODE LE 0).ZG82R  NOT I/O              00228700
                  AIF   ('&XRSNCODE'(1,1) NE '(').ZG82R                 00228800
&ZCGPR            SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                    00228900
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG82P                    00229000
                  AIF   (K'&ZCGPR GT 2).ZG82Q                           00229100
                  AIF   ('&ZCGPR' EQ '0').ZG82Q                         00229200
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00229300
                  AIF   (T'&ZCGPR NE 'N').ZG82Q  INVALID REG NAME       00229400
.ZG82P            ANOP  ,                                               00229500
                  AIF   (T'&ZCGPR NE 'N').ZG82R  NON NUMERIC            00229600
                  AIF   ('&ZCGPR' LT '2').ZG82Q                         00229700
                  AIF   ('&ZCGPR' LE '12').ZG82R                        00229800
.ZG82Q            ANOP  ,                                               00229900
&ZMS              SETC  '"RSNCODE='             *KGPRA* MNOTE           00230000
&ZMS              SETC  '&ZMS.&RSNCODE"'                                00230100
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00230200
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00230300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00230400
.ZG82R            ANOP  ,                                               00230500
.******************************************************************     00230600
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00230700
.******************************************************************     00230800
                  ACTR  10000                                           00230900
.*----------------------------------------------------------------***   00231000
.***AH.P02 EXTRA POSITIONALS                                            00231100
                  AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS            00231200
                  AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL            00231300
                  AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL        00231400
                  AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL         00231500
.ZGLISTX1         ANOP  ,                                               00231600
&ZCVAL            SETC  ''          ERROR FIELD                         00231700
&ZAWRK            SETA  0           POSITIONAL NUMBER                   00231800
.ZGLIST2          ANOP  ,                                               00231900
&ZAWRK            SETA  &ZAWRK+1    NEXT POSITIONAL                     00232000
                  AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE            00232100
&ZCVAL            SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                 00232200
                  AGO   .ZGLIST2                                        00232300
.*                                                                      00232400
.ZGLIST3          ANOP  ,                                               00232500
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)   STRIP COMMA             00232600
&ZMS              SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE        00232700
&ZMS              SETC  '&ZMS "&ZCVAL"'                                 00232800
&ZMS              SETC  '&ZMS CANNOT BE USED.'                          00232900
&ZMS              SETC  '&ZMS NO POSITIONAL ARGUMENTS'                  00233000
                  MNOTE 8,' &ZMS ARE ALLOWED.'                          00233100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00233200
.ZGLISTX          ANOP  ,                                               00233300
&ZASYSLNDX        SETA  0                                               00233400
.*-------------------------------------------------------------------   00233500
.***AG.MF04 MF=(SLE)                                                    00233600
.ZGMFX            ANOP  ,           END OF FULL SYNTAX CHECK            00233700
.*******************************************************************    00233800
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00233900
.*******************************************************************    00234000
                  AIF   (&ZMACRET NE 0).ZLX2    ERROR DETECTED          00234100
.*******************************************************************    00234200
.***AE.01  START OF IXZXIXSM MACRO CODE                                 00234300
.*******************************************************************    00234400
                  LCLC  &M0M0001                 NAME                   00234500
&M0M0001          SETC  '&XLABEL'                SET NAME               00234600
                  AIF   (K'&XLABEL NE 0).XLAB2                          00234700
&M0M0001          SETC  'M00M&SYSNDX'            DEFAULT NAME           00234800
.*                                                                      00234900
.XLAB2            ANOP  ,                                               00235000
                  AIF   ('&XMF' EQ 'L').XLAB3                           00235100
&M0M0001 DS    0H                             IXZXIXSM-2                00235200
.XLAB3            ANOP  ,                                               00235300
.*******************************************************************    00235400
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00235500
.*******************************************************************    00235600
              PUSH  PRINT                                               00235700
                  AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON      00235800
                  PRINT OFF         ++ PR01                             00235900
                  AGO   .ZPRNTXX                                        00236000
.ZPRINTX          PRINT ON                                              00236100
.ZPRNTXX          ANOP  ,                                               00236200
.********************************************************************   00236300
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00236400
.********************************************************************   00236500
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00236600
                      LCLA  &ZOPN1         INVOCATION INDEX             00236700
                      LCLC  &ZOPL(4095)    LABEL                        00236800
                      LCLC  &ZOPO(4095)    OPERATION                    00236900
                      LCLC  &ZOPV(4095)    VALUE                        00237000
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00237100
.*                                                                      00237200
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00237300
.******************************************************************     00237400
.***AL.L10 IXZXIXSM FMT=LIST MF=S!L PARAMETERS                          00237500
.******************************************************************     00237600
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00237700
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00237800
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00237900
&XMFATTR              SETC  '0D'                                        00238000
.*                                                                      00238100
&ZOPN                 SETA  &ZOPN+1                                     00238200
&ZOPL(&ZOPN)          SETC  ' '                                         00238300
                      AIF   (&SYSALVL NE 0).ZALVL6A                     00238400
&ZOPO(&ZOPN)          SETC  'B'                                         00238500
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00238600
                      AGO   .ZALVL6B                                    00238700
.ZALVL6A              ANOP                                              00238800
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00238900
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00239000
.ZALVL6B              ANOP                                              00239100
&ZOPD(&ZOPN)          SETC  '++ IXZXIXSM ARG PARMS'                     00239200
.*                                                                      00239300
&ZOPN                 SETA  &ZOPN+1                                     00239400
&ZOPL(&ZOPN)          SETC  ' '                                         00239500
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00239600
&ZOPV(&ZOPN)          SETC  '1'                                         00239700
&ZOPD(&ZOPN)          SETC  ' '                                         00239800
.*                                                                      00239900
.ZLMFSL2              ANOP  ,                                           00240000
.*-------------------------------------------------------------------   00240100
.***AM.L00  IXZXIXSM FMT=LIST name                                      00240200
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00240300
&ZOPN                 SETA &ZOPN+1                                      00240400
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00240500
&ZOPO(&ZOPN)          SETC 'EQU'                                        00240600
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00240700
&ZOPD(&ZOPN)          SETC '++ IXZXIXSM NAME'                           00240800
.ZLMFSL2M             ANOP  ,                                           00240900
.*-------------------------------------------------------------------   00241000
.***AM.L01  IXZXIXSM FMT=LIST PARAMETERS                                00241100
&ZOPN                 SETA &ZOPN+1                                      00241200
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00241300
&ZOPO(&ZOPN)          SETC 'DS'                                         00241400
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00241500
&ZOPD(&ZOPN)          SETC '++ IXZXIXSM PARM LIST'                      00241600
.*-------------------------------------------------------------------   00241700
.***AM.L02 XVERSION XL1                                                 00241800
&ZOPN                 SETA &ZOPN+1                                      00241900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00242000
&ZOPO(&ZOPN)          SETC 'DS'                                         00242100
&ZOPV(&ZOPN)          SETC 'XL1'                                        00242200
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00242300
.*-------------------------------------------------------------------   00242400
.***AM.L09  XEYECATCH CL6                                               00242500
&ZOPN                 SETA &ZOPN+1                                      00242600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEYECATCH'                        00242700
&ZOPO(&ZOPN)          SETC 'DS'                                         00242800
&ZOPV(&ZOPN)          SETC 'CL6'                                        00242900
&ZOPD(&ZOPN)          SETC '++ CONSTANT  XEYECATCH'                     00243000
.*-------------------------------------------------------------------   00243100
.***AM.L03 XMSGATTR BL.8                                                00243200
&ZOPN                 SETA &ZOPN+1                                      00243300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGATTR'                         00243400
&ZOPO(&ZOPN)          SETC 'DS'                                         00243500
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00243600
&ZOPD(&ZOPN)          SETC '++ INPUT'                                   00243700
.*                                                                      00243800
&ZOPN                 SETA  &ZOPN+1                                     00243900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMSGATTR_J3CONNECT'              00244000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00244100
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00244200
&ZOPD(&ZOPN)          SETC  '++ XMSGATTR.'                              00244300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).J3CONNECT'                    00244400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00244500
.*                                                                      00244600
&ZOPN                 SETA  &ZOPN+1                                     00244700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMSGATTR_EXPRESS'                00244800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00244900
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00245000
&ZOPD(&ZOPN)          SETC  '++ XMSGATTR.'                              00245100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).EXPRESS'                      00245200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00245300
.*-------------------------------------------------------------------   00245400
.***AM.L09  XMBOXNAME CL16                                              00245500
&ZOPN                 SETA &ZOPN+1                                      00245600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMBOXNAME'                        00245700
&ZOPO(&ZOPN)          SETC 'DS'                                         00245800
&ZOPV(&ZOPN)          SETC 'CL16'                                       00245900
&ZOPD(&ZOPN)          SETC '++ &ZXMBOXNAME  XMBOXNAME'                  00246000
.*-------------------------------------------------------------------   00246100
.***AM.L09  XMEMBER CL16                                                00246200
&ZOPN                 SETA &ZOPN+1                                      00246300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMEMBER'                          00246400
&ZOPO(&ZOPN)          SETC 'DS'                                         00246500
&ZOPV(&ZOPN)          SETC 'CL16'                                       00246600
&ZOPD(&ZOPN)          SETC '++ &ZXMEMBER  XMEMBER'                      00246700
.*-------------------------------------------------------------------   00246800
.***AM.L09  XDATA A                                                     00246900
&ZOPN                 SETA &ZOPN+1                                      00247000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATA'                            00247100
&ZOPO(&ZOPN)          SETC 'DS'                                         00247200
&ZOPV(&ZOPN)          SETC 'A'                                          00247300
&ZOPD(&ZOPN)          SETC '++ &ZXDATA  XDATA'                          00247400
.*-------------------------------------------------------------------   00247500
.***AM.L09  XDATALEN F                                                  00247600
&ZOPN                 SETA &ZOPN+1                                      00247700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATALEN'                         00247800
&ZOPO(&ZOPN)          SETC 'DS'                                         00247900
&ZOPV(&ZOPN)          SETC 'F'                                          00248000
&ZOPD(&ZOPN)          SETC '++ &ZXDATALEN  XDATALEN'                    00248100
.*-------------------------------------------------------------------   00248200
.***AM.L09  XREQTOKEN BL.64                                             00248300
&ZOPN                 SETA &ZOPN+1                                      00248400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQTOKEN'                        00248500
&ZOPO(&ZOPN)          SETC 'DS'                                         00248600
&ZOPV(&ZOPN)          SETC 'BL.64'                                      00248700
&ZOPD(&ZOPN)          SETC '++ &ZXREQTOKEN  XREQTOKEN'                  00248800
.*-------------------------------------------------------------------   00248900
.***AM.L09  XREQMBOX CL16                                               00249000
&ZOPN                 SETA &ZOPN+1                                      00249100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQMBOX'                         00249200
&ZOPO(&ZOPN)          SETC 'DS'                                         00249300
&ZOPV(&ZOPN)          SETC 'CL16'                                       00249400
&ZOPD(&ZOPN)          SETC '++ &ZXREQMBOX  XREQMBOX'                    00249500
.*-------------------------------------------------------------------   00249600
.***AM.L09  XDATAALET F                                                 00249700
&ZOPN                 SETA &ZOPN+1                                      00249800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATAALET'                        00249900
&ZOPO(&ZOPN)          SETC 'DS'                                         00250000
&ZOPV(&ZOPN)          SETC 'F'                                          00250100
&ZOPD(&ZOPN)          SETC '++ &ZXDATAALET  XDATAALET'                  00250200
.*-------------------------------------------------------------------   00250300
.***AM.L09  XRESPDALT F                                                 00250400
&ZOPN                 SETA &ZOPN+1                                      00250500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRESPDALT'                        00250600
&ZOPO(&ZOPN)          SETC 'DS'                                         00250700
&ZOPV(&ZOPN)          SETC 'F'                                          00250800
&ZOPD(&ZOPN)          SETC '++ &ZXRESPDALT  XRESPDALT'                  00250900
.*-------------------------------------------------------------------   00251000
.***AM.L09  XECB F                                                      00251100
&ZOPN                 SETA &ZOPN+1                                      00251200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XECB'                             00251300
&ZOPO(&ZOPN)          SETC 'DS'                                         00251400
&ZOPV(&ZOPN)          SETC 'F'                                          00251500
&ZOPD(&ZOPN)          SETC '++ &ZXECB  XECB'                            00251600
.*-------------------------------------------------------------------   00251700
.***AM.L09  XEXIT F                                                     00251800
&ZOPN                 SETA &ZOPN+1                                      00251900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEXIT'                            00252000
&ZOPO(&ZOPN)          SETC 'DS'                                         00252100
&ZOPV(&ZOPN)          SETC 'F'                                          00252200
&ZOPD(&ZOPN)          SETC '++ &ZXEXIT  XEXIT'                          00252300
.*-------------------------------------------------------------------   00252400
.***AM.L09  XCONNECT BL.64                                              00252500
&ZOPN                 SETA &ZOPN+1                                      00252600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONNECT'                         00252700
&ZOPO(&ZOPN)          SETC 'DS'                                         00252800
&ZOPV(&ZOPN)          SETC 'BL.64'                                      00252900
&ZOPD(&ZOPN)          SETC '++ &ZXCONNECT  XCONNECT'                    00253000
.*-------------------------------------------------------------------   00253100
.***AM.L09  XGROUPTOKEN F                                               00253200
&ZOPN                 SETA &ZOPN+1                                      00253300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XGROUPTOKEN'                      00253400
&ZOPO(&ZOPN)          SETC 'DS'                                         00253500
&ZOPV(&ZOPN)          SETC 'F'                                          00253600
&ZOPD(&ZOPN)          SETC '++ &ZXGROUPTOKEN  XGROUPTOKEN'              00253700
.*-------------------------------------------------------------------   00253800
.***AM.L09  XUSERRC F                                                   00253900
&ZOPN                 SETA &ZOPN+1                                      00254000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUSERRC'                          00254100
&ZOPO(&ZOPN)          SETC 'DS'                                         00254200
&ZOPV(&ZOPN)          SETC 'F'                                          00254300
&ZOPD(&ZOPN)          SETC '++ &ZXUSERRC  XUSERRC'                      00254400
.*-------------------------------------------------------------------   00254500
.***AM.L09  XRESPDATA F                                                 00254600
&ZOPN                 SETA &ZOPN+1                                      00254700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRESPDATA'                        00254800
&ZOPO(&ZOPN)          SETC 'DS'                                         00254900
&ZOPV(&ZOPN)          SETC 'F'                                          00255000
&ZOPD(&ZOPN)          SETC '++ &ZXRESPDATA  XRESPDATA'                  00255100
.*-------------------------------------------------------------------   00255200
.***AM.L09  XRESPDLEN F                                                 00255300
&ZOPN                 SETA &ZOPN+1                                      00255400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRESPDLEN'                        00255500
&ZOPO(&ZOPN)          SETC 'DS'                                         00255600
&ZOPV(&ZOPN)          SETC 'F'                                          00255700
&ZOPD(&ZOPN)          SETC '++ &ZXRESPDLEN  XRESPDLEN'                  00255800
.*-------------------------------------------------------------------   00255900
.***AM.L09  XRSV00001 CL4                                               00256000
&ZOPN                 SETA &ZOPN+1                                      00256100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV00001'                        00256200
&ZOPO(&ZOPN)          SETC 'DS'                                         00256300
&ZOPV(&ZOPN)          SETC 'CL4'                                        00256400
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV00001'                     00256500
.*-------------------------------------------------------------------   00256600
.***AM.L09  XMSGTOKEN BL.64                                             00256700
&ZOPN                 SETA &ZOPN+1                                      00256800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGTOKEN'                        00256900
&ZOPO(&ZOPN)          SETC 'DS'                                         00257000
&ZOPV(&ZOPN)          SETC 'BL.64'                                      00257100
&ZOPD(&ZOPN)          SETC '++ &ZXMSGTOKEN  XMSGTOKEN'                  00257200
.*-------------------------------------------------------------------   00257300
.***AM.L09  XRIPSIZE F                                                  00257400
&ZOPN                 SETA &ZOPN+1                                      00257500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRIPSIZE'                         00257600
&ZOPO(&ZOPN)          SETC 'DS'                                         00257700
&ZOPV(&ZOPN)          SETC 'F'                                          00257800
&ZOPD(&ZOPN)          SETC '++ &ZXRIPSIZE  XRIPSIZE'                    00257900
.*-------------------------------------------------------------------   00258000
.***AM.L03 XREQTYPE BL.8                                                00258100
&ZOPN                 SETA &ZOPN+1                                      00258200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQTYPE'                         00258300
&ZOPO(&ZOPN)          SETC 'DS'                                         00258400
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00258500
&ZOPD(&ZOPN)          SETC '++ INPUT'                                   00258600
.*                                                                      00258700
&ZOPN                 SETA  &ZOPN+1                                     00258800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQTYPE_ASYNC'                  00258900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00259000
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00259100
&ZOPD(&ZOPN)          SETC  '++ XREQTYPE.'                              00259200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ASYNC'                        00259300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00259400
.*                                                                      00259500
&ZOPN                 SETA  &ZOPN+1                                     00259600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQTYPE_SYNC'                   00259700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00259800
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00259900
&ZOPD(&ZOPN)          SETC  '++ XREQTYPE.'                              00260000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYNC'                         00260100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00260200
.*                                                                      00260300
&ZOPN                 SETA  &ZOPN+1                                     00260400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQTYPE_ASYNCACK'               00260500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00260600
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00260700
&ZOPD(&ZOPN)          SETC  '++ XREQTYPE.'                              00260800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ASYNCACK'                     00260900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00261000
.*                                                                      00261100
&ZOPN                 SETA  &ZOPN+1                                     00261200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQTYPE_COMM'                   00261300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00261400
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00261500
&ZOPD(&ZOPN)          SETC  '++ XREQTYPE.'                              00261600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).COMM'                         00261700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00261800
.*-------------------------------------------------------------------   00261900
.***AM.L03 XSEGTYPE BL.8                                                00262000
&ZOPN                 SETA &ZOPN+1                                      00262100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSEGTYPE'                         00262200
&ZOPO(&ZOPN)          SETC 'DS'                                         00262300
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00262400
&ZOPD(&ZOPN)          SETC '++ INPUT'                                   00262500
.*                                                                      00262600
&ZOPN                 SETA  &ZOPN+1                                     00262700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSEGTYPE_SINGLE'                 00262800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00262900
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00263000
&ZOPD(&ZOPN)          SETC  '++ XSEGTYPE.'                              00263100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SINGLE'                       00263200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00263300
.*                                                                      00263400
&ZOPN                 SETA  &ZOPN+1                                     00263500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSEGTYPE_FIRST'                  00263600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00263700
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00263800
&ZOPD(&ZOPN)          SETC  '++ XSEGTYPE.'                              00263900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).FIRST'                        00264000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00264100
.*                                                                      00264200
&ZOPN                 SETA  &ZOPN+1                                     00264300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSEGTYPE_MIDDLE'                 00264400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00264500
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00264600
&ZOPD(&ZOPN)          SETC  '++ XSEGTYPE.'                              00264700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MIDDLE'                       00264800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00264900
.*                                                                      00265000
&ZOPN                 SETA  &ZOPN+1                                     00265100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSEGTYPE_LAST'                   00265200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00265300
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00265400
&ZOPD(&ZOPN)          SETC  '++ XSEGTYPE.'                              00265500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LAST'                         00265600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00265700
.*                                                                      00265800
&ZOPN                 SETA  &ZOPN+1                                     00265900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSEGTYPE_ABORT'                  00266000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00266100
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00266200
&ZOPD(&ZOPN)          SETC  '++ XSEGTYPE.'                              00266300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ABORT'                        00266400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00266500
.*-------------------------------------------------------------------   00266600
.***AM.L03 XKEYS BL.8                                                   00266700
&ZOPN                 SETA &ZOPN+1                                      00266800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKEYS'                            00266900
&ZOPO(&ZOPN)          SETC 'DS'                                         00267000
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00267100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00267200
.*                                                                      00267300
&ZOPN                 SETA  &ZOPN+1                                     00267400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_REQTYPE'                 00267500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00267600
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00267700
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00267800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).REQTYPE'                      00267900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00268000
.*                                                                      00268100
&ZOPN                 SETA  &ZOPN+1                                     00268200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_REQTOKEN'                00268300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00268400
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00268500
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00268600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).REQTOKEN'                     00268700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00268800
.*                                                                      00268900
&ZOPN                 SETA  &ZOPN+1                                     00269000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_REQMBOX'                 00269100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00269200
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00269300
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00269400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).REQMBOX'                      00269500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00269600
.*                                                                      00269700
&ZOPN                 SETA  &ZOPN+1                                     00269800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_EXIT'                    00269900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00270000
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00270100
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00270200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).EXIT'                         00270300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00270400
.*                                                                      00270500
&ZOPN                 SETA  &ZOPN+1                                     00270600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_SEGTYPE'                 00270700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00270800
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00270900
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00271000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SEGTYPE'                      00271100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00271200
.*                                                                      00271300
&ZOPN                 SETA  &ZOPN+1                                     00271400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_CONNECT'                 00271500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00271600
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00271700
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00271800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CONNECT'                      00271900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00272000
.*                                                                      00272100
&ZOPN                 SETA  &ZOPN+1                                     00272200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_MSGTOKEN'                00272300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00272400
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00272500
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00272600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MSGTOKEN'                     00272700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00272800
.*                                                                      00272900
&ZOPN                 SETA  &ZOPN+1                                     00273000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_MSGATTR'                 00273100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00273200
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00273300
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00273400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MSGATTR'                      00273500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00273600
.*-------------------------------------------------------------------   00273700
.***AM.L03 XKEYS1 BL.8                                                  00273800
&ZOPN                 SETA &ZOPN+1                                      00273900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKEYS1'                           00274000
&ZOPO(&ZOPN)          SETC 'DS'                                         00274100
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00274200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00274300
.*                                                                      00274400
&ZOPN                 SETA  &ZOPN+1                                     00274500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_ECB'                     00274600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00274700
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00274800
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00274900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ECB'                          00275000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00275100
.*                                                                      00275200
&ZOPN                 SETA  &ZOPN+1                                     00275300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_DATAALET'                00275400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00275500
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00275600
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00275700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DATAALET'                     00275800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00275900
.*                                                                      00276000
&ZOPN                 SETA  &ZOPN+1                                     00276100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_RELEASE_CADS'            00276200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00276300
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00276400
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00276500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).RELEASE_CADS'                 00276600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00276700
.*                                                                      00276800
&ZOPN                 SETA  &ZOPN+1                                     00276900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_RIPSIZE'                 00277000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00277100
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00277200
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00277300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).RIPSIZE'                      00277400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00277500
.*-------------------------------------------------------------------   00277600
.***AM.L10 END OF IXZXIXSM LIST PARAMETERS                              00277700
&ZOPN                 SETA &ZOPN+1                                      00277800
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00277900
&ZOPO(&ZOPN)          SETC 'EQU'                                        00278000
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00278100
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00278200
.*                                                                      00278300
&ZOPN                 SETA &ZOPN+1                                      00278400
&ZOPL(&ZOPN)          SETC ' '                                          00278500
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00278600
&ZOPV(&ZOPN)          SETC '1'                                          00278700
&ZOPD(&ZOPN)          SETC ' '                                          00278800
.*-------------------------------------------------------------------   00278900
.***AL.L12 IXZXIXSM FMT=LIST MF=S!L PARAMETERS                          00279000
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00279100
.*                                                                      00279200
&ZOPN                 SETA  &ZOPN+1                                     00279300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00279400
&ZOPO(&ZOPN)          SETC  'DC'                                        00279500
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00279600
&ZOPD(&ZOPN)          SETC  '++ IXZXIXSM ARG PARMS'                     00279700
.*                                                                      00279800
.ZLMFSLX              ANOP  ,                                           00279900
.*-------------------------------------------------------------------   00280000
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00280100
&ZPLLEN               SETA 132                                          00280200
.*                                                                      00280300
.******************************************************************     00280400
.***AI.L01 IXZXIXSM FMT=LIST FILL IN PARAMETER AREA                     00280500
.******************************************************************     00280600
                      ACTR  10000                                       00280700
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00280800
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00280900
&ZCVAL                SETC  'LAE'          XAX MODE                     00281000
.ZIMFXA               ANOP ,                                            00281100
.*                                                                      00281200
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00281300
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00281400
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00281500
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00281600
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00281700
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00281800
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00281900
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00282000
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00282100
&ZOPN                 SETA  &ZOPN+1                                     00282200
&ZOPL(&ZOPN)          SETC  ' '                                         00282300
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00282400
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00282500
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00282600
                      AGO   .ZIMFNX                                     00282700
.*                                                                      00282800
.ZIMFN2               ANOP ,                                            00282900
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     00283000
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00283100
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00283200
&ZOPN                 SETA  &ZOPN+1                                     00283300
&ZOPL(&ZOPN)          SETC  ' '                                         00283400
&ZOPO(&ZOPN)          SETC  'LAE'                                       00283500
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00283600
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00283700
                      AGO   .ZIMFNX                                     00283800
.ZIMFNX1              ANOP ,                                            00283900
&ZOPN                 SETA  &ZOPN+1                                     00284000
&ZOPL(&ZOPN)          SETC  ' '                                         00284100
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00284200
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00284300
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00284400
.ZIMFNX               ANOP ,                                            00284500
.********************************************************************   00284600
.***AI.L02 IXZXIXSM FMT=LIST INITIALIZE PARAMETER AREA                  00284700
.********************************************************************   00284800
.***AI.L03 MF=(SLE)                                                     00284900
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00285000
.*                                                                      00285100
&ZOPN                 SETA  &ZOPN+1                                     00285200
&ZOPL(&ZOPN)          SETC  ' '                                         00285300
&ZOPO(&ZOPN)          SETC  'XC'                                        00285400
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00285500
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00285600
.ZIMFLX               ANOP  ,                                           00285700
.*-------------------------------------------------------------------   00285800
.***AI.L04B XVERSION XL1                                                00285900
                      AIF   (&XPLISTVER EQ 0).ZIMFVZ                    00286000
&ZOPN                 SETA  &ZOPN+1                                     00286100
&ZOPL(&ZOPN)          SETC  ' '                                         00286200
&ZOPO(&ZOPN)          SETC  'MVI'                                       00286300
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00286400
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00286500
.ZIMFVZ               ANOP  ,                                           00286600
.*-------------------------------------------------------------------   00286700
.***AI.L60 XEYECATCH CL6                                                00286800
&ZOPN                 SETA  &ZOPN+1                                     00286900
&ZOPL(&ZOPN)          SETC  ' '                                         00287000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00287100
&ZOPV(&ZOPN)          SETC  '1(6,1),=CL6''YIXSM '''                     00287200
&ZOPD(&ZOPN)          SETC  '++ CL6 CONSTANT'                           00287300
.*-------------------------------------------------------------------   00287400
.***AI.L05 XMSGATTR BL1                                                 00287500
&ZW                   SETC  ''                                          00287600
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00287700
.*-------------------------------------------------------------------   00287800
.***AI.L08 XMSGATTR "J3CONNECT"                                         00287900
.***      BL1'1XXXXXXX'                                                 00288000
         AIF   ('&XMSGATTR' NE 'J3CONNECT').ZI4A                        00288100
&ZW                   SETC  '&ZW.1'                                     00288200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00288300
                      AGO   .ZI4C                                       00288400
.*                                                                      00288500
.ZI4A                 ANOP  ,                                           00288600
&ZW                   SETC  '&ZW.0'                                     00288700
.ZI4C                 ANOP  ,                                           00288800
.*-------------------------------------------------------------------   00288900
.***AI.L08 XMSGATTR "EXPRESS"                                           00289000
.***      BL1'X1XXXXXX'                                                 00289100
         AIF   ('&XMSGATTR' NE 'EXPRESS').ZI5A                          00289200
&ZW                   SETC  '&ZW.1000000'                               00289300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00289400
                      AGO   .ZI5C                                       00289500
.*                                                                      00289600
.ZI5A                 ANOP  ,                                           00289700
&ZW                   SETC  '&ZW.0000000'                               00289800
.ZI5C                 ANOP  ,                                           00289900
.*-------------------------------------------------------------------   00290000
.***AI.L11 XMSGATTR BL1                                                 00290100
                      AIF   ('&ZCLNG' NE 'YES').ZI5E  ALL ZERO BITS     00290200
&ZOPN                 SETA  &ZOPN+1                                     00290300
&ZOPL(&ZOPN)          SETC  ' '                                         00290400
&ZOPO(&ZOPN)          SETC  'OI'                                        00290500
&ZOPV(&ZOPN)          SETC  '7(1),B''&ZW'''                             00290600
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00290700
.ZI5E                 ANOP  ,                                           00290800
.*-------------------------------------------------------------------   00290900
.***AI.L25  XMBOXNAME CL16                                              00291000
                      AIF   ('&ZXMBOXNAME' EQ '').ZI6E                  00291100
                      AIF   ('&ZXMBOXNAME' EQ 'OUTPUT').ZI6E            00291200
&ZCGPR                SETC  '&XMBOXNAME'                                00291300
.*                                                                      00291400
                      AIF   ('&XMBOXNAME'(1,1) NE '(').ZI6B             00291500
&ZCGPR   SETC  '0('.'&XMBOXNAME'(2,K'&XMBOXNAME-2).')'                  00291600
.ZI6B                 ANOP  ,                                           00291700
.*                                                                      00291800
&ZOPN                 SETA  &ZOPN+1                                     00291900
&ZOPL(&ZOPN)          SETC  ' '                                         00292000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00292100
&ZOPV(&ZOPN)          SETC  '8(16,1),&ZCGPR'                            00292200
&ZOPD(&ZOPN)          SETC  '++ &ZXMBOXNAME XMBOXNAME'                  00292300
.*                                                                      00292400
.ZI6E                 ANOP  ,                                           00292500
.*-------------------------------------------------------------------   00292600
.***AI.L25  XMEMBER CL16                                                00292700
                      AIF   ('&ZXMEMBER' EQ '').ZI7E                    00292800
                      AIF   ('&ZXMEMBER' EQ 'OUTPUT').ZI7E              00292900
&ZCGPR                SETC  '&XMEMBER'                                  00293000
.*                                                                      00293100
                      AIF   ('&XMEMBER'(1,1) NE '(').ZI7B               00293200
&ZCGPR   SETC  '0('.'&XMEMBER'(2,K'&XMEMBER-2).')'                      00293300
.ZI7B                 ANOP  ,                                           00293400
.*                                                                      00293500
&ZOPN                 SETA  &ZOPN+1                                     00293600
&ZOPL(&ZOPN)          SETC  ' '                                         00293700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00293800
&ZOPV(&ZOPN)          SETC  '24(16,1),&ZCGPR'                           00293900
&ZOPD(&ZOPN)          SETC  '++ &ZXMEMBER XMEMBER'                      00294000
.*                                                                      00294100
.ZI7E                 ANOP  ,                                           00294200
.*-------------------------------------------------------------------   00294300
.***AI.L25  XDATA AL4                                                   00294400
                      AIF   ('&ZXDATA' EQ '').ZI8E                      00294500
                      AIF   ('&ZXDATA' EQ 'OUTPUT').ZI8E                00294600
&ZCGPR                SETC  '&XDATA'                                    00294700
.*                                                                      00294800
                      AIF   ('&XDATA'(1,1) NE '(').ZI8B                 00294900
&ZCGPR   SETC  '0('.'&XDATA'(2,K'&XDATA-2).')'                          00295000
                      AGO   .ZI8D                                       00295100
.ZI8B                 ANOP  ,                                           00295200
.*                                                                      00295300
&ZC                   SETC  '&XDATA'(1,1)                               00295400
                      AIF   (T'&ZC NE 'N').ZI8D                         00295500
&ZC                   SETC  '&XDATA'                                    00295600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI8D                00295700
&ZCGPR                SETC  '=AL4(&XDATA)'                              00295800
.*                                                                      00295900
.ZI8D                 ANOP  ,                                           00296000
.*                                                                      00296100
&ZOPN                 SETA  &ZOPN+1                                     00296200
&ZOPL(&ZOPN)          SETC  ' '                                         00296300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00296400
&ZOPV(&ZOPN)          SETC  '40(4,1),&ZCGPR'                            00296500
&ZOPD(&ZOPN)          SETC  '++ &ZXDATA XDATA'                          00296600
.*                                                                      00296700
.ZI8E                 ANOP  ,                                           00296800
.*-------------------------------------------------------------------   00296900
.***AI.L25  XDATALEN F                                                  00297000
                      AIF   ('&ZXDATALEN' EQ '').ZI9E                   00297100
                      AIF   ('&ZXDATALEN' EQ 'OUTPUT').ZI9E             00297200
&ZCGPR                SETC  '&XDATALEN'                                 00297300
.*                                                                      00297400
                      AIF   ('&XDATALEN'(1,1) NE '(').ZI9B              00297500
&ZCGPR   SETC  '0('.'&XDATALEN'(2,K'&XDATALEN-2).')'                    00297600
                      AGO   .ZI9D                                       00297700
.ZI9B                 ANOP  ,                                           00297800
.*                                                                      00297900
&ZC                   SETC  '&XDATALEN'(1,1)                            00298000
                      AIF   (T'&ZC NE 'N').ZI9D                         00298100
&ZC                   SETC  '&XDATALEN'                                 00298200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI9D                00298300
&ZCGPR                SETC  '=FL4''&XDATALEN'''                         00298400
.*                                                                      00298500
.ZI9D                 ANOP  ,                                           00298600
.*                                                                      00298700
&ZOPN                 SETA  &ZOPN+1                                     00298800
&ZOPL(&ZOPN)          SETC  ' '                                         00298900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00299000
&ZOPV(&ZOPN)          SETC  '44(4,1),&ZCGPR'                            00299100
&ZOPD(&ZOPN)          SETC  '++ &ZXDATALEN XDATALEN'                    00299200
.*                                                                      00299300
.ZI9E                 ANOP  ,                                           00299400
.*-------------------------------------------------------------------   00299500
.***AI.L25  XREQMBOX CL16                                               00299600
                      AIF   ('&ZXREQMBOX' EQ '').ZI11E                  00299700
                      AIF   ('&ZXREQMBOX' EQ 'OUTPUT').ZI11E            00299800
&ZCGPR                SETC  '&XREQMBOX'                                 00299900
.*                                                                      00300000
                      AIF   ('&XREQMBOX'(1,1) NE '(').ZI11B             00300100
&ZCGPR   SETC  '0('.'&XREQMBOX'(2,K'&XREQMBOX-2).')'                    00300200
                      AGO   .ZI11D                                      00300300
.ZI11B                ANOP  ,                                           00300400
.*                                                                      00300500
                      AIF   ('&REQMBOX(1)' EQ '').ZI11I  OMITTED        00300600
&ZC                   SETC  ']NONE]'                                    00300700
                      AIF   ('&XREQMBOX' NE '&ZC').ZI11C                00300800
.ZI11I                ANOP  ,                                           00300900
&ZCGPR                SETC  '=CL16''&XREQMBOX'''                        00301000
.ZI11C                ANOP  ,                                           00301100
.*                                                                      00301200
.ZI11D                ANOP  ,                                           00301300
.*                                                                      00301400
&ZOPN                 SETA  &ZOPN+1                                     00301500
&ZOPL(&ZOPN)          SETC  ' '                                         00301600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00301700
&ZOPV(&ZOPN)          SETC  '56(16,1),&ZCGPR'                           00301800
&ZOPD(&ZOPN)          SETC  '++ &ZXREQMBOX XREQMBOX'                    00301900
.*                                                                      00302000
.ZI11E                ANOP  ,                                           00302100
.*-------------------------------------------------------------------   00302200
.***AI.L25  XDATAALET F                                                 00302300
                      AIF   ('&ZXDATAALET' EQ '').ZI12E                 00302400
                      AIF   ('&ZXDATAALET' EQ 'OUTPUT').ZI12E           00302500
&ZCGPR                SETC  '&XDATAALET'                                00302600
         AIF   ('&XDATAALET' EQ '0').ZI12E                              00302700
         AIF   ('&XDATAALET' EQ '0').ZI12E                              00302800
.*                                                                      00302900
                      AIF   ('&XDATAALET'(1,1) NE '(').ZI12B            00303000
&ZCGPR   SETC  '0('.'&XDATAALET'(2,K'&XDATAALET-2).')'                  00303100
                      AGO   .ZI12D                                      00303200
.ZI12B                ANOP  ,                                           00303300
.*                                                                      00303400
&ZC                   SETC  '&XDATAALET'(1,1)                           00303500
                      AIF   (T'&ZC NE 'N').ZI12D                        00303600
&ZC                   SETC  '&XDATAALET'                                00303700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI12D               00303800
&ZCGPR                SETC  '=FL4''&XDATAALET'''                        00303900
.*                                                                      00304000
.ZI12D                ANOP  ,                                           00304100
.*                                                                      00304200
&ZOPN                 SETA  &ZOPN+1                                     00304300
&ZOPL(&ZOPN)          SETC  ' '                                         00304400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00304500
&ZOPV(&ZOPN)          SETC  '72(4,1),&ZCGPR'                            00304600
&ZOPD(&ZOPN)          SETC  '++ &ZXDATAALET XDATAALET'                  00304700
.*                                                                      00304800
.ZI12E                ANOP  ,                                           00304900
.*-------------------------------------------------------------------   00305000
.***AI.L25  XRESPDALT F                                                 00305100
                      AIF   ('&ZXRESPDALT' EQ '').ZI13E                 00305200
                      AIF   ('&ZXRESPDALT' EQ 'OUTPUT').ZI13E           00305300
&ZCGPR                SETC  '&XRESPDALT'                                00305400
         AIF   ('&XRESPDALT' EQ '0').ZI13E                              00305500
         AIF   ('&XRESPDALT' EQ '0').ZI13E                              00305600
.*                                                                      00305700
                      AIF   ('&XRESPDALT'(1,1) NE '(').ZI13B            00305800
&ZCGPR   SETC  '0('.'&XRESPDALT'(2,K'&XRESPDALT-2).')'                  00305900
                      AGO   .ZI13D                                      00306000
.ZI13B                ANOP  ,                                           00306100
.*                                                                      00306200
&ZC                   SETC  '&XRESPDALT'(1,1)                           00306300
                      AIF   (T'&ZC NE 'N').ZI13D                        00306400
&ZC                   SETC  '&XRESPDALT'                                00306500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI13D               00306600
&ZCGPR                SETC  '=FL4''&XRESPDALT'''                        00306700
.*                                                                      00306800
.ZI13D                ANOP  ,                                           00306900
.*                                                                      00307000
&ZOPN                 SETA  &ZOPN+1                                     00307100
&ZOPL(&ZOPN)          SETC  ' '                                         00307200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00307300
&ZOPV(&ZOPN)          SETC  '76(4,1),&ZCGPR'                            00307400
&ZOPD(&ZOPN)          SETC  '++ &ZXRESPDALT XRESPDALT'                  00307500
.*                                                                      00307600
.ZI13E                ANOP  ,                                           00307700
.*-------------------------------------------------------------------   00307800
.***AI.L18  XECB F                                                      00307900
         AIF   ('&XECB' NE 'NONE').ZI14                                 00308000
&ZXECB                SETC  ''             RESET INPUT/OUTPUT           00308100
.ZI14                 ANOP  ,                                           00308200
.*-------------------------------------------------------------------   00308300
.***AI.L25  XECB F                                                      00308400
                      AIF   ('&ZXECB' EQ '').ZI14E                      00308500
                      AIF   ('&ZXECB' EQ 'OUTPUT').ZI14E                00308600
&ZCGPR                SETC  '&XECB'                                     00308700
.*                                                                      00308800
                      AIF   ('&XECB'(1,1) NE '(').ZI14B                 00308900
&ZCGPR   SETC  '0('.'&XECB'(2,K'&XECB-2).')'                            00309000
                      AGO   .ZI14D                                      00309100
.ZI14B                ANOP  ,                                           00309200
.*                                                                      00309300
&ZC                   SETC  '&XECB'(1,1)                                00309400
                      AIF   (T'&ZC NE 'N').ZI14D                        00309500
&ZC                   SETC  '&XECB'                                     00309600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI14D               00309700
&ZCGPR                SETC  '=FL4''&XECB'''                             00309800
.*                                                                      00309900
.ZI14D                ANOP  ,                                           00310000
.*                                                                      00310100
&ZOPN                 SETA  &ZOPN+1                                     00310200
&ZOPL(&ZOPN)          SETC  ' '                                         00310300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00310400
&ZOPV(&ZOPN)          SETC  '80(4,1),&ZCGPR'                            00310500
&ZOPD(&ZOPN)          SETC  '++ &ZXECB XECB'                            00310600
.*                                                                      00310700
.ZI14E                ANOP  ,                                           00310800
.*-------------------------------------------------------------------   00310900
.***AI.L18  XEXIT F                                                     00311000
         AIF   ('&XEXIT' NE 'NONE').ZI15                                00311100
&ZXEXIT               SETC  ''             RESET INPUT/OUTPUT           00311200
.ZI15                 ANOP  ,                                           00311300
.*-------------------------------------------------------------------   00311400
.***AI.L25  XEXIT F                                                     00311500
                      AIF   ('&ZXEXIT' EQ '').ZI15E                     00311600
                      AIF   ('&ZXEXIT' EQ 'OUTPUT').ZI15E               00311700
&ZCGPR                SETC  '&XEXIT'                                    00311800
.*                                                                      00311900
                      AIF   ('&XEXIT'(1,1) NE '(').ZI15B                00312000
&ZCGPR   SETC  '0('.'&XEXIT'(2,K'&XEXIT-2).')'                          00312100
                      AGO   .ZI15D                                      00312200
.ZI15B                ANOP  ,                                           00312300
.*                                                                      00312400
&ZC                   SETC  '&XEXIT'(1,1)                               00312500
                      AIF   (T'&ZC NE 'N').ZI15D                        00312600
&ZC                   SETC  '&XEXIT'                                    00312700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI15D               00312800
&ZCGPR                SETC  '=FL4''&XEXIT'''                            00312900
.*                                                                      00313000
.ZI15D                ANOP  ,                                           00313100
.*                                                                      00313200
&ZOPN                 SETA  &ZOPN+1                                     00313300
&ZOPL(&ZOPN)          SETC  ' '                                         00313400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00313500
&ZOPV(&ZOPN)          SETC  '84(4,1),&ZCGPR'                            00313600
&ZOPD(&ZOPN)          SETC  '++ &ZXEXIT XEXIT'                          00313700
.*                                                                      00313800
.ZI15E                ANOP  ,                                           00313900
.*-------------------------------------------------------------------   00314000
.***AI.L25  XCONNECT XL8                                                00314100
                      AIF   ('&ZXCONNECT' EQ '').ZI16E                  00314200
                      AIF   ('&ZXCONNECT' EQ 'OUTPUT').ZI16E            00314300
&ZCGPR                SETC  '&XCONNECT'                                 00314400
         AIF   ('&XCONNECT' EQ '0').ZI16E                               00314500
         AIF   ('&XCONNECT' EQ '0').ZI16E                               00314600
.*                                                                      00314700
                      AIF   ('&XCONNECT'(1,1) NE '(').ZI16B             00314800
&ZCGPR   SETC  '0('.'&XCONNECT'(2,K'&XCONNECT-2).')'                    00314900
                      AGO   .ZI16D                                      00315000
.ZI16B                ANOP  ,                                           00315100
.*                                                                      00315200
&ZC                   SETC  '&XCONNECT'(1,1)                            00315300
                      AIF   (T'&ZC NE 'N').ZI16D                        00315400
&ZC                   SETC  '&XCONNECT'                                 00315500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI16D               00315600
&ZCGPR                SETC  '=BL8''&XCONNECT'''                         00315700
.*                                                                      00315800
.ZI16D                ANOP  ,                                           00315900
.*                                                                      00316000
&ZOPN                 SETA  &ZOPN+1                                     00316100
&ZOPL(&ZOPN)          SETC  ' '                                         00316200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00316300
&ZOPV(&ZOPN)          SETC  '88(8,1),&ZCGPR'                            00316400
&ZOPD(&ZOPN)          SETC  '++ &ZXCONNECT XCONNECT'                    00316500
.*                                                                      00316600
.ZI16E                ANOP  ,                                           00316700
.*-------------------------------------------------------------------   00316800
.***AI.L25  XGROUPTOKEN F                                               00316900
                      AIF   ('&ZXGROUPTOKEN' EQ '').ZI17E               00317000
                      AIF   ('&ZXGROUPTOKEN' EQ 'OUTPUT').ZI17E         00317100
&ZCGPR                SETC  '&XGROUPTOKEN'                              00317200
.*                                                                      00317300
                      AIF   ('&XGROUPTOKEN'(1,1) NE '(').ZI17B          00317400
&ZCGPR   SETC  '0('.'&XGROUPTOKEN'(2,K'&XGROUPTOKEN-2).')'              00317500
                      AGO   .ZI17D                                      00317600
.ZI17B                ANOP  ,                                           00317700
.*                                                                      00317800
&ZC                   SETC  '&XGROUPTOKEN'(1,1)                         00317900
                      AIF   (T'&ZC NE 'N').ZI17D                        00318000
&ZC                   SETC  '&XGROUPTOKEN'                              00318100
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI17D               00318200
&ZCGPR                SETC  '=FL4''&XGROUPTOKEN'''                      00318300
.*                                                                      00318400
.ZI17D                ANOP  ,                                           00318500
.*                                                                      00318600
&ZOPN                 SETA  &ZOPN+1                                     00318700
&ZOPL(&ZOPN)          SETC  ' '                                         00318800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00318900
&ZOPV(&ZOPN)          SETC  '96(4,1),&ZCGPR'                            00319000
&ZOPD(&ZOPN)          SETC  '++ &ZXGROUPTOKEN XGROUPTOKEN'              00319100
.*                                                                      00319200
.ZI17E                ANOP  ,                                           00319300
.*-------------------------------------------------------------------   00319400
.***AI.L25  XRESPDATA F                                                 00319500
                      AIF   ('&ZXRESPDATA' EQ '').ZI19E                 00319600
                      AIF   ('&ZXRESPDATA' EQ 'OUTPUT').ZI19E           00319700
&ZCGPR                SETC  '&XRESPDATA'                                00319800
         AIF   ('&XRESPDATA' EQ '0').ZI19E                              00319900
         AIF   ('&XRESPDATA' EQ '0').ZI19E                              00320000
.*                                                                      00320100
                      AIF   ('&XRESPDATA'(1,1) NE '(').ZI19B            00320200
&ZCGPR   SETC  '0('.'&XRESPDATA'(2,K'&XRESPDATA-2).')'                  00320300
                      AGO   .ZI19D                                      00320400
.ZI19B                ANOP  ,                                           00320500
.*                                                                      00320600
&ZC                   SETC  '&XRESPDATA'(1,1)                           00320700
                      AIF   (T'&ZC NE 'N').ZI19D                        00320800
&ZC                   SETC  '&XRESPDATA'                                00320900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI19D               00321000
&ZCGPR                SETC  '=FL4''&XRESPDATA'''                        00321100
.*                                                                      00321200
.ZI19D                ANOP  ,                                           00321300
.*                                                                      00321400
&ZOPN                 SETA  &ZOPN+1                                     00321500
&ZOPL(&ZOPN)          SETC  ' '                                         00321600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00321700
&ZOPV(&ZOPN)          SETC  '104(4,1),&ZCGPR'                           00321800
&ZOPD(&ZOPN)          SETC  '++ &ZXRESPDATA XRESPDATA'                  00321900
.*                                                                      00322000
.ZI19E                ANOP  ,                                           00322100
.*-------------------------------------------------------------------   00322200
.***AI.L25  XRESPDLEN F                                                 00322300
                      AIF   ('&ZXRESPDLEN' EQ '').ZI20E                 00322400
                      AIF   ('&ZXRESPDLEN' EQ 'OUTPUT').ZI20E           00322500
&ZCGPR                SETC  '&XRESPDLEN'                                00322600
         AIF   ('&XRESPDLEN' EQ '0').ZI20E                              00322700
         AIF   ('&XRESPDLEN' EQ '0').ZI20E                              00322800
.*                                                                      00322900
                      AIF   ('&XRESPDLEN'(1,1) NE '(').ZI20B            00323000
&ZCGPR   SETC  '0('.'&XRESPDLEN'(2,K'&XRESPDLEN-2).')'                  00323100
                      AGO   .ZI20D                                      00323200
.ZI20B                ANOP  ,                                           00323300
.*                                                                      00323400
&ZC                   SETC  '&XRESPDLEN'(1,1)                           00323500
                      AIF   (T'&ZC NE 'N').ZI20D                        00323600
&ZC                   SETC  '&XRESPDLEN'                                00323700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI20D               00323800
&ZCGPR                SETC  '=FL4''&XRESPDLEN'''                        00323900
.*                                                                      00324000
.ZI20D                ANOP  ,                                           00324100
.*                                                                      00324200
&ZOPN                 SETA  &ZOPN+1                                     00324300
&ZOPL(&ZOPN)          SETC  ' '                                         00324400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00324500
&ZOPV(&ZOPN)          SETC  '108(4,1),&ZCGPR'                           00324600
&ZOPD(&ZOPN)          SETC  '++ &ZXRESPDLEN XRESPDLEN'                  00324700
.*                                                                      00324800
.ZI20E                ANOP  ,                                           00324900
.*-------------------------------------------------------------------   00325000
.***AI.L25  XRIPSIZE F                                                  00325100
                      AIF   ('&ZXRIPSIZE' EQ '').ZI23E                  00325200
                      AIF   ('&ZXRIPSIZE' EQ 'OUTPUT').ZI23E            00325300
&ZCGPR                SETC  '&XRIPSIZE'                                 00325400
         AIF   ('&XRIPSIZE' EQ '0').ZI23E                               00325500
         AIF   ('&XRIPSIZE' EQ '0').ZI23E                               00325600
.*                                                                      00325700
                      AIF   ('&XRIPSIZE'(1,1) NE '(').ZI23B             00325800
&ZCGPR   SETC  '0('.'&XRIPSIZE'(2,K'&XRIPSIZE-2).')'                    00325900
                      AGO   .ZI23D                                      00326000
.ZI23B                ANOP  ,                                           00326100
.*                                                                      00326200
&ZC                   SETC  '&XRIPSIZE'(1,1)                            00326300
                      AIF   (T'&ZC NE 'N').ZI23D                        00326400
&ZC                   SETC  '&XRIPSIZE'                                 00326500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI23D               00326600
&ZCGPR                SETC  '=FL4''&XRIPSIZE'''                         00326700
.*                                                                      00326800
.ZI23D                ANOP  ,                                           00326900
.*                                                                      00327000
&ZOPN                 SETA  &ZOPN+1                                     00327100
&ZOPL(&ZOPN)          SETC  ' '                                         00327200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00327300
&ZOPV(&ZOPN)          SETC  '124(4,1),&ZCGPR'                           00327400
&ZOPD(&ZOPN)          SETC  '++ &ZXRIPSIZE XRIPSIZE'                    00327500
.*                                                                      00327600
.ZI23E                ANOP  ,                                           00327700
.*-------------------------------------------------------------------   00327800
.***AI.L05 XREQTYPE BL1                                                 00327900
&ZW                   SETC  ''                                          00328000
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00328100
.*-------------------------------------------------------------------   00328200
.***AI.L08 XREQTYPE "ASYNC"                                             00328300
.***      BL1'1XXXXXXX'                                                 00328400
         AIF   ('&XREQTYPE' NE 'ASYNC').ZI25A                           00328500
&ZW                   SETC  '&ZW.1'                                     00328600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00328700
                      AGO   .ZI25C                                      00328800
.*                                                                      00328900
.ZI25A                ANOP  ,                                           00329000
&ZW                   SETC  '&ZW.0'                                     00329100
.ZI25C                ANOP  ,                                           00329200
.*-------------------------------------------------------------------   00329300
.***AI.L08 XREQTYPE "SYNC"                                              00329400
.***      BL1'X1XXXXXX'                                                 00329500
         AIF   ('&XREQTYPE' NE 'SYNC').ZI26A                            00329600
&ZW                   SETC  '&ZW.1'                                     00329700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00329800
                      AGO   .ZI26C                                      00329900
.*                                                                      00330000
.ZI26A                ANOP  ,                                           00330100
&ZW                   SETC  '&ZW.0'                                     00330200
.ZI26C                ANOP  ,                                           00330300
.*-------------------------------------------------------------------   00330400
.***AI.L08 XREQTYPE "ASYNCACK"                                          00330500
.***      BL1'XX1XXXXX'                                                 00330600
         AIF   ('&XREQTYPE' NE 'ASYNCACK').ZI27A                        00330700
&ZW                   SETC  '&ZW.1'                                     00330800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00330900
                      AGO   .ZI27C                                      00331000
.*                                                                      00331100
.ZI27A                ANOP  ,                                           00331200
&ZW                   SETC  '&ZW.0'                                     00331300
.ZI27C                ANOP  ,                                           00331400
.*-------------------------------------------------------------------   00331500
.***AI.L08 XREQTYPE "COMM"                                              00331600
.***      BL1'XXX1XXXX'                                                 00331700
         AIF   ('&XREQTYPE' NE 'COMM').ZI28A                            00331800
&ZW                   SETC  '&ZW.10000'                                 00331900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00332000
                      AGO   .ZI28C                                      00332100
.*                                                                      00332200
.ZI28A                ANOP  ,                                           00332300
&ZW                   SETC  '&ZW.00000'                                 00332400
.ZI28C                ANOP  ,                                           00332500
.*-------------------------------------------------------------------   00332600
.***AI.L11 XREQTYPE BL1                                                 00332700
                      AIF   ('&ZCLNG' NE 'YES').ZI28E  ALL ZERO BITS    00332800
&ZOPN                 SETA  &ZOPN+1                                     00332900
&ZOPL(&ZOPN)          SETC  ' '                                         00333000
&ZOPO(&ZOPN)          SETC  'OI'                                        00333100
&ZOPV(&ZOPN)          SETC  '128(1),B''&ZW'''                           00333200
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00333300
.ZI28E                ANOP  ,                                           00333400
.*-------------------------------------------------------------------   00333500
.***AI.L05 XSEGTYPE BL1                                                 00333600
&ZW                   SETC  ''                                          00333700
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00333800
.*-------------------------------------------------------------------   00333900
.***AI.L08 XSEGTYPE "SINGLE"                                            00334000
.***      BL1'1XXXXXXX'                                                 00334100
         AIF   ('&XSEGTYPE' NE 'SINGLE').ZI30A                          00334200
&ZW                   SETC  '&ZW.1'                                     00334300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00334400
                      AGO   .ZI30C                                      00334500
.*                                                                      00334600
.ZI30A                ANOP  ,                                           00334700
&ZW                   SETC  '&ZW.0'                                     00334800
.ZI30C                ANOP  ,                                           00334900
.*-------------------------------------------------------------------   00335000
.***AI.L08 XSEGTYPE "FIRST"                                             00335100
.***      BL1'X1XXXXXX'                                                 00335200
         AIF   ('&XSEGTYPE' NE 'FIRST').ZI31A                           00335300
&ZW                   SETC  '&ZW.1'                                     00335400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00335500
                      AGO   .ZI31C                                      00335600
.*                                                                      00335700
.ZI31A                ANOP  ,                                           00335800
&ZW                   SETC  '&ZW.0'                                     00335900
.ZI31C                ANOP  ,                                           00336000
.*-------------------------------------------------------------------   00336100
.***AI.L08 XSEGTYPE "MIDDLE"                                            00336200
.***      BL1'XX1XXXXX'                                                 00336300
         AIF   ('&XSEGTYPE' NE 'MIDDLE').ZI32A                          00336400
&ZW                   SETC  '&ZW.1'                                     00336500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00336600
                      AGO   .ZI32C                                      00336700
.*                                                                      00336800
.ZI32A                ANOP  ,                                           00336900
&ZW                   SETC  '&ZW.0'                                     00337000
.ZI32C                ANOP  ,                                           00337100
.*-------------------------------------------------------------------   00337200
.***AI.L08 XSEGTYPE "LAST"                                              00337300
.***      BL1'XXX1XXXX'                                                 00337400
         AIF   ('&XSEGTYPE' NE 'LAST').ZI33A                            00337500
&ZW                   SETC  '&ZW.1'                                     00337600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00337700
                      AGO   .ZI33C                                      00337800
.*                                                                      00337900
.ZI33A                ANOP  ,                                           00338000
&ZW                   SETC  '&ZW.0'                                     00338100
.ZI33C                ANOP  ,                                           00338200
.*-------------------------------------------------------------------   00338300
.***AI.L08 XSEGTYPE "ABORT"                                             00338400
.***      BL1'XXXX1XXX'                                                 00338500
         AIF   ('&XSEGTYPE' NE 'ABORT').ZI34A                           00338600
&ZW                   SETC  '&ZW.1000'                                  00338700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00338800
                      AGO   .ZI34C                                      00338900
.*                                                                      00339000
.ZI34A                ANOP  ,                                           00339100
&ZW                   SETC  '&ZW.0000'                                  00339200
.ZI34C                ANOP  ,                                           00339300
.*-------------------------------------------------------------------   00339400
.***AI.L11 XSEGTYPE BL1                                                 00339500
                      AIF   ('&ZCLNG' NE 'YES').ZI34E  ALL ZERO BITS    00339600
&ZOPN                 SETA  &ZOPN+1                                     00339700
&ZOPL(&ZOPN)          SETC  ' '                                         00339800
&ZOPO(&ZOPN)          SETC  'OI'                                        00339900
&ZOPV(&ZOPN)          SETC  '129(1),B''&ZW'''                           00340000
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00340100
.ZI34E                ANOP  ,                                           00340200
.*-------------------------------------------------------------------   00340300
.***AI.L05 XKEYS BL1                                                    00340400
&ZW                   SETC  ''                                          00340500
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00340600
.*-------------------------------------------------------------------   00340700
.***AI.L08 XKEYS "REQTYPE"                                              00340800
.***      BL1'1XXXXXXX'                                                 00340900
         AIF   ('&REQTYPE' EQ '').ZI36A                                 00341000
&ZW                   SETC  '&ZW.1'                                     00341100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00341200
                      AGO   .ZI36C                                      00341300
.*                                                                      00341400
.ZI36A                ANOP  ,                                           00341500
&ZW                   SETC  '&ZW.0'                                     00341600
.ZI36C                ANOP  ,                                           00341700
.*-------------------------------------------------------------------   00341800
.***AI.L08 XKEYS "REQTOKEN"                                             00341900
.***      BL1'X1XXXXXX'                                                 00342000
         AIF   ('&REQTOKEN' EQ '').ZI37A                                00342100
&ZW                   SETC  '&ZW.1'                                     00342200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00342300
                      AGO   .ZI37C                                      00342400
.*                                                                      00342500
.ZI37A                ANOP  ,                                           00342600
&ZW                   SETC  '&ZW.0'                                     00342700
.ZI37C                ANOP  ,                                           00342800
.*-------------------------------------------------------------------   00342900
.***AI.L08 XKEYS "REQMBOX"                                              00343000
.***      BL1'XX1XXXXX'                                                 00343100
         AIF   ('&REQMBOX' EQ '').ZI38A                                 00343200
&ZW                   SETC  '&ZW.1'                                     00343300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00343400
                      AGO   .ZI38C                                      00343500
.*                                                                      00343600
.ZI38A                ANOP  ,                                           00343700
&ZW                   SETC  '&ZW.0'                                     00343800
.ZI38C                ANOP  ,                                           00343900
.*-------------------------------------------------------------------   00344000
.***AI.L08 XKEYS "EXIT"                                                 00344100
.***      BL1'XXX1XXXX'                                                 00344200
         AIF   ('&EXIT' EQ '').ZI39A                                    00344300
&ZW                   SETC  '&ZW.1'                                     00344400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00344500
                      AGO   .ZI39C                                      00344600
.*                                                                      00344700
.ZI39A                ANOP  ,                                           00344800
&ZW                   SETC  '&ZW.0'                                     00344900
.ZI39C                ANOP  ,                                           00345000
.*-------------------------------------------------------------------   00345100
.***AI.L08 XKEYS "SEGTYPE"                                              00345200
.***      BL1'XXXX1XXX'                                                 00345300
         AIF   ('&SEGTYPE' EQ '').ZI40A                                 00345400
&ZW                   SETC  '&ZW.1'                                     00345500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00345600
                      AGO   .ZI40C                                      00345700
.*                                                                      00345800
.ZI40A                ANOP  ,                                           00345900
&ZW                   SETC  '&ZW.0'                                     00346000
.ZI40C                ANOP  ,                                           00346100
.*-------------------------------------------------------------------   00346200
.***AI.L08 XKEYS "CONNECT"                                              00346300
.***      BL1'XXXXX1XX'                                                 00346400
         AIF   ('&CONNECT' EQ '').ZI41A                                 00346500
         AIF   ('&CONNECT' EQ '0').ZI41A                                00346600
&ZW                   SETC  '&ZW.1'                                     00346700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00346800
                      AGO   .ZI41C                                      00346900
.*                                                                      00347000
.ZI41A                ANOP  ,                                           00347100
&ZW                   SETC  '&ZW.0'                                     00347200
.ZI41C                ANOP  ,                                           00347300
.*-------------------------------------------------------------------   00347400
.***AI.L08 XKEYS "MSGTOKEN"                                             00347500
.***      BL1'XXXXXX1X'                                                 00347600
         AIF   ('&MSGTOKEN' EQ '').ZI42A                                00347700
&ZW                   SETC  '&ZW.1'                                     00347800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00347900
                      AGO   .ZI42C                                      00348000
.*                                                                      00348100
.ZI42A                ANOP  ,                                           00348200
&ZW                   SETC  '&ZW.0'                                     00348300
.ZI42C                ANOP  ,                                           00348400
.*-------------------------------------------------------------------   00348500
.***AI.L08 XKEYS "MSGATTR"                                              00348600
.***      BL1'XXXXXXX1'                                                 00348700
         AIF   ('&MSGATTR' EQ '').ZI43A                                 00348800
&ZW                   SETC  '&ZW.1'                                     00348900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00349000
                      AGO   .ZI43C                                      00349100
.*                                                                      00349200
.ZI43A                ANOP  ,                                           00349300
&ZW                   SETC  '&ZW.0'                                     00349400
.ZI43C                ANOP  ,                                           00349500
.*-------------------------------------------------------------------   00349600
.***AI.L11 XKEYS BL1                                                    00349700
                      AIF   ('&ZCLNG' NE 'YES').ZI43E  ALL ZERO BITS    00349800
&ZOPN                 SETA  &ZOPN+1                                     00349900
&ZOPL(&ZOPN)          SETC  ' '                                         00350000
&ZOPO(&ZOPN)          SETC  'OI'                                        00350100
&ZOPV(&ZOPN)          SETC  '130(1),B''&ZW'''                           00350200
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00350300
.ZI43E                ANOP  ,                                           00350400
.*-------------------------------------------------------------------   00350500
.***AI.L05 XKEYS1 BL1                                                   00350600
&ZW                   SETC  ''                                          00350700
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00350800
.*-------------------------------------------------------------------   00350900
.***AI.L08 XKEYS1 "ECB"                                                 00351000
.***      BL1'1XXXXXXX'                                                 00351100
         AIF   ('&ECB' EQ '').ZI45A                                     00351200
&ZW                   SETC  '&ZW.1'                                     00351300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00351400
                      AGO   .ZI45C                                      00351500
.*                                                                      00351600
.ZI45A                ANOP  ,                                           00351700
&ZW                   SETC  '&ZW.0'                                     00351800
.ZI45C                ANOP  ,                                           00351900
.*-------------------------------------------------------------------   00352000
.***AI.L08 XKEYS1 "DATAALET"                                            00352100
.***      BL1'X1XXXXXX'                                                 00352200
         AIF   ('&DATAALET' EQ '').ZI46A                                00352300
&ZW                   SETC  '&ZW.1'                                     00352400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00352500
                      AGO   .ZI46C                                      00352600
.*                                                                      00352700
.ZI46A                ANOP  ,                                           00352800
&ZW                   SETC  '&ZW.0'                                     00352900
.ZI46C                ANOP  ,                                           00353000
.*-------------------------------------------------------------------   00353100
.***AI.L08 XKEYS1 "RELEASE_CADS"                                        00353200
.***      BL1'XX1XXXXX'                                                 00353300
         AIF   ('&RELEASE_CADS' EQ '').ZI47A                            00353400
&ZW                   SETC  '&ZW.1'                                     00353500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00353600
                      AGO   .ZI47C                                      00353700
.*                                                                      00353800
.ZI47A                ANOP  ,                                           00353900
&ZW                   SETC  '&ZW.0'                                     00354000
.ZI47C                ANOP  ,                                           00354100
.*-------------------------------------------------------------------   00354200
.***AI.L08 XKEYS1 "RIPSIZE"                                             00354300
.***      BL1'XXX1XXXX'                                                 00354400
         AIF   ('&RIPSIZE' EQ '').ZI48A                                 00354500
&ZW                   SETC  '&ZW.10000'                                 00354600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00354700
                      AGO   .ZI48C                                      00354800
.*                                                                      00354900
.ZI48A                ANOP  ,                                           00355000
&ZW                   SETC  '&ZW.00000'                                 00355100
.ZI48C                ANOP  ,                                           00355200
.*-------------------------------------------------------------------   00355300
.***AI.L11 XKEYS1 BL1                                                   00355400
                      AIF   ('&ZCLNG' NE 'YES').ZI48E  ALL ZERO BITS    00355500
&ZOPN                 SETA  &ZOPN+1                                     00355600
&ZOPL(&ZOPN)          SETC  ' '                                         00355700
&ZOPO(&ZOPN)          SETC  'OI'                                        00355800
&ZOPV(&ZOPN)          SETC  '131(1),B''&ZW'''                           00355900
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00356000
.ZI48E                ANOP  ,                                           00356100
.*-------------------------------------------------------------------   00356200
&ZOPN1                SETA &ZOPN                                        00356300
.*******************************************************************    00356400
.***  PROCESS IXZXIXSM OUTPUT PARAMETERS                                00356500
.*******************************************************************    00356600
                      ACTR  10000                                       00356700
.*------------------------------------------------------------------    00356800
.***AO.L02 XREQTOKEN XL8                                                00356900
         AIF   ('&ZXREQTOKEN' EQ 'OUTPUT').ZO10A  OUTPUT                00357000
         AIF   ('&ZXREQTOKEN' NE 'INOUT').ZO10C  INOUT                  00357100
.ZO10A    AIF   ('&XREQTOKEN'(1,1) NE '(').ZO10B  ADDR IN GPR           00357200
&ZCGPR   SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)                           00357300
&ZOPN                 SETA  &ZOPN+1                                     00357400
&ZOPL(&ZOPN)          SETC  ' '                                         00357500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00357600
&ZOPV(&ZOPN)          SETC  '0(8,&ZCGPR),48(1)'                         00357700
&ZOPD(&ZOPN)          SETC  '++ XREQTOKEN XL8'                          00357800
                      AGO   .ZO10C                                      00357900
.*                                                                      00358000
.ZO10B                ANOP  ,                                           00358100
&ZAWRK   SETA  K'&XREQTOKEN                                             00358200
         AIF   ('&XREQTOKEN'(&ZAWRK,1) NE ')').ZO10G                    00358300
&ZN      SETA  2                                                        00358400
.ZO10H    ANOP                                                          00358500
         AIF   (&ZN GE &ZAWRK).ZO10G                                    00358600
         AIF   ('&XREQTOKEN'(&ZN,1) NE '(').ZO10I                       00358700
&ZC      SETC  '&XREQTOKEN'(1,&ZN).'8'.','                              00358800
&ZC      SETC  '&ZC'.'&XREQTOKEN'(&ZN+1,&ZAWRK-&ZN).',48(1)'            00358900
         AGO   .ZO10J                                                   00359000
.ZO10I    ANOP                                                          00359100
&ZN      SETA  &ZN+1                                                    00359200
         AGO   .ZO10H                                                   00359300
.ZO10G    ANOP                                                          00359400
&ZC      SETC  '&XREQTOKEN.(8),48(1)'                                   00359500
.ZO10J    ANOP                                                          00359600
&ZOPN                 SETA  &ZOPN+1                                     00359700
&ZOPL(&ZOPN)          SETC  ' '                                         00359800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00359900
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00360000
&ZOPD(&ZOPN)          SETC  '++ XREQTOKEN XL8'                          00360100
.ZO10C                ANOP  ,                                           00360200
.*------------------------------------------------------------------    00360300
.***AO.L02 XCONNECT XL8                                                 00360400
         AIF   ('&XCONNECT' NE '0').ZO16D  CK DEF                       00360500
         AIF   ('&ZXCONNECT' NE 'OUTPUT').ZO16C  CK DEF                 00360600
.ZO16D                ANOP  ,                                           00360700
         AIF   ('&ZXCONNECT' EQ 'OUTPUT').ZO16A  OUTPUT                 00360800
         AIF   ('&ZXCONNECT' NE 'INOUT').ZO16C  INOUT                   00360900
.ZO16A    AIF   ('&XCONNECT'(1,1) NE '(').ZO16B  ADDR IN GPR            00361000
&ZCGPR   SETC  '&XCONNECT'(2,K'&XCONNECT-2)                             00361100
&ZOPN                 SETA  &ZOPN+1                                     00361200
&ZOPL(&ZOPN)          SETC  ' '                                         00361300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00361400
&ZOPV(&ZOPN)          SETC  '0(8,&ZCGPR),88(1)'                         00361500
&ZOPD(&ZOPN)          SETC  '++ XCONNECT XL8'                           00361600
                      AGO   .ZO16C                                      00361700
.*                                                                      00361800
.ZO16B                ANOP  ,                                           00361900
&ZAWRK   SETA  K'&XCONNECT                                              00362000
         AIF   ('&XCONNECT'(&ZAWRK,1) NE ')').ZO16G                     00362100
&ZN      SETA  2                                                        00362200
.ZO16H    ANOP                                                          00362300
         AIF   (&ZN GE &ZAWRK).ZO16G                                    00362400
         AIF   ('&XCONNECT'(&ZN,1) NE '(').ZO16I                        00362500
&ZC      SETC  '&XCONNECT'(1,&ZN).'8'.','                               00362600
&ZC      SETC  '&ZC'.'&XCONNECT'(&ZN+1,&ZAWRK-&ZN).',88(1)'             00362700
         AGO   .ZO16J                                                   00362800
.ZO16I    ANOP                                                          00362900
&ZN      SETA  &ZN+1                                                    00363000
         AGO   .ZO16H                                                   00363100
.ZO16G    ANOP                                                          00363200
&ZC      SETC  '&XCONNECT.(8),88(1)'                                    00363300
.ZO16J    ANOP                                                          00363400
&ZOPN                 SETA  &ZOPN+1                                     00363500
&ZOPL(&ZOPN)          SETC  ' '                                         00363600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00363700
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00363800
&ZOPD(&ZOPN)          SETC  '++ XCONNECT XL8'                           00363900
.ZO16C                ANOP  ,                                           00364000
.*------------------------------------------------------------------    00364100
.***AO.L02 XUSERRC F                                                    00364200
         AIF   ('&ZXUSERRC' EQ 'OUTPUT').ZO18A  OUTPUT                  00364300
         AIF   ('&ZXUSERRC' NE 'INOUT').ZO18C  INOUT                    00364400
.ZO18A    AIF   ('&XUSERRC'(1,1) NE '(').ZO18B  ADDR IN GPR             00364500
&ZCGPR   SETC  '&XUSERRC'(2,K'&XUSERRC-2)                               00364600
&ZOPN                 SETA  &ZOPN+1                                     00364700
&ZOPL(&ZOPN)          SETC  ' '                                         00364800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00364900
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),100(1)'                        00365000
&ZOPD(&ZOPN)          SETC  '++ XUSERRC F'                              00365100
                      AGO   .ZO18C                                      00365200
.*                                                                      00365300
.ZO18B                ANOP  ,                                           00365400
&ZAWRK   SETA  K'&XUSERRC                                               00365500
         AIF   ('&XUSERRC'(&ZAWRK,1) NE ')').ZO18G                      00365600
&ZN      SETA  2                                                        00365700
.ZO18H    ANOP                                                          00365800
         AIF   (&ZN GE &ZAWRK).ZO18G                                    00365900
         AIF   ('&XUSERRC'(&ZN,1) NE '(').ZO18I                         00366000
&ZC      SETC  '&XUSERRC'(1,&ZN).'4'.','                                00366100
&ZC      SETC  '&ZC'.'&XUSERRC'(&ZN+1,&ZAWRK-&ZN).',100(1)'             00366200
         AGO   .ZO18J                                                   00366300
.ZO18I    ANOP                                                          00366400
&ZN      SETA  &ZN+1                                                    00366500
         AGO   .ZO18H                                                   00366600
.ZO18G    ANOP                                                          00366700
&ZC      SETC  '&XUSERRC.(4),100(1)'                                    00366800
.ZO18J    ANOP                                                          00366900
&ZOPN                 SETA  &ZOPN+1                                     00367000
&ZOPL(&ZOPN)          SETC  ' '                                         00367100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00367200
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00367300
&ZOPD(&ZOPN)          SETC  '++ XUSERRC F'                              00367400
.ZO18C                ANOP  ,                                           00367500
.*------------------------------------------------------------------    00367600
.***AO.L02 XRESPDATA F                                                  00367700
         AIF   ('&XRESPDATA' NE '0').ZO19D  CK DEF                      00367800
         AIF   ('&ZXRESPDATA' NE 'OUTPUT').ZO19C  CK DEF                00367900
.ZO19D                ANOP  ,                                           00368000
         AIF   ('&ZXRESPDATA' EQ 'OUTPUT').ZO19A  OUTPUT                00368100
         AIF   ('&ZXRESPDATA' NE 'INOUT').ZO19C  INOUT                  00368200
.ZO19A    AIF   ('&XRESPDATA'(1,1) NE '(').ZO19B  ADDR IN GPR           00368300
&ZCGPR   SETC  '&XRESPDATA'(2,K'&XRESPDATA-2)                           00368400
&ZOPN                 SETA  &ZOPN+1                                     00368500
&ZOPL(&ZOPN)          SETC  ' '                                         00368600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00368700
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),104(1)'                        00368800
&ZOPD(&ZOPN)          SETC  '++ XRESPDATA F'                            00368900
                      AGO   .ZO19C                                      00369000
.*                                                                      00369100
.ZO19B                ANOP  ,                                           00369200
&ZAWRK   SETA  K'&XRESPDATA                                             00369300
         AIF   ('&XRESPDATA'(&ZAWRK,1) NE ')').ZO19G                    00369400
&ZN      SETA  2                                                        00369500
.ZO19H    ANOP                                                          00369600
         AIF   (&ZN GE &ZAWRK).ZO19G                                    00369700
         AIF   ('&XRESPDATA'(&ZN,1) NE '(').ZO19I                       00369800
&ZC      SETC  '&XRESPDATA'(1,&ZN).'4'.','                              00369900
&ZC      SETC  '&ZC'.'&XRESPDATA'(&ZN+1,&ZAWRK-&ZN).',104(1)'           00370000
         AGO   .ZO19J                                                   00370100
.ZO19I    ANOP                                                          00370200
&ZN      SETA  &ZN+1                                                    00370300
         AGO   .ZO19H                                                   00370400
.ZO19G    ANOP                                                          00370500
&ZC      SETC  '&XRESPDATA.(4),104(1)'                                  00370600
.ZO19J    ANOP                                                          00370700
&ZOPN                 SETA  &ZOPN+1                                     00370800
&ZOPL(&ZOPN)          SETC  ' '                                         00370900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00371000
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00371100
&ZOPD(&ZOPN)          SETC  '++ XRESPDATA F'                            00371200
.ZO19C                ANOP  ,                                           00371300
.*------------------------------------------------------------------    00371400
.***AO.L02 XRESPDLEN F                                                  00371500
         AIF   ('&XRESPDLEN' NE '0').ZO20D  CK DEF                      00371600
         AIF   ('&ZXRESPDLEN' NE 'OUTPUT').ZO20C  CK DEF                00371700
.ZO20D                ANOP  ,                                           00371800
         AIF   ('&ZXRESPDLEN' EQ 'OUTPUT').ZO20A  OUTPUT                00371900
         AIF   ('&ZXRESPDLEN' NE 'INOUT').ZO20C  INOUT                  00372000
.ZO20A    AIF   ('&XRESPDLEN'(1,1) NE '(').ZO20B  ADDR IN GPR           00372100
&ZCGPR   SETC  '&XRESPDLEN'(2,K'&XRESPDLEN-2)                           00372200
&ZOPN                 SETA  &ZOPN+1                                     00372300
&ZOPL(&ZOPN)          SETC  ' '                                         00372400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00372500
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),108(1)'                        00372600
&ZOPD(&ZOPN)          SETC  '++ XRESPDLEN F'                            00372700
                      AGO   .ZO20C                                      00372800
.*                                                                      00372900
.ZO20B                ANOP  ,                                           00373000
&ZAWRK   SETA  K'&XRESPDLEN                                             00373100
         AIF   ('&XRESPDLEN'(&ZAWRK,1) NE ')').ZO20G                    00373200
&ZN      SETA  2                                                        00373300
.ZO20H    ANOP                                                          00373400
         AIF   (&ZN GE &ZAWRK).ZO20G                                    00373500
         AIF   ('&XRESPDLEN'(&ZN,1) NE '(').ZO20I                       00373600
&ZC      SETC  '&XRESPDLEN'(1,&ZN).'4'.','                              00373700
&ZC      SETC  '&ZC'.'&XRESPDLEN'(&ZN+1,&ZAWRK-&ZN).',108(1)'           00373800
         AGO   .ZO20J                                                   00373900
.ZO20I    ANOP                                                          00374000
&ZN      SETA  &ZN+1                                                    00374100
         AGO   .ZO20H                                                   00374200
.ZO20G    ANOP                                                          00374300
&ZC      SETC  '&XRESPDLEN.(4),108(1)'                                  00374400
.ZO20J    ANOP                                                          00374500
&ZOPN                 SETA  &ZOPN+1                                     00374600
&ZOPL(&ZOPN)          SETC  ' '                                         00374700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00374800
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00374900
&ZOPD(&ZOPN)          SETC  '++ XRESPDLEN F'                            00375000
.ZO20C                ANOP  ,                                           00375100
.*------------------------------------------------------------------    00375200
.***AO.L02 XMSGTOKEN XL8                                                00375300
         AIF   ('&ZXMSGTOKEN' EQ 'OUTPUT').ZO22A  OUTPUT                00375400
         AIF   ('&ZXMSGTOKEN' NE 'INOUT').ZO22C  INOUT                  00375500
.ZO22A    AIF   ('&XMSGTOKEN'(1,1) NE '(').ZO22B  ADDR IN GPR           00375600
&ZCGPR   SETC  '&XMSGTOKEN'(2,K'&XMSGTOKEN-2)                           00375700
&ZOPN                 SETA  &ZOPN+1                                     00375800
&ZOPL(&ZOPN)          SETC  ' '                                         00375900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00376000
&ZOPV(&ZOPN)          SETC  '0(8,&ZCGPR),116(1)'                        00376100
&ZOPD(&ZOPN)          SETC  '++ XMSGTOKEN XL8'                          00376200
                      AGO   .ZO22C                                      00376300
.*                                                                      00376400
.ZO22B                ANOP  ,                                           00376500
&ZAWRK   SETA  K'&XMSGTOKEN                                             00376600
         AIF   ('&XMSGTOKEN'(&ZAWRK,1) NE ')').ZO22G                    00376700
&ZN      SETA  2                                                        00376800
.ZO22H    ANOP                                                          00376900
         AIF   (&ZN GE &ZAWRK).ZO22G                                    00377000
         AIF   ('&XMSGTOKEN'(&ZN,1) NE '(').ZO22I                       00377100
&ZC      SETC  '&XMSGTOKEN'(1,&ZN).'8'.','                              00377200
&ZC      SETC  '&ZC'.'&XMSGTOKEN'(&ZN+1,&ZAWRK-&ZN).',116(1)'           00377300
         AGO   .ZO22J                                                   00377400
.ZO22I    ANOP                                                          00377500
&ZN      SETA  &ZN+1                                                    00377600
         AGO   .ZO22H                                                   00377700
.ZO22G    ANOP                                                          00377800
&ZC      SETC  '&XMSGTOKEN.(8),116(1)'                                  00377900
.ZO22J    ANOP                                                          00378000
&ZOPN                 SETA  &ZOPN+1                                     00378100
&ZOPL(&ZOPN)          SETC  ' '                                         00378200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00378300
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00378400
&ZOPD(&ZOPN)          SETC  '++ XMSGTOKEN XL8'                          00378500
.ZO22C                ANOP  ,                                           00378600
.*******************************************************************    00378700
.***AO.X02  RETURN CODE PROCESSING                                      00378800
.*******************************************************************    00378900
                      AIF   (N'&RTNCODE LE 0).ZMRETX                    00379000
                      AIF   ('&XRTNCODE'(1,1) EQ '(').ZMRET2            00379100
                      AIF   ('&XRTNCODE' EQ 'GPR15').ZMRETX             00379200
                      AIF   ('&XRTNCODE' EQ 'REG15').ZMRETX             00379300
                      AIF   ('&XRTNCODE' EQ 'R15').ZMRETX               00379400
                      AIF   ('&XRTNCODE' EQ '15').ZMRETX                00379500
&ZOPN                 SETA  &ZOPN+1                                     00379600
&ZOPL(&ZOPN)          SETC  ' '                                         00379700
&ZOPO(&ZOPN)          SETC  'ST'                                        00379800
&ZOPV(&ZOPN)          SETC  '15,&XRTNCODE'                              00379900
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00380000
                      AGO   .ZMRETX                                     00380100
.*                                                                      00380200
.ZMRET2               ANOP  ,                                           00380300
&ZCGPR                SETC  '&XRTNCODE'(2,K'&XRTNCODE-2)                00380400
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00380500
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00380600
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00380700
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00380800
&ZOPN                 SETA  &ZOPN+1                                     00380900
&ZOPL(&ZOPN)          SETC  ' '                                         00381000
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00381100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00381200
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00381300
.ZMRETX               ANOP  ,                                           00381400
.*******************************************************************    00381500
.***AO.X03  REASON CODE PROCESSING                                      00381600
.*******************************************************************    00381700
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00381800
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00381900
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00382000
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00382100
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00382200
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00382300
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00382400
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00382500
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00382600
&ZOPN                 SETA  &ZOPN+1                                     00382700
&ZOPL(&ZOPN)          SETC  ' '                                         00382800
&ZOPO(&ZOPN)          SETC  'ST'                                        00382900
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00383000
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00383100
                      AGO   .ZMRSNX                                     00383200
.*                                                                      00383300
.ZMRSN2               ANOP  ,                                           00383400
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00383500
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00383600
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00383700
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00383800
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00383900
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00384000
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00384100
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00384200
&ZOPN                 SETA  &ZOPN+1                                     00384300
&ZOPL(&ZOPN)          SETC  ' '                                         00384400
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00384500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00384600
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00384700
.ZMRSNX               ANOP  ,                                           00384800
.*******************************************************************    00384900
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00385000
.*******************************************************************    00385100
.ZMFLX                ANOP  ,              MF=L PROCESSING              00385200
.*******************************************************************    00385300
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00385400
.*******************************************************************    00385500
                      ACTR  10000                                       00385600
.*                                                                      00385700
                      LCLA  &ZLC           COLUMN POSITION              00385800
                      LCLA  &ZOPX          LIST TABLE INDEX             00385900
                      LCLC  &ZLL           LABEL                        00386000
                      LCLC  &ZLOP          OPERATION                    00386100
                      LCLC  &ZLV           VALUE                        00386200
                      LCLC  &ZLD           DESCRIPTION                  00386300
.*                                                                      00386400
&ZOPX                 SETA  1                                           00386500
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00386600
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00386700
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00386800
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00386900
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00387000
                      AIF   (K'&ZLD LE 0).ZL5                           00387100
&ZLC                  SETA  35             COMMENT COLUMN               00387200
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00387300
&ZLC                  SETA  33             COMMMENT COLUMN              00387400
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00387500
&ZLV                  SETC  '&ZLV'.' '                                  00387600
                      AGO   .ZL3                                        00387700
.*                                                                      00387800
.ZL4                  ANOP  ,                                           00387900
&ZLV                  SETC  '&ZLV'.' '                                  00388000
.ZL5                  ANOP  ,                                           00388100
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00388200
.*                                                                      00388300
&ZLL     &ZLOP &ZLV                                                     00388400
.*                                                                      00388500
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00388600
                      AGO   .ZL2           CONTINUE LOOPING             00388700
.*                                                                      00388800
.ZLX                  ANOP  ,                                           00388900
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00389000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00389100
         GBLC  &ANVIRON           JES2 environment variable             00389200
         GBLB  &J3MN              JES3 Main Task environment            00389300
         GBLB  &J3ST              JES3 Subtask environment              00389400
         GBLB  &J3FSS             JES3 FSS environment                  00389500
         GBLB  &J3USR             JES3 User environment                 00389600
         GBLB  &JSXCF             JESXCF environment                    00389700
         AIF   ('&ANVIRON' EQ 'JES2').IXSM050 JES2 Main Task            00389800
         AIF   ('&ANVIRON' EQ 'SUBTASK').IXSM050 JES2 Subtask           00389900
         AIF   ('&ANVIRON' EQ 'FSS').IXSM050 JES2 FSS                   00390000
         AIF   ('&ANVIRON' EQ 'USER').IXSM050  JES2 User                00390100
         AIF   (&J3MN).IXSM050    Are we running under JES3 Main task   00390200
         AIF   (&J3ST).IXSM050    Are we running under JES3 Sub task    00390300
         AIF   (&J3FSS).IXSM050   Are we running under JES3 FSS         00390400
         AIF   (&J3USR).IXSM050   Are we running under JES3 User        00390500
         AIF   (&JSXCF).IXSM050   Are we running under JESXCF           00390600
         MNOTE 8,'IXZ0001 Running in an invalid environment'            00390700
.IXSM050 ANOP                                                           00390800
         AIF   ('&GROUPTOKEN'(1,1) NE '(').IXSM100                      00390900
         LR    14,&GROUPTOKEN     Load the address of the group token   00391000
         L     14,0(14)           Load the group token                  00391100
         AGO   .IXSM150                                                 00391200
.IXSM100 ANOP                                                           00391300
         L     14,&GROUPTOKEN     Load the group token                  00391400
.IXSM150 ANOP                                                           00391500
         L     14,52(14)          Load the PC number of the             00391600
*                                 routine to be called                  00391700
         PC    0(14)              Call the send message routine         00391800
         AIF   ('&XMFCTRL'(1,1) NE '(').IXSM200                         00391900
         LR    1,&XMFCTRL         Restore the parameter list address    00392000
         AGO   .IXSM250                                                 00392100
.IXSM200 ANOP                                                           00392200
         LA    1,&XMFCTRL         Restore the parameter list address    00392300
.IXSM250 ANOP                                                           00392400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00392500
.ZLINKX               ANOP  ,                                           00392600
.*******************************************************************    00392700
.***AP.X01  FORMAT GENERATED CODE                                       00392800
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00392900
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00393000
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00393100
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00393200
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00393300
                      AIF   (K'&ZLD LE 0).ZL51                          00393400
&ZLC                  SETA  35             COMMENT COLUMN               00393500
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00393600
&ZLC                  SETA  33             COMMENT COLUMN               00393700
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00393800
&ZLV                  SETC  '&ZLV'.' '                                  00393900
                      AGO   .ZL31                                       00394000
.*                                                                      00394100
.ZL41                 ANOP  ,                                           00394200
&ZLV                  SETC  '&ZLV'.' '                                  00394300
.ZL51                 ANOP  ,                                           00394400
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00394500
.*                                                                      00394600
&ZLL     &ZLOP &ZLV                                                     00394700
.*                                                                      00394800
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00394900
                      AGO   .ZL21          CONTINUE LOOPING             00395000
.*                                                                      00395100
.ZLX1                 ANOP  ,                                           00395200
.*******************************************************************    00395300
.***AP.X02  END OF IXZXIXSM MACRO                                       00395400
&ZIXZXIXSM            SETC  'YES'          SET IXZXIXSM USED            00395500
         POP   PRINT                                                    00395600
*                                            IXZXIXSM-2                 00395700
         SPACE 1                                                        00395800
.ZLX2                 ANOP  ,                                           00395900
         MEND                                                           00396000
**********************************************************************/ 00396100
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00396200
*%IXZXIXSM: MACRO KEYS(MBOXNAME,MEMBER,DATA,DATAALET,DATALEN,REQTYPE,   00396300
*                 SEGTYPE,CONNECT,GROUPTOKEN,RESPDATA,RESPDLEN,         00396400
*                 RESPDALT,REQMBOX,REQTOKEN,EXIT,ECB,MSGTOKEN,USERRC,   00396500
*                 MSGATTR,RELEASE_CADS,RIPSIZE,RTNCODE,RSNCODE,         00396600
*                 PLISTVER,MF);                                         00396700
*  ANS('?'!!MACLABEL!!' '!!'IXZPIXSM '!!MACLIST!!                       00396800
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00396900
*%END IXZXIXSM;                                                         00397000
