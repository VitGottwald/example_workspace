*/* Start of Specifications for BLSRDATS *****************************/ 00100000
*/*                                                                  */ 00200000
*/* $MAC(BLSRDATS) COMP(SC132) PROD(HBB7790): Describe address space */ 00300003
*/*                                                                  */ 00400000
*/* PROPRIETARY STATEMENT =                                          */ 00410003
*/*                                                                  */ 00420003
*/*   5650-ZOS COPYRIGHT IBM CORP. 1984, 2013                        */ 00430003
*/*   LICENSED MATERIALS - PROPERTY OF IBM                           */ 00440003
*/*                                                                  */ 00450003
*/* STATUS = HBB7790                                                 */ 00460003
*/*                                                                  */ 00470003
*/*                                                                  */ 01200000
*/* EXTERNAL CLASSIFICATION: GUPI                                    */ 01300000
*/* END OF EXTERNAL CLASSIFICATION:                                  */ 01400000
*/*                                                                  */ 01500000
*/* DESCRIPTIVE NAME:  IPCS address space descriptor                 */ 01600000
*/* ACRONYM:  BLSRDATS                                               */ 01700000
*/* MACRO NAME: BLSRDATS                                             */ 01800000
*/* DSECT NAME: Specified by the BLSRDATS macro-invocation           */ 01900000
*/* COMPONENT: IPCS (SC132)                                          */ 02000000
*/* EYE-CATCHER: none                                                */ 02100000
*/*                                                                  */ 02200000
*/* STORAGE ATTRIBUTES:                                              */ 02300000
*/*     SUBPOOL:  0-127, 251, 252                                    */ 02400000
*/*     KEY:  0 (not fetch protected), 8                             */ 02500000
*/*     RESIDENCY:  LOC(ANY)                                         */ 02600000
*/*     MAIN STORAGE:  NO                                            */ 02700000
*/*     AUXILIARY STORAGE:  YES                                      */ 02800000
*/*     VIRTUAL STORAGE:  YES                                        */ 02900000
*/*     DATA SPACE: NO                                               */ 03000000
*/*                                                                  */ 03100000
*/* SIZE: 16 bytes                                                   */ 03200000
*/* CREATED BY: IPCS services or their callers                       */ 03300000
*/* POINTED TO BY: N/A                                               */ 03400000
*/* SERIALIZATION: N/A                                               */ 03500000
*/*                                                                  */ 03600000
*/* FUNCTION= Define the structure of the BLSRDATS data area.        */ 03700000
*/* This is the structure in which IPCS stored address space         */ 03800000
*/* identification data for dumped storage.                          */ 03900000
*/*                                                                  */ 04000000
*/* METHOD OF ACCESS: Explicitly passed between various IPCS         */ 04100000
*/* services and exits.                                              */ 04200000
*/*                                                                  */ 04300000
*/* DELETED BY: N/A                                                  */ 04400000
*/*                                                                  */ 04500000
*/* DEPENDENCIES:                                                    */ 04600000
*/*                                                                  */ 04700000
*/* DISTRIBUTION LIBRARY: MACLIB                                     */ 04800000
*/*                                                                  */ 04900000
*/* ================================================================ */ 05000000
*/*                                                                  */ 05100000
*/* CHANGE ACTIVITY=                                                 */ 05200000
*/*                                                                  */ 05300000
*/*   Products=                                                      */ 05400000
*/* $L0= MVSIPCS,EIP1102,78001,PDE1: MVS IPCS initial release code   */ 05500000
*/*    = GENDUMP,HIP2102,79171,PDE1: Generalized dump access         */ 05600000
*/* $L1= SRVASADA,JBB2220,85094,PDE1: Automatic SADUMP analysis      */ 05700000
*/* $L2= IPCSENH,HBB3310,86152,PDE1: Support COMPDATA, DOMAIN, and   */ 05800000
*/*      DSPNAME (STOKEN) address space qualification                */ 05900000
*/*    = CIHWE,HBB4420,89011,PDAX: ASID filtering                    */ 06000000
*/* $L3= SERV2I,HBB5520,93348,PDE1: HPCS serviceability              */ 06100000
*/*      Add support for use of symbolic literal data via address    */ 06200000
*/*      spaces that are effectively encoded as LITERAL(n) where     */ 06300000
*/*      "n" is a fullword value that IPCS arbitrarily associates    */ 06400000
*/*      with a symbolic literal.                                    */ 06500000
*/* $L4= IPCSREUS,JBB6602,95172,PDE1: Dual case macro support        */ 06600000
*/* $L5= RAS,HBB7706,01164,PDE1: Service aids improvements           */ 06700000
*/* $L6= RAS,HBB7708,03009,PDE1: Improved support for assembler      */ 06800000
*/*      language use                                                */ 06900000
*/* $L7= ME24482 HBB7790 120723 PDXB: &LABEL                         */ 06910005
*/*                                                                  */ 07000000
*/* ---------------------------------------------------------------- */ 07100000
*/*                                                                  */ 07200000
*/*   Design changes=                                                */ 07300000
*/* $D1= DCR0049,JBB2125,83116,PDE1: Get/store symbol services       */ 07400000
*/*                                                                  */ 07500000
*/* ---------------------------------------------------------------- */ 07600000
*/*                                                                  */ 07700000
*/*   PTMs=                                                          */ 07800000
*/* $P1= PUU0527,HIP2102,82081,PDE1: Correct micro-fiche flags       */ 07900000
*/* $P2= PA20624,JBB2220,85283,PDE1: Supply a default length for     */ 08000000
*/*      the assembler structure when DSECT=NO is specified.         */ 08100000
*/*    = PN70366,HBB5520,94083,PDE1: Properly support PL/X           */ 08200000
*/*      initialization for ASID DSPNAME and COMPDATA address        */ 08300000
*/*      spaces.                                                     */ 08400000
*/*    = PYM0342,HBB7706,01192,PDE1: Put asterisks back so that the  */ 08500000
*/*      assembler macro-definition is well-formed                   */ 08600000
*/* $P3= PYN0610,HBB7708,02255,PDE1: Honor COMPLETE option even when */ 08700000
*/*      BLSRDATS is invoked improperly                              */ 08800000
*/* $P4= ME02022,HBB7720,04281,PDE1: Formally define ZZZASTCT for    */ 08900000
*/*      HLASM users of BLSRDATS                                     */ 09000000
*/*                                                                  */ 09100000
*/* ---------------------------------------------------------------- */ 09200000
*/*                                                                  */ 09300000
*/*   Maintenance= none                                              */ 09400000
*/*                                                                  */ 09500000
*/*** End of Specifications for BLSRDATS *****************************/ 09600000
*                                                                       09700000
*   %IF TRUTH ^= TRUTH %THEN        /* Skip assembler macro      @L2P*/ 09800000
*     %DO;                          /* Skip assembler macro      @L2P*/ 09900000
*                                                                       10000000
*/* Treat assembler macro as PL/X full-width remark ******************* 10100000
         MACRO                                                          10200000
&LAB     BLSRDATS &T,&Q1,&Q2,&DSECT=YES                            @L7C 10300004
         LCLC  &P                                                  @L7A 10310004
&P       SETC  '&LAB'                                              @L7A 10320004
         AIF   ('&P' NE '').HAVELAB                                @L7A 10330004
&P       SETC  'DATS'                                              @L7A 10340004
.HAVELAB ANOP                                                      @L7A 10350004
         GBLB  &EDATS             Blurb produced once in assembly  @D1A 10400000
         AIF   (&EDATS).L000      One blurb this size is enough    @D1A 10500000
*---------------------------------------------------------------------- 10600000
* An IPCS address space is specified by three values:                   10700000
*                                                                       10800000
* (1) A two-character code identifying the type of address space:       10900000
*                                                                       11000000
*     - Letter code A indicates that the file contains an MVS           11100000
*       high-speed dump and that absolute main storage of the dumped    11200000
*       system is being referenced (ABSOLUTE)                           11300000
*                                                                       11400000
*     - Code BL indicates that a physical block in a file is being      11500000
*       referenced using a relative block number (BLOCK)                11600000
*                                                                       11700000
*     - Code BS indicates that a relative byte address group in the     11800000
*       file is being referenced (RBA)                                  11900000
*                                                                       12000000
*     - Code BT indicates that a physical block in a file is being      12100000
*       referenced using a relative track address (TTR)                 12200000
*                                                                       12300000
*     - Letter code C indicates that the file contains an MVS           12400000
*       high-speed dump and that the CPU status data for one dumped CPU 12500000
*       is being referenced (CPU STATUS)                                12600000
*                                                                       12700000
*     - Code CE indicates that the file contains an MVS high-speed dump 12800000
*       and that vector registers for one CPU are being referenced (CPU 12900000
*       DOMAIN(VECTOR))                                                 13000000
*                                                                       13100000
*     - Code CR indicates that the file contains an MVS high-speed dump 13200000
*       and that real main storage seen by one CPU is being referenced  13300000
*       (CPU REAL)                                                      13400000
*                                                                       13500000
*     - Code CT indicates that the file contains an MVS high-speed dump 13600000
*       and that a console loop trace for one CPU is being referenced   13700000
*       (CPU DOMAIN(CPUTRACE))                                          13800000
*                                                                       13900000
*     - Code CV indicates that the file contains an MVS high-speed dump 14000000
*       and that virtual main storage seen by one MVS address space     14100000
*       dispatched on a designated CPU is being referenced (CPU ASID)   14200000
*                                                                       14300000
*     - Code DS indicates that the file contains an MVS high-speed dump 14400000
*       and that a data space is being referenced (ASID DSPNAME)        14500000
*                                                                       14600000
*     - Letter code H indicates that the file contains an MVS           14700000
*       high-speed dump and that the header data for the dump is being  14800000
*       referenced (HEADER)                                             14900000
*                                                                       15000000
*     - Code LI refers to a literal value associated with a symbol      15100000
*       (LITERAL)                                                       15200000
*                                                                       15300000
*     - Code SB indicates that the file contains an MVS high-speed dump 15400000
*       and that the SDUMP 4K buffer is being referenced                15500000
*       (DOMAIN(SDUMPBUFFER))                                           15600000
*                                                                       15700000
*     - Code SC indicates that the file contains an MVS high-speed dump 15800000
*       and that component data is being referenced (COMPDATA)          15900000
*                                                                       16000000
*     - Code SD indicates that the file contains an MVS high-speed dump 16100000
*       and that the SDUMP summary dump records are being referenced    16200000
*       (DOMAIN(SUMDUMP))                                               16300000
*                                                                       16400000
*     - Code SS indicates that the file contains an MVS high-speed dump 16500000
*       and that the portion of a data space represented in summary     16600000
*       dump records is being referenced (ASID DSPNAME SUMDUMP)         16700000
*                                                                       16800000
*     - Code SV indicates that the file contains an MVS high-speed dump 16900000
*       and that the portion of one MVS address space represented in    17000000
*       summary dump records is being referenced (ASID SUMDUMP)         17100000
*                                                                       17200000
* (2) A binary integer whose interpretation depends on the preceding    17300000
*     code:                                                             17400000
*                                                                       17500000
*     - For code BL this integer should be the relative block number    17600000
*                                                                       17700000
*     - For code BS this integer should be the relative byte address    17800000
*       group number                                                    17900000
*                                                                       18000000
*     - For code BT this integer should be the relative track address   18100000
*                                                                       18200000
*     - For codes DS and SS this integer contains the address space     18300000
*       identification (ASID) for the address space that owns the       18400000
*       referenced data space.                                          18500000
*                                                                       18600000
*     - For code LI this integer is an arbitrary number that IPCS       18700000
*       associates with the symbolic literal.  Zero is used for         18800000
*       literals when no storage is available.                          18900000
*                                                                       19000000
*     - For codes beginning with the letter C this integer contains the 19100000
*       System/370 CPU address (STAP instruction) for the referenced    19200000
*       CPU or X'FFFFFFFF'.                                             19300000
*                                                                       19400000
*     - For other codes this integer has no meaning and should be set   19500000
*       to X'FFFFFFFF'.                                                 19600000
*                                                                       19700000
* (3) A doubleword whose interpretation depends on the preceding code:  19800000
*                                                                       19900000
*     - For code A the first fullword contains zero normally.  A        20000000
*       non-zero associated ASID may appear in the first fullword in    20100000
*       the dump header of records written by SADUMP.  The second       20200000
*       fullword contains binary zeroes in all cases.                   20300000
*                                                                       20400000
*     - For codes CV and SV the first fullword is interpreted as a      20500000
*       binary integer that contains the address space identification   20600000
*       (ASID) for the referenced address space, and the second         20700000
*       fullword contains binary zeroes.                                20800000
*                                                                       20900000
*     - For codes DS and SS the doubleword is interpreted as the        21000000
*       DSPNAME for the referenced data space.                          21100000
*                                                                       21200000
*     - For code SC the doubleword is interpreted as a component        21300000
*       identifier.                                                     21400000
*                                                                       21500000
*     - For other codes this doubleword has no meaning and should be    21600000
*       set to zero.                                                    21700000
*                                                                       21800000
*---------------------------------------------------------------------- 21900000
.L000    AIF   ('&DSECT' EQ 'NO').L010 No DSECT statement          @L1C 22000000
&P       DSECT ,                  IPCS address space descriptor    @D1A 22100000
         AGO   .L020              Define structure of record       @D1A 22200000
.L010    ANOP  ,                  No DSECT statement               @D1A 22300000
         DS    0F                 Align on word boundary           @P2C 22400000
&P       DS    0CL16              IPCS address space descriptor    @P2A 22500000
.L020    ANOP  ,                  Define structure of record       @D1A 22600000
&P.0     DS    0C                 Begin BLSRDATS               #MD03009 22700000
.* ==================================================================== 22800000
.* Define the type code that encodes IPCS address space type keyword    22900000
.* combinations                                                         23000000
.* ==================================================================== 23100000
&P.T     DS    0CL2               Address space type code          @L6C 23200000
         AIF   ('&T' EQ '').L022  Implicit type code               @L6A 23300000
         DC    AL2(&T)            Address space type code          @L6A 23400000
         AGO   .L024              Define type constants            @L6A 23500000
.L022    ANOP  ,                  Implicit type code               @L6A 23600000
         DC    AL2(ZZZASTNO)      Address space type code          @L6A 23700000
.* ==================================================================== 23800000
.* Define symbolics associated with the various type codes              23900000
.* ==================================================================== 24000000
.L024    AIF   (&EDATS).L030      One set of constants in assembly @L2A 24100000
ZZZASTA  EQU   C'A '              ABSOLUTE                         @L2A 24200000
ZZZASTBL EQU   C'BL'              BLOCK                            @L2A 24300000
ZZZASTBS EQU   C'BS'              RBA                              @L2A 24400000
ZZZASTBT EQU   C'BT'              TTR                              @L2A 24500000
ZZZASTC  EQU   C'C '              CPU STATUS                       @L2A 24600000
ZZZASTCE EQU   C'CE'              CPU DOMAIN(VECTOR)               @L2A 24700000
ZZZASTCR EQU   C'CR'              CPU REAL                         @L2A 24800000
ZZZASTCT EQU   C'CT'              CPU DOMAIN(CPUTRACE)             @P4A 24900000
ZZZASTCV EQU   C'CV'              CPU ASID                         @L2A 25000000
ZZZASTDS EQU   C'DS'              ASID DSPNAME                     @L2A 25100000
ZZZASTH  EQU   C'H '              HEADER                           @L2A 25200000
ZZZASTLI EQU   C'LI'              LITERAL                          @L3A 25300000
ZZZASTNO EQU   C'  '              No address space type code       @L6A 25400000
ZZZASTSB EQU   C'SB'              DOMAIN(SDUMPBUFFER)              @L2A 25500000
ZZZASTSC EQU   C'SC'              COMPDATA                         @L2A 25600000
ZZZASTSD EQU   C'SD'              DOMAIN(SUMDUMP)                  @L2A 25700000
ZZZASTSS EQU   C'SS'              ASID DSPNAME SUMDUMP             @L2A 25800000
ZZZASTSV EQU   C'SV'              ASID SUMDUMP                     @L2A 25900000
&EDATS   SETB  1                  Blurb produced once in assembly  @L2M 26000000
.L030    ANOP  ,                  One set of constants in assembly @L2A 26100000
&P.H     DC    XL2'00'            Reserved                         @L2C 26200000
.* ==================================================================== 26300000
.* Define the numeric primary qualifier that is interpreted in context  26400000
.* of the preceding type code                                           26500000
.* ==================================================================== 26600000
&P.1     DS    0F                 Integer 1                        @L6C 26700000
         AIF   ('&Q1' EQ '').L032 Impliict primary qualifier       @L6A 26800000
         DC    A(&Q1)             Integer 1                        @L6A 26900000
         AGO   .L040              Process secondary qualifier      @L6A 27000000
.L032    ANOP  ,                  Impliict primary qualifier       @L6A 27100000
         DC    F'-1'              Integer 1                        @L6A 27200000
.* ==================================================================== 27300000
.* Define the secondary qualifier that is interpreted in context of the 27400000
.* of the preceding type code and primary qualifier.                    27500000
.* ==================================================================== 27600000
.L040    ANOP  ,                  Process secondary qualifier      @L6A 27700000
&P.C     DS    0CL8               Second qualifier                 @L2A 27800000
         AIF   ('&T' EQ 'ZZZASTDS').L042 ASID DSPNAME              @L6A 27900000
         AIF   ('&T' EQ 'ZZZASTSC').L042 COMPDATA                  @L6A 28000000
         AIF   ('&T' EQ 'ZZZASTSS').L042 ASID DSPNAME SUMDUMP      @L6A 28100000
         AGO   .L050              Numeric 2nd qualifier            @L6A 28200000
.* ==================================================================== 28300000
.* Define a 2nd qualifier as a 8-character string                       28400000
.* ==================================================================== 28500000
.L042    AIF   ('&Q2' EQ '').L044 Implicit character qualifier     @L6A 28600000
         DS    CL8'&Q2'           Second qualifier                 @L6A 28700000
         AGO   .L046              Define alternate interpretation  @L6A 28800000
.L044    ANOP  ,                  Implicit character qualifier     @L6A 28900000
         DS    CL8' '             Second qualifier                 @L6A 29000000
.L046    ANOP  ,                  Implicit character qualifier     @L6A 29100000
         ORG   &P.C               Define alternate interpretation  @L6A 29200000
&P.2     DS    F                  Integer 2                        @L6A 29300000
&P.3     DS    XL4                Reserved                         @L6A 29400000
         AGO   .L060              2nd qualifier defined            @L6A 29500000
.* ==================================================================== 29600000
.* Define the 2nd qualifier is a numeric value                          29700000
.* ==================================================================== 29800000
.L050    ANOP  ,                  Numeric 2nd qualifier            @L6A 29900000
&P.2     DS    0F                 Integer 2                        @L6A 30000000
         AIF   ('&Q2' EQ '').L052 Implicit character qualifier     @L6A 30100000
         DC    A(&Q2)             Integer 2                        @L6A 30200000
         AGO   .L054              Pad BLSRDATS to 16 bytes         @L6A 30300000
.L052    ANOP  ,                  Implicit character qualifier     @L6A 30400000
         DC    F'0'               Integer 2                        @D1A 30500000
.L054    ANOP  ,                  Pad BLSRDATS to 16 bytes         @L6A 30600000
&P.3     DC    XL4'00'            Reserved                         @L2C 30700000
.* ==================================================================== 30800000
.* Mark the end of the encoded address space structure                  30900000
.* ==================================================================== 31000000
.L060    ANOP  ,                  2nd qualifier defined            @L6A 31100000
&P.9     DS    0C                 End BLSRDATS                 #MD03009 31200000
         MEND  ,                  End assembler macro BLSRDATS       */ 31300000
*                                                                       31400000
*     %END;                         /* Assembler macro skipped   @L2P*/ 31500000
*%BLSRDATS:                         /* Address space identification  */ 31600000
*   MACRO KEYS(MF);                                                     31700000
*                                                                       31800000
*/* ---------------------------------------------------------------- */ 31900000
*/* Define External Macro-Variables                                  */ 32000000
*/* ---------------------------------------------------------------- */ 32100000
*                                                                       32200000
*   DECLARE                         /* External macro variables      */ 32300000
*     ELSOPTS  CHARACTER EXTERNAL,  /* IPCS macro options        @P1A*/ 32400000
*     ELSRDATS CHARACTER EXTERNAL,  /* BLSRDATS global data      @P1A*/ 32500000
*     EHBENDCHAR CHARACTER EXTERNAL, /* Final punctuation            */ 32600000
*     EHBLVL1  CHARACTER EXTERNAL,  /* First level number            */ 32700000
*     EHBLVL2  CHARACTER EXTERNAL,  /* Second level number           */ 32800000
*     EHBLVL3  CHARACTER EXTERNAL,  /* Third level number        @L2P*/ 32900000
*     EHBMF1   CHARACTER EXTERNAL,  /* Macro form                    */ 33000000
*     EHBMF2   CHARACTER EXTERNAL,  /* Prefix characters             */ 33100000
*     EHBMF3   CHARACTER EXTERNAL,  /* Scope/storage class           */ 33200000
*     EHBMF3A  CHARACTER EXTERNAL,  /* Complete initialization flag  */ 33300000
*     EHBCOL1  FIXED EXTERNAL,      /* First indentation column      */ 33400000
*     EHBCOL2  FIXED EXTERNAL,      /* Second indentation column     */ 33500000
*     EHBCOL3  FIXED EXTERNAL,      /* Third indentation column  @L2P*/ 33600000
*     EHBRC    FIXED EXTERNAL;      /* Macro return code             */ 33700000
*   DEACTIVATE                      /* Prevent accidents             */ 33800000
*       ELSRDATS;                   /* BLSRDATS global data      @P1A*/ 33900000
*                                                                       34000000
*/* ---------------------------------------------------------------- */ 34100000
*/* Define Internal Macro-Variables                                  */ 34200000
*/* ---------------------------------------------------------------- */ 34300000
*                                                                       34400000
*   DECLARE                         /* Internal macro variables      */ 34500000
*     CMACLIST1 CHARACTER INTERNAL, /* MACLIST(1)                @L4A*/ 34600000
*     CQCOMPLETE CHARACTER INTERNAL, /* Literal                      */ 34700000
*     CQINITIAL CHARACTER INTERNAL; /* Literal                   @P1C*/ 34800000
*   DEACTIVATE CMACLIST1;           /* Prevent accidents         @L4A*/ 34900000
*   CMACLIST1 = TRANSLATE(MACLIST(1)); /*                        @L4A*/ 35000000
*   CQCOMPLETE = 'COMPLETE';        /* Literal                       */ 35100000
*   CQINITIAL = ' INITIAL(';        /* Literal                       */ 35200000
*   ANSWER('?'!!MACLABEL!!'BLRMF('!!MF!!')FORMS(L,S);');                35300000
*   IF EHBRC > 8 THEN               /* Serious error detected        */ 35400000
*     GO TO L99900;                 /* Serious error exit            */ 35500000
*   IF EHBMF1 = 'LIST' THEN         /* List form                     */ 35600000
*     ANSWER('DECLARE') COLUMN(5);                                      35700000
*   IF EHBMF3A = CQCOMPLETE THEN    /* INITIALIZE                @P3P*/ 35800000
*     GO TO L00100;                 /* Full expansion            @P3A*/ 35900000
*   IF INDEX(ELSOPTS,'DEBUG') = 0 THEN /* Minimize debugging data       36000000
*                                                                @P1A*/ 36100000
*     DO;                           /* Minimize debugging data   @P1A*/ 36200000
*       IF EHBLVL1(1:1) ^= '1' THEN /* Level number required     @P1A*/ 36300000
*         ANSWER(EHBLVL1) COLUMN(EHBCOL1); /*                    @P1A*/ 36400000
*       ANSWER(EHBMF2!!EHBMF3!!' CHARACTER(16) BOUNDARY(WORD)'!!        36500000
*           EHBENDCHAR!!'/*BLSRDATS #MD03009*/') COLUMN(EHBCOL1); /*    36600000
*                                                                @L6C*/ 36700000
*     END;                          /* Minimize debugging data   @P1A*/ 36800000
*   ELSE                            /* Debugging data                */ 36900000
*                                                                       37000000
*     /***************************************************************/ 37100000
*     /*                                                             */ 37200000
*     /* Debugging Data                                              */ 37300000
*     /*                                                             */ 37400000
*     /***************************************************************/ 37500000
*                                                                       37600000
*L00100:                            /* Full expansion            @P3C*/ 37700000
*     DO;                           /* Debugging data                */ 37800000
*       IF LENGTH(ELSRDATS) = 0 THEN /* Produce blurb            @L1C*/ 37900000
*                                                                       38000000
*         /***********************************************************/ 38100000
*         /*                                                         */ 38200000
*         /* Produce Blurb                                           */ 38300000
*         /*                                                         */ 38400000
*         /***********************************************************/ 38500000
*                                                                       38600000
*         DO;                       /* Produce blurb             @L1M*/ 38700000
*           ANSWER('/*--------------------------------------------------38800000
*----------------*/ /* An IPCS address space is specified by three value38900000
*s:              */ /*                                                  39000000
*                */ /* (1) A two-character code identifying the type of 39100000
*address         */ /*     space:                                       39200000
*                */ /*                                                  39300000
*                */ /*     - Letter code A indicates that the file conta39400000
*ins an MVS      */ /*       high-speed dump and that absolute main stor39500000
*age of the      */ /*       dumped system is being referenced (ABSOLUTE39600000
*)               */ /*                                                  39700000
*                */ ') COLUMN(2);   /*                           @L2C*/ 39800000
*           ANSWER('/*     - Code BL indicates that a physical block in 39900000
*a file is       */ /*       being referenced using a relative block num40000000
*ber (BLOCK)     */ /*                                                  40100000
*                */ /*     - Code BS indicates that a relative byte addr40200000
*ess group in    */ /*       the file is being referenced (RBA)         40300000
*                */ /*                                                  40400000
*                */ /*     - Code BT indicates that a physical block in 40500000
*a file is       */ /*       being referenced using a relative track add40600000
*ress (TTR)      */ /*                                                  40700000
*                */ /*     - Letter code C indicates that the file conta40800000
*ins an MVS      */ /*       high-speed dump and that the CPU status dat40900000
*a for one       */ /*       dumped CPU is being referenced (CPU STATUS)41000000
*                */ /*                                                  41100000
*                */ ') COLUMN(2);   /*                           @L2C*/ 41200000
*           ANSWER('/*     - Code CE indicates that the file contains an41300000
* MVS            */ /*       high-speed dump and that vector registers f41400000
*or one CPU are  */ /*       being referenced (CPU DOMAIN(VECTOR))      41500000
*                */ /*                                                  41600000
*                */ /*     - Code CR indicates that the file contains an41700000
* MVS            */ /*       high-speed dump and that real main storage 41800000
*seen by one     */ /*       CPU is being referenced (CPU REAL)         41900000
*                */ /*                                                  42000000
*                */ /*     - Code CT indicates that the file contains an42100000
* MVS            */ /*       high-speed dump and that a console loop tra42200000
*ce for one CPU  */ /*       is being referenced (CPU DOMAIN(CPUTRACE)) 42300000
*                */ /*                                                  42400000
*                */ ') COLUMN(2);   /*                           @L2C*/ 42500000
*           ANSWER('/*     - Code CV indicates that the file contains an42600000
* MVS            */ /*       high-speed dump and that virtual main stora42700000
*ge seen by one  */ /*       MVS address space dispatched on a designate42800000
*d CPU is being  */ /*       referenced (CPU ASID)                      42900000
*                */ /*                                                  43000000
*                */ /*     - Code DS indicates that the file contains an43100000
* MVS            */ /*       high-speed dump and that a data space is be43200000
*ing referenced  */ /*       (ASID DSPNAME)                             43300000
*                */ /*                                                  43400000
*                */ ') COLUMN(2);   /*                           @L2C*/ 43500000
*           ANSWER('/*     - Letter code H indicates that the file conta43600000
*ins an MVS      */ /*       high-speed dump and that the header data fo43700000
*r the dump is   */ /*       being referenced (HEADER)                  43800000
*                */ /*                                                  43900000
*                */ ') COLUMN(2);   /*                           @L3C*/ 44000000
*           ANSWER('/*     - Code LI refers to a literal value associate44100000
*d with a symbol */ /*       (LITERAL)                                  44200000
*                */ /*                                                  44300000
*                */ ') COLUMN(2);   /*                           @L3A*/ 44400000
*           ANSWER('/*     - Code SB indicates that the file contains an44500000
* MVS            */ /*       high-speed dump and that the SDUMP 4K buffe44600000
*r is being      */ /*       referenced (DOMAIN(SDUMPBUFFER))           44700000
*                */ /*                                                  44800000
*                */ /*     - Code SC indicates that the file contains an44900000
* MVS            */ /*       high-speed dump and that component data is 45000000
*being           */ /*       referenced (COMPDATA)                      45100000
*                */ /*                                                  45200000
*                */ ') COLUMN(2);   /*                           @L3A*/ 45300000
*           ANSWER('/*     - Code SD indicates that the file contains an45400000
* MVS            */ /*       high-speed dump and that the SDUMP summary 45500000
*dump records    */ /*       are being referenced (DOMAIN(SUMDUMP))     45600000
*                */ /*                                                  45700000
*                */ /*     - Code SS indicates that the file contains an45800000
* MVS            */ /*       high-speed dump and that the portion of a d45900000
*ata space       */ /*       represented in summary dump records is bein46000000
*g referenced    */ /*       (ASID DSPNAME SUMDUMP)                     46100000
*                */ /*                                                  46200000
*                */ ') COLUMN(2);   /*                           @L2C*/ 46300000
*           ANSWER('/*     - Code SV indicates that the file contains an46400000
* MVS            */ /*       high-speed dump and that the portion of one46500000
* MVS address    */ /*       space represented in summary dump records i46600000
*s being         */ /*       referenced (ASID SUMDUMP)                  46700000
*                */ /*                                                  46800000
*                */ /* (2) A binary integer whose interpretation depends46900000
* on the         */ /*     preceding code:                              47000000
*                */ /*                                                  47100000
*                */ /*     - For code BL this integer should be the rela47200000
*tive block      */ /*       number                                     47300000
*                */ /*                                                  47400000
*                */ ') COLUMN(2);   /*                           @L2C*/ 47500000
*           ANSWER('/*     - For code BS this integer should be the rela47600000
*tive byte       */ /*       address group number                       47700000
*                */ /*                                                  47800000
*                */ /*     - For code BT this integer should be the rela47900000
*tive track      */ /*       address                                    48000000
*                */ /*                                                  48100000
*                */ /*     - For codes beginning with the letter C this 48200000
*integer         */ /*       contains the System/370 CPU address (STAP i48300000
*nstruction)     */ /*       for the referenced CPU or X''FFFFFFFF''.   48400000
*                  */ /*                                                48500000
*                  */ /*    - For codes DS and SS this integer contains 48600000
*the address space */ /*      identification (ASID) for the address spac48700000
*e that owns the   */ /*      referenced data space.                    48800000
*                  */ /*                                                48900000
*                  */ ') COLUMN(2); /*                           @L3C*/ 49000000
*           ANSWER('/*     - For code LI this integer is an arbitrary nu49100000
*mber that IPCS   */ /*     associates with a symbolic literal.  Zero is49200000
* used for        */ /*     literals when no storage is available.      49300000
*                 */ /*                                                 49400000
*                 */ ') COLUMN(2);  /*                           @L3A*/ 49500000
*           ANSWER('/*     - For other codes this integer has no meaning49600000
* and should be  */ /*       set to X''FFFFFFFF''.                      49700000
*                  */ /*                                                49800000
*                  */ /* (3) A doubleword whose interpretation depends o49900000
*n the preceding   */ /*     code:                                      50000000
*                  */ ') COLUMN(2); /*                           @L5C*/ 50100000
*           ANSWER('/*                                                  50200000
*                */ /*   - For code A the first fullword contains zero n50300000
*ormally.  A     */ /*     non-zero associated ASID may appear in the fi50400000
*rst fullword in */ /*     the dump header of records written by SADUMP.50500000
*  The second    */ /*     fullword contains binary zeroes in all cases.50600000
*                */ ') COLUMN(2);   /*                           @L5A*/ 50700000
*           ANSWER('/*                                                  50800000
*                */ /*     - For codes CV and SV the first fullword is i50900000
*nterpreted as   */ /*       a binary integer that contains the address 51000000
*space           */ /*       identification (ASID) for the referenced ad51100000
*dress space,    */ /*       and the second fullword contains binary zer51200000
*oes.            */ /*                                                  51300000
*                */ ') COLUMN(2);   /*                           @L5A*/ 51400000
*           ANSWER('/*     - For code SC the doubleword is interpreted a51500000
*s a component   */ /*       identifier.                                51600000
*                */ /*                                                  51700000
*                */ /*     - For codes DS and SS the doubleword is inter51800000
*preted as the   */ /*       DSPNAME for the referenced data space.     51900000
*                */ /*                                                  52000000
*                */ /*     - For other codes this doubleword has no mean52100000
*ing and should  */ /*       be set to zero.                            52200000
*                */ /*                                                  52300000
*                */ /* -------------------------------------------------52400000
*--------------- */ ') COLUMN(2);   /*                           @L2C*/ 52500000
*           ELSRDATS = EHBMF2;      /* Blurb produced            @L1C*/ 52600000
*         END;                      /* Produce blurb             @L1M*/ 52700000
*       ELSE                        /* Suppress blurb                */ 52800000
*         ANSWER('/*Block comment before '!!ELSRDATS!!                  52900000
*             ' also pertains to '!!EHBMF2!!'*/') COLUMN(7); /*  @L1A*/ 53000000
*       ANSWER(EHBLVL1!!EHBMF2!!EHBMF3!!                                53100000
*           'CHARACTER(16) BOUNDARY(WORD),/*BLSRDATS #MD03009*/')       53200000
*           COLUMN(EHBCOL1);        /*                           @L6C*/ 53300000
*       ANSWER(EHBLVL2!!EHBMF2!!'0 CHARACTER(0),/*BLSRDATS #MD03009*/') 53400000
*           COLUMN(EHBCOL2);        /*                           @L6C*/ 53500000
*       ANSWER(EHBLVL2!!EHBMF2!!'T CHARACTER(2)') COLUMN(EHBCOL2);      53600000
*       IF EHBMF3A = CQCOMPLETE THEN /* Initialize                   */ 53700000
*         IF LENGTH(MACLIST(1)) > 0 THEN /* Explicit primary index   */ 53800000
*           ANSWER(CQINITIAL!!MACLIST(1)!!')');                         53900000
*         ELSE                      /* Implicit primary index        */ 54000000
*           ANSWER(CQINITIAL!!'ZZZASTNU)'); /* Null value            */ 54100000
*       ANSWER(',/*Address space type code*/'); /*               @P1C*/ 54200000
*       ANSWER(EHBLVL2!!EHBMF2!!'H BIT(16) BOUNDARY(WORD,3)') COLUMN(   54300000
*           EHBCOL2);               /*                           @L2C*/ 54400000
*       IF EHBMF3A = CQCOMPLETE THEN /* INITIALIZE                   */ 54500000
*         ANSWER(CQINITIAL!!'''0000''X)');                              54600000
*       ANSWER(',');                                                    54700000
*       ANSWER(EHBLVL2!!EHBMF2!!'1 UNSIGNED BINARY(32)') COLUMN(EHBCOL2 54800000
*           );                                                          54900000
*       IF EHBMF3A = CQCOMPLETE THEN /* INITIALIZE                   */ 55000000
*         IF LENGTH(MACLIST(2)) > 0 THEN /* Explicit primary index   */ 55100000
*           ANSWER(CQINITIAL!!MACLIST(2)!!')');                         55200000
*         ELSE                      /* Implicit primary index        */ 55300000
*           IF LENGTH(MACLIST(1)) = 8 & /* Data type specified and   */ 55400000
*              CMACLIST1 = 'ZZZASTCV' THEN /* Is for a virtual          55500000
*                                      address                   @L4C*/ 55600000
*             ANSWER(CQINITIAL!!'ZZZAS1NO)'); /* No CPU indicator       55700000
*                                                                @L1A*/ 55800000
*           ELSE                    /* Implicit primary index        */ 55900000
*             ANSWER(CQINITIAL!!'ZZZAS1NU)'); /* NULL VALUE          */ 56000000
*       ANSWER(',/*Integer 1*/');   /*                           @P1C*/ 56100000
*       ANSWER(EHBLVL2!!EHBMF2!!'C CHARACTER(8) BOUNDARY(WORD)') COLUMN 56200000
*           (EHBCOL2);              /*                           @L2A*/ 56300000
*       IF                          /* Initialize doubleword     @L2A*/ 56400000
*          EHBMF3A = CQCOMPLETE &   /* Initialized                   */ 56500000
*          (CMACLIST1 = 'ZZZASTDS' ! CMACLIST1 = 'ZZZASTSC') THEN       56600000
*         DO;                       /* Initialize doubleword     @L4C*/ 56700000
*           IF LENGTH(MACLIST(3)) > 0 THEN /* Explicit secondary        56800000
*                                      index                     @L2P*/ 56900000
*             ANSWER(CQINITIAL!!MACLIST(3)!!')'); /*             @L2P*/ 57000000
*           ELSE                    /* Implicit secondary index      */ 57100000
*             ANSWER(CQINITIAL!!''' '')'); /* No component name  @L2A*/ 57200000
*           EHBMF3A = '';           /* Initialized               @L2A*/ 57300000
*         END;                      /* Initialize doubleword     @L2A*/ 57400000
*       ANSWER(',/*Qualifier 2*/'); /*                           @L2A*/ 57500000
*       ANSWER(EHBLVL3!!EHBMF2!!'2 UNSIGNED BINARY(32)') COLUMN(EHBCOL3 57600000
*           );                      /*                           @L2C*/ 57700000
*       IF EHBMF3A = CQCOMPLETE & CMACLIST1 ^= 'ZZZASTDS' & CMACLIST1   57800000
*          ^= 'ZZZASTSC' THEN       /*                           @L4C*/ 57900000
*         IF LENGTH(MACLIST(3)) > 0 THEN /* Explicit secondary index */ 58000000
*           ANSWER(CQINITIAL!!MACLIST(3)!!')');                         58100000
*         ELSE                      /* Implicit secondary index      */ 58200000
*           ANSWER(CQINITIAL!!'ZZZAS2NU)'); /* Null value            */ 58300000
*       ANSWER(',/*Integer 2*/');   /*                           @P1C*/ 58400000
*       ANSWER(EHBLVL3!!EHBMF2!!'3 BIT(32) BOUNDARY(WORD)') COLUMN(     58500000
*           EHBCOL3);               /*                           @L2C*/ 58600000
*       IF EHBMF3A = CQCOMPLETE & CMACLIST1 ^= 'ZZZASTDS' & CMACLIST1   58700000
*          ^= 'ZZZASTSC' THEN       /*                           @L4C*/ 58800000
*         ANSWER(CQINITIAL!!'''00''X)');                                58900000
*       ANSWER(',');                                                    59000000
*       ANSWER(EHBLVL2!!EHBMF2!!'9 CHARACTER(0)'!!EHBENDCHAR!!          59100000
*           '/*BLSRDATS #MD03009*/') COLUMN(EHBCOL2); /*         @L6C*/ 59200000
*     END;                          /* Debugging data            @P1A*/ 59300000
*L99900:                            /* Serious error exit            */ 59400000
*   IF EHBRC > 8 THEN               /* Serious error detected        */ 59500000
*     ANSWER(';/*BLSRDATS'!!MACLIST!!' '!!MACKEYS!!'*/') COLUMN(5);     59600000
*   ANSWER('?BLR003(BLSRDATS,'!!CHAR(EHBRC)!!');');                     59700000
*   RETURN CODE(EHBRC);                                                 59800000
*   %END BLSRDATS;                                                      59900000
