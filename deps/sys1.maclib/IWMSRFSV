*%IWMSRFSV: MACRO KEYS(CONNTKN,APPLENV,SERVER_DATA,RETCODE,RSNCODE,     00000100
*                 PLISTVER,MF);                                         00000200
*/**** START OF SPECIFICATIONS **************************************** 00000300
*                                                                     * 00000400
*                                                                     * 00000500
*01* MACRO NAME:  IWMSRFSV                              -01/31/13-<0> * 00000600
*                                                                     * 00000700
*                                                                     * 00000800
*01* DESCRIPTIVE NAME:  Sysplex Routing Find Server Routine           * 00000900
*                                                                     * 00001000
*01* PROPRIETARY STATEMENT:                                           * 00001100
*                                                                     * 00001200
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001300
*     5650-ZOS COPYRIGHT IBM CORP. 1997, 2013                         * 00001400
*                                                                     * 00001500
* STATUS= HBB7790                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*                                                                     * 00001900
*01* FUNCTION:                                                        * 00002000
*                                                                     * 00002100
*      IWMSRFSV will find a server associated with the specified      * 00002200
*      application environment and return the associated server data  * 00002300
*      which was passed at the time the server connected to WLM (via  * 00002400
*      IWM4CON).  The only eligible servers are those that have       * 00002500
*      connected to WLM with a specification of IWM4CON               * 00002600
*      SERVER_MANAGER=YES,SERVER_TYPE=ROUTING, and whose application  * 00002700
*      environment matches the input value passed to IWMSRFSV, which  * 00002800
*      implies that the server belongs to the same subsystem type as  * 00002900
*      the caller.  The server chosen is considered a best choice to  * 00003000
*      run work in terms of a variety of system conditions which are  * 00003100
*      monitored.                                                     * 00003200
*                                                                     * 00003300
*      When no eligible servers are already started, and the service  * 00003400
*      policy allows MVS to start a server, and certain other         * 00003500
*      conditions apply, MVS will start a new server on behalf of the * 00003600
*      request. Circumstances such as this imply that the program     * 00003700
*      calling this service may be suspended until the request can be * 00003800
*      resolved. When no eligible servers exist and none can be       * 00003900
*      started the caller will receive a return code to reflect this. * 00004000
*                                                                     * 00004100
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00004200
*                                                                     * 00004300
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00004400
*                                                                     * 00004500
*01* ENVIRONMENT:                                                     * 00004600
*                                                                     * 00004700
*                                                                     * 00004800
*      Dispatchable unit mode: Task mode.                             * 00004900
*                                                                     * 00005000
*      Minimum authorization: Supervisor state or program key mask    * 00005100
*                        (PKM) allowing keys 0-7.                     * 00005200
*                                                                     * 00005300
*      AMODE:            31-bit.                                      * 00005400
*                                                                     * 00005500
*      ASC mode:         Primary.                                     * 00005600
*                                                                     * 00005700
*      Cross Memory Mode: PASN=HASN=SASN.                             * 00005800
*                                                                     * 00005900
*      Interrupt status: Enabled for I/O and external interrupts.     * 00006000
*                                                                     * 00006100
*      Locks:            No locks held.                               * 00006200
*                                                                     * 00006300
*      Control parameters: Control parameters must be in the primary  * 00006400
*                        address space.                               * 00006500
*                                                                     * 00006600
*                                                                     * 00006700
*                                                                     * 00006800
*01* PROGRAMMING REQUIREMENTS:                                        * 00006900
*                                                                     * 00007000
*                                                                     * 00007100
*    1.  The macro IWMYCON must be included to use this macro.        * 00007200
*                                                                     * 00007300
*    2.  The macro IWMPB must be in the library concatenation, since  * 00007400
*        it is included by IWMYCON.                                   * 00007500
*                                                                     * 00007600
*    3.  Note that the high order halfword of register 0, and the     * 00007700
*        reason code variable when specified, may be non-zero and     * 00007800
*        represents diagnostic data which is NOT part of the external * 00007900
*        interface.  The high order halfword should thus be excluded  * 00008000
*        from comparison with the reason code values described above. * 00008100
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00008200
*        be used for this purpose.                                    * 00008300
*                                                                     * 00008400
*    4.  All character inputs are assumed to be padded on the right   * 00008500
*        with blanks, when needed to fill out the entire length.      * 00008600
*                                                                     * 00008700
*                                                                     * 00008800
*                                                                     * 00008900
*01* RESTRICTIONS:                                                    * 00009000
*                                                                     * 00009100
*                                                                     * 00009200
*    1.  This macro may not be used prior to the completion of WLM    * 00009300
*        address space initialization.                                * 00009400
*                                                                     * 00009500
*    2.  This macro may only be used on MVS/ESA HBB6603 or higher     * 00009600
*        levels.                                                      * 00009700
*                                                                     * 00009800
*    3.  This macro may not be used during task/address space         * 00009900
*        termination.                                                 * 00010000
*                                                                     * 00010100
*    4.  NO FRRs may be established.                                  * 00010200
*                                                                     * 00010300
*    5.  The Connect token from the input parameter list must be      * 00010400
*        owned by the current home address space.                     * 00010500
*                                                                     * 00010600
*    6.  The address space from which this service is invoked must    * 00010700
*        have previously connected to WLM, using IWM4CON Router=Yes.  * 00010800
*        The input application environment must be associated in the  * 00010900
*        current service policy with the subsystem type specified     * 00011000
*        through IWM4CON.                                             * 00011100
*                                                                     * 00011200
*                                                                     * 00011300
*                                                                     * 00011400
*01* INPUT REGISTER INFORMATION:                                      * 00011500
*                                                                     * 00011600
*    Before issuing the IWMSRFSV macro, the caller does not have to   * 00011700
*    place any information into any register unless using it in       * 00011800
*    register notation for a particular parameter, or using it as a   * 00011900
*    base register.                                                   * 00012000
*                                                                     * 00012100
*01* OUTPUT REGISTER INFORMATION:                                     * 00012200
*                                                                     * 00012300
*    When control returns to the caller, the GPRs contain:            * 00012400
*                                                                     * 00012500
*                                                                     * 00012600
*    REGISTER  CONTENTS                                               * 00012700
*                                                                     * 00012800
*    0         Reason code if GR15 return code is non-zero            * 00012900
*                                                                     * 00013000
*    1         Used as work registers by the system                   * 00013100
*                                                                     * 00013200
*    2-13      Unchanged                                              * 00013300
*                                                                     * 00013400
*    14        Used as work registers by the system                   * 00013500
*                                                                     * 00013600
*    15        Return code                                            * 00013700
*                                                                     * 00013800
*                                                                     * 00013900
*                                                                     * 00014000
*    When control returns to the caller, the ARs contain:             * 00014100
*                                                                     * 00014200
*                                                                     * 00014300
*    REGISTER  CONTENTS                                               * 00014400
*                                                                     * 00014500
*    0-1       Used as work registers by the system                   * 00014600
*                                                                     * 00014700
*    2-13      Unchanged                                              * 00014800
*                                                                     * 00014900
*    14-15     Used as work registers by the system                   * 00015000
*                                                                     * 00015100
*                                                                     * 00015200
*                                                                     * 00015300
*    Some callers depend on register contents remaining the same      * 00015400
*    before and after issuing a service.  If the system changes the   * 00015500
*    contents of registers on which the caller depends, the caller    * 00015600
*    must save them before issuing the service, and restore them      * 00015700
*    after the system returns control.                                * 00015800
*                                                                     * 00015900
*01* PERFORMANCE IMPLICATIONS:                                        * 00016000
*                                                                     * 00016100
*    The task issuing this service may be suspended while a new       * 00016200
*    server address space is being started, possibly on another MVS   * 00016300
*    image.                                                           * 00016400
*                                                                     * 00016500
*01* SYNTAX:                                                          * 00016600
*                                                                     * 00016700
*Ýxlabel¨  IWMSRFSV     CONNTKN=xconntkn                              * 00016800
*                      ,APPLENV=xapplenv                              * 00016900
*                      ,SERVER_DATA=xserver_data                      * 00017000
*                     Ý,RETCODE=xretcode¨                             * 00017100
*                     Ý,RSNCODE=xrsncode¨                             * 00017200
*                     Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨         * 00017300
*                    ÐÝ,MF=S¨                                         * 00017400
*                    ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                  * 00017500
*                    ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                    * 00017600
*                                                                     * 00017700
*                                                                     * 00017800
*      Where:                                                         * 00017900
*                                                                     * 00018000
*                                                                     * 00018100
*      Ýxlabel¨                                                       * 00018200
*          is an optional symbol, starting in column 1, that is the   * 00018300
*          name on the IWMSRFSV macro invocation.  The name must      * 00018400
*          conform to the rules for an ordinary assembler language    * 00018500
*          symbol.                                                    * 00018600
*          DEFAULT: No name.                                          * 00018700
*                                                                     * 00018800
*                                                                     * 00018900
*                                                                     * 00019000
*                                                                     * 00019100
*      CONNTKN(xconntkn)                                              * 00019200
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00019300
*          only) of a required 32 bit input which contains the        * 00019400
*          connect token for the current home space.                  * 00019500
*                                                                     * 00019600
*                                                                     * 00019700
*                                                                     * 00019800
*                                                                     * 00019900
*      APPLENV(xapplenv)                                              * 00020000
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00020100
*          only) of a required 32 character input which contains the  * 00020200
*          application environment under which work requests are to   * 00020300
*          be served.                                                 * 00020400
*                                                                     * 00020500
*                                                                     * 00020600
*                                                                     * 00020700
*                                                                     * 00020800
*      SERVER_DATA(xserver_data)                                      * 00020900
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00021000
*          only) of a required 32 character output which contains the * 00021100
*          data needed to uniquely identify the chosen server.  The   * 00021200
*          structure of this data is undefined to MVS, and is the     * 00021300
*          same data passed when the server connected using IWM4CON   * 00021400
*          SERVER_MANAGER=YES, SERVER_TYPE=ROUTING, SERVER_DATA=...   * 00021500
*                                                                     * 00021600
*                                                                     * 00021700
*                                                                     * 00021800
*                                                                     * 00021900
*      ÝRETCODE(xretcode)¨                                            * 00022000
*          is the name (RS-type) of an optional fullword output       * 00022100
*          variable (or register (2)-(12) or (15) ASM only) into      * 00022200
*          which the return code is to be copied from GPR 15.  If you * 00022300
*          specify 15, GPR15, REG15, or R15 (within or without        * 00022400
*          parentheses), the value will be left in GPR 15.            * 00022500
*                                                                     * 00022600
*                                                                     * 00022700
*                                                                     * 00022800
*                                                                     * 00022900
*      ÝRSNCODE(xrsncode)¨                                            * 00023000
*          is the name (RS-type) of an optional fullword output       * 00023100
*          variable into which the reason code is to be copied from   * 00023200
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00023300
*          R0 (within or without parentheses), the value will be left * 00023400
*          in GPR 0.                                                  * 00023500
*                                                                     * 00023600
*                                                                     * 00023700
*                                                                     * 00023800
*                                                                     * 00023900
*      ÝPLISTVER(»xplistver!IMPLIED_VERSIONº)¨                        * 00024000
*          is an optional byte input decimal value in the "0-0" range * 00024100
*          that specifies the macro version.  PLISTVER is the only    * 00024200
*          key allowed on the list form of MF and determines which    * 00024300
*          parameter list is generated.  Note that MAX may be         * 00024400
*          specified instead of a number, and the parameter list will * 00024500
*          be of the largest size currently supported. This size may  * 00024600
*          grow from release to release (thus possibly affecting the  * 00024700
*          amount of storage needed by your program).  If your        * 00024800
*          program can tolerate this, IBM recommends that you always  * 00024900
*          specify MAX when creating the list form parameter list as  * 00025000
*          that will ensure that the list form parameter list is      * 00025100
*          always long enough to hold whatever parameters might be    * 00025200
*          specified on the execute form.                             * 00025300
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00025400
*          default is the lowest version which allows all of the      * 00025500
*          parameters specified on the invocation to be processed.    * 00025600
*                                                                     * 00025700
*                                                                     * 00025800
*                                                                     * 00025900
*                                                                     * 00026000
*      ÝMF(»S!L!Eº)¨                                                  * 00026100
*          is an optional keyword input which specifies the macro     * 00026200
*          form.                                                      * 00026300
*          DEFAULT: S                                                 * 00026400
*                                                                     * 00026500
*                                                                     * 00026600
*          ÝMF(S)¨                                                    * 00026700
*              specifies the standard form of the macro.  The "S"     * 00026800
*              form generates code to put the parameters into the     * 00026900
*              parameter list and invoke the desired service.  Full   * 00027000
*              checking for required macro keys is done along with    * 00027100
*              supplying defaults for omitted optional parameters.    * 00027200
*              The ?EPILOG macro must be invoked at the end of the    * 00027300
*              module.                                                * 00027400
*                                                                     * 00027500
*              For assembly language code modules, the "S" form       * 00027600
*              generates code to put the parameters into an in-line   * 00027700
*              parameter list and invoke the desired service.  Full   * 00027800
*              checking for required macro keys is done along with    * 00027900
*              supplying defaults for omitted optional parameters.    * 00028000
*                                                                     * 00028100
*          ÝMF(L,xmfctrl»,xmfattr!BDY(DWORD)º)¨                       * 00028200
*              specifies the list form of the macro.  The "L" form    * 00028300
*              defines an area to be used for the parameter list.     * 00028400
*              Only the PLISTVER key may be specified on the          * 00028500
*              invocation.  All other macro parameters are flagged as * 00028600
*              errors.  If PLISTVER is not specified, the original    * 00028700
*              parameter list definition is used.                     * 00028800
*                                                                     * 00028900
*            ,xmfctrl                                                 * 00029000
*              is a required input.  It is the name of a storage area * 00029100
*              for the parameter list.                                * 00029200
*                                                                     * 00029300
*            »,xmfattr!BDY(DWORD)º                                    * 00029400
*              is an optional 60 character input string that varies   * 00029500
*              from 1 to 60 characters. Use it to force boundary      * 00029600
*              alignment of the parameter list. Use only 0F or 0D     * 00029700
*              (assembler-only).                                      * 00029800
*              DEFAULT: 0D for Assembler, BDY(DWORD) for PL/X, which  * 00029900
*              forces the parameter list to a doubleword boundary.    * 00030000
*                                                                     * 00030100
*          ÝMF(E,xmfctrl»,COMPLETEº)¨                                 * 00030200
*              specifies the execute form of the macro.  The "E" form * 00030300
*              generates code to put the parameters into the          * 00030400
*              parameter list specified by xmfctrl and provides full  * 00030500
*              syntax checking with default setting.                  * 00030600
*                                                                     * 00030700
*            ,xmfctrl                                                 * 00030800
*              is a required input.  It is the name (RS-type) (or     * 00030900
*              address in register (1)-(12) ASM only) of a storage    * 00031000
*              area for the parameter list.                           * 00031100
*                                                                     * 00031200
*            »,COMPLETEº                                              * 00031300
*              is an optional keyword input which specifies the       * 00031400
*              degree of macro parameter syntax checking.             * 00031500
*              DEFAULT: COMPLETE                                      * 00031600
*                                                                     * 00031700
*                                                                     * 00031800
*              COMPLETE                                               * 00031900
*                  Checking for required macro keys is done and       * 00032000
*                  defaults are supplied for omitted optional         * 00032100
*                  parameters.                                        * 00032200
*                                                                     * 00032300
*                                                                     * 00032400
*                                                                     * 00032500
*                                                                     * 00032600
*                                                                     * 00032700
*                                                                     * 00032800
*                                                                     * 00032900
*01* ABEND CODES:  None.                                              * 00033000
*                                                                     * 00033100
*01* RETURN CODES:                                                    * 00033200
*                                                                     * 00033300
*                                                                     * 00033400
*            0    Name: IwmRetCodeOk                                  * 00033500
*                                                                     * 00033600
*                 Meaning: Successful completion.                     * 00033700
*                                                                     * 00033800
*                 Action: None required.                              * 00033900
*                                                                     * 00034000
*            8    Name: IwmRetCodeInvocError                          * 00034100
*                                                                     * 00034200
*                 Meaning: Invalid invocation environment or          * 00034300
*                 parameters.                                         * 00034400
*                                                                     * 00034500
*                                                                     * 00034600
*                 HEX REASON  MEANING/ACTION                          * 00034700
*                 CODE                                                * 00034800
*                                                                     * 00034900
*                 xxxx0801    Name: IwmRsnCodeSRBMode                 * 00035000
*                                                                     * 00035100
*                             Meaning: Caller is in SRB mode.         * 00035200
*                                                                     * 00035300
*                             Action: Avoid requesting this function  * 00035400
*                             in SRB mode.                            * 00035500
*                                                                     * 00035600
*                 xxxx0803    Name: IwmRsnCodeDisabled                * 00035700
*                                                                     * 00035800
*                             Meaning: Caller is disabled.            * 00035900
*                                                                     * 00036000
*                             Action: Avoid requesting this function  * 00036100
*                             while disabled.                         * 00036200
*                                                                     * 00036300
*                 xxxx0804    Name: IwmRsnCodeLocked                  * 00036400
*                                                                     * 00036500
*                             Meaning: Caller is locked.              * 00036600
*                                                                     * 00036700
*                             Action: Avoid requesting this function  * 00036800
*                             while locked.                           * 00036900
*                                                                     * 00037000
*                 xxxx080B    Name: IwmRsnCodeBadPl                   * 00037100
*                                                                     * 00037200
*                             Meaning: Error accessing parameter      * 00037300
*                             list.                                   * 00037400
*                                                                     * 00037500
*                             Action: Check for possible storage      * 00037600
*                             overlay.                                * 00037700
*                                                                     * 00037800
*                 xxxx0810    Name: IwmRsnCodeEutFrr                  * 00037900
*                                                                     * 00038000
*                             Meaning: Caller has EUT FRR             * 00038100
*                             established.                            * 00038200
*                                                                     * 00038300
*                             Action: Avoid requesting this function  * 00038400
*                             with an EUT FRR.                        * 00038500
*                                                                     * 00038600
*                 xxxx0823    Name: IwmRsnCodeDatoff                  * 00038700
*                                                                     * 00038800
*                             Meaning: Caller invoked service while   * 00038900
*                             DATOFF                                  * 00039000
*                                                                     * 00039100
*                             Action: Avoid requesting this function  * 00039200
*                             in this environment.                    * 00039300
*                                                                     * 00039400
*                 xxxx0824    Name: IwmRsnCodeAmode24                 * 00039500
*                                                                     * 00039600
*                             Meaning: Caller invoked service but was * 00039700
*                             in 24 bit addressing mode.              * 00039800
*                                                                     * 00039900
*                             Action: Request this function only when * 00040000
*                             you are in 31 bit addressing mode.      * 00040100
*                                                                     * 00040200
*                 xxxx0825    Name: IwmRsnCodeAscModeNotPrimary       * 00040300
*                                                                     * 00040400
*                             Meaning: Caller invoked service but was * 00040500
*                             not DAT on Primary ASC mode.            * 00040600
*                                                                     * 00040700
*                             Action: Avoid requesting this function  * 00040800
*                             in this environment.                    * 00040900
*                                                                     * 00041000
*                 xxxx0826    Name: IwmRsnCodeTaskTerm                * 00041100
*                                                                     * 00041200
*                             Meaning:  Caller invoked service while  * 00041300
*                             task termination is in progress for the * 00041400
*                             current TCB.                            * 00041500
*                                                                     * 00041600
*                             Action: Avoid requesting this function  * 00041700
*                             in this environment.                    * 00041800
*                                                                     * 00041900
*                 xxxx0828    Name: IwmRsnCodeBadVersion              * 00042000
*                                                                     * 00042100
*                             Meaning: Version number or version      * 00042200
*                             length field in parameter list is not   * 00042300
*                             valid.                                  * 00042400
*                                                                     * 00042500
*                             Action: Check for possible overlay of   * 00042600
*                             the parameter list.                     * 00042700
*                                                                     * 00042800
*                 xxxx083B    Name: IwmRsnCodeHomeNotOwnConn          * 00042900
*                                                                     * 00043000
*                             Meaning:  Home address space does not   * 00043100
*                             own the connect token from the input    * 00043200
*                             parameter list.                         * 00043300
*                                                                     * 00043400
*                             Action: Invoke the function with the    * 00043500
*                             correct home address space.             * 00043600
*                                                                     * 00043700
*                 xxxx0840    Name: IwmRsnCodeServiceNotEnabled       * 00043800
*                                                                     * 00043900
*                             Meaning:  Caller's space connection is  * 00044000
*                             not enabled for this service.           * 00044100
*                                                                     * 00044200
*                             Action: Avoid requesting this function  * 00044300
*                             under the input connection.  IWM4CON    * 00044400
*                             options must be specified previously to * 00044500
*                             enable this service.                    * 00044600
*                                                                     * 00044700
*                 xxxx0841    Name: IwmRsnCodeXmemMode                * 00044800
*                                                                     * 00044900
*                             Meaning: Caller invoked service but was * 00045000
*                             in cross-memory mode.                   * 00045100
*                                                                     * 00045200
*                             Action: Avoid requesting this function  * 00045300
*                             in cross-memory mode.                   * 00045400
*                                                                     * 00045500
*                 xxxx0842    Name: IwmRsnCodeNoWLMConnect            * 00045600
*                                                                     * 00045700
*                             Meaning: Caller's space is not          * 00045800
*                             connected to WLM.                       * 00045900
*                                                                     * 00046000
*                             Action: Issue IWM4CON with the          * 00046100
*                             necessary options prior to invoking     * 00046200
*                             this service.                           * 00046300
*                                                                     * 00046400
*                                                                     * 00046500
*                                                                     * 00046600
*            C    IwmRetCodeEnvError:  Environmental error.           * 00046700
*                                                                     * 00046800
*                 HEX REASON   MEANING                                * 00046900
*                 CODE                                                * 00047000
*                                                                     * 00047100
*                                                                     * 00047200
*                 xxxx0C01    Name: IwmRsnCodeNoStg                   * 00047300
*                                                                     * 00047400
*                             Meaning:  Storage is not available for  * 00047500
*                             the request.                            * 00047600
*                                                                     * 00047700
*                             Action: There is a storage shortage.    * 00047800
*                             The function may work successfully at a * 00047900
*                             later time.                             * 00048000
*                                                                     * 00048100
*                 xxxx0C1A    Name: IwmRsnCodeApplNotDefined          * 00048200
*                                                                     * 00048300
*                             Meaning:  The application environment   * 00048400
*                             name is not defined in the active WLM   * 00048500
*                             policy.                                 * 00048600
*                                                                     * 00048700
*                             Action: Check whether the correct       * 00048800
*                             application environment name is being   * 00048900
*                             used.  If so, a service administrator   * 00049000
*                             must define the application environment * 00049100
*                             in the WLM service definition.          * 00049200
*                                                                     * 00049300
*                 xxxx0C1B    Name: IwmRsnCodeApplNotSST              * 00049400
*                                                                     * 00049500
*                             Meaning:  The application environment   * 00049600
*                             name is defined for use by a different  * 00049700
*                             subsystem type in the active WLM        * 00049800
*                             policy.                                 * 00049900
*                                                                     * 00050000
*                             Action: Check whether the correct       * 00050100
*                             application environment name is being   * 00050200
*                             used.  If so, a service administrator   * 00050300
*                             must change the application environment * 00050400
*                             in the WLM service definition to        * 00050500
*                             specify the correct subsystem type.     * 00050600
*                                                                     * 00050700
*                 xxxx0C1C    Name: IwmRsnCodeServerNotStarted        * 00050800
*                                                                     * 00050900
*                             Meaning: No server exists for the       * 00051000
*                             specified application environment and   * 00051100
*                             no server could be started.             * 00051200
*                                                                     * 00051300
*                             Action: No action required.  The        * 00051400
*                             function may be successful if invoked   * 00051500
*                             again.                                  * 00051600
*                                                                     * 00051700
*                 xxxx0C22    Name: IwmRsnCodeApplEnvQuiesced         * 00051800
*                                                                     * 00051900
*                             Meaning:  The specified application     * 00052000
*                             environment has been quiesced, server   * 00052100
*                             cannot be started for the request.      * 00052200
*                                                                     * 00052300
*                             Action: Restart the application         * 00052400
*                             environment and then retry the request. * 00052500
*                                                                     * 00052600
*                 xxxx0C23    Name: IwmRsnCodeIndLocalSystem          * 00052700
*                                                                     * 00052800
*                             Meaning:  Local system is not running   * 00052900
*                             with the current WLM policy, new server * 00053000
*                             cannot be started for the request.      * 00053100
*                                                                     * 00053200
*                             Action:  Avoid requesting this function * 00053300
*                             while the local system is not running   * 00053400
*                             with the current WLM policy.            * 00053500
*                                                                     * 00053600
*                 xxxx0C24    Name: IwmRsncodeProcNameBlank           * 00053700
*                                                                     * 00053800
*                             Meaning:  Server procname is blank,     * 00053900
*                             server cannot be started for the        * 00054000
*                             request.                                * 00054100
*                                                                     * 00054200
*                             Action:  Check the server procname, fix * 00054300
*                             it, and then retry the request.         * 00054400
*                                                                     * 00054500
*                 xxxx0C25    Name: IwmRsnCodeApplEnvStopped          * 00054600
*                                                                     * 00054700
*                             Meaning:  WLM has given up trying to    * 00054800
*                             start a server because of failures.     * 00054900
*                             The associated application environment  * 00055000
*                             has been internally stopped.            * 00055100
*                                                                     * 00055200
*                             Action: Restart the application         * 00055300
*                             environment and then retry the request. * 00055400
*                                                                     * 00055500
*                 xxxx0C26    Name: IwmRsnCodeRouterNotActive         * 00055600
*                                                                     * 00055700
*                             Meaning:  Either there is no router     * 00055800
*                             exists for the requested server or the  * 00055900
*                             router exists but not active. No server * 00056000
*                             can be selected/started on this system. * 00056100
*                                                                     * 00056200
*                             Action:  Re-connect the router for the  * 00056300
*                             requested application environment to    * 00056400
*                             WLM and then retry the request.         * 00056500
*                                                                     * 00056600
*                 xxxx0C27    Name: IwmRsnCodeFsvReqInCompat          * 00056700
*                                                                     * 00056800
*                             Meaning:  Reserved                      * 00056900
*                                                                     * 00057000
*                                                                     * 00057100
*                                                                     * 00057200
*                                                                     * 00057300
*            10   Name: IwmRetCodeCompError                           * 00057400
*                                                                     * 00057500
*                 Meaning: Component error.                           * 00057600
*                                                                     * 00057700
*                 Action: No action required.  The function may be    * 00057800
*                 successful if invoked again.                        * 00057900
*                                                                     * 00058000
*                                                                     * 00058100
*                                                                     * 00058200
*01* REASON CODES:                                                    * 00058300
*                                                                     * 00058400
*       A unique reason code will be returned whenever the return     * 00058500
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00058600
*       under their corresponding return code.  Reason code and       * 00058700
*       return code constants are defined within IWMYCON.  Note that  * 00058800
*       the high order halfword of register 0, and the reason code    * 00058900
*       variable when specified, may be non-zero and represents       * 00059000
*       diagnostic data which is NOT part of the external interface.  * 00059100
*       The high order halfword should thus be excluded from          * 00059200
*       comparison with the reason code values described above.  The  * 00059300
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00059400
*       used for this purpose.                                        * 00059500
*                                                                     * 00059600
*01* MODULE TYPE:  ASSEM-PL/X MACRO                                   * 00059700
*                                                                     * 00059800
*02*   PROCESSOR:  ASSEM-PL/X                                         * 00059900
*                                                                     * 00060000
*01* COMPONENT:  SCWLM                                                * 00060100
*                                                                     * 00060200
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00060300
*                                                                     * 00060400
*01* EXAMPLES:                                                        * 00060500
*                                                                     * 00060600
*    To determine a best server to which to route work:               * 00060700
*                                                                     * 00060800
*               IWMSRFSV CONNTKN=CTKN,                              X * 00060900
*                     APPLENV=AENAME,                               X * 00061000
*                     SERVER_DATA=SVRDATA,                          X * 00061100
*                     RETCODE=RC,RSNCODE=RSN                          * 00061200
*      *                                                              * 00061300
*      * Storage areas                                                * 00061400
*      *                                                              * 00061500
*      CTKN     DS    F               Contains the connect token for  * 00061600
*      *                              the current home space          * 00061700
*      AENAME   DS    CL32            Contains the application        * 00061800
*      *                              environment name                * 00061900
*      SVRDATA  DS    CL32            Contains the output server data * 00062000
*      RC       DS    F               Return code                     * 00062100
*      RSN      DS    F               Reason code                     * 00062200
*                                                                     * 00062300
*                                                                     * 00062400
*01* MACRO USAGE NOTES:                                               * 00062500
*                                                                     * 00062600
*                                                                     * 00062700
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00062800
*        global macro variable.  Any value other than 'NO' will       * 00062900
*        result in the macro expansion being printed.  The default is * 00063000
*        'YES'.  The following examples illustrate how the ZPRINT     * 00063100
*        variable should be set.                                      * 00063200
*                                                                     * 00063300
*                    GBLC &ZPRINT                                     * 00063400
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00063500
*                                                                     * 00063600
*                                                                     * 00063700
*    2.  All   keys   currently   contained  in  the  IWMSRFSV  macro * 00063800
*        correspond  to  version  0.   If you specify PLISTVER, use a * 00063900
*        value of 0 or MAX.                                           * 00064000
*                                                                     * 00064100
*                                                                     * 00064200
*                                                                     * 00064300
*                                                                     * 00064400
*01* CHANGE ACTIVITY:                                                 * 00064500
*                                                                     * 00064600
*   Flag LineItem  FMID    Date   ID    Comment                       * 00064700
*                                                                     * 00064800
*    $L0=WLM53P   HBB6603 950927 PD16:  DCE/DSOM Support              * 00064900
*    $L1=WLMP     HBB6603 960905 PDRK:  Reason codes                  * 00065000
*    $P1=ME01176  HBB7720 040924 3241DW:  Doc changes only.  Service  * 00065100
*                                         names changed to reflect    * 00065200
*                                         the 64bit name.             * 00065300
*    $P2=ME24605  HBB7790 120815 3241MG:  Fixes AMG definitions       * 00065400
****** END OF SPECIFICATIONS *****************************************/ 00065500
*/********************************************************************* 00065600
         MACRO                                                          00065700
&XLABEL  IWMSRFSV &CONNTKN=,&APPLENV=,&SERVER_DATA=,&RETCODE=,         *00065800
               &RSNCODE=,&PLISTVER=,&MF=                                00065900
.*                                                                      00066000
*                 MACDATE -01/31/13-<0>                                 00066100
.*                                                                      00066200
.*******************************************************************    00066300
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00066400
.*******************************************************************    00066500
                 GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                00066600
                 GBLC  &ZTEST      YES=TEST NO=NO TEST                  00066700
                 GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX          00066800
.*                                                                      00066900
                 GBLC  &ZIWMSRFSV  YES=MACRO USED AT LEAST ONCE         00067000
.*******************************************************************    00067100
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00067200
.*******************************************************************    00067300
                 LCLC  &ZMS        ERROR MESSAGE WORK AREA              00067400
                 LCLC  &ZCNDX      SYSNDX CHARACTERS                    00067500
                 LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED           00067600
                 LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR          00067700
                 LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE          00067800
                 LCLA  &ZAWRK      USED AS A WORK AREA                  00067900
                 LCLA  &ZASIZ      USED FOR SIZE OF VALUE               00068000
                 LCLA  &ZN         NUMERIC WORK VARIABLE                00068100
                 LCLC  &ZC         CHARACTER WORK VARIABLE              00068200
                 LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE          00068300
                 LCLA  &ZTLA       VALUE TOO LONG VARIABLE              00068400
                 LCLC  &ZMAC_G     "G" or null                          00068500
&ZMAC_G          SETC  ''                                               00068600
                 LCLC  &ZMAC_LR                                         00068700
&ZMAC_LR         SETC  'LR'                                             00068800
                 LCLC  &ZMAC_L                                          00068900
&ZMAC_L          SETC  'L'                                              00069000
                 LCLC  &ZMAC_ST                                         00069100
&ZMAC_ST         SETC  'ST'                                             00069200
                 LCLC  &ZMAC_LLGT                                       00069300
&ZMAC_LLGT       SETC  'L'                                              00069400
                 LCLC  &ZMAC_LGR                                        00069500
&ZMAC_LGR        SETC  'LR'                                             00069600
                 LCLC  &ZMAC_LG                                         00069700
&ZMAC_LG         SETC  'L'                                              00069800
                 LCLC  &ZMAC_STG                                        00069900
&ZMAC_STG        SETC  'ST'                                             00070000
                 LCLA  &ZMACRET    MACRO RETURN CODE                    00070100
&ZMACRET         SETA  0           ASSUME NO ERRORS                     00070200
.*                                                                      00070300
                 LCLC  &ZCSYSLIST(255)          NONXKEY, POS ARRAY      00070400
                 LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()           00070500
                 LCLA  &ZPLLEN     PARAMETER LIST LENGTH                00070600
                 LCLC  &ZENDBASEPL              End of base PL          00070700
                 LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                00070800
.*******************************************************************    00070900
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00071000
.*******************************************************************    00071100
                 LCLA  &ZI         INDEX FOR ARRAY                      00071200
                 LCLA  &ZJ         INDEX FOR PARMS                      00071300
                 LCLA  &ZK         INDEX FOR PARSE                      00071400
                 LCLA  &ZLO        LOW RANGE VALUE                      00071500
                 LCLA  &ZHI        HIGH RANGE VALUE                     00071600
                 LCLC  &ZW         WORK AREA FOR PARM                   00071700
.********************************************************************   00071800
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00071900
.********************************************************************   00072000
                 GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL              00072100
                 GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE       00072200
                 GBLA  &SYSALVL    SYSSTATE ARCHLVL                     00072300
                 GBLC  &SYSAM64    SYSSTATE AMODE64                     00072400
.*                                                                      00072500
                 AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED       00072600
                 AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED        00072700
                 SPLEVEL  TEST                                          00072800
.ZSYS2           ANOP  ,                                                00072900
                 AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1            00073000
                 AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1            00073100
                 SYSSTATE TEST                                          00073200
                 AGO   .ZSYS4                                           00073300
.ZSYS3           ANOP  ,                                                00073400
&SYSASCE         SETC  'P'         ASSUME SYSSTATE PRIMARY              00073500
.ZSYS4           ANOP  ,                                                00073600
                 AIF   ('&SYSAM64' NE 'YES').ZSYSN64                    00073700
&ZMAC_LLGT       SETC 'LLGT'                                            00073800
&ZMAC_LGR        SETC 'LGR'                                             00073900
&ZMAC_LG         SETC 'LG'                                              00074000
&ZMAC_STG        SETC 'STG'                                             00074100
.ZSYSN64         ANOP  ,                                                00074200
.*******************************************************************    00074300
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00074400
.*******************************************************************    00074500
                 LCLC  &XCONNTKN   ++ NAME                              00074600
                 LCLC  &XAPPLENV   ++ NAME                              00074700
                 LCLC  &XSERVER_DATA            ++ NAME                 00074800
                 LCLC  &XRETCODE   ++ NAME                              00074900
                 LCLC  &XRSNCODE   ++ NAME                              00075000
                 LCLA  &XPLISTVER  ++ VALUE                             00075100
                 LCLC  &XMF        ++ VALUE                             00075200
                 LCLC  &XMFCTRL    ++ NAME                              00075300
                 LCLC  &XMFATTR    ++ VALUE                             00075400
                 LCLC  &XMFSCK     ++ VALUE                             00075500
.*******************************************************************    00075600
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00075700
.*******************************************************************    00075800
                 LCLC  &ZXCONNTKN  ++ INPUT NAME                        00075900
                 LCLC  &ZXAPPLENV  ++ INPUT NAME                        00076000
                 LCLC  &ZXSERVER_DATA           ++ OUTPUT NAME          00076100
                 LCLC  &ZXRETCODE  ++ OUTPUT NAME                       00076200
                 LCLC  &ZXRSNCODE  ++ OUTPUT NAME                       00076300
                 LCLC  &ZXPLISTVER              ++ INPUT VALUE          00076400
                 LCLC  &ZXMF       ++ INPUT VALUE                       00076500
                 LCLC  &ZXMFCTRL   ++ INPUT NAME                        00076600
                 LCLC  &ZXMFATTR   ++ INPUT VALUE                       00076700
                 LCLC  &ZXMFSCK    ++ INPUT VALUE                       00076800
.********************************************************************   00076900
.***AC.PLV01  PROCESS PLISTVER                                      *   00077000
.********************************************************************   00077100
&XPLISTVER      SETA  0                                                 00077200
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00077300
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00077400
&XPLISTVER      SETA  0                                                 00077500
.ZPLV0          ANOP  ,                                                 00077600
.*                                                                      00077700
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00077800
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00077900
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00078000
.*-------------------------------------------------------------------   00078100
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00078200
&ZMS            SETC  '"PLISTVER='                                      00078300
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00078400
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00078500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00078600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00078700
                AGO   .ZPVCK2                                           00078800
.ZPVCK3         ANOP  ,                                                 00078900
.*-------------------------------------------------------------------   00079000
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00079100
&ZMS            SETC  '"PLISTVER='                                      00079200
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00079300
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00079400
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00079500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00079600
                AGO   .ZPVCKE                                           00079700
.ZPVCK2         ANOP  ,                                                 00079800
.*-------------------------------------------------------------------   00079900
&ZCVAL          SETC  '&PLISTVER(1)'                                    00080000
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00080100
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00080200
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00080300
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00080400
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00080500
.ZPVCK6         ANOP  ,                                                 00080600
&ZMS            SETC  '"PLISTVER='                                      00080700
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00080800
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00080900
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00081000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00081100
&XPLISTVER      SETA  0                                                 00081200
                AGO   .ZPVCKE                                           00081300
.*-------------------------------------------------------------------   00081400
.ZPVCK4A        ANOP  ,                                                 00081500
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00081600
&ZMS            SETC  'PLISTVER='                                       00081700
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00081800
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00081900
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00082000
                MNOTE 8,' &ZMS IS REQUIRED.'                            00082100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00082200
                AGO   .ZPVCK5                                           00082300
.ZPVCK4         ANOP  ,                                                 00082400
&XPLISTVER      SETA  &PLISTVER(1)                                      00082500
.ZPVCK5         ANOP  ,                                                 00082600
.ZPVCKE         ANOP  ,                                                 00082700
.********************************************************************   00082800
.***AG.MF01 PROCESS MF MACRO FORMS                                      00082900
.********************************************************************   00083000
                 ACTR  10000                                            00083100
.*------------------------------------------------------------------    00083200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00083300
&XMF             SETC  ''          INITIALIZE XVARIABLE                 00083400
.*-------------------------------------------------------------------   00083500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00083600
.ZG21            ANOP  ,                                                00083700
&ZTLC            SETC 'S'                                               00083800
                 AIF   ('&MF(1)' NE '&ZTLC').ZG22                       00083900
&XMF             SETC  'S'         SET KEYWORD                          00084000
                 AIF   (N'&MF LE 1).ZG21A       CK NUM                  00084100
&ZMS             SETC  '"MF='                                           00084200
&ZMS             SETC  '&ZMS.&MF"'                                      00084300
&ZMS             SETC  '&ZMS "MF"'                                      00084400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00084500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00084600
.ZG21A           ANOP  ,                                                00084700
.*-------------------------------------------------------------------   00084800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00084900
.ZG22            ANOP  ,                                                00085000
&ZTLC            SETC 'L'                                               00085100
                 AIF   ('&MF(1)' NE '&ZTLC').ZG29                       00085200
&XMF             SETC  'L'         SET KEYWORD                          00085300
                 AIF   (N'&MF LE 3).ZG22A       CK NUM                  00085400
&ZMS             SETC  '"MF='                                           00085500
&ZMS             SETC  '&ZMS.&MF"'                                      00085600
&ZMS             SETC  '&ZMS "MF"'                                      00085700
                 MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'             00085800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00085900
.ZG22A           ANOP  ,                                                00086000
.*-------------------------------------------------------------------   00086100
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00086200
                 AIF   (N'&SYSLIST NE 0).ZG22B  POSITIONALS?            00086300
                 AIF   ('&CONNTKN' NE '').ZG22B  KEYS?                  00086400
                 AIF   ('&APPLENV' NE '').ZG22B  KEYS?                  00086500
                 AIF   ('&SERVER_DATA' NE '').ZG22B  KEYS?              00086600
                 AIF   ('&RETCODE' NE '').ZG22B  KEYS?                  00086700
                 AIF   ('&RSNCODE' NE '').ZG22B  KEYS?                  00086800
                 AGO    .ZG22C     INVOCATION OKAY                      00086900
.ZG22B           ANOP  ,                                                00087000
&ZMS             SETC  'THE "L" FORM OF "MF"'                           00087100
&ZMS             SETC  '&ZMS CAN ONLY HAVE'                             00087200
&ZMS             SETC  '&ZMS THE "PLISTVER" KEY'                        00087300
                 MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'           00087400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00087500
.ZG22C           ANOP  ,                                                00087600
.*-------------------------------------------------------------------   00087700
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00087800
&ZXMFCTRL        SETC  'INPUT'     SET IN/OUTPUT                        00087900
&XMFCTRL         SETC  '&MF(2,1)'  SET XVARIABLE                        00088000
                 AIF   (N'&MF(2) GT 1).ZG24B    MULTI PARMS             00088100
&XMFCTRL         SETC  '&MF(2)'    SET XVARIABLE                        00088200
.ZG24B           AIF   (K'&MF(2) GT 0).ZG24C                            00088300
&ZXMFCTRL        SETC  ''          RESET IN/OUTPUT                      00088400
&ZMS             SETC  'WHEN "L" IS SPECIFIED'                          00088500
&ZMS             SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'              00088600
                 MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                     00088700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00088800
.ZG24C           ANOP  ,                                                00088900
.*-------------------------------------------------------------------   00089000
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00089100
                 AIF   (K'&ZXMFCTRL LE 0).ZG24P  NOT I/O                00089200
                 AIF   ('&XMFCTRL'(1,1) NE '(').ZG24P                   00089300
&ZXMFCTRL        SETC  ''          RESET IN/OUTPUT                      00089400
&ZMS             SETC  '"MF='                                           00089500
&ZMS             SETC  '&ZMS.&MF"'                                      00089600
&ZMS             SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'        00089700
                 MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                00089800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00089900
.ZG24P           ANOP  ,                                                00090000
.*-------------------------------------------------------------------   00090100
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00090200
&ZXMFATTR        SETC  'INPUT'     SET IN/OUTPUT                        00090300
&XMFATTR         SETC  '0D'                                             00090400
                 AIF   (K'&MF(3) LE 0).ZG27B    PARM                    00090500
&XMFATTR         SETC  '&MF(3,1)'  SET XVARIABLE                        00090600
                 AIF   (N'&MF(3) GT 1).ZG27B    MULTI                   00090700
&XMFATTR         SETC  '&MF(3)'    SET XVARIABLE                        00090800
.ZG27B           ANOP  ,                                                00090900
.*-------------------------------------------------------------------   00091000
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00091100
                 AIF   (K'&ZXMFATTR LE 0).ZG27P  NOT I/O                00091200
                 AIF   ('&XMFATTR'(1,1) NE '(').ZG27P                   00091300
&ZXMFATTR        SETC  ''          RESET IN/OUTPUT                      00091400
&ZMS             SETC  '"MF='                                           00091500
&ZMS             SETC  '&ZMS.&MF"'                                      00091600
&ZMS             SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'        00091700
                 MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                00091800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00091900
.ZG27P           ANOP  ,                                                00092000
.*-------------------------------------------------------------------   00092100
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00092200
                 AIF   (K'&ZXMFATTR LE 0).ZG27S  NOT I/O                00092300
                 AIF   (K'&XMFATTR LE 60).ZG27S  LNG OK                 00092400
&ZXMFATTR        SETC  ''          RESET IN/OUTPUT                      00092500
&ZMS             SETC  '"MF='                                           00092600
&ZMS             SETC  '&ZMS.&MF"'                                      00092700
&ZMS             SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'            00092800
                 MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'               00092900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00093000
.ZG27S           ANOP  ,                                                00093100
.*-------------------------------------------------------------------   00093200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00093300
.ZG29            ANOP  ,                                                00093400
&ZTLC            SETC 'E'                                               00093500
                 AIF   ('&MF(1)' NE '&ZTLC').ZG37                       00093600
&XMF             SETC  'E'         SET KEYWORD                          00093700
                 AIF   (N'&MF LE 3).ZG29A       CK NUM                  00093800
&ZMS             SETC  '"MF='                                           00093900
&ZMS             SETC  '&ZMS.&MF"'                                      00094000
&ZMS             SETC  '&ZMS "MF"'                                      00094100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'             00094200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00094300
.ZG29A           ANOP  ,                                                00094400
.*-------------------------------------------------------------------   00094500
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00094600
&ZXMFCTRL        SETC  'INPUT'     SET IN/OUTPUT                        00094700
&XMFCTRL         SETC  '&MF(2,1)'  SET XVARIABLE                        00094800
                 AIF   (N'&MF(2) GT 1).ZG31B    MULTI PARMS             00094900
&XMFCTRL         SETC  '&MF(2)'    SET XVARIABLE                        00095000
.ZG31B           AIF   (K'&MF(2) GT 0).ZG31C                            00095100
&ZXMFCTRL        SETC  ''          RESET IN/OUTPUT                      00095200
&ZMS             SETC  'WHEN "E" IS SPECIFIED'                          00095300
&ZMS             SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'              00095400
                 MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                     00095500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00095600
.ZG31C           ANOP  ,                                                00095700
.*-------------------------------------------------------------------   00095800
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00095900
                 AIF   (K'&ZXMFCTRL LE 0).ZG31R  NOT I/O                00096000
                 AIF   ('&XMFCTRL'(1,1) NE '(').ZG31R                   00096100
&ZCGPR           SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                       00096200
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG31P                     00096300
                 AIF   (K'&ZCGPR GT 2).ZG31Q                            00096400
                 AIF   ('&ZCGPR' EQ '0').ZG31Q                          00096500
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00096600
                 AIF   (T'&ZCGPR NE 'N').ZG31Q  INVALID REG NAME        00096700
.ZG31P           ANOP  ,                                                00096800
                 AIF   (T'&ZCGPR NE 'N').ZG31R  NON NUMERIC             00096900
                 AIF   ('&ZCGPR' LT '1').ZG31Q                          00097000
                 AIF   ('&ZCGPR' LE '12').ZG31R                         00097100
.ZG31Q           ANOP  ,                                                00097200
&ZMS             SETC  '"MF='                                           00097300
&ZMS             SETC  '&ZMS.&MF"'                                      00097400
&ZMS             SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'        00097500
                 MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                 00097600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00097700
.ZG31R           ANOP  ,                                                00097800
.*-------------------------------------------------------------------   00097900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00098000
&XMFSCK          SETC  ''          INITIALIZE XVARIABLE                 00098100
.ZG35A   AIF   ('&MF(3)' NE 'COMPLETE').ZG36A                           00098200
&XMFSCK          SETC  'COMPLETE'  SET KEYWORD                          00098300
.*-------------------------------------------------------------------   00098400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00098500
.ZG36A           AIF   (K'&XMFSCK GT 0).ZG36C   KEYWORD                 00098600
                 AIF   (K'&MF(3) LE 0).ZG36B                            00098700
&ZMS             SETC  '"MF='                                           00098800
&ZMS             SETC  '&ZMS.&MF"'                                      00098900
&ZMS             SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '        00099000
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00099100
&ZMS             SETC  '&ZMS "COMPLETE".'                               00099200
                 MNOTE 8,' &ZMS '                                       00099300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00099400
.ZG36B           ANOP  ,                                                00099500
&XMFSCK          SETC  'COMPLETE'  SET DEFAULT KEYWORD                  00099600
.ZG36C           ANOP  ,                                                00099700
&ZXMFSCK         SETC  'INPUT'     SET IN/OUTPUT                        00099800
.*------------------------------------------------------------------    00099900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00100000
.ZG37            ANOP  ,                                                00100100
&ZXMF            SETC  'INPUT'     SET IN/OUTPUT                        00100200
                 AIF   (K'&XMF GT 0).ZG37E      VALID ARG               00100300
                 AIF   (T'&MF EQ 'O').ZG37D     OMITTED                 00100400
&ZASYSLNDX       SETA  0                                                00100500
.ZG37A           ANOP  ,           POSITIONAL MACRO KEY                 00100600
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00100700
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG37C                 00100800
&ZTLC            SETC 'MF'                                              00100900
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG37A        00101000
.ZG37B           ANOP  ,                                                00101100
&ZXMF            SETC  ''          RESET IN/OUTPUT                      00101200
&ZMS             SETC  'THE "MF" KEY'                                   00101300
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00101400
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00101500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00101600
                 AGO   .ZG37E                                           00101700
.ZG37C           ANOP  ,                                                00101800
&ZXMF            SETC  ''          RESET IN/OUTPUT                      00101900
&ZMS             SETC  '"MF='                                           00102000
&ZMS             SETC  '&ZMS.&MF"'                                      00102100
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00102200
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00102300
&ZMS             SETC  '&ZMS "S",'                                      00102400
&ZMS             SETC  '&ZMS "L",'                                      00102500
&ZMS             SETC  '&ZMS OR "E".'                                   00102600
                 MNOTE 8,' &ZMS '                                       00102700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00102800
                 AGO   .ZG37E                                           00102900
.ZG37D           ANOP  ,                                                00103000
&XMF             SETC  'S'         SET DEFAULT KEYWORD                  00103100
&XMFSCK          SETC  'COMPLETE'  COMPLETE CHECKING                    00103200
.ZG37E           ANOP  ,                                                00103300
.********************************************************************   00103400
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00103500
.********************************************************************   00103600
                 ACTR  10000                                            00103700
.*-------------------------------------------------------------------   00103800
.***AG.MF03 MF=(SLE)                                                    00103900
                 AIF   ('&XMF' EQ 'L').ZGMFX                            00104000
.*----------------------------------------------------------------***   00104100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00104200
                 AIF   (N'&CONNTKN LE 1).ZG2A   CK NUM                  00104300
&ZMS             SETC  '"CONNTKN='                                      00104400
&ZMS             SETC  '&ZMS.&CONNTKN"'                                 00104500
&ZMS             SETC  '&ZMS "CONNTKN"'                                 00104600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00104700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00104800
.ZG2A            ANOP  ,                                                00104900
.*-------------------------------------------------------------------   00105000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00105100
&ZXCONNTKN       SETC  'INPUT'     SET IN/OUTPUT                        00105200
&XCONNTKN        SETC  '&CONNTKN(1)'            SET XVARIABLE           00105300
                 AIF   (N'&CONNTKN GT 1).ZG2B   MULTI PARMS             00105400
&XCONNTKN        SETC  '&CONNTKN'  SET XVARIABLE                        00105500
.ZG2B            AIF   (K'&CONNTKN(1) GT 0).ZG2C                        00105600
&ZXCONNTKN       SETC  ''          RESET IN/OUTPUT                      00105700
&ZMS             SETC  ' '                                              00105800
&ZMS             SETC  '&ZMS "CONNTKN" KEY AND ITS'                     00105900
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00106000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00106100
.ZG2C            ANOP  ,                                                00106200
.*-------------------------------------------------------------------   00106300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00106400
                 AIF   (K'&ZXCONNTKN LE 0).ZG2R  NOT I/O                00106500
                 AIF   ('&XCONNTKN'(1,1) NE '(').ZG2R                   00106600
&ZCGPR           SETC  '&XCONNTKN'(2,K'&XCONNTKN-2)                     00106700
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                      00106800
                 AIF   (K'&ZCGPR GT 2).ZG2Q                             00106900
                 AIF   ('&ZCGPR' EQ '0').ZG2Q                           00107000
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00107100
                 AIF   (T'&ZCGPR NE 'N').ZG2Q   INVALID REG NAME        00107200
.ZG2P            ANOP  ,                                                00107300
                 AIF   (T'&ZCGPR NE 'N').ZG2R   NON NUMERIC             00107400
                 AIF   ('&ZCGPR' LT '2').ZG2Q                           00107500
                 AIF   ('&ZCGPR' LE '12').ZG2R                          00107600
.ZG2Q            ANOP  ,                                                00107700
&ZMS             SETC  '"CONNTKN='                                      00107800
&ZMS             SETC  '&ZMS.&CONNTKN"'                                 00107900
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00108000
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00108100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00108200
.ZG2R            ANOP  ,                                                00108300
.*----------------------------------------------------------------***   00108400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00108500
                 AIF   (N'&APPLENV LE 1).ZG5A   CK NUM                  00108600
&ZMS             SETC  '"APPLENV='                                      00108700
&ZMS             SETC  '&ZMS.&APPLENV"'                                 00108800
&ZMS             SETC  '&ZMS "APPLENV"'                                 00108900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00109000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00109100
.ZG5A            ANOP  ,                                                00109200
.*-------------------------------------------------------------------   00109300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00109400
&ZXAPPLENV       SETC  'INPUT'     SET IN/OUTPUT                        00109500
&XAPPLENV        SETC  '&APPLENV(1)'            SET XVARIABLE           00109600
                 AIF   (N'&APPLENV GT 1).ZG5B   MULTI PARMS             00109700
&XAPPLENV        SETC  '&APPLENV'  SET XVARIABLE                        00109800
.ZG5B            AIF   (K'&APPLENV(1) GT 0).ZG5C                        00109900
&ZXAPPLENV       SETC  ''          RESET IN/OUTPUT                      00110000
&ZMS             SETC  ' '                                              00110100
&ZMS             SETC  '&ZMS "APPLENV" KEY AND ITS'                     00110200
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00110300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00110400
.ZG5C            ANOP  ,                                                00110500
.*-------------------------------------------------------------------   00110600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00110700
                 AIF   (K'&ZXAPPLENV LE 0).ZG5R  NOT I/O                00110800
                 AIF   ('&XAPPLENV'(1,1) NE '(').ZG5R                   00110900
&ZCGPR           SETC  '&XAPPLENV'(2,K'&XAPPLENV-2)                     00111000
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                      00111100
                 AIF   (K'&ZCGPR GT 2).ZG5Q                             00111200
                 AIF   ('&ZCGPR' EQ '0').ZG5Q                           00111300
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00111400
                 AIF   (T'&ZCGPR NE 'N').ZG5Q   INVALID REG NAME        00111500
.ZG5P            ANOP  ,                                                00111600
                 AIF   (T'&ZCGPR NE 'N').ZG5R   NON NUMERIC             00111700
                 AIF   ('&ZCGPR' LT '2').ZG5Q                           00111800
                 AIF   ('&ZCGPR' LE '12').ZG5R                          00111900
.ZG5Q            ANOP  ,                                                00112000
&ZMS             SETC  '"APPLENV='                                      00112100
&ZMS             SETC  '&ZMS.&APPLENV"'                                 00112200
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00112300
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00112400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00112500
.ZG5R            ANOP  ,                                                00112600
.*----------------------------------------------------------------***   00112700
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00112800
                 AIF   (N'&SERVER_DATA LE 1).ZG8A  CK NUM               00112900
&ZMS             SETC  '"SERVER_DATA='                                  00113000
&ZMS             SETC  '&ZMS.&SERVER_DATA"'                             00113100
&ZMS             SETC  '&ZMS "SERVER_DATA"'                             00113200
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00113300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00113400
.ZG8A            ANOP  ,                                                00113500
.*-------------------------------------------------------------------   00113600
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00113700
&ZXSERVER_DATA   SETC  'OUTPUT'    SET IN/OUTPUT                        00113800
&XSERVER_DATA    SETC  '&SERVER_DATA(1)'        SET XVARIABLE           00113900
                 AIF   (N'&SERVER_DATA GT 1).ZG8B  MULTI PARMS          00114000
&XSERVER_DATA    SETC  '&SERVER_DATA'           SET XVARIABLE           00114100
.ZG8B            AIF   (K'&SERVER_DATA(1) GT 0).ZG8C                    00114200
&ZXSERVER_DATA   SETC  ''          RESET IN/OUTPUT                      00114300
&ZMS             SETC  ' '                                              00114400
&ZMS             SETC  '&ZMS "SERVER_DATA" KEY AND ITS'                 00114500
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00114600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00114700
.ZG8C            ANOP  ,                                                00114800
.*-------------------------------------------------------------------   00114900
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00115000
                 AIF   (K'&ZXSERVER_DATA LE 0).ZG8R  NOT I/O            00115100
                 AIF   ('&XSERVER_DATA'(1,1) NE '(').ZG8R               00115200
&ZCGPR           SETC  '&XSERVER_DATA'(2,K'&XSERVER_DATA-2)             00115300
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                      00115400
                 AIF   (K'&ZCGPR GT 2).ZG8Q                             00115500
                 AIF   ('&ZCGPR' EQ '0').ZG8Q                           00115600
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00115700
                 AIF   (T'&ZCGPR NE 'N').ZG8Q   INVALID REG NAME        00115800
.ZG8P            ANOP  ,                                                00115900
                 AIF   (T'&ZCGPR NE 'N').ZG8R   NON NUMERIC             00116000
                 AIF   ('&ZCGPR' LT '2').ZG8Q                           00116100
                 AIF   ('&ZCGPR' LE '12').ZG8R                          00116200
.ZG8Q            ANOP  ,                                                00116300
&ZMS             SETC  '"SERVER_DATA='                                  00116400
&ZMS             SETC  '&ZMS.&SERVER_DATA"'                             00116500
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00116600
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00116700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00116800
.ZG8R            ANOP  ,                                                00116900
.*----------------------------------------------------------------***   00117000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00117100
                 AIF   (N'&RETCODE LE 1).ZG11A  CK NUM                  00117200
&ZMS             SETC  '"RETCODE='                                      00117300
&ZMS             SETC  '&ZMS.&RETCODE"'                                 00117400
&ZMS             SETC  '&ZMS "RETCODE"'                                 00117500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00117600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00117700
.ZG11A           ANOP  ,                                                00117800
.*-------------------------------------------------------------------   00117900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00118000
                 AIF   (K'&RETCODE(1) LE 0).ZG11C  NO PARM              00118100
&ZXRETCODE       SETC  'OUTPUT'    SET OUTPUT                           00118200
&XRETCODE        SETC  '&RETCODE(1)'            SET XVARIABLE           00118300
                 AIF   (N'&RETCODE GT 1).ZG11C                          00118400
&XRETCODE        SETC  '&RETCODE'  SET XVARIABLE                        00118500
.ZG11C           ANOP  ,                                                00118600
.*-------------------------------------------------------------------   00118700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00118800
                 AIF   (K'&ZXRETCODE LE 0).ZG11R  NOT I/O               00118900
                 AIF   ('&XRETCODE'(1,1) NE '(').ZG11R                  00119000
&ZCGPR           SETC  '&XRETCODE'(2,K'&XRETCODE-2)                     00119100
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                     00119200
                 AIF   (K'&ZCGPR GT 2).ZG11Q                            00119300
                 AIF   ('&ZCGPR' EQ '0').ZG11Q                          00119400
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00119500
                 AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME        00119600
.ZG11P           ANOP  ,                                                00119700
                 AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC             00119800
                 AIF   ('&ZCGPR' EQ '15').ZG11R                         00119900
                 AIF   ('&ZCGPR' LT '2').ZG11Q                          00120000
                 AIF   ('&ZCGPR' LE '12').ZG11R                         00120100
.ZG11Q           ANOP  ,                                                00120200
&ZMS             SETC  '"RETCODE='                                      00120300
&ZMS             SETC  '&ZMS.&RETCODE"'                                 00120400
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00120500
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'         00120600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00120700
.ZG11R           ANOP  ,                                                00120800
.*----------------------------------------------------------------***   00120900
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00121000
                 AIF   (N'&RSNCODE LE 1).ZG14A  CK NUM                  00121100
&ZMS             SETC  '"RSNCODE='                                      00121200
&ZMS             SETC  '&ZMS.&RSNCODE"'                                 00121300
&ZMS             SETC  '&ZMS "RSNCODE"'                                 00121400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00121500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00121600
.ZG14A           ANOP  ,                                                00121700
.*-------------------------------------------------------------------   00121800
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00121900
                 AIF   (K'&RSNCODE(1) LE 0).ZG14C  NO PARM              00122000
&ZXRSNCODE       SETC  'OUTPUT'    SET OUTPUT                           00122100
&XRSNCODE        SETC  '&RSNCODE(1)'            SET XVARIABLE           00122200
                 AIF   (N'&RSNCODE GT 1).ZG14C                          00122300
&XRSNCODE        SETC  '&RSNCODE'  SET XVARIABLE                        00122400
.ZG14C           ANOP  ,                                                00122500
.*-------------------------------------------------------------------   00122600
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00122700
                 AIF   (K'&ZXRSNCODE LE 0).ZG14R  NOT I/O               00122800
                 AIF   ('&XRSNCODE'(1,1) NE '(').ZG14R                  00122900
&ZCGPR           SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                     00123000
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                     00123100
                 AIF   (K'&ZCGPR GT 2).ZG14Q                            00123200
                 AIF   ('&ZCGPR' EQ '0').ZG14R                          00123300
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00123400
                 AIF   (T'&ZCGPR NE 'N').ZG14Q  INVALID REG NAME        00123500
.ZG14P           ANOP  ,                                                00123600
                 AIF   (T'&ZCGPR NE 'N').ZG14R  NON NUMERIC             00123700
                 AIF   ('&ZCGPR' EQ '0').ZG14R                          00123800
                 AIF   ('&ZCGPR' LT '2').ZG14Q                          00123900
                 AIF   ('&ZCGPR' LE '12').ZG14R                         00124000
.ZG14Q           ANOP  ,                                                00124100
&ZMS             SETC  '"RSNCODE='                                      00124200
&ZMS             SETC  '&ZMS.&RSNCODE"'                                 00124300
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00124400
                 MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'          00124500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00124600
.ZG14R           ANOP  ,                                                00124700
.******************************************************************     00124800
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00124900
.******************************************************************     00125000
                 ACTR  10000                                            00125100
.*----------------------------------------------------------------***   00125200
.***AH.P02 EXTRA POSITIONALS                                            00125300
                 AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS             00125400
                 AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL             00125500
                 AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL         00125600
                 AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL          00125700
.ZGLISTX1        ANOP  ,                                                00125800
&ZCVAL           SETC  ''          ERROR FIELD                          00125900
&ZAWRK           SETA  0           POSITIONAL NUMBER                    00126000
.ZGLIST2         ANOP  ,                                                00126100
&ZAWRK           SETA  &ZAWRK+1    NEXT POSITIONAL                      00126200
                 AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE             00126300
&ZCVAL           SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                  00126400
                 AGO   .ZGLIST2                                         00126500
.*                                                                      00126600
.ZGLIST3         ANOP  ,                                                00126700
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)    STRIP COMMA             00126800
&ZMS             SETC  'POSITIONAL ARGUMENT(S),'                        00126900
&ZMS             SETC  '&ZMS "&ZCVAL"'                                  00127000
&ZMS             SETC  '&ZMS CANNOT BE USED.'                           00127100
&ZMS             SETC  '&ZMS NO POSITIONAL ARGUMENTS'                   00127200
                 MNOTE 8,' &ZMS ARE ALLOWED.'                           00127300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00127400
.ZGLISTX         ANOP  ,                                                00127500
&ZASYSLNDX       SETA  0                                                00127600
.*-------------------------------------------------------------------   00127700
.***AG.MF04 MF=(SLE)                                                    00127800
.ZGMFX           ANOP  ,           END OF FULL SYNTAX CHECK             00127900
.*******************************************************************    00128000
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00128100
.*******************************************************************    00128200
                 AIF   (&ZMACRET NE 0).ZLX2     ERROR DETECTED          00128300
.*******************************************************************    00128400
.***AE.01  START OF IWMSRFSV MACRO CODE                                 00128500
.*******************************************************************    00128600
                 LCLC  &M0M0001                 NAME                    00128700
&M0M0001         SETC  '&XLABEL'                SET NAME                00128800
                 AIF   (K'&XLABEL NE 0).XLAB2                           00128900
&M0M0001         SETC  'M00M&SYSNDX'            DEFAULT NAME            00129000
.*                                                                      00129100
.XLAB2           ANOP  ,                                                00129200
                 AIF   ('&XMF' EQ 'L').XLAB3                            00129300
&M0M0001 DS    0H                             IWMSRFSV-0                00129400
.XLAB3           ANOP  ,                                                00129500
.*******************************************************************    00129600
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00129700
.*******************************************************************    00129800
              PUSH  PRINT                                               00129900
                 AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON       00130000
                 PRINT OFF         ++ PR01                              00130100
                 AGO   .ZPRNTXX                                         00130200
.ZPRINTX         PRINT ON                                               00130300
.ZPRNTXX         ANOP  ,                                                00130400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00130500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00130600
.********************************************************************   00130700
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00130800
.********************************************************************   00130900
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00131000
                      LCLA  &ZOPN1         INVOCATION INDEX             00131100
                      LCLC  &ZOPL(4095)    LABEL                        00131200
                      LCLC  &ZOPO(4095)    OPERATION                    00131300
                      LCLC  &ZOPV(4095)    VALUE                        00131400
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00131500
.*                                                                      00131600
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00131700
.******************************************************************     00131800
.***AL.L10 IWMSRFSV FMT=LIST MF=S!L PARAMETERS                          00131900
.******************************************************************     00132000
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00132100
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00132200
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00132300
&XMFATTR              SETC  '0D'                                        00132400
.*                                                                      00132500
&ZOPN                 SETA  &ZOPN+1                                     00132600
&ZOPL(&ZOPN)          SETC  ' '                                         00132700
                      AIF   (&SYSALVL NE 0).ZALVL6A                     00132800
&ZOPO(&ZOPN)          SETC  'B'                                         00132900
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00133000
                      AGO   .ZALVL6B                                    00133100
.ZALVL6A              ANOP                                              00133200
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00133300
&ZOPV(&ZOPN)          SETC  '4,8'                                       00133400
&ZOPN                 SETA  &ZOPN+1                                     00133500
&ZOPL(&ZOPN)          SETC  ' '                                         00133600
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00133700
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00133800
.ZALVL6B              ANOP                                              00133900
&ZOPD(&ZOPN)          SETC  '++ IWMSRFSV ARG PARMS'                     00134000
.*                                                                      00134100
&ZOPN                 SETA  &ZOPN+1                                     00134200
&ZOPL(&ZOPN)          SETC  ' '                                         00134300
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00134400
&ZOPV(&ZOPN)          SETC  '1'                                         00134500
&ZOPD(&ZOPN)          SETC  ' '                                         00134600
.*                                                                      00134700
.ZLMFSL2              ANOP  ,                                           00134800
.*-------------------------------------------------------------------   00134900
.***AM.L00  IWMSRFSV FMT=LIST name                                      00135000
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00135100
&ZOPN                 SETA &ZOPN+1                                      00135200
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00135300
&ZOPO(&ZOPN)          SETC 'EQU'                                        00135400
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00135500
&ZOPD(&ZOPN)          SETC '++ IWMSRFSV NAME'                           00135600
.ZLMFSL2M             ANOP  ,                                           00135700
.*-------------------------------------------------------------------   00135800
.***AM.L01  IWMSRFSV FMT=LIST PARAMETERS                                00135900
&ZOPN                 SETA &ZOPN+1                                      00136000
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00136100
&ZOPO(&ZOPN)          SETC 'DS'                                         00136200
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00136300
&ZOPD(&ZOPN)          SETC '++ IWMSRFSV PARM LIST'                      00136400
.*-------------------------------------------------------------------   00136500
.***AM.L02 XVERSION XL1                                                 00136600
&ZOPN                 SETA &ZOPN+1                                      00136700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00136800
&ZOPO(&ZOPN)          SETC 'DS'                                         00136900
&ZOPV(&ZOPN)          SETC 'XL1'                                        00137000
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00137100
.*-------------------------------------------------------------------   00137200
.***AM.L09  XRSV0001 CL1                                                00137300
&ZOPN                 SETA &ZOPN+1                                      00137400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0001'                         00137500
&ZOPO(&ZOPN)          SETC 'DS'                                         00137600
&ZOPV(&ZOPN)          SETC 'CL1'                                        00137700
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00137800
.*-------------------------------------------------------------------   00137900
.***AM.L09  XPLISTLEN XL2                                               00138000
&ZOPN                 SETA &ZOPN+1                                      00138100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        00138200
&ZOPO(&ZOPN)          SETC 'DS'                                         00138300
&ZOPV(&ZOPN)          SETC 'XL2'                                        00138400
&ZOPD(&ZOPN)          SETC '++ INPUT '                                  00138500
.*-------------------------------------------------------------------   00138600
.***AM.L09  XCONNTKN BL.32                                              00138700
&ZOPN                 SETA &ZOPN+1                                      00138800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONNTKN'                         00138900
&ZOPO(&ZOPN)          SETC 'DS'                                         00139000
&ZOPV(&ZOPN)          SETC 'BL.32'                                      00139100
&ZOPD(&ZOPN)          SETC '++ &ZXCONNTKN '                             00139200
.*-------------------------------------------------------------------   00139300
.***AM.L09 ADDR XAPPLENV A                                              00139400
&ZOPN                 SETA &ZOPN+1                                      00139500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XAPPLENV_ADDR'                    00139600
&ZOPO(&ZOPN)          SETC 'DS'                                         00139700
&ZOPV(&ZOPN)          SETC 'A'                                          00139800
&ZOPD(&ZOPN)          SETC '++ &ZXAPPLENV ADDR'                         00139900
.*-------------------------------------------------------------------   00140000
.***AM.L09 ADDR XSERVER_DATA A                                          00140100
&ZOPN                 SETA &ZOPN+1                                      00140200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSERVER_DATA_ADDR'                00140300
&ZOPO(&ZOPN)          SETC 'DS'                                         00140400
&ZOPV(&ZOPN)          SETC 'A'                                          00140500
&ZOPD(&ZOPN)          SETC '++ &ZXSERVER_DATA ADDR'                     00140600
.*-------------------------------------------------------------------   00140700
.***AM.L10 END OF IWMSRFSV LIST PARAMETERS                              00140800
&ZOPN                 SETA &ZOPN+1                                      00140900
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00141000
&ZOPO(&ZOPN)          SETC 'EQU'                                        00141100
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00141200
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00141300
.*                                                                      00141400
&ZOPN                 SETA &ZOPN+1                                      00141500
&ZOPL(&ZOPN)          SETC ' '                                          00141600
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00141700
&ZOPV(&ZOPN)          SETC '1'                                          00141800
&ZOPD(&ZOPN)          SETC ' '                                          00141900
.*-------------------------------------------------------------------   00142000
.***AL.L12 IWMSRFSV FMT=LIST MF=S!L PARAMETERS                          00142100
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00142200
.*                                                                      00142300
&ZOPN                 SETA  &ZOPN+1                                     00142400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00142500
&ZOPO(&ZOPN)          SETC  'DC'                                        00142600
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00142700
&ZOPD(&ZOPN)          SETC  '++ IWMSRFSV ARG PARMS'                     00142800
.*                                                                      00142900
.ZLMFSLX              ANOP  ,                                           00143000
.*-------------------------------------------------------------------   00143100
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00143200
&ZPLLEN               SETA 16                                           00143300
.*                                                                      00143400
.******************************************************************     00143500
.***AI.L01 IWMSRFSV FMT=LIST FILL IN PARAMETER AREA                     00143600
.******************************************************************     00143700
                      ACTR  10000                                       00143800
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00143900
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00144000
&ZCVAL                SETC  'LAE'          XAX MODE                     00144100
.ZIMFXA               ANOP ,                                            00144200
.*                                                                      00144300
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00144400
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00144500
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00144600
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00144700
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00144800
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00144900
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00145000
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00145100
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00145200
&ZOPN                 SETA  &ZOPN+1                                     00145300
&ZOPL(&ZOPN)          SETC  ' '                                         00145400
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00145500
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00145600
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00145700
                      AGO   .ZIMFNX                                     00145800
.*                                                                      00145900
.ZIMFN2               ANOP ,                                            00146000
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     00146100
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00146200
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00146300
&ZOPN                 SETA  &ZOPN+1                                     00146400
&ZOPL(&ZOPN)          SETC  ' '                                         00146500
&ZOPO(&ZOPN)          SETC  'LAE'                                       00146600
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00146700
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00146800
                      AGO   .ZIMFNX                                     00146900
.ZIMFNX1              ANOP ,                                            00147000
&ZOPN                 SETA  &ZOPN+1                                     00147100
&ZOPL(&ZOPN)          SETC  ' '                                         00147200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00147300
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00147400
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00147500
.ZIMFNX               ANOP ,                                            00147600
.********************************************************************   00147700
.***AI.L02 IWMSRFSV FMT=LIST INITIALIZE PARAMETER AREA                  00147800
.********************************************************************   00147900
.***AI.L03 MF=(SLE)                                                     00148000
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00148100
.*                                                                      00148200
&ZOPN                 SETA  &ZOPN+1                                     00148300
&ZOPL(&ZOPN)          SETC  ' '                                         00148400
&ZOPO(&ZOPN)          SETC  'XC'                                        00148500
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00148600
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00148700
.ZIMFLX               ANOP  ,                                           00148800
.*-------------------------------------------------------------------   00148900
.***AI.L04 XPLISTLEN XL2                                                00149000
&ZOPN                 SETA  &ZOPN+1                                     00149100
&ZOPL(&ZOPN)          SETC  ' '                                         00149200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00149300
&ZOPV(&ZOPN)          SETC  '2(2,1),=AL2(&ZPLLEN)'                      00149400
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    00149500
.*-------------------------------------------------------------------   00149600
.***AI.L25  XCONNTKN XL4                                                00149700
                      AIF   ('&ZXCONNTKN' EQ '').ZI4E                   00149800
                      AIF   ('&ZXCONNTKN' EQ 'OUTPUT').ZI4E             00149900
&ZCGPR                SETC  '&XCONNTKN'                                 00150000
.*                                                                      00150100
                      AIF   ('&XCONNTKN'(1,1) NE '(').ZI4B              00150200
&ZCGPR   SETC  '0('.'&XCONNTKN'(2,K'&XCONNTKN-2).')'                    00150300
                      AGO   .ZI4D                                       00150400
.ZI4B                 ANOP  ,                                           00150500
.*                                                                      00150600
&ZC                   SETC  '&XCONNTKN'(1,1)                            00150700
                      AIF   (T'&ZC NE 'N').ZI4D                         00150800
&ZC                   SETC  '&XCONNTKN'                                 00150900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI4D                00151000
&ZCGPR                SETC  '=BL4''&XCONNTKN'''                         00151100
.*                                                                      00151200
.ZI4D                 ANOP  ,                                           00151300
.*                                                                      00151400
&ZOPN                 SETA  &ZOPN+1                                     00151500
&ZOPL(&ZOPN)          SETC  ' '                                         00151600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00151700
&ZOPV(&ZOPN)          SETC  '4(4,1),&ZCGPR'                             00151800
&ZOPD(&ZOPN)          SETC  '++ &ZXCONNTKN XCONNTKN'                    00151900
.*                                                                      00152000
.ZI4E                 ANOP  ,                                           00152100
.*-------------------------------------------------------------------   00152200
.***AI.L19 ADDR XAPPLENV A                                              00152300
                      AIF   ('&ZXAPPLENV' EQ '').ZI5H                   00152400
&ZCLNG                SETC  '&XAPPLENV'                                 00152500
&ZCGPR                SETC  '14'                                        00152600
         AIF   ('&XAPPLENV'(1,1) EQ '(').ZI5F  IN GPR                   00152700
.*                                                                      00152800
&ZOPN                 SETA  &ZOPN+1                                     00152900
&ZOPL(&ZOPN)          SETC  ' '                                         00153000
&ZOPO(&ZOPN)          SETC  'LA'                                        00153100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00153200
&ZOPD(&ZOPN)          SETC  '++ &ZXAPPLENV XAPPLENV'                    00153300
.*                                                                      00153400
                      AGO   .ZI5G                                       00153500
.*                                                                      00153600
.ZI5F                 ANOP  ,                                           00153700
&ZCGPR   SETC  '&XAPPLENV'(2,K'&XAPPLENV-2)                             00153800
.*                                                                      00153900
.ZI5G                 ANOP  ,                                           00154000
.*                                                                      00154100
&ZOPN                 SETA  &ZOPN+1                                     00154200
&ZOPL(&ZOPN)          SETC  ' '                                         00154300
&ZOPO(&ZOPN)          SETC  'ST'                                        00154400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,8(,1)'                              00154500
&ZOPD(&ZOPN)          SETC  '++ &ZXAPPLENV XAPPLENV'                    00154600
.*                                                                      00154700
.ZI5H                 ANOP  ,                                           00154800
.*-------------------------------------------------------------------   00154900
.***AI.L19 ADDR XSERVER_DATA A                                          00155000
                      AIF   ('&ZXSERVER_DATA' EQ '').ZI6H               00155100
&ZCLNG                SETC  '&XSERVER_DATA'                             00155200
&ZCGPR                SETC  '14'                                        00155300
         AIF   ('&XSERVER_DATA'(1,1) EQ '(').ZI6F  IN GPR               00155400
.*                                                                      00155500
&ZOPN                 SETA  &ZOPN+1                                     00155600
&ZOPL(&ZOPN)          SETC  ' '                                         00155700
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00155800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00155900
&ZOPD(&ZOPN)          SETC  '++ &ZXSERVER_DATA XSERVER_DATA'            00156000
.*                                                                      00156100
                      AGO   .ZI6G                                       00156200
.*                                                                      00156300
.ZI6F                 ANOP  ,                                           00156400
&ZCGPR   SETC  '&XSERVER_DATA'(2,K'&XSERVER_DATA-2)                     00156500
.*                                                                      00156600
.ZI6G                 ANOP  ,                                           00156700
.*                                                                      00156800
&ZOPN                 SETA  &ZOPN+1                                     00156900
&ZOPL(&ZOPN)          SETC  ' '                                         00157000
&ZOPO(&ZOPN)          SETC  'ST'                                        00157100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,12(,1)'                             00157200
&ZOPD(&ZOPN)          SETC  '++ &ZXSERVER_DATA XSERVER_DATA'            00157300
.*                                                                      00157400
.ZI6H                 ANOP  ,                                           00157500
.*-------------------------------------------------------------------   00157600
&ZOPN1                SETA &ZOPN                                        00157700
.*******************************************************************    00157800
.***  PROCESS IWMSRFSV OUTPUT PARAMETERS                                00157900
.*******************************************************************    00158000
                      ACTR  10000                                       00158100
.*******************************************************************    00158200
.***AO.X02  RETURN CODE PROCESSING                                      00158300
.*******************************************************************    00158400
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00158500
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00158600
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00158700
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00158800
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00158900
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00159000
&ZOPN                 SETA  &ZOPN+1                                     00159100
&ZOPL(&ZOPN)          SETC  ' '                                         00159200
&ZOPO(&ZOPN)          SETC  'ST'                                        00159300
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00159400
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00159500
                      AGO   .ZMRETX                                     00159600
.*                                                                      00159700
.ZMRET2               ANOP  ,                                           00159800
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00159900
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00160000
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00160100
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00160200
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00160300
&ZOPN                 SETA  &ZOPN+1                                     00160400
&ZOPL(&ZOPN)          SETC  ' '                                         00160500
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00160600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00160700
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00160800
.ZMRETX               ANOP  ,                                           00160900
.*******************************************************************    00161000
.***AO.X03  REASON CODE PROCESSING                                      00161100
.*******************************************************************    00161200
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00161300
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00161400
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00161500
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00161600
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00161700
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00161800
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00161900
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00162000
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00162100
&ZOPN                 SETA  &ZOPN+1                                     00162200
&ZOPL(&ZOPN)          SETC  ' '                                         00162300
&ZOPO(&ZOPN)          SETC  'ST'                                        00162400
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00162500
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00162600
                      AGO   .ZMRSNX                                     00162700
.*                                                                      00162800
.ZMRSN2               ANOP  ,                                           00162900
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00163000
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00163100
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00163200
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00163300
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00163400
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00163500
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00163600
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00163700
&ZOPN                 SETA  &ZOPN+1                                     00163800
&ZOPL(&ZOPN)          SETC  ' '                                         00163900
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00164000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00164100
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00164200
.ZMRSNX               ANOP  ,                                           00164300
.*******************************************************************    00164400
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00164500
.*******************************************************************    00164600
.ZMFLX                ANOP  ,              MF=L PROCESSING              00164700
.*******************************************************************    00164800
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00164900
.*******************************************************************    00165000
                      ACTR  10000                                       00165100
.*                                                                      00165200
                      LCLA  &ZLC           COLUMN POSITION              00165300
                      LCLA  &ZOPX          LIST TABLE INDEX             00165400
                      LCLC  &ZLL           LABEL                        00165500
                      LCLC  &ZLOP          OPERATION                    00165600
                      LCLC  &ZLV           VALUE                        00165700
                      LCLC  &ZLD           DESCRIPTION                  00165800
.*                                                                      00165900
&ZOPX                 SETA  1                                           00166000
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00166100
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00166200
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00166300
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00166400
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00166500
                      AIF   (K'&ZLD LE 0).ZL5                           00166600
&ZLC                  SETA  35             COMMENT COLUMN               00166700
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00166800
&ZLC                  SETA  33             COMMMENT COLUMN              00166900
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00167000
&ZLV                  SETC  '&ZLV'.' '                                  00167100
                      AGO   .ZL3                                        00167200
.*                                                                      00167300
.ZL4                  ANOP  ,                                           00167400
&ZLV                  SETC  '&ZLV'.' '                                  00167500
.ZL5                  ANOP  ,                                           00167600
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00167700
.*                                                                      00167800
&ZLL     &ZLOP &ZLV                                                     00167900
.*                                                                      00168000
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00168100
                      AGO   .ZL2           CONTINUE LOOPING             00168200
.*                                                                      00168300
.ZLX                  ANOP  ,                                           00168400
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00168500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00168600
         L     14,16(0,0)              GET CVT ADDRESS                  00168700
         L     14,772(14,0)            GET SFT ADDRESS                  00168800
         L     14,380(14,0)            GET LX FOR SERVICE ROUTINE       00168900
         LA    15,51                   GET EX FOR SERVICE ROUTINE       00169000
         OR    14,15                   GET PC NUMBER                    00169100
         PC    0(14)                                                    00169200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00169300
.ZLINKX               ANOP  ,                                           00169400
.*******************************************************************    00169500
.***AP.X01  FORMAT GENERATED CODE                                       00169600
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00169700
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00169800
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00169900
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00170000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00170100
                      AIF   (K'&ZLD LE 0).ZL51                          00170200
&ZLC                  SETA  35             COMMENT COLUMN               00170300
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00170400
&ZLC                  SETA  33             COMMENT COLUMN               00170500
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00170600
&ZLV                  SETC  '&ZLV'.' '                                  00170700
                      AGO   .ZL31                                       00170800
.*                                                                      00170900
.ZL41                 ANOP  ,                                           00171000
&ZLV                  SETC  '&ZLV'.' '                                  00171100
.ZL51                 ANOP  ,                                           00171200
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00171300
.*                                                                      00171400
&ZLL     &ZLOP &ZLV                                                     00171500
.*                                                                      00171600
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00171700
                      AGO   .ZL21          CONTINUE LOOPING             00171800
.*                                                                      00171900
.ZLX1                 ANOP  ,                                           00172000
.*******************************************************************    00172100
.***AP.X02  END OF IWMSRFSV MACRO                                       00172200
&ZIWMSRFSV            SETC  'YES'          SET IWMSRFSV USED            00172300
         POP   PRINT                                                    00172400
*                                            IWMSRFSV-0                 00172500
         SPACE 1                                                        00172600
.ZLX2                 ANOP  ,                                           00172700
         MEND                                                           00172800
**********************************************************************/ 00172900
*/**** START OF SPECIFICATIONS **************************************** 00173000
*                                                                     * 00173100
*                                                                     * 00173200
*01* MACRO NAME:  IWMSRFSV                              -01/31/13-<0> * 00173300
*                                                                     * 00173400
*                                                                     * 00173500
*01* DESCRIPTIVE NAME:  Sysplex Routing Find Server Routine           * 00173600
*                                                                     * 00173700
*01* PROPRIETARY STATEMENT:                                           * 00173800
*                                                                     * 00173900
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00174000
*     5650-ZOS COPYRIGHT IBM CORP. 1997, 2013                         * 00174100
*                                                                     * 00174200
* STATUS= HBB7790                                                     * 00174300
*                                                                     * 00174400
*                                                                     * 00174500
*                                                                     * 00174600
*01* FUNCTION:                                                        * 00174700
*       See the IWMSRFSV macro prologue for details.                  * 00174800
*                                                                     * 00174900
*01* INPUT:                                                           * 00175000
*                                                                     * 00175100
*            ?IWMSRFSV     CONNTKN(xconntkn)                          * 00175200
*                          APPLENV(xapplenv)                          * 00175300
*                          SERVER_DATA(xserver_data)                  * 00175400
*                         ÝRETCODE(xretcode)¨                         * 00175500
*                         ÝRSNCODE(xrsncode)¨                         * 00175600
*                         ÝPLISTVER(»xplistver!IMPLIED_VERSIONº)¨     * 00175700
*                        ÐÝMF(S)¨                                     * 00175800
*                        ÔÝMF(L,xmfctrl»,xmfattr!BDY(DWORD)º)¨        * 00175900
*                        ¿ÝMF(E,xmfctrl»,COMPLETEº)¨                  * 00176000
*                                                                     * 00176100
****** END OF SPECIFICATIONS *****************************************/ 00176200
*/*PB.ECHO01 MACRO INVOCATION ECHO-----------------------------------*/ 00176300
*  ANS('@SPACE;') NORESCAN COL(MACLMAR);                                00176400
*  ANS('/* ? IWMSRFSV '!!MACLIST!!' ')                                  00176500
*      NORESCAN COL(MACLMAR+5);    /* START ECHO */                     00176600
*                                                                       00176700
*  DCL ZELO  FIXED;                                                     00176800
*  DCL ZECOL FIXED;                                                     00176900
*                                                                       00177000
*  ZELO=1;     /* STARTING COLUMN */                                    00177100
*  DO WHILE ZELO<=LENGTH(MACKEYS);  /* PARENTHSIS SCAN */               00177200
*    ZECOL=INDEX(MACKEYS(ZELO:LENGTH(MACKEYS)),')');                    00177300
*    IF ZECOL>0                                                         00177400
*      THEN                                                             00177500
*        DO;   /* PARENTHESIS FOUND */                                  00177600
*          ANS(MACKEYS(ZELO:ZELO+ZECOL-1)!!' ')                         00177700
*             NORESCAN COL(MACLMAR+5);                                  00177800
*          ZELO=ZELO+ZECOL;        /* NEXT PORTION */                   00177900
*        END;                                                           00178000
*      ELSE                                                             00178100
*        DO;   /* REMAINING KEYS */                                     00178200
*          ANS(MACKEYS(ZELO:LENGTH(MACKEYS)))                           00178300
*             NORESCAN COL(MACLMAR+5);                                  00178400
*          ZELO=LENGTH(MACKEYS)+1;                                      00178500
*        END;                                                           00178600
*  END;                                                                 00178700
*  ANS(' -01/31/13-0- */')                                              00178800
*      NORESCAN COL(MACLMAR+5);    /* END ECHO */                       00178900
*/********************************************************************/ 00179000
*/*PV.DCL01 MACRO DECLARES AND CODE GENERATION CONTROLS              */ 00179100
*/********************************************************************/ 00179200
*  DCL ZPRINT  EXTERNAL; DEACT ZPRINT; /* YES=PRINT, NO=NO PRINT     */ 00179300
*  DCL ZTEST   EXTERNAL; DEACT ZTEST;  /* YES=TEST, NO=NO TEST       */ 00179400
*  DCL ZSYSTEM EXTERNAL; DEACT ZSYSTEM;/* PCCODE10, MVS, SAK, VM     */ 00179500
*                                                                       00179600
*  DCL   ZIWMSRFSV CHAR EXTERNAL; /* YES=USED AT LEAST ONCE          */ 00179700
*  DEACT ZIWMSRFSV;                                                     00179800
*                                                                       00179900
*  DCL ZMACRET FIXED; DEACT ZMACRET;                                    00180000
*  ZMACRET=0;                   /* MACRO COMPILE RETURN CODE         */ 00180100
*                                                                       00180200
*  DCL ZMS CHAR;   DEACT ZMS;   /* ERROR MESSAGE                     */ 00180300
*  DCL ZCVAL CHAR; DEACT ZCVAL; /* ERROR MESSAGE WORK AREA           */ 00180400
*                                                                       00180500
*  DCL ZI FIXED;  DEACT ZI;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 00180600
*  DCL ZJ FIXED;  DEACT ZJ;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 00180700
*  DCL ZK FIXED;  DEACT ZK;     /* INDEX FOR RANGE COLON (:)         */ 00180800
*  DCL ZL FIXED;  DEACT ZL;     /* INDEX FOR RANGE VALUE CHECKING    */ 00180900
*  DCL ZLO FIXED; DEACT ZLO;    /* LOW RANGE VALUE                   */ 00181000
*  DCL ZHI FIXED; DEACT ZHI;    /* HIGH RANGE VALUE                  */ 00181100
*  DCL ZW CHAR;   DEACT ZW;     /* WORK AREA FOR RANGE VALUE SUBLIST */ 00181200
*  DCL ZN FIXED;  DEACT ZN;     /* NUMERIC WORK VARIABLE             */ 00181300
*  DCL ZC CHAR;   DEACT ZC;     /* CHARACTER WORK VARIABLE           */ 00181400
*  DCL ZMAXINVOCLEN FIXED; DEACT ZMAXINVOCLEN;  /* INVOCATION LENGTH */ 00181500
*  DCL ZPLLEN FIXED; DEACT ZPLLEN;        /* PARAMETER LIST LENGTH   */ 00181600
*                                                                       00181700
*  DCL ZPRMMAX FIXED;           /* MAXIMUM PARM LIST SIZE            */ 00181800
*  DCL ZPRMNUM FIXED;           /* PARAMETER ARRAY INDEX             */ 00181900
*  DCL ZPRM(100);               /* PARAMETER ENTRY                   */ 00182000
*  DCL EHAMAXLEN FIXED EXTERNAL;   /* MAX ILIST SIZE FOR PARM LISTS  */ 00182100
*  DCL EHAREGS CHARACTER EXTERNAL; /* REG DCLS                       */ 00182200
*  DCL EHAREGS64 CHARACTER EXTERNAL; /* REG DCLS                     */ 00182300
*  DCL EHALIST CHARACTER EXTERNAL; /* STANDARD PARM LIST GENERATION  */ 00182400
*/*******************************************************************/  00182500
*/*PV.XVAR01 DECLARE ALL MACRO PARAMETER VARIABLES                  */  00182600
*/*******************************************************************/  00182700
*  DCL XCONNTKN;  DEACT XCONNTKN;  /***PV.XVAR02 INPUT NAME */          00182800
*  DCL ZXCONNTKN; DEACT ZXCONNTKN;  /***INPUT/OUTPUT CONTROL */         00182900
*  DCL XAPPLENV;  DEACT XAPPLENV;  /***PV.XVAR02 INPUT NAME */          00183000
*  DCL ZXAPPLENV; DEACT ZXAPPLENV;  /***INPUT/OUTPUT CONTROL */         00183100
*  DCL   XSERVER_DATA;             /***PV.XVAR03 OUTPUT NAME */         00183200
*  DEACT XSERVER_DATA;             /***PV.XVAR03 OUTPUT NAME */         00183300
*  DCL   ZXSERVER_DATA;            /***INPUT/OUTPUT CONTROL */          00183400
*  DEACT ZXSERVER_DATA;            /***INPUT/OUTPUT CONTROL */          00183500
*  DCL XRETCODE;  DEACT XRETCODE;  /***PV.XVAR02 OUTPUT NAME */         00183600
*  DCL ZXRETCODE; DEACT ZXRETCODE;  /***INPUT/OUTPUT CONTROL */         00183700
*  DCL XRSNCODE;  DEACT XRSNCODE;  /***PV.XVAR02 OUTPUT NAME */         00183800
*  DCL ZXRSNCODE; DEACT ZXRSNCODE;  /***INPUT/OUTPUT CONTROL */         00183900
*  DCL XPLISTVER FIXED;  DEACT XPLISTVER;  /***PV.XVAR02 INPUT VALUE */ 00184000
*  DCL ZXPLISTVER; DEACT ZXPLISTVER;  /***INPUT/OUTPUT CONTROL */       00184100
*  DCL XMF;  DEACT XMF;            /***PV.XVAR02 INPUT VALUE */         00184200
*  DCL ZXMF; DEACT ZXMF;           /***INPUT/OUTPUT CONTROL */          00184300
*  DCL XMFCTRL;  DEACT XMFCTRL;    /***PV.XVAR02 INPUT NAME */          00184400
*  DCL ZXMFCTRL; DEACT ZXMFCTRL;   /***INPUT/OUTPUT CONTROL */          00184500
*  DCL XMFATTR;  DEACT XMFATTR;    /***PV.XVAR02 INPUT VALUE */         00184600
*  DCL ZXMFATTR; DEACT ZXMFATTR;   /***INPUT/OUTPUT CONTROL */          00184700
*  DCL XMFSCK;  DEACT XMFSCK;      /***PV.XVAR02 INPUT VALUE */         00184800
*  DCL ZXMFSCK; DEACT ZXMFSCK;     /***INPUT/OUTPUT CONTROL */          00184900
*/********************************************************************/ 00185000
*/***PC.PLV01  PROCESS PLISTVER                                      */ 00185100
*/********************************************************************/ 00185200
*  IF TRANSLATE(PLISTVER(1)) = 'MAX' THEN                               00185300
*    XPLISTVER=0;                                                       00185400
*  ELSE                                                                 00185500
*    XPLISTVER=0;                                                       00185600
*  IF PLISTVER^=''                                                      00185700
*     & TRANSLATE(PLISTVER(1))^='IMPLIED_VERSION'                       00185800
*     & TRANSLATE(PLISTVER(1))^='MAX'                                   00185900
*    THEN                                                               00186000
*      DO;                                                              00186100
*                                                                       00186200
*        ZCVAL='';                           /* ERROR FLAG */           00186300
*        IF PLISTVER='PLISTVER' ! PLISTVER='()'  /*CHECK ENTRY*/        00186400
*          THEN                                                         00186500
*            DO;                                                        00186600
*              ZMS=' 8, THE "PLISTVER" KEY'!! /**KOPTP* MSG*/           00186700
*                  ' MUST CONTAIN ONE'!!                                00186800
*                  ' (OR MORE) ARGUMENT(S).';                           00186900
*              ANS MSG('?IWMSRFSV ---> '!!ZMS);                         00187000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00187100
*              ZMACRET=8;                    /* MACRO ERROR */          00187200
*              ZCVAL='NO_ARGUMENT';                                     00187300
*            END;                                                       00187400
*        IF NUMBER(PLISTVER)>1               /* CHECK POSITIONALS */    00187500
*          THEN                                                         00187600
*            DO;                                                        00187700
*              ZMS=' 8, "PLISTVER'!!         /**KPOSP* MSG*/            00187800
*                  PLISTVER!!                                           00187900
*                  '" "PLISTVER"'!!                                     00188000
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        00188100
*              ANS MSG('?IWMSRFSV ---> '!!ZMS);                         00188200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00188300
*              ZMACRET=8;                    /* MACRO ERROR */          00188400
*            END;                                                       00188500
*                                                                       00188600
*        ZC=PLISTVER(1);                                                00188700
*        DO ZL=1 TO LENGTH(ZC);              /* MUST BE NUMBER */       00188800
*          IF ZC(ZL:ZL)<'0' !                /* MUST BE NUMERIC */      00188900
*             ZC(ZL:ZL)>'9'                  /* MUST BE NUMERIC */      00189000
*            THEN                                                       00189100
*              ZCVAL='NUMERIC';              /* NUMERIC ERROR */        00189200
*        END;                                                           00189300
*        IF ZCVAL=''                                                    00189400
*          THEN                                                         00189500
*            DO;                             /* CHECK RANGE LIMITS */   00189600
*            IF FIXED(PLISTVER(1))>=XPLISTVER                           00189700
*              THEN                                                     00189800
*                XPLISTVER=FIXED(PLISTVER(1));                          00189900
*              ELSE                                                     00190000
*                DO;                                                    00190100
*              ZMS=' 8, PLISTVER='!!         /**KVALP* MSG*/            00190200
*                    PLISTVER(1)!!                                      00190300
*                  ', BUT PLISTVER OF '!!                               00190400
*                    CHAR(XPLISTVER)!!                                  00190500
*                  ' IS REQUIRED.';                                     00190600
*              ANS MSG('?IWMSRFSV ---> '!!ZMS);                         00190700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00190800
*              ZMACRET=8;                    /* MACRO ERROR */          00190900
*                END;                                                   00191000
*              IF XPLISTVER<0 !              /* LOW LIMIT */            00191100
*                 XPLISTVER>0                /* HIGH LIMIT */           00191200
*                THEN                                                   00191300
*                  ZCVAL='RANGE';            /* RANGE ERROR */          00191400
*            END;                                                       00191500
*        IF ZCVAL^=''                                                   00191600
*          THEN                                                         00191700
*            DO;                             /* RANGE ERROR */          00191800
*              ZXPLISTVER='';                /* RESET IN/OUTPUT */      00191900
*              ZMS=' 8, "PLISTVER '!!        /**KRNGP* MSG*/            00192000
*                  PLISTVER!!                                           00192100
*                  '" THE RANGE IS "0-0"'!!                             00192200
*                  ' FOR ARGUMENT 1.';                                  00192300
*              ANS MSG('?IWMSRFSV ---> '!!ZMS);                         00192400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00192500
*              ZMACRET=8;                    /* MACRO ERROR */          00192600
*            END;                                                       00192700
*      END;                                                             00192800
*                                                                       00192900
*/********************************************************************/ 00193000
*/***PG.MF01  PROCESS MF MACRO FORMS                                 */ 00193100
*/********************************************************************/ 00193200
*/*PG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00193300
*  XMF='';                                                              00193400
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00193500
*  IF TRANSLATE(MF(1))                                                  00193600
*              = 'S'                         /* CHECK FOR KEYWORD */    00193700
*    THEN                                                               00193800
*      DO;                                                              00193900
*        XMF='S';                            /* SET XVARIABLE */        00194000
*        IF NUMBER(MF)>1                     /* CHECK POSITIONALS */    00194100
*          THEN                                                         00194200
*            DO;                                                        00194300
*              ZMS=' 8, "MF'!!               /**KPOSP* MSG*/            00194400
*                  MF!!                                                 00194500
*                  '" "MF"'!!                                           00194600
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        00194700
*              ANS MSG('?IWMSRFSV ---> '!!ZMS);                         00194800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00194900
*              ZMACRET=8;                    /* MACRO ERROR */          00195000
*            END;                                                       00195100
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00195200
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     00195300
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00195400
*  IF TRANSLATE(MF(1))                                                  00195500
*              = 'L'                         /* CHECK FOR KEYWORD */    00195600
*    THEN                                                               00195700
*      DO;                                                              00195800
*        XMF='L';                            /* SET XVARIABLE */        00195900
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    00196000
*          THEN                                                         00196100
*            DO;                                                        00196200
*              ZMS=' 8, "MF'!!               /**KPOSP* MSG*/            00196300
*                  MF!!                                                 00196400
*                  '" "MF"'!!                                           00196500
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       00196600
*              ANS MSG('?IWMSRFSV ---> '!!ZMS);                         00196700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00196800
*              ZMACRET=8;                    /* MACRO ERROR */          00196900
*            END;                                                       00197000
*/*PG.KKCTL10 -MF(L) SPECIAL CHECK-----------------------------------*/ 00197100
*        ZMAXINVOCLEN = LENGTH(MF) + 2;                                 00197200
*        IF PLISTVER ^= ''                                              00197300
*          THEN                                                         00197400
*            ZMAXINVOCLEN=ZMAXINVOCLEN + LENGTH(PLISTVER) + 8;          00197500
*        IF LENGTH(MACKEYS) > ZMAXINVOCLEN !                            00197600
*           MACLIST ^= ''                    /* CHECK FOR OTHER PARMS*/ 00197700
*          THEN                                                         00197800
*            DO;                                                        00197900
*              ZMS=' 8, THE "L" FORM OF "MF"'!! /**MFLP* MSG*/          00198000
*                  ' CAN ONLY HAVE'!!                                   00198100
*                  ' THE "PLISTVER" KEY'!!                              00198200
*                  ' SPECIFIED ON THE INVOCATION.';                     00198300
*              ANS MSG('?IWMSRFSV ---> '!!ZMS);                         00198400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00198500
*              ZMACRET=8;                    /* MACRO ERROR */          00198600
*            END;                                                       00198700
*/*PG.KXVAR03 NAME, OPT RQD INPUT, POS(2) -XVARIABLE-----------------*/ 00198800
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        00198900
*  IF MF(2)=''                               /* CHECK FOR NULL */       00199000
*   THEN                                                                00199100
*    DO;                                     /* KEY IS REQUIRED */      00199200
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      00199300
*        ZMS=' 8, WHEN "L" IS SPECIFIED'!!                              00199400
*            ' FOR THE "MF" KEY, POSITIONAL'!!                          00199500
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            00199600
*        ANS MSG('?IWMSRFSV ---> '!!ZMS);                               00199700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00199800
*        ZMACRET=8;                          /* MACRO ERROR */          00199900
*    END;                                                               00200000
*  ELSE                                                                 00200100
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        00200200
*/*PG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE--------------------*/ 00200300
*  ZXMFATTR='INPUT';                         /* SET IN/OUTPUT */        00200400
*  XMFATTR='BDY(DWORD)';                     /* SET DEFAULT */          00200500
*  IF MF(3)^=''                              /* CHECK FOR NULL */       00200600
*    THEN                                                               00200700
*      XMFATTR=MF(3);                        /* SET XVARIABLE */        00200800
*/*PG.KCK01 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH---------------*/ 00200900
*  IF ZXMFATTR^='' &                         /* NOT IN/OUTPUT */        00201000
*     LENGTH(XMFATTR)>60                                                00201100
*    THEN                                                               00201200
*      DO;                                                              00201300
*        ZXMFATTR='';                        /* RESET IN/OUTPUT */      00201400
*        ZMS=' 8, "MF'!!                     /**KLNGP* MSG*/            00201500
*            MF!!                                                       00201600
*            '" ARGUMENT 3 EXCEEDS THE MAXIMUM'!!                       00201700
*            ' LENGTH OF 60 CHARACTERS. ';                              00201800
*        ANS MSG('?IWMSRFSV ---> '!!ZMS);                               00201900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00202000
*        ZMACRET=8;                          /* MACRO ERROR */          00202100
*      END;                                                             00202200
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00202300
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     00202400
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00202500
*  IF TRANSLATE(MF(1))                                                  00202600
*              = 'E'                         /* CHECK FOR KEYWORD */    00202700
*    THEN                                                               00202800
*      DO;                                                              00202900
*        XMF='E';                            /* SET XVARIABLE */        00203000
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    00203100
*          THEN                                                         00203200
*            DO;                                                        00203300
*              ZMS=' 8, "MF'!!               /**KPOSP* MSG*/            00203400
*                  MF!!                                                 00203500
*                  '" "MF"'!!                                           00203600
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       00203700
*              ANS MSG('?IWMSRFSV ---> '!!ZMS);                         00203800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00203900
*              ZMACRET=8;                    /* MACRO ERROR */          00204000
*            END;                                                       00204100
*/*PG.KXVAR03 NAME, OPT RQD INPUT, POS(2) -XVARIABLE-----------------*/ 00204200
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        00204300
*  IF MF(2)=''                               /* CHECK FOR NULL */       00204400
*   THEN                                                                00204500
*    DO;                                     /* KEY IS REQUIRED */      00204600
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      00204700
*        ZMS=' 8, WHEN "E" IS SPECIFIED'!!                              00204800
*            ' FOR THE "MF" KEY, POSITIONAL'!!                          00204900
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            00205000
*        ANS MSG('?IWMSRFSV ---> '!!ZMS);                               00205100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00205200
*        ZMACRET=8;                          /* MACRO ERROR */          00205300
*    END;                                                               00205400
*  ELSE                                                                 00205500
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        00205600
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 00205700
*  XMFSCK='';                                /* RESET XVARIABLE */      00205800
*  IF TRANSLATE(MF(3))                                                  00205900
*              = 'COMPLETE'                  /* CHECK FOR KEYWORD */    00206000
*    THEN                                                               00206100
*      XMFSCK = 'COMPLETE';                  /* SET XVARIABLE */        00206200
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 00206300
*  ZXMFSCK='INPUT';                          /* SET IN/OUTPUT */        00206400
*  IF XMFSCK=''                              /* CHECK FOR KEYWORD */    00206500
*    THEN                                                               00206600
*      DO;                                   /* KEYWORD NOT ENTERED */  00206700
*        XMFSCK='COMPLETE';                  /* SET DEFAULT */          00206800
*        IF MF(3)^=''                                                   00206900
*          THEN                                                         00207000
*            DO;                                                        00207100
*              ZXMFSCK='';                   /* RESET IN/OUTPUT */      00207200
*              ZMS=' 8, "MF'!!               /**KUKWP* MSG*/            00207300
*                  MF!!'"'!!                                            00207400
*                  ' ARGUMENT 3 IS AN UNKNOWN KEYWORD. '!!              00207500
*                  ' VALID KEYWORD CHOICE(S) ARE:'!!                    00207600
*                  ' "COMPLETE".';           /* VALID KEYWORD */        00207700
*              ANS MSG('?IWMSRFSV ---> '!!ZMS);                         00207800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00207900
*              ZMACRET=8;                    /* MACRO ERROR */          00208000
*            END;                                                       00208100
*      END;                                                             00208200
*/*PG.KKCTL05 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00208300
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     00208400
*/*PG.KKCTL06 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00208500
*  IF MF='MF'                                                           00208600
*    ! MF='()'                               /*CHECK ENTRY*/            00208700
*     THEN                                                              00208800
*       DO;                                                             00208900
*              ZMS=' 8, THE "MF" KEY'!!      /**KOPTP* MSG*/            00209000
*                  ' MUST CONTAIN ONE'!!                                00209100
*                  ' (OR MORE) ARGUMENT(S).';                           00209200
*              ANS MSG('?IWMSRFSV ---> '!!ZMS);                         00209300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00209400
*              ZMACRET=8;                    /* MACRO ERROR */          00209500
*       END;                                                            00209600
*  ELSE                                                                 00209700
*    DO;                                                                00209800
*      ZXMF='INPUT';                         /* SET IN/OUTPUT */        00209900
*      IF XMF=''                             /* CHECK FOR KEYWORD */    00210000
*        THEN                                                           00210100
*          DO;                               /* KEYWORD NOT ENTERED */  00210200
*            XMF='S';                        /* SET DEFAULT */          00210300
*            XMFSCK='COMPLETE';              /* COMPLETE CHECKING */    00210400
*            IF MF(1)^=''                    /* CHECK FOR KEYWORD */    00210500
*              THEN                                                     00210600
*                DO;                                                    00210700
*                  ZXMF='';                  /* RESET IN/OUTPUT */      00210800
*              ZMS=' 8, "MF'!!               /**KUKWP* MSG*/            00210900
*                  MF!!'"'!!                                            00211000
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '!!              00211100
*                  ' VALID KEYWORD CHOICE(S) ARE:'!!                    00211200
*                  ' "S",'!!                 /* VALID KEYWORD */        00211300
*                  ' "L",'!!                 /* VALID KEYWORD */        00211400
*                  ' OR "E".';               /* VALID KEYWORD */        00211500
*              ANS MSG('?IWMSRFSV ---> '!!ZMS);                         00211600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00211700
*              ZMACRET=8;                    /* MACRO ERROR */          00211800
*                END;                                                   00211900
*          END;                                                         00212000
*    END;                                                               00212100
*/********************************************************************/ 00212200
*/***PD.P01 FULL DEFAULT CHECKING                                    */ 00212300
*/********************************************************************/ 00212400
*  IF PLISTVER=''                                                       00212500
*     ! PLISTVER(1)='IMPLIED_VERSION'                                   00212600
*    THEN                                                               00212700
*      ZC='ON';                              /* DEFAULT FLAG ON */      00212800
*    ELSE                                                               00212900
*      ZC='OFF';                             /* DEFAULT FLAG OFF */     00213000
*/********************************************************************/ 00213100
*/***PD.P02 DEFAULT ECHO                                             */ 00213200
*/********************************************************************/ 00213300
*/*PD.P02 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00213400
*  IF XMF^='L'                                                          00213500
*    THEN                                                               00213600
*      DO;                                   /* FULL SYNTAX CHECK */    00213700
*        ANS('/*DEFAULT(S): */')                                        00213800
*           NORESCAN COL(MACLMAR+5);                                    00213900
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 00214000
*  IF PLISTVER=''                                                       00214100
*    THEN DO;                                                           00214200
*      ANS('/* PLISTVER('!!                                             00214300
*          CHAR(XPLISTVER)!!                                            00214400
*          ')*/')                                                       00214500
*          NORESCAN COL(MACLMAR+5);                                     00214600
*    END;                                                               00214700
*  IF ZC='OFF'                               /*NO DEFAULTS TAKEN */     00214800
*    THEN                                                               00214900
*      ANS('/* NONE. */')                                               00215000
*         NORESCAN COL(MACLMAR+5);                                      00215100
*/*PD.P04 END DEFAULT ECHO ------------------------------------------*/ 00215200
*      END;                                                             00215300
*/********************************************************************/ 00215400
*/*PB.SYSL01 INVOKE SP LEVEL AND SYSTEM STATE MACROS                 */ 00215500
*/********************************************************************/ 00215600
*  DCL SYSSPLV CHAR EXTERNAL; DEACT SYSSPLV;/* SPLEVEL 1,2,3         */ 00215700
*  DCL SYSASCE CHAR EXTERNAL; DEACT SYSASCE;/* STATE ANY P AR */        00215800
*  DCL SYSAM64 CHAR EXTERNAL; DEACT SYSAM64;                            00215900
*  DCL SYSALVL FIXED EXTERNAL; DEACT SYSALVL;                           00216000
*                                                                       00216100
*  IF SYSASCE=''                                                        00216200
*    THEN                                                               00216300
*      DO;                                                              00216400
*        IF SYSSPLV=''                                                  00216500
*          THEN                                                         00216600
*            ANS('?SPLEVEL  (TEST);') COL(MACLMAR);                     00216700
*        IF SYSSPLV^='1' & SYSSPLV^='2'                                 00216800
*          THEN                                                         00216900
*            ANS('?SYSSTATE (TEST);') COL(MACLMAR);                     00217000
*          ELSE                                                         00217100
*            SYSASCE='P';                    /* SYSSTATE DEFAULT*/      00217200
*      END;                                                             00217300
*/********************************************************************/ 00217400
*/***PG.P01 FULL MACRO SYNTAX CHECKING                               */ 00217500
*/********************************************************************/ 00217600
*/*PG.P02 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00217700
*  IF XMF^='L'                                                          00217800
*    THEN                                                               00217900
*      DO;                                   /* FULL SYNTAX CHECK */    00218000
*/*PG.P03 EXCESSIVE POSITIONAL ARGUMENTS-----------------------------*/ 00218100
*  IF NUMBER(MACLIST)>0                      /* CHECK POSITIONALS */    00218200
*    THEN                                                               00218300
*      DO;                                                              00218400
*        ZMS=' 8, POSITIONAL ARGUMENT(S),'!! /**PPOSP* MSG*/            00218500
*            ' "'!!MACLIST!!'"'!!                                       00218600
*            ' CANNOT BE USED.'!!                                       00218700
*            ' NO POSITIONAL ARGUMENTS'!!                               00218800
*            ' ARE ALLOWED.';                                           00218900
*        ANS MSG('?IWMSRFSV ---> '!!ZMS);                               00219000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00219100
*        ZMACRET=8;                          /* MACRO ERROR */          00219200
*      END;                                                             00219300
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 00219400
*  IF NUMBER(CONNTKN)>1                      /* CHECK POSITIONALS */    00219500
*    THEN                                                               00219600
*      DO;                                                              00219700
*        ZMS=' 8, "CONNTKN'!!                /**KPOSP* MSG*/            00219800
*            CONNTKN!!                                                  00219900
*            '" "CONNTKN"'!!                                            00220000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00220100
*        ANS MSG('?IWMSRFSV ---> '!!ZMS);                               00220200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00220300
*        ZMACRET=8;                          /* MACRO ERROR */          00220400
*      END;                                                             00220500
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 00220600
*  XCONNTKN=CONNTKN(1);                      /* SET XVARIABLE */        00220700
*  IF CONNTKN(1)=''                          /* CHECK FOR NULL */       00220800
*   THEN                                                                00220900
*    DO;                                     /* KEY IS REQUIRED */      00221000
*        ZXCONNTKN='';                       /* RESET IN/OUTPUT */      00221100
*        ZMS=' 8,  '!!                                                  00221200
*            ' "CONNTKN" KEY AND ITS'!!                                 00221300
*            ' ARGUMENT ARE REQUIRED.';      /**KRQDP* MSG*/            00221400
*        ANS MSG('?IWMSRFSV ---> '!!ZMS);                               00221500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00221600
*        ZMACRET=8;                          /* MACRO ERROR */          00221700
*    END;                                                               00221800
*  ELSE                                                                 00221900
*    ZXCONNTKN='INPUT';                      /* SET IN/OUTPUT */        00222000
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 00222100
*  IF NUMBER(APPLENV)>1                      /* CHECK POSITIONALS */    00222200
*    THEN                                                               00222300
*      DO;                                                              00222400
*        ZMS=' 8, "APPLENV'!!                /**KPOSP* MSG*/            00222500
*            APPLENV!!                                                  00222600
*            '" "APPLENV"'!!                                            00222700
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00222800
*        ANS MSG('?IWMSRFSV ---> '!!ZMS);                               00222900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00223000
*        ZMACRET=8;                          /* MACRO ERROR */          00223100
*      END;                                                             00223200
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 00223300
*  XAPPLENV=APPLENV(1);                      /* SET XVARIABLE */        00223400
*  IF APPLENV(1)=''                          /* CHECK FOR NULL */       00223500
*   THEN                                                                00223600
*    DO;                                     /* KEY IS REQUIRED */      00223700
*        ZXAPPLENV='';                       /* RESET IN/OUTPUT */      00223800
*        ZMS=' 8,  '!!                                                  00223900
*            ' "APPLENV" KEY AND ITS'!!                                 00224000
*            ' ARGUMENT ARE REQUIRED.';      /**KRQDP* MSG*/            00224100
*        ANS MSG('?IWMSRFSV ---> '!!ZMS);                               00224200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00224300
*        ZMACRET=8;                          /* MACRO ERROR */          00224400
*    END;                                                               00224500
*  ELSE                                                                 00224600
*    ZXAPPLENV='INPUT';                      /* SET IN/OUTPUT */        00224700
*/*PG.KXVAR01 NAME, RQD OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 00224800
*  IF NUMBER(SERVER_DATA)>1                  /* CHECK POSITIONALS */    00224900
*    THEN                                                               00225000
*      DO;                                                              00225100
*        ZMS=' 8, "SERVER_DATA'!!            /**KPOSP* MSG*/            00225200
*            SERVER_DATA!!                                              00225300
*            '" "SERVER_DATA"'!!                                        00225400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00225500
*        ANS MSG('?IWMSRFSV ---> '!!ZMS);                               00225600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00225700
*        ZMACRET=8;                          /* MACRO ERROR */          00225800
*      END;                                                             00225900
*/*PG.KXVAR03 NAME, RQD OUTPUT, KEYS -XVARIABLE----------------------*/ 00226000
*  XSERVER_DATA=SERVER_DATA(1);              /* SET XVARIABLE */        00226100
*  IF SERVER_DATA(1)=''                      /* CHECK FOR NULL */       00226200
*   THEN                                                                00226300
*    DO;                                     /* KEY IS REQUIRED */      00226400
*        ZXSERVER_DATA='';                   /* RESET IN/OUTPUT */      00226500
*        ZMS=' 8,  '!!                                                  00226600
*            ' "SERVER_DATA" KEY AND ITS'!!                             00226700
*            ' ARGUMENT ARE REQUIRED.';      /**KRQDP* MSG*/            00226800
*        ANS MSG('?IWMSRFSV ---> '!!ZMS);                               00226900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00227000
*        ZMACRET=8;                          /* MACRO ERROR */          00227100
*    END;                                                               00227200
*  ELSE                                                                 00227300
*    ZXSERVER_DATA='OUTPUT';                 /* SET IN/OUTPUT */        00227400
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 00227500
*  IF RETCODE='RETCODE' ! RETCODE='()'       /*CHECK ENTRY*/            00227600
*    THEN                                                               00227700
*      DO;                                                              00227800
*        ZMS=' 8, THE "RETCODE" KEY'!!       /**KOPTP* MSG*/            00227900
*            ' MUST CONTAIN ONE'!!                                      00228000
*            ' (OR MORE) ARGUMENT(S).';                                 00228100
*        ANS MSG('?IWMSRFSV ---> '!!ZMS);                               00228200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00228300
*        ZMACRET=8;                          /* MACRO ERROR */          00228400
*      END;                                                             00228500
*  IF NUMBER(RETCODE)>1                      /* CHECK POSITIONALS */    00228600
*    THEN                                                               00228700
*      DO;                                                              00228800
*        ZMS=' 8, "RETCODE'!!                /**KPOSP* MSG*/            00228900
*            RETCODE!!                                                  00229000
*            '" "RETCODE"'!!                                            00229100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00229200
*        ANS MSG('?IWMSRFSV ---> '!!ZMS);                               00229300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00229400
*        ZMACRET=8;                          /* MACRO ERROR */          00229500
*      END;                                                             00229600
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 00229700
*  IF RETCODE(1)^=''                         /* CHECK FOR NULL */       00229800
*    THEN                                                               00229900
*      DO;                                                              00230000
*        XRETCODE=RETCODE(1);                /* SET XVARIABLE */        00230100
*        ZXRETCODE='OUTPUT';                 /* SET OUTPUT */           00230200
*      END;                                                             00230300
*  ELSE                                                                 00230400
*    IF ZXRETCODE^=''                                                   00230500
*      THEN                                                             00230600
*        ZXRETCODE='';                       /* RESET OUTPUT */         00230700
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 00230800
*  IF RSNCODE='RSNCODE' ! RSNCODE='()'       /*CHECK ENTRY*/            00230900
*    THEN                                                               00231000
*      DO;                                                              00231100
*        ZMS=' 8, THE "RSNCODE" KEY'!!       /**KOPTP* MSG*/            00231200
*            ' MUST CONTAIN ONE'!!                                      00231300
*            ' (OR MORE) ARGUMENT(S).';                                 00231400
*        ANS MSG('?IWMSRFSV ---> '!!ZMS);                               00231500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00231600
*        ZMACRET=8;                          /* MACRO ERROR */          00231700
*      END;                                                             00231800
*  IF NUMBER(RSNCODE)>1                      /* CHECK POSITIONALS */    00231900
*    THEN                                                               00232000
*      DO;                                                              00232100
*        ZMS=' 8, "RSNCODE'!!                /**KPOSP* MSG*/            00232200
*            RSNCODE!!                                                  00232300
*            '" "RSNCODE"'!!                                            00232400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00232500
*        ANS MSG('?IWMSRFSV ---> '!!ZMS);                               00232600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00232700
*        ZMACRET=8;                          /* MACRO ERROR */          00232800
*      END;                                                             00232900
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 00233000
*  IF RSNCODE(1)^=''                         /* CHECK FOR NULL */       00233100
*    THEN                                                               00233200
*      DO;                                                              00233300
*        XRSNCODE=RSNCODE(1);                /* SET XVARIABLE */        00233400
*        ZXRSNCODE='OUTPUT';                 /* SET OUTPUT */           00233500
*      END;                                                             00233600
*  ELSE                                                                 00233700
*    IF ZXRSNCODE^=''                                                   00233800
*      THEN                                                             00233900
*        ZXRSNCODE='';                       /* RESET OUTPUT */         00234000
*/*PG.P04 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00234100
*      END;                                  /* END COMPLETE CHECKING*/ 00234200
*/********************************************************************/ 00234300
*/***PE.MR01 GENERATE CODE IF ZMACRET=0                              */ 00234400
*/********************************************************************/ 00234500
*  IF ZMACRET = 0                                                       00234600
*    THEN                                                               00234700
*      DO;                                                              00234800
*/********************************************************************/ 00234900
*/***PE.PR01 PRINT CONTROLS, DEFAULT IS YES                          */ 00235000
*/********************************************************************/ 00235100
*  ANS(MACCONC!!'LIST PUSH NOECHO;') NORESCAN COL(MACLMAR);             00235200
*  IF ZPRINT='NO'                            /* PRINT IS OFF */         00235300
*    THEN                                                               00235400
*      ANS(MACCONC!!'LIST OFF NOECHO;') NORESCAN COL(MACLMAR);          00235500
*    ELSE                                                               00235600
*      ANS(MACCONC!!'LIST ON NOECHO;')  NORESCAN COL(MACLMAR);          00235700
*/********************************************************************/ 00235800
*/*PE.DO02 OUTER MACRO DO STATEMENT----------------------------------*/ 00235900
*  IF XMF^='L'                                                          00236000
*    THEN                                                               00236100
*      ANS('DO; /* IWMSRFSV-PLISTVER */')                               00236200
*          NORESCAN COL(MACLMAR);                                       00236300
*/*MCMPLS01 RFY 15*/                                                    00236400
*  IF XMF^='L' & ZMACRET = 0                                            00236500
*    THEN                                                               00236600
*      ANS('RFY GPR15F RSTD;') NORESCAN COL(MACLMAR);                   00236700
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  00236800
       DCL EHAMAPS CHAR EXTERNAL;                                       00236900
       IF INDEX(EHAMAPS,'XM@')=0 THEN                                   00237000
         EHAMAPS=EHAMAPS!!'XM@,';                                       00237100
       IF INDEX(EHAREGS,'00F')=0                                        00237200
         THEN                                                           00237300
           EHAREGS=EHAREGS!!'00F'; /* GPR00F                      */    00237400
       IF INDEX(EHAREGS,'15F')=0                                        00237500
         THEN                                                           00237600
           EHAREGS=EHAREGS!!'15F'; /* GPR15F                      */    00237700
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  00237800
*/*PL.LL01 ?IWMSRFSV MF=L PARAMETER LIST-----------------------------*/ 00237900
*  IF XMF='L'                                                           00238000
*    THEN                                                               00238100
*      DO;                                                              00238200
*        ANS('DCL 1 '!!XMFCTRL!!' '!!XMFATTR!!', '!!                    00238300
*            '/* ?IWMSRFSV PARM LIST*/')                                00238400
*            NORESCAN COL(MACLMAR);                                     00238500
*/*PL.LL02  XVERSION FIXED(8) INPUT----------------------------------*/ 00238600
*        ANS('2 '!!XMFCTRL!!                                            00238700
*            '_XVERSION FIXED(8), '!!                                   00238800
*            '/* INPUT XVERSION*/')                                     00238900
*            NORESCAN COL(MACLMAR+2);                                   00239000
*/*PL.LL13  XRSV0001 CHAR(1) RESERVED--------------------------------*/ 00239100
*        ANS('2 '!!XMFCTRL                                              00239200
*         !! '_XRSV0001 CHAR(1), '                                      00239300
*         !! '/* RESERVED */'                                           00239400
*            ) NORESCAN COL(MACLMAR+2);                                 00239500
*/*PL.LL02  XPLISTLEN FIXED(16) BDY(BYTE) INPUT----------------------*/ 00239600
*        ANS('2 '!!XMFCTRL!!                                            00239700
*            '_XPLISTLEN FIXED(16) BDY(BYTE), '!!                       00239800
*            '/* INPUT XPLISTLEN*/')                                    00239900
*            NORESCAN COL(MACLMAR+2);                                   00240000
*/*PL.LL13  XCONNTKN BIT(32) INPUT-----------------------------------*/ 00240100
*        ANS('2 '!!XMFCTRL                                              00240200
*         !! '_XCONNTKN BIT(32), '                                      00240300
*         !! '/* '!!ZXCONNTKN                                           00240400
*         !! ' XCONNTKN */'                                             00240500
*            ) NORESCAN COL(MACLMAR+2);                                 00240600
*/*PL.LL13 ADDR XAPPLENV PTR(31) INPUT ADDR--------------------------*/ 00240700
*        ANS('2 '!!XMFCTRL                                              00240800
*         !! '_XAPPLENV_ADDR PTR(31), '                                 00240900
*         !! '/* '!!ZXAPPLENV_ADDR                                      00241000
*         !! ' XAPPLENV_ADDR */'                                        00241100
*            ) NORESCAN COL(MACLMAR+2);                                 00241200
*/*PL.LL13 ADDR XSERVER_DATA PTR(31) OUTPUT ADDR---------------------*/ 00241300
*        ANS('2 '!!XMFCTRL                                              00241400
*         !! '_XSERVER_DATA_ADDR PTR(31), '                             00241500
*         !! '/* '!!ZXSERVER_DATA_ADDR                                  00241600
*         !! ' XSERVER_DATA_ADDR */'                                    00241700
*            ) NORESCAN COL(MACLMAR+2);                                 00241800
*/*PL.LL18 ----------------------------------------------------------*/ 00241900
*        ANS('2 * CHAR(0);')                                            00242000
*            NORESCAN COL(MACLMAR+2);                                   00242100
*/*PL.LL17 END OF MF=L PARAMETER LIST--------------------------------*/ 00242200
*      END;                                                             00242300
*/*PL.L01 MACRO WORK VARIABLES---------------------------------------*/ 00242400
*  DCL ZPRMLINE CHAR;          /* ZPRM ARRAY ENTRY ACCUMULATOR      */  00242500
*  DEACT ZPRMLINE;                                                      00242600
*  DCL ZNDX CHAR;              /* UNIQUE LIST STRUCTURE NAME        */  00242700
*  DEACT ZNDX;                                                          00242800
*  ZNDX=MACINDEX;              /* MACINDEX                          */  00242900
*  DCL XVERSION CHAR;                                                   00243000
*  DEACT XVERSION;                                                      00243100
*/*PL.L02 ?IWMSRFSV PARAMETER LIST-----------------------------------*/ 00243200
*  IF XMF^='L'                                                          00243300
*    THEN                                                               00243400
*      DO;                                                              00243500
*/*PL.L03 ?IWMSRFSV PARAMETER LIST-----------------------------------*/ 00243600
*        IF XMF='S'                                                     00243700
*          THEN                                                         00243800
*            XMFCTRL='#ZPLIST';                                         00243900
*/*PL.L04 ?IWMSRFSV PARAMETER LIST-----------------------------------*/ 00244000
*        ZPRMLINE='DCL 1 #Z'!!ZNDX!!' DEF('!!                           00244100
*                 XMFCTRL!!'),'!!                                       00244200
*                 ' /* ?IWMSRFSV PARM LIST*/';                          00244300
*/*PL.L05 ADDR XVERSION FIXED(8) INPUT-------------------------------*/ 00244400
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00244500
*                 '_XVERSION FIXED(8), '!!                              00244600
*                 '/* INPUT XVERSION*/';                                00244700
*/*PL.L08  XRSV0001 CHAR(1) RESERVED---------------------------------*/ 00244800
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00244900
*                 '_XRSV0001 CHAR(1), '!!                               00245000
*                 '/* RESERVED */';                                     00245100
*/*PL.L05  XPLISTLEN FIXED(16) BDY(BYTE) INPUT-----------------------*/ 00245200
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00245300
*                 '_XPLISTLEN FIXED(16) BDY(BYTE), '!!                  00245400
*                 '/* INPUT XPLISTLEN*/';                               00245500
*/*PL.L08  XCONNTKN BIT(32) INPUT------------------------------------*/ 00245600
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00245700
*                 '_XCONNTKN BIT(32), '!!                               00245800
*                 '/* '!!ZXCONNTKN!!                                    00245900
*                 ' XCONNTKN */';                                       00246000
*/*PL.L08 ADDR XAPPLENV PTR(31) INPUT ADDR---------------------------*/ 00246100
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00246200
*                 '_XAPPLENV_ADDR PTR(31), '!!                          00246300
*                 '/* '!!ZXAPPLENV_ADDR!!                               00246400
*                 ' XAPPLENV_ADDR */';                                  00246500
*/*PL.L08 ADDR XSERVER_DATA PTR(31) OUTPUT ADDR----------------------*/ 00246600
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00246700
*                 '_XSERVER_DATA_ADDR PTR(31), '!!                      00246800
*                 '/* '!!ZXSERVER_DATA_ADDR!!                           00246900
*                 ' XSERVER_DATA_ADDR */';                              00247000
*/*PL.L11 CONSTANT TO ENSURE THAT LIST FORM IS LONG ENOUGH ----------*/ 00247100
*        ZPRMNUM=ZPRMNUM+1;                                             00247200
*        ZPRM(ZPRMNUM)=ZPRMLINE!!' 2 * CHAR(0);';                       00247300
*        IF XPLISTVER^=0                                                00247400
*           & XMF^='S'                                                  00247500
*          THEN                                                         00247600
*            DO;                                                        00247700
*              ZPRMNUM=ZPRMNUM+1;                                       00247800
*              ZPRM(ZPRMNUM)=                                           00247900
*               'DCL #Z'!!ZNDX!!'_LENCHECK FIXED(32) CONSTANT('!!       00248000
*               'LENGTH('!!XMFCTRL!!')-LENGTH(#Z'!!ZNDX!!'));'!!        00248100
*               '/* CONSTANT TO ENSURE THAT THE LIST FORM'!!            00248200
*               ' IS LONG ENOUGH */';                                   00248300
*            END;                                                       00248400
*/*PL.L12 PARAMETER LIST SIZE----------------------------------------*/ 00248500
*        ZPLLEN=16;                                                     00248600
*        IF ZPRMMAX<ZPLLEN                                              00248700
*           & XMF^='E'                                                  00248800
*          THEN                                                         00248900
*            ZPRMMAX=ZPLLEN;                                            00249000
*/*PL.L13 -----------------------------------------------------------*/ 00249100
*      END;                                                             00249200
*/*PI.L01 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00249300
*  IF XMF^='L'                                                          00249400
*    THEN                                                               00249500
*      DO;                                                              00249600
*        ANS('RFY GPR15F UNRSTD;') NORESCAN COL(MACLMAR);               00249700
*/*PI.L03 CLEAR PARAMETER LIST --------------------------------------*/ 00249800
*            ANS('#Z'!!ZNDX!!'=''''B;'!!                                00249900
*                '/* CLEAR PARAMETER AREA */')                          00250000
*                NORESCAN COL(MACLMAR);                                 00250100
*/*PI.L05C XPLISTLEN FIXED(16)---------------------------------------*/ 00250200
*        ANS('#Z'!!ZNDX!!'_XPLISTLEN=LENGTH(#Z'!!ZNDX!!');'!!           00250300
*            '/* XPLISTLEN FIXED(16) */')                               00250400
*            NORESCAN COL(MACLMAR);                                     00250500
*/*PI.L19 XCONNTKN NAME BIT(32)--------------------------------------*/ 00250600
*        IF ZXCONNTKN='INPUT' !                                         00250700
*           ZXCONNTKN='INOUT'                                           00250800
*          THEN                                                         00250900
*            IF (XCONNTKN(1:1)^='0' &                                   00251000
*               XCONNTKN(1:1)^='1')                                     00251100
*              THEN                                                     00251200
*                ANS('#Z'!!ZNDX!!'_XCONNTKN='!!                         00251300
*                    XCONNTKN!!';'!!                                    00251400
*                    '/* XCONNTKN BIT(32) */')                          00251500
*                    NORESCAN COL(MACLMAR);                             00251600
*              ELSE                                                     00251700
*                ANS('#Z'!!ZNDX!!'_XCONNTKN='!!                         00251800
*                    ''''!!XCONNTKN!!'''B;'!!                           00251900
*                    '/* XCONNTKN BIT(32) */')                          00252000
*                    NORESCAN COL(MACLMAR);                             00252100
*/*PI.L15 ADDR(XAPPLENV) CHAR(32)------------------------------------*/ 00252200
*        IF ZXAPPLENV^=''                                               00252300
*          THEN                                                         00252400
*            ANS('#Z'!!ZNDX!!'_XAPPLENV_ADDR='!!                        00252500
*                'ADDR('!!XAPPLENV!!');'!!                              00252600
*                '/* ADDR XAPPLENV CHAR(32) */')                        00252700
*                NORESCAN COL(MACLMAR);                                 00252800
*/*PI.L15 ADDR(XSERVER_DATA) CHAR(32)--------------------------------*/ 00252900
*        IF ZXSERVER_DATA^=''                                           00253000
*          THEN                                                         00253100
*            ANS('#Z'!!ZNDX!!'_XSERVER_DATA_ADDR='!!                    00253200
*                'ADDR('!!XSERVER_DATA!!');'!!                          00253300
*                '/* ADDR XSERVER_DATA CHAR(32) */')                    00253400
*                NORESCAN COL(MACLMAR);                                 00253500
*/*PI.L31 INVOKE FUNCTION--------------------------------------------*/ 00253600
*              IF NUMBER(RSNCODE)>0                                     00253700
*                THEN                                                   00253800
*                  ANS('RFY GPR00F RSTD;') NORESCAN COL(MACLMAR);       00253900
*              IF NUMBER(RETCODE)>0                                     00254000
*                THEN                                                   00254100
*                  ANS('RFY GPR15F RSTD;') NORESCAN COL(MACLMAR);       00254200
*              ANS('RFY GPR01P RSTD;') NORESCAN COL(MACLMAR);           00254300
*              ANS('GPR01P=ADDR(#Z'!!ZNDX!!');'!!                       00254400
*                  '/* PARAMETER LIST */')                              00254500
*                  NORESCAN COL(MACLMAR);                               00254600
*              IF SYSASCE^='P'                                          00254700
*                THEN                                                   00254800
*                  ANS('SAR(GPR01P,ALET(#Z'!!ZNDX!!'));'!!              00254900
*                      '/* PARAMETER LIST AR */')                       00255000
*                      NORESCAN COL(MACLMAR);                           00255100
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  00255200
         ANS('PC(XM@(96)!51);') SKIP COL(5);                            00255300
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  00255400
*              ANS('RFY GPR01P UNRSTD;') NORESCAN COL(MACLMAR);         00255500
*/*PO.L08 XRETCODE RETURN CODE---------------------------------------*/ 00255600
*              IF NUMBER(RETCODE)>0                                     00255700
*                THEN                                                   00255800
*                    ANS(XRETCODE!!                                     00255900
*                     '=GPR15F; /* SET RETURN CODE */')                 00256000
*                      NORESCAN COL(MACLMAR);                           00256100
*/*PO.L09 XRSNCODE REASON CODE---------------------------------------*/ 00256200
*              IF NUMBER(RSNCODE)>0                                     00256300
*                THEN                                                   00256400
*                    ANS(XRSNCODE!!                                     00256500
*                     '=GPR00F; /* SET REASON CODE */')                 00256600
*                      NORESCAN COL(MACLMAR);                           00256700
*/*PO.L10 REMOVE REGISTER RESTRICTIONS-------------------------------*/ 00256800
*              IF NUMBER(RSNCODE)>0                                     00256900
*                THEN                                                   00257000
*              ANS('RFY GPR00F UNRSTD;') NORESCAN COL(MACLMAR);         00257100
*              IF NUMBER(RETCODE)>0                                     00257200
*                THEN                                                   00257300
*              ANS('RFY GPR15F UNRSTD;') NORESCAN COL(MACLMAR);         00257400
*/*PO.L12 END OF PARAMETER LIST PROCESSING---------------------------*/ 00257500
*      END;                                                             00257600
*/*PO.L13 IWMSRFSV USAGE INDICATOR-----------------------------------*/ 00257700
*  ZIWMSRFSV='YES';                          /* SET IWMSRFSV USED */    00257800
*/*PO.L15 END OF EXECUTABLE IWMSRFSV-PLISTVER MACRO------------------*/ 00257900
*  IF XMF^='L'                                                          00258000
*    THEN                                                               00258100
*      ANS('END; /* IWMSRFSV-PLISTVER */')                              00258200
*          NORESCAN COL(MACLMAR);                                       00258300
*/*PO.L16 RESTORE PRINT CONTROLS-------------------------------------*/ 00258400
*  ANS(MACCONC!!'LIST POP NOECHO;') NORESCAN COL(MACLMAR);              00258500
*/*PO.L17 END OF IWMSRFSV MACRO--------------------------------------*/ 00258600
*  ANS(MACCONC!!'SPACE;') NORESCAN COL(MACLMAR);                        00258700
*  ANS(' ') NORESCAN COL(MACLMAR);                                      00258800
*/*******************************************************************/  00258900
*/*  PO.L18 END OF CODE TO BE BYPASSED WHEN ZMACRET ^= 0            */  00259000
*/*******************************************************************/  00259100
*      END;                                                             00259200
*/*******************************************************************/  00259300
*/*  MVS ONLY     -CHECK IF AMG PARM LISTS ARE PRESENT              */  00259400
*/*               -ROUND MAX AMG PARM LIST TO DOUBLEWORD MULTIPLES  */  00259500
*/*******************************************************************/  00259600
*  IF ZPRMNUM>0                   /* NUMBER OF AMG PARM LIST ENTRIES*/  00259700
*    THEN                                                               00259800
*      DO;                                                              00259900
*        ZPRMMAX=((ZPRMMAX+7)/8)*8; /* ROUND PARM LIST SIZE UP TO       00260000
*                                      DOUBLEWORD MULTIPLES        */   00260100
*/*******************************************************************/  00260200
*/*  MVS -GENERATE PARM LIST DCL TO OVERLAY ?EPILOG'S ILIST AREA    */  00260300
*/*******************************************************************/  00260400
*        IF XMF ^= 'M' & XMF ^= 'E'                                     00260500
*          THEN                                                         00260600
*            DO;                                                        00260700
*              IF INDEX(EHALIST,',AMG,')=0 /* HAS DECLARE BEEN DONE?*/  00260800
*                THEN                                                   00260900
*                  DO;                                                  00261000
*                    ANS('?EPILOG                                       00261100
*                        STRING(''DCL #ZPLIST DEF(ILIST);'');');        00261200
*                    EHALIST=EHALIST!!',AMG,';                          00261300
*                  END;                                                 00261400
*            END;                                                       00261500
*/*******************************************************************/  00261600
*/*  MVS  -EXTRACT PARM LISTS FROM AMG GLOBAL MACRO ARRAYS          */  00261700
*/*******************************************************************/  00261800
*        IF XMF ^= 'M' & XMF ^= 'E'                                     00261900
*          THEN                                                         00262000
*            DO;                                                        00262100
*              IF ZPRMMAX>EHAMAXLEN                                     00262200
*                THEN                                                   00262300
*                  EHAMAXLEN=ZPRMMAX; /* SET MAX PARM LIST SIZE     */  00262400
*            END;                                                       00262500
*        DO ZI=1 TO ZPRMNUM; /* EXTRACT AMG PARM LISTS               */ 00262600
*          ANS('?EPILOG STRING('''!!ZPRM(ZI)!!''');')                   00262700
*              COL(MACLMAR);                                            00262800
*        END;                                                           00262900
*      END;                                                             00263000
*/*-----------------------------------------------------------------*/  00263100
*/*  MVS  -ENSURE THAT GPRS NEEDED BY AMG MACROS WILL BE PROVIDED   */  00263200
*/*        BY ?EPILOG                                               */  00263300
*/*-----------------------------------------------------------------*/  00263400
*        IF INDEX(EHAREGS,'01P')=0                                      00263500
*          THEN                                                         00263600
*            EHAREGS=EHAREGS!!'01P'; /* GPR01P                      */  00263700
*        IF INDEX(EHAREGS,'00F')=0                                      00263800
*          & NUMBER(RSNCODE)>0                                          00263900
*          THEN                                                         00264000
*            EHAREGS=EHAREGS!!'00F'; /* GPR00F                      */  00264100
*        IF INDEX(EHAREGS,'15F')=0                                      00264200
*          THEN                                                         00264300
*            EHAREGS=EHAREGS!!'15F'; /* GPR15F                      */  00264400
*  RETURN CODE(ZMACRET);                                                00264500
*%END IWMSRFSV;                                                         00264600
