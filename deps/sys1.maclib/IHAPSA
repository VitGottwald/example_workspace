*                                                                               
*        %GOTO PSAL1;    /*                                                     
         MACRO                                                                  
         IHAPSA &DSECT=YES,&LIST=NO,&PSAE=YES                    @MOC*/         
*%PSAL1 : ;                                                                     
*                                                                               
*/* START OF SPECIFICATIONS ******************************************/         
*/*01* PROPRIETARY_STATEMENT *****************************************/         
*/*                                                                  */         
*/*  LICENSED MATERIALS - PROPERTY OF IBM                            */         
*/*  5650-ZOS COPYRIGHT IBM CORP. 1977, 2021                         */         
*/*                                                                  */         
*/*01* STATUS = HBB77D0                                              */         
*/*                                                                  */         
*/**** END_OF_PROPRIETARY_STATEMENT **********************************/         
*/*                                                                  */         
*/*01* DESCRIPTIVE NAME:  Prefixed Save Area                         */         
*/*02*  ACRONYM:  PSA                                                */         
*/*                                                                  */         
*/*01* EXTERNAL CLASSIFICATION:                                      */         
*/*02*         NOTPI:BASE                                            */         
*/*02*         PI:  FIELDS                                           */         
*/*                  FLCARCH                                         */         
*/*                  FLCCVT                                          */         
*/*                  FLCCVT64                                        */         
*/*                  PSAECVT                                         */         
*/*                  FLCFACL                                         */         
*/*                  FLCFACLE                                        */         
*/*                  PSAAOLD                                         */         
*/*                  PSAFLAGS                                    @MBA*/         
*/*                  PSAFPFL                                         */         
*/*                  PSALAA                                      @PGA*/         
*/*                  PSALCCAV                                        */         
*/*                  PSASVTX                                     @PRA*/         
*/*                  PSATOLD                                         */         
*/*                  PSATRVT                                         */         
*/*                  PSATX                                       @MBA*/         
*/*                  PSATXC                                      @MBA*/         
*/*                  PSAVAL                                      @MRA*/         
*/*                  PSAXCVT                                         */         
*/*02*         NONE: PSAProcClass                                    */         
*/*01* END OF EXTERNAL CLASSIFICATION:                               */         
*/*                                                                  */         
*/*01* MACRO NAME:  IHAPSA                                           */         
*/*                                                                  */         
*/*01* DSECT NAME:                                                   */         
*/*     PSA                                                          */         
*/*                                                                  */         
*/*01* COMPONENT:  Supervisor Control (SC1C5)                        */         
*/*                                                                  */         
*/*01* EYE-CATCHER:  None                                            */         
*/*                                                                  */         
*/*01* STORAGE ATTRIBUTES:                                           */         
*/*02*  SUBPOOL:  239                                                */         
*/*02*  KEY:  0                                                      */         
*/*02*  RESIDENCY:  Below 16 MB line                                 */         
*/*                                                                  */         
*/*01* SIZE:                                                         */         
*/*      PSA -- X'1000' bytes                                        */         
*/*                                                                  */         
*/*01* CREATED BY:                                                   */         
*/*     IEAVFX00                                                     */         
*/*     IEAVNIP0                                                     */         
*/*     IEEVCPRA                                                     */         
*/*                                                                  */         
*/*01* POINTED TO BY:                                                */         
*/*     The PSA maps the storage that starts at location 0 for the   */         
*/*     related processor.                                           */         
*/*                                                                  */         
*/*01* SERIALIZATION:                                                */         
*/*     Disablement.                                                 */         
*/*     None needed for FLCFACL/FLCFACLE.                            */         
*/*                                                                  */         
*/*01* FUNCTION:                                                     */         
*/*02*  Maps fixed hardware and software storage locations for the   */         
*/*     related processor.                                           */         
*/*                                                                  */         
*/*01* PURPOSE = PROVIDE DATA MAPPING OF THE PSA.                    */         
*/*                                                                  */         
*/*01* METHOD OF ACCESS:                                             */         
*/*02*  ASM:                                                         */         
*/*      DSECT is produced unless DSECT=NO is specified.             */         
*/*      USING on PSA gives Addressability for all symbols.          */         
*/*      Specify LIST=YES on Macro call for listing.                 */         
*/*02*  PL/AS:                                                       */         
*/*      PSA will be location(0),                                    */         
*/*      unless %PSABASE is set to some other value before include   */         
*/*      for a macro.                                                */         
*/*      Specify %IHALIST='YES' before %INCLUDE for a PL/AS listing. */         
*/*                                                                  */         
*/*01*   NOTES: The labels beginning with PSA or FLC are proper      */         
*/*             labels to use. The other labels are given as         */         
*/*             alias names for compatibility with labels used       */         
*/*             for system 360 LOW CORE.                             */         
*/*                                                                  */         
*/*01* DEPENDENCIES:                                                 */         
*/*      For any field additions/modifications to the IHAPSA macro:  */         
*/*                                                                  */         
*/*      1) IEAPSAEP (PSA/PSAE dump formatter) should be updated     */         
*/*         appropriately.                                       @0KA*/         
*/*                                                                  */         
*/*      2) IEAVPPSA (PRIMEPSA) should be updated and re-compiled    */         
*/*         for any changes to reserved fields.                  @0KA*/         
*/*                                                                  */         
*/*                                                                  */         
*/*01* DISTRIBUTION LIBRARY:  AMACLIB                                */         
*/*                                                                  */         
*/*01* CHANGE ACTIVITY:                                              */         
*/*  $LR=PR313    JBB3313  891128  PD16EI:  SHOWHDR format complete  */         
*/*                                                                  */         
*/* END OF SPECIFICATIONS ********************************************/         
*%GOTO PSAL2;   /*                                                              
.*                                                                              
.**********************************************************************         
.*   CHANGE ACTIVITY =                                                          
.*                                                                              
.*   G860PXX - HBB2102 SUPPORT                                                  
.*   OZ63674 - NEW GLOBAL SCHEDULE SAVEAREAS                   @ZA63674         
.*   OY01102 - NEW BIT FOR TRACE INTERRUPT RECURSION                            
.*                                                                              
.*  $L1=QRF      JBB1326  800918  PD16XK:  I/O NON PREEMPTION                   
.*  $L2=SECP     JBB1326  800918  PD16XK:  SELDOM ENDING CHANNEL                
.*                                         PROGRAM                              
.*  $L3=EXTREAL  JBB1326  800918  PD16XK:  EXTENDED REAL ADDRESSING             
.*  $L4=PGASSIST JBB1326  800918  PD16XK:  PAGE FAULT ASSIST                    
.*  $P1=PMM0045  JBB1326  801117  PD16XK:  MOVE FLAG BYTE ADDED FOR L1          
.*  $L5=RAPRAS   JBB2110  820622  PD16XZ:  ADD FLAG FOR I/O FLIH,               
.*                                         FIELD FOR RESTART FLIH,              
.*                                         AND SUPER BIT FOR                    
.*                                         IEAVESAR                             
.*  $P2=PAB0329  JBB2110  830302  PD16FN:  FIX PSASUP4 STRUCTURE                
.*  $L6=SUPRAS2  JBB2125  830216  PD16FH:  SVC FLIH/RTM RECURSION               
.*  $H1=ADVPROC2 JBB2133  821013  PD16F5:  AXP                                  
.*  $P3=PAE0013  JBB2133  821228  PD16XA:  FIXED COPYRIGHT DATE                 
.*  $D1=DCR0054  JBB2133  840608  PD16XK:  RE-DEFINE PSAXSTK FIELD              
.*  $H2=VF       JBB2214  840409  PD16XK:  VECTOR FEATURE                       
.*  $P4=PA40072  JBB2214  850311  PD16Q9:  SUSPEND LOCK MANAGER SAVE            
.*                                         AREA                                 
.*  $L7=RASENH   JBB2220  840618  PD16XK:  RAS ENHANCEMENTS FOR RTM             
.*  $L8=AR       HBB3310  850903  PD16Q9:  ACCESS REGISTERS                     
.*  $L9=AR       HBB3310  860106  PD16Q9:  ACCESS REGISTERS                     
.*  $LA=DREF     HBB3310  860416  PD16H5:  DISABLED REFERENCE SUPPORT           
.*  $D2=DCR0030  HBB3310  860416  PD16H5:  TYPE 6 SVC IH LS SUPPORT             
.*  $LB=DATASPAC HBB3310  860630  PD16LD:  DATA SPACES                          
.*  $D3=DCR0031  HBB3310  860903  PD16Q4:  ADD IOS LOCK                         
.*  $LC=DATASPAC HBB3310  860903  PD16H5:  DATA SPACES                          
.*  $D4=DCR0061  HBB3310  860901  PD16H4:  INT LS FOR RSM LOCKS                 
.*  $01=OY08578  JBB2220  861231  PD16H5:  TCB AND SRB TIMING SUPPORT           
.*  $D5=DCR0228  HBB3310  870225  PD16Q9:  INCREASE LENGTH OF PSASTAK           
.*  $02=OY13900  HBB3310  880430  PD16H5:  HANDLE RECURSIVE TRACE               
.*                                         INTERRUPT AFTER A MACHINE            
.*                                         CHECK                                
.*  $LD=LOCKR    HBB4410  870901  PD16Q4:  LOCK RESTRUCTURE                     
.*  $LE=COUPL    HBB4410  880715  PD16Q4:  XCF LOCKS                            
.*  $LF=CLOCK    HBB4410  870901  PD16Q4:  ETR LOCK                             
.*  $LG=JUP03    HBB4410  880715  PD16Q4:  BMFLSD LOCK                          
.*  $03=OY27050  JBB3313  890403  PD16ES:  ENCRYPTION ASYMMETRIC                
.*                                         FEATURE SUPPORT                      
.*  $LH=CNITG    HBB4410  890501  PD16EI:  ADD FIELDS & UPDATE COMMENTS         
.*  $LI=SADEN    HBB4410  890515  PD16EI:  SUPPORT STANDALONE DUMP              
.*  $LJ=USERV    HBB4410  890626  PD16ES:  IOSULUT LOCK                         
.*  $LK=PR313    JBB3313  891128  PD16EI:  SHOWHDR format complete              
.*  $LL=SYSLK    HBB5510  890821  PD16ES:  SYSTEM LOCK MANAGER SUPPORT          
.*  $LM=SYSLK    HBB5510  900904  PD16EI:  SYSTEM LOCK MANAGER LOCK             
.*                                         CHANGES                              
.*  $04=OY46138  HBB4420  910731  PD162M:  Update external interrupt            
.*                                         masks                                
.*  $P5=PKB1712  HBB4430  920317  PD16IG:  Put conditional logic around         
.*                                         executable labels so they            
.*                                         can be picked up by PLASMAP          
.*  $P6=PIG0984  HBB5510  930115  PD16EJ:  Update users of PSATCLIN             
.*                                         (Comment Change Only)                
.*  $LN=DISPR    HBB5510  930501  PD16EJ:  Dispatcher Restructure               
.*  $LO=SUBSP    HBB5510  930520  PD16IW:  Subspaces                            
.*  $P7=PIG8019  HBB5510  930601  PY12AG:  New savearea for IEAVESC0            
.*  $P8=PIG8025  HBB5510  930601  PD16IW:  Define Schedule flags                
.*  $P9=PIG8038  HBB5510  930618  PD16IW:  Define PSAURDY                       
.*  $PA=PIG1904  HBB5510  930614  PD44BB:  Add IEAVTRG1 RTM hooks for           
.*                                         improved VICOM performance           
.*                                         when testing with traps              
.*  $LP=DISPR    HBB5510  930715  PD16IW:  Dispatcher Restructure               
.*                                         Redefine Schedule flags              
.*  $PB=PIG2718  HBB5510  930909  PD16IW:  Define PSAPCDNV                      
.*  $PC=PIG0689  HBB5510  930909  PD16IG:  Change PSACPUPA, PSACPULA,           
.*                                         and PSACPUSA from PTR(15)            
.*                                         to FIXED(15) since they can          
.*                                         can never exceed X'7FFF' and         
.*                                         this would save the compiler         
.*                                         from generating an extra N           
.*                                         instruction when the fields          
.*                                         are referenced.                      
.*  $05=OW02794  HBB5510  931207  PD162M:  IXLREQST lock indicator              
.*  $PD=PN70147  HBB5520  940210  PD162M:  SHOWHDR updates                      
.*  $LP=ENCLV    HBB5520  931109  PD16EI:  ENCLAVE Support                      
.*                                         Add PSAPRSRB                         
.*  $LQ=CAPT2    HBB5520  940414  PD16IW:  Captured Storage                     
.*  $PE=PN70694  HBB5520  940524  PD16XZ:  Prevent recursion into RSM           
.*                                         when LSIH has called                 
.*                                         IARPTEPR.                            
.*  $06=OW06260  HBB5510  940609  PD16EI:  add bits PSAMCHA, PSARSTA,           
.*                                         PSAEGRA, PSARTMA                     
.*                                         (TRSQ PTM # PIG5445)                 
.*  $LP=WLMPASM  HBB6603  951212  PD16FB:  WLM, Context Services Lock           
.*  $PF=PQC0926  HBB6603  960613  B7HG2M:  SHOWHDR update                       
.*  $LR=IEEESUP  HBB6606  970807  PD00XB:  PSADXC                               
.*  $LS=64BITSUP HBB7703  981204  PD00XB: z/Architecture                        
.*  $07=OW32802  HBB6606  980501  B7VBGD:  PSADIAGW                             
.*  $08=OW42226  HBB5510  991216  U2IAXZ:  PSAFPAC and PSAFPPE                  
.*                                         (Moved from LCCA.)                   
.*  $LT=PRSER    HBB7706  001015  B7HGH5:  SSD Serialization changes            
.*  $LU=CMSLATC  HBB7706  010515  B7VBGD:  CMS Latching lock                    
.*  $LV=LXREU    HBB7709  030801  PD00XB:  ASN-and-LX-Reuse Facility            
.*  $H3=IFA      HBB7709  031205  PD00XB:  PSAIFA                               
.*  $PG=PJK1544  HBB7709  040227  U2IAXZ:  Make PSALAA an interface.            
.*  $LW=WILDB    HBB7720  040303  PD00XB:  Breaking Event Address               
.*  $09=OA08433  HBB7709  040802  PD00XB:  Expand PSAGSAVH                      
.*  $PH=MExxxxx  HBB7720  041018  PD00XB:  Larger Facility List                 
.*  $PI=ME02847  HBB7720  050203  PD00XB:  STCKF                                
.*  $PJ=ME02954  HBB7720  050207  PD00H6:  Name reserved fields for             
.*                                         IEAVPPSA                             
.*  $PK=ME02251  HBB7720  041217  U2IAXZ:  PSAMCH                               
.*  $LX=ECT      HBB7730  050407  PD00XB:  FLCFECT                              
.*  $LY=AFFDISP  HBB7730  050501  PD00GD:  Affinity Dispatcher                  
.*  $H4=SUP      HBB7730  051201  PD00XB:  PSASUP                               
.*  $LZ=ME05881  HBB7730  060220  U2IAXZ:  Sense-running-status                 
.*  $0A=OA11783  HBB7720  060203  PD00HL:  Conditional SSKE                     
.*  $M0=DCRB165  HBB7740  060425  PD00I6:  CPOOL MultiHdr Support               
.*  $M1=GRSLOCK  HBB7740  060502  U2IAXZ:  GRSINT lock                          
.*  $M2=LARGEPG  HBB7740  060915  PD002D:  Large Page Support                   
.*  $H5=P001     HBB7740  070215  PD00XB:  P001                                 
.*  $PL=ME08890  HBB7720  041217  U2IAXZ:  PsaDontGetWeb                        
.*  $PM=ME09727  HBB7740  070319  PD00XB:  More FLCFACL bits                    
.*  $M3=ME10173  HBB7750  070508  PD00XB:  PSAECVT/PSAXCVT                      
.*  $0B=OA20922  HBB7740  070730  PD002C:  DAT updates                          
.*  $0C=OA20758  HBB7740  070701  PD00XB:  PSA_TIME_ON_CP                       
.*  $0E=OA20633  JBB772S  070501  PD00D0:  VCM                                  
.*  $M4=HIS      HBB7750  070830  PD00D0:  HIS FLCE bits                        
.*                                         Update PSACR0M1 and                  
.*                                         PSACR0M2 for CR0E_Default            
.*                                         change                               
.*  $PN=ME11619  HBB7750  071022  PD00D0:  Remove lowercase in PL/X.            
.*  $M5=MExxxxx  HBB7760  080401  PD00XB:  FlcFCAAI                             
.*  $M6=DDMINF   HBB7760  080324  U2IAXZ:  DDM locks                            
.*  $PO=ME13846  HBB7760  080624  PD00XB:  IHAPSA_READONLY                      
.*  $PP=ME15014  HBB7760  081223  PDHC:    FLCFAISI, FLCFAEN,                   
.*                                         FLCFAIS                              
.*  $PQ=ME15509  HBB7760  090210  PDKD:    Fast SETFRR address                  
.*  $PR=ME15560  HBB7760  090223  U2IAXZ   Make PSASVTX PI                      
.*  $M7=ME15840  HBB7770  090327  PD00KP:  SCLP function to PSA/PSAE            
.*  $0F=OA29838  HBB7770  091002  PD00KP:  Additional rollup.  Add PC           
.*                                         FLIH CPUT field                      
.*  $M8=RMODE64  HBB7780  091101  PD00XB:  RMODE 64                             
.*  $M9=SRMLOCK  HBB7780  091231  PD00KP:  SRMENQ lock                          
.*  $PS=ME17932  HBB7770  091211  PDKD:    Fast SETFRR stack                    
.*  $PT=ME18332  HBB7770  100202  PDKD:    Correct PSAFAFRR so that             
.*                                         it does not add alignment            
.*  $MA=WARNTRAK HBB7790  110801  PD00D0:  Warning Track                        
.*  $MB=ME23015  HBB7790  111117  PD00XB:  PSATX(C)                             
.*  $MC=TIMECICS HBB7790  120101  PD00XB:  Workunit Procclass at disp           
.*  $MD=ME24369  HBB7790  120505  PD00BS:  SMF30 Counter Section                
.*  $OH=OA40264  HBB7760  120829  PD00D0:  Mask of CR0.62-63                    
.*  $ME=ME24913  HBB7790  121101  PD00XB:  ME24913                              
.*  $MF=MExxxxx  HBB77A0  130430  PD00XB:  Remove MPL                           
.*  $MG=DYNEXITS HBB77A0  130430  PD00XB:  MISC lock                            
.*  $MH=ZZSIM2   HBB77A0  130709  PD00D0:  ZZSIM2 support                       
.*  $MI=RSMQ     HBB77A0  130901  PD00XB:  RSMQ                                 
.*  $MJ=IEASEM   HBB77A0  130901  PD00XB:  IEASEM/IEAS2M                        
.*  $MK=ZZSIM2   HBB77A0  131001  PD00XB:  ZZSIM2                               
.*  $ML=MLTPAUSE HBB77A0  131004  PD00KD:  SSDGROUP lock                        
.*  $MM=ME27871  HBB77A0  140627  PD00XB:  FLCFACLE                             
.*  $MO=ME28030  HBB77A0  140812  PD00XB:  &PSAE for data areas build           
.*  $0I=OA43366  HBB7790  131029  PD0AAA:  ZZSIM2 rollup                        
.*  $MP=FP1295   HBB77B0  151130  PD00CS: Lock diag table                       
.*  $MQ=GSF      HBB77B0  151210  PD00KD:  PSAGSF                               
.*  $MR=W126810  HBB77B0  160712  PD00KD:  PSAVAL                               
.*  $0J=OA48571  HBB77A0  160331  PD00JI:  HFTS support                         
.*  $0K=OA48571  HBB77A0  160331  PD00NJ:  PSADiag560                           
.*  $MS=HOTCACHE HBB77B0  170227  PD00CH:  Hot cache line handling              
.*  $MT=zCBP     HBB77C0  170825  PD00NJ:  zCBP                                 
.*  $PU=WI241808 HBB77C0  180315  PD00D0:  Suppress PSAzCBPDS for PLS           
.*  $MU=W248346  HBB77C0  180418  PD00XB:  Master ASTE real address             
.*  $0L=OA54807  HBB77A0  180501  PD00XB:  No more PSASTAK                      
.*  $MV=W362826  HBB77D0  200302  PD00H6:  TBVTs backed above 2GB               
.*  $MW=W368386  HBB77D0  200326  PD00H6:  Delete PSATCLIN PSAINTIN             
.*                                                PSAIPCIN PSAEMS25             
.*  $MX=W380890  HBB77D0  200711  PD00H6:  Delete PSARTM1R                      
.*  $MY=PJR8     HBB77D0  210108  PD00XB:  PSAXAD                               
.*  $0M=OA61395  HBB77C0  211001  PD00XB:  CRYPCTRS                             
.*Caution: Update IEAVPPSA upon adding fields to first 4K of PSA                
.*                                                                              
.**********************************************************************         
.*                                                                              
.**********************************************************************         
.*                                                                              
.* THE FOLLOWING ARE THE NAMING CONVENTIONS USED FOR RESERVED AREAS             
.*     1. NO RESERVED FIELDS ARE NAMED THAT HAVE OFFSETS LESS THAN              
.*        X'200'. THIS AREA IS GENERALLY USED BY THE HARDWARE.                  
.*     2. NO RESERVED FIELD IS NAMED THAT IS LESS THAN 4 BYTES IN               
.*        LENGTH. IF THESE FIELDS ARE CHANGED FROM RESERVED STATUS              
.*        THE SERIALIZATION USED TO UPDATE THE FIELD SHOULD BE                  
.*        CONSIDERED.                                                           
.*     3. RESERVED FIELDS ARE NAMED AS FOLLOWS                                  
.*                        PSARVXXX DC    XLNNN'00' -  RESERVED                  
.*                             XXX IS THE OFFSET WITHIN THE PSA                 
.*                             NNN IS THE LENGTH OF THE RESERVED FIELD          
.*                                 A VALUE FROM 4 TO 256 INCLUSIVE              
.*                                                                              
.* THE FOLLOWING ARE INITIALIZATION CONVENTIONS:               @ZMC3284         
.*     1. ASSIGNED FIELDS FROM 600 HEX TO C00 HEX WHICH ARE    @ZMC3284         
.*        NOT INITIALIZED TO A NON-ZERO VALUE WILL BE SET      @ZMC3284         
.*        TO X'FF'. UNUSED RESERVED FIELDS WILL BE INITIALIZED @ZMC3284         
.*        TO X'00'.                                            @ZMC3284         
.*        THIS AREA IS OFTEN USED AS A PATCH AREA. THIS WILL   @ZMC3284         
.*        CAUSE A VERIFY STMT DURING PATCH APPLICATION TO      @ZMC3284         
.*        FAIL THUS PREVENTING PATCHES BEING APPLIED IN AREAS  @ZMC3284         
.*        USED DURING SYSTEM EXECUTION.                        @ZMC3284         
.*     2. THE CONVENTION USED IS AS FOLLOWS                    @ZMC3284         
.*        A) FOR FIELDS OF TYPE F OR H                         @ZMC3284         
.*                        PSANNNN DC     F'-1'                 @ZMC3284         
.*                           NNNN IS THE FIELD NAME            @ZMC3284         
.*        B) FOR FIELDS OF TYPE X, C, OR D                     @ZMC3284         
.*                                 ORG   AAA                   @ZMC3284         
.*                        PSAFFXXX DC    (L'AAA)X'FF' - FOXES  @ZMC3284         
.*                             XXX IS THE OFFSET WITHIN THE PSA@ZMC3284         
.*                             AAA IS THE FIELD NAME WHICH IS  @ZMC3284         
.*                                 BEING INITIALIZED TO X'FF'  @ZMC3284         
.*                                                                              
.* THE FOLLOWING MUST BE CONSIDERED WHEN ASSIGNING AREAS WITHIN THE PSA         
.*     1. THE FIRST 2K IS NON FETCH PROTECTED 0 TO 7FF HEX                      
.*        THE SECOND 2K IS FETCH PROTECTED 800 TO FFF HEX                       
.*     2. ACR WILL SAVE AND RESTORE PARTS OF THE PSA AS FOLLOWS                 
.*         A. 0 TO 200 HEX ACR SELECTIVELY SAVES SECTIONS                       
.*         B. PSAPSA TO PSAUSEND SAVES ALL OF THIS NON FETCH PROTECTED          
.*                               SECTION                                        
.*         C. PSAUS2ST TO PSAUS2ND SAVES ALL OF THIS FETCH PROTECTED            
.*                                 SECTION                                      
.*         D. PSASTAK SAVES ALL OF THIS FETCH PROTECTED SECTION                 
.*     3. WHEN FIELDS BETWEEN 600 HEX AND C00 HEX ARE MODIFIED @ZMC3284         
.*        THE INITIALIZATION OF THE FIELDS MUST BE CONSIDERED  @ZMC3284         
.*        AS EXPLAINED ABOVE IN INITIALIZATION CONVENTIONS.    @ZMC3284         
.*                                                                              
.**********************************************************************         
.* THE FOLLOWING HAS BEEN ADDED TO SUPPORT STANDALONE DUMP:                     
.*     1. PSARSVTE WILL BE MAPPED ON PSARSVT                                    
.*        UNLESS %PSAQUALIF IS SET TO SOME OTHER VALUE                          
.*        BEFORE INCLUDE FOR MACRO.                                             
.**********************************************************************         
         PUSH  PRINT,USING                                     @G860PXK         
         AIF   ('&LIST' EQ 'YES').PSA01                                         
         PRINT OFF                                                              
.PSA01   ANOP                                                                   
         SPACE 1                                                                
         AIF   ('&DSECT' EQ 'NO').PSA0010                                       
         USING PSA,0                                           @G860PXK         
PSA      DSECT                                                                  
         AGO   .PSA0020                                                         
.PSA0010 ANOP                                                                   
IEAVFX00 CSECT                                                                  
         ENTRY IEATCBP                                         @G860PXK         
         DS    0D                                                               
PSA      EQU   *                                                                
         USING PSA,0                                                            
.PSA0020 ANOP                                                                   
FLC      EQU   *                                                                
FLCIPPSW DS    0CL8 -         IPL PSW                                           
FLCRNPSW DC    XL4'040E0000' -RESTART NEW PSW (AFTER IPL)        MDC001         
         AIF   ('&DSECT' EQ 'YES').PSA0021                     @G860PXK         
         EXTRN IEAVRSTR                                        @G860PXK         
         DC    A(X'80000000'+IEAVRSTR) - SECOND HALF OF RESTART                 
*                                        NEW PSW               @G860PXK         
         AGO   .PSA0022                                        @G860PXK         
.PSA0021 ANOP                                                  @G860PXK         
         DC    V(IEAVRSTR) -  SECOND HALF OF RESTART NEW PSW     MDC128         
.PSA0022 ANOP                                                  @G860PXK         
IPLPSW   EQU   FLCIPPSW --- ALIAS                                               
FLCICCW1 DS    0CL8 -         IPL CCW1                                          
FLCROPSW DC    XL8'00' -      RESTART OLD PSW (AFTER IPL)                       
FLCICCW2 DS    0CL8 -         IPL CCW2                                          
FLCCVT   DC    V(IEACVT) -    ADDRESS OF CVT (AFTER IPL).      @G50EP9A         
         DC    XL4'00' -      RESERVED (AFTER IPL)  (MDC431)   @ZM48214         
FLCEOPSW DC    XL8'00' -      EXTERNAL OLD PSW                                  
EXOPSW   EQU   FLCEOPSW --- ALIAS                                               
FLCSOPSW DC    XL8'00' -      SVC OLD PSW.  THIS OFFSET FIXED BY                
*                             ARCHITECTURE.  (MDC451)          @G50EP9A         
SVCOPSW  EQU   FLCSOPSW --- ALIAS                                               
FLCPOPSW DC    XL8'00' -      PROGRAM CHECK OLD PSW                             
PIOPSW   EQU   FLCPOPSW --- ALIAS                                               
FLCMOPSW DC    XL8'00' -      MACHINE CHECK OLD PSW                             
MCOPSW   EQU   FLCMOPSW --- ALIAS                                               
FLCIOPSW DC    XL8'00' -      INPUT/OUTPUT OLD PSW                              
IOOPSW   EQU   FLCIOPSW --- ALIAS                                               
         DC    XL8'00' -      RESERVED                         @G860PXK         
FLCCVT64 DS    0D      -      8-byte CVT address                   @H3A         
         DC    XL4'00' -      1st 4 bytes are 0                    @H3A         
FLCCVT2  DC    V(IEACVT) -    ADDRESS OF CVT - USED BY DUMP                     
*                             ROUTINES                           ICB319         
         DC    XL4'00' -      RESERVED                         @G860PXH         
         DC    XL4'00' -      RESERVED - FLCTRACE DELETED DUE TO                
*                             SYSTEM TRACE REDESIGN.           @G860PXK         
FLCENPSW DC    XL4'040C0000' -EXTERNAL NEW PSW                                  
         AIF   ('&DSECT' EQ 'YES').PSA0023                     @G860PXK         
         EXTRN IEAQEX00                                        @G860PXK         
         DC    A(X'80000000'+IEAQEX00) - SECOND HALF OF EXTERNAL                
*                                        NEW PSW               @G860PXK         
         AGO   .PSA0024                                        @G860PXK         
.PSA0023 ANOP                                                  @G860PXK         
         DC    V(IEAQEX00) -  SECOND HALF OF EXTERNAL NEW PSW                   
.PSA0024 ANOP                                                  @G860PXK         
EXNPSW   EQU   FLCENPSW --- ALIAS                                               
FLCSNPSW DC    XL4'040C0000' -SVC NEW PSW                                       
         AIF   ('&DSECT' EQ 'YES').PSA0025                     @G860PXH         
         WXTRN IEAQSC00                                        @G860PXH         
         DC    A(X'80000000'+IEAQSC00) - SECOND HALF OF SVC                     
*                                        NEW PSW               @G860PXH         
         AGO   .PSA0027                                        @G860PXH         
.PSA0025 ANOP                                                  @G860PXH         
         DC    V(IEAQSC00) -  SECOND HALF OF SVC NEW PSW                        
.PSA0027 ANOP                                                  @G860PXH         
SVCNPSW  EQU   FLCSNPSW --- ALIAS                                               
FLCPNPSW DC    XL4'000A0000' - PROGRAM CHECK NEW PSW, DISABLED FOR @02C         
*                              MACHINE CHECKS.                                  
         AIF   ('&DSECT' EQ 'YES').PSA0030                     @G860PVB         
         WXTRN IEAQPK00                                            @LSC         
         DC    A(X'80000000'+IEAQPK00) - SECOND HALF OF PROGRAM CHECK           
*                                        NEW PSW               @G860PVB         
         AGO   .PSA0040                                        @G860PVB         
.PSA0030 ANOP                                                                   
         DC    V(IEAQPK00) -  SECOND HALF OF PROGRAM CHECK NEW PSW              
.PSA0040 ANOP                                                                   
PINPSW   EQU   FLCPNPSW --- ALIAS                                               
FLCMNPSW DC    XL4'00080000' -MACHINE CHECK NEW PSW              MDC003         
         AIF   ('&DSECT' EQ 'YES').PSA0050                     @G860PVB         
         EXTRN IGFPMAIN                                        @G860PVB         
         DC    A(X'80000000'+IGFPMAIN) - SECOND HALF OF MACHINE CHECK           
*                                        NEW PSW               @G860PVB         
         AGO   .PSA0060                                        @G860PVB         
.PSA0050 ANOP                                                  @G860PVB         
         DC    V(IGFPMAIN) -  SECOND HALF OF MACHINE CHECK NEW PSW              
*                                                              @G860PVB         
.PSA0060 ANOP                                                  @G860PVB         
MCNPSW   EQU   FLCMNPSW --- ALIAS                                               
FLCINPSW DC    XL4'040C0000' -INPUT/OUTPUT NEW PSW                              
         AIF   ('&DSECT' EQ 'YES').PSA0070                     @G860PVB         
         EXTRN IEAQIO00 -                                      @G860PVB         
         DC    A(X'80000000'+IEAQIO00) - SECOND HALF OF I/O NEW PSW             
*                                                              @G860PVB         
         AGO   .PSA0080                                        @G860PVB         
.PSA0070 ANOP                                                  @G860PVB         
         DC    V(IEAQIO00) -  SECOND HALF OF I/O NEW PSW                        
.PSA0080 ANOP                                                  @G860PVB         
IONPSW   EQU   FLCINPSW --- ALIAS                                               
PSAEPARM DC    F'0' -         EXTERNAL INTERRUPTION PARAMETER  @G871A9A         
*                             FIELD.                  (MDC473) @G871A9A         
PSAEEPSW DS    0F -           EXTENDED PSW DATA STORED ON EXTERNAL              
*                             INTERRUPT                          MDC084         
PSASPAD  DC    H'0' -         ISSUING PROCESSOR'S PHYSICAL ADDRESS              
*                             ON MFA, EMS, OR EXTERNAL CALL INTERRUPT           
*                                                                MDC046         
FLCEICOD DC    H'0' -         EXTERNAL INTERRUPTION CODE                        
EXCODE   EQU   FLCEICOD --- ALIAS                                               
PSAESPSW DS    0F -           EXTENDED PSW DATA STORED ON SVC                   
*                             INTERRUPT                          MDC085         
         DC    XL1'00' -      RESERVED - SET TO ZERO                            
FLCSVILC DC    FL1'0' -       SVC INSTRUCTION LENGTH COUNTER - NUMBER           
*                             OF BYTES.  THIS OFFSET FIXED BY                   
*                             ARCHITECTURE.  (MDC454)          @G50EP9A         
FLCSILCB EQU   X'07' -        SIGNIFICANT BITS IN ILC FIELD - LAST              
*                             BIT IS ALWAYS ZERO                 MDC080         
SVCILC   EQU   FLCSVILC --- ALIAS                                               
FLCSVCN  DC    H'0' -         SVC INTERRUPTION CODE - SVC NUMBER.               
*                             THIS OFFSET FIXED BY ARCHITECTURE.                
*                             (MDC455)                         @G50EP9A         
SVCNUM   EQU   FLCSVCN --- ALIAS                                                
PSAEPPSW DS    0CL8 -         EXTENDED PSW FOR PROGRAM INTERRUPT MDC086         
         DC    XL1'00' -      RESERVED - SET TO ZERO                            
FLCPIILC DC    FL1'0' -       PROGRAM INTERRUPT LENGTH COUNTER - NUMBER         
*                             OF BYTES IN INSTRUCTION CAUSING PROGRAM           
*                             INTERRUPTION.  THIS OFFSET FIXED BY               
*                             ARCHITECTURE.  (MDC456)          @G50EP9A         
FLCPILCB EQU   X'07' -        SIGNIFICANT BITS IN ILC FIELD - LAST              
*                             BIT IS ALWAYS ZERO                 MDC083         
PIILC    EQU   FLCPIILC --- ALIAS                                               
FLCPICOD DS    0H -           PROGRAM INTERRUPTION CODE                         
PICODE   EQU   FLCPICOD --- ALIAS                                               
PSAEECOD DC    FL1'0' -       EXCEPTION-EXTENSION CODE.            @03C         
PSAPICOD DC    FL1'0' -       8-BIT INTERRUPT CODE.  THIS OFFSET FIXED          
*                             BY ARCHITECTURE.  (MDC457)       @G50EP9A         
PSAPIPER EQU   X'80' -        PER INTERRUPT OCCURRED             MDC089         
PSAPIMC  EQU   X'40' -        MONITOR CALL INTERRUPT OCCURRED    MDC090         
PSAPIPC  EQU   X'3F' -        AN UNSOLICITED PROGRAM CHECK HAS                  
*                             OCCURRED IF ANY OF THESE 6 BITS ARE               
*                             ON                                 MDC091         
FLCTEA   DS    0F      -      TRANSLATION EXCEPTION ADDRESS.  THIS @L8C         
*                             OFFSET FIXED BY ARCHITECTURE.                     
         DC    XL3'00' -                                           @L8A         
FLCTEAXM EQU   X'80'   -      IF 0 FLCTEA IS RELATIVE TO THE PRIMARY            
*                                  SEGMENT TABLE                                
*                             IF 1 FLCTEA IS RELATIVE TO THE SECONDARY          
*                                  SEGMENT TABLE               @G860PXK         
FLCDXC   DC   0XL1'00' -      Data exception code for PI 7         @LRA         
FLCTEAB3 DC    XL1'00' -      LAST BYTE OF TEA.                    @L8A         
FLCSOPI  EQU   X'04'   -      Suppression on protection flag       @LQA         
FLCTSTDP EQU   X'00'   -      IF 1, THE PRIMARY STD WAS USED.      @L8A         
FLCTSTDA EQU   X'01'   -      IF 1, THE STD WAS AR QUALIFIED.      @L8A         
FLCTSTDS EQU   X'02'   -      IF 1, THE SECONDARY STD WAS USED.    @L8A         
FLCTSTDH EQU   X'03'   -      IF 1, THE HOME STD WAS USED.         @L8A         
FLCTEACL EQU   X'7FFFF000'    Mask to leave only TEA address       @LSA         
         DC    XL1'00' -      RESERVED - SET TO ZERO                            
FLCMCNUM DC    XL1'00' -      MONITOR CLASS NUMBER                              
FLCPERCD DC    XL1'00' -      PROGRAM EVENT RECORDING CODE                      
FLCATMID DC    XL1'00' -      ATM ID                               @LSA         
FLCPSWB4 EQU   X'80'          PSW.4 part of ATMID                  @LSA         
FLCPER   DC    A(0) -         PER ADDRESS - ESA/390            @G860PXK         
         DC    XL1'00' -      RESERVED - SET TO ZERO                            
FLCMTRCD DC    XL3'00' -      MONITOR CODE (ESA/390)                            
FLCTEARN DC    XL1'00' -      CONTAINS THE ACCESS REGISTER NUMBER  @L8C         
*                             INVOLVED IN THE TRANSLATION EXCEPTION             
*                             IF BITS 30-31 OF THE TEA='01'.                    
FLCPERRN DC    XL1'00' -      CONTAINS THE PER STORAGE ACCESS      @L8A         
*                             REGISTER NUMBER.                                  
         DC    XL1'00' -      RESERVED.                            @LSC         
FLCARCH  DC    XL1'00' -      Architecture information             @LSA         
PSAZARCH EQU   X'01'   -      z/Architecture                       @LSA         
PSAESAME EQU   X'01'   -      z/Architecture                       @LSA         
PSAMPL   DC    XL4'00' -      Used only prior to z/Architecture    @MFC         
         DS    0XL344 -       MACHINE CHECK LOGOUT AREA        @G860PVB         
         DC    XL16'00' -     RESERVED (ESA/390)               @G860PVB         
FLCIOCDP DS    0XL8 -         I/O INFORMATION CODE             @G860PVB         
FLCSID   DC    XL4'00' -      SUBSYSTEM ID                     @G860PVB         
FLCIOFP  DC    XL4'00' -      I/O INTERRUPTION PARAMETER       @G860PVB         
         DC    XL8'00'  -     RESERVED                             @LRC         
FLCFACL  DC   0XL16'00' -     Facilities List. See FaclBytes0To15      *        
                              in IHAFACL for description           @PHC         
FLCFACL0 DC    X'00'          Byte 0 of FLCFACL                    @LVA         
FLCFN3   EQU   X'80'    -     N3 installed                         @LVA         
FLCFZARI EQU   X'40'    -     z/Architecture installed             @LVA         
FLCFZARA EQU   X'20'    -     z/Architecture active                @LVA         
FLCFASLX EQU   X'02'    -     ASN & LX reuse facility installed    @LVA         
FLCFACL1 DC    X'00'          Byte 1 of FLCFACL                    @LVA         
FLCFEDAT EQU   X'80'          DAT features                         @0BA         
FLCFSRS  EQU   X'40'          Sense-running-status                 @LZA         
FLCFSSKE EQU   X'20'          Cond. SSKE instruction installed     @0AA         
FLCFCTOP EQU   X'10'          STSI-enhancement                     @LYA         
FLCFACL2 DC    X'00'          Byte 2 of FLCFACL                    @LVA         
FLCFETF2 EQU   X'80'          Extended Translation facility 2      @LVA         
FLCFCRYA EQU   X'40'          Cryptographic assist                 @LVA         
FLCFLD   EQU   X'20'          Long Displacement facility           @LVA         
FLCFLDHP EQU   X'10'          Long Displacement High Performance   @LVA         
FLCFHMAS EQU   X'08'          HFP Multiply Add/Subtract            @LVA         
FLCFEIMM EQU   X'04'          Extended immediate when z/Arch       @LVA         
FLCFETF3 EQU   X'02'          Extended Translation Facility 3 when @LVA         
*                             z/Arch                               @LVA         
FLCFHUN  EQU   X'01'          HFP unnormalized extension           @LVA         
FLCFACL3 DC    X'00'          Byte 3 of FLCFACL                    @LVA         
FLCFET2E EQU   X'80'          ETF2-enhancement                   031215         
FLCFSTKF EQU   X'40'          STCKF-enhancement                    @PIA         
FLCFET3E EQU   X'02'          ETF3-enhancement                   040512         
FLCFECT  EQU   X'01'          ECT-facility                         @LXA         
FLCFACL4 DC    X'00'          Byte 4 of FLCFACL                    @PHA         
FLCFCSSF EQU   X'80'          Compare-and-swap-and-store           @LXA         
FLCFCSF2 EQU   X'40'          Compare-and-swap-and-store 2         @LXA         
FLCFGIEF EQU   X'20'          General-Instructions-Extension       @M0A         
*                             Facility                             @M0A         
FLCFOCM  EQU   X'01'          Obsolete CPU-measurement facility. Use   X        
                              FLCFCMC and FLCFCMS instead.         @M4A         
FLCFACL5 DC    X'00'          Byte 5 of FLCFACL                    @PHA         
FLCFFPSE EQU   X'40'          Floating-point-support enhancement   @PMA         
FLCFDFP  EQU   X'20'          Decimal-floating-point               @PMA         
FLCFDFPH EQU   X'10'          Decimal-floating-point high performance  *        
                                                                   @PMA         
FLCFPFPO EQU   X'08'          PFPO instruction                   070424         
FLCFACL6 DC    X'00'          Byte 6 of FLCFACL                    @PHA         
FLCFACL7 DC    X'00'          Byte 7 of FLCFACL                    @PHA         
FLCFACL8 DC    X'00'          Byte 8 of FLCFACL                    @M4A         
FLCFCAAI EQU   X'40'          Crypto AP-Queue adapter interruption @M5A         
FLCFCMC  EQU   X'10'          CPU-measurement counter facility     @M4A         
FLCFCMS  EQU   X'08'          CPU-measurement sampling facility    @M4A         
FLCFSCLP EQU   X'04'          Possible future enhancement          @M7A         
FLCFAISI EQU   X'02'          AISI facility                        @PPA         
FLCFAEN  EQU   X'01'          AEN  facility                        @PPA         
FLCFACL9 DC    X'00'          Byte 9 of FLCFACL                    @PPA         
FLCFAIS  EQU   X'80'          AIS  facility                        @PPA         
* IHAPSAE FLCEFacilitiesList will have any future bit definitions. @M7A         
         DC    XL6'00' -      RESERVED                             @PPC         
FLCFACLE DC    XL16'00' -     Facilities List bytes 16-31. See     @MMA         
*                             FaclBytes16To31 in IHAFACL for                    
*                             description                                       
FLCMCIC  DC    XL8'00' -      MACHINE-CHECK INTERRUPTION CODE  @G860PVB         
         DC    XL8'00' -      RESERVED - SET TO ZERO           @ZMC2173         
FLCFSA   DC    A(0) -         FAILING STORAGE ADDRESS          @G860PXK         
         DC    XL4'00' -      RESERVED - SET TO ZERO           @G860PXK         
FLCFLA   DC    XL16'00' -     FIXED LOGOUT AREA. SIZE FIXED BY     @L9C         
*                             ARCHITECTURE.                                     
FLCRV110 DC    XL16'00' -     RESERVED.                            @L9A         
FLCARSAV DC    16F'0'   -     ACCESS REGISTER SAVE AREA            @L9A         
FLCFPSAV DC    XL32'00' -     FLOATING POINT REGISTER SAVE AREA                 
FLCGRSAV DC    16F'0' -       GENERAL REGISTER SAVE AREA                        
FLCCRSAV DC    16F'0' -       CONTROL REGISTER SAVE AREA                        
FLCHDEND DS    0D -           END OF HARDWARE ASSIGNMENTS                       
*                                                                               
PSAPSA   DC    CL4'PSA ' -    CONTROL BLOCK ACRONYM IN EBCDIC                   
PSACPUPA DC    H'0' -         PHYSICAL CPU ADDRESS (CHANGED DURING ACR)         
*                             (MDC130)                           YM3489         
PSACPULA DC    H'0' -         LOGICAL CPU ADDRESS                               
PSAPCCAV DC    A(0) -         VIRTUAL ADDRESS OF PCCA                           
PSAPCCAR DC    A(0) -         REAL ADDRESS OF PCCA                              
PSALCCAV DC    A(0) -         VIRTUAL ADDRESS OF LCCA                           
PSALCCAR DC    A(0) -         REAL ADDRESS OF LCCA                              
PSATNEW  DC    A(0) -         TCB pointer. Field maintained for code            
*                             compatability with previous MVS                   
*                             releases. DO NOT USE.                @LQC         
IEATCBP  EQU   PSATNEW -      ALIAS                                             
PSATOLD  DC    A(0) -         Pointer to current TCB or zero if in SRB          
*                             mode.                           e    @LQC         
PSAANEW  DC    V(IEAMASCB)    ASCB pointer.  Field maintained for code          
*                             compatability with previous MVS                   
*                             releases. DO NOT USE.                @LQC         
PSAAOLD  DC    A(0) -         Pointer to the home (current) ASCB.  @LQC         
PSASUPER DS    0BL4 -         SUPERVISOR CONTROL WORD.         @G50EP9A         
PSASUP1  DC    XL1'00' -      FIRST BYTE OF PSASUPER                            
PSAIO    EQU   X'80' -        I/O FLIH                                          
PSASVC   EQU   X'40' -        SVC FLIH                                          
PSAEXT   EQU   X'20' -        EXTERNAL FLIH                                     
PSAPI    EQU   X'10' -        PROGRAM CHECK FLIH                                
PSALOCK  EQU   X'08' -        LOCK ROUTINE                                      
PSADISP  EQU   X'04' -        DISPATCHER                                        
PSATCTL  EQU   X'02' -        TCTL RECOVERY FLAG  (MDC310)     @Z40FP9A         
PSATYPE6 EQU   X'01' -        TYPE 6 SVC IN CONTROL  (MDC311)  @Z40FP9A         
PSASUP2  DC    XL1'00' -      SECOND BYTE OF PSASUPER                           
PSAIPCRI EQU   X'80' -        REMOTE IMMEDIATE SIGNAL SERVICE ROUTINE           
*                             (IEAVERI)                        @G860PXK         
PSASVCR  EQU   X'40' -        SUPER FRR USES FOR SVC FLIH      @ZMC3227         
*                             RECURSION TRACKING               @ZMC3227         
PSASVCRR EQU   X'20' -        SVC RECOVERY RECURSION INDICATOR.                 
*                             OWNER: SUPERVISOR CONTROL.                        
*                             SERIALIZATION: DISABLEMENT.          @L6A         
PSAACR   EQU   X'04' -        AUTOMATIC CPU RECONFIGURATION (ACR) IN            
*                             CONTROL                            MDC119         
PSARTM   EQU   X'02' -        RECOVERY TERMINATION MONITOR (RTM) IN             
*                             CONTROL                            MDC120         
PSALCR   EQU   X'01' -        USED BY RTM TO SERIALIZE CALLS OF    @L5C         
*                             THE SUPERIVSOR ANALYSIS ROUTER       @L5A         
PSASUP3  DC    XL1'00' -      THIRD BYTE OF PSASUPER                            
PSAIOSUP EQU   X'80' -        IF ON, A MAINLINE IOS COMPONENT SUCH AS           
*                             CHANNEL SCHEDULER HAS ENTERED A                   
*                             PHYSICALLY DISABLED STATE WITHOUT REGARD          
*                             TO LOCKING REQUIREMENTS            MDC027         
PSASPR   EQU   X'10' -        SUPER FRR IS ACTIVE  (MDC305)    @ZA02995         
PSAESTA  EQU   X'08' -        SVC 60 RECOVERY ROUTINE ACTIVE                    
*                             (MDC312)                         @G50DP9A         
PSARSM   EQU   X'04' -        REAL STORAGE MANAGER (RSM) ENTERED FOR            
*                             PAGE FIX  (MDC321)               @G50DP9A         
PSAULCMS EQU   X'02' -        LOCK MANAGER UNCONDITIONAL LOCAL OR               
*                             CMS LOCK ROUTINES (MDC469)       @ZA28594         
PSASLIP  EQU   X'01' -        IEAVTSLP RECURSION CONTROL BIT                    
*                             (MDC471)                         @G65RP9A         
PSASUP4  DC    XL1'00' -      FOURTH BYTE OF PSASUPER                           
PSALDWT  EQU   X'80' -        BLWLDWT IS IN CONTROL TO LOAD A      @LHC         
*                             RESTARTABLE OR NON-RESTARTABLE WAIT               
*                             STATE CODE                                        
*                             OWNERSHIP: LDWT                                   
PSASMF   EQU   X'40' -        SMF SUSPEND/RESET     (MDC599)   @G743PBB         
PSAESAR  EQU   X'20' -        SUPERVISOR ANALYSIS ROUTER IS ACTIVE @L5C         
PSAMCH   EQU   X'10' -        Machine Check Handler is active.     @PKA         
PSARV22C DC    XL09'00' -     RESERVED                             @MWC         
PSA_WorkUnit_CBF_AtDisp DC XL2'00'                                 @MHA         
PSARV237 DC    XL1'00'  -     RESERVED                             @MKC         
PSA_WorkUnit_ProcClassAtDisp DC XL2'00' -                          @MCA         
             ORG PSA_WorkUnit_ProcClassAtDisp                      @MCA         
PSA_WorkUnit_ProcClassAtDisp_Byte0 DS X                            @MCA         
PSA_WorkUnit_ProcClassAtDisp_Byte1 DS X                            @MCA         
PSAProcClass DC XL2'00' -     PROCESSOR WUQ Offset.                             
             ORG PSAProcClass                                      @H5A         
PSA_ByLPAR_ProcClass DC XL2'00' - PROCESSOR WUQ Offset.            @H5A         
             ORG PSAProcClass                                                   
PSAProcClass_Byte0 DS  X                                           @H4A         
PSAProcClass_Byte1 DS  X                                           @H4A         
*                             This field is for IBM use only.                   
*                             OWNERSHIP: SUPERVISOR CONTROL                     
*                             SERIALIZATION: READ = NONE                        
*                                            WRITE = NO WRITE ALLOWED           
*                             See PSAProcClass_xxx                              
*                             constants.                           @H4A         
PSAProcClass_CP   EQU X'0000' Standard CP. 0 is offset to SWUQ     @H4A         
PSAProcClass_zCBP EQU X'0002' zCBP.                                @MTA         
PSAProcClass_zAAP EQU X'0002' zAAP.                                @H4A         
PSAProcClass_zIIP EQU X'0004' zIIP.                                @H5A         
PSAProcClass_SUP EQU X'0004'  zIIP.                                @H4A         
PSAProcClassIndex_CP   EQU 0  CP ProcClass index                   @0JA         
PSAProcClassIndex_zCBP EQU 1  zCBP ProcClass index                 @MTA         
PSAProcClassIndex_zAAP EQU 1  zAAP ProcClass index                 @0JA         
PSAProcClassIndex_zIIP EQU 2  zIIP ProcClass index                 @0JA         
PSAProcClassIndex_Max  EQU 2  Max ProcClass index                  @0JA         
PSAProcClassConverter EQU 2   Procclass conversion factor          @0EA         
PSAMaxProcClass       EQU 4   PSA Max procclass                    @0EA         
PSAMaxProcClassIndex  EQU PSAMaxProcClass/PSAProcClassConverter        X        
                              Maximum ProcClass index.  A ProcClass    X        
                              beings at 0 and ends at this number.     X        
                              Currently:                               X        
                              Index 0 - CP   ProcClassIndex            X        
                              Index 1 - zCBP or zAAP ProcClassIndex    X        
                              Index 2 - zIIP ProcClassIndex        @MTC         
             ORG PSAProcClass                                      @H5A         
PSA_ByLPAR_ProcClass_Byte0 DS X                                    @H5A         
PSA_ByLPAR_ProcClass_Byte1 DS X                                    @H5A         
PSAPTYPE DC    XL1'00' -      PROCESSOR TYPE INDICATOR             @H1A         
*                             OWNERSHIP: SUPERVISOR CONTROL                     
*                             SERIALIZATION: READ = NONE                        
*                                            WRITE = DISABLEMENT.               
PSAIFA   EQU   X'40'          Indicates Special Processor          @H3C         
PSA_BYLPAR_zCBP EQU X'40'                                          @MTA         
PSA_BYLPAR_zAAP EQU X'40'                                          @H5A         
PSA_BYLPAR_IFA EQU X'40'                                           @H5A         
PSAzCBPDS EQU  X'20'          zCBP that is different speed than CP @MTA         
PSAIFADS EQU   X'20'          zAAP (IFA) that is different                      
*                             speed than CP                        @H4A         
PSADSCRP EQU   X'10'          Discretionary Processor              @LYA         
PSAzIIP  EQU   X'08'          zIIP                                 @H4A         
PSA_BYLPAR_zIIP EQU X'08'                                          @H5A         
PSASUP   EQU   X'08'          zIIP                                 @H4A         
PSA_BYLPAR_SUP EQU X'08'                                           @H5A         
PSAzIIPDS EQU  X'04'          zIIP that is different speed than CP @H4A         
PSASUPDS EQU   X'04'          zIIP that is different speed than CP @H4A         
PSAILS   DC    XL1'00' -      INTERRUPT HANDLER LINKAGE STACK      @L9C         
*                             INDICATORS.                                       
PSAILSIO EQU   X'80'   -      THE I/O FLIH IS USING THE            @L9A         
*                             INTERRUPT HANDLER LINKAGE STACK.                  
PSAILSEX EQU   X'40'   -      THE EXTERNAL FLIH IS USING THE       @L9A         
*                             INTERRUPT HANDLER LINKAGE STACK.                  
PSAILSPC EQU   X'20'   -      THE PROGRAM FLIH IS USING THE        @L9A         
*                             INTERRUPT HANDLER LINKAGE STACK.                  
PSAILSDS EQU   X'10'   -      THE DISPATCHER IS USING THE          @L9A         
*                             INTERRUPT HANDLER LINKAGE STACK.                  
PSAILSRS EQU   X'08'   -      THE RESTART FLIH IS USING THE        @L9A         
*                             INTERRUPT HANDLER LINKAGE STACK.                  
PSAILSOR EQU   X'04'   -      EXIT IS USING THE INTERRUPT HANDLER  @LAA         
*                             LINKAGE STACK.                                    
PSAILST6 EQU   X'02'   -      TYPE 6 SVC IS USING THE INTERRUPT    @D2A         
*                             HANDLER LINKAGE STACK.                            
PSAILSLK EQU   X'01'   -      THE INTERRUPT HANDLER LINKAGE STACK  @D4A         
*                             IS ACTIVE BECAUSE THE RSM LOCK OR                 
*                             A LOCK HIGHER THAN THE RSM LOCK IS HELD.          
PSALSVCI DC    XL2'00' -      LAST SVC ISSUED ON THIS PROCESSOR    @L6A         
*                             PRIOR TO ENABLEMENT BY THE SVC FLIH.              
*                             OWNERSHIP: SUPERVISOR CONTROL                     
*                             SERIALIZATION: DISABLEMENT                        
PSAFLAGS DC    XL1'00' -      SYSTEM FLAGS                         @LOA         
*                             This field is PI for bits            @MBA         
*                             PSATX and PSATXC only                @MBA         
*                             OWNERSHIP: SUPERVISOR CONTROL                     
*                             SERIALIZATION: DISABLEMENT                        
*                             SERIALIZATION: None for PI bits      @MBA         
PSAAEIT  EQU   X'80'   -      ADDRESSING ENVIRONMENT IS IN         @LOA         
*                             TRANSITION. INDICATES THAT THE SPACE TYPE         
*                             (ADDRESS SPACE OR SUBSPACE) ASSOCIATED            
*                             WITH PASN OR SASN IS UNKNOWN.                     
*                             Was PSAFPAC, PSAFPPE                2@MED         
PSATX    EQU   X'08'          Equivalent to CVTTX                  @MBA         
PSATXC   EQU   X'04'          Equivalent to CVTTXC                 @MBA         
PSARV241 DC    XL10'00'       RESERVED FOR FUTURE USE - SC1C5.     @LOC         
PSASCAFF DC    XL1'00'        $$SCAFFOLD                                        
PSAEMEMA EQU   X'80'          $$SCAFFOLD: z/Architecture                        
PSALKCRF DC    A(0)           LINKAGE STACK POINTER SAVE AREA.     @D4A         
*                             USED WHEN THE RSM OR ANY LOCK ABOVE               
*                             THE RSM LOCK IS HELD.                             
         DS    0D -           ALIGN PSAMPSW TO DOUBLE WORD                      
PSAMPSW  DC    XL8'000C000000000000' - SETLOCK MODEL PSW                        
PSAPIOM  EQU   X'02'          INPUT/OUTPUT INTERRUPT MASK      @G860PXK         
PSAPEXM  EQU   X'01'          EXTERNAL INTERRUPT MASK          @G860PXK         
PSAICNT  DC    XL8'00' -      Instruction count at last (re)dispatch            
*                                                                  @0KC         
PSAXAD   DC    XL1'AD'        Must be x'AD' - ISV dependency       @MYC         
PSAINTSM DS    XL1            Used by IEAVEINT.                                 
*                             OWNERSHIP: SUPERVISOR CONTROL.                    
*                             SERIALIZATION: DISABLEMENT.          @MWC         
PSARV262 DS    XL14'00'       Reserved                             @MYC         
         AIF   ('&DSECT' EQ 'YES').PSA0095                         @P5A         
PSASTOSM STOSM PSASLSA,X'00'  STOSM instruction. In order                       
*                             to use this field, move the                       
*                             system mask to PSASTSSM and                       
*                             immediately issue                                 
*                             EX 0,PSASTOSM. The system                         
*                             mask field (PSASTSSM) is                          
*                             not preserved across calls.                       
*                             Note that this technique                          
*                             causes a store into the                           
*                             instruction stream, which                         
*                             causes poor performance.                          
*                             Starting with z/OS 2.5, the                       
*                             SSM instruction can instead                       
*                             be used to restore a saved                        
*                             system mask, and                                  
*                             EX 0,PSASTOSM should be                           
*                             avoided.                                          
*                             Ownership: NA.                                    
*                             Serialization: Disablement.          @MWC         
         AGO   .PSA0096                                            @P5A         
.PSA0095 ANOP                                                      @P5A         
PSASTOSM DS    F -            STOSM PSASLSA,X'00' Instruction. In order         
*                             to use this field, move the                       
*                             system mask to PSASTSSM and                       
*                             immediately issue                                 
*                             EX 0,PSASTOSM. The system                         
*                             mask field (PSASTSSM) is                          
*                             not preserved across calls.                       
*                             Note that this technique                          
*                             causes a store into the                           
*                             instruction stream, which                         
*                             causes poor performance.                          
*                             Starting with z/OS 2.5, the                       
*                             SSM instruction can instead                       
*                             be used to restore a saved                        
*                             system mask, and                                  
*                             EX 0,PSASTOSM should be                           
*                             avoided.                                          
*                             Ownership: NA.                                    
*                             Serialization: Disablement.          @MWC         
.PSA0096 ANOP                                                      @P5A         
PSASTSSM EQU   PSASTOSM+1,1,C'X' - LABEL FOR SYSTEM MASK USED IN ABOVE          
*                             INSTRUCTION.                                      
*                             OWNERSHIP: NA.                   @G860PXK         
PSAHLHIS DC    F'0' -         SAVE AREA FOR PSAHLHI              MDC050         
PSARECUR DC    XL1'00' -      RESTART FLIH RECURSION INDICATOR.  IF             
*                             X'00', FLIH NOT IN CONTROL.  IF X'FF',            
*                             FLIH IN CONTROL, ENTRY IS RECURSIVE.              
*                                                                MDC093         
PSARSSM  DC    XL1'00' -      STNSM AREA FOR IEAVERES              @L5C         
PSASNSM2 DC    XL1'00' -      STNSM AREA FOR IEAVTRT1 (MDC470) @G65RP9A         
PSARTM1S DC    XL1'00' -      Bits 0-7 of the current PSW are  @G383P9A         
*                             stored here                      @G383P9A         
PSALWTSA DC    A(0) -         REAL ADDRESS OF SAVE AREA USED WHEN  @LHC         
*                             A RESTARTABLE WAIT STATE IS LOADED                
*                             OWNERSHIP: LDWT                                   
PSACLHT  DS    0CL116 -       CPU LOCKS TABLE  (MDC314)        @G860PXH         
PSACLHT1 DS    0CL80 -        SPIN LOCKS TABLE                 @G860PXH         
PSADISPL DC    V(DISPLOCK) -  GLOBAL DISPATCHER LOCK  (MDC315) @G50DP9A         
PSAASML  DC    A(0) -         AUXILIARY STORAGE MANAGEMENT (ASM) LOCK           
*                                                                MDC002         
PSASALCL DC    V(SALCLOCK) -  SPACE ALLOCATION LOCK  (MDC316)  @G50DP9A         
PSAIOSSL DC    A(0) -         IOS SYNCHRONIZATION LOCK           MDC010         
PSARSMDL DC    A(0) -         ADDRESS OF THE RSM DATA SPACE LOCK   @LBC         
PSAIOSUL DC    A(0) -         IOS UNIT CONTROL BLOCK LOCK        MDC005         
PSARSMQL DC    A(0) -         RSMQ lock                            @MIA         
PSARV29C DC    A(0) -         RESERVED FOR LOCK EXPANSION          @LDC         
PSARV2A0 DC    A(0) -         RESERVED FOR LOCK EXPANSION          @LDC         
PSATPACL DC    A(0) -         TCAM'S TPACBDEB LOCK               MDC009         
PSAOPTL  DC    V(OPTLOCK) -   OPTIMIZER LOCK  (MDC317)         @G50DP9A         
PSARSMGL DC    A(0) -         RSM GLOBAL LOCK                  @G860PXH         
PSAVFIXL DC    V(VFIXLOCK)    VSM FIXED SUBPOOLS LOCK          @G860PXH         
PSAASMGL DC    A(0) -         ASM GLOBAL LOCK                  @G860PXH         
PSARSMSL DC    A(0) -         RSM STEAL LOCK                   @G860PXH         
PSARSMXL DC    A(0) -         RSM CROSS MEMORY LOCK            @G860PXH         
PSARSMAL DC    A(0) -         RSM ADDRESS SPACE LOCK           @G860PXH         
PSAVPAGL DC    V(VPAGLOCK)    VSM PAGEABLE SUBPOOLS LOCK       @G860PXH         
PSARSMCL DC    A(0)           RSM COMMON LOCK                  @G860PXK         
PSALKS1  EQU   (*-PSACLHT1)/4 COUNT OF LOCKS IN CLHT1 (19)         @MJC         
PSARVLK2 DC    A(0)           RESERVED FOR LOCK EXPANSION      @G860PXH         
PSACLHT2 DS    0CL16          SHARED EXCLUSIVE LOCKS TABLE     @G860PXH         
PSARSML  DC    V(RSMLOCK)     RSM GLOBAL FUNCTION/RECOVERY                      
*                             LOCK                             @G860PXH         
PSARSMEX EQU   X'80' -        BIT 0 OF PSARSML. IF ON, THE RSM                  
*                             LOCK IS HELD EXCLUSIVE.          @G860PXH         
PSATRCEL DC    V(TRCELOCK)    TRACE BUFFER MANAGEMENT LOCK     @G860PXH         
PSATRCEX EQU   X'80' -        BIT 0 OF PSATRCEL. IF ON THE TRACE                
*                             LOCK IS HELD EXCLUSIVE.          @G860PXH         
PSAIOSL  DC    V(IOSLOCK) -   IOS LOCK                             @D3C         
PSAIOSEX EQU   X'80' -        BIT 0 OF PSAIOSL. IF ON THE IOS      @D3A         
*                             LOCK IS HELD EXCLUSIVE.                           
PSALKS2  EQU   3              COUNT OF LOCKS IN CLHT2              @D3C         
PSARVLK4 DC    A(0) -         RESERVED FOR LOCK EXPANSION      @G50NP9A         
PSACLHT3 DS    0CL8           SPECIAL LOCKS TABLE              @G860PXH         
PSACPUL  DC    A(0)           CPU TABLE LOCKS                  @G860PXH         
PSALKS3  EQU   1              COUNT OF LOCKS IN CLHT3          @G860PXH         
PSARVLK5 DC    A(0) -         RESERVED FOR LOCK EXPANSION      @G50NP9A         
PSACLHT4 DS    0CL12          SUSPEND LOCKS TABLE              @G860PXH         
PSACMSL  DC    A(0) -         CROSS MEMORY SERVICES LOCK                        
*                             (MDC463)                         @ZM45800         
PSALOCAL DC    A(0) -         LOCAL LOCK                                        
PSALKS4  EQU   2              COUNT OF LOCKS IN CLHT4          @G860PXH         
PSARVLK6 DC    A(0) -         RESERVED FOR LOCK EXPANSION      @G50NP9A         
PSALCPUA DC    A(0) -         LOGICAL CPU ADDRESS FOR LOCK INSTRUCTION.         
*                                                              @G50NP9A         
PSAHLHI  DS    0F -           HIGHEST LOCK HELD INDICATOR.     @G50EP9A         
PSACLHS  DS    0F -           CPU LOCKS HELD STRING              MDC122         
PSACLHS1 DC    XL1'00' -      FIRST BYTE OF PSACLHS. (MDC384)  @G860PXH         
PSACPULI EQU   X'80' -        CPU LOCK INDICATOR               @G860PXH         
PSASUM   EQU   X'10' -        SUMMARY BIT. IF ON, AT LEAST ONE     @LDA         
*                             LOCK IN PSACLHSE IS HELD BY THIS                  
*                             PROCESSOR.                                        
PSARSMLI EQU   X'08' -        RSM LOCK INDICATOR               @G860PXH         
PSATRCEI EQU   X'04' -        TRACE LOCK INDICATOR             @G860PXH         
PSAIOSI  EQU   X'02' -        IOS LOCK INDICATOR                   @D3A         
PSACLHS2 DC    XL1'00' -      SECOND BYTE OF PSACLHS. (MDC385) @G860PXH         
PSARSMCI EQU   X'10' -        RSM COMMON LOCK INDICATOR        @G860PXK         
PSARSMGI EQU   X'08' -        RSM GLOBAL LOCK INDICATOR        @G860PXH         
PSAVFIXI EQU   X'04' -        VSM FIX LOCK INDICATOR           @G860PXH         
PSAASMGI EQU   X'02' -        ASM GLOBAL LOCK INDICATOR        @G860PXH         
PSARSMSI EQU   X'01' -        RSM STEAL LOCK INDICATOR         @G860PXH         
PSACLHS3 DC    XL1'00' -      THIRD BYTE OF PSACLHS  (MDC386)  @G50EP9A         
PSARSMXI EQU   X'80' -        RSM CROSS MEMORY LOCK INDICATOR  @G860PXH         
PSARSMAI EQU   X'40' -        RSM ADDRESS SPACE LOCK INDICATOR @G860PXH         
PSAVPAGI EQU   X'20' -        VSM PAGE LOCK INDICATOR          @G860PXH         
PSADSPLI EQU   X'10' -        DISPATCHER LOCK INDICATOR                         
*                             (MDC387)                         @G50EP9A         
PSAASMLI EQU   X'08' -        ASM LOCK INDICATOR  (MDC388)     @G50EP9A         
PSASALLI EQU   X'04' -        SPACE ALLOCATION LOCK INDICATOR                   
*                             (MDC389)                         @G50EP9A         
PSAIOSLI EQU   X'02' -        IOS SYNCHRONIZATION LOCK INDICATOR                
*                             (MDC390)                         @G50EP9A         
PSARSMDI EQU   X'01' -        RSM DATA SPACE LOCK INDICATOR        @LBA         
PSACLHS4 DC    XL1'00' -      FOURTH BYTE OF PSACLHS  (MDC392) @G50EP9A         
PSAIOULI EQU   X'80' -        IOS UCB LOCK INDICATOR  (MDC393) @G50EP9A         
PSARSMQI EQU   X'40' -        RSMQ lock indicator                  @MIA         
PSATPALI EQU   X'08' -        TPACBDEB LOCK INDICATOR (MDC397) @G50EP9A         
PSASRMLI EQU   X'04' -        SYSTEM RESOURCE MANAGER (SRM) LOCK                
*                             INDICATOR  (MDC398)              @G50EP9A         
PSACMSLI EQU   X'02' -        CROSS MEMORY SERVICES LOCK INDICATOR              
*                             (CMS, CMSSMF, CMSEQDQ, CMSLATCH)                  
*                             (MDC399)                             @LUC         
PSALCLLI EQU   X'01' -        LOCAL LOCK INDICATOR  (MDC400)   @G50EP9A         
PSALITA  DC    V(IEAVELT1) -  ADDRESS OF LOCK INTERFACE TABLE. @ZM48253         
PSASTOR8 DC    XL8'00' -      8-BYTE value for master's STO        @LSA         
PSACR0   DC    F'0' -         SAVE AREA FOR CONTROL REGISTER 0                  
PSAMCHFL DC    XL1'00' -      MCH RECURSION FLAGS                               
PSASYMSK DC    XL1'00' -      THIS FIELD WILL BE USED IN CONJUNCTION            
*                             WITH THE STNSM INSTRUCTION TO PLACE IOS           
*                             CHANNEL SCHEDULER INTO A DISABLED STATE           
*                             AND SIMULTANEOUSLY SAVE THE SYSTEM MASK           
*                             OF THE CALLER                      MDC022         
PSAACTCD DC    XL1'00' -      ACTION CODE SUPPLIED BY OPERATOR     @LHC         
*                             AFTER SYSTEM HAS LOADED RESTARTABLE WAIT          
*                             STATE AND BEFORE THE RESTART KEY IS               
*                             DEPRESSED.  VALUE DEPENDS ON RESTARTABLE          
*                             WAIT STATE CODE.  UNPREDICTABLE DURING            
*                             NORMAL SYSTEM OPERATION.                          
*                             OWNERSHIP: LDWT                                   
PSAMCHIC DC    XL1'00' -      MCH INITIALIZATION COMPLETE FLAGS  MDC098         
PSAWKRAP DC    A(0) -         REAL ADDRESS OF VARY CPU PARAMETER LIST           
*                                                                MDC106         
PSAWKVAP DC    A(0) -         VIRTUAL ADDRESS OF VARY CPU PARAMETER             
*                             LIST                               MDC107         
PSAVSTAP DC    H'0' -         WORK AREA FOR VARY CPU             MDC108         
PSACPUSA DC    H'0' -         PHYSICAL CPU ADDRESS (STATIC)  (MDC131)           
*                                                                YM3489         
PSASTOR  DC    F'0' -         MASTER MEMORY'S SEGMENT TABLE ORIGIN              
*                             REGISTER (STOR) VALUE                             
PSAIDAWK DC    XL90'00' -     WORK SAVE AREA FOR private                        
*                             DEBUG TOOL.                      @G860PXK         
         AIF   ('&DSECT' EQ 'YES').PSA0097                         @P5A         
PSARET   BSM   0,14    -      BRANCH RETURN TO CALLER (VIA BSM),                
*                             USED BY ROUTINES INVOKED BY IOS  @G860PXK         
PSARETCD BSM   0,14    -      BRANCH RETURN TO CALLER (VIA BSM)                 
*                             WITH RETURN CODE IN REGISTER 15,                  
*                             USED BY ROUTINES INVOKED BY IOS  @G860PXK         
         AGO   .PSA0098                                            @P5A         
.PSA0097 ANOP                                                      @P5A         
PSARET   DS    H -            BSM 0,14 BRANCH RETURN TO CALLER     @P5A         
*                             USED BY ROUTINES INVOKED BY IOS                   
PSARETCD DS    H -            BSM 0,14 BRANCH RETURN TO CALLER     @P5A         
*                             WITH RETURN CODE IN REGISTER 15,                  
*                             USED BY ROUTINES INVOKED BY IOS                   
.PSA0098 ANOP                                                      @P5A         
PSAVAL   DS   0XL2 -          Virtual Architecture Level. Bits 0-11             
*                             are the same as IHASCCB field                     
*                             SCCBVAL bits 20-31.                               
*                             Bits 12-15 are not defined.                       
PSAVAL_Machine DS X           First byte. Sample values:                        
*                             0 meant z10 or earlier but is not                 
*                             possible for this release, 1 meant z196           
*                             but is not possible for this release,             
*                             2 meant zEC12 but is not possible for             
*                             release. 3 means z13, 4 means z14,                
*                             etc.                                 @MRA         
         DS    X                                                                
PSARSVT  DS    0CL64 -        RECOVERY STACK VECTOR TABLE        MDC064         
PSARSVTE DS    0CL64 -        RECOVERY STACK VECTOR TABLE        MDC065         
PSACSTK  DC    A(0) -         ADDRESS OF CURRENTLY USED FUNCTIONAL              
*                             RECOVERY ROUTINE (FRR) STACK       MDC061         
PSANSTK  DC    A(0) -         ADDRESS OF NORMAL FRR STACK        MDC062         
PSASSTK  DC    A(0) -         ADDRESS OF SVC-I/O-DISPATCHER FRR STACK           
*                                                                MDC063         
PSASSAV  DC    A(0) -         ADDRESS OF INTERRUPTED STACK SAVED BY             
*                             SVC, I/O, DISPATCHER               MDC066         
PSAMSTK  DC    A(0) -         ADDRESS OF MCH FRR STACK           MDC067         
PSAMSAV  DC    A(0) -         ADDRESS OF INTERRUPTED STACK SAVED BY             
*                             MCH                                MDC068         
PSAPSTK  DC    A(0) -         ADDRESS OF PROGRAM CHECK FLIH FRR STACK           
*                                                                MDC069         
PSAPSAV  DC    A(0) -         ADDRESS OF INTERRUPTED STACK SAVED BY             
*                             PROGRAM CHECK FLIH                 MDC070         
PSAESTK1 DC    A(0) -         ADDRESS OF EXTERNAL FLIH FRR STACK FOR            
*                             NON-RECURSIVE ENTRIES              MDC071         
PSAESAV1 DC    A(0) -         ADDRESS OF INTERRUPTED STACK SAVED BY             
*                             EXTERNAL FLIH FOR                                 
*                             NON-RECURSIVE ENTRIES              MDC072         
PSAESTK2 DC    A(0) -         ADDRESS OF EXTERNAL FLIH FRR STACK FOR            
*                             FIRST LEVEL RECURSIONS             MDC073         
PSAESAV2 DC    A(0) -         ADDRESS OF INTERRUPTED STACK SAVE BY              
*                             EXTERNAL FLIH FOR FIRST LEVEL RECURSIONS          
*                                                                MDC074         
PSAESTK3 DC    A(0) -         ADDRESS OF EXTERNAL FLIH FRR STACK FOR            
*                             SECOND LEVEL RECURSIONS AND ACR    MDC075         
PSAESAV3 DC    A(0) -         ADDRESS OF INTERRUPTED STACK SAVED BY             
*                             EXTERNAL FLIH FOR SECOND LEVEL                    
*                             RECURSIONS                         MDC076         
PSARSTK  DC    A(0) -         ADDRESS OF RESTART FLIH FRR STACK  MDC077         
PSARSAV  DC    A(0) -         ADDRESS OF INTERRUPTED STACK SAVED BY             
*                             RESTART FLIH                       MDC078         
         DS    0D -           ALIGN PSALWPSW TO DOUBLE WORD        @LHC         
PSALWPSW DC    XL8'00' -      PSW OF WORK INTERRUPTED WHEN A       @LHC         
*                             RESTARTABLE WAIT STATE IS LOADED                  
*                             OWNERSHIP: LDWT                                   
PSARV3C8 DS    D              Reserved                             @M8C         
PSATSTK  DC    A(0) -         ADDRESS OF RTM RECOVERY STACK.                    
*                             SERIALIZATION: NONE - THE FIELD IS                
*                             INITIALIZED AT IPL/VARY CPU ONLINE                
*                             TIME ONLY.                                        
*                             OWNER: RTM.                          @L6A         
PSATSAV  DC    A(0) -         ADDRESS OF ERROR STACK SAVED BY RTM  @L7A         
*                             WHEN SWITCHING TO RTM RECOVERY STACK.             
*                             OWNERSHIP: RTM                                    
PSAASTK  DC    A(0) -         ADDRESS OF ACR FRR STACK.            @L7A         
*                             OWNERSHIP: ACR                                    
PSAASAV  DC    A(0) -         ADDRESS OF INTERRUPT STACK SAVED BY  @L7A         
*                             ACR.                                              
*                             OWNERSHIP: ACR                                    
         DS    0D -           ALIGN PSARTPSW TO DOUBLE WORD        @L7A         
PSARTPSW DC    XL8'00' -      RESUME PSW FOR RTM SETRP RETRY       @L7A         
*                             OPTION                                            
*                             OWNERSHIP: RTM                                    
PSAPCR0E DC    XL8'00' -      Temp for PC FLIH/Disp for CR0E       @0MC         
         DS    0F -           ALIGN PSASFACC TO FULL WORD        MDC123         
PSASFACC DC    XL4'8007D000' - SETFRR ABEND COMPLETION CODE USED WHEN           
*                             A SETFRR ADD IS ISSUED AGAINST A FULL             
*                             FRR STACK                          MDC123         
         AIF   ('&DSECT' EQ 'YES').PSA0099                         @P5A         
PSALSFCC L     1,PSASFACC   - A LOAD INSTRUCTION TO PRIME REGISTER 1            
*                             WITH THE SETFRR ABEND COMPLETION CODE IN          
*                             PSASFACC        (MDC124)         @G860PXK         
PSASVC13 SVC   13 -           AN SVC 13 INSTRUCTION              MDC125         
         AGO   .PSA0100                                            @P5A         
.PSA0099 ANOP                                                      @P5A         
PSALSFCC DS    F -            L  1,PSASFACC INSTRUCTION TO LOAD    @P5A         
*                             REGISTER 1 WITH THE SETFRR ABEND                  
*                             COMPLETION CODE IN PSASFACC                       
PSASVC13 DS    H -            AN SVC 13 INSTRUCTION                @P5A         
.PSA0100 ANOP                                                      @P5A         
PSAFPFL  DC    XL1'00' -      See LCCAFPFL                         @MEC         
*                             Interface only for PSABFP, PSAVSS    @MEC         
PSABFP   EQU   X'10'          Additional FP status is being saved  @MEC         
PSAVSS   EQU   X'08'          VRs are being saved                  @MEC         
PSAGSF   EQU   X'04'          GSF controls are being saved         @MQA         
PSAINTE  DC    XL1'00' -      FLAGS FOR CPU TIMER  (MDC466)    @ZM48078         
PSANUIN  EQU   X'80' -        CPU TIMER CANNOT BE USED                          
*                             (MDC467)                         @ZM48078         
PSARV3FC DC    XL12'00' -     Reserved                             @MxC         
PSAATCVT DC    A(0) -         ADDRESS OF VTAM ATCVT.  INITIALIZED BY            
*                             VTAM.  (MDC300)                  @Z30AP9A         
PSAWTCOD DC    A(0) -         WAIT STATE CODE LOADED               @LHC         
*                             OWNERSHIP: LDWT                                   
PSASCWA  DC    A(0) -         ADDRESS OF SUPERVISOR CONTROL CPU                 
*                             RELATED WORK SAVE AREA           @G860PXH         
PSARSMSA DC    A(0) -         ADDRESS OF RSM CPU RELATED WORK                   
*                             SAVE AREA                        @G860PXH         
         DS    0D -           ALIGN PSASCPSW TO DOUBLE WORD                     
*                             (MDC325)                         @G50DP9A         
PSASCPSW DC    XL4'000C0000' - MODEL PSW                                        
*                             OWNERSHIP: SUPERVISOR CONTROL.                    
*                             SERIALIZATION: DISABLED.         @G860PXK         
         DC    A(0) -         MODEL PSW SECOND HALF  (MDC325)  @G50DP9A         
         DS    0D -           ALIGN PSASMPSW TO DOUBLE WORD                     
*                             (MDC326)                         @G50DP9A         
PSASMPSW DC    XL4'070C0000' - SRB DISPATCH PSW  (MDC326)      @G50DP9A         
         DC    A(0) -         DISPATCH PSW SECOND HALF                          
*                             (MDC326)                         @G50DP9A         
         DS    0D -           ALIGN PSAPCPSW TO DOUBLE WORD      YM0943         
PSAPCPSW DC    XL16'00' =     TEMPORARY OLD PSW STORAGE FOR PROGRAM             
*                             FLIH  (MDC129)                       @LVC         
PSARV438 DC    XL8'00'  =     Reserved                             @M8C         
         DS    0D -           Align PSARSP16 to double word        @M8A         
PSAMCX16 DC    XL16'00' -     MCH exit PSW16                       @M8A         
PSARSP16 DC    XL16'00' -     Resume PSW field for restart interrupt   -        
                              handler                              @M8A         
PSAPSWSV16 DC  XL16'00' -     PSW SAVE AREA FOR DISPATCHER AND ACR @M8A         
         ORG   PSAPSWSV16                                          @M8A         
         DS    D  -           Part of PSAPSWSV16                   @M8C         
PSAPSWSV DC    XL8'00' -      PSW SAVE AREA FOR DISPATCHER AND ACR              
*                             (MDC319)                         @G50DP9A         
         DS    0D -           ALIGN PSACPUT TO DOUBLE WORD                      
*                             (MDC328)                         @G50DP9A         
PSACPUT  DC    XL8'00' -      SUPERVISOR CPU TIMER SAVE AREA                    
*                             (MDC328)                         @G50DP9A         
PSAPCFUN DS    0F -           PROGRAM FLIH RECURSION           @G383P9A         
*                             FLAGS                 (MDC613)   @G383P9A         
PSAPCFB1 DC    XL1'00' -      FUNCTION VALUE  (MDC484)         @G383P9A         
PSAPCMC  EQU   X'01' -        MC INTERRUPT      (MDC605)       @G383P9A         
PSAPCPF  EQU   X'02' -        PAGE FAULT                       @G383P9A         
PSAPCPS  EQU   X'03' -        PER/SPACE SWITCH INTERRUPT       @G383PXU         
PSAPCAD  EQU   X'04' -        ADDRESSING EXCEPTION  (MDC488)   @G383P9A         
PSAPCTR  EQU   X'05' -        TRANSLATION EXCEPTION  (MDC489)  @G383P9A         
PSAPCPC  EQU   X'06' -        PROGRAM CHECK  (MDC490)          @G383P9A         
PSAPCTRC EQU   X'07' -        TRACE INTERRUPT                  @G860PXK         
PSAPCAF  EQU   X'08' -        NEW VALUE FOR PROGRAM INTERRUPT      @03A         
*                             FLAG.  ASYMMETRIC FEATURE OPERATION               
*                             EXCEPTION.                                        
PSAPCLS  EQU   X'09' -        LINKAGE STACK INTERRUPT FUNCTION     @L8A         
*                             VALUE FOR PROGRAM FLIH.                           
PSAPCART EQU   X'0A' -        ACCESS REGISTER TRANSLATION          @L8A         
*                             INTERRUPT VALUE FOR PROGRAM FLIH.                 
PSAPCDPF EQU   X'0B' -        DISABLED PAGE/SEGMENT FAULT          @LCA         
PSAPCDAR EQU   X'0C' -        DISABLED ART PIC X'2B' FUNCTION      @LCA         
*                             VALUE FOR PROGRAM FLIH.                           
PSAPCPRT EQU   X'0D' -        Protection exception function value  @LQA         
PSAPCMAX EQU   X'0D' -        MAXIMUM VALID FUNCTION VALUE         @LQC         
PSAPCFB2 DC    XL1'00' -      FUNCTION FLAGS  (MDC491)         @G383P9A         
PSAPCTRR EQU   X'80' -        TRACE INTERRUPT RECURSION        @YA01102         
*                             HANDLER FLAG.                                     
PSAPCMT  EQU   X'40' -        TRACE RECURSION FLAG  (MDC493)   @G383P9A         
PSAPCFB3 DC    XL1'00' -      RECURSION FLAGS  (MDC494)        @G383P9A         
PSAPCP1  EQU   X'80' -        FIRST LEVEL PROGRAM CHECK        @G383P9A         
*                             (MDC495)                         @G383P9A         
PSAPCP2  EQU   X'40' -        SECOND LEVEL PROGRAM CHECK       @G383P9A         
*                             (MDC496)                         @G383P9A         
PSAPCDE  EQU   X'20' -        DAT ERROR CONDITION  (MDC497)    @G383P9A         
PSAPCLV  EQU   X'10' -        0=REGISTERS IN LCCA, 1=REGISTERS @G383P9A         
*                             NOT IN LCCA.            (MDC498) @G383P9A         
PSAPCP3  EQU   X'08' -        THIRD LEVEL PROGRAM CHECK        @G383P9A         
*                                                  (MDC604)    @G383P9A         
PSAPCP4  EQU   X'04' -        FOURTH LEVEL PROGRAM CHECK       @G383P9A         
*                                                  (MDC604)    @G383P9A         
PSAPCPFR EQU   X'02' -        RECURSIVE PAGE FAULT INDICATOR       @LAA         
PSAPCAVR EQU   X'01' -        RECURSIVE ASTE VALIDITY INDICATOR    @LCA         
PSAPCFB4 DC    XL1'00' -      RECURSION FLAGS                                   
PSAPCDNV EQU   X'80' -        DUCT validity indicator              @PBA         
PSAPCLSR EQU   X'40' -        IEAVLSIH has invoked IARPTEPR and    @PEA         
*                             recursion into RSM is not permitted.              
PSAPCPS2 DC    H'0' -         PASID AT TIME OF SECOND LEVEL    @G383P9A         
*                             INTERRUPT              (MDC604)  @G383P9A         
PSARV47E DC    XL2'00' -      RESERVED                         @G860PXK         
PSAPCWKA DC    XL24'00' -     Work area for PC FLIH. Must be           *        
                              qword-aligned                        @LSA         
PSAPCPS3 DC    H'0' -         PASID AT TIME OF THIRD LEVEL     @G383P9A         
*                             INTERRUPT              (MDC604)  @G383P9A         
PSAPCPS4 DC    H'0' -         PASID AT TIME OF FOURTH LEVEL                     
*                             INTERRUPT                        @G860PXK         
PSAMODEW DS    0F -           Word label to address PSAMODE.       @LPC         
         DC    XL1'00' -      RESERVED - FIRST BYTE OF PSAMODEW                 
*                                                              @G860PXK         
PSAMFLGS DC    XL1'00' -      SECOND BYTE OF PSAMODEW (MDC604) @G383P9A         
PSANSS   EQU   X'80' -        ENABLED UNLOCKED TASK WITH FRR   @G383P9A         
*                                                     (MDC605) @G383P9A         
PSAPRSRB EQU   X'40' -        Preemptable-class SRB                @LPA         
PSAMODEH DC    XL1'00' -      SECOND HALFWORD OF PSAMODEW.     @G383P9A         
*                             FIRST BYTE MUST BE ZERO FOR I/O                   
*                             AND EXTERNAL FLIHS.                               
*                                                     (MDC613) @G383P9A         
PSAMODE  DC    XL1'00' -      SYSTEM MODE INDICATOR AND DISPLACEMENT            
*                             INTO TABLES FOR EXTERNAL AND I/O                  
*                             FLIHS                            @G860PXH         
PSATASKM EQU   X'00' -        TASK MODE VALUE  (MDC338)        @G50DP9A         
PSASRBM  EQU   X'04' -        SRB MODE VALUE  (MDC339)         @G50DP9A         
PSAWAITM EQU   X'08' -        WAIT MODE VALUE  (MDC340)        @G50DP9A         
PSADISPM EQU   X'10' -        DISPATCHER MODE VALUE  (MDC342)  @G50DP9A         
PSAPSRBM EQU   X'20' -        PSEUDO SRB MODE FLAG BIT.  THIS BIT MAY           
*                             BE ON WITH ANY OF ABOVE MODE VALUES.              
*                             (MDC343)                         @G50DP9A         
         DC    XL3'00' -      RESERVED                         @G860PXK         
PSASTNSM DC    XL1'00' -      STNSM TARGET USED BY EXIT PROLOGUE                
*                             (MDC346)                         @G50DP9A         
PSALKJW  DC    F'0' -         LOCAL LOCK RELEASE SRB JOURNAL   @G383P9A         
*                             WORD                   (MDC612)  @G383P9A         
PSADZERO DS    0D -           DOUBLEWORD OF ZERO   (MDC612)    @G383P9A         
PSAFZERO DC    F'0' -         FULLWORD OF ZERO     (MDC612)    @G383P9A         
         DC    F'0' -         FULLWORD OF ZERO     (MDC612)    @G383P9A         
PSALKJW2 DC    F'0' -         CMS LOCK RELEASE JOURNAL WORD.   @G383P9A         
*                                                  (MDC613)    @G383P9A         
PSALKPT  DC    V(IEALKPT) -   SETLOCK TEST,TYPE=HIER                            
*                             PARAMETER LIST TABLE.                             
*                             OWNERSHIP: LOCK MANAGER.                          
*                             SERIALIZATION: NONE.             @G860PXK         
PSALAA   DS    A       -      LE Anchor Area. Owner: LE            @LVA         
PSALIT2  DC    V(IEAVELT2) -  POINTER TO THE EXTENDED LOCK         @LDA         
*                             INTERFACE TABLE.                                  
PSAECLTP DC    V(IEACLTE) -   POINTER TO THE EXTENDED CURRENT      @LDA         
*                             LOCKS HELD TABLE.                                 
PSACLHSE DS    0F -           CURRENT LOCKS HELD STRING EXTENSION  @LDA         
PSALHEB0 DC    XL1'00' -      BYTE 0 OF THE CURRENT LOCK HELD      @LDA         
*                             STRING EXTENSION.                                 
PSABLSDI EQU   X'80' -        BMFLSD LOCK INDICATOR.               @LGA         
PSAXDSI  EQU   X'40' -        XCFDS LOCK INDICATOR.                @LEA         
PSAXRESI EQU   X'20' -        XCFRES LOCK INDICATOR.               @LEA         
PSAXQI   EQU   X'10' -        XCFQ LOCK INDICATOR.                 @LEA         
PSAESETI EQU   X'08' -        ETRSET LOCK INDICATOR.               @LFA         
PSAIXSCI EQU   X'04' -        IXLSCH LOCK INDICATOR.               @LMC         
PSAIXSHI EQU   X'02' -        IXLSHR LOCK INDICATOR.               @LMC         
PSAIXDSI EQU   X'01' -        IXLDS LOCK INDICATOR.                @LLA         
PSALHEB1 DC    XL1'00' -      BYTE 1 OF THE CURRENT LOCK HELD      @LDA         
*                             STRING EXTENSION.                                 
PSAIXLLI EQU   X'80' -        IXLSHELL LOCK INDICATOR.             @LMC         
PSAULUTI EQU   X'40' -        IOSULUT LOCK INDICATOR.              @LJA         
PSAIXLRI EQU   X'20' -        IXLREQST LOCK INDICATOR.             @05A         
PSAWLMRI EQU   X'10' -        WLMRES LOCK INDICATOR                @LRA         
PSAWLMQI EQU   X'08' -        WLMQ LOCK INDICATOR.                 @LRA         
PSACNTXI EQU   X'04' -        CONTEXT LOCK INDICATOR               @LRA         
PSAREGSI EQU   X'02' -        REGSRV LOCK INDICATOR.               @LRA         
PSASSDLI EQU   X'01' -        SSD LOCK INDICATOR.                  @LTA         
PSALHEB2 DC    XL1'00' -      BYTE 2 OF THE CURRENT LOCK HELD      @LDA         
*                             STRING EXTENSION.                                 
PSAGRSLI EQU   X'80' -        GRSINT lock indicator                @M1A         
PSAMISLI EQU   X'40' -        MISC lock indicator                  @MGA         
PSAPSLK1 EQU   X'40' -        n/a                                  @MGC         
PSADNU2  EQU   X'20' -        n/a                                  @MGA         
PSAPNLK1 EQU   X'20' -        n/a                                  @MGC         
PSADNU3  EQU   X'10' -        n/a                                  @MGA         
PSAIOLK1 EQU   X'10' -        n/a                                  @MGC         
PSADNU4  EQU   X'08' -        n/a                                  @MGA         
PSAPXLK1 EQU   X'08' -        n/a                                  @MGC         
PSADNU5  EQU   X'04' -        n/a                                  @MGA         
PSADRLK3 EQU   X'04' -        n/a                                  @MGC         
PSADRLK2 EQU   X'02' -        HCWDRLK2 lock indicator              @M6A         
PSADRLK1 EQU   X'01' -        HCWDRLK1 lock indicator              @M6A         
PSALHEB3 DC    XL1'00' -      BYTE 3 OF THE CURRENT LOCK HELD      @LDA         
*                             STRING EXTENSION.                                 
PSASRMEI EQU   X'80' -        SRMENQ lock indicator                @M9A         
PSASSDGI EQU   X'40' -        SSDGROUP lock indicator              @MLA         
PSARV4C8 DC    XL8'00'   -    RESERVED FOR FUTURE LOCK EXPANSION.  @LDA         
PSARV4D0 DC    XL144'00' -    RESERVED.                            @0KC         
PSADiag560 DC  XL36'00' -     Diagnostic data for IBM use only     @0KA         
PSARV584 DC    XL4'00' -      RESERVED.                            @0KA         
PSAHWFB  DC    XL1'00' -      HARDWARE FLAG BYTE.                  @L3A         
PSACR0CB DC    XL1'00' -      CR0 CONTROL BYTE USED BY PROTPSA MACRO            
*                             (MDC425)                         @G50NP9A         
PSAENABL EQU   X'10' -        TO ENABLE PSA PROTECTION                          
*                             (MDC428)                         @G50NP9A         
PSADSABL EQU   X'00' -        TO DISABLE PSA PROTECTION                         
*                             (MDC429)                         @G50NP9A         
PSARV58A DC    XL2'00' -      RESERVED                             @PJC         
PSACR0SV DC    F'0' -         CR0 SAVE AREA USED BY PROTPSA MACRO               
*                             (MDC426)                         @G50NP9A         
PSACR0EN EQU   X'10' -        IF 0, PSA PROTECT DISABLED.  IF 1, PSA            
*                             PROTECT ENABLED.  BIT IS IN HIGH-ORDER            
*                             BYTE OF PSACR0SV.  (MDC432)      @G50NP9A         
PSACR0ED EQU   X'80'          DAT features. Bit is in PSACR0SV+1   @0BA         
PSACR0AL EQU   X'08' -        IF 1, ASN & LX Reuse facility is                  
*                             enabled. Bit is in PSACR0SV+1        @LVA         
PSACR0FP EQU   X'04' -        IF 1, extended floating point is                  
*                             enabled. Bit is in PSACR0SV+1        @LRA         
PSACR0VI EQU   X'02' -        IF 1, vector instructions are                     
*                             enabled. Bit is in PSACR0SV+1        @LRA         
PSAPCCR0 DC    F'0' -         PROGRAM CHECK FLIH CR0 SAVE AREA                  
*                             (MDC427)                         @G50NP9A         
PSARCR0  DC    F'0' -         RESTART FLIH CR0 SAVE AREA                        
*                             (MDC434)                         @G50NP9A         
PSARPEN  EQU   X'10' -        IF 0, PSA PROTECT DISABLED.  IF 1, PSA            
*                             PROTECT ENABLED.  BIT IS IN HIGH-ORDER            
*                             BYTE OF PSARCR0.  (MDC435)       @G50NP9A         
PSASTKE  DS    0D -           CURRENT STACK CONTROL WORD FOR SRB'S AND          
*                             TYPE 6 SVC'S.                                     
PSATKN   DC    H'0' -         CURRENT STACK TOKEN     (MDC610) @G383P9A         
PSAASD   DC    H'0' -         CURRENT STACK ADDRESS SPACE                       
*                             DESIGNATOR              (MDC610) @G383P9A         
PSASEL   DC    F'0' -         CURRENT STACK ELEMENTS ADDRESS                    
*                                                     (MDC610) @G383P9A         
         DS    0D -           ALIGN PSASKPSW TO A DOUBLEWORD                    
*                                                     (MDC604) @G383P9A         
PSASKPSW DC    XL4'000C0000'  PCLINK STACK/UNSTACK MODEL PSW                    
*                                                     (MDC604) @G383P9A         
PSASKPS2 DC    A(0) -         PCLINK PSW ADDRESS      (MDC604) @G383P9A         
PSACPCLS DC    A(0)    -      PCLINK WORKAREA - CURRENT STACK      @L9C         
*                             HEADER ADDRESS                                    
PSARV5AC DC    XL4'00' -      RESERVED.                            @L9A         
PSASCFS  DC    A(0)    -      ADDRESS OF THE SUPERVISOR CONTROL    @L8C         
*                             FLIH SAVEAREA.                                    
PSAPAWA  DC    A(0)    -      ADDRESS OF PC/AUTH WORK AREA.        @L8A         
PSASCFB  DC    XL1'00' -      SUPERVISOR CONTROL FLAG BYTE.        @L1A         
PSAIOPR  EQU   X'80' -        INDICATES IF INTERRUPTED TASK SHOULD @L1A         
*                             BE PREEMPTED.  USED BY THE I/O FLIH.              
PSAIORTY EQU   X'40' -        I/O FLIH RECOVERY FLAG. IF 1,        @L5A         
*                             CONTINUE RETRY PROCESSING INSTEAD OF @L5A         
*                             ABENDING                             @L5A         
PSA_LockSpinEntered EQU X'20' -   Set whenever supervisor spins for a           
*                             lock                                 @MPA         
PSARV5B9 DC    XL3'00' -      RESERVED                             @PJC         
PSACR0M1 DC    XL4'FFFF018C'  MASK OF CR0 WITH EXTERNAL MASK BITS  @0HC         
*                             OFF - USED BY WINDOW.                             
PSACR0M2 DC    XL4'0000FE73'  MASK OF CR0 WITH ONLY EXTERNAL MASK  @0HC         
*                             BITS ON - USED BY WINDOW.                         
PSARV5C4 DC    XL4'00' -      RESERVED                             @MAA         
PSA_CR0EMaskOffExtInt DC XL8'FFFFFFFDFFFF018C' Mask of bits to turn    X        
                              off all external interrupts in grande    X        
                              CR0                                  @0HC         
PSA_CR0EMaskOnExtInt  DC XL8'000000020000FE73' Mask of bits to turn    X        
                              on all external interrupts in grande     X        
                              CR0                                  @0HC         
PSA_CR0ESaveArea      DC 0XL8'00' Save area for grande CR0         @MAA         
PSA_CR0ESaveArea_HW   DC XL4'00' High word save area for high word of  X        
                              CR0                                  @MAA         
PSA_CR0ESaveArea_LW   DC XL4'00' Low word save area for low word of    X        
                              CR0                                  @MAA         
PSA_WindowWorkArea DC XL16'00' WorkArea for IEAMWIN                @0IA         
         ORG   PSA_WindowWorkArea                                               
PSA_WindowTodDelta DC XL8'00' Difference in TOD values - used in       X        
                         IEAMWIN PL/X                              @0IA         
         ORG   PSA_WindowTodDelta                                               
PSA_WindowTodDelta_HW DC XL4'00' High word area for difference in TOD  X        
                         values                                    @0IA         
PSA_WindowTodDelta_LW DC XL4'00' Low word area for difference in TOD   X        
                         values                                    @0IA         
         ORG   PSA_WindowWorkArea+L'PSA_WindowWorkArea                          
PSA_WindowLastOpenTod DC XL8'00' TOD when IEAMWIN last opened a window X        
                                                                   @0IA         
PSA_WindowCurrentTod  DC XL8'00' TOD when IEAMWIN last checked to open X        
                              a window                             @0IA         
PSARV600 DC    XL80'00' -     RESERVED                             @0IC         
PSA_TIME_ON_CP DC D'0' -      Current SRB's accumulated CPU time   @0CA         
*                             on a standard CP. This field         @0CA         
*                             must immediately precede PSATIME     @0CA         
*                             This field is valid only when there  @0CA         
*                             is at least one zCBP/zAAP or zIIP    @MTC         
*                             installed.                           @MTC         
PSATIME  DC    D'0' -         CURRENT SRB'S ACCUMULATED CPU TIME   @01C         
PSASRSAV DC    F'-1' -        ADDRESS OF CURRENT FRR STACK     @G383P9A         
*                             SAVED BY STOP/RESET.   (MDC605)  @G383P9A         
PSAESC8  DC    XL12'00' -     Save area for IEAVESC8               @LPA         
PSADEXMW DS    XL8  -         Work area for dispatcher CR3/4       @LVC         
PSADSARS DC    XL64'00' -     DISPATCHER ACCESS REGISTER SAVE AREA @L9C         
PSA_PCFLIH_TRACE_INTERRUPT_CPUT DS D - Trace interrupt CPU timer saved          
                                                                                
*                             by IEAVEPCO                          @0FC         
PSADTSAV DS    D -            CPU TIMER VALUE AT LAST DISPATCH,    @01C         
*                             SRBTIMER REQUEST, CPUTIMER EXPIRATION,            
*                             OR STATUS SAVE OR RESTORE.                        
         ORG   PSADTSAV                                        @ZMC3284         
PSAFF6C0 DC    (L'PSADTSAV)X'FF' INITIALIZE FIELD PSADTSAV     @ZMC3284         
         DS    0D                                                               
PSADEXMS DS   0XL16 -         DISPATCHER CONTROL REGISTER 3 AND 4               
*                             SAVE AREA              (MDC610)      @LVC         
PSADCR3  DS    0D -           DISPATCHER CONTROL REGISTER 3 SAVE AREA           
*                                                    (MDC610)  @G383P9A         
PSADSINS DC    F'-1' -        DISPATCHER Secondary ASTE Inst# S/A  @LVA         
PSADPKSA DS    0F    -        PKM and SASID                        @LVA         
PSADPKM  DC    H'-1' -        DISPATCHER PROGRAM KEY MASK SAVE AREA             
*                                                    (MDC610)  @G383P9A         
PSADSAS  DC    H'-1' -        DISPATCHER SECONDARY ASID SAVE AREA               
*                                                    (MDC610)  @G383P9A         
PSADCR4  DS    0D -           DISPATCHER CONTROL REGISTER 4 SAVE AREA           
*                                                    (MDC610)  @G383P9A         
PSADPINS DC    F'-1' -        DISPATCHER Primary ASTE Inst# S/A    @LVA         
PSADAXPA DS    0F    -        AX and PASID                         @LVA         
PSADAX   DC    H'-1' -        DISPATCHER  AUTHORIZATION        @G383P9A         
*                             INDEX SAVE AREA.       (MDC613)  @G383P9A         
PSADPAS  DC    H'-1' -        DISPATCHER PRIMARY ASID SAVE     @G383P9A         
*                             AREA.                  (MDC610)  @G383P9A         
PSA_TIME_ON_zCBP_Normalized DC D'0' - Current SRB's accumulated CPU             
*                             time on a zCBP. Normalized.          @MTA         
PSAUSEND DS    0D             END FIRST SET OF ASSIGNED FIELDS @G383PXU         
*                             SAVED BY ACR.                    @G383PXU         
PSARV6E0 DC    XL192'00' -    RESERVED                             @MTC         
PSAECVT  DS    D              Address of ECVT                      @M3A         
PSAXCVT  DS    D              Address of XCVT                      @M3A         
         DS    0D -           ALIGN PSADATLK ON DOUBLE WORD    @G860PXK         
PSADATLK DC    48XL1'00' -    AREA FOR DAT-OFF ASSIST LINKAGE CODE              
*                                                              @G860PXK         
PSADATOF DC    A(0) -         REAL STORAGE ADDRESS OF THE DAT-OFF               
*                             LINKAGE TABLE WHICH IS INITIALIZED BY             
*                             NIP FOR DAT-ON/DAT-OFF LINKAGE   @G860PXK         
PSADATLN DC    F'-1' -        LENGTH OF THE DAT-OFF INDEX TABLE                 
*                             (IEAVEDFT)                       @G860PXK         
PSATBVTV DC    A(0) -         VIRTUAL ADDRESS CORRESPONDING TO                  
*                             PSATBVTR.                            @MVM         
*                                                                 3@MVD         
PSATRACE DC    XL1'00' -      SYSTEM TRACE FLAGS.              @G860PXK         
PSATROFF EQU   X'80' -        IF ON, SYSTEM TRACE SUSPENDED ON THIS             
*                             PROCESSOR BECAUSE WAIT TASK DISPATCHED.           
*                                                              @G860PXK         
PSARV7ED DC    XL3'00' -      RESERVED FOR SYSTEM TRACE.           @PJC         
PSATBVTR DC    AD(0) -        REAL ADDRESS OF SYSTEM TRACE BUFFER               
*                             VECTOR TABLE (TBVT) REPRESENTING THE              
*                             CURRENT SYSTEM TRACE BUFFER FOR THIS              
*                             PROCESSOR.                                        
*                             OWNERSHIP: SYSTEM TRACE.                          
*                             SERIALIZATION: DISABLEMENT FOR EXTERNAL           
*                             INTERRUPTS ON THIS PROCESSOR OR THE               
*                             TRACE SPIN LOCK.                     @MVC         
PSATRVT  DC    V(IEAVETVT) -  ADDRESS OF SYSTEM TRACE VECTOR                    
*                             TABLE.                           @G860PXH         
PSATOT   DC    V(IEAVETOT) -  ADDRESS OF SYSTEM TRACE OPERAND                   
*                             TABLE.                           @G860PXK         
*                                                                               
***********************************************************************         
*              FETCH PROTECTED KEY 0 AREA                             *         
*                              LOCATIONS 800 TO FFF HEX               *         
***********************************************************************         
*                                                                               
PSAUS2ST DS    0D             START SECOND SET OF ASSIGNED     @G383PXU         
*                             FIELDS SAVED BY ACR.             @G383PXU         
PSACDSAV DS    0XL16          CALLDISP REGISTER SAVE AREA FOR  @G860PXK         
*                             REGISTERS 14 - 1                 @G383PXU         
PSACDSAE DC    F'-1'          CALLDISP REGISTER 14 SAVE AREA   @G383PXU         
PSACDSAF DC    F'-1'          CALLDISP REGISTER 15 SAVE AREA   @G383PXU         
PSACDSA0 DC    F'-1'          CALLDISP REGISTER 0  SAVE AREA   @G383PXU         
PSACDSA1 DC    F'-1'          CALLDISP REGISTER 1  SAVE AREA   @G383PXU         
PSAGSPSW DC    F'-1'          GLOBAL SCHEDULE SYSTEM MASK SAVE @ZA63674         
*                             AREA.                            @ZA63674         
*                             OWNERSHIP: SUPERVISOR CONTROL.   @ZA63674         
*                             SERIALIZATION: DISABLEMENT.      @ZA63674         
PSAGSRGS DC    F'-1'          GLOBAL SCHEDULE REGISTER SAVE    @ZA63674         
*                             AREA.                            @ZA63674         
*                             OWNERSHIP: SUPERVISOR CONTROL.   @ZA63674         
*                             SERIALIZATION: DISABLEMENT.      @ZA63674         
PSA_MasterAsteRealAddr DC  A(0)                                    @MUC         
PSASV01R DC    F'0'           IEAVTRG1 register 1 save area.       @PAA         
PSASV14R DC    F'0'           IEAVTRG1 register 14 save area.      @PAA         
PSAEMS2R DC    F'-1' -        REGISTER SAVE AREA                                
*                             OWNERSHIP: MEMORY SWITCH.                         
*                             SERIALIZATION: DISABLED.         @G860PXK         
PSATRSAV DS    0XL64  -       TRACE REGISTER SAVE AREA.        @G860PXH         
PSATRGR0 DC    F'-1' -        TRACE REGISTER 0 SAVE AREA.      @G860PXH         
PSATRGR1 DC    F'-1' -        TRACE REGISTER 1 SAVE AREA.      @G860PXH         
PSATRGR2 DC    F'-1' -        TRACE REGISTER 2 SAVE AREA.      @G860PXH         
PSATRGR3 DC    F'-1' -        TRACE REGISTER 3 SAVE AREA.      @G860PXH         
PSATRGR4 DC    F'-1' -        TRACE REGISTER 4 SAVE AREA.      @G860PXH         
PSATRGR5 DC    F'-1' -        TRACE REGISTER 5 SAVE AREA.      @G860PXH         
PSATRGR6 DC    F'-1' -        TRACE REGISTER 6 SAVE AREA.      @G860PXH         
PSATRGR7 DC    F'-1' -        TRACE REGISTER 7 SAVE AREA.      @G860PXH         
PSATRGR8 DC    F'-1' -        TRACE REGISTER 8 SAVE AREA.      @G860PXH         
PSATRGR9 DC    F'-1' -        TRACE REGISTER 9 SAVE AREA.      @G860PXH         
PSATRGRA DC    F'-1' -        TRACE REGISTER 10 SAVE AREA.     @G860PXH         
PSATRGRB DC    F'-1' -        TRACE REGISTER 11 SAVE AREA.     @G860PXH         
PSATRGRC DC    F'-1' -        TRACE REGISTER 12 SAVE AREA.     @G860PXH         
PSATRGRD DC    F'-1' -        TRACE REGISTER 13 SAVE AREA.     @G860PXH         
PSATRGRE DC    F'-1' -        TRACE REGISTER 14 SAVE AREA.     @G860PXH         
PSATRGRF DC    F'-1' -        TRACE REGISTER 15 SAVE AREA.     @G860PXH         
PSATRSV1 DC    XL4'00'  -     Trace Save 1                         @M8A         
PSATRSVS DC    XL4'00'  -     Trace Save for SLIP/PER              @M8A         
PSATRSV2 DC    XL8'00'  -     Trace Save 2                         @M8A         
PSARV878 DC    XL40'00' -     RESERVED.                            @M8A         
PSAGSAVH DS    XL8      -     Register save area used by           @09C         
*                             dispatcher                           @LVA         
         DS    0D -           ALIGN PSAGSAV TO DOUBLE WORD     @G860PXK         
PSAGSAV  DS    XL64 -         REGISTER SAVE AREA USED BY                        
*                             DISPATCHER AND SCHEDULE          @G860PXK         
         ORG   PSAGSAV                                         @ZMC3284         
PSAFF8A8 DC    (L'PSAGSAV)X'FF'  INITIALIZE FIELD PSAGSAV      @ZMC3284         
PSASCRG1 DC    F'-1' -        GLOBAL SCHEDULE REGISTER SAVE AREA                
*                                                              @G860PXK         
PSASCRG2 DC    F'-1' -        GLOBAL SCHEDULE REGISTER SAVE AREA                
*                                                              @G860PXK         
PSAGPREG DC    3F'-1' -       REGISTER SAVE AREA FOR SVC FLIH                   
*                             AND SCHEDULE                     @G860PXK         
PSARSREG DC    F'-1' -        RESTART FLIH REGISTER SAVE       @G860PXK         
PSAPCGR8 DC    F'-1' -        PROGRAM FLIH REGISTER 8 SAVE AREA                 
*                                                              @G860PXK         
PSAPCGR9 DC    F'-1' -        PROGRAM FLIH REGISTER 9 SAVE AREA                 
*                                                              @G860PXK         
PSAPCGAB DS    0D             PROGRAM FLIH REG 10-11 SAVE AREA     @LSA         
PSAPCGRA DC    F'-1' -        PROGRAM FLIH REGISTER 10 SAVE AREA                
*                                                              @G860PXK         
PSAPCGRB DC    F'-1' -        PROGRAM FLIH REGISTER 11 SAVE AREA                
*                                                              @G860PXK         
         DS    0D -           ALIGN PSALKSA TO DOUBLE WORD     @G860PXK         
PSALKSA  DS    0XL64 -        IEAVELK REGISTER SAVE AREA       @G860PXK         
*                             OWNERSHIP: SUPERVISOR CONTROL                     
*                             SERIALIZATION: DISABLEMENT                        
PSALKR0  DC    F'-1' -        IEAVELK REGISTER 0 SAVE AREA     @G860PXK         
PSALKR1  DC    F'-1' -        IEAVELK REGISTER 1 SAVE AREA     @G860PXK         
PSALKR2  DC    F'-1' -        IEAVELK REGISTER 2 SAVE AREA     @G860PXK         
PSALKR3  DC    F'-1' -        IEAVELK REGISTER 3 SAVE AREA     @G860PXK         
PSALKR4  DC    F'-1' -        IEAVELK REGISTER 4 SAVE AREA     @G860PXK         
PSALKR5  DC    F'-1' -        IEAVELK REGISTER 5 SAVE AREA     @G860PXK         
PSALKR6  DC    F'-1' -        IEAVELK REGISTER 6 SAVE AREA     @G860PXK         
PSALKR7  DC    F'-1' -        IEAVELK REGISTER 7 SAVE AREA     @G860PXK         
PSALKR8  DC    F'-1' -        IEAVELK REGISTER 8 SAVE AREA     @G860PXK         
PSALKR9  DC    F'-1' -        IEAVELK REGISTER 9 SAVE AREA     @G860PXK         
PSALKR10 DC    F'-1' -        IEAVELK REGISTER 10 SAVE AREA    @G860PXK         
PSALKR11 DC    F'-1' -        IEAVELK REGISTER 11 SAVE AREA    @G860PXK         
PSALKR12 DC    F'-1' -        IEAVELK REGISTER 12 SAVE AREA    @G860PXK         
PSALKR13 DC    F'-1' -        IEAVELK REGISTER 13 SAVE AREA    @G860PXK         
PSALKR14 DC    F'-1' -        IEAVELK REGISTER 14 SAVE AREA    @G860PXK         
PSALKR15 DC    F'-1' -        IEAVELK REGISTER 15 SAVE AREA    @G860PXK         
         DS    0D -           ALIGN PSASLSA TO DOUBLE WORD     @G860PXK         
PSASLSA  DS    XL72 -         SINGLE LEVEL SAVE AREA USED BY DISABLED           
*                             ROUTINES WITH NO DEPENDENCY THAT THE SAVE         
*                             AREA REMAIN INTACT ACROSS A CALL.                 
*                             THIS AREA IS NOT MAINTAINED BY RESTART            
*                             PROCESSING THAT RESULTS IN AN ABEND OF            
*                             OF THE INTERRUPTED ROUTINE.      @G860PXK         
         ORG   PSASLSA                                         @ZMC3284         
PSAFF950 DC    (L'PSASLSA)X'FF' INITIALIZE FIELD PSASLSA       @ZMC3284         
PSAJSTSA DC    XL64'00' -     SAVE AREA FOR JOB STEP TIMING        @H1A         
*                             ROUTINE.                                          
*                             OWNERSHIP: SUPERVISOR CONTROL.                    
*                             SERIALIZATION: DISABLEMENT.                       
         ORG   PSAJSTSA                                            @H1A         
PSAFF998 DC    (L'PSAJSTSA)X'FF' INITIALIZE FIELD PSAJSTSA         @H1A         
PSAUS2ND DS    0D             END SECOND SET OF ASSIGNED           @H1M         
*                             FIELDS SAVED BY ACR.                              
         DS    0D -           ALIGN PSASLKSA TO DOUBLE WORD        @P4A         
PSASLKSA DS    0XL64 -        IEAVESLK REGISTER SAVE AREA          @P4A         
*                             OWNERSHIP: SUPERVISOR CONTROL                     
*                             SERIALIZATION: DISABLEMENT                        
PSASLKR0 DC    F'-1' -        IEAVESLK REGISTER 0 SAVE AREA        @P4A         
PSASLKR1 DC    F'-1' -        IEAVESLK REGISTER 1 SAVE AREA        @P4A         
PSASLKR2 DC    F'-1' -        IEAVESLK REGISTER 2 SAVE AREA        @P4A         
PSASLKR3 DC    F'-1' -        IEAVESLK REGISTER 3 SAVE AREA        @P4A         
PSASLKR4 DC    F'-1' -        IEAVESLK REGISTER 4 SAVE AREA        @P4A         
PSASLKR5 DC    F'-1' -        IEAVESLK REGISTER 5 SAVE AREA        @P4A         
PSASLKR6 DC    F'-1' -        IEAVESLK REGISTER 6 SAVE AREA        @P4A         
PSASLKR7 DC    F'-1' -        IEAVESLK REGISTER 7 SAVE AREA        @P4A         
PSASLKR8 DC    F'-1' -        IEAVESLK REGISTER 8 SAVE AREA        @P4A         
PSASLKR9 DC    F'-1' -        IEAVESLK REGISTER 9 SAVE AREA        @P4A         
PSASLKRA DC    F'-1' -        IEAVESLK REGISTER 10 SAVE AREA       @P4A         
PSASLKRB DC    F'-1' -        IEAVESLK REGISTER 11 SAVE AREA       @P4A         
PSASLKRC DC    F'-1' -        IEAVESLK REGISTER 12 SAVE AREA       @P4A         
PSASLKRD DC    F'-1' -        IEAVESLK REGISTER 13 SAVE AREA       @P4A         
PSASLKRE DC    F'-1' -        IEAVESLK REGISTER 14 SAVE AREA       @P4A         
PSASLKRF DC    F'-1' -        IEAVESLK REGISTER 15 SAVE AREA       @P4A         
PSA_SETLOCKI_SaveArea DC XL8'00' SETLOCKI Register save area       @MSA         
PSA_LastLogCPUHeldLock DS F   When waiting to obtain a spin lock, the           
*                             last observed lockword content.      @MSA         
PSARVA24 DC    XL24'00' -     RESERVED                             @MSC         
PSASCSAV DC    XL64'00'       IEAVESC0 save area                   @P7A         
PSASFLGS DC    XL1'00'        Schedule flags                       @P8A         
*                             Ownership: Supervisor Control                     
*                             Serialization: Disablement                        
PSASCHDA EQU   X'80'          Schedule is active                   @LPA         
PSAMCHA  EQU   X'40'          Machine Check is active              @06A         
PSARSTA  EQU   X'20'          Restart is active                    @06A         
PSAEGRA  EQU   X'10'          Global Recovery is active            @06A         
PSARTMA  EQU   X'08'          Selected RTM functions are active    @06A         
PsaDontGetWeb EQU X'04'       A WEB or WEBQLOCK is held. IEAVESC0      -        
                              should not obtain a WEB.             @PLA         
PSAMISCF DC    XL1'00'        Miscellaneous flags                  @LVA         
*                             set ONLY at IPL.                                  
*                             Ownership: Supervisor Control                     
*                             Serialization: None                               
PSAALR   EQU   X'80'          Equivalent to CVTALR                 @LVA         
PSARVA7E DC    XL2'00'        Reserved for future use - SC1C5      @LVC         
PSARVA80 DC    XL188'00' -    RESERVED                             @P8C         
PSAGSCH7 DC    V(IEAVESC7) -  ENABLED GLOBAL SCHEDULE ENTRY                     
*                             POINT                            @G860PXK         
PSAGSCH8 DC    V(IEAVESC8) -  DISABLED GLOBAL SCHEDULE ENTRY                    
*                             POINT                            @G860PXK         
PSALSCH1 DC    V(IEAVESC1) -  ENABLED SCHEDULE ENTRY POINT                      
*                             (MDC371)                         @G50DP9A         
PSALSCH2 DC    V(IEAVESC2) -  DISABLED SCHEDULE ENTRY POINT                     
*                             (MDC372)                         @G50DP9A         
PSASVT   DC    V(IEAVESVT) -  ADDRESS OF SUPERVISOR VECTOR TABLE                
*                             (MDC373)                         @G50DP9A         
PSASVTX  DC    V(IEAVSVTX)    Address of Supervisor Vector Table   @LNC         
*                             extension.                                        
*                             SERIALIZATION: None                               
*                             OWNERSHIP: Supervisor Control                     
PSAFAFRR DS    0XL8           Fast FRR fields.  These fields are for            
*                             IBM use only.                        @PTC         
PSAFFRR  DC    A(0)           Fast FRR address.  This field is     @PSC         
*                             for IBM use only.                                 
*                             Serialization: CPU Lock, PSAFFRRS must            
*                             be set before PSAFFRR                             
*                             Ownership: RTM                                    
PSAFFRRS DC    A(0)           Fast FRR stack.  This field is       @PSA         
*                             for IBM use only.                                 
*                             Serialization: CPU Lock, PSAFFRRS must            
*                             be set before PSAFFRR                             
*                             Ownership: RTM                                    
PSARVB5C DC    XL36'00' -     Reserved                             @PSC         
         DS    0D -           ALIGN PSASTAK TO DOUBLE WORD       MDC118         
PSARVB80 DC    1112XL1'00' -  Reserved                             @0LC         
         ORG   PSARVB80                                            @0LC         
PSASTAK  DC    1112XL1'00' -  Do not use.                          @0LC         
PSARVFD8 DC    40XL1'00' -    Reserved                             @PJC         
PSAEND   DS    0D -           END OF PSA            (MDC612)   @G383P9A         
         AIF   ('&PSAE' EQ 'NO').NO_PSAE                           @MOA         
         ORG   PSA                                                              
         IHAPSAE DSECT=NO,TITLE=NO                                 @LSA         
         ORG   PSA+X'1000'                                                      
.NO_PSAE ANOP                                                      @MOA         
         POP   PRINT,USING                                     @G860PXK         
         MEND  , -         */                                                   
*%PSAL2 : ;                                                                     
*  @LISTPUSH;                                              /*@G860PXK*/         
*  %IF IHALIST='YES'  %THEN                                /*@G860PVB*/         
*     %GOTO PSA02;                                         /*@G860PVB*/         
*  @LISTOFF;                                               /*@G860PXK*/         
*  %PSA02:;                                                /*@G860PVB*/         
*                                                                               
*                                                                               
* %ASAXMACVALIDATED = '';                                  /*  031027*/         
* %ASAXMACP64 = 'CHAR(8)';                                 /*  031027*/         
* %DCL ASAXMAC_P31AS64 CHAR EXT;                           /*  120127*/         
* %ASAXMAC_P31AS64 = '';                                   /*  120127*/         
* %DCL ASAXMAC_READONLY CHAR EXT;                          /*  061215*/         
* %ASAXMAC_READONLY = '';                                  /*  061215*/         
* %DCL IHAPSA_READONLY CHAR EXT;    /* This is for fields that                  
*                         have different values on different CPUs, such         
*                         that it is imperative to re-fetch after a             
*                         STNSM, for example. If your module knows              
*                         that it is disabled for the entire module,            
*                         it may set this macro variable to                     
*                         'ReadOnly' to get maximal compiler                    
*                         performance benefits                   @POA*/         
* %DCL ASAXMAC_BYPASS CHAR EXT;                            /*  061215*/         
* %IF ASAXMAC_BYPASS ^= '' %THEN %GOTO PSAPLS4;            /*  061215*/         
* %IF SYSVERSION = '' %THEN %GOTO PSAPLS4;                 /*    @H4A*/         
* %IF SYSRULESMOD='PL/S-III ' %THEN %GOTO PSAPLS4;         /*    @H4A*/         
* ?ASAXMAC ISITPLX(1,2,0);                                 /*    @H4A*/         
* %DCL ASAXMAC_ISITPLX CHAR EXT;                           /*    @H4A*/         
* %IF ASAXMAC_ISITPLX ^= 'YES' %THEN %GOTO PSAPLS0;        /*    @H4C*/         
* ?ASAXMAC SetEsameInfo;                                   /*  031027*/         
*%PSAPLS0:;                                                /*  031027*/         
*%PSAPLS4:;                                                /*    @H4A*/         
*DECLARE                                                                        
*%IF IBM_CBGENC = 'YES' %THEN                                                   
*  %PSABASE = 'Based(PSAPTR)';                                                  
*%IF PSABASE=''  %THEN                                                          
*    %GOTO PSA0010;                                                             
*  1 PSA      PSABASE BDY(DWORD),                                               
*%GOTO PSA0030;                                                                 
*%PSA0010 : ;                                                                   
*  1 PSA      LOCATION(0) BDY(DWORD),                                           
*%PSA0030 : ;                                                                   
*   2 FLCIPPSW    CHAR(8) BDY(DWORD),    /* IPL PSW          @ZMC1966*/         
*    3 FLCRNPSW    CHAR(8) BDY(DWORD),   /* RESTART NEW PSW (AFTER              
*                                           IPL)             @ZMC1966*/         
*   2 FLCICCW1    CHAR(8) BDY(DWORD),    /* IPL CCW1         @ZMC1966*/         
*    3 FLCROPSW    CHAR(8) BDY(DWORD),   /* RESTART OLD PSW (AFTER              
*                                           IPL)             @ZMC1966*/         
*   2 FLCICCW2    CHAR(8) BDY(DWORD),    /* IPL CCW2                 */         
*    3 FLCCVT      PTR(31) ASAXMAC_READONLY ASAXMAC_P31AS64                     
*                         ,              /* ADDRESS OF CVT (AFTER               
*                                           IPL).            @G50EP9A*/         
*    3 *           CHAR(4),              /* RESERVED (AFTER IPL)                
*                                           (MDC431)         @ZM48214*/         
*   2 FLCEOPSW    CHAR(8) BDY(DWORD),    /* EXTERNAL OLD PSW         */         
*   2 FLCSOPSW    CHAR(8) BDY(DWORD),    /* SVC OLD PSW.  THIS OFFSET           
*                                           FIXED BY ARCHITECTURE.              
*                                           (MDC451)         @G50EP9A*/         
*   2 FLCPOPSW    CHAR(8) BDY(DWORD),    /* PROGRAM CHECK OLD PSW    */         
*   2 FLCMOPSW    CHAR(8) BDY(DWORD),    /* MACHINE CHECK OLD PSW    */         
*   2 FLCIOPSW    CHAR(8) BDY(DWORD),    /* INPUT/OUTPUT OLD PSW     */         
*   2 *           CHAR(8),               /* RESERVED         @G860PXK*/         
*   2 FLCCVT64 ASAXMACP64 ASAXMACVALIDATED ASAXMAC_READONLY                     
*                         BDY(DWORD),    /* 8-byte pointer       @H3A*/         
*     3 *         CHAR(4),               /* RESERVED         @G860PXK*/         
*     3 FLCCVT2   PTR(31) ASAXMAC_READONLY ASAXMAC_P31AS64                      
*                        ,               /* ADDRESS OF CVT - USED BY            
*                                           DUMP ROUTINES      ICB319*/         
*   2 *           CHAR(4),               /* RESERVED.        @G860PXH*/         
*   2 *           CHAR(4),               /* RESERVED - FLCTRACE                 
*                                           DELETED DUE TO SYSTEM               
*                                           TRACE REDESIGN.  @G860PXK*/         
*   2 FLCENPSW    CHAR(8) BDY(DWORD),    /* EXTERNAL NEW PSW         */         
*   2 FLCSNPSW    CHAR(8) BDY(DWORD),    /* SVC NEW PSW              */         
*   2 FLCPNPSW    CHAR(8) BDY(DWORD),    /* PROGRAM CHECK NEW PSW    */         
*   2 FLCMNPSW    CHAR(8) BDY(DWORD),    /* MACHINE CHECK NEW PSW    */         
*   2 FLCINPSW    CHAR(8) BDY(DWORD),    /* INPUT/OUTPUT NEW PSW     */         
*   2 PSAEPARM    FIXED(31),             /* EXTERNAL INTERRUPTION               
*                                           PARAMETER FIELD                     
*                                                   (MDC473) @G871A9A*/         
*   2 PSAEEPSW    CHAR(4) BDY(WORD),     /* EXTENDED PSW DATA STORED            
*                                           ON EXTERNAL INTERRUPT               
*                                                              MDC084*/         
*    3 PSASPAD     FIXED(15),            /* ISSUING PROCESSOR'S                 
*                                           PHYSICAL ADDRESS ON MFA,            
*                                           EMS, OR EXTERNAL CALL               
*                                           INTERRUPT          MDC046*/         
*    3 FLCEICOD    FIXED(15),            /* EXTERNAL INTERRUPTION               
*                                           CODE                     */         
*   2 PSAESPSW    CHAR(4) BDY(WORD),     /* EXTENDED PSW DATA STORED            
*                                           ON SVC INTERRUPT   MDC085*/         
*    3 *           CHAR(1),              /* RESERVED - SET TO ZERO   */         
*    3 FLCSVILC    FIXED(8),             /* SVC INSTRUCTION LENGTH              
*                                           COUNTER - NUMBER OF                 
*                                           BYTES.  THIS OFFSET FIXED           
*                                           BY ARCHITECTURE.                    
*                                           (MDC454)         @G50EP9A*/         
*     4 *        BIT(5),                 /* ALWAYS ZERO              */         
*     4 FLCSILCB BIT(3),                 /* SIGNIFICANT BITS IN ILC             
*                                           FIELD - LAST BIT IS                 
*                                           ALWAYS ZERO        MDC080*/         
*    3 FLCSVCN     FIXED(15),            /* SVC INTERRUPTION CODE -             
*                                           SVC NUMBER.  THIS OFFSET            
*                                           FIXED BY ARCHITECTURE.              
*                                           (MDC455)         @G50EP9A*/         
*   2 PSAEPPSW    CHAR(8) BDY(WORD),     /* EXTENDED PSW FOR PROGRAM            
*                                           INTERRUPT          MDC086*/         
*    3 *           CHAR(1),              /* RESERVED - SET TO ZERO   */         
*    3 FLCPIILC    FIXED(8),             /* PROGRAM INSTRUCTION                 
*                                           LENGTH COUNTER - NUMBER             
*                                           OF BYTES IN INSTRUCTION             
*                                           CAUSING PROGRAM                     
*                                           INTERRUPTION. THIS OFFSET           
*                                           FIXED BY ARCHITECTURE.              
*                                           (MDC456)         @G50EP9A*/         
*     4 *        BIT(5),                 /* ALWAYS ZERO              */         
*     4 FLCPILCB BIT(3),                 /* SIGNIFICANT BITS IN ILC             
*                                           FIELD - LAST BIT IS                 
*                                           ALWAYS ZERO        MDC083*/         
*    3 FLCPICOD    FIXED(15),            /* PROGRAM INTERRUPTION                
*                                           CODE                     */         
*     4 PSAEECOD    FIXED(8),            /* EXCEPTION-EXTENSION CODE.           
*                                                                @03C*/         
*     4 PSAPICOD    FIXED(8),            /* 8-BIT INTERRUPT CODE.               
*                                           THIS OFFSET FIXED BY                
*                                           ARCHITECTURE.                       
*                                           (MDC457)         @G50EP9A*/         
*      5 PSAPIPER BIT(1),                /* PER INTERRUPT OCCURRED              
*                                                              MDC089*/         
*      5 PSAPIMC  BIT(1),                /* MONITOR CALL INTERRUPT              
*                                           OCCURRED           MDC090*/         
*      5 PSAPIPC  BIT(6),                /* AN UNSOLICITED PROGRAM              
*                                           CHECK HAS OCCURRED IF ANY           
*                                           OF THESE 6 BITS ARE ON              
*                                                              MDC091*/         
*    3 FLCTEA      PTR(31),              /* TRANSLATION EXCEPTION               
*                                           ADDRESS.  THIS OFFSET               
*                                           FIXED BY ARCHITECTURE.              
*                                                            @G860PXK*/         
*      4 FLCTEAXM  BIT(1),               /* IF 0 FLCTEA IS RELATIVE TO          
*                                           PRIMARY SEGMENT TABLE,              
*                                           IF 1 FLCTEA IS RELATIVE TO          
*                                           SECONDARY SEGMENT TABLE             
*                                                            @G860PXK*/         
*      4 *         BIT(23),              /*                      @L8A*/         
*      4 FLCDXC    FIXED(8),             /* Data exception code,                
*                                           only for PI 7        @LRA*/         
*        5 FLCTEAB3 BIT(8),              /* LAST BYTE OF TEA     @L8A*/         
*          6 *       BIT(5),             /*                      @LQC*/         
*          6 FLCSOPI BIT(1),             /* Suppression on protection           
*                                           indicator            @LQA*/         
*          6 FLCTSTD BIT(2),             /* STD FIELD - LAST TWO BITS           
*                                           OF FLCTEA:                          
*                                           '00' - PRIMARY STD USED             
*                                           '01' - STD WAS AR QUALIFIED         
*                                           '10' - SECONDARY STD USED           
*                                           '11' - HOME STD USED.               
*                                                                @L8A*/         
*%FLCTSTDP='''00''B';                    /* THE PRIMARY STD WAS USED.           
*                                                                @L8A*/         
*%FLCTSTDA='''01''B';                    /* THE STD WAS AR QUALIFIED.           
*                                                                @L8A*/         
*%FLCTSTDS='''10''B';                    /* THE SECONDARY STD WAS USED.         
*                                                                @L8A*/         
*%FLCTSTDH='''11''B';                    /* THE HOME STD WAS USED.              
*                                                                @L8A*/         
*   2 *           CHAR(1),               /* RESERVED - SET TO ZERO   */         
*   2 FLCMCNUM    FIXED(8),              /* MONITOR CLASS NUMBER     */         
*   2 FLCPERCD    CHAR(1),               /* PROGRAM EVENT RECORDING             
*                                           CODE                     */         
*   2 FLCATMID    CHAR(1),               /* ATM ID               @LSA*/         
*   2 FLCPER      PTR(31),               /* PER ADDRESS (ESA/390)    */         
*   2 *           CHAR(1),               /* RESERVED - SET TO ZERO   */         
*   2 FLCMTRCD    CHAR(3),               /* MONITOR CODE (ESA/390)   */         
*   2 FLCTEARN    FIXED(8),              /* CONTAINS THE ACCESS                 
*                                           REGISTER NUMBER INVOLVED            
*                                           IN THE TRANSLATION                  
*                                           EXCEPTION IF BITS 30-31 OF          
*                                           THE TEA='01'.        @L8C*/         
*   2 FLCPERRN    CHAR(1),               /* CONTAINS THE PER STORAGE            
*                                           ACCESS REGISTER NUMBER              
*                                                                @L8A*/         
*   2 *           CHAR(1),               /* RESERVED             @LSC*/         
*   2 FLCARCH     CHAR(1),               /* Architecture info    @LSA*/         
*     4 *        BIT(7),                 /*                      @LSA*/         
*     4 PSAZARCH BIT(1),                 /* z/Architecture       @LSA*/         
*       5 PSAESAME BIT(1),               /* z/Architecture       @LSA*/         
*   2 PSAMPL PTR(31),                    /* Used only prior to                  
*                                           z/Architecture       @MFC*/         
*   2 *           CHAR(344) BDY(DWORD),  /* MACHINE CHECK LOGOUT                
*                                           AREA             @G860PVB*/         
*    3 *           CHAR(16),             /* RESERVED (ESA/390)       */         
*    3 FLCIOCDP    CHAR(8),              /* I/O INFORMATION CODE                
*                                                            @G860PVB*/         
*     4 FLCSID      CHAR(4),             /* SUBSYSTEM ID     @G860PVB*/         
*     4 FLCIOFP     CHAR(4),             /* I/O INTERRUPTION PARAMETER          
*                                                            @G860PVB*/         
*    3 *           CHAR(8),              /* RESERVED             @LRC*/         
*    3 FLCFACL     CHAR(16),             /* Facilities List.                    
*                          See FaclBytes0to15 in IHAFACL for                    
*                          description                           @PHC*/         
*     4 FLCFACL0   BIT(8),               /* Byte 0 of FLCFACL    @LVA*/         
*      5 FLCFN3    BIT(1),               /* N3 installed         @LVA*/         
*      5 FLCFZARI  BIT(1),               /* z/Arch installed     @LVA*/         
*      5 FLCFZARA  BIT(1),               /* z/Arch active        @LVA*/         
*      5 *         BIT(3),               /* reserved             @LVA*/         
*      5 FLCFASLX  BIT(1),               /* ASN & LX Reuse facility             
*                                           installed            @LVA*/         
*      5 *         BIT(1),               /* reserved             @LVA*/         
*     4 FLCFACL1   BIT(8),               /* Byte 1 of FLCFACL    @LVA*/         
*      5 FLCFEDAT  BIT(1),               /* DAT features         @0BC*/         
*      5 FLCFSRS   BIT(1),               /* Sense-running-status @LZA*/         
*      5 FLCFSSKE  BIT(1),               /* Cond. SSKE installed @0AA*/         
*      5 FLCFCTOP  BIT(1),               /* STSI-enhancement     @LYA*/         
*      5 *         BIT(4),               /* Reserved             @0BC*/         
*     4 FLCFACL2   BIT(8),               /* Byte 2 of FLCFACL    @LVA*/         
*      5 FLCFETF2  BIT(1),               /* ETF 2                @LVA*/         
*      5 FLCFCRYA  BIT(1),               /* Cryptographic assist @LVA*/         
*      5 FLCFLD    BIT(1),               /* Long displacement    @LVA*/         
*      5 FLCFLDHP  BIT(1),               /* Long displacement high              
*                                           performance          @LVA*/         
*      5 FLCFHMAS  BIT(1),               /* HFP Multiply Add/Subtract           
*                                                                @LVA*/         
*      5 FLCFEIMM  BIT(1),               /* Extended immediate, when            
*                                           z/Arch               @LVA*/         
*      5 FLCFETF3  BIT(1),               /* ETF 3, when z/Arch   @LVA*/         
*      5 FLCFHUN   BIT(1),               /* HFP unnormalized                    
*                                           extension            @LVA*/         
*     4 FLCFACL3   BIT(8),               /* Byte 3 of FLCFACL    @LVA*/         
*      5 FLCFET2E  BIT(1),               /* ETF 2 enhancement  031215*/         
*      5 FLCFSTKF  BIT(1),               /* STCKF enhancement    @PIA*/         
*      5 *         BIT(4),               /* Reserved           040512*/         
*      5 FLCFET3E  BIT(1),               /* ETF 3 enhancement  040512*/         
*      5 FLCFECT   BIT(1),               /* ECT facility         @LXA*/         
*     4 FLCFACL4   BIT(8),               /* Byte 4 of FLCFACL    @PHA*/         
*      5 FLCFCSSF  BIT(1),               /* Compare-and-swap-and-store          
*                                                                @LXA*/         
*      5 FLCFCSF2  BIT(1),               /* Compare-and-swap-and-store          
*                                           2                    @LXA*/         
*      5 FLCFGIEF  BIT(1),               /* General-Instructions-Ext            
*                                           Facility             @M0A*/         
*      5 *         BIT(4),               /*                      @PNC*/         
*      5 FLCFOCM   BIT(1),               /* Obsolete CPU-measurement            
*                                           facility.  Use FLCECMC              
*                                           and FLCECMS instead. @PNC*/         
*     4 FLCFACL5   BIT(8),               /* Byte 5 of FLCFACL    @PHA*/         
*       5 * BIT(1),                      /*                      @PMA*/         
*       5 FLCFFPSE BIT(1),               /* Floating-point-support              
*                                           enhancement facility @PMA*/         
*       5 FLCFDFP  BIT(1),               /* Decimal-floating-point              
*                                           facility             @PMA*/         
*       5 FLCFDFPH BIT(1),               /* Decimal-floating-point              
*                                           facility high performance           
*                                                                @PMA*/         
*       5 FLCFPFPO BIT(1),               /* PFPO instruction   070424*/         
*     4 FLCFACL6   BIT(8),               /* Byte 6 of FLCFACL    @PHA*/         
*     4 FLCFACL7   BIT(8),               /* Byte 7 of FLCFACL    @PHA*/         
*     4 FLCFACL8   BIT(8),               /* Byte 8 of FLCFACL    @PNC*/         
*       5 * BIT(1),                      /*                      @M5C*/         
*       5 FLCFCAAI BIT(1),               /* Crypto AP-Queue adapter             
*                                           interruption         @M5A*/         
*       5 * BIT(1),                      /*                      @M5A*/         
*       5 FLCFCMC  BIT(1),               /* CPU-measurement                     
*                                           counter facility     @PNC*/         
*       5 FLCFCMS  BIT(1),               /* CPU-measurement                     
*                                           sampling facility    @PNC*/         
*       5 FLCFSCLP BIT(1),               /* Possible future enhancement         
*                                                                @M7A*/         
*       5 FLCFAISI BIT(1),               /* AISI facility        @PPA*/         
*       5 FLCFAEN  BIT(1),               /* AEN facility         @PPA*/         
*     4 FLCFACL9   BIT(8),               /* Byte 9 of FLCFACL    @PPA*/         
*       5 FLCFAIS  BIT(1),               /* AIS facility         @PPA*/         
*       5 * BIT(7),                      /*                      @PPA*/         
*    3 FLCFACLE    CHAR(16),             /* Facilities List bytes               
*                                           16-31. See FaclBytes16To31          
*                                           in IHAFACL for description          
*                                                                @MMC*/         
* /*                                                            2@MMD*/         
*    3 FLCMCIC     CHAR(8),              /* MACHINE-CHECK INTERRUPTION          
*                                           CODE             @G860PVB*/         
*    3 *           CHAR(8),              /* RESERVED - SET TO ZERO              
*                                                            @ZMC2173*/         
*    3 FLCFSA      PTR(31),              /* FAILING STORAGE ADDRESS             
*                                           (ESA/390)                */         
*    3 *           CHAR(4),              /* RESERVED - SET TO ZERO              
*                                           (ESA/390)                */         
*    3 FLCFLA      CHAR(16) BDY(WORD),   /* FIXED LOGOUT AREA.  SIZE            
*                                           FIXED BY ARCHITECTURE               
*                                                                @L9C*/         
*    3 FLCRV110    CHAR(16) BDY(WORD),   /* RESERVED.            @L9A*/         
*    3 FLCARSAV    (16) FIXED(32),       /* ACCESS REGISTER SAVE                
*                                           AREA                 @L9A*/         
*    3 FLCFPSAV    CHAR(32) BDY(DWORD),  /* FLOATING POINT REGISTER             
*                                           SAVE AREA                */         
*    3 FLCGRSAV (16) FIXED(31),          /* GENERAL REGISTER SAVE               
*                                           AREA                     */         
*    3 FLCCRSAV (16) FIXED(31),          /* CONTROL REGISTER SAVE               
*                                           AREA                     */         
*   2 FLCHDEND    CHAR(0) BDY(DWORD),    /* END OF HARDWARE                     
*                                           ASSIGNMENTS              */         
*   2 PSAPSA      CHAR(4) BDY(WORD),     /* CONTROL BLOCK ACRONYM IN            
*                                           EBCDIC                   */         
*   2 PSACPUPA    FIXED(15),             /* PHYSICAL CPU ADDRESS                
*                                           (CHANGED DURING ACR) @PCC*/         
*   2 PSACPULA    FIXED(15),             /* LOGICAL CPU ADDRESS  @PCC*/         
*   2 PSAPCCAV PTR(31) IHAPSA_READONLY ASAXMAC_P31AS64                          
*                                     ,  /* VIRTUAL ADDRESS OF PCCA             
*                                                                @POC*/         
*   2 PSAPCCAR    PTR(31),               /* REAL ADDRESS OF PCCA     */         
*   2 PSALCCAV PTR(31) IHAPSA_READONLY ASAXMAC_P31AS64                          
*                                     ,  /* VIRTUAL ADDRESS OF LCCA             
*                                                                @POC*/         
*   2 PSALCCAR    PTR(31),               /* REAL ADDRESS OF LCCA     */         
*   2 PSATNEW     PTR(31),               /* TCB pointer. Field                  
*                                           maintained for code                 
*                                           compatability with previous         
*                                           MVS releases. DO NOT USE.           
*                                                                @LQC*/         
*   2 PSATOLD PTR(31) ASAXMAC_READONLY ASAXMAC_P31AS64                          
*                                     ,  /* Pointer to current TCB or           
*                                           zero if in SRB mode. @LQC*/         
*   2 PSAANEW     PTR(31),               /* ASCB pointer. Field                 
*                                           maintained for code                 
*                                           compatability with previous         
*                                           MVS releases. DO NOT USE.           
*                                                                @LQC*/         
*   2 PSAAOLD PTR(31) ASAXMAC_READONLY ASAXMAC_P31AS64                          
*                                     ,  /* Pointer to home (current)           
*                                                                @LQC*/         
*   2 PSASUPER    CHAR(4) BDY(WORD),     /* SUPERVISOR CONTROL WORD.            
*                                                            @G50EP9A*/         
*    3 PSASUP1     BIT(8),               /* FIRST BYTE OF PSASUPER   */         
*     4 PSAIO    BIT(1),                 /* I/O FLIH                 */         
*     4 PSASVC   BIT(1),                 /* SVC FLIH                 */         
*     4 PSAEXT   BIT(1),                 /* EXTERNAL FLIH            */         
*     4 PSAPI    BIT(1),                 /* PROGRAM CHECK FLIH       */         
*     4 PSALOCK  BIT(1),                 /* LOCK ROUTINE             */         
*     4 PSADISP  BIT(1),                 /* DISPATCHER               */         
*     4 PSATCTL  BIT(1),                 /* TCTL RECOVERY FLAG                  
*                                           (MDC310)         @Z40FP9A*/         
*     4 PSATYPE6 BIT(1),                 /* TYPE 6 SVC IN CONTROL               
*                                           (MDC311)         @Z40FP9A*/         
*    3 PSASUP2     BIT(8),               /* SECOND BYTE OF PSASUPER  */         
*     4 PSAIPCRI BIT(1),                 /* REMOTE IMMEDIATE SIGNAL             
*                                           SERVICE ROUTINE. (IEAVERI)          
*                                                            @G860PXK*/         
*     4 PSASVCR  BIT(1),                 /* SUPER FRR USES FOR                  
*                                           SVC FLIH RECURSION                  
*                                           TRACKING         @ZMC3227*/         
*     4 PSASVCRR BIT(1),                 /* SVC RECOVERY RECURSION              
*                                           INDICATOR.                          
*                                           OWNER: SUPERVISOR CONTROL.          
*                                           SERIALIZATION: DISABLEMENT.         
*                                                                @L6A*/         
*     4 *        BIT(2),                 /* RESERVED             @L6C*/         
*     4 PSAACR   BIT(1),                 /* AUTOMATIC CPU                       
*                                           RECONFIGURATION (ACR) IN            
*                                           CONTROL            MDC119*/         
*     4 PSARTM   BIT(1),                 /* RECOVERY TERMINATION                
*                                           MONITOR (RTM) IN CONTROL            
*                                                              MDC120*/         
*     4 PSALCR   BIT(1),                 /* USED BY RTM TO SERIALIZE            
*                                           CALLS OF THE SUPERVISOR             
*                                           ANALYSIS ROUTER      @L5C*/         
*    3 PSASUP3     BIT(8),               /* THIRD BYTE OF PSASUPER   */         
*     4 PSAIOSUP BIT(1),                 /* IF ON, A MAINLINE IOS               
*                                           COMPONENT SUCH AS CHANNEL           
*                                           SCHEDULER HAS ENTERED A             
*                                           PHYSICALLY DISABLED STATE           
*                                           WITHOUT REGARD TO LOCKING           
*                                           REQUIREMENTS       MDC127*/         
*     4 *        BIT(2),                 /* RESERVED         @G860PXK*/         
*     4 PSASPR   BIT(1),                 /* SUPER FRR IS ACTIVE                 
*                                           (MDC305)         @ZA02995*/         
*     4 PSAESTA  BIT(1),                 /* SVC 60 RECOVERY ROUTINE             
*                                           ACTIVE  (MDC312) @G50DP9A*/         
*     4 PSARSM   BIT(1),                 /* REAL STORAGE MANAGER                
*                                           (RSM) ENTERED FOR PAGE              
*                                           FIX  (MDC321)    @G50DP9A*/         
*     4 PSAULCMS BIT(1),                 /* LOCK MANAGER                        
*                                           UNCONDITIONAL LOCAL OR              
*                                           CMS LOCK ROUTINES                   
*                                           (MDC469)         @ZA28594*/         
*     4 PSASLIP BIT(1),                  /* IEAVTSLP RECURSION                  
*                                           CONTROL BIT                         
*                                           (MDC471)         @G65RP9A*/         
*    3 PSASUP4     BIT(8),               /* FOURTH BYTE OF PSASUPER  */         
*     4 PSALDWT  BIT(1),                 /* BLWLDWT IS IN CONTROL TO            
*                                           LOAD A RESTARTABLE OR NON-          
*                                           RESTARTABLE WAIT STATE CODE         
*                                           OWNERSHIP: LDWT      @LHC*/         
*     4 PSASMF   BIT(1),                 /* SMF SUSPEND/RESET                   
*                                           (MDC599)         @G743PBB*/         
*     4 PSAESAR  BIT(1),                 /* SUPERVISOR ANALYSIS ROUTER          
*                                           IS ACTIVE            @L5C*/         
*     4 PSAMCH   BIT(1),                 /* Machine Check Handler is            
*                                           active.              @PKA*/         
*     4 *        BIT(4),                 /* RESERVED             @PKC*/         
*   2 PSARV22C   CHAR(9),                /* RESERVED             @MKC*/         
*   2 *          CHAR(7) BDY(HWORD,2),   /* RESERVED             @MKC*/         
* %IF ASAXMAC_ISITPLX ^= 'YES' %THEN %GOTO PSAPLX2;        /*    @H4C*/         
*   3 PSA_WorkUnit_CBF_AtDisp Char(2),                        /* @MHA*/         
*   3 PSARV237   CHAR(1),                /* RESERVED             @MKC*/         
*   3 PSA_WorkUnit_ProcClassAtDisp Fixed(15) Unsigned,        /* @MCA*/         
*     5 PSA_WorkUnit_ProcClassAtDisp_Byte0 Fixed(8), /*          @MCA*/         
*     5 PSA_WorkUnit_ProcClassAtDisp_Byte1 Fixed(8), /*          @MCA*/         
*   3 PSAProcClass FIXED(15) Unsigned,   /* Processor Class.                    
*                             This field is for IBM use only.                   
*                                           OWNERSHIP: SUPERVISOR               
*                                           CONTROL.                            
*                                           SERIALIZATION:                      
*                                             READ = NONE                       
*                                             WRITE = NO WRITE ALLOWED.         
*                                       See PSAProcClass_xxx                    
*                                       constants.               @H4A*/         
*   4 PSA_ByLPAR_ProcClass FIXED(15) Unsigned,                /* @H5A*/         
*     5 PSAProcClass_Byte0 Fixed(8),     /*                      @H4A*/         
*      6 PSA_ByLPAR_ProcClass_Byte0 Fixed(8), /*                 @H5A*/         
*     5 PSAProcClass_Byte1 Fixed(8),     /*                      @H4A*/         
*      6 PSA_ByLPAR_ProcClass_Byte1 Fixed(8), /*                 @H5A*/         
* %PSAPLX2:;                                               /*    @H4A*/         
*   2 PSAPTYPE    CHAR(1),               /* PROCESSOR TYPE INDICATOR.           
*                                           OWNERSHIP: SUPERVISOR               
*                                           CONTROL.                            
*                                           SERIALIZATION:                      
*                                             READ = NONE                       
*                                             WRITE = DISABLEMENT               
*                                                                @H1A*/         
*     3 * BIT(1),                                                               
*     3 PSAIFA     BIT(1),               /* Indicates Special                   
*                                           Processor            @H3A*/         
* %IF ASAXMAC_ISITPLX ^= 'YES' %THEN %GOTO PSAPLX2A;       /*    @H5A*/         
*      4 PSA_ByLPAR_zCBP BIT(1),                           /*    @MTA*/         
*       5 PSA_ByLPAR_zAAP BIT(1),                          /*    @H5A*/         
*         7 PSA_ByLPAR_IFA BIT(1),                         /*    @H5A*/         
* %PSAPLX2A:;                                              /*    @H5A*/         
*     3 * BIT(1),                                          /*    @PUA*/         
* %IF ASAXMAC_ISITPLX ^= 'YES' %THEN %GOTO PSAPLX2B;       /*    @PUA*/         
*       4 PSAzCBPDS BIT(1),              /* zCBP that is different              
*                                           speed than CP        @PUC*/         
* %PSAPLX2B:;                                              /*    @PUA*/         
*         5 PSAIFADS BIT(1),             /* zAAP (IFA) that is                  
*                                           different speed                     
*                                           than CP              @PUC*/         
*     3 PSADSCRP   BIT(1),               /* Discretionary Processor             
*                                                                @LYA*/         
* %IF ASAXMAC_ISITPLX ^= 'YES' %THEN %GOTO PSAPLX3;        /*    @H4C*/         
*     3 PSAZIIP    BIT(1),               /* Indicates zIIP       @H4A*/         
*       5 PSASUP   BIT(1),               /* Indicates zIIP       @H4A*/         
*         7 PSA_ByLPAR_zIIP BIT(1),      /* Indicates zIIP       @H5A*/         
*           9 PSA_ByLPAR_SUP BIT(1),     /* Indicates zIIP       @H5A*/         
*     3 PSAzIIPDS  BIT(1),               /* zIIP that is different              
*                                           speed than CP        @H4C*/         
*       5 PSASUPDS BIT(1),                                                      
*     3 PSAPTRSV   BIT(2),              /* Reserved. Do not use. @H5C*/         
* %PSAPLX3:;                                               /*    @H4A*/         
*   2 PSAILS      CHAR(1),               /* INTERRUPT HANDLER LINKAGE           
*                                           STACK INDICATORS.    @L9C*/         
*     3 PSAILSIO   BIT(1),               /* THE I/O FLIH IS USING               
*                                           THE INTERRUPT HANDLER               
*                                           LINKAGE STACK.       @L9A*/         
*     3 PSAILSEX   BIT(1),               /* THE EXTERNAL FLIH IS USING          
*                                           THE INTERRUPT HANDLER               
*                                           LINKAGE STACK.       @L9A*/         
*     3 PSAILSPC   BIT(1),               /* THE PROGRAM FLIH IS USING           
*                                           THE INTERRUPT HANDLER               
*                                           LINKAGE STACK.       @L9A*/         
*     3 PSAILSDS   BIT(1),               /* THE DISPATCHER IS USING             
*                                           THE INTERRUPT HANDLER               
*                                           LINKAGE STACK.       @L9A*/         
*     3 PSAILSRS   BIT(1),               /* THE RESTART FLIH IS USING           
*                                           THE INTERRUPT HANDLER               
*                                           LINKAGE STACK.       @L9A*/         
*     3 PSAILSOR   BIT(1),               /* EXIT IS USING THE INTERRUPT         
*                                           HANDLER LINKAGE STACK@LAA*/         
*     3 PSAILST6   BIT(1),               /* TYPE 6 SVC IS USING THE             
*                                           INTERRUPT HANDLER LINKAGE           
*                                           STACK                @D2A*/         
*     3 PSAILSLK   BIT(1),               /* THE INTERRUPT HANDLER               
*                                           LINKAGE STACK IS ACTIVE             
*                                           BECAUSE THE RSM LOCK OR             
*                                           A LOCK HIGHER THAN THE              
*                                           RSM LOCK IS HELD.    @D4A*/         
*   2 PSALSVCI    FIXED(15),             /* LAST SVC ISSUED ON                  
*                                           THIS PROCESSOR PRIOR TO             
*                                           ENABLEMENT BY THE SVC               
*                                           FLIH                 @L6A*/         
*   2 PSAFLAGS    CHAR(1),               /* SYSTEM FLAGS                        
*                                           This field is PI for bits           
*                                           PSATX and PSATXC only               
*                                           OWNERSHIP: SUPERVISOR               
*                                           CONTROL.                            
*                                           SERIALIZATION: DISABLEMENT          
*                                           SERIALIZATION: None for PI          
*                                            bits                @LOA*/         
*     3 PSAAEIT    BIT(1),               /* ADDRESSING ENVIRONMENT IS           
*                                           IN TRANSITION. INDICATES            
*                                           THAT THE SPACE TYPE                 
*                                           (ADDRESS SPACE OR SUBSPACE)         
*                                           ASSOCIATED WITH PASN OR             
*                                           SASN IS UNKNOWN.     @LOA*/         
*     3 *         BIT(1),                /* Was PSAFPAC          @MED*/         
*     3 *         BIT(1),                /* Was PSAFPPE          @MED*/         
*     3 *         BIT(1),                /*                      @MBA*/         
*     3 PSATX     BIT(1),                /* Equivalent to CVTTX  @MBA*/         
*     3 PSATXC    BIT(1),                /* Equivalent to CVTTXC @MBA*/         
*   2 PSARV241    CHAR(10),              /* RESERVED FOR SC1C5   @LOC*/         
*   2 PSASCAFF    CHAR(1),               /* $$SCAFFOLD                          
*                                           copy of FLCARCH          */         
*     3 PSAEMEMA  BIT(1),                /* $$SCAFFOLD                          
*                                           z/Architecture machine   */         
*   2 PSALKCRF    PTR(31),               /* LINKAGE STACK POINTER               
*                                           SAVE AREA. USED WHEN THE            
*                                           RSM OR ANY LOCK ABOVE THE           
*                                           RSM LOCK IS HELD.    @D4A*/         
*   2 PSAMPSW     CHAR(8) BDY(DWORD),    /* SETLOCK MODEL PSW        */         
*     3 *         BIT(6),                /* RESERVED         @G860PXK*/         
*     3 PSAPIOM   BIT(1),                /* INPUT/OUTPUT INTERRUPT              
*                                           MASK             @G860PXK*/         
*     3 PSAPEXM   BIT(1),                /* EXTERNAL INTERRUPT                  
*                                           MASK             @G860PXK*/         
*   2 PSAICNT     CHAR(8) BDY(DWORD),    /* Instruction count at last           
*                                           (re)dispatch         @0KC*/         
*   2 PSAXAD      CHAR(1),               /* Must be x'AD'        @MYC*/         
*   2 PSAINTSM    CHAR(1),               /* used by: IEAVEINT                   
*                                           OWNERSHIP: SUPERVISOR CNTL.         
*                                           SERIALIZATION: DISABLEMENT.         
*                                                                @MWC*/         
*   2 PSARV262    CHAR(14),              /* Reserved             @MYC*/         
*   2 PSASTOSM    CHAR(4) BDY(WORD),     /* STOSM instruction. In order         
*                                           to use this field, move the         
*                                           system mask to PSASTSSM and         
*                                           immediately issue                   
*                                           EX 0,PSASTOSM. The system           
*                                           mask field (PSASTSSM) is            
*                                           not preserved across calls.         
*                                           Note that this technique            
*                                           causes a store into the             
*                                           instruction stream, which           
*                                           causes poor performance.            
*                                           Starting with z/OS 2.5, the         
*                                           SSM instruction can instead         
*                                           be used to restore a saved          
*                                           system mask, and                    
*                                           EX 0,PSASTOSM should be             
*                                           avoided.                            
*                                           Ownership: NA.                      
*                                           Serialization: Disablement.         
*                                                                @MWC*/         
*     3 *         CHAR(1),               /* RESERVED         @G860PXK*/         
*     3 PSASTSSM  CHAR(1),               /* LABEL FOR SYSTEM MASK USED          
*                                           IN ABOVE INSTRUCTION.               
*                                           OWNERSHIP: NA.   @G860PXK*/         
*     3 *         CHAR(2),               /* RESERVED         @G860PXK*/         
*   2 PSAHLHIS    FIXED(31),             /* SAVE AREA FOR PSAHLHI               
*                                                              MDC050*/         
*   2 PSARECUR    CHAR(1),               /* RESTART FLIH RECURSION              
*                                           INDICATOR.  IF X'00',               
*                                           FLIH NOT IN CONTROL.  IF            
*                                           X'FF', FLIH IN CONTROL,             
*                                           ENTRY IS RECURSIVE MDC093*/         
*   2 PSARSSM     CHAR(1),               /* STNSM AREA FOR IEAVERES             
*                                                                @L5C*/         
*   2 PSASNSM2    CHAR(1),               /* STNSM AREA FOR IEAVTRT1             
*                                           (MDC470)         @G65RP9A*/         
*   2 PSARTM1S    CHAR(1),               /* Bits 0-7 of the current             
*                                           PSW are stored here                 
*                                                   (MDC603) @G383P9A*/         
*   2 PSALWTSA    PTR(31),               /* REAL ADDRESS OF SAVE AREA           
*                                           USED WHEN A RESTARTABLE             
*                                           WAIT STATE IS LOADED.               
*                                           OWNERSHIP: LDWT      @LHC*/         
*   2 PSACLHT     CHAR(116) BDY(WORD),   /* CPU LOCKS TABLE  @G50DP9A*/         
*    3 PSACLHT1    CHAR(80) BDY(WORD),   /* SPIN LOCKS TABLE @G860PXH*/         
*      4 PSADISPL    PTR(31),            /* GLOBAL DISPATCHER LOCK   */         
*      4 PSAASML     PTR(31),            /* AUXILIARY STORAGE                   
*                                           MANAGEMENT (ASM) LOCK               
*                                                              MDC002*/         
*      4 PSASALCL    PTR(31),            /* SPACE ALLOCATION LOCK               
*                                                              MDC003*/         
*      4 PSAIOSSL    PTR(31),            /* IOS SYNCHRONIZATION LOCK            
*                                                              MDC010*/         
*      4 PSARSMDL    PTR(31),            /* ADDRESS OF THE RSM DATA             
*                                           SPACE LOCK           @LBC*/         
*      4 PSAIOSUL    PTR(31),            /* IOS UNIT CONTROL BLOCK              
*                                           LOCK               MDC005*/         
*      4 PSARSMQL    PTR(31),            /* RSMQ lock            @MIA*/         
*      4 PSARV29C    PTR(31),            /* RESERVED FOR LOCK EXPANSION         
*                                                                @LDA*/         
*      4 PSARV2A0    PTR(31),            /* RESERVED FOR LOCK EXPANSION         
*                                                                @LDA*/         
*      4 PSATPACL    PTR(31),            /* TCAM'S TPACBDEB LOCK                
*                                                              MDC009*/         
*      4 PSAOPTL     PTR(31),            /* OPTIMIZER LOCK           */         
*      4 PSARSMGL    PTR(31),            /* RSM GLOBAL LOCK  @G860PXH*/         
*      4 PSAVFIXL    PTR(31),            /* VSM FIXED SUBPOOLS LOCK             
*                                                            @G860PXH*/         
*      4 PSAASMGL    PTR(31),            /* ASM GLOBAL LOCK  @G860PXH*/         
*      4 PSARSMSL    PTR(31),            /* RSM STEAL LOCK   @G860PXH*/         
*      4 PSARSMXL    PTR(31),            /* RSM CROSS MEMORY LOCK               
*                                                            @G860PXH*/         
*      4 PSARSMAL    PTR(31),            /* RSM ADDRESS SPACE LOCK              
*                                                            @G860PXH*/         
*      4 PSAVPAGL    PTR(31),            /* VSM PAGEABLE SUBPOOLS LOCK          
*                                                            @G860PXH*/         
*      4 PSARSMCL    PTR(31),            /* RSM COMMON LOCK  @G860PXK*/         
*%PSALKS1='19';                          /* COUNT OF LOCKS IN CLHT1             
*                                                            @G860PXH*/         
*      4 PSARVLK2    PTR(31),            /* Reserved lock.                      
*                                  Change PSALKS1 if used    @G860PXH*/         
*     3 PSACLHT2     CHAR(16) BDY(WORD), /* SHARED EXCLUSIVE LOCKS              
*                                           TABLE            @G860PXH*/         
*      4 PSARSML     PTR(31),            /* RSM GLOBAL FUNCTION/                
*                                           RECOVERY LOCK    @G860PXH*/         
*        5 PSARSMEX  BIT(1),             /* BIT 0 OF PSARSML. IF ON,            
*                                           THE RSM LOCK IS HELD                
*                                           EXCLUSIVE.       @G860PXH*/         
*      4 PSATRCEL    PTR(31),            /* TRACE BUFFER MANAGEMENT             
*                                           LOCK             @G860PXH*/         
*        5 PSATRCEX  BIT(1),             /* BIT 0 OF PSATRCEL. IF ON,           
*                                           THE TRACE LOCK IS HELD              
*                                           EXCLUSIVE.       @G860PXH*/         
*      4 PSAIOSL     PTR(31),            /* IOS LOCK             @D3C*/         
*        5 PSAIOSEX  BIT(1),             /* BIT 0 OF PSAIOSL. IF ON,            
*                                           THE IOS LOCK IS HELD                
*                                           EXCLUSIVE.           @D3A*/         
*%PSALKS2='3';                           /* COUNT OF LOCKS IN CLHT2             
*                                                                @D3C*/         
*      4 PSARVLK4    PTR(31),            /* RESERVED LOCK    @G860PXH*/         
*     3 PSACLHT3     CHAR(8) BDY(WORD),  /* SPECIAL LOCKS TABLE                 
*                                                            @G860PXH*/         
*      4 PSACPUL     PTR(31),            /* CPU LOCK         @G860PXH*/         
*%PSALKS3='1';                           /* COUNT OF LOCKS IN CLHT3             
*                                                            @G860PXH*/         
*      4 PSARVLK5    PTR(31),            /* RESERVED LOCK    @G860PXH*/         
*     3 PSACLHT4     CHAR(12) BDY(WORD), /* SUSPEND LOCKS TABLE                 
*                                                            @G860PXH*/         
*      4 PSACMSL     PTR(31),            /* CROSS MEMORY SERVICES               
*                                           LOCK  (MDC463)   @ZM45800*/         
*      4 PSALOCAL    PTR(31),            /* LOCAL LOCK               */         
*%PSALKS4='2';                           /* COUNT OF LOCKS IN CLHT4             
*                                                            @G860PXH*/         
*      4 PSARVLK6    PTR(31),            /* RESERVED LOCK    @G860PXH*/         
*   2 PSALCPUA    PTR(31),               /* LOGICAL CPU ADDRESS FOR             
*                                           LOCK INSTRUCTION.                   
*                                                            @G50NP9A*/         
*   2 PSAHLHI     CHAR(4) BDY(WORD),     /* HIGHEST LOCK HELD                   
*                                           INDICATOR.       @G50EP9A*/         
*    3 PSACLHS     BIT(32) BDY(WORD),    /* CPU LOCKS HELD STRING               
*                                                              MDC122*/         
*     4 PSACLHS1    BIT(8),              /* FIRST BYTE OF PSACLHS.              
*                                           (MDC384)         @G860PXH*/         
*       5 PSACPULI  BIT(1),              /* CPU LOCK INDICATOR                  
*                                                            @G860PXH*/         
*       5 *        BIT(2),               /* RESERVED             @LDC*/         
*       5 PSASUM   BIT(1),               /* LOCK SUMMARY BIT. IF ON,            
*                                           AT LEAST ONE LOCK IN                
*                                           THE CURRENT LOCK HELD               
*                                           STRING EXTENSION IS HELD            
*                                           ON THIS PROCESSOR.   @LDA*/         
*       5 PSARSMLI BIT(1),               /* RSM LOCK                            
*                                           INDICATOR        @G860PXH*/         
*       5 PSATRCEI BIT(1),               /* TRACE LOCK INDICATOR                
*                                                            @G860PXH*/         
*       5 PSAIOSI  BIT(1),               /* IOS LOCK INDICATOR   @D3C*/         
*       5 *        BIT(1),               /* RESERVED             @D3C*/         
*     4 PSACLHS2    BIT(8),              /* SECOND BYTE OF PSACLHS.             
*                                           (MDC385)         @G860PXH*/         
*       5 *        BIT(3),               /* RESERVED         @G860PXK*/         
*       5 PSARSMCI BIT(1),               /* RSM COMMON LOCK                     
*                                           INDICATOR        @G860PXK*/         
*       5 PSARSMGI BIT(1),               /* RSM GLOBAL LOCK                     
*                                           INDICATOR        @G860PXH*/         
*       5 PSAVFIXI BIT(1),               /* VSM FIXED SUBPOOLS LOCK             
*                                           INDICATOR        @G860PXH*/         
*       5 PSAASMGI BIT(1),               /* ASM GLOBAL LOCK                     
*                                           INDICATOR        @G860PXH*/         
*       5 PSARSMSI BIT(1),               /* RSM STEAL LOCK                      
*                                           INDICATOR        @G860PXH*/         
*     4 PSACLHS3    BIT(8),              /* THIRD BYTE OF PSACLHS               
*                                           (MDC386)         @G50EP9A*/         
*       5 PSARSMXI BIT(1),               /* RSM CROSS MEMORY LOCK               
*                                           INDICATOR        @G860PXH*/         
*       5 PSARSMAI BIT(1),               /* RSM ADDRESS SPACE LOCK              
*                                           INDICATOR        @G860PXH*/         
*       5 PSAVPAGI BIT(1),               /* VSM PAGEABLE SUBPOOLS LOCK          
*                                           INDICATOR        @G860PXH*/         
*       5 PSADSPLI BIT(1),               /* DISPATCHER LOCK INDICATOR           
*                                           (MDC387)         @G50EP9A*/         
*       5 PSAASMLI BIT(1),               /* ASM LOCK INDICATOR                  
*                                           (MDC388)         @G50EP9A*/         
*       5 PSASALLI BIT(1),               /* SPACE ALLOCATION LOCK               
*                                           INDICATOR                           
*                                           (MDC389)         @G50EP9A*/         
*       5 PSAIOSLI BIT(1),               /* IOS SYNCHRONIZATION LOCK            
*                                           INDICATOR                           
*                                           (MDC390)         @G50EP9A*/         
*       5 PSARSMDI BIT(1),               /* RSM DATA SPACE LOCK                 
*                                           INDICATOR            @LBC*/         
*     4 PSACLHS4    BIT(8),              /* FOURTH BYTE OF PSACLHS              
*                                           (MDC392)         @G50EP9A*/         
*      5 PSAIOULI BIT(1),                /* IOS UCB LOCK INDICATOR              
*                                           (MDC393)         @G50EP9A*/         
*      5 PSARSMQI BIT(1),                /* RSMQ lock indicator  @MIA*/         
*      5 *        BIT(2),                /* RESERVED             @MIC*/         
*      5 PSATPALI BIT(1),                /* TPACBDEB LOCK INDICATOR             
*                                           (MDC397)         @G50EP9A*/         
*      5 PSASRMLI BIT(1),                /* SYSTEM RESOURCE MANAGER             
*                                           (SRM) LOCK INDICATOR                
*                                           (MDC398)         @G50EP9A*/         
*      5 PSACMSLI BIT(1),                /* CROSS MEMORY SERVICES               
*                                           LOCK INDICATOR                      
*                                           (CMS, CMSSMF, CMSEQDQ,              
*                                           CMSLATCH)                           
*                                           (MDC399)             @LUC*/         
*      5 PSALCLLI BIT(1),                /* LOCAL LOCK INDICATOR                
*                                           (MDC400)         @G50EP9A*/         
*   2 PSALITA     PTR(31),               /* ADDRESS OF LOCK INTERFACE           
*                                           TABLE.           @G50EP9A*/         
*   2 PSASTOR8    CHAR(8),               /* 8-byte area for                     
*                                           master's STO         @LSA*/         
*   2 PSACR0      FIXED(31),             /* SAVE AREA FOR CONTROL               
*                                           REGISTER 0               */         
*   2 PSAMCHFL    BIT(8),                /* MCH RECURSION FLAGS      */         
*   2 PSASYMSK    CHAR(1),               /* THIS FIELD WILL BE USED             
*                                           IN CONJUNCTION WITH THE             
*                                           STNSM INSTRUCTION TO                
*                                           PLACE IOS CHANNEL                   
*                                           SCHEDULER INTO A DISABLED           
*                                           STATE AND SIMULTANEOUSLY            
*                                           SAVE THE SYSTEM MASK OF             
*                                           THE CALLER         MDC022*/         
*   2 PSAACTCD    CHAR(1),               /* ACTION CODE SUPPLIED BY             
*                                           OPERATOR AFTER SYSTEM HAS           
*                                           LOADED RESTARTABLE WAIT             
*                                           STATE AND BEFORE THE                
*                                           RESTART KEY IS DEPRESSED.           
*                                           VALUE DEPENDS ON                    
*                                           RESTARTABLE WAIT STATE              
*                                           CODE.  UNPREDICTABLE                
*                                           DURING NORMAL SYSTEM                
*                                           OPERATION.                          
*                                           OWNERSHIP: LDWT      @LHC*/         
*   2 PSAMCHIC    CHAR(1),               /* MCH INITIALIZATION                  
*                                           COMPLETE FLAGS     MDC098*/         
*   2 PSAWKRAP    PTR(31),               /* REAL ADDRESS OF VARY CPU            
*                                           PARAMETER LIST     MDC106*/         
*   2 PSAWKVAP    PTR(31),               /* VIRTUAL ADDRESS OF VARY             
*                                           CPU PARAMETER LIST MDC107*/         
*   2 PSAVSTAP    FIXED(15),             /* WORK AREA FOR VARY CPU              
*                                                              MDC108*/         
*   2 PSACPUSA    FIXED(15),             /* PHYSICAL CPU ADDRESS                
*                                           (STATIC)             @PCC*/         
*   2 PSASTOR     FIXED(31),             /* MASTER MEMORY'S SEGMENT             
*                                           TABLE ORIGIN REGISTER               
*                                           (STOR) VALUE             */         
*   2 PSAIDAWK    CHAR(90),              /* WORK SAVE AREA FOR private          
*                                           DEBUG TOOL.      @G860PXK*/         
*   2 PSARET      CHAR(2) BDY(HWORD),    /* BRANCH RETURN TO CALLER             
*                                           (VIA BSM) USED BY ROUTINES          
*                                           INVOKED BY IOS.                     
*                                                  (MDC607)  @ZA38630*/         
*   2 PSARETCD    CHAR(2) BDY(HWORD),    /* BRANCH RETURN TO CALLER             
*                                           (VIA BSM) WITH RETURN CODE          
*                                           IN REGISTER 15, USED BY             
*                                           ROUTINES INVOKED BY                 
*                                           IOS.   (MDC607)  @ZA38630*/         
*   2 PSAVAL CHAR(2),                    /* Virtual Architecture Level.         
*                               Bits 0-11 are the same as IHASCCB               
*                               field SCCBVAL bits 20-31. Bits 12-15            
*                               are not defined. Sample values                  
*                               for first byte:                                 
*                               0 meant z10 or earlier but is not               
*                               possible for this release, 1 meant z196         
*                               but is not possible for this release,           
*                               2 meant zEC12 but is not possible for           
*                               this release, 3 means z13, 4 means z14,         
*                               etc. ISNMSCCB has equates of the form           
*                               SCCB_VAL_IBC_Val_Machine_xxx     @MRA*/         
* %IF ASAXMAC_ISITPLX ^= 'YES' %THEN %GOTO PSAPLS05;                            
*   3 PSAVAL_MACHINE FIXED(8),           /* First byte               */         
*%PSAPLS05:;                                                                    
*%IF IBM_CBGENC = 'YES' %THEN %GOTO PSACBGC1A;                                  
*   2 PSARSVT  (16) PTR(31),             /* RECOVERY STACK VECTOR               
*                                           TABLE (EACH ELEMENT                 
*                                           MAPPED BELOW)      MDC064*/         
*%GOTO PSACBGC1B;                                                               
*%PSACBGC1A:;                                                                   
*   2 PSARSVT,                           /* RECOVERY STACK VECTOR               
*                                           TABLE                    */         
*   4 PSACSTK     PTR(31),               /* ADDRESS OF CURRENTLY USED           
*                                           FUNCTIONAL RECOVERY                 
*                                           ROUTINE (FRR) STACK                 
*                                                              MDC061*/         
*   4 PSANSTK     PTR(31),               /* ADDRESS OF NORMAL FRR               
*                                           STACK              MDC062*/         
*   4 PSASSTK     PTR(31),               /* ADDRESS OF SVC-I/O-                 
*                                           DISPATCHER FRR STACK                
*                                                              MDC063*/         
*   4 PSASSAV     PTR(31),               /* ADDRESS OF INTERRUPTED              
*                                           STACK SAVED BY SVC, I/O,            
*                                           DISPATCHER         MDC066*/         
*   4 PSAMSTK     PTR(31),               /* ADDRESS OF MCH FRR STACK            
*                                                              MDC067*/         
*   4 PSAMSAV     PTR(31),               /* ADDRESS OF INTERRUPTED              
*                                           STACK SAVED BY MCH MDC068*/         
*   4 PSAPSTK     PTR(31),               /* ADDRESS OF PROGRAM CHECK            
*                                           FLIH FRR STACK     MDC069*/         
*   4 PSAPSAV     PTR(31),               /* ADDRESS OF INTERRUPTED              
*                                           STACK SAVED BY PROGRAM              
*                                           CHECK FLIH         MDC070*/         
*   4 PSAESTK1    PTR(31),               /* ADDRESS OF EXTERNAL FLIH            
*                                           FRR STACK FOR NON-                  
*                                           RECURSIVE ENTRIES  MDC071*/         
*   4 PSAESAV1    PTR(31),               /* ADDRESS OF INTERRUPTED              
*                                           STACK SAVED BY EXTERNAL             
*                                           FLIH FOR NON-RECURSIVE              
*                                           ENTRIES          @G860PXK*/         
*   4 PSAESTK2    PTR(31),               /* ADDRESS OF EXTERNAL FLIH            
*                                           FRR STACK FOR FIRST LEVEL           
*                                           RECURSIONS         MDC073*/         
*   4 PSAESAV2    PTR(31),               /* ADDRESS OF INTERRUPTED              
*                                           STACK SAVED BY EXTERNAL             
*                                           FLIH FOR FIRST LEVEL                
*                                           RECURSIONS         MDC074*/         
*   4 PSAESTK3    PTR(31),               /* ADDRESS OF EXTERNAL FLIH            
*                                           FRR STACK FOR SECOND                
*                                           LEVEL RECURSIONS AND                
*                                           ACR                MDC075*/         
*   4 PSAESAV3    PTR(31),               /* ADDRESS OF INTERRUPTED              
*                                           STACK SAVED BY EXTERNAL             
*                                           FLIH FOR SECOND LEVEL               
*                                           RECURSIONS         MDC076*/         
*   4 PSARSTK     PTR(31),               /* ADDRESS OF RESTART FLIH             
*                                           FRR STACK          MDC077*/         
*   4 PSARSAV     PTR(31),               /* ADDRESS OF INTERRUPTED              
*                                           STACK SAVED BY RESTART              
*                                           FLIH               MDC078*/         
*%PSACBGC1B:;                                                                   
*   2 PSALWPSW    CHAR(8) BDY(DWORD),    /* PSW OF WORK INTERRUPTED             
*                                           WHEN A RESTARTABLE WAIT             
*                                           STATE IS LOADED.                    
*                                           OWNERSHIP: LDWT      @LHC*/         
*   2 PSARV3C8    CHAR(8) BDY(DWORD),    /* Reserved             @M8C*/         
*   2 PSATSTK     PTR(31),               /* ADDRESS OF RTM RECOVERY             
*                                           STACK.                              
*                                           SERIALIZATION: NONE.  THE           
*                                           FIELD IS INITIALIZED AT             
*                                           IPL/VARY CPU ONLINE TIME            
*                                           ONLY.                               
*                                           OWNER: RTM.          @L6A*/         
*   2 PSATSAV     PTR(31),               /* ADDRESS OF ERROR STACK              
*                                           SAVED BY RTM WHEN                   
*                                           SWITCHING TO RTM                    
*                                           RECOVERY STACK.                     
*                                           OWNERSHIP: RTM       @L7A*/         
*   2 PSAASTK     PTR(31),               /* ADDRESS OF ACR FRR STACK.           
*                                           OWNERSHIP: ACR       @L7A*/         
*   2 PSAASAV     PTR(31),               /* ADDRESS OF INTERRUPT                
*                                           STACK SAVED BY ACR.                 
*                                           OWNERSHIP: ACR       @L7A*/         
*   2 PSARTPSW    CHAR(8) BDY(DWORD),    /* RESUME PSW FOR RTM                  
*                                           SETRP RETRY OPTION                  
*                                           OWNERSHIP: RTM       @L7A*/         
*   2 PSAPCR0E    CHAR(8) BDY(DWORD),    /* Temp for PC FLIH / Disp             
*                               for building CR0E                @0MC*/         
*   2 PSASFACC    CHAR(4) BDY(WORD),     /* SETFRR ABEND COMPLETION             
*                                           CODE USED WHEN A SETFRR             
*                                           ADD IS ISSUED AGAINST A             
*                                           FULL FRR STACK     MDC123*/         
*   2 PSALSFCC    CHAR(4) BDY(WORD),     /* A LOAD INSTRUCTION TO               
*                                           PRIME REGISTER 1 WITH THE           
*                                           SETFRR ABEND COMPLETION             
*                                           CODE IN PSASFACC   MDC124*/         
*   2 PSASVC13    CHAR(2),               /* AN SVC 13 INSTRUCTION               
*                                                              MDC125*/         
*   2 PSAFPFL     CHAR(1),               /* See LCCAFPFL.                       
*                               Interface only for PSABFP and PSAVSS            
*                                                                @MEC*/         
*       3 * BIT(3),                      /* Reserved                 */         
*       3 PSABFP BIT(1),                 /* Additional FP status is             
*                               being saved.                     @MEA*/         
*       3 PSAVSS BIT(1),                 /* VRs are being saved  @MEA*/         
*       3 PSAGSF BIT(1),                 /* GSF controls are being              
*                                           saved                @MQA*/         
*   2 PSAINTE     BIT(8),                /* FLAGS FOR CPU TIMER                 
*                                           (MDC466)         @ZM48078*/         
*    3 PSANUIN  BIT(1),                  /* CPU TIMER CANNOT BE USED            
*                                           (MDC467)         @ZM48078*/         
*    3 *        BIT(7),                  /* RESERVED         @G860PXK*/         
*   2 PSARV3FC CHAR(12) BDY(WORD),       /* Reserved             @MxC*/         
*   2 PSAATCVT    PTR(31),               /* ADDRESS OF VTAM ATCVT.              
*                                           INITIALIZED BY VTAM.                
*                                           (MDC300)         @Z30AP9A*/         
*   2 PSAWTCOD    PTR(31),               /* WAIT STATE CODE LOADED.             
*                                           OWNERSHIP: LDWT      @LHC*/         
*   2 PSASCWA PTR(31) IHAPSA_READONLY ASAXMAC_P31AS64                           
*                                    ,   /* ADDRESS OF SUPERVISOR               
*                                           CONTROL CPU RELATED WORK            
*                                           SAVE AREA            @POC*/         
*   2 PSARSMSA PTR(31) IHAPSA_READONLY ASAXMAC_P31AS64                          
*                                     ,  /* ADDRESS OF RSM CPU RELATED          
*                                           WORK SAVE AREA       @POC*/         
*   2 PSASCPSW    CHAR(8) BDY(DWORD),    /* MODEL PSW                           
*                                           OWNERSHIP: SUPERVISOR               
*                                                      CONTROL.                 
*                                           SERIALIZATION: DISABLED.            
*                                                            @G860PXK*/         
*   2 PSASMPSW    CHAR(8) BDY(DWORD),    /* SRB DISPATCH PSW                    
*                                           (MDC326)         @G50DP9A*/         
*   2 PSAPCPSW    CHAR(16) BDY(DWORD),   /* TEMPORARY OLD PSW STORAGE           
*                                           FOR PROGRAM FLIH                    
*                                           (MDC129)             @LVA*/         
*   2 PSARV438    CHAR(8),               /* RESERVED             @M8C*/         
*   2 PSAMCX16    CHAR(16) BDY(DWORD),   /* MCH exit PSW16       @M8A*/         
*   2 PSARSP16    CHAR(16) BDY(DWORD),   /* Resume PSW field for                
*                                           restart interupt handler            
*                                                                @M8A*/         
*   2 * CHAR(16) BDY(DWORD),             /*                      @M8A*/         
* %IF ASAXMAC_ISITPLX ^= 'YES' %THEN %GOTO PSAPLX6;        /*    @M8A*/         
*   3 PSAPSWSV16  CHAR(16) BDY(DWORD),   /* PSW SAVE AREA FOR                   
*                                           DISPATCHER AND ACR                  
*                                           (MDC319)             @M8A*/         
* %PSAPLX6:;                                               /*    @M8A*/         
*     4 * CHAR(8),                       /* Part of PSAPSWSV16   @M8A*/         
*     4 PSAPSWSV  CHAR(8) BDY(DWORD),    /* PSW SAVE AREA FOR                   
*                                           DISPATCHER AND ACR                  
*                                           (MDC319)             @M8A*/         
*   2 PSACPUT     CHAR(8) BDY(DWORD),    /* SUPERVISOR CPU TIMER SAVE           
*                                           AREA  (MDC328)   @G50DP9A*/         
*   2 PSAPCFUN    CHAR(4) BDY(WORD),     /* PROGRAM FLIH RECURSION              
*                                           FLAGS                               
*                                           (MDC613)         @G383P9A*/         
*    3 PSAPCFB1    CHAR(1),              /* FUNCTION VALUE                      
*                                           (MDC484)         @G383P9A*/         
*%PSAPCMC='''01''X';                     /* MC INTERRUPT                        
*                                           (MDC605)         @G383P9A*/         
*%PSAPCPF='''02''X';                     /* PAGE FAULT                          
*                                           (MDC486)         @G383P9A*/         
*%PSAPCPS='''03''X';                     /* PER/SPACE SWITCH                    
*                                           INTERRUPT        @G383PXU*/         
*%PSAPCAD='''04''X';                     /* ADDRESSING EXCEPTION                
*                                           (MDC488)         @G383P9A*/         
*%PSAPCTR='''05''X';                     /* TRANSLATION EXCEPTION               
*                                           (MDC489)         @G383P9A*/         
*%PSAPCPC='''06''X';                     /* PROGRAM CHECK                       
*                                           (MDC490)         @G383P9A*/         
*%PSAPCTRC='''07''X';                    /* TRACE INTERRUPT                     
*                                                            @G860PXK*/         
*%PSAPCAF='''08''X';                     /* NEW VALUE FOR PROGRAM               
*                                           INTERRUPT FLAG.  ASYMMETRIC         
*                                           FEATURE OPERATION                   
*                                           EXCEPTION.           @03A*/         
*%PSAPCLS='''09''X';                     /* LINKAGE STACK INTERRUPT             
*                                           FUNCTION VALUE FOR PROGRAM          
*                                           FLIH                 @L8A*/         
*%PSAPCART='''0A''X';                    /* ACCESS REGISTER TRANSLATION         
*                                           INTERRUPT VALUE FOR PROGRAM         
*                                           FLIH                 @L8A*/         
*%PSAPCDPF='''0B''X';                    /* DISABLED PAGE/SEGMENT FAULT         
*                                                                @LCA*/         
*%PSAPCDAR='''0C''X';                    /* DISABLED ART PIC X'2B'              
*                                           FUNCTION VALUE FOR PROGRAM          
*                                           FLIH                 @LCA*/         
*%PSAPCPRT='''0D''X';                    /* Protection exception                
*                                           function value       @LQA*/         
*%PSAPCMAX='''0D''X';                    /* MAXIMUM VALID FUNCTION              
*                                           VALUE                @LQC*/         
*    3 PSAPCFB2    BIT(8),               /* FUNCTION FLAGS                      
*                                           (MDC491)         @G383P9A*/         
*     4 PSAPCTRR BIT(1),                 /* TRACE INTERRUPT RECURSION           
*                                           HANDLER FLAG.    @YA01102*/         
*     4 PSAPCMT  BIT(1),                 /* TRACE RECURSION FLAG                
*                                           (MDC493)         @G383P9A*/         
*     4 *        BIT(6),                 /* RESERVED                 */         
*    3 PSAPCFB3    BIT(8),               /* RECURSION FLAGS                     
*                                           (MDC494)         @G383P9A*/         
*     4 PSAPCP1  BIT(1),                 /* FIRST LEVEL PROGRAM CHECK           
*                                           (MDC495)         @G383P9A*/         
*     4 PSAPCP2  BIT(1),                 /* SECOND LEVEL PROGRAM                
*                                           CHECK  (MDC496)  @G383P9A*/         
*     4 PSAPCDE  BIT(1),                 /* DAT ERROR CONDITION                 
*                                           (MDC497)         @G383P9A*/         
*     4 PSAPCLV  BIT(1),                 /* 0=REGISTERS IN LCCA,                
*                                           1=REGISTERS NOT IN LCCA             
*                                           (MDC498)         @G383P9A*/         
*     4 PSAPCP3  BIT(1),                 /* THIRD LEVEL PROGRAM CHECK           
*                                                   (MDC604) @G383P9A*/         
*     4 PSAPCP4  BIT(1),                 /* FOURTH LEVEL PROGRAM CHECK          
*                                                   (MDC604) @G383P9A*/         
*     4 PSAPCPFR BIT(1),                 /* RECURSIVE PAGE FAULT                
*                                           INDICATOR            @LAA*/         
*     4 PSAPCAVR BIT(1),                 /* RECURSIVE ASTE VALIDITY             
*                                           INDICATOR            @LCC*/         
*    3 PSAPCFB4    BIT(8),               /* RECURSION FLAGS      @PBC*/         
*     4 PSAPCDNV BIT(1),                 /* DUCT validity indicator             
*                                                                @PBA*/         
*     4 PSAPCLSR BIT(1),                 /* IEAVLSIH has invoked                
*                                           IARPTEPR and recursion into         
*                                           RSM is not permitted.               
*                                                                @PEA*/         
*     4 *        BIT(6),                 /* RESERVED             @PEC*/         
*   2 PSAPCPS2    FIXED(16),             /* PASID AT TIME OF SECOND             
*                                           LEVEL INTERRUPT                     
*                                                   (MDC604) @G383P9A*/         
*   2 PSARV47E    CHAR(2),               /* RESERVED         @G860PXK*/         
*   2 PSAPCWKA    CHAR(24) BDY(DWORD),   /* Used by PC FLIH. Must be            
*                                           qword-aligned        @LSA*/         
*   2 PSAPCPS3    FIXED(16),             /* PASID AT TIME OF THIRD              
*                                           LEVEL INTERRUPT                     
*                                                   (MDC604) @G383P9A*/         
*   2 PSAPCPS4    FIXED(16),             /* PASID AT TIME OF FOURTH             
*                                           LEVEL INTERRUPT  @G860PXK*/         
*   2 PSAMODEW    FIXED(31),             /* Word label to address               
*                                           PSAMODE.                            
*                                                                @LPC*/         
*    3 *        CHAR(1),                 /* RESERVED -                          
*                                           FIRST BYTE OF PSAMODEW              
*                                                            @G860PXK*/         
*    3 PSAMFLGS BIT(8),                  /* SECOND BYTE OF PSAMODEW             
*                                                   (MDC605) @G383P9A*/         
*     4 PSANSS  BIT(1),                  /* ENABLED UNLOCKED TASK               
*                                           WITH FRR                            
*                                                   (MDC605) @G383P9A*/         
*     4 PSAPRSRB BIT(1),                 /* Preemptable-classSRB @LPA*/         
*     4 *       BIT(6),                  /*RESERVED              @LPA*/         
*    3 PSAMODEH    FIXED(15),            /* SECOND HALFWORD OF                  
*                                           PSAMODEW. FIRST BYTE MUST           
*                                           BE ZERO FOR I/O AND                 
*                                           EXTERNAL FLIHS.                     
*                                                   (MDC613) @G383P9A*/         
*     4 * CHAR(1),                       /* THIRD BYTE  OF PSAMODEW             
*                                                   (MDC604) @G383P9A*/         
*     4 PSAMODE    BIT(8),               /* SYSTEM MODE INDICATOR AND           
*                                           DISPLACEMENT INTO EXTERNAL          
*                                           AND I/O FLIHS TABLES                
*                                                            @G860PXH*/         
*%PSATASKM='''00''X';                    /* TASK MODE VALUE                     
*                                           (MDC338)         @G50DP9A*/         
*%PSASRBM='''04''X';                     /* SRB MODE VALUE                      
*                                           (MDC339)         @G50DP9A*/         
*%PSAWAITM='''08''X';                    /* WAIT MODE VALUE                     
*                                           (MDC340)         @G50DP9A*/         
*%PSADISPM='''10''X';                    /* DISPATCHER MODE VALUE               
*                                           (MDC342)         @G50DP9A*/         
*     5 *        BIT(2),                 /* ZERO             @G50DP9A*/         
*     5 PSAPSRBM BIT(1),                 /* PSEUDO SRB MODE FLAG BIT.           
*                                           THIS BIT MAY BE ON WITH             
*                                           ANY OF THE MODE VALUES.             
*                                           (MDC343)         @G50DP9A*/         
*     5 *        BIT(5),                 /* MODE VALUES      @G50DP9A*/         
*   2 *           CHAR(3),               /* RESERVED         @G860PXK*/         
*   2 PSASTNSM    CHAR(1),               /* STNSM TARGET USED BY                
*                                           EXIT PROLOGUE                       
*                                           (MDC346)         @G50DP9A*/         
*   2 PSALKJW     FIXED(31),             /* LOCAL LOCK RELEASE SRB              
*                                           JOURNAL WORD                        
*                                           (MDC612)         @G383P9A*/         
*   2 PSADZERO    CHAR(8) BDY(DWORD),    /* DOUBLE WORD OF ZERO                 
*                                           (MDC612)         @G383P9A*/         
*    3 PSAFZERO FIXED(32),               /* FULLWORD OF ZERO                    
*                                           (MDC612)         @G383P9A*/         
*    3 *        FIXED(32),               /* FULLWORD OF ZERO                    
*                                           (MDC612)         @G383P9A*/         
*   2 PSALKJW2    FIXED(31),             /* CMS LOCK RELEASE JOURNAL            
*                                           WORD.                               
*                                           (MDC613)         @G383P9A*/         
*   2 PSALKPT PTR(31) ASAXMAC_READONLY,  /* SETLOCK TEST,TYPE=HIER              
*                                           PARAMETER LIST TABLE.               
*                                           OWNERSHIP: LOCK MANAGER.            
*                                           SERIALIZATION: NONE.                
*                                                            @G860PXK*/         
*   2 PSALAA      PTR(31),               /* LE Anchor area       @LVA*/         
*   2 PSALIT2 PTR(31) ASAXMAC_READONLY,  /* POINTER TO THE EXTENDED             
*                                           LOCK INTERFACE TABLE @LDA*/         
*   2 PSAECLTP PTR(31) IHAPSA_READONLY,  /* POINTER TO THE EXTENDED             
*                                           CURRENT LOCKS HELD TABLE.           
*                                                                @POC*/         
*   2 PSACLHSE    BIT(32) BDY(WORD),     /* CURRENT LOCKS HELD STRING           
*                                           EXTENSION.           @LDA*/         
*     3 PSALHEB0  CHAR(1),               /* BYTE 0 OF THE CURRENT LOCK          
*                                           HELD STRING EXTENSION.              
*                                                                @LDA*/         
*       4 PSABLSDI  BIT(1),              /* BMFLSD LOCK INDICATOR.              
*                                                                @LGA*/         
*       4 PSAXDSI   BIT(1),              /* XCFDS LOCK INDICATOR.               
*                                                                @LEA*/         
*       4 PSAXRESI  BIT(1),              /* XCFRES LOCK INDICATOR.              
*                                                                @LEA*/         
*       4 PSAXQI    BIT(1),              /* XCFQ LOCK INDICATOR.                
*                                                                @LEA*/         
*       4 PSAESETI  BIT(1),              /* ETRSET LOCK INDICATOR.              
*                                                                @LFA*/         
*       4 PSAIXSCI  BIT(1),              /* IXLSCH LOCK INDICATOR.              
*                                                                @LMC*/         
*       4 PSAIXSHI  BIT(1),              /* IXLSHR LOCK INDICATOR.              
*                                                                @LMC*/         
*       4 PSAIXDSI  BIT(1),              /* IXLDS LOCK INDICATOR.               
*                                                                @LLA*/         
*     3 PSALHEB1  CHAR(1),               /* BYTE 1 OF THE CURRENT LOCK          
*                                           HELD STRING EXTENSION.              
*                                                                @LDA*/         
*       4 PSAIXLLI  BIT(1),              /* IXLSHELL LOCK INDICATOR.            
*                                                                @LMC*/         
*       4 PSAULUTI  BIT(1),              /* IOSULUT LOCK INDICATOR.             
*                                                                @LJA*/         
*       4 PSAIXLRI  BIT(1),              /* IXLREQST LOCK INDICATOR.            
*                                                                @05A*/         
*       4 PSAWLMRI  BIT(1),              /* WLMRES LOCK INDICATOR.              
*                                                                @LRA*/         
*       4 PSAWLMQI  BIT(1),              /* WLMQ LOCK INDICATOR.                
*                                                                @LRA*/         
*       4 PSACNTXI  BIT(1),              /* CONTEXT LOCK INDICATOR.             
*                                                                @LRA*/         
*       4 PSAREGSI  BIT(1),              /* REGSRV LOCK INDICATOR.              
*                                                                @LRA*/         
*       4 PSASSDLI  BIT(1),              /* SSD LOCK INDICATOR.  @LTC*/         
*     3 PSALHEB2  CHAR(1),               /* BYTE 2 OF THE CURRENT LOCK          
*                                           HELD STRING EXTENSION.              
*                                                                @LDA*/         
*       4 PSAGRSLI  BIT(1),              /* GRSINT lock indicator               
*                                                                @M1A*/         
*       4 PSAMISLI  BIT(1),              /* MISC lock indicator  @MGA*/         
*         5 PSAPSLK1 BIT(1),             /* n/a                  @MGC*/         
*       4 PSADNU2   BIT(1),              /* n/a                  @MGA*/         
*         5 PSAPNLK1 BIT(1),             /* n/a                  @MGC*/         
*       4 PSADNU3   BIT(1),              /* n/a                  @MGA*/         
*         5 PSAIOLK1 BIT(1),             /* n/a                  @MGC*/         
*       4 PSADNU4   BIT(1),              /* n/a                  @MGA*/         
*         5 PSAPXLK1 BIT(1),             /* n/a                  @MGC*/         
*       4 PSADNU5   BIT(1),              /* n/a                  @MGA*/         
*         5 PSADRLK3 BIT(1),             /* n/a                  @MGC*/         
*       4 PSADRLK2  BIT(1),              /* HCWDRLK2 lock ind.   @M6A*/         
*       4 PSADRLK1  BIT(1),              /* HCWDRLK1 lock ind.   @M6A*/         
*     3 PSALHEB3  CHAR(1),               /* BYTE 3 OF THE CURRENT LOCK          
*                                           HELD STRING EXTENSION.              
*                                                                @LDA*/         
*       4 PSASRMEI  BIT(1),              /* SRMENQ lock indicator               
*                                                                @M9A*/         
*       4 PSASSDGI  BIT(1),              /* SSDGROUP lock indicator             
*                                                                @MLA*/         
*   2 PSARV4C8    CHAR(8),               /* RESERVED FOR FUTURE LOCK            
*                                           EXPANSION.           @LDA*/         
*   2 PSARV4D0    CHAR(144),             /* RESERVED.            @0KC*/         
*   2 *           CHAR(36) BDY(DWORD),   /*                      @0KA*/         
* %IF ASAXMAC_ISITPLX ^= 'YES' %THEN %GOTO PSAOF584;       /*    @0KA*/         
*     3 PSADiag560 CHAR(36) BDY(DWORD),  /* Diagnostic data for IBM use         
*                                           only                 @0KA*/         
* %PSAOF584:;                                              /*    @0KA*/         
*   2 PSARV584    CHAR(4),               /* RESERVED.            @0KA*/         
*   2 PSAHWFB     CHAR(1),               /* HARDWARE FLAG BYTE.  @L3A*/         
*   2 PSACR0CB    CHAR(1),               /* CR0 CONTROL BYTE USED BY            
*                                           PROTPSA MACRO                       
*                                           (MDC425)         @G50NP9A*/         
*   2 PSARV58A    CHAR(2),               /* RESERVED             @PJC*/         
*   2 PSACR0SV    FIXED(31),             /* CR0 SAVE AREA USED BY               
*                                           PROTPSA MACRO                       
*                                           (MDC426)         @G50NP9A*/         
*    3 *        BIT(3),                  /* FIRST THREE BITS OF                 
*                                           PSACR0SV         @G50NP9A*/         
*    3 PSACR0EN BIT(1),                  /* IF 0, PSA PROTECT                   
*                                           DISABLED.  IF 1, PSA                
*                                           PROTECT ENABLED.                    
*                                           (MDC432)         @G50NP9A*/         
*    3 *        BIT(4),                  /* Next 4 bits          @0BC*/         
*    3 PSACR0ED BIT(1),                  /* DAT features         @0BA*/         
*    3 *        BIT(3),                  /* Next 3 bits          @0BA*/         
*    3 PSACR0AL BIT(1),                  /* IF 1, ASN & LX Reuse                
*                                           facility is enabled  @LVA*/         
*    3 PSACR0FP BIT(1),                  /* IF 1, extended floating             
*                                           point is enabled.    @LRA*/         
*    3 PSACR0VI BIT(1),                  /* IF 1, vector instructions           
*                                           are enabled.         @LRA*/         
*    3 *        BIT(17),                 /* Last bits            @LRA*/         
*   2 PSAPCCR0    FIXED(31),             /* PROGRAM CHECK FLIH CR0              
*                                           SAVE AREA                           
*                                           (MDC427)         @G50NP9A*/         
*   2 PSARCR0     FIXED(31),             /* RESTART FLIH CR0 SAVE               
*                                           AREA  (MDC434)   @G50NP9A*/         
*    3 *        BIT(3),                  /* FIRST THREE BITS OF                 
*                                           PSARCR0          @G50NP9A*/         
*    3 PSARPEN  BIT(1),                  /* IF 0, PSA PROTECT                   
*                                           DISABLED.  IF 1, PSA                
*                                           PROTECT ENABLED.                    
*                                           (MDC435)         @G50NP9A*/         
*   2 PSASTKE CHAR(8) BDY(DWORD),        /* CURRENT STACK CONTROL WORD          
*                                           FOR SRB'S AND TYPE 6 SVC'S          
*                                                                    */         
*    3 PSATKN   FIXED(16),               /* CURRENT SPACE TOKEN                 
*                                                   (MDC604) @G383P9A*/         
*    3 PSAASD   FIXED(16),               /* CURRENT STACK ADDRESS               
*                                           SPACE DESIGNATOR                    
*                                                   (MDC604) @G383P9A*/         
*    3 PSASEL   PTR(31),                 /* CURRENT STACK ELEMENT               
*                                           ADDRESS (MDC604) @G383P9A*/         
*   2 PSASKPSW    CHAR(4),               /* PCLINK STACK/UNSTACK                
*                                           MODEL PSW                           
*                                                   (MDC604) @G383P9A*/         
*   2 PSASKPS2    PTR(31),               /* PCLINK PSW ADDRESS                  
*                                                   (MDC604) @G383P9A*/         
*   2 PSACPCLS    PTR(31),               /* PCLINK WORKAREA - CURRENT           
*                                           STACK HEADER ADDRESS @L9C*/         
*   2 PSARV5AC    CHAR(4),               /* RESERVED.            @L9A*/         
*   2 PSASCFS PTR(31) ASAXMAC_P31AS64,   /* ADDRESS OF THE SUPERVISOR           
*                                           CONTROL FLIH                        
*                                           SAVEAREA.            @L8C*/         
*   2 PSAPAWA PTR(31) ASAXMAC_P31AS64,   /* ADDRESS OF PC/AUTH WORK             
*                                           AREA.                @L8A*/         
*   2 PSASCFB     FIXED(8),              /* SUPERVISOR CONTROL FLAG             
*                                           BYTE.                @L1A*/         
*     3 PSAIOPR  BIT(1),                 /* INDICATES IF INTERRUPTED            
*                                           TASK SHOULD BE PREEMPTED.           
*                                           USED BY THE I/O FLIH.               
*                                                                @L1A*/         
*     3 PSAIORTY BIT(1),                 /* I/O FLIH RECOVERY FLAG. IF          
*                                           1, CONTINUE RETRY                   
*                                           PROCESSING INSTEAD                  
*                                           OF ABENDING.         @L5A*/         
* %IF ASAXMAC_ISITPLX ^= 'YES' %THEN %GOTO PSAPLX3B;  /*         @MPA*/         
*     3 PSA_LockSpinEntered BIT(1),      /* Set whenever supervisor             
*                                           spins for a lock     @MPA*/         
* %PSAPLX3B:;                                              /*    @MPA*/         
*   2 PSARV5B9    CHAR(3),               /* RESERVED             @PJC*/         
*   2 PSACR0M1    CHAR(4),               /* MASK OF CR0 WITH EXTERNAL           
*                                           MASK BITS OFF - USED BY             
*                                           WINDOW.              @03A*/         
*   2 PSACR0M2    CHAR(4),               /* MASK OF CR0 WITH ONLY               
*                                           EXTERNAL MASK BITS ON -             
*                                           USED BY WINDOW.      @03A*/         
*   2 PSARV5C4    CHAR(4) BDY(WORD),     /* Reserved             @MAA*/         
*   2 *           CHAR(56) BDY(DWORD),   /*                      @0IC*/         
* %IF ASAXMAC_ISITPLX ^= 'YES' %THEN %GOTO PSAOF600;       /*    @0IC*/         
*     3 PSA_CR0EMaskOffExtInt Char(8) BDY(DWord), /* Mask of bits               
*                                           to turn off all external            
*                                           interrupts in grande CR0            
*                                                                @MAA*/         
*     3 PSA_CR0EMaskOnExtInt Char(8) BDY(DWord), /* Mask of bits                
*                                           to turn on all external             
*                                           interrupts in grande CR0            
*                                                                @MAA*/         
*     3 PSA_CR0ESaveArea Char(8) BDY(Dword), /* Save area for grande            
*                                           CR0                  @MAA*/         
*       5 PSA_CR0ESaveArea_HW Char(4) Bdy(Word), /* High word save              
*                                           area for high word of CR0           
*                                                                @MAA*/         
*       5 PSA_CR0ESaveArea_LW Char(4) Bdy(Word), /* Low word save               
*                                           area for low word of CR0            
*                                                                @MAA*/         
*     3 PSA_WindowWorkArea Char(16) Bdy(Dword), /* Work area for                
*                                           IEAMWIN              @0IA*/         
*       5 PSA_WindowTodDelta Char(8) Bdy(Dword), /* Difference in TOD           
*                                           values - used in IEAMWIN            
*                                           PL/X                 @0IA*/         
*         7 PSA_WindowTodDelta_HW Char(4) Bdy(Word), /* High word area          
*                                           for difference in TOD               
*                                           values               @0IA*/         
*         7 PSA_WindowTodDelta_LW Char(4) Bdy(Word), /* Low word area           
*                                           for difference in TOD               
*                                           values               @0IA*/         
*     3 PSA_WindowLastOpenTod Char(8) Bdy(Dword), /* TOD when IEAMWIN           
*                                           last opened a window @0IA*/         
*     3 PSA_WindowCurrentTod Char(8) Bdy(Dword), /* TOD when IEAMWIN            
*                                           last checked to open a              
*                                           window               @0IA*/         
* %PSAOF600:;                                              /*    @0IC*/         
*   2 PSARV600    CHAR(80),              /* RESERVED             @0IC*/         
*   2 *           CHAR(8) BDY(DWORD),    /* RESERVED             @0CA*/         
* %IF ASAXMAC_ISITPLX ^= 'YES' %THEN %GOTO PSAPLX3A;       /*    @0CA*/         
*     3 PSA_TIME_ON_CP CHAR(8) BDY(DWORD), /* Current SRB's accumulated         
*                             CPU time on a standard CP. This field             
*                             must immediately precede PSATIME. This            
*                             field is valid only when there is at              
*                             least one zCBP/zAAP or zIIP installed.            
*                                                                @MTC*/         
* %PSAPLX3A:;                                              /*    @0CA*/         
*   2 PSATIME     CHAR(8)  BDY(DWORD),   /* CURRENT SRB'S ACCUMULATED           
*                                           CPU TIME             @01C*/         
*   2 PSASRSAV    CHAR(4),               /* ADDRESS OF CURRENT FRR              
*                                           STACK SAVED BY STOP/RESET           
*                                                  (MDC605)  @G383P9A*/         
*   2 PSAESC8     CHAR(12),              /* Save area for IEAVESC8              
*                                                                @LPA*/         
*   2 PSADEXMW CHAR(8) BDY(DWORD),       /* Work area for dispatcher            
*                                           CR3/4                @LVC*/         
*   2 PSADSARS    CHAR(64) BDY(WORD),    /* DISPATCHER ACCESS REGISTER          
*                                           SAVEAREA             @L9C*/         
*   2 *           CHAR(8) BDY(DWORD),    /* Reserved             @0FA*/         
*                                                                               
* %IF ASAXMAC_ISITPLX ^= 'YES' %THEN %GOTO PSAPLX5;        /*    @0FA*/         
*     3 PSA_PCFLIH_TRACE_INTERRUPT_CPUT CHAR(8) BDY(DWORD), /* Trace            
*                                           interrupt CPU timer saved           
*                                           by IEAVEPCO          @0FC*/         
* %PSAPLX5:;                                               /*    @0FA*/         
*   2 PSADTSAV    CHAR(8) BDY(DWORD),    /* CPU TIMER VALUE AT LAST             
*                                           DISPATCH, SRBTIMER REQUEST,         
*                                           CPUTIMER EXPIRATION, OR             
*                                           STATUS SAVE OR RESTORE              
*                                                                @01C*/         
*   2 PSADEXMS    CHAR(16) BDY(DWORD),   /* DISPATCHER CONTROL REGISTER         
*                                           3 AND 4 SAVE AREA                   
*                                                   (MDC610)     @LVC*/         
*    3 PSADCR3    CHAR(8) BDY(DWORD),    /* DISPATCHER CONTROL REGISTER         
*                                           3 SAVE AREA                         
*                                                   (MDC610)     @LVC*/         
*     4 PSADSINS FIXED(32),              /* Secondary ASTE Inst# @LVA*/         
*     4 PSADPKSA FIXED(32),              /* PKM and SASID        @LVA*/         
*       5 PSADPKM CHAR(2),               /* DISPATCHER PROGRAM KEY MASK         
*                                           SAVE AREA                           
*                                                   (MDC610) @G383P9A*/         
*       5 PSADSAS CHAR(2),               /* DISPATCHER SECONDARY ASID           
*                                           SAVE AREA                           
*                                                   (MDC610) @G383P9A*/         
*    3 PSADCR4    CHAR(8) BDY(DWORD),    /* DISPATCHER CONTROL REGISTER         
*                                           4 SAVE AREA                         
*                                                   (MDC610)     @LVC*/         
*     4 PSADPINS FIXED(32),              /* Primary ASTE Inst#   @LVA*/         
*     4 PSADAXPA FIXED(32),              /* AX and PASID         @LVA*/         
*       5 PSADAX  CHAR(2),               /* DISPATCHER AUTHORIZATION            
*                                           INDEX SAVE AREA.                    
*                                                   (MDC613) @G383P9A*/         
*       5 PSADPAS CHAR(2),               /* DISPATCHER PRIMARY ASID             
*                                           SAVE AREA                           
*                                                   (MDC610) @G383P9A*/         
* %IF ASAXMAC_ISITPLX ^= 'YES' %THEN %GOTO PSA_6D8ALT;     /*    @MTA*/         
*   2 PSA_TIME_ON_zCBP_Normalized CHAR(8) BDY(DWORD), /* Current                
*                             SRB's accumulated CPU time on a zCBP.             
*                             Normalized.                        @MTA*/         
* %GOTO PSA_6E0;                                           /*    @MTA*/         
* %PSA_6D8ALT:;                                            /*    @MTA*/         
*   2 *           CHAR(8) BDY(DWORD),    /* RESERVED             @MTA*/         
* %PSA_6E0:;                                               /*    @MTA*/         
*   2 PSAUSEND    CHAR(0) BDY(DWORD),    /* END FIRST SET OF ASSIGNED           
*                                           FIELDS SAVED BY ACR.                
*                                                            @G383PXU*/         
*   2 PSARV6E0    CHAR(192),             /* RESERVED.            @MTC*/         
*   2 PSAECVT     ASAXMACP64 BDY(DWORD) ASAXMAC_READONLY                        
*                            ASAXMACVALIDATED,  /* ECVT address  @M3A*/         
*     3 * CHAR(4),                                                              
* %IF ASAXMAC_ISITPLX ^= 'YES' %THEN %GOTO PSAPLX0;           /* @M3A*/         
*     3 PSAECVT31 PTR(31) ASAXMAC_READONLY ASAXMAC_P31AS64, /*   @M3A*/         
*%PSAPLX0:;                                                   /* @M3A*/         
*   2 PSAXCVT     ASAXMACP64 ASAXMAC_READONLY,  /* XCVT address  @M3A*/         
*   2 PSADATLK    CHAR(48) BDY(DWORD),   /* AREA FOR DAT-OFF ASSIST             
*                                           LINKAGE          @G860PXK*/         
*   2 PSADATOF    PTR(31),               /* REAL STORAGE ADDRESS OF THE         
*                                           DAT-OFF LINKAGE TABLE WHICH         
*                                           IS INITIALIZED BY NIP FOR           
*                                           DAT-ON/DAT-OFF LINKAGE.             
*                                                            @G860PXK*/         
*   2 PSADATLN    FIXED(31),             /* LENGTH OF THE DAT-OFF INDEX         
*                                           TABLE (IEAVEDFT) @G860PXK*/         
*/*                                                             1@MVD*/         
*   2 PSATBVTV PTR(31) ASAXMAC_P31AS64,  /* VIRTUAL ADDRESS                     
*                                           CORRESPONDING TO PSATBVTR.          
*                                                                @MVM*/         
*   2 PSATRACE    BIT(8),                /* SYSTEM TRACE FLAGS.                 
*                                                            @G860PXK*/         
*     3 PSATROFF  BIT(1),                /* IF ON, SYSTEM TRACE                 
*                                           SUSPENDED ON THIS PROCESSOR         
*                                           BECAUSE WAIT TASK                   
*                                           DISPATCHED.      @G860PXK*/         
*   2 PSARV7ED    CHAR(3),               /* RESERVED FOR SYSTEM TRACE.          
*                                                                @PJC*/         
*   2 PSATBVTR    ASAXMACP64,            /* REAL ADDRESS OF SYSTEM              
*                                           TRACE BUFFER VECTOR TABLE           
*                                           (TBVT) REPRESENTING THE             
*                                           CURRENT SYSTEM TRACE                
*                                           BUFFER FOR THIS PROCESSOR.          
*                                           OWNERSHIP: SYSTEM TRACE.            
*                                           SERIALIZATION: DISABLEMENT          
*                                           FOR EXTERNAL INTERRUPTS             
*                                           ON THIS PROCESSOR OR THE            
*                                           TRACE SPIN LOCK.     @MVC*/         
*   2 PSATRVT PTR(31) ASAXMAC_READONLY ASAXMAC_P31AS64                          
*                                     ,  /* ADDRESS OF SYSTEM TRACE             
*                                           VECTOR TABLE.    @G860PXH*/         
*   2 PSATOT PTR(31) ASAXMAC_READONLY ASAXMAC_P31AS64                           
*                                    ,   /* ADDRESS OF SYSTEM TRACE             
*                                           OPERAND TABLE.   @G860PXK*/         
*/*                                                                  */         
*/********************************************************************/         
*/*            FETCH PROTECTED KEY 0 AREA                            */         
*/*                            LOCATIONS 800 TO FFF HEX              */         
*/********************************************************************/         
*/*                                                                  */         
*   2 PSAUS2ST    CHAR(0) BDY(DWORD),    /* START SECOND SET OF                 
*                                           ASSIGNED FIELDS SAVED BY            
*                                           ACR.             @G383PXU*/         
*   2 PSACDSAV    CHAR(16),              /* CALLDISP REGISTER SAVE              
*                                           AREA FOR REGISTERS 14-1             
*                                                            @G383PXU*/         
*    3 PSACDSAE   CHAR(4),               /* CALLDISP REGISTER 14 SAVE           
*                                           AREA             @G383PXU*/         
*    3 PSACDSAF   CHAR(4),               /* CALLDISP REGISTER 15 SAVE           
*                                           AREA             @G383PXU*/         
*    3 PSACDSA0   CHAR(4),               /* CALLDISP REGISTER 0  SAVE           
*                                           AREA             @G383PXU*/         
*    3 PSACDSA1   CHAR(4),               /* CALLDISP REGISTER 1  SAVE           
*                                           AREA             @G383PXU*/         
*   2 PSAGSPSW    CHAR(4),               /* GLOBAL SCHEDULE SYSTEM MASK         
*                                           SAVE AREA.                          
*                                           OWNERSHIP: SUPERVISOR               
*                                           CONTROL.                            
*                                           SERIALIZATION: DISABLED.            
*                                                            @ZA63674*/         
*   2 PSAGSRGS    FIXED(31),             /* GLOBAL SCHEDULE REGISTER            
*                                           SAVE AREA.                          
*                                           OWNERSHIP: SUPERVISOR               
*                                           CONTROL.                            
*                                           SERIALIZATION: DISABLED.            
*                                                            @ZA63674*/         
*   2 PSAMARA     PTR(31),               /* Master's ASTE Real address          
*                                                                @MUA*/         
* %IF ASAXMAC_ISITPLX ^= 'YES' %THEN %GOTO PSAPLS01;          /* @MUA*/         
*   3 PSA_MasterASTERealAddr Ptr(31),    /* Master's ASTE Real address          
*                                                                @MUA*/         
* %PSAPLS01:;                                                 /* @MUA*/         
*   2 PSASV01R    FIXED(31),             /* IEAVTRG1 register 1                 
*                                           save area.           @PAA*/         
*   2 PSASV14R    FIXED(31),             /* IEAVTRG1 register 14                
*                                           save area.           @PAA*/         
*   2 PSAEMS2R    FIXED(31),             /* REGISTER SAVE AREA                  
*                                           OWNERSHIP: MEMORY SWITCH.           
*                                           SERIALIZATION: DISABLED.            
*                                                            @G860PXK*/         
*   2 PSATRSAV    CHAR(64) BDY(WORD),    /* TRACE REGISTER                      
*                                           SAVE AREA        @G860PXH*/         
*     3 PSATRGR0  FIXED(31),             /* TRACE REGISTER 0                    
*                                           SAVE AREA        @G860PXH*/         
*     3 PSATRGR1  FIXED(31),             /* TRACE REGISTER 1                    
*                                           SAVE AREA        @G860PXH*/         
*     3 PSATRGR2  FIXED(31),             /* TRACE REGISTER 2                    
*                                           SAVE AREA        @G860PXH*/         
*     3 PSATRGR3  FIXED(31),             /* TRACE REGISTER 3                    
*                                           SAVE AREA        @G860PXH*/         
*     3 PSATRGR4  FIXED(31),             /* TRACE REGISTER 4                    
*                                           SAVE AREA        @G860PXH*/         
*     3 PSATRGR5  FIXED(31),             /* TRACE REGISTER 5                    
*                                           SAVE AREA        @G860PXH*/         
*     3 PSATRGR6  FIXED(31),             /* TRACE REGISTER 6                    
*                                           SAVE AREA        @G860PXH*/         
*     3 PSATRGR7  FIXED(31),             /* TRACE REGISTER 7                    
*                                           SAVE AREA        @G860PXH*/         
*     3 PSATRGR8  FIXED(31),             /* TRACE REGISTER 8                    
*                                           SAVE AREA        @G860PXH*/         
*     3 PSATRGR9  FIXED(31),             /* TRACE REGISTER 9                    
*                                           SAVE AREA        @G860PXH*/         
*     3 PSATRGRA  FIXED(31),             /* TRACE REGISTER 10                   
*                                           SAVE AREA        @G860PXH*/         
*     3 PSATRGRB  FIXED(31),             /* TRACE REGISTER 11                   
*                                           SAVE AREA        @G860PXH*/         
*     3 PSATRGRC  FIXED(31),             /* TRACE REGISTER 12                   
*                                           SAVE AREA        @G860PXH*/         
*     3 PSATRGRD  FIXED(31),             /* TRACE REGISTER 13                   
*                                           SAVE AREA        @G860PXH*/         
*     3 PSATRGRE  FIXED(31),             /* TRACE REGISTER 14                   
*                                           SAVE AREA        @G860PXH*/         
*     3 PSATRGRF  FIXED(31),             /* TRACE REGISTER 15                   
*                                           SAVE AREA        @G860PXH*/         
*   2 PSATRSV1    CHAR(4) BDY(WORD),     /* Trace save 1         @M8A*/         
*   2 PSATRSVS    CHAR(4) BDY(WORD),     /* Trace save for SLIP/PER             
*                                                                @M8A*/         
*   2 PSATRSV2    CHAR(8) BDY(WORD),     /* Trace save 2         @M8A*/         
*   2 PSARV878    CHAR(40) BDY(WORD),    /* RESERVED.            @M8C*/         
*   2 PSAGSAVH    CHAR(8) BDY(DWORD),    /* Register save area used             
*                                           by dispatcher        @09C*/         
*   2 PSAGSAV     CHAR(64) BDY(DWORD),   /* REGISTER SAVE AREA USED             
*                                           BY DISPATCHER AND SCHEDULE          
*                                                            @G860PXK*/         
*   2 PSASCRG1    FIXED(31),             /* GLOBAL SCHEDULE REGISTER            
*                                           SAVE AREA        @G860PXK*/         
*   2 PSASCRG2    FIXED(31),             /* GLOBAL SCHEDULE REGISTER            
*                                           SAVE AREA        @G860PXK*/         
*   2 PSAGPREG  (3) FIXED(31),           /* REGISTER SAVE AREA FOR              
*                                           SVC FLIH AND                        
*                                           SCHEDULE.        @G860PXK*/         
*   2 PSARSREG    FIXED(31),             /* RESTART FLIH REGISTER               
*                                           SAVE             @G860PXK*/         
*   2 PSAPCGR8    FIXED(31),             /* PROGRAM FLIH REGISTER 8             
*                                           SAVE AREA        @G860PXK*/         
*   2 PSAPCGR9    FIXED(31),             /* PROGRAM FLIH REGISTER 9             
*                                           SAVE AREA        @G860PXK*/         
*   2 PSAPCGAB    CHAR(8) BDY(DWORD),    /* PROGRAM FLIH REGISTER               
*                                           10-11 SAVE AREA      @LSA*/         
*     3 PSAPCGRA  FIXED(31),             /* PROGRAM FLIH REGISTER 10            
*                                           SAVE AREA        @G860PXK*/         
*     3 PSAPCGRB  FIXED(31),             /* PROGRAM FLIH REGISTER 11            
*                                           SAVE AREA        @G860PXK*/         
*   2 PSALKSA     CHAR(64) BDY(DWORD),   /* IEAVELK REGISTER SAVE               
*                                           AREA. OWNERSHIP: SUPERVISOR         
*                                           CONTROL. SERIALIZATION:             
*                                           DISABLEMENT.     @G860PXK*/         
*    3 PSALKR0     FIXED(31),            /* IEAVELK REGISTER 0 SAVE             
*                                           AREA             @G860PXK*/         
*    3 PSALKR1     FIXED(31),            /* IEAVELK REGISTER 1 SAVE             
*                                           AREA             @G860PXK*/         
*    3 PSALKR2     FIXED(31),            /* IEAVELK REGISTER 2 SAVE             
*                                           AREA             @G860PXK*/         
*    3 PSALKR3     FIXED(31),            /* IEAVELK REGISTER 3 SAVE             
*                                           AREA             @G860PXK*/         
*    3 PSALKR4     FIXED(31),            /* IEAVELK REGISTER 4 SAVE             
*                                           AREA             @G860PXK*/         
*    3 PSALKR5     FIXED(31),            /* IEAVELK REGISTER 5 SAVE             
*                                           AREA             @G860PXK*/         
*    3 PSALKR6     FIXED(31),            /* IEAVELK REGISTER 6 SAVE             
*                                           AREA             @G860PXK*/         
*    3 PSALKR7     FIXED(31),            /* IEAVELK REGISTER 7 SAVE             
*                                           AREA             @G860PXK*/         
*    3 PSALKR8     FIXED(31),            /* IEAVELK REGISTER 8 SAVE             
*                                           AREA             @G860PXK*/         
*    3 PSALKR9     FIXED(31),            /* IEAVELK REGISTER 9 SAVE             
*                                           AREA             @G860PXK*/         
*    3 PSALKR10    FIXED(31),            /* IEAVELK REGISTER 10 SAVE            
*                                           AREA             @G860PXK*/         
*    3 PSALKR11    FIXED(31),            /* IEAVELK REGISTER 11 SAVE            
*                                           AREA             @G860PXK*/         
*    3 PSALKR12    FIXED(31),            /* IEAVELK REGISTER 12 SAVE            
*                                           AREA             @G860PXK*/         
*    3 PSALKR13    FIXED(31),            /* IEAVELK REGISTER 13 SAVE            
*                                           AREA             @G860PXK*/         
*    3 PSALKR14    FIXED(31),            /* IEAVELK REGISTER 14 SAVE            
*                                           AREA             @G860PXK*/         
*    3 PSALKR15    FIXED(31),            /* IEAVELK REGISTER 15 SAVE            
*                                           AREA             @G860PXK*/         
*   2 PSASLSA     CHAR(72) BDY(DWORD),   /* SINGLE LEVEL SAVE AREA              
*                                           USED BY DISABLED ROUTINES           
*                                           WITH NO DEPENDENCY THAT             
*                                           THE SAVE AREA REMAIN                
*                                           INTACT ACROSS A CALL.               
*                                           THIS AREA IS NOT MAINTAINED         
*                                           BY RESTART PROCESSING THAT          
*                                           RESULTS IN AN ABEND OF THE          
*                                           INTERRUPTED RTN. @G860PXK*/         
*   2 PSAJSTSA    CHAR(64),              /* JOB STEP TIMING SAVE AREA.          
*                                           OWNERSHIP: SUPERVISOR               
*                                           CONTROL.                            
*                                           SERIALIZATION: DISABLEMENT.         
*                                                                @H1A*/         
*   2 PSAUS2ND    CHAR(0) BDY(DWORD),    /* END SECOND SET OF                   
*                                           ASSIGNED FIELDS SAVED BY            
*                                           ACR.                 @H1M*/         
*   2 PSASLKSA    CHAR(64) BDY(DWORD),   /* IEAVESLK REGISTER SAVE AREA         
*                                           OWNERSHIP: SUPERVISOR               
*                                           CONTROL. SERIALIZATION:             
*                                           DISABLEMENT.         @P4A*/         
*    3 PSASLKR0    FIXED(31),            /* IEAVESLK REGISTER 0 SAVE            
*                                           AREA                 @P4A*/         
*    3 PSASLKR1    FIXED(31),            /* IEAVESLK REGISTER 1 SAVE            
*                                           AREA                 @P4A*/         
*    3 PSASLKR2    FIXED(31),            /* IEAVESLK REGISTER 2 SAVE            
*                                           AREA                 @P4A*/         
*    3 PSASLKR3    FIXED(31),            /* IEAVESLK REGISTER 3 SAVE            
*                                           AREA                 @P4A*/         
*    3 PSASLKR4    FIXED(31),            /* IEAVESLK REGISTER 4 SAVE            
*                                           AREA                 @P4A*/         
*    3 PSASLKR5    FIXED(31),            /* IEAVESLK REGISTER 5 SAVE            
*                                           AREA                 @P4A*/         
*    3 PSASLKR6    FIXED(31),            /* IEAVESLK REGISTER 6 SAVE            
*                                           AREA                 @P4A*/         
*    3 PSASLKR7    FIXED(31),            /* IEAVESLK REGISTER 7 SAVE            
*                                           AREA                 @P4A*/         
*    3 PSASLKR8    FIXED(31),            /* IEAVESLK REGISTER 8 SAVE            
*                                           AREA                 @P4A*/         
*    3 PSASLKR9    FIXED(31),            /* IEAVESLK REGISTER 9 SAVE            
*                                           AREA                 @P4A*/         
*    3 PSASLKRA    FIXED(31),            /* IEAVESLK REGISTER 10 SAVE           
*                                           AREA                 @P4A*/         
*    3 PSASLKRB    FIXED(31),            /* IEAVESLK REGISTER 11 SAVE           
*                                           AREA                 @P4A*/         
*    3 PSASLKRC    FIXED(31),            /* IEAVESLK REGISTER 12 SAVE           
*                                           AREA                 @P4A*/         
*    3 PSASLKRD    FIXED(31),            /* IEAVESLK REGISTER 13 SAVE           
*                                           AREA                 @P4A*/         
*    3 PSASLKRE    FIXED(31),            /* IEAVESLK REGISTER 14 SAVE           
*                                           AREA                 @P4A*/         
*    3 PSASLKRF    FIXED(31),            /* IEAVESLK REGISTER 15 SAVE           
*                                           AREA                 @P4A*/         
*                                                                               
*   2 * CHAR(12) BDY(DWORD),             /*                      @MSC*/         
* %IF ASAXMAC_ISITPLX ^= 'YES' %THEN %GOTO PSAOFA24;          /* @MSA*/         
*    3 PSA_SETLOCKI_SaveArea Char(8),    /* SETLOCKI Register save              
*                                           area                 @MSA*/         
*    3 PSA_LastLogCPUHeldLock Fixed(32), /* When the CPU last requested         
*                                           a spin lock that was held           
*                                           by another CPU, the last            
*                                           observed lockword content.          
*                                                                @MSA*/         
* %PSAOFA24:;                                                 /* @MSA*/         
*   2 PSARVA24    CHAR(24),              /* RESERVED.            @MSA*/         
*   2 PSASCSAV    CHAR(64),              /* IEAVESC0 save area   @P7A*/         
*   2 PSASFLGS    CHAR(1),               /* Schedule flags                      
*                                           Ownership: Supervisor               
*                                           Control                             
*                                           Serialization: Disablement          
*                                                                @P8A*/         
*     3 PSASCHDA   BIT(1),               /* Schedule is active   @LPA*/         
*     3 PSAMCHA    BIT(1),               /* Machine Check is active             
*                                                                @06A*/         
*     3 PSARSTA    BIT(1),               /* Restart is active                   
*                                                                @06A*/         
*     3 PSAEGRA    BIT(1),               /* Global Recovery is active           
*                                                                @06A*/         
*     3 PSARTMA    BIT(1),               /* Selected RTM functions              
*                                           are active           @06A*/         
* %IF ASAXMAC_ISITPLX ^= 'YES' %THEN %GOTO PSAPLX4;        /*    @PLA*/         
*     3 PsaDontGetWeb bit(1),            /* A WEB or WEBQLOCK is held.          
*                                           IEAVESC0 should not obtain          
*                                           a WEB.               @PLA*/         
*     3 *          BIT(2),               /* Reserved for SC1C5   @PLC*/         
* %PSAPLX4:;                                               /*    @PLA*/         
*   2 PSAMISCF    CHAR(1),               /* Miscellaneous flags                 
*                                           set ONLY at IPL.                    
*                                           Ownership: Supervisor               
*                                           Control                             
*                                           Serialization: None  @LVA*/         
*     3 PSAALR    BIT(1),                /* Equivalent to CVTALR @LVA*/         
*   2 PSARVA7E    CHAR(2),               /* Reserved for SC1C5   @LVC*/         
*   2 PSARVA80    CHAR(188),             /* RESERVED.            @P8C*/         
*   2 PSAGSCH7    PTR(31),               /* ENABLED GLOBAL SCHEDULE             
*                                           ENTRY POINT      @G860PXK*/         
*   2 PSAGSCH8    PTR(31),               /* DISABLED GLOBAL SCHEDULE            
*                                           ENTRY POINT      @G860PXK*/         
*   2 PSALSCH1    PTR(31),               /* ENABLED SCHEDULE ENTRY              
*                                           POINT  (MDC371)  @G50DP9A*/         
*   2 PSALSCH2    PTR(31),               /* DISABLED SCHEDULE ENTRY             
*                                           POINT  (MDC372)  @G50DP9A*/         
*   2 PSASVT PTR(31) ASAXMAC_READONLY ASAXMAC_P31AS64                           
*                                    ,   /* ADDRESS OF SUPERVISOR               
*                                           VECTOR TABLE                        
*                                           (MDC373)         @G50DP9A*/         
*   2 PSASVTX PTR(31) ASAXMAC_READONLY ASAXMAC_P31AS64                          
*                                     , /* Address of Supervisor Vector         
*                                   Table extension.                            
*                                   SERIALIZATION: None                         
*                                   OWNERSHIP: Supervisor Control               
*                                                                @LNA*/         
*   2 PSAFAFRR    CHAR(8) BDY(WORD),     /* Fast FRR fields.  These             
*                                           fields are for IBM use              
*                                           only                 @PSA*/         
*     3 PSAFFRR     PTR(31),             /* Fast SETFRR address.  This          
*                                           field is for IBM use only.          
*                                           Serialization: CPU Lock,            
*                                           PSAFFRRS must be set                
*                                           before PSAFFRR                      
*                                           Ownership: RTM       @PSC*/         
*     3 PSAFFRRS    PTR(31),             /* Fast SETFRR stack.  This            
*                                           field is for IBM use only.          
*                                           Serialization: CPU Lock,            
*                                           PSAFFRRS must be set                
*                                           before PSAFFRR                      
*                                           Ownership: RTM       @PSA*/         
*   2 PSARVB5C    CHAR(36),              /* Reserved             @PSC*/         
*   2 PSARVB80    CHAR(1112) BDY(DWORD), /* Reserved             @0LC*/         
*     3 PSASTAK   CHAR(1112) BDY(DWORD), /* Do not use           @0LC*/         
*   2 PSARVFD8    CHAR(40),              /* Reserved             @0LC*/         
*   2 PSAEND CHAR(0) BDY(DWORD);         /* END OF PSA.      @G383PXU*/         
*                                                                               
*                                                                               
*DECLARE FLC DEF(PSA) CHAR(LENGTH(PSA)) BDY(DWORD);                             
*                                                                               
*                                                                               
*%IF IBM_CBGENC = 'YES' %THEN %GOTO PSACBGC1C;                                  
*DECLARE                                                                        
*%IF PSAQUALIF='' % THEN                 /* MAP THE RECOVERY STACK   */         
*    %GOTO PSA0040;                      /* VECTOR TABLE ON PSARSVT  */         
*                                        /* ELSE                 @LIA*/         
*  1 PSARSVTE CHAR(64) DEF(PSAQUALIF.PSARSVT) BDY(WORD), /*      @LIA*/         
*%GOTO PSA0050;                          /* ON WHAT IS DEFINED   @LIA*/         
*%PSA0040:;                              /* BY STANDALONE DUMP   @LIA*/         
*  1 PSARSVTE CHAR(64) DEF(PSARSVT) BDY(WORD),                                  
*%PSA0050:;                              /*                      @LIA*/         
*                                        /* RECOVERY STACK VECTOR               
*                                           TABLE              MDC065*/         
*   2 PSACSTK     PTR(31),               /* ADDRESS OF CURRENTLY USED           
*                                           FUNCTIONAL RECOVERY                 
*                                           ROUTINE (FRR) STACK                 
*                                                              MDC061*/         
*   2 PSANSTK     PTR(31),               /* ADDRESS OF NORMAL FRR               
*                                           STACK              MDC062*/         
*   2 PSASSTK     PTR(31),               /* ADDRESS OF SVC-I/O-                 
*                                           DISPATCHER FRR STACK                
*                                                              MDC063*/         
*   2 PSASSAV     PTR(31),               /* ADDRESS OF INTERRUPTED              
*                                           STACK SAVED BY SVC, I/O,            
*                                           DISPATCHER         MDC066*/         
*   2 PSAMSTK     PTR(31),               /* ADDRESS OF MCH FRR STACK            
*                                                              MDC067*/         
*   2 PSAMSAV     PTR(31),               /* ADDRESS OF INTERRUPTED              
*                                           STACK SAVED BY MCH MDC068*/         
*   2 PSAPSTK     PTR(31),               /* ADDRESS OF PROGRAM CHECK            
*                                           FLIH FRR STACK     MDC069*/         
*   2 PSAPSAV     PTR(31),               /* ADDRESS OF INTERRUPTED              
*                                           STACK SAVED BY PROGRAM              
*                                           CHECK FLIH         MDC070*/         
*   2 PSAESTK1    PTR(31),               /* ADDRESS OF EXTERNAL FLIH            
*                                           FRR STACK FOR NON-                  
*                                           RECURSIVE ENTRIES  MDC071*/         
*   2 PSAESAV1    PTR(31),               /* ADDRESS OF INTERRUPTED              
*                                           STACK SAVED BY EXTERNAL             
*                                           FLIH FOR NON-RECURSIVE              
*                                           ENTRIES          @G860PXK*/         
*   2 PSAESTK2    PTR(31),               /* ADDRESS OF EXTERNAL FLIH            
*                                           FRR STACK FOR FIRST LEVEL           
*                                           RECURSIONS         MDC073*/         
*   2 PSAESAV2    PTR(31),               /* ADDRESS OF INTERRUPTED              
*                                           STACK SAVED BY EXTERNAL             
*                                           FLIH FOR FIRST LEVEL                
*                                           RECURSIONS         MDC074*/         
*   2 PSAESTK3    PTR(31),               /* ADDRESS OF EXTERNAL FLIH            
*                                           FRR STACK FOR SECOND                
*                                           LEVEL RECURSIONS AND                
*                                           ACR                MDC075*/         
*   2 PSAESAV3    PTR(31),               /* ADDRESS OF INTERRUPTED              
*                                           STACK SAVED BY EXTERNAL             
*                                           FLIH FOR SECOND LEVEL               
*                                           RECURSIONS         MDC076*/         
*   2 PSARSTK     PTR(31),               /* ADDRESS OF RESTART FLIH             
*                                           FRR STACK          MDC077*/         
*   2 PSARSAV     PTR(31);               /* ADDRESS OF INTERRUPTED              
*                                           STACK SAVED BY RESTART              
*                                           FLIH               MDC078*/         
*%PSACBGC1C:;                                                                   
*                                                                               
*                                                                               
*DECLARE                                 /*                  @G50NP9A*/         
*   PSAENABL BIT(8) CONSTANT('10'X),     /* VALUE FOR PSACR0CB TO               
*                                           ENABLE PSA PROTECTION               
*                                           (MDC428)         @G50NP9A*/         
*   PSADSABL BIT(8) CONSTANT('00'X);     /* VALUE FOR PSACR0CB TO               
*                                           DISABLE PSA PROTECTION              
*                                           (MDC429)         @G50NP9A*/         
* %IF ASAXMAC_ISITPLX ^= 'YES' %THEN %GOTO PSAPLX1;        /*    @LSA*/         
*/********************************************************************/         
*/* CONSTANTS for PSAProcClass field.                                */         
*/********************************************************************/         
*DECLARE                                                                        
*     PSAProcClass_CP   Fixed(8) Constant(0),/* CP.              @H4A*/         
*     PSAProcClass_zCBP Fixed(8) Constant(2),/* zCBP.            @MTA*/         
*     PSAProcClass_zAAP Fixed(8) Constant(2),/* zAAP.            @H4A*/         
*     PSAProcClass_zIIP Fixed(8) Constant(4),/* zIIP.            @H5A*/         
*     PSAProcClass_SUP Fixed(8) Constant(4);/* SUP.              @H4A*/         
*                                                                               
*DECLARE                                                                        
*     PSAProcClassIndex_CP   Fixed(8) Constant(0) /* CP                         
*                                      Proc class index          @0JA*/         
*    ,PSAProcClassIndex_zCBP Fixed(8) Constant(1) /* zCBP                       
*                                      Proc class index          @MTA*/         
*    ,PSAProcClassIndex_zAAP Fixed(8) Constant(1) /* zAAP                       
*                                      Proc class index          @0JA*/         
*    ,PSAProcClassIndex_zIIP Fixed(8) Constant(2) /* zIIP                       
*                                      Proc class index          @0JA*/         
*    ,PSAProcClassIndex_Max  Fixed(8) Constant(PSAProcClassIndex_zIIP)          
*                                   /* Max Proc class index      @0JA*/         
*    ,PSAProcClassConverter  Fixed(8) Constant(2) /* Procclass                  
*                                      conversion factor         @0EA*/         
*    ,PSAMaxProcClass        Fixed(8) Constant(PSAProcClass_zIIP) /*            
*                                      largest possible procclass               
*                                                                @0EA*/         
*    ,PSAMaxProcClassIndex   Fixed(8) Constant(  PSAMaxProcClass                
*                                               / PSAProcClassConverter         
*                                              ) /* Maximum ProcClass           
*                                      index.  A ProcClass index begins         
*                                      at 0 and ends at this number.            
*                                      Currently:                               
*                                      Index 0 - CP   ProcClassIndex            
*                                      Index 1 - zCBP or zAAP                   
*                                                     ProcClassIndex            
*                                      Index 2 - zIIP ProcClassIndex            
*                                                                @MTC*/         
*    ;                                                                          
*                                                                               
*%IF IBM_CBGENC = 'YES' %THEN                                                   
*  %GOTO PSAPLX1;                                                               
* %INCLUDE SYSLIB(IHAPSAE);                                /*    @LSA*/         
* %INCLUDE SYSLIB(IHAPSAX);                                /*    @LSA*/         
*%PSAPLX1:;                                                                     
*  @LISTPOP;                                               /*@G860PXK*/         
