*%IFAUSAGE: MACRO KEYS(REQUEST,PRODOWNER,PRODNAME,PRODVERS,PRODQUAL,    00000100
*                 PRODID,DOMAIN,SCOPE,PRTOKEN,PRTOKEN64,UNAUTHSERV,     00000200
*                 ENDTIME,ENDTIME64,ENDDATA,ENDDATA64,BEGTIME,          00000300
*                 BEGTIME64,DATA,DATA64,FORMAT,CURRENTDATA,             00000400
*                 CURRENTDATA64,LINKAGE,VALIDATE,FBFE,RETCODE,          00000500
*                 PLISTVER,MF);                                         00000600
*/**** START OF SPECIFICATIONS **************************************** 00000700
*                                                                     * 00000800
*                                                                     * 00000900
*01* MACRO NAME:  IFAUSAGE                              -08/06/19-<2> * 00001000
*                                                                     * 00001100
*                                                                     * 00001200
*01* DESCRIPTIVE NAME:  SMF Usage Data Collection Service             * 00001300
*                                                                     * 00001400
*01* PROPRIETARY STATEMENT:                                           * 00001500
*                                                                     * 00001600
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001700
*     5650-ZOS COPYRIGHT IBM CORP. 1989, 2019                         * 00001800
*                                                                     * 00001900
* STATUS= HBB77C0                                                     * 00002000
*                                                                     * 00002100
*                                                                     * 00002200
*                                                                     * 00002300
*01* FUNCTION:                                                        * 00002400
*                                                                     * 00002500
*      Provide program access to the "SMF Usage Data Collection"      * 00002600
*      Service.                                                       * 00002700
*                                                                     * 00002800
*02*   OPERATION:                                                     * 00002900
*                                                                     * 00003000
*                                                                     * 00003100
*        This macro provides the product with program level access to * 00003200
*        the SMF Usage Data Collection Services.  The macro supports  * 00003300
*        the following requests:                                      * 00003400
*                                                                     * 00003500
*                                                                     * 00003600
*        REGISTER  Identify the Product to the Collection Services    * 00003700
*                  and specify the Domain and Scope values for the    * 00003800
*                  product.                                           * 00003900
*                                                                     * 00004000
*        DEREGISTER  Complete the collection of usage data for the    * 00004100
*                  specified product in the current domain and scope. * 00004200
*                                                                     * 00004300
*        FUNCTIONBEGIN  Begin the Collection of Usage Data for the    * 00004400
*                  product at the "function" level with in the        * 00004500
*                  current task.                                      * 00004600
*                                                                     * 00004700
*        FUNCTIONDATA  Provide Product-Specific Usage data to the     * 00004800
*                  collection service; this function is only needed   * 00004900
*                  if the product chooses not to use the default      * 00005000
*                  collection of CPU Time.                            * 00005100
*                                                                     * 00005200
*        FUNCTIONEND  End the collection of usage data for the        * 00005300
*                  product in the current task.                       * 00005400
*                                                                     * 00005500
*        STATUS    Returns an indication of the Installation and      * 00005600
*                  Active Status of the Usage Data Collection         * 00005700
*                  Services.                                          * 00005800
*                                                                     * 00005900
*                                                                     * 00006000
*                                                                     * 00006100
*        In all cases the macro will generate inline code which will  * 00006200
*        define and build an internal parameter list and invoke the   * 00006300
*        requested services using the specified linkage.              * 00006400
*                                                                     * 00006500
*        For all functions, the success or failure of the request is  * 00006600
*        indicated to the invoker via a return code value that is     * 00006700
*        returned on the request.                                     * 00006800
*                                                                     * 00006900
*        Most of the requests only support a branch interface, which  * 00007000
*        means that the macro will generate a standard CALL statement * 00007100
*        of a based entry point as the means for transferring control * 00007200
*        to the service.  The REGISTER request also supports an SVC   * 00007300
*        interface which allows unauthorized callers to register      * 00007400
*        their product with the service.  The use of the unauthorized * 00007500
*        REGISTER interface is limited to TWO calls per DOMAIN total. * 00007600
*        The STATUS request also supports an SVC interface which      * 00007700
*        allows unauthorized callers to check the status of the       * 00007800
*        services.                                                    * 00007900
*                                                                     * 00008000
*01* EXTERNAL CLASSIFICATION:  PI                                     * 00008100
*                                                                     * 00008200
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00008300
*                                                                     * 00008400
*01* ENVIRONMENT:                                                     * 00008500
*                                                                     * 00008600
*                                                                     * 00008700
*      Minimum authorization: Problem or Supervisor state.  Any PSW   * 00008800
*                        key.  LINKAGE=BRANCH Requires that the       * 00008900
*                        calling program must be Supervisor State.    * 00009000
*                                                                     * 00009100
*      Dispatchable unit mode: Task mode.                             * 00009200
*                                                                     * 00009300
*      Cross Memory Mode: PASN=HASN=SASN.                             * 00009400
*                                                                     * 00009500
*      AMODE:            31- or 64-bit.                               * 00009600
*                                                                     * 00009700
*                        If in AMODE 64, specify SYSSTATE AMODE64=YES * 00009800
*                        before invoking this macro.                  * 00009900
*                                                                     * 00010000
*      ASC mode:         Primary.                                     * 00010100
*                                                                     * 00010200
*      Interrupt status: Enabled for I/O and external interrupts.     * 00010300
*                                                                     * 00010400
*      Locks:            No locks held.                               * 00010500
*                                                                     * 00010600
*      Control parameters: None.                                      * 00010700
*                                                                     * 00010800
*                                                                     * 00010900
*                                                                     * 00011000
*01* PROGRAMMING REQUIREMENTS:                                        * 00011100
*                                                                     * 00011200
*    None                                                             * 00011300
*                                                                     * 00011400
*01* RESTRICTIONS:                                                    * 00011500
*                                                                     * 00011600
*    None                                                             * 00011700
*                                                                     * 00011800
*01* INPUT REGISTER INFORMATION:                                      * 00011900
*                                                                     * 00012000
*    None                                                             * 00012100
*                                                                     * 00012200
*01* OUTPUT REGISTER INFORMATION:                                     * 00012300
*                                                                     * 00012400
*    None                                                             * 00012500
*                                                                     * 00012600
*01* PERFORMANCE IMPLICATIONS:                                        * 00012700
*                                                                     * 00012800
*    None.                                                            * 00012900
*                                                                     * 00013000
*01* INPUT REGISTERS:  GR0-GR12    Undefined                          * 00013100
*                      GR13        In certain cases, address of a     * 00013200
*                                  save area. See notes.              * 00013300
*                      GR14-GR15   Undefined                          * 00013400
*                                                                     * 00013500
*01* OUTPUT REGISTERS: GR0-GR14    Unchanged                          * 00013600
*                      GR15        Return Code                        * 00013700
*                                                                     * 00013800
*01* MACRO USAGE NOTES:                                               * 00013900
*                                                                     * 00014000
*                                                                     * 00014100
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00014200
*        global macro variable.  Any value other than 'NO' will       * 00014300
*        result in the macro expansion being printed.  The default is * 00014400
*        'YES'.  The following examples illustrate how the ZPRINT     * 00014500
*        variable should be set.                                      * 00014600
*                                                                     * 00014700
*                    GBLC &ZPRINT                                     * 00014800
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00014900
*                                                                     * 00015000
*                                                                     * 00015100
*    2.  The IFAUSAGE macro supports multiple versions. The macro key * 00015200
*        list  below  contains the version level in which the key was * 00015300
*        first  introduced.  Positionals  are  identified by the word * 00015400
*        'Positional'  followed by the numeric value of its position. * 00015500
*        Nested  positionals  are  preceded  by their outer key.  The * 00015600
*        lowest value represents the original version and the highest * 00015700
*        value  represents  the  most  recent version of the IFAUSAGE * 00015800
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00015900
*        least  as high as the highest version number of all the keys * 00016000
*        being used.                                                  * 00016100
*                                                                     * 00016200
*        VERSION   KEY                                                * 00016300
*                                                                     * 00016400
*        LINKAGE=BRANCH  callers  must set general register 13 to the * 00016500
*        31-bit  address of a 72 byte savearea (for AMODE 31 callers) * 00016600
*        or  a  64-bit  address  of a 144 byte savearea (for AMODE 64 * 00016700
*        callers.)                                                    * 00016800
*                                                                     * 00016900
*                                                                     * 00017000
*                                                                     * 00017100
*01* SYNTAX:                                                          * 00017200
*                                                                     * 00017300
*Ýxlabel¨  IFAUSAGE  Ð  REQUEST=REGISTER                              * 00017400
*                    !     ,PRODOWNER=xprodowner                      * 00017500
*                    !     ,PRODNAME=xprodname                        * 00017600
*                    !    Ý,PRODVERS=»xprodvers!Noneº¨                * 00017700
*                    !    Ý,PRODQUAL=»xprodqual!Noneº¨                * 00017800
*                    !    Ý,PRODID=»xprodid!Noneº¨                    * 00017900
*                    !   ÐÝ,DOMAIN=ADDRSP¨                            * 00018000
*                    !   ¿Ý,DOMAIN=TASK                               * 00018100
*                    !        Ý,SCOPE=»ALL!FUNCTIONº¨¨                * 00018200
*                    !   ÐÝ,PRTOKEN=Ýxprtoken¨                        * 00018300
*                    !   ¿ ,PRTOKEN64=Ýxprtoken64¨¨                   * 00018400
*                    !   ÐÝ,UNAUTHSERV=BASE¨                          * 00018500
*                    !   ¿Ý,UNAUTHSERV=LEVEL1¨                        * 00018600
*                    Ô ,REQUEST=DEREGISTER                            * 00018700
*                    !   Ð ,PRODOWNER=xprodowner                      * 00018800
*                    !   !     ,PRODNAME=xprodname                    * 00018900
*                    !   !    Ý,PRODVERS=»xprodvers!Noneº¨            * 00019000
*                    !   !    Ý,PRODQUAL=»xprodqual!Noneº¨            * 00019100
*                    !   !    Ý,PRODID=»xprodid!Noneº¨                * 00019200
*                    !   Ô ,PRTOKEN=xprtoken                          * 00019300
*                    !   ¿ ,PRTOKEN64=xprtoken64                      * 00019400
*                    !   ÐÝ,ENDTIME=Ýxendtime¨                        * 00019500
*                    !   ¿ ,ENDTIME64=Ýxendtime64¨¨                   * 00019600
*                    !   ÐÝ,ENDDATA=Ýxenddata¨                        * 00019700
*                    !   ¿ ,ENDDATA64=Ýxenddata64¨¨                   * 00019800
*                    Ô ,REQUEST=FUNCTIONBEGIN                         * 00019900
*                    !   Ð ,PRODOWNER=xprodowner                      * 00020000
*                    !   !     ,PRODNAME=xprodname                    * 00020100
*                    !   !    Ý,PRODVERS=»xprodvers!Noneº¨            * 00020200
*                    !   !    Ý,PRODQUAL=»xprodqual!Noneº¨            * 00020300
*                    !   !    Ý,PRODID=»xprodid!Noneº¨                * 00020400
*                    !   Ô ,PRTOKEN=xprtoken                          * 00020500
*                    !   ¿ ,PRTOKEN64=xprtoken64                      * 00020600
*                    !   ÐÝ,BEGTIME=Ýxbegtime¨                        * 00020700
*                    !   ¿ ,BEGTIME64=Ýxbegtime64¨¨                   * 00020800
*                    Ô ,REQUEST=FUNCTIONDATA                          * 00020900
*                    !   Ð ,PRODOWNER=xprodowner                      * 00021000
*                    !   !     ,PRODNAME=xprodname                    * 00021100
*                    !   !    Ý,PRODVERS=»xprodvers!Noneº¨            * 00021200
*                    !   !    Ý,PRODQUAL=»xprodqual!Noneº¨            * 00021300
*                    !   !    Ý,PRODID=»xprodid!Noneº¨                * 00021400
*                    !   Ô ,PRTOKEN=xprtoken                          * 00021500
*                    !   ¿ ,PRTOKEN64=xprtoken64                      * 00021600
*                    !   Ð ,DATA=xdata                                * 00021700
*                    !   ¿ ,DATA64=xdata64                            * 00021800
*                    !    Ý,FORMAT=»CPUTIME!BINARY!FLOATº¨            * 00021900
*                    !   ÐÝ,CURRENTDATA=Ýxcurrentdata¨                * 00022000
*                    !   ¿ ,CURRENTDATA64=Ýxcurrentdata64¨¨           * 00022100
*                    Ô ,REQUEST=FUNCTIONEND                           * 00022200
*                    !   Ð ,PRODOWNER=xprodowner                      * 00022300
*                    !   !     ,PRODNAME=xprodname                    * 00022400
*                    !   !    Ý,PRODVERS=»xprodvers!Noneº¨            * 00022500
*                    !   !    Ý,PRODQUAL=»xprodqual!Noneº¨            * 00022600
*                    !   !    Ý,PRODID=»xprodid!Noneº¨                * 00022700
*                    !   Ô ,PRTOKEN=xprtoken                          * 00022800
*                    !   ¿ ,PRTOKEN64=xprtoken64                      * 00022900
*                    !   ÐÝ,ENDTIME=Ýxendtime¨                        * 00023000
*                    !   ¿ ,ENDTIME64=Ýxendtime64¨¨                   * 00023100
*                    !   ÐÝ,ENDDATA=Ýxenddata¨                        * 00023200
*                    !   ¿ ,ENDDATA64=Ýxenddata64¨¨                   * 00023300
*                    ¿ ,REQUEST=STATUS                                * 00023400
*                    ÐÝ,LINKAGE=SVC¨                                  * 00023500
*                    ¿Ý,LINKAGE=BRANCH                                * 00023600
*                        ÐÝ,VALIDATE=YES¨                             * 00023700
*                        ¿Ý,VALIDATE=NO¨¨                             * 00023800
*                    ÐÝ,FBFE=NO¨                                      * 00023900
*                    ¿Ý,FBFE=YES¨                                     * 00024000
*                     Ý,RETCODE=xretcode¨                             * 00024100
*                     Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨         * 00024200
*                    ÐÝ,MF=S¨                                         * 00024300
*                    ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                  * 00024400
*                    ÔÝ,MF=(M,xmfctrl»,COMPLETE!NOCHECKº)¨            * 00024500
*                    ¿Ý,MF=(E,xmfctrl»,COMPLETE!NOCHECKº)¨            * 00024600
*                                                                     * 00024700
*                                                                     * 00024800
*      Where:                                                         * 00024900
*                                                                     * 00025000
*                                                                     * 00025100
*      Ýxlabel¨                                                       * 00025200
*          is an optional symbol, starting in column 1, that is the   * 00025300
*          name on the IFAUSAGE macro invocation.  The name must      * 00025400
*          conform to the rules for an ordinary assembler language    * 00025500
*          symbol.                                                    * 00025600
*          DEFAULT: No name.                                          * 00025700
*                                                                     * 00025800
*                                                                     * 00025900
*                                                                     * 00026000
*                                                                     * 00026100
*       REQUEST(»REGISTER!DEREGISTER!FUNCTIONBEGIN!FUNCTIONDATA!FUNCT * 00026200
*          IONEND!STATUSº)                                            * 00026300
*          is a required keyword input Specify the Service to be      * 00026400
*          invoked.                                                   * 00026500
*                                                                     * 00026600
*                                                                     * 00026700
*           REQUEST(REGISTER)                                         * 00026800
*              Request: Identify Product for Usage Data Collection    * 00026900
*              and provide the Domain and Scope options to be used.   * 00027000
*                                                                     * 00027100
*                                                                     * 00027200
*              PRODOWNER(xprodowner)                                  * 00027300
*                  is the name (RS-type) (or address in register      * 00027400
*                  (2)-(12) ASM only) of a required 16 character      * 00027500
*                  input containing the Product's Owner or Vendor     * 00027600
*                  Name for this request.                             * 00027700
*                                                                     * 00027800
*              PRODNAME(xprodname)                                    * 00027900
*                  is the name (RS-type) (or address in register      * 00028000
*                  (2)-(12) ASM only) of a required 16 character      * 00028100
*                  input field containing the Name of the product for * 00028200
*                  the request.                                       * 00028300
*                                                                     * 00028400
*                                                                     * 00028500
*                                                                     * 00028600
*                                                                     * 00028700
*              ÝPRODVERS(»xprodvers!Noneº)¨                           * 00028800
*                  is the name (RS-type) (or address in register      * 00028900
*                  (2)-(12) ASM only) of an optional 8 character      * 00029000
*                  input field containing the Version of the product  * 00029100
*                  for the request.                                   * 00029200
*                  DEFAULT: None                                      * 00029300
*                                                                     * 00029400
*              ÝPRODQUAL(»xprodqual!Noneº)¨                           * 00029500
*                  is the name (RS-type) (or address in register      * 00029600
*                  (2)-(12) ASM only) of an optional 8 character      * 00029700
*                  input field containing the Qualifier of the        * 00029800
*                  product for the request.                           * 00029900
*                  DEFAULT: None                                      * 00030000
*                                                                     * 00030100
*              ÝPRODID(»xprodid!Noneº)¨                               * 00030200
*                  is the name (RS-type) (or address in register      * 00030300
*                  (2)-(12) ASM only) of an optional 8 character      * 00030400
*                  input field containing the ID of the Product (for  * 00030500
*                  example the 'PID' Number).                         * 00030600
*                  DEFAULT: None                                      * 00030700
*                                                                     * 00030800
*                                                                     * 00030900
*                                                                     * 00031000
*                                                                     * 00031100
*              ÝDOMAIN(»ADDRSP!TASKº)¨                                * 00031200
*                  is an optional keyword input Specifies the level   * 00031300
*                  of data to be collected for this product.          * 00031400
*                  DEFAULT: ADDRSP                                    * 00031500
*                                                                     * 00031600
*                                                                     * 00031700
*                  ÝDOMAIN(ADDRSP)¨                                   * 00031800
*                      Provide Data Collection at the Address Space   * 00031900
*                      Level                                          * 00032000
*                                                                     * 00032100
*                  ÝDOMAIN(TASK)                                      * 00032200
*                      Request Data Collection for the current task.  * 00032300
*                                                                     * 00032400
*                                                                     * 00032500
*                      ÝSCOPE(»ALL!FUNCTIONº)¨¨                       * 00032600
*                          is an optional keyword input Define the    * 00032700
*                          level of data collection with in the task  * 00032800
*                          that is being requested.                   * 00032900
*                          DEFAULT: ALL                               * 00033000
*                                                                     * 00033100
*                                                                     * 00033200
*                          SCOPE(ALL)                                 * 00033300
*                              Requests that all the CPU Time in the  * 00033400
*                              Task be associated with the requesting * 00033500
*                              product.                               * 00033600
*                                                                     * 00033700
*                          SCOPE(FUNCTION)                            * 00033800
*                              Requests that only the CPU time that   * 00033900
*                              is accumulated during the invocation   * 00034000
*                              of the FUNCTION - BEGIN and END        * 00034100
*                              requests be associated with this       * 00034200
*                              product.  Additional invocations of    * 00034300
*                              the IFAUSAGE macro for FUNCTION -      * 00034400
*                              BEGIN and and requests is expected.    * 00034500
*                                                                     * 00034600
*                                                                     * 00034700
*                                                                     * 00034800
*                                                                     * 00034900
*                                                                     * 00035000
*                                                                     * 00035100
*                                                                     * 00035200
*                                                                     * 00035300
*                                                                     * 00035400
*                                                                     * 00035500
*              The following is a set of mutually exclusive keys.     * 00035600
*              This set is optional; only one key may be specified.   * 00035700
*                                                                     * 00035800
*                                                                     * 00035900
*              ÝPRTOKEN(Ýxprtoken¨)                                   * 00036000
*                  belongs to a set of mutually exclusive keys. It is * 00036100
*                  the name (RS-type) (or address in register         * 00036200
*                  (2)-(12) ASM only) of an optional 8 character      * 00036300
*                  output variable to hold Usage "product" token that * 00036400
*                  can be used in subsequent service invocations.     * 00036500
*                  Use of this token will provide a shortened         * 00036600
*                  pathlength on those requests, but is not required. * 00036700
*                                                                     * 00036800
*              PRTOKEN64(Ýxprtoken64¨)¨                               * 00036900
*                  belongs to a set of mutually exclusive keys. It is * 00037000
*                  the name (RS-type) (or address in register         * 00037100
*                  (2)-(12) ASM only) of an optional 8 character      * 00037200
*                  output variable to hold Usage "product" token that * 00037300
*                  can be used in subsequent service invocations.     * 00037400
*                  Use of this token will provide a shortened         * 00037500
*                  pathlength on those requests, but is not required. * 00037600
*                                                                     * 00037700
*                                                                     * 00037800
*                                                                     * 00037900
*              End of a set of mutually exclusive optional keys.      * 00038000
*              DEFAULT: PRTOKEN                                       * 00038100
*                                                                     * 00038200
*                                                                     * 00038300
*                                                                     * 00038400
*              ÝUNAUTHSERV(»BASE!LEVEL1º)¨                            * 00038500
*                  is an optional keyword input that specifies the    * 00038600
*                  level of authorized services to which the          * 00038700
*                  unauthorized caller requires access.               * 00038800
*                                                                     * 00038900
*                  Note that authorized callers can use all services  * 00039000
*                  without SAF authorization. In addition, authorized * 00039100
*                  callers may use the LINKAGE=BRANCH interface.      * 00039200
*                  DEFAULT: BASE                                      * 00039300
*                                                                     * 00039400
*                                                                     * 00039500
*                  ÝUNAUTHSERV(BASE)¨                                 * 00039600
*                      Specifies that the unauthorized caller does    * 00039700
*                      not need access to any IFAUSAGE services other * 00039800
*                      than REGISTER and STATUS.                      * 00039900
*                                                                     * 00040000
*                      Note that unauthorized invokers that do not    * 00040100
*                      have SAF authorization are limited to 2        * 00040200
*                      IFAUSAGE REGISTER requests per address space.  * 00040300
*                                                                     * 00040400
*                  ÝUNAUTHSERV(LEVEL1)¨                               * 00040500
*                      Specifies that the unauthorized caller         * 00040600
*                      requires access to IFAUSAGE services that are  * 00040700
*                      available to authorized callers.  These        * 00040800
*                      include:  DEREGISTER, FUNCTIONBEGIN,           * 00040900
*                      FUNCTIONEND and FUNCTIONDATA.  In addition,    * 00041000
*                      the unauthorized caller may issue more than 2  * 00041100
*                      IFAUSAGE REGISTER requests.                    * 00041200
*                                                                     * 00041300
*                      The SAF facility will be used to validate that * 00041400
*                      the installation has authorized the userid     * 00041500
*                      associated with this job or task to use LEVEL1 * 00041600
*                      features.                                      * 00041700
*                      DEFAULT: NO                                    * 00041800
*                                                                     * 00041900
*                                                                     * 00042000
*                                                                     * 00042100
*                                                                     * 00042200
*                                                                     * 00042300
*           REQUEST(DEREGISTER)                                       * 00042400
*              Request: End Data Collection for the Product in the    * 00042500
*              current Domain and Scope.                              * 00042600
*                                                                     * 00042700
*                                                                     * 00042800
*              The following is a set of mutually exclusive keys.     * 00042900
*              This set is required; only one key must be specified.  * 00043000
*                                                                     * 00043100
*                                                                     * 00043200
*              PRODOWNER(xprodowner)                                  * 00043300
*                  belongs to a set of mutually exclusive keys. It is * 00043400
*                  the name (RS-type) (or address in register         * 00043500
*                  (2)-(12) ASM only) of a 16 character input         * 00043600
*                  containing the Product's Owner or Vendor Name for  * 00043700
*                  this request.                                      * 00043800
*                  PRODOWNER can not be specified if PRTOKEN is       * 00043900
*                  specified.                                         * 00044000
*                                                                     * 00044100
*                                                                     * 00044200
*                  PRODNAME(xprodname)                                * 00044300
*                      is the name (RS-type) (or address in register  * 00044400
*                      (2)-(12) ASM only) of a required 16 character  * 00044500
*                      input field containing the Name of the product * 00044600
*                      for the request.                               * 00044700
*                      PRODNAME must be specified if PRODOWNER is     * 00044800
*                      specified.                                     * 00044900
*                                                                     * 00045000
*                                                                     * 00045100
*                                                                     * 00045200
*                                                                     * 00045300
*                  ÝPRODVERS(»xprodvers!Noneº)¨                       * 00045400
*                      is the name (RS-type) (or address in register  * 00045500
*                      (2)-(12) ASM only) of an optional 8 character  * 00045600
*                      input field containing the Version of the      * 00045700
*                      product for the request.                       * 00045800
*                      PRODVERS can only be specified if PRODOWNER is * 00045900
*                      specified.                                     * 00046000
*                      DEFAULT: None                                  * 00046100
*                                                                     * 00046200
*                  ÝPRODQUAL(»xprodqual!Noneº)¨                       * 00046300
*                      is the name (RS-type) (or address in register  * 00046400
*                      (2)-(12) ASM only) of an optional 8 character  * 00046500
*                      input field containing the Qualifier of the    * 00046600
*                      product for the request.                       * 00046700
*                      PRODQUAL can only be specified if PRODOWNER is * 00046800
*                      specified.                                     * 00046900
*                      DEFAULT: None                                  * 00047000
*                                                                     * 00047100
*                  ÝPRODID(»xprodid!Noneº)¨                           * 00047200
*                      is the name (RS-type) (or address in register  * 00047300
*                      (2)-(12) ASM only) of an optional 8 character  * 00047400
*                      input field containing the ID of the Product   * 00047500
*                      (for example the 'PID' Number).                * 00047600
*                      PRODID can only be specified if PRODOWNER is   * 00047700
*                      specified.                                     * 00047800
*                      DEFAULT: None                                  * 00047900
*                                                                     * 00048000
*                                                                     * 00048100
*                                                                     * 00048200
*              PRTOKEN(xprtoken)                                      * 00048300
*                  belongs to a set of mutually exclusive keys. It is * 00048400
*                  the name (RS-type) (or address in register         * 00048500
*                  (2)-(12) ASM only) of an 8 character input Name of * 00048600
*                  "Product" Token returned on the associated         * 00048700
*                  REGISTER request.                                  * 00048800
*                  PRTOKEN can not be specified if PRODOWNER is       * 00048900
*                  specified.                                         * 00049000
*                                                                     * 00049100
*              PRTOKEN64(xprtoken64)                                  * 00049200
*                  belongs to a set of mutually exclusive keys. It is * 00049300
*                  the name (RS-type) (or address in register         * 00049400
*                  (2)-(12) ASM only) of an 8 character input Name of * 00049500
*                  "Product" Token returned on the associated         * 00049600
*                  REGISTER request.                                  * 00049700
*                  PRTOKEN64 can not be specified if PRODOWNER is     * 00049800
*                  specified.                                         * 00049900
*                                                                     * 00050000
*                                                                     * 00050100
*                                                                     * 00050200
*              End of a set of mutually exclusive required keys.      * 00050300
*                                                                     * 00050400
*                                                                     * 00050500
*                                                                     * 00050600
*              The following is a set of mutually exclusive keys.     * 00050700
*              This set is optional; only one key may be specified.   * 00050800
*                                                                     * 00050900
*                                                                     * 00051000
*              ÝENDTIME(Ýxendtime¨)                                   * 00051100
*                  belongs to a set of mutually exclusive keys. It is * 00051200
*                  the name (RS-type) (or address in register         * 00051300
*                  (2)-(12) ASM only) of an optional 8 character      * 00051400
*                  output variable where ending TCB time level will   * 00051500
*                  be returned to the invoker.                        * 00051600
*                                                                     * 00051700
*              ENDTIME64(Ýxendtime64¨)¨                               * 00051800
*                  belongs to a set of mutually exclusive keys. It is * 00051900
*                  the name (RS-type) (or address in register         * 00052000
*                  (2)-(12) ASM only) of an optional 8 character      * 00052100
*                  output variable where ending TCB time level will   * 00052200
*                  be returned to the invoker.                        * 00052300
*                  Use ENDTIME64 instead of ENDTIME when invoking in  * 00052400
*                  AMODE 64.                                          * 00052500
*                                                                     * 00052600
*                                                                     * 00052700
*                                                                     * 00052800
*              End of a set of mutually exclusive optional keys.      * 00052900
*              DEFAULT: ENDTIME                                       * 00053000
*                                                                     * 00053100
*                                                                     * 00053200
*                                                                     * 00053300
*              The following is a set of mutually exclusive keys.     * 00053400
*              This set is optional; only one key may be specified.   * 00053500
*                                                                     * 00053600
*                                                                     * 00053700
*              ÝENDDATA(Ýxenddata¨)                                   * 00053800
*                  belongs to a set of mutually exclusive keys. It is * 00053900
*                  the name (RS-type) (or address in register         * 00054000
*                  (2)-(12) ASM only) of an optional 8 character      * 00054100
*                  output variable where ending product specific data * 00054200
*                  will be returned to the invoker.                   * 00054300
*                                                                     * 00054400
*              ENDDATA64(Ýxenddata64¨)¨                               * 00054500
*                  belongs to a set of mutually exclusive keys. It is * 00054600
*                  the name (RS-type) (or address in register         * 00054700
*                  (2)-(12) ASM only) of an optional 8 character      * 00054800
*                  output variable where ending resource level will   * 00054900
*                  be returned to the invoker.                        * 00055000
*                  Use ENDDATA64 instead of ENDDATA when invoking in  * 00055100
*                  AMODE 64.                                          * 00055200
*                                                                     * 00055300
*                                                                     * 00055400
*                                                                     * 00055500
*              End of a set of mutually exclusive optional keys.      * 00055600
*              DEFAULT: ENDDATA                                       * 00055700
*                                                                     * 00055800
*                                                                     * 00055900
*           REQUEST(FUNCTIONBEGIN)                                    * 00056000
*              Request: Start Collecting Function-level Data for the  * 00056100
*              Product in the current Domain and Scope.               * 00056200
*                                                                     * 00056300
*                                                                     * 00056400
*              The following is a set of mutually exclusive keys.     * 00056500
*              This set is required; only one key must be specified.  * 00056600
*                                                                     * 00056700
*                                                                     * 00056800
*              PRODOWNER(xprodowner)                                  * 00056900
*                  belongs to a set of mutually exclusive keys. It is * 00057000
*                  the name (RS-type) (or address in register         * 00057100
*                  (2)-(12) ASM only) of a 16 character input         * 00057200
*                  containing the Product's Owner or Vendor Name for  * 00057300
*                  this request.                                      * 00057400
*                  PRODOWNER can not be specified if PRTOKEN is       * 00057500
*                  specified.                                         * 00057600
*                                                                     * 00057700
*                                                                     * 00057800
*                  PRODNAME(xprodname)                                * 00057900
*                      is the name (RS-type) (or address in register  * 00058000
*                      (2)-(12) ASM only) of a required 16 character  * 00058100
*                      input field containing the Name of the product * 00058200
*                      for the request.                               * 00058300
*                      PRODNAME must be specified if PRODOWNER is     * 00058400
*                      specified.                                     * 00058500
*                                                                     * 00058600
*                                                                     * 00058700
*                                                                     * 00058800
*                                                                     * 00058900
*                  ÝPRODVERS(»xprodvers!Noneº)¨                       * 00059000
*                      is the name (RS-type) (or address in register  * 00059100
*                      (2)-(12) ASM only) of an optional 8 character  * 00059200
*                      input field containing the Version of the      * 00059300
*                      product for the request.  the product.         * 00059400
*                      PRODVERS can only be specified if PRODOWNER is * 00059500
*                      specified.                                     * 00059600
*                      DEFAULT: None                                  * 00059700
*                                                                     * 00059800
*                  ÝPRODQUAL(»xprodqual!Noneº)¨                       * 00059900
*                      is the name (RS-type) (or address in register  * 00060000
*                      (2)-(12) ASM only) of an optional 8 character  * 00060100
*                      input field containing the Qualifier of the    * 00060200
*                      product for the request.                       * 00060300
*                      PRODQUAL can only be specified if PRODOWNER is * 00060400
*                      specified.                                     * 00060500
*                      DEFAULT: None                                  * 00060600
*                                                                     * 00060700
*                  ÝPRODID(»xprodid!Noneº)¨                           * 00060800
*                      is the name (RS-type) (or address in register  * 00060900
*                      (2)-(12) ASM only) of an optional 8 character  * 00061000
*                      input field containing the ID of the Product   * 00061100
*                      (for example the 'PID' Number).                * 00061200
*                      PRODID can only be specified if PRODOWNER is   * 00061300
*                      specified.                                     * 00061400
*                      DEFAULT: None                                  * 00061500
*                                                                     * 00061600
*                                                                     * 00061700
*                                                                     * 00061800
*              PRTOKEN(xprtoken)                                      * 00061900
*                  belongs to a set of mutually exclusive keys. It is * 00062000
*                  the name (RS-type) (or address in register         * 00062100
*                  (2)-(12) ASM only) of an 8 character input Name of * 00062200
*                  "Product" Token returned on the associated         * 00062300
*                  REGISTER request.                                  * 00062400
*                  PRTOKEN can not be specified if PRODOWNER is       * 00062500
*                  specified.                                         * 00062600
*                                                                     * 00062700
*              PRTOKEN64(xprtoken64)                                  * 00062800
*                  belongs to a set of mutually exclusive keys. It is * 00062900
*                  the name (RS-type) (or address in register         * 00063000
*                  (2)-(12) ASM only) of an 8 character input Name of * 00063100
*                  "Product" Token returned on the associated         * 00063200
*                  REGISTER request.                                  * 00063300
*                  PRTOKEN64 can not be specified if PRODOWNER is     * 00063400
*                  specified.                                         * 00063500
*                  Use PRTOKEN64 instead of PRTOKEN when invoking in  * 00063600
*                  AMODE 64.                                          * 00063700
*                                                                     * 00063800
*                                                                     * 00063900
*                                                                     * 00064000
*              End of a set of mutually exclusive required keys.      * 00064100
*                                                                     * 00064200
*                                                                     * 00064300
*                                                                     * 00064400
*              The following is a set of mutually exclusive keys.     * 00064500
*              This set is optional; only one key may be specified.   * 00064600
*                                                                     * 00064700
*                                                                     * 00064800
*              ÝBEGTIME(Ýxbegtime¨)                                   * 00064900
*                  belongs to a set of mutually exclusive keys. It is * 00065000
*                  the name (RS-type) (or address in register         * 00065100
*                  (2)-(12) ASM only) of an optional 8 character      * 00065200
*                  output variable where beginning CPU time level     * 00065300
*                  will be returned.                                  * 00065400
*                                                                     * 00065500
*              BEGTIME64(Ýxbegtime64¨)¨                               * 00065600
*                  belongs to a set of mutually exclusive keys. It is * 00065700
*                  the name (RS-type) (or address in register         * 00065800
*                  (2)-(12) ASM only) of an optional 8 character      * 00065900
*                  output variable where beginning CPU time level     * 00066000
*                  will be returned.                                  * 00066100
*                  Use BEGTIME64 instead of BEGTIME when invoking in  * 00066200
*                  AMODE 64.                                          * 00066300
*                                                                     * 00066400
*                                                                     * 00066500
*                                                                     * 00066600
*              End of a set of mutually exclusive optional keys.      * 00066700
*              DEFAULT: BEGTIME                                       * 00066800
*                                                                     * 00066900
*                                                                     * 00067000
*           REQUEST(FUNCTIONDATA)                                     * 00067100
*              Request: Provide Product-Specific Usage Data for the   * 00067200
*              Product in the current Domain and Scope.               * 00067300
*                                                                     * 00067400
*                                                                     * 00067500
*              The following is a set of mutually exclusive keys.     * 00067600
*              This set is required; only one key must be specified.  * 00067700
*                                                                     * 00067800
*                                                                     * 00067900
*              PRODOWNER(xprodowner)                                  * 00068000
*                  belongs to a set of mutually exclusive keys. It is * 00068100
*                  the name (RS-type) (or address in register         * 00068200
*                  (2)-(12) ASM only) of a 16 character input         * 00068300
*                  containing the Product's Owner or Vendor Name for  * 00068400
*                  this request.                                      * 00068500
*                  PRODOWNER can not be specified if PRTOKEN is       * 00068600
*                  specified.                                         * 00068700
*                                                                     * 00068800
*                                                                     * 00068900
*                  PRODNAME(xprodname)                                * 00069000
*                      is the name (RS-type) (or address in register  * 00069100
*                      (2)-(12) ASM only) of a required 16 character  * 00069200
*                      input field containing the Name of the product * 00069300
*                      for the request.                               * 00069400
*                      PRODNAME must be specified if PRODOWNER is     * 00069500
*                      specified.                                     * 00069600
*                                                                     * 00069700
*                                                                     * 00069800
*                                                                     * 00069900
*                                                                     * 00070000
*                  ÝPRODVERS(»xprodvers!Noneº)¨                       * 00070100
*                      is the name (RS-type) (or address in register  * 00070200
*                      (2)-(12) ASM only) of an optional 8 character  * 00070300
*                      input field containing the Version of the      * 00070400
*                      product for the request.                       * 00070500
*                      PRODVERS can only be specified if PRODOWNER is * 00070600
*                      specified.                                     * 00070700
*                      DEFAULT: None                                  * 00070800
*                                                                     * 00070900
*                  ÝPRODQUAL(»xprodqual!Noneº)¨                       * 00071000
*                      is the name (RS-type) (or address in register  * 00071100
*                      (2)-(12) ASM only) of an optional 8 character  * 00071200
*                      input field containing the Qualifier of the    * 00071300
*                      product for the request.                       * 00071400
*                      PRODQUAL can only be specified if PRODOWNER is * 00071500
*                      specified.                                     * 00071600
*                      DEFAULT: None                                  * 00071700
*                                                                     * 00071800
*                  ÝPRODID(»xprodid!Noneº)¨                           * 00071900
*                      is the name (RS-type) (or address in register  * 00072000
*                      (2)-(12) ASM only) of an optional 8 character  * 00072100
*                      input field containing the ID of the Product   * 00072200
*                      (for example the 'PID' Number).                * 00072300
*                      PRODID can only be specified if PRODOWNER is   * 00072400
*                      specified.                                     * 00072500
*                      DEFAULT: None                                  * 00072600
*                                                                     * 00072700
*                                                                     * 00072800
*                                                                     * 00072900
*              PRTOKEN(xprtoken)                                      * 00073000
*                  belongs to a set of mutually exclusive keys. It is * 00073100
*                  the name (RS-type) (or address in register         * 00073200
*                  (2)-(12) ASM only) of an 8 character input Name of * 00073300
*                  "Product" Token returned on the associated         * 00073400
*                  REGISTER request.                                  * 00073500
*                  PRTOKEN can not be specified if PRODOWNER is       * 00073600
*                  specified.                                         * 00073700
*                                                                     * 00073800
*              PRTOKEN64(xprtoken64)                                  * 00073900
*                  belongs to a set of mutually exclusive keys. It is * 00074000
*                  the name (RS-type) (or address in register         * 00074100
*                  (2)-(12) ASM only) of an 8 character input Name of * 00074200
*                  "Product" Token returned on the associated         * 00074300
*                  REGISTER request.                                  * 00074400
*                  PRTOKEN64 can not be specified if PRODOWNER is     * 00074500
*                  specified.                                         * 00074600
*                                                                     * 00074700
*                                                                     * 00074800
*                                                                     * 00074900
*              End of a set of mutually exclusive required keys.      * 00075000
*                                                                     * 00075100
*                                                                     * 00075200
*                                                                     * 00075300
*              The following is a set of mutually exclusive keys.     * 00075400
*              This set is required; only one key must be specified.  * 00075500
*                                                                     * 00075600
*                                                                     * 00075700
*              DATA(xdata)                                            * 00075800
*                  belongs to a set of mutually exclusive keys. It is * 00075900
*                  the name (RS-type) (or address in register         * 00076000
*                  (2)-(12) ASM only) of an 8 character input         * 00076100
*                  variable containing resource data to be            * 00076200
*                  accumulated.  Fixed-type data should be right      * 00076300
*                  justified and padded with hex 0's.                 * 00076400
*                                                                     * 00076500
*              DATA64(xdata64)                                        * 00076600
*                  belongs to a set of mutually exclusive keys. It is * 00076700
*                  the name (RS-type) (or address in register         * 00076800
*                  (2)-(12) ASM only) of an 8 character input         * 00076900
*                  variable containing resource data to be            * 00077000
*                  accumulated.  Fixed-type data should be right      * 00077100
*                  justified and padded with hex 0's.                 * 00077200
*                  Use DATA64 instead of DATA when invoking in AMODE  * 00077300
*                  64.                                                * 00077400
*                                                                     * 00077500
*                                                                     * 00077600
*                                                                     * 00077700
*              End of a set of mutually exclusive required keys.      * 00077800
*                                                                     * 00077900
*                                                                     * 00078000
*                                                                     * 00078100
*              ÝFORMAT(»CPUTIME!BINARY!FLOATº)¨                       * 00078200
*                  is an optional keyword input Datatype of value in  * 00078300
*                  DATA parameter.                                    * 00078400
*                  DEFAULT: CPUTIME                                   * 00078500
*                                                                     * 00078600
*                                                                     * 00078700
*                  FORMAT(CPUTIME)                                    * 00078800
*                      The value in the DATA option is a CPU Time, in * 00078900
*                      STCK format                                    * 00079000
*                                                                     * 00079100
*                  FORMAT(BINARY)                                     * 00079200
*                      The value in the DATA option is in 64-bit      * 00079300
*                      binary format.                                 * 00079400
*                                                                     * 00079500
*                  FORMAT(FLOAT)                                      * 00079600
*                      The value in the DATA option is in long        * 00079700
*                      floating point hex format,                     * 00079800
*                                                                     * 00079900
*                                                                     * 00080000
*                                                                     * 00080100
*                                                                     * 00080200
*                                                                     * 00080300
*                                                                     * 00080400
*              The following is a set of mutually exclusive keys.     * 00080500
*              This set is optional; only one key may be specified.   * 00080600
*                                                                     * 00080700
*                                                                     * 00080800
*              ÝCURRENTDATA(Ýxcurrentdata¨)                           * 00080900
*                  belongs to a set of mutually exclusive keys. It is * 00081000
*                  the name (RS-type) (or address in register         * 00081100
*                  (2)-(12) ASM only) of an optional 8 character      * 00081200
*                  output variable where current resource level will  * 00081300
*                  be returned to the invoker (after adding the input * 00081400
*                  value).                                            * 00081500
*                                                                     * 00081600
*              CURRENTDATA64(Ýxcurrentdata64¨)¨                       * 00081700
*                  belongs to a set of mutually exclusive keys. It is * 00081800
*                  the name (RS-type) (or address in register         * 00081900
*                  (2)-(12) ASM only) of an optional 8 character      * 00082000
*                  output variable where current resource level will  * 00082100
*                  be returned to the invoker (after adding the input * 00082200
*                  value).                                            * 00082300
*                  Use CURRENTDATA64 instead of CURRENTDATA when      * 00082400
*                  invoking in AMODE 64.                              * 00082500
*                                                                     * 00082600
*                                                                     * 00082700
*                                                                     * 00082800
*              End of a set of mutually exclusive optional keys.      * 00082900
*              DEFAULT: CURRENTDATA                                   * 00083000
*                                                                     * 00083100
*                                                                     * 00083200
*           REQUEST(FUNCTIONEND)                                      * 00083300
*              Request: End Collecting Function-level Data for the    * 00083400
*              Product in the current Domain and Scope.               * 00083500
*                                                                     * 00083600
*                                                                     * 00083700
*              The following is a set of mutually exclusive keys.     * 00083800
*              This set is required; only one key must be specified.  * 00083900
*                                                                     * 00084000
*                                                                     * 00084100
*              PRODOWNER(xprodowner)                                  * 00084200
*                  belongs to a set of mutually exclusive keys. It is * 00084300
*                  the name (RS-type) (or address in register         * 00084400
*                  (2)-(12) ASM only) of a 16 character input         * 00084500
*                  containing the Product's Owner or Vendor Name for  * 00084600
*                  this request.                                      * 00084700
*                  PRODOWNER can not be specified if PRTOKEN is       * 00084800
*                  specified.                                         * 00084900
*                                                                     * 00085000
*                                                                     * 00085100
*                  PRODNAME(xprodname)                                * 00085200
*                      is the name (RS-type) (or address in register  * 00085300
*                      (2)-(12) ASM only) of a required 16 character  * 00085400
*                      input field containing the Name of the product * 00085500
*                      for the request.                               * 00085600
*                      PRODNAME must be specified if PRODOWNER is     * 00085700
*                      specified.                                     * 00085800
*                                                                     * 00085900
*                                                                     * 00086000
*                                                                     * 00086100
*                                                                     * 00086200
*                  ÝPRODVERS(»xprodvers!Noneº)¨                       * 00086300
*                      is the name (RS-type) (or address in register  * 00086400
*                      (2)-(12) ASM only) of an optional 8 character  * 00086500
*                      input field containing the Version of the      * 00086600
*                      product for the request.                       * 00086700
*                      PRODVERS can only be specified if PRODOWNER is * 00086800
*                      specified.                                     * 00086900
*                      DEFAULT: None                                  * 00087000
*                                                                     * 00087100
*                  ÝPRODQUAL(»xprodqual!Noneº)¨                       * 00087200
*                      is the name (RS-type) (or address in register  * 00087300
*                      (2)-(12) ASM only) of an optional 8 character  * 00087400
*                      input field containing the Qualifier of the    * 00087500
*                      product for the request.                       * 00087600
*                      PRODQUAL can only be specified if PRODOWNER is * 00087700
*                      specified.                                     * 00087800
*                      DEFAULT: None                                  * 00087900
*                                                                     * 00088000
*                  ÝPRODID(»xprodid!Noneº)¨                           * 00088100
*                      is the name (RS-type) (or address in register  * 00088200
*                      (2)-(12) ASM only) of an optional 8 character  * 00088300
*                      input field containing the ID of the Product   * 00088400
*                      (for example the 'PID' Number).                * 00088500
*                      PRODID can only be specified if PRODOWNER is   * 00088600
*                      specified.                                     * 00088700
*                      DEFAULT: None                                  * 00088800
*                                                                     * 00088900
*                                                                     * 00089000
*                                                                     * 00089100
*              PRTOKEN(xprtoken)                                      * 00089200
*                  belongs to a set of mutually exclusive keys. It is * 00089300
*                  the name (RS-type) (or address in register         * 00089400
*                  (2)-(12) ASM only) of an 8 character input Name of * 00089500
*                  "Product" Token returned on the associated         * 00089600
*                  REGISTER request.                                  * 00089700
*                  PRTOKEN can not be specified if PRODOWNER is       * 00089800
*                  specified.                                         * 00089900
*                                                                     * 00090000
*              PRTOKEN64(xprtoken64)                                  * 00090100
*                  belongs to a set of mutually exclusive keys. It is * 00090200
*                  the name (RS-type) (or address in register         * 00090300
*                  (2)-(12) ASM only) of an 8 character input Name of * 00090400
*                  "Product" Token returned on the associated         * 00090500
*                  REGISTER request.                                  * 00090600
*                  PRTOKEN64 can not be specified if PRODOWNER is     * 00090700
*                  specified.                                         * 00090800
*                  Use DATA64 instead of DATA when invoking in AMODE  * 00090900
*                  64.                                                * 00091000
*                                                                     * 00091100
*                                                                     * 00091200
*                                                                     * 00091300
*              End of a set of mutually exclusive required keys.      * 00091400
*                                                                     * 00091500
*                                                                     * 00091600
*                                                                     * 00091700
*              The following is a set of mutually exclusive keys.     * 00091800
*              This set is optional; only one key may be specified.   * 00091900
*                                                                     * 00092000
*                                                                     * 00092100
*              ÝENDTIME(Ýxendtime¨)                                   * 00092200
*                  belongs to a set of mutually exclusive keys. It is * 00092300
*                  the name (RS-type) (or address in register         * 00092400
*                  (2)-(12) ASM only) of an optional 8 character      * 00092500
*                  output variable where ending TCB time level will   * 00092600
*                  be returned to the invoker.                        * 00092700
*                                                                     * 00092800
*              ENDTIME64(Ýxendtime64¨)¨                               * 00092900
*                  belongs to a set of mutually exclusive keys. It is * 00093000
*                  the name (RS-type) (or address in register         * 00093100
*                  (2)-(12) ASM only) of an optional 8 character      * 00093200
*                  output variable where ending TCB time level will   * 00093300
*                  be returned to the invoker.                        * 00093400
*                  Use CURRENTDATA64 instead of CURRENTDATA when      * 00093500
*                  invoking in AMODE 64.                              * 00093600
*                                                                     * 00093700
*                                                                     * 00093800
*                                                                     * 00093900
*              End of a set of mutually exclusive optional keys.      * 00094000
*              DEFAULT: ENDTIME                                       * 00094100
*                                                                     * 00094200
*                                                                     * 00094300
*                                                                     * 00094400
*              The following is a set of mutually exclusive keys.     * 00094500
*              This set is optional; only one key may be specified.   * 00094600
*                                                                     * 00094700
*                                                                     * 00094800
*              ÝENDDATA(Ýxenddata¨)                                   * 00094900
*                  belongs to a set of mutually exclusive keys. It is * 00095000
*                  the name (RS-type) (or address in register         * 00095100
*                  (2)-(12) ASM only) of an optional 8 character      * 00095200
*                  output variable where ending resource level will   * 00095300
*                  be returned to the invoker.                        * 00095400
*                                                                     * 00095500
*              ENDDATA64(Ýxenddata64¨)¨                               * 00095600
*                  belongs to a set of mutually exclusive keys. It is * 00095700
*                  the name (RS-type) (or address in register         * 00095800
*                  (2)-(12) ASM only) of an optional 8 character      * 00095900
*                  output variable where ending resource level will   * 00096000
*                  be returned to the invoker.                        * 00096100
*                                                                     * 00096200
*                                                                     * 00096300
*                                                                     * 00096400
*              End of a set of mutually exclusive optional keys.      * 00096500
*              DEFAULT: ENDDATA                                       * 00096600
*                                                                     * 00096700
*                                                                     * 00096800
*           REQUEST(STATUS)                                           * 00096900
*              Request: Generate code which will check the status     * 00097000
*              (Available and Active) of the Usage Data Collection    * 00097100
*              Service and the installation recording request for the * 00097200
*              Sytem-Wide Usage Data Record (Type 89); the status is  * 00097300
*              returned via a return code.  The return code value     * 00097400
*              will be in Register 15 (if RETCODE is not specified)   * 00097500
*              or the variable specified by the RETCODE option.  See  * 00097600
*              the Return Code descriptions for the list of values    * 00097700
*              that can be returned.                                  * 00097800
*                                                                     * 00097900
*                                                                     * 00098000
*                                                                     * 00098100
*                                                                     * 00098200
*                                                                     * 00098300
*                                                                     * 00098400
*      ÝLINKAGE(»SVC!BRANCHº)                                         * 00098500
*          is an optional keyword input that specifies the level      * 00098600
*          interface to the Data Collection Service that is to be     * 00098700
*          generated.                                                 * 00098800
*          DEFAULT: SVC                                               * 00098900
*                                                                     * 00099000
*                                                                     * 00099100
*          ÝLINKAGE(SVC)¨                                             * 00099200
*              Requests that an SVC-type invocation of the service be * 00099300
*              generated.                                             * 00099400
*                                                                     * 00099500
*          ÝLINKAGE(BRANCH)                                           * 00099600
*              Requests that a direct CALL be used to invoke the      * 00099700
*              service.  LINKAGE=BRANCH callers must be Supervisor    * 00099800
*              State.                                                 * 00099900
*                                                                     * 00100000
*                                                                     * 00100100
*              ÝVALIDATE(»YES!NOº)¨¨                                  * 00100200
*                  is an optional keyword input that specifies        * 00100300
*                  whether certain validation (such as of the input   * 00100400
*                  token) is to be done.                              * 00100500
*                  DEFAULT: YES                                       * 00100600
*                                                                     * 00100700
*                                                                     * 00100800
*                  ÝVALIDATE(YES)¨                                    * 00100900
*                      Requests that all validation be done.          * 00101000
*                                                                     * 00101100
*                  ÝVALIDATE(NO)¨¨                                    * 00101200
*                      Requests that limited validation be done.      * 00101300
*                                                                     * 00101400
*                                                                     * 00101500
*                                                                     * 00101600
*                                                                     * 00101700
*                                                                     * 00101800
*                                                                     * 00101900
*                                                                     * 00102000
*                                                                     * 00102100
*                                                                     * 00102200
*                                                                     * 00102300
*      ÝFBFE(»NO!YESº)¨                                               * 00102400
*          is an optional keyword input that specifies whether the    * 00102500
*          caller intends to use FUNCTIONBEGIN and FUNCTIONEND to     * 00102600
*          account for time. This keyword has no effect on internal   * 00102700
*          processing.                                                * 00102800
*          DEFAULT: NO                                                * 00102900
*                                                                     * 00103000
*                                                                     * 00103100
*          ÝFBFE(NO)¨                                                 * 00103200
*              Specifies that FUNCTIONBEGIN/FUNCTIONEND will not be   * 00103300
*              done.                                                  * 00103400
*                                                                     * 00103500
*          ÝFBFE(YES)¨                                                * 00103600
*              Specifies that FUNCTIONBEGIN/FUNCTIONEND will be done. * 00103700
*              DEFAULT: None                                          * 00103800
*                                                                     * 00103900
*                                                                     * 00104000
*                                                                     * 00104100
*                                                                     * 00104200
*                                                                     * 00104300
*                                                                     * 00104400
*      ÝRETCODE(xretcode)¨                                            * 00104500
*          is the name (RS-type) of an optional fullword output       * 00104600
*          variable (or register (2)-(12) or (15) ASM only) into      * 00104700
*          which the return code is to be copied from GPR 15.  If you * 00104800
*          specify 15, GPR15, REG15, or R15 (within or without        * 00104900
*          parentheses), the value will be left in GPR 15.  Do not    * 00105000
*          specify RETCODE with MF=M.                                 * 00105100
*                                                                     * 00105200
*                                                                     * 00105300
*                                                                     * 00105400
*                                                                     * 00105500
*      ÝPLISTVER(»xplistver!IMPLIED_VERSIONº)¨                        * 00105600
*          is an optional byte input decimal value in the "1-2" range * 00105700
*          that specifies the macro version.  PLISTVER is the only    * 00105800
*          key allowed on the list form of MF and determines which    * 00105900
*          parameter list is generated.  The macro keys associated    * 00106000
*          with each supported version of the macro are listed in     * 00106100
*          MACRO USAGE NOTE 3.  Note that MAX may be specified        * 00106200
*          instead of a number, and the parameter list will be of the * 00106300
*          largest size currently supported. This size may grow from  * 00106400
*          release to release (thus possibly affecting the amount of  * 00106500
*          storage needed by your program).  If your program can      * 00106600
*          tolerate this, IBM recommends that you always specify MAX  * 00106700
*          when creating the list form parameter list as that will    * 00106800
*          ensure that the list form parameter list is always long    * 00106900
*          enough to hold whatever parameters might be specified on   * 00107000
*          the execute form.                                          * 00107100
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00107200
*          default is the lowest version which allows all of the      * 00107300
*          parameters specified on the invocation to be processed.    * 00107400
*                                                                     * 00107500
*                                                                     * 00107600
*                                                                     * 00107700
*                                                                     * 00107800
*      ÝMF(»S!L!M!Eº)¨                                                * 00107900
*          is an optional keyword input which specifies the macro     * 00108000
*          form.                                                      * 00108100
*          DEFAULT: S                                                 * 00108200
*                                                                     * 00108300
*                                                                     * 00108400
*          ÝMF(S)¨                                                    * 00108500
*              specifies the standard form of the macro.  The "S"     * 00108600
*              form generates code to put the parameters into the     * 00108700
*              parameter list and invoke the desired service.  Full   * 00108800
*              checking for required macro keys is done along with    * 00108900
*              supplying defaults for omitted optional parameters.    * 00109000
*              The ?EPILOG macro must be invoked at the end of the    * 00109100
*              module.                                                * 00109200
*                                                                     * 00109300
*              For assembly language code modules, the "S" form       * 00109400
*              generates code to put the parameters into an in-line   * 00109500
*              parameter list and invoke the desired service.  Full   * 00109600
*              checking for required macro keys is done along with    * 00109700
*              supplying defaults for omitted optional parameters.    * 00109800
*                                                                     * 00109900
*          ÝMF(L,xmfctrl»,xmfattr!BDY(DWORD)º)¨                       * 00110000
*              specifies the list form of the macro.  The "L" form    * 00110100
*              defines an area to be used for the parameter list.     * 00110200
*              Only the PLISTVER key may be specified on the          * 00110300
*              invocation.  All other macro parameters are flagged as * 00110400
*              errors.  If PLISTVER is not specified, the original    * 00110500
*              parameter list definition is used.                     * 00110600
*                                                                     * 00110700
*            ,xmfctrl                                                 * 00110800
*              is a required input.  It is the name of a storage area * 00110900
*              for the parameter list.                                * 00111000
*                                                                     * 00111100
*            »,xmfattr!BDY(DWORD)º                                    * 00111200
*              is an optional 60 character input string that varies   * 00111300
*              from 1 to 60 characters. Use it to force boundary      * 00111400
*              alignment of the parameter list. Use only 0F or 0D     * 00111500
*              (assembler-only).                                      * 00111600
*              DEFAULT: 0D for Assembler, BDY(DWORD) for PL/X, which  * 00111700
*              forces the parameter list to a doubleword boundary.    * 00111800
*                                                                     * 00111900
*          ÝMF(M,xmfctrl»,COMPLETE!NOCHECKº)¨                         * 00112000
*              specifies the modify form of the macro.  The "M" form  * 00112100
*              generates code to put the parameters into the          * 00112200
*              parameter list specified by xmfctrl.                   * 00112300
*                                                                     * 00112400
*            ,xmfctrl                                                 * 00112500
*              is a required input.  It is the name (RS-type) (or     * 00112600
*              address in register (1)-(12) ASM only) of a storage    * 00112700
*              area for the parameter list.                           * 00112800
*                                                                     * 00112900
*            »,COMPLETE!NOCHECKº¨                                     * 00113000
*              is an optional keyword input which specifies the       * 00113100
*              degree of macro parameter syntax checking.             * 00113200
*              DEFAULT: COMPLETE                                      * 00113300
*                                                                     * 00113400
*                                                                     * 00113500
*              COMPLETE                                               * 00113600
*                  Checking for required macro keys is done and       * 00113700
*                  defaults are supplied for omitted optional         * 00113800
*                  parameters.  (See Macro Usage Note 2).             * 00113900
*                                                                     * 00114000
*              NOCHECK                                                * 00114100
*                  Checking for required macro keys is not done nor   * 00114200
*                  are defaults supplied for omitted optional         * 00114300
*                  parameters.                                        * 00114400
*                                                                     * 00114500
*                                                                     * 00114600
*                                                                     * 00114700
*          ÝMF(E,xmfctrl»,COMPLETE!NOCHECKº)¨                         * 00114800
*              specifies the execute form of the macro.  The "E" form * 00114900
*              generates code to put the parameters into the          * 00115000
*              parameter list specified by xmfctrl and invoke the     * 00115100
*              desired service.                                       * 00115200
*                                                                     * 00115300
*            ,xmfctrl                                                 * 00115400
*              is a required input.  It is the name (RS-type) (or     * 00115500
*              address in register (1)-(12) ASM only) of a storage    * 00115600
*              area for the parameter list.                           * 00115700
*                                                                     * 00115800
*            »,COMPLETE!NOCHECKº                                      * 00115900
*              is an optional keyword input which specifies the       * 00116000
*              degree of macro parameter syntax checking.             * 00116100
*              DEFAULT: COMPLETE                                      * 00116200
*                                                                     * 00116300
*                                                                     * 00116400
*              COMPLETE                                               * 00116500
*                  Checking for required macro keys is done and       * 00116600
*                  defaults are supplied for omitted optional         * 00116700
*                  parameters.  (See Macro Usage Note 2).             * 00116800
*                                                                     * 00116900
*              NOCHECK                                                * 00117000
*                  Checking for required macro keys is not done nor   * 00117100
*                  are defaults supplied for omitted optional         * 00117200
*                  parameters.                                        * 00117300
*                                                                     * 00117400
*                                                                     * 00117500
*                                                                     * 00117600
*                                                                     * 00117700
*                                                                     * 00117800
*                                                                     * 00117900
*                                                                     * 00118000
*01* RETURN CODES:                                                    * 00118100
*                                                                     * 00118200
*                                                                     * 00118300
*            00   Request = <all>  - The request function was         * 00118400
*                 completed successful                                * 00118500
*                                                                     * 00118600
*            04   Request = REGISTER - Warning, another product has   * 00118700
*                 already regist for this domain.  The current        * 00118800
*                 request is accepted; however, there will be         * 00118900
*                 duplicate recording of data for both products.      * 00119000
*                                                                     * 00119100
*            04   Request = FUNCTIONDATA - Warning, input data type   * 00119200
*                 differs from initial data type specified; the       * 00119300
*                 accumulation is not done.                           * 00119400
*                                                                     * 00119500
*            04   Request = STATUS - Warning, the usage data          * 00119600
*                 collection service is available on the system but   * 00119700
*                 the installation is not collecting the System-Wide  * 00119800
*                 data record (89).                                   * 00119900
*                                                                     * 00120000
*            08   Request = REGISTER - The unauthored request being   * 00120100
*                 made would cause the unauthorized request limit to  * 00120200
*                 be exceeded; the request is failed.                 * 00120300
*                                                                     * 00120400
*            08   Request = DEREGISTER - Error, a usage function has  * 00120500
*                 been requested but there is no active REGISTER for  * 00120600
*                 the specified product; the request is failed.       * 00120700
*                                                                     * 00120800
*            08   Request = FUNCTIONBEGIN - Error, a usage function   * 00120900
*                 has been requested but there is no active REGISTER  * 00121000
*                 for the specified product; the request is failed.   * 00121100
*                                                                     * 00121200
*            08   Request = FUNCTIONDATA - Error, a function request  * 00121300
*                 has been requested but there is no active FUNCTION  * 00121400
*                 for the specified product; the request is failed.   * 00121500
*                                                                     * 00121600
*            08   Request = FUNCTIONEND - Error, a function request   * 00121700
*                 has been requested but there is no active FUNCTION  * 00121800
*                 for the specified product; the request is failed.   * 00121900
*                                                                     * 00122000
*            12   Request = <all> - Error, the specified product or   * 00122100
*                 function token is not defined; the request is       * 00122200
*                 failed.                                             * 00122300
*                                                                     * 00122400
*            16   Request = <all> - Usage Data Collection Function is * 00122500
*                 not available on this system                        * 00122600
*                                                                     * 00122700
*            20   Request = <all> - Invalid request or internal       * 00122800
*                 parameter error.                                    * 00122900
*                                                                     * 00123000
*            24   Request = REGISTER - Keyword UNAUTHSERV=LEVEL1 was  * 00123100
*                 specified to enable all services for an             * 00123200
*                 unauthorized caller, but the SAF resource check     * 00123300
*                 failed.  The profile may not have been created, or  * 00123400
*                 the userid associated with this program was not     * 00123500
*                 permitted to the resource.                          * 00123600
*                                                                     * 00123700
*            28   Environmental error: An unauthorized program        * 00123800
*                 specified "REQUEST=REGISTER UNAUTHSERV=LEVEL1       * 00123900
*                 DOMAIN=ADDRSP" while running in an address space    * 00124000
*                 with multiple SAF environments established.         * 00124100
*                                                                     * 00124200
*                                                                     * 00124300
*                                                                     * 00124400
*01* REASON CODES:  None.                                             * 00124500
*                                                                     * 00124600
*01* MODULE TYPE:  ASSEM-PL/X MACRO                                   * 00124700
*                                                                     * 00124800
*02*   PROCESSOR:  ASSEM-PL/X                                         * 00124900
*                                                                     * 00125000
*01* COMPONENT:  SC100                                                * 00125100
*                                                                     * 00125200
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00125300
*                                                                     * 00125400
*01* ABEND CODES:  None.                                              * 00125500
*                                                                     * 00125600
*01* EXAMPLES:                                                        * 00125700
*    POWNER   DC    CL16'IBM_TEST_TOOL   '                            * 00125800
*    PNAME    DC    CL16'SAMPLE_USAGE    '                            * 00125900
*    PVERS    DC    CL8'V2.R1'                                        * 00126000
*    PQUAL    DC    CL8'USAGE'                                        * 00126100
*    PID      DC    CL8'1111-111'                                     * 00126200
*             IFAUSAGE REQUEST=REGISTER,                              * 00126300
*                   PRODOWNER=POWNER,                                 * 00126400
*                   PRODNAME=PNAME,                                   * 00126500
*                   PRODVERS=PVERS,                                   * 00126600
*                   PRODQUAL=PQUAL,                                   * 00126700
*                   PRODID=PID,                                       * 00126800
*                   DOMAIN=ADDRSP,                                    * 00126900
*                   PRTOKEN=PTOKEN31,                                 * 00127000
*                   RETCODE=USAGE_RC,                                 * 00127100
*                   MF=(E,SAREA)                                      * 00127200
*    Later...                                                         * 00127300
*            IFAUSAGE REQUEST=DEREGISTER,                             * 00127400
*                   PRTOKEN=PRTOKEN31,                                * 00127500
*                   RETCODE=USAGE_RC,                                 * 00127600
*                   MF=(E,SAREA)                                      * 00127700
*    DYNAREA  DSECT                                                   * 00127800
*             IFAUSAGE MF=(L,SAREA),PLISTVER=MAX                      * 00127900
*    USAGE_RC     DS   F                                              * 00128000
*    USAGE_RSN    DS   F                                              * 00128100
*    PTOKEN31     DS   CL8                                            * 00128200
*                                                                     * 00128300
*01* CHANGE ACTIVITY:                                                 * 00128400
*                                                                     * 00128500
*   Flag LineItem  FMID    Date   ID    Comment                       * 00128600
*                                                                     * 00128700
*    $00=USAGEAMG JBB3313 931011 PDBR:  SMF Usage Data Collection     * 00128800
*                                         Macro                       * 00128900
*    $01=OYxxxxx  JBB3313 931014 PDBR:  Add PL/AS and ASM Code        * 00129000
*    $P1=PJK0527  HBB7709 030527 PDXB:  VALIDATE=YES!NO               * 00129100
*    $L1=PEV      HBB7730 050414 PD00XB:  Avoid assembler low-storage * 00129200
*                                         message                     * 00129300
*    $02=OA31615  HBB7750 101201 PDAS:  FBFE=YES!NO                   * 00129400
*    $03=OA55555  HBB77A0 180131 PDHV:  AMODE 64 support, SAF         * 00129500
*                                         authorized product support  * 00129600
*    $P2=W265596  HBB77C0 180904 PDTA:  Correct assembler linkage     * 00129700
*    $P3=W271872  HBB77C0 180917 PDTA:  Delete code that requires     * 00129800
*                                         64-bit R15 in PL/X linkage  * 00129900
*    $P4=W273712  HBB77C0 181001 PDTA:  Fix key/key64 verification    * 00130000
*    $P5=W293440  HBB77C0 190107 PDTA:  Correct ASC mode in prolog    * 00130100
*    $04=OA57527  HBB77C0 190802 PDTA:  Correct example               * 00130200
****** END OF SPECIFICATIONS *****************************************/ 00130300
*/********************************************************************* 00130400
         MACRO                                                          00130500
&XLABEL  IFAUSAGE &REQUEST=,&PRODOWNER=,&PRODNAME=,&PRODVERS=,         *00130600
               &PRODQUAL=,&PRODID=,&DOMAIN=,&SCOPE=,&PRTOKEN=,         *00130700
               &PRTOKEN64=,&UNAUTHSERV=,&ENDTIME=,&ENDTIME64=,         *00130800
               &ENDDATA=,&ENDDATA64=,&BEGTIME=,&BEGTIME64=,&DATA=,     *00130900
               &DATA64=,&FORMAT=,&CURRENTDATA=,&CURRENTDATA64=,        *00131000
               &LINKAGE=,&VALIDATE=,&FBFE=,&RETCODE=,&PLISTVER=,&MF=    00131100
.*                                                                      00131200
*                   MACDATE -08/06/19-<2>                               00131300
.*                                                                      00131400
.*******************************************************************    00131500
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00131600
.*******************************************************************    00131700
                   GBLC  &ZPRINT     YES=PRINT NO=NO PRINT              00131800
                   GBLC  &ZTEST      YES=TEST NO=NO TEST                00131900
                   GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX        00132000
.*                                                                      00132100
                   GBLC  &ZIFAUSAGE  YES=MACRO USED AT LEAST ONCE       00132200
.*******************************************************************    00132300
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00132400
.*******************************************************************    00132500
                   LCLC  &ZMS        ERROR MESSAGE WORK AREA            00132600
                   LCLC  &ZCNDX      SYSNDX CHARACTERS                  00132700
                   LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED         00132800
                   LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR        00132900
                   LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE        00133000
                   LCLA  &ZAWRK      USED AS A WORK AREA                00133100
                   LCLA  &ZASIZ      USED FOR SIZE OF VALUE             00133200
                   LCLA  &ZN         NUMERIC WORK VARIABLE              00133300
                   LCLC  &ZC         CHARACTER WORK VARIABLE            00133400
                   LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE        00133500
                   LCLA  &ZTLA       VALUE TOO LONG VARIABLE            00133600
                   LCLC  &ZMAC_G     "G" or null                        00133700
&ZMAC_G            SETC  ''                                             00133800
                   LCLC  &ZMAC_LR                                       00133900
&ZMAC_LR           SETC  'LR'                                           00134000
                   LCLC  &ZMAC_L                                        00134100
&ZMAC_L            SETC  'L'                                            00134200
                   LCLC  &ZMAC_ST                                       00134300
&ZMAC_ST           SETC  'ST'                                           00134400
                   LCLC  &ZMAC_LLGT                                     00134500
&ZMAC_LLGT         SETC  'L'                                            00134600
                   LCLC  &ZMAC_LGR                                      00134700
&ZMAC_LGR          SETC  'LR'                                           00134800
                   LCLC  &ZMAC_LG                                       00134900
&ZMAC_LG           SETC  'L'                                            00135000
                   LCLC  &ZMAC_STG                                      00135100
&ZMAC_STG          SETC  'ST'                                           00135200
                   LCLA  &ZMACRET    MACRO RETURN CODE                  00135300
&ZMACRET           SETA  0           ASSUME NO ERRORS                   00135400
.*                                                                      00135500
                   LCLC  &ZCSYSLIST(255)        NONXKEY, POS ARRAY      00135600
                   LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()         00135700
                   LCLA  &ZPLLEN     PARAMETER LIST LENGTH              00135800
                   LCLC  &ZENDBASEPL            End of base PL          00135900
                   LCLA  &ZPLWORKA   PARAMETER LIST LENGTH              00136000
.*******************************************************************    00136100
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00136200
.*******************************************************************    00136300
                   LCLA  &ZI         INDEX FOR ARRAY                    00136400
                   LCLA  &ZJ         INDEX FOR PARMS                    00136500
                   LCLA  &ZK         INDEX FOR PARSE                    00136600
                   LCLA  &ZLO        LOW RANGE VALUE                    00136700
                   LCLA  &ZHI        HIGH RANGE VALUE                   00136800
                   LCLC  &ZW         WORK AREA FOR PARM                 00136900
.********************************************************************   00137000
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00137100
.********************************************************************   00137200
                   GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL            00137300
                   GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE     00137400
                   GBLA  &SYSALVL    SYSSTATE ARCHLVL                   00137500
                   GBLC  &SYSAM64    SYSSTATE AMODE64                   00137600
.*                                                                      00137700
                   AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED     00137800
                   AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED      00137900
                   SPLEVEL  TEST                                        00138000
.ZSYS2             ANOP  ,                                              00138100
                   AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1          00138200
                   AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1          00138300
                   SYSSTATE TEST                                        00138400
                   AGO   .ZSYS4                                         00138500
.ZSYS3             ANOP  ,                                              00138600
&SYSASCE           SETC  'P'         ASSUME SYSSTATE PRIMARY            00138700
.ZSYS4             ANOP  ,                                              00138800
                   AIF   ('&SYSAM64' NE 'YES').ZSYSN64                  00138900
&ZMAC_LLGT         SETC 'LLGT'                                          00139000
&ZMAC_LGR          SETC 'LGR'                                           00139100
&ZMAC_LG           SETC 'LG'                                            00139200
&ZMAC_STG          SETC 'STG'                                           00139300
.ZSYSN64           ANOP  ,                                              00139400
&ZMAC_G            SETC 'G'                                             00139500
&ZMAC_LR           SETC 'LGR'                                           00139600
&ZMAC_L            SETC 'LG'                                            00139700
&ZMAC_ST           SETC 'STG'                                           00139800
.*******************************************************************    00139900
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00140000
.*******************************************************************    00140100
                   LCLC  &XREQUEST   ++ VALUE                           00140200
                   LCLC  &XPRODOWNER            ++ NAME                 00140300
                   LCLC  &XPRODNAME  ++ NAME                            00140400
                   LCLC  &XPRODVERS  ++ NAME                            00140500
                   LCLC  &XPRODQUAL  ++ NAME                            00140600
                   LCLC  &XPRODID    ++ NAME                            00140700
                   LCLC  &XDOMAIN    ++ VALUE                           00140800
                   LCLC  &XSCOPE     ++ VALUE                           00140900
                   LCLC  &XDUMMY1    ++ NAME                            00141000
                   LCLC  &XPRTOKEN   ++ NAME                            00141100
                   LCLC  &XPRTOKEN64            ++ NAME                 00141200
                   LCLC  &XUNAUTHSERV           ++ VALUE                00141300
                   LCLC  &XDEREGPRODNAME        ++ NAME                 00141400
                   LCLC  &XDEREGENDTIME         ++ NAME                 00141500
                   LCLC  &XENDTIME   ++ NAME                            00141600
                   LCLC  &XENDTIME64            ++ NAME                 00141700
                   LCLC  &XDEREGENDDATA         ++ NAME                 00141800
                   LCLC  &XENDDATA   ++ NAME                            00141900
                   LCLC  &XENDDATA64            ++ NAME                 00142000
                   LCLC  &XBEGINPRODNAME        ++ NAME                 00142100
                   LCLC  &XDUMMY2    ++ NAME                            00142200
                   LCLC  &XBEGTIME   ++ NAME                            00142300
                   LCLC  &XBEGTIME64            ++ NAME                 00142400
                   LCLC  &XDATAPRODNAME         ++ NAME                 00142500
                   LCLC  &XDUMMY3    ++ NAME                            00142600
                   LCLC  &XDATA      ++ NAME                            00142700
                   LCLC  &XDATA64    ++ NAME                            00142800
                   LCLC  &XFORMAT    ++ VALUE                           00142900
                   LCLC  &XDUMMY4    ++ NAME                            00143000
                   LCLC  &XCURRENTDATA          ++ NAME                 00143100
                   LCLC  &XCURRENTDATA64        ++ NAME                 00143200
                   LCLC  &XENDPRODNAME          ++ NAME                 00143300
                   LCLC  &XDUMMY5    ++ NAME                            00143400
                   LCLC  &XDUMMY6    ++ NAME                            00143500
                   LCLC  &XLINKAGE   ++ VALUE                           00143600
                   LCLC  &XVALIDATE  ++ VALUE                           00143700
                   LCLC  &XFBFE      ++ VALUE                           00143800
                   LCLC  &XRETCODE   ++ NAME                            00143900
                   LCLA  &XPLISTVER  ++ VALUE                           00144000
                   LCLC  &XMF        ++ VALUE                           00144100
                   LCLC  &XMFCTRL    ++ NAME                            00144200
                   LCLC  &XMFATTR    ++ VALUE                           00144300
                   LCLC  &XMFSCK     ++ VALUE                           00144400
.*******************************************************************    00144500
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00144600
.*******************************************************************    00144700
                   LCLC  &ZXREQUEST  ++ INPUT VALUE                     00144800
                   LCLC  &ZXPRODOWNER           ++ INPUT NAME           00144900
                   LCLC  &ZXPRODNAME            ++ INPUT NAME           00145000
                   LCLC  &ZXPRODVERS            ++ INPUT NAME           00145100
                   LCLC  &ZXPRODQUAL            ++ INPUT NAME           00145200
                   LCLC  &ZXPRODID   ++ INPUT NAME                      00145300
                   LCLC  &ZXDOMAIN   ++ INPUT VALUE                     00145400
                   LCLC  &ZXSCOPE    ++ INPUT VALUE                     00145500
                   LCLC  &ZXDUMMY1   ++ OUTPUT NAME                     00145600
                   LCLC  &ZXPRTOKEN  ++ OUTPUT NAME                     00145700
                   LCLC  &ZXPRTOKEN64           ++ OUTPUT NAME          00145800
                   LCLC  &ZXUNAUTHSERV          ++ INPUT VALUE          00145900
                   LCLC  &ZXDEREGPRODNAME       ++ INPUT NAME           00146000
                   LCLC  &ZXDEREGENDTIME        ++ OUTPUT NAME          00146100
                   LCLC  &ZXENDTIME  ++ OUTPUT NAME                     00146200
                   LCLC  &ZXENDTIME64           ++ OUTPUT NAME          00146300
                   LCLC  &ZXDEREGENDDATA        ++ OUTPUT NAME          00146400
                   LCLC  &ZXENDDATA  ++ OUTPUT NAME                     00146500
                   LCLC  &ZXENDDATA64           ++ OUTPUT NAME          00146600
                   LCLC  &ZXBEGINPRODNAME       ++ INPUT NAME           00146700
                   LCLC  &ZXDUMMY2   ++ OUTPUT NAME                     00146800
                   LCLC  &ZXBEGTIME  ++ OUTPUT NAME                     00146900
                   LCLC  &ZXBEGTIME64           ++ OUTPUT NAME          00147000
                   LCLC  &ZXDATAPRODNAME        ++ INPUT NAME           00147100
                   LCLC  &ZXDUMMY3   ++ INPUT NAME                      00147200
                   LCLC  &ZXDATA     ++ INPUT NAME                      00147300
                   LCLC  &ZXDATA64   ++ INPUT NAME                      00147400
                   LCLC  &ZXFORMAT   ++ INPUT VALUE                     00147500
                   LCLC  &ZXDUMMY4   ++ OUTPUT NAME                     00147600
                   LCLC  &ZXCURRENTDATA         ++ OUTPUT NAME          00147700
                   LCLC  &ZXCURRENTDATA64       ++ OUTPUT NAME          00147800
                   LCLC  &ZXENDPRODNAME         ++ INPUT NAME           00147900
                   LCLC  &ZXDUMMY5   ++ OUTPUT NAME                     00148000
                   LCLC  &ZXDUMMY6   ++ OUTPUT NAME                     00148100
                   LCLC  &ZXLINKAGE  ++ INPUT VALUE                     00148200
                   LCLC  &ZXVALIDATE            ++ INPUT VALUE          00148300
                   LCLC  &ZXFBFE     ++ INPUT VALUE                     00148400
                   LCLC  &ZXRETCODE  ++ OUTPUT NAME                     00148500
                   LCLC  &ZXPLISTVER            ++ INPUT VALUE          00148600
                   LCLC  &ZXMF       ++ INPUT VALUE                     00148700
                   LCLC  &ZXMFCTRL   ++ INPUT NAME                      00148800
                   LCLC  &ZXMFATTR   ++ INPUT VALUE                     00148900
                   LCLC  &ZXMFSCK    ++ INPUT VALUE                     00149000
.********************************************************************   00149100
.***AC.PLV01  PROCESS PLISTVER                                      *   00149200
.********************************************************************   00149300
&XPLISTVER      SETA  1                                                 00149400
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00149500
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00149600
&XPLISTVER      SETA  2                                                 00149700
.ZPLV0          ANOP  ,                                                 00149800
.*                                                                      00149900
                AIF   ('&PRTOKEN64' EQ '').ZPLV1E                       00150000
                AIF   (&XPLISTVER GE 2).ZPLV1E                          00150100
&XPLISTVER      SETA  2                                                 00150200
.ZPLV1E         ANOP  ,                                                 00150300
.*                                                                      00150400
                AIF   ('&UNAUTHSERV' EQ '').ZPLV2E                      00150500
                AIF   (&XPLISTVER GE 2).ZPLV2E                          00150600
&XPLISTVER      SETA  2                                                 00150700
.ZPLV2E         ANOP  ,                                                 00150800
.*                                                                      00150900
                AIF   ('&PRTOKEN64' EQ '').ZPLV3E                       00151000
                AIF   (&XPLISTVER GE 2).ZPLV3E                          00151100
&XPLISTVER      SETA  2                                                 00151200
.ZPLV3E         ANOP  ,                                                 00151300
.*                                                                      00151400
                AIF   ('&ENDTIME64' EQ '').ZPLV4E                       00151500
                AIF   (&XPLISTVER GE 2).ZPLV4E                          00151600
&XPLISTVER      SETA  2                                                 00151700
.ZPLV4E         ANOP  ,                                                 00151800
.*                                                                      00151900
                AIF   ('&ENDDATA64' EQ '').ZPLV5E                       00152000
                AIF   (&XPLISTVER GE 2).ZPLV5E                          00152100
&XPLISTVER      SETA  2                                                 00152200
.ZPLV5E         ANOP  ,                                                 00152300
.*                                                                      00152400
                AIF   ('&PRTOKEN64' EQ '').ZPLV6E                       00152500
                AIF   (&XPLISTVER GE 2).ZPLV6E                          00152600
&XPLISTVER      SETA  2                                                 00152700
.ZPLV6E         ANOP  ,                                                 00152800
.*                                                                      00152900
                AIF   ('&BEGTIME64' EQ '').ZPLV7E                       00153000
                AIF   (&XPLISTVER GE 2).ZPLV7E                          00153100
&XPLISTVER      SETA  2                                                 00153200
.ZPLV7E         ANOP  ,                                                 00153300
.*                                                                      00153400
                AIF   ('&PRTOKEN64' EQ '').ZPLV8E                       00153500
                AIF   (&XPLISTVER GE 2).ZPLV8E                          00153600
&XPLISTVER      SETA  2                                                 00153700
.ZPLV8E         ANOP  ,                                                 00153800
.*                                                                      00153900
                AIF   ('&DATA64' EQ '').ZPLV9E                          00154000
                AIF   (&XPLISTVER GE 2).ZPLV9E                          00154100
&XPLISTVER      SETA  2                                                 00154200
.ZPLV9E         ANOP  ,                                                 00154300
.*                                                                      00154400
                AIF   ('&CURRENTDATA64' EQ '').ZPLV10E                  00154500
                AIF   (&XPLISTVER GE 2).ZPLV10E                         00154600
&XPLISTVER      SETA  2                                                 00154700
.ZPLV10E        ANOP  ,                                                 00154800
.*                                                                      00154900
                AIF   ('&PRTOKEN64' EQ '').ZPLV11E                      00155000
                AIF   (&XPLISTVER GE 2).ZPLV11E                         00155100
&XPLISTVER      SETA  2                                                 00155200
.ZPLV11E        ANOP  ,                                                 00155300
.*                                                                      00155400
                AIF   ('&ENDTIME64' EQ '').ZPLV12E                      00155500
                AIF   (&XPLISTVER GE 2).ZPLV12E                         00155600
&XPLISTVER      SETA  2                                                 00155700
.ZPLV12E        ANOP  ,                                                 00155800
.*                                                                      00155900
                AIF   ('&ENDDATA64' EQ '').ZPLV13E                      00156000
                AIF   (&XPLISTVER GE 2).ZPLV13E                         00156100
&XPLISTVER      SETA  2                                                 00156200
.ZPLV13E        ANOP  ,                                                 00156300
.*                                                                      00156400
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00156500
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00156600
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00156700
.*-------------------------------------------------------------------   00156800
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00156900
&ZMS            SETC  '"PLISTVER='                                      00157000
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00157100
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00157200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00157300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00157400
                AGO   .ZPVCK2                                           00157500
.ZPVCK3         ANOP  ,                                                 00157600
.*-------------------------------------------------------------------   00157700
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00157800
&ZMS            SETC  '"PLISTVER='                                      00157900
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00158000
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00158100
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00158200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00158300
                AGO   .ZPVCKE                                           00158400
.ZPVCK2         ANOP  ,                                                 00158500
.*-------------------------------------------------------------------   00158600
&ZCVAL          SETC  '&PLISTVER(1)'                                    00158700
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00158800
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00158900
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00159000
                AIF   (&ZN LT 1).ZPVCK6    TOO LOW                      00159100
                AIF   (&ZN LE 2).ZPVCK4A   NOT HIGH                     00159200
.ZPVCK6         ANOP  ,                                                 00159300
&ZMS            SETC  '"PLISTVER='                                      00159400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00159500
&ZMS            SETC  '&ZMS THE RANGE IS "1-2"'                         00159600
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00159700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00159800
&XPLISTVER      SETA  2                                                 00159900
                AGO   .ZPVCKE                                           00160000
.*-------------------------------------------------------------------   00160100
.ZPVCK4A        ANOP  ,                                                 00160200
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00160300
&ZMS            SETC  'PLISTVER='                                       00160400
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00160500
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00160600
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00160700
                MNOTE 8,' &ZMS IS REQUIRED.'                            00160800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00160900
                AGO   .ZPVCK5                                           00161000
.ZPVCK4         ANOP  ,                                                 00161100
&XPLISTVER      SETA  &PLISTVER(1)                                      00161200
.ZPVCK5         ANOP  ,                                                 00161300
.ZPVCKE         ANOP  ,                                                 00161400
.********************************************************************   00161500
.***AG.MF01 PROCESS MF MACRO FORMS                                      00161600
.********************************************************************   00161700
                   ACTR  10000                                          00161800
.*------------------------------------------------------------------    00161900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00162000
&XMF               SETC  ''          INITIALIZE XVARIABLE               00162100
.*-------------------------------------------------------------------   00162200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00162300
.ZG147             ANOP  ,                                              00162400
&ZTLC              SETC 'S'                                             00162500
                   AIF   ('&MF(1)' NE '&ZTLC').ZG148                    00162600
&XMF               SETC  'S'         SET KEYWORD                        00162700
&XMFSCK            SETC  'COMPLETE'  SET XMFSCK                         00162800
                   AIF   (N'&MF LE 1).ZG147A    CK NUM                  00162900
&ZMS               SETC  '"MF='                                         00163000
&ZMS               SETC  '&ZMS.&MF"'                                    00163100
&ZMS               SETC  '&ZMS "MF"'                                    00163200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00163300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00163400
.ZG147A            ANOP  ,                                              00163500
.*-------------------------------------------------------------------   00163600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00163700
.ZG148             ANOP  ,                                              00163800
&ZTLC              SETC 'L'                                             00163900
                   AIF   ('&MF(1)' NE '&ZTLC').ZG155                    00164000
&XMF               SETC  'L'         SET KEYWORD                        00164100
                   AIF   (N'&MF LE 3).ZG148A    CK NUM                  00164200
&ZMS               SETC  '"MF='                                         00164300
&ZMS               SETC  '&ZMS.&MF"'                                    00164400
&ZMS               SETC  '&ZMS "MF"'                                    00164500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'           00164600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00164700
.ZG148A            ANOP  ,                                              00164800
.*-------------------------------------------------------------------   00164900
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00165000
                   AIF   (N'&SYSLIST NE 0).ZG148B  POSITIONALS?         00165100
                   AIF   ('&REQUEST' NE '').ZG148B  KEYS?               00165200
                   AIF   ('&PRODOWNER' NE '').ZG148B  KEYS?             00165300
                   AIF   ('&PRODNAME' NE '').ZG148B  KEYS?              00165400
                   AIF   ('&PRODVERS' NE '').ZG148B  KEYS?              00165500
                   AIF   ('&PRODQUAL' NE '').ZG148B  KEYS?              00165600
                   AIF   ('&PRODID' NE '').ZG148B  KEYS?                00165700
                   AIF   ('&DOMAIN' NE '').ZG148B  KEYS?                00165800
                   AIF   ('&SCOPE' NE '').ZG148B  KEYS?                 00165900
                   AIF   ('&PRTOKEN' NE '').ZG148B  KEYS?               00166000
                   AIF   ('&PRTOKEN64' NE '').ZG148B  KEYS?             00166100
                   AIF   ('&UNAUTHSERV' NE '').ZG148B  KEYS?            00166200
                   AIF   ('&ENDTIME' NE '').ZG148B  KEYS?               00166300
                   AIF   ('&ENDTIME64' NE '').ZG148B  KEYS?             00166400
                   AIF   ('&ENDDATA' NE '').ZG148B  KEYS?               00166500
                   AIF   ('&ENDDATA64' NE '').ZG148B  KEYS?             00166600
                   AIF   ('&BEGTIME' NE '').ZG148B  KEYS?               00166700
                   AIF   ('&BEGTIME64' NE '').ZG148B  KEYS?             00166800
                   AIF   ('&DATA' NE '').ZG148B  KEYS?                  00166900
                   AIF   ('&DATA64' NE '').ZG148B  KEYS?                00167000
                   AIF   ('&FORMAT' NE '').ZG148B  KEYS?                00167100
                   AIF   ('&CURRENTDATA' NE '').ZG148B  KEYS?           00167200
                   AIF   ('&CURRENTDATA64' NE '').ZG148B  KEYS?         00167300
                   AIF   ('&LINKAGE' NE '').ZG148B  KEYS?               00167400
                   AIF   ('&VALIDATE' NE '').ZG148B  KEYS?              00167500
                   AIF   ('&FBFE' NE '').ZG148B  KEYS?                  00167600
                   AIF   ('&RETCODE' NE '').ZG148B  KEYS?               00167700
                   AGO    .ZG148C    INVOCATION OKAY                    00167800
.ZG148B            ANOP  ,                                              00167900
&ZMS               SETC  'THE "L" FORM OF "MF"'                         00168000
&ZMS               SETC  '&ZMS CAN ONLY HAVE'                           00168100
&ZMS               SETC  '&ZMS THE "PLISTVER" KEY'                      00168200
                   MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'         00168300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00168400
.ZG148C            ANOP  ,                                              00168500
.*-------------------------------------------------------------------   00168600
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00168700
&ZXMFCTRL          SETC  'INPUT'     SET IN/OUTPUT                      00168800
&XMFCTRL           SETC  '&MF(2,1)'  SET XVARIABLE                      00168900
                   AIF   (N'&MF(2) GT 1).ZG150B  MULTI                  00169000
&XMFCTRL           SETC  '&MF(2)'    SET XVARIABLE                      00169100
.ZG150B            AIF   (K'&MF(2) GT 0).ZG150C                         00169200
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    00169300
&ZMS               SETC  'WHEN "L" IS SPECIFIED'                        00169400
&ZMS               SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'            00169500
                   MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                   00169600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00169700
.ZG150C            ANOP  ,                                              00169800
.*-------------------------------------------------------------------   00169900
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00170000
                   AIF   (K'&ZXMFCTRL LE 0).ZG150P  NOT I/O             00170100
                   AIF   ('&XMFCTRL'(1,1) NE '(').ZG150P                00170200
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    00170300
&ZMS               SETC  '"MF='                                         00170400
&ZMS               SETC  '&ZMS.&MF"'                                    00170500
&ZMS               SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'      00170600
                   MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'              00170700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00170800
.ZG150P            ANOP  ,                                              00170900
.*-------------------------------------------------------------------   00171000
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00171100
&ZXMFATTR          SETC  'INPUT'     SET IN/OUTPUT                      00171200
&XMFATTR           SETC  '0D'                                           00171300
                   AIF   (K'&MF(3) LE 0).ZG153B  PARM                   00171400
&XMFATTR           SETC  '&MF(3,1)'  SET XVARIABLE                      00171500
                   AIF   (N'&MF(3) GT 1).ZG153B  MULTI                  00171600
&XMFATTR           SETC  '&MF(3)'    SET XVARIABLE                      00171700
.ZG153B            ANOP  ,                                              00171800
.*-------------------------------------------------------------------   00171900
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00172000
                   AIF   (K'&ZXMFATTR LE 0).ZG153P  NOT I/O             00172100
                   AIF   ('&XMFATTR'(1,1) NE '(').ZG153P                00172200
&ZXMFATTR          SETC  ''          RESET IN/OUTPUT                    00172300
&ZMS               SETC  '"MF='                                         00172400
&ZMS               SETC  '&ZMS.&MF"'                                    00172500
&ZMS               SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'      00172600
                   MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'              00172700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00172800
.ZG153P            ANOP  ,                                              00172900
.*-------------------------------------------------------------------   00173000
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00173100
                   AIF   (K'&ZXMFATTR LE 0).ZG153S  NOT I/O             00173200
                   AIF   (K'&XMFATTR LE 60).ZG153S  LNG OK              00173300
&ZXMFATTR          SETC  ''          RESET IN/OUTPUT                    00173400
&ZMS               SETC  '"MF='                                         00173500
&ZMS               SETC  '&ZMS.&MF"'                                    00173600
&ZMS               SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'          00173700
                   MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'             00173800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00173900
.ZG153S            ANOP  ,                                              00174000
.*-------------------------------------------------------------------   00174100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00174200
.ZG155             ANOP  ,                                              00174300
&ZTLC              SETC 'M'                                             00174400
                   AIF   ('&MF(1)' NE '&ZTLC').ZG164                    00174500
&XMF               SETC  'M'         SET KEYWORD                        00174600
                   AIF   (N'&MF LE 3).ZG155A    CK NUM                  00174700
&ZMS               SETC  '"MF='                                         00174800
&ZMS               SETC  '&ZMS.&MF"'                                    00174900
&ZMS               SETC  '&ZMS "MF"'                                    00175000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'           00175100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00175200
.ZG155A            ANOP  ,                                              00175300
.*-------------------------------------------------------------------   00175400
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00175500
&ZXMFCTRL          SETC  'INPUT'     SET IN/OUTPUT                      00175600
&XMFCTRL           SETC  '&MF(2,1)'  SET XVARIABLE                      00175700
                   AIF   (N'&MF(2) GT 1).ZG157B  MULTI                  00175800
&XMFCTRL           SETC  '&MF(2)'    SET XVARIABLE                      00175900
.ZG157B            AIF   (K'&MF(2) GT 0).ZG157C                         00176000
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    00176100
&ZMS               SETC  'WHEN "M" IS SPECIFIED'                        00176200
&ZMS               SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'            00176300
                   MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                   00176400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00176500
.ZG157C            ANOP  ,                                              00176600
.*-------------------------------------------------------------------   00176700
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00176800
                   AIF   (K'&ZXMFCTRL LE 0).ZG157R  NOT I/O             00176900
                   AIF   ('&XMFCTRL'(1,1) NE '(').ZG157R                00177000
&ZCGPR             SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                     00177100
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG157P                  00177200
                   AIF   (K'&ZCGPR GT 2).ZG157Q                         00177300
                   AIF   ('&ZCGPR' EQ '0').ZG157Q                       00177400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00177500
                   AIF   (T'&ZCGPR NE 'N').ZG157Q  INVALID REG NAME     00177600
.ZG157P            ANOP  ,                                              00177700
                   AIF   (T'&ZCGPR NE 'N').ZG157R  NON NUMERIC          00177800
                   AIF   ('&ZCGPR' LT '1').ZG157Q                       00177900
                   AIF   ('&ZCGPR' LE '12').ZG157R                      00178000
.ZG157Q            ANOP  ,                                              00178100
&ZMS               SETC  '"MF='                                         00178200
&ZMS               SETC  '&ZMS.&MF"'                                    00178300
&ZMS               SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'      00178400
                   MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'               00178500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00178600
.ZG157R            ANOP  ,                                              00178700
.*-------------------------------------------------------------------   00178800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00178900
&XMFSCK            SETC  ''          INITIALIZE XVARIABLE               00179000
.ZG161A   AIF   ('&MF(3)' NE 'COMPLETE').ZG162A                         00179100
&XMFSCK            SETC  'COMPLETE'  SET KEYWORD                        00179200
.*-------------------------------------------------------------------   00179300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00179400
.ZG162A   AIF   ('&MF(3)' NE 'NOCHECK').ZG163A                          00179500
&XMFSCK            SETC  'NOCHECK'   SET KEYWORD                        00179600
.*-------------------------------------------------------------------   00179700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00179800
.ZG163A            AIF   (K'&XMFSCK GT 0).ZG163C  KEYWORD               00179900
                   AIF   (K'&MF(3) LE 0).ZG163B                         00180000
&ZMS               SETC  '"MF='                                         00180100
&ZMS               SETC  '&ZMS.&MF"'                                    00180200
&ZMS               SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '      00180300
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00180400
&ZMS               SETC  '&ZMS "COMPLETE"'                              00180500
&ZMS               SETC  '&ZMS OR "NOCHECK".'                           00180600
                   MNOTE 8,' &ZMS '                                     00180700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00180800
.ZG163B            ANOP  ,                                              00180900
&XMFSCK            SETC  'COMPLETE'  SET DEFAULT KEYWORD                00181000
.ZG163C            ANOP  ,                                              00181100
&ZXMFSCK           SETC  'INPUT'     SET IN/OUTPUT                      00181200
.*-------------------------------------------------------------------   00181300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00181400
.ZG164             ANOP  ,                                              00181500
&ZTLC              SETC 'E'                                             00181600
                   AIF   ('&MF(1)' NE '&ZTLC').ZG173                    00181700
&XMF               SETC  'E'         SET KEYWORD                        00181800
                   AIF   (N'&MF LE 3).ZG164A    CK NUM                  00181900
&ZMS               SETC  '"MF='                                         00182000
&ZMS               SETC  '&ZMS.&MF"'                                    00182100
&ZMS               SETC  '&ZMS "MF"'                                    00182200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'           00182300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00182400
.ZG164A            ANOP  ,                                              00182500
.*-------------------------------------------------------------------   00182600
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00182700
&ZXMFCTRL          SETC  'INPUT'     SET IN/OUTPUT                      00182800
&XMFCTRL           SETC  '&MF(2,1)'  SET XVARIABLE                      00182900
                   AIF   (N'&MF(2) GT 1).ZG166B  MULTI                  00183000
&XMFCTRL           SETC  '&MF(2)'    SET XVARIABLE                      00183100
.ZG166B            AIF   (K'&MF(2) GT 0).ZG166C                         00183200
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    00183300
&ZMS               SETC  'WHEN "E" IS SPECIFIED'                        00183400
&ZMS               SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'            00183500
                   MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                   00183600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00183700
.ZG166C            ANOP  ,                                              00183800
.*-------------------------------------------------------------------   00183900
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00184000
                   AIF   (K'&ZXMFCTRL LE 0).ZG166R  NOT I/O             00184100
                   AIF   ('&XMFCTRL'(1,1) NE '(').ZG166R                00184200
&ZCGPR             SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                     00184300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG166P                  00184400
                   AIF   (K'&ZCGPR GT 2).ZG166Q                         00184500
                   AIF   ('&ZCGPR' EQ '0').ZG166Q                       00184600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00184700
                   AIF   (T'&ZCGPR NE 'N').ZG166Q  INVALID REG NAME     00184800
.ZG166P            ANOP  ,                                              00184900
                   AIF   (T'&ZCGPR NE 'N').ZG166R  NON NUMERIC          00185000
                   AIF   ('&ZCGPR' LT '1').ZG166Q                       00185100
                   AIF   ('&ZCGPR' LE '12').ZG166R                      00185200
.ZG166Q            ANOP  ,                                              00185300
&ZMS               SETC  '"MF='                                         00185400
&ZMS               SETC  '&ZMS.&MF"'                                    00185500
&ZMS               SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'      00185600
                   MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'               00185700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00185800
.ZG166R            ANOP  ,                                              00185900
.*-------------------------------------------------------------------   00186000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00186100
&XMFSCK            SETC  ''          INITIALIZE XVARIABLE               00186200
.ZG170A   AIF   ('&MF(3)' NE 'COMPLETE').ZG171A                         00186300
&XMFSCK            SETC  'COMPLETE'  SET KEYWORD                        00186400
.*-------------------------------------------------------------------   00186500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00186600
.ZG171A   AIF   ('&MF(3)' NE 'NOCHECK').ZG172A                          00186700
&XMFSCK            SETC  'NOCHECK'   SET KEYWORD                        00186800
.*-------------------------------------------------------------------   00186900
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00187000
.ZG172A            AIF   (K'&XMFSCK GT 0).ZG172C  KEYWORD               00187100
                   AIF   (K'&MF(3) LE 0).ZG172B                         00187200
&ZMS               SETC  '"MF='                                         00187300
&ZMS               SETC  '&ZMS.&MF"'                                    00187400
&ZMS               SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '      00187500
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00187600
&ZMS               SETC  '&ZMS "COMPLETE"'                              00187700
&ZMS               SETC  '&ZMS OR "NOCHECK".'                           00187800
                   MNOTE 8,' &ZMS '                                     00187900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00188000
.ZG172B            ANOP  ,                                              00188100
&XMFSCK            SETC  'COMPLETE'  SET DEFAULT KEYWORD                00188200
.ZG172C            ANOP  ,                                              00188300
&ZXMFSCK           SETC  'INPUT'     SET IN/OUTPUT                      00188400
.*------------------------------------------------------------------    00188500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00188600
.ZG173             ANOP  ,                                              00188700
&ZXMF              SETC  'INPUT'     SET IN/OUTPUT                      00188800
                   AIF   (K'&XMF GT 0).ZG173E   VALID ARG               00188900
                   AIF   (T'&MF EQ 'O').ZG173D  OMITTED                 00189000
&ZASYSLNDX         SETA  0                                              00189100
.ZG173A            ANOP  ,           POSITIONAL MACRO KEY               00189200
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00189300
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG173C              00189400
&ZTLC              SETC 'MF'                                            00189500
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG173A     00189600
.ZG173B            ANOP  ,                                              00189700
&ZXMF              SETC  ''          RESET IN/OUTPUT                    00189800
&ZMS               SETC  'THE "MF" KEY'                                 00189900
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00190000
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00190100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00190200
                   AGO   .ZG173E                                        00190300
.ZG173C            ANOP  ,                                              00190400
&ZXMF              SETC  ''          RESET IN/OUTPUT                    00190500
&ZMS               SETC  '"MF='                                         00190600
&ZMS               SETC  '&ZMS.&MF"'                                    00190700
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00190800
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00190900
&ZMS               SETC  '&ZMS "S",'                                    00191000
&ZMS               SETC  '&ZMS "L",'                                    00191100
&ZMS               SETC  '&ZMS "M",'                                    00191200
&ZMS               SETC  '&ZMS OR "E".'                                 00191300
                   MNOTE 8,' &ZMS '                                     00191400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00191500
                   AGO   .ZG173E                                        00191600
.ZG173D            ANOP  ,                                              00191700
&XMF               SETC  'S'         SET DEFAULT KEYWORD                00191800
&XMFSCK            SETC  'COMPLETE'  COMPLETE CHECKING                  00191900
.ZG173E            ANOP  ,                                              00192000
.********************************************************************   00192100
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00192200
.********************************************************************   00192300
                   ACTR  10000                                          00192400
.*-------------------------------------------------------------------   00192500
.***AG.MF03 MF=(SLME)                                                   00192600
                   AIF   ('&XMF' EQ 'L').ZGMFX                          00192700
                   AIF   ('&XMFSCK' NE 'COMPLETE').ZGMFX                00192800
.*------------------------------------------------------------------    00192900
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00193000
&XREQUEST          SETC  ''          INITIALIZE XVARIABLE               00193100
.*-------------------------------------------------------------------   00193200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00193300
.ZG3               ANOP  ,                                              00193400
                   AIF   (K'&REQUEST(1) LE 0).ZG3A                      00193500
&ZTLC              SETC 'REGISTER'                                      00193600
                   AIF   ('&REQUEST(1)' NE '&ZTLC').ZG32                00193700
&XREQUEST          SETC  'REGISTER'  SET KEYWORD                        00193800
                   AIF   (N'&REQUEST LE 1).ZG3A  CK NUM                 00193900
&ZMS               SETC  '"REQUEST='                                    00194000
&ZMS               SETC  '&ZMS.&REQUEST"'                               00194100
&ZMS               SETC  '&ZMS "REQUEST"'                               00194200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00194300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00194400
.ZG3A              ANOP  ,                                              00194500
.*------------------------------------------------------------------    00194600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00194700
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00194800
.ZG3A0             AIF   (K'&ENDTIME LE 0).ZG3A1  OK                    00194900
&ZCVAL             SETC '&ZCVAL ENDTIME'        INCORRECT KEY USED      00195000
.ZG3A1             AIF   (K'&ENDTIME64 LE 0).ZG3A2  OK                  00195100
&ZCVAL             SETC '&ZCVAL ENDTIME64'      INCORRECT KEY USED      00195200
.ZG3A2             AIF   (K'&ENDDATA LE 0).ZG3A3  OK                    00195300
&ZCVAL             SETC '&ZCVAL ENDDATA'        INCORRECT KEY USED      00195400
.ZG3A3             AIF   (K'&ENDDATA64 LE 0).ZG3A4  OK                  00195500
&ZCVAL             SETC '&ZCVAL ENDDATA64'      INCORRECT KEY USED      00195600
.ZG3A4             AIF   (K'&BEGTIME LE 0).ZG3A5  OK                    00195700
&ZCVAL             SETC '&ZCVAL BEGTIME'        INCORRECT KEY USED      00195800
.ZG3A5             AIF   (K'&BEGTIME64 LE 0).ZG3A6  OK                  00195900
&ZCVAL             SETC '&ZCVAL BEGTIME64'      INCORRECT KEY USED      00196000
.ZG3A6             AIF   (K'&DATA LE 0).ZG3A7   OK                      00196100
&ZCVAL             SETC '&ZCVAL DATA'           INCORRECT KEY USED      00196200
.ZG3A7             AIF   (K'&DATA64 LE 0).ZG3A8  OK                     00196300
&ZCVAL             SETC '&ZCVAL DATA64'         INCORRECT KEY USED      00196400
.ZG3A8             AIF   (K'&FORMAT LE 0).ZG3A9  OK                     00196500
&ZCVAL             SETC '&ZCVAL FORMAT'         INCORRECT KEY USED      00196600
.ZG3A9             AIF   (K'&CURRENTDATA LE 0).ZG3A10  OK               00196700
&ZCVAL             SETC '&ZCVAL CURRENTDATA'    INCORRECT KEY USED      00196800
.ZG3A10            AIF   (K'&CURRENTDATA64 LE 0).ZG3A11  OK             00196900
&ZCVAL             SETC '&ZCVAL CURRENTDATA64'  INCORRECT KEY USED      00197000
.ZG3A11            AIF   (K'&ZCVAL LE 0).ZG3A12  OK                     00197100
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00197200
&ZMS               SETC  '"REQUEST'                                     00197300
&ZMS               SETC  '&ZMS.=&REQUEST"'                              00197400
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00197500
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00197600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00197700
.ZG3A12            ANOP  ,                                              00197800
.*----------------------------------------------------------------***   00197900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00198000
                   AIF   (N'&PRODOWNER LE 1).ZG5A  CK NUM               00198100
&ZMS               SETC  '"PRODOWNER='                                  00198200
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             00198300
&ZMS               SETC  '&ZMS "PRODOWNER"'                             00198400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00198500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00198600
.ZG5A              ANOP  ,                                              00198700
.*-------------------------------------------------------------------   00198800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00198900
&ZXPRODOWNER       SETC  'INPUT'     SET IN/OUTPUT                      00199000
&XPRODOWNER        SETC  '&PRODOWNER(1)'        SET XVARIABLE           00199100
                   AIF   (N'&PRODOWNER GT 1).ZG5B  MULTI                00199200
&XPRODOWNER        SETC  '&PRODOWNER'           SET XVARIABLE           00199300
.ZG5B              AIF   (K'&PRODOWNER(1) GT 0).ZG5C                    00199400
&ZXPRODOWNER       SETC  ''          RESET IN/OUTPUT                    00199500
&ZMS               SETC  ' '                                            00199600
&ZMS               SETC  '&ZMS "PRODOWNER" KEY AND ITS'                 00199700
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00199800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00199900
.ZG5C              ANOP  ,                                              00200000
.*-------------------------------------------------------------------   00200100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00200200
                   AIF   (K'&ZXPRODOWNER LE 0).ZG5R  NOT I/O            00200300
                   AIF   ('&XPRODOWNER'(1,1) NE '(').ZG5R               00200400
&ZCGPR             SETC  '&XPRODOWNER'(2,K'&XPRODOWNER-2)               00200500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                    00200600
                   AIF   (K'&ZCGPR GT 2).ZG5Q                           00200700
                   AIF   ('&ZCGPR' EQ '0').ZG5Q                         00200800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00200900
                   AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME       00201000
.ZG5P              ANOP  ,                                              00201100
                   AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC            00201200
                   AIF   ('&ZCGPR' LT '2').ZG5Q                         00201300
                   AIF   ('&ZCGPR' LE '12').ZG5R                        00201400
.ZG5Q              ANOP  ,                                              00201500
&ZMS               SETC  '"PRODOWNER='                                  00201600
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             00201700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00201800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00201900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00202000
.ZG5R              ANOP  ,                                              00202100
.*----------------------------------------------------------------***   00202200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00202300
                   AIF   (N'&PRODNAME LE 1).ZG6A  CK NUM                00202400
&ZMS               SETC  '"PRODNAME='                                   00202500
&ZMS               SETC  '&ZMS.&PRODNAME"'                              00202600
&ZMS               SETC  '&ZMS "PRODNAME"'                              00202700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00202800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00202900
.ZG6A              ANOP  ,                                              00203000
.*-------------------------------------------------------------------   00203100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00203200
&ZXPRODNAME        SETC  'INPUT'     SET IN/OUTPUT                      00203300
&XPRODNAME         SETC  '&PRODNAME(1)'         SET XVARIABLE           00203400
                   AIF   (N'&PRODNAME GT 1).ZG6B  MULTI                 00203500
&XPRODNAME         SETC  '&PRODNAME'            SET XVARIABLE           00203600
.ZG6B              AIF   (K'&PRODNAME(1) GT 0).ZG6C                     00203700
&ZXPRODNAME        SETC  ''          RESET IN/OUTPUT                    00203800
&ZMS               SETC  ' '                                            00203900
&ZMS               SETC  '&ZMS "PRODNAME" KEY AND ITS'                  00204000
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00204100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00204200
.ZG6C              ANOP  ,                                              00204300
.*-------------------------------------------------------------------   00204400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00204500
                   AIF   (K'&ZXPRODNAME LE 0).ZG6R  NOT I/O             00204600
                   AIF   ('&XPRODNAME'(1,1) NE '(').ZG6R                00204700
&ZCGPR             SETC  '&XPRODNAME'(2,K'&XPRODNAME-2)                 00204800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG6P                    00204900
                   AIF   (K'&ZCGPR GT 2).ZG6Q                           00205000
                   AIF   ('&ZCGPR' EQ '0').ZG6Q                         00205100
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00205200
                   AIF   (T'&ZCGPR NE 'N').ZG6Q  INVALID REG NAME       00205300
.ZG6P              ANOP  ,                                              00205400
                   AIF   (T'&ZCGPR NE 'N').ZG6R  NON NUMERIC            00205500
                   AIF   ('&ZCGPR' LT '2').ZG6Q                         00205600
                   AIF   ('&ZCGPR' LE '12').ZG6R                        00205700
.ZG6Q              ANOP  ,                                              00205800
&ZMS               SETC  '"PRODNAME='                                   00205900
&ZMS               SETC  '&ZMS.&PRODNAME"'                              00206000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00206100
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00206200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00206300
.ZG6R              ANOP  ,                                              00206400
.*----------------------------------------------------------------***   00206500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00206600
                   AIF   (N'&PRODVERS LE 1).ZG9A  CK NUM                00206700
&ZMS               SETC  '"PRODVERS='                                   00206800
&ZMS               SETC  '&ZMS.&PRODVERS"'                              00206900
&ZMS               SETC  '&ZMS "PRODVERS"'                              00207000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00207100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00207200
.ZG9A              ANOP  ,                                              00207300
.*-------------------------------------------------------------------   00207400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00207500
&ZXPRODVERS        SETC  'INPUT'     SET IN/OUTPUT                      00207600
&XPRODVERS         SETC  'NONE'                                         00207700
                   AIF   (K'&PRODVERS(1) LE 0).ZG9B  PARM               00207800
&XPRODVERS         SETC  '&PRODVERS(1)'         SET XVARIABLE           00207900
                   AIF   (N'&PRODVERS GT 1).ZG9B  MULTI                 00208000
&XPRODVERS         SETC  '&PRODVERS'            SET XVARIABLE           00208100
.ZG9B              ANOP  ,                                              00208200
.*-------------------------------------------------------------------   00208300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00208400
                   AIF   (K'&ZXPRODVERS LE 0).ZG9R  NOT I/O             00208500
                   AIF   ('&XPRODVERS'(1,1) NE '(').ZG9R                00208600
&ZCGPR             SETC  '&XPRODVERS'(2,K'&XPRODVERS-2)                 00208700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG9P                    00208800
                   AIF   (K'&ZCGPR GT 2).ZG9Q                           00208900
                   AIF   ('&ZCGPR' EQ '0').ZG9Q                         00209000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00209100
                   AIF   (T'&ZCGPR NE 'N').ZG9Q  INVALID REG NAME       00209200
.ZG9P              ANOP  ,                                              00209300
                   AIF   (T'&ZCGPR NE 'N').ZG9R  NON NUMERIC            00209400
                   AIF   ('&ZCGPR' LT '2').ZG9Q                         00209500
                   AIF   ('&ZCGPR' LE '12').ZG9R                        00209600
.ZG9Q              ANOP  ,                                              00209700
&ZMS               SETC  '"PRODVERS='                                   00209800
&ZMS               SETC  '&ZMS.&PRODVERS"'                              00209900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00210000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00210100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00210200
.ZG9R              ANOP  ,                                              00210300
.*----------------------------------------------------------------***   00210400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00210500
                   AIF   (N'&PRODQUAL LE 1).ZG10A  CK NUM               00210600
&ZMS               SETC  '"PRODQUAL='                                   00210700
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              00210800
&ZMS               SETC  '&ZMS "PRODQUAL"'                              00210900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00211000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00211100
.ZG10A             ANOP  ,                                              00211200
.*-------------------------------------------------------------------   00211300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00211400
&ZXPRODQUAL        SETC  'INPUT'     SET IN/OUTPUT                      00211500
&XPRODQUAL         SETC  'NONE'                                         00211600
                   AIF   (K'&PRODQUAL(1) LE 0).ZG10B  PARM              00211700
&XPRODQUAL         SETC  '&PRODQUAL(1)'         SET XVARIABLE           00211800
                   AIF   (N'&PRODQUAL GT 1).ZG10B  MULTI                00211900
&XPRODQUAL         SETC  '&PRODQUAL'            SET XVARIABLE           00212000
.ZG10B             ANOP  ,                                              00212100
.*-------------------------------------------------------------------   00212200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00212300
                   AIF   (K'&ZXPRODQUAL LE 0).ZG10R  NOT I/O            00212400
                   AIF   ('&XPRODQUAL'(1,1) NE '(').ZG10R               00212500
&ZCGPR             SETC  '&XPRODQUAL'(2,K'&XPRODQUAL-2)                 00212600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG10P                   00212700
                   AIF   (K'&ZCGPR GT 2).ZG10Q                          00212800
                   AIF   ('&ZCGPR' EQ '0').ZG10Q                        00212900
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00213000
                   AIF   (T'&ZCGPR NE 'N').ZG10Q  INVALID REG NAME      00213100
.ZG10P             ANOP  ,                                              00213200
                   AIF   (T'&ZCGPR NE 'N').ZG10R  NON NUMERIC           00213300
                   AIF   ('&ZCGPR' LT '2').ZG10Q                        00213400
                   AIF   ('&ZCGPR' LE '12').ZG10R                       00213500
.ZG10Q             ANOP  ,                                              00213600
&ZMS               SETC  '"PRODQUAL='                                   00213700
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              00213800
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00213900
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00214000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00214100
.ZG10R             ANOP  ,                                              00214200
.*----------------------------------------------------------------***   00214300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00214400
                   AIF   (N'&PRODID LE 1).ZG11A  CK NUM                 00214500
&ZMS               SETC  '"PRODID='                                     00214600
&ZMS               SETC  '&ZMS.&PRODID"'                                00214700
&ZMS               SETC  '&ZMS "PRODID"'                                00214800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00214900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00215000
.ZG11A             ANOP  ,                                              00215100
.*-------------------------------------------------------------------   00215200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00215300
&ZXPRODID          SETC  'INPUT'     SET IN/OUTPUT                      00215400
&XPRODID           SETC  'NONE'                                         00215500
                   AIF   (K'&PRODID(1) LE 0).ZG11B  PARM                00215600
&XPRODID           SETC  '&PRODID(1)'           SET XVARIABLE           00215700
                   AIF   (N'&PRODID GT 1).ZG11B  MULTI                  00215800
&XPRODID           SETC  '&PRODID'   SET XVARIABLE                      00215900
.ZG11B             ANOP  ,                                              00216000
.*-------------------------------------------------------------------   00216100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00216200
                   AIF   (K'&ZXPRODID LE 0).ZG11R  NOT I/O              00216300
                   AIF   ('&XPRODID'(1,1) NE '(').ZG11R                 00216400
&ZCGPR             SETC  '&XPRODID'(2,K'&XPRODID-2)                     00216500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                   00216600
                   AIF   (K'&ZCGPR GT 2).ZG11Q                          00216700
                   AIF   ('&ZCGPR' EQ '0').ZG11Q                        00216800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00216900
                   AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME      00217000
.ZG11P             ANOP  ,                                              00217100
                   AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC           00217200
                   AIF   ('&ZCGPR' LT '2').ZG11Q                        00217300
                   AIF   ('&ZCGPR' LE '12').ZG11R                       00217400
.ZG11Q             ANOP  ,                                              00217500
&ZMS               SETC  '"PRODID='                                     00217600
&ZMS               SETC  '&ZMS.&PRODID"'                                00217700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00217800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00217900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00218000
.ZG11R             ANOP  ,                                              00218100
.*------------------------------------------------------------------    00218200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00218300
&XDOMAIN           SETC  ''          INITIALIZE XVARIABLE               00218400
.*-------------------------------------------------------------------   00218500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00218600
.ZG15              ANOP  ,                                              00218700
                   AIF   (K'&DOMAIN(1) LE 0).ZG15A                      00218800
&ZTLC              SETC 'ADDRSP'                                        00218900
                   AIF   ('&DOMAIN(1)' NE '&ZTLC').ZG16                 00219000
&XDOMAIN           SETC  'ADDRSP'    SET KEYWORD                        00219100
                   AIF   (N'&DOMAIN LE 1).ZG15A  CK NUM                 00219200
&ZMS               SETC  '"DOMAIN='                                     00219300
&ZMS               SETC  '&ZMS.&DOMAIN"'                                00219400
&ZMS               SETC  '&ZMS "DOMAIN"'                                00219500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00219600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00219700
.ZG15A             ANOP  ,                                              00219800
.*------------------------------------------------------------------    00219900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00220000
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00220100
.ZG15A0            AIF   (K'&SCOPE LE 0).ZG15A1  OK                     00220200
&ZCVAL             SETC '&ZCVAL SCOPE'          INCORRECT KEY USED      00220300
.ZG15A1            AIF   (K'&ZCVAL LE 0).ZG15A2  OK                     00220400
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00220500
&ZMS               SETC  '"DOMAIN'                                      00220600
&ZMS               SETC  '&ZMS.=&DOMAIN"'                               00220700
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00220800
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00220900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00221000
.ZG15A2            ANOP  ,                                              00221100
.*-------------------------------------------------------------------   00221200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00221300
.ZG16              ANOP  ,                                              00221400
&ZTLC              SETC 'TASK'                                          00221500
                   AIF   ('&DOMAIN(1)' NE '&ZTLC').ZG22                 00221600
&XDOMAIN           SETC  'TASK'      SET KEYWORD                        00221700
                   AIF   (N'&DOMAIN LE 1).ZG16A  CK NUM                 00221800
&ZMS               SETC  '"DOMAIN='                                     00221900
&ZMS               SETC  '&ZMS.&DOMAIN"'                                00222000
&ZMS               SETC  '&ZMS "DOMAIN"'                                00222100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00222200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00222300
.ZG16A             ANOP  ,                                              00222400
.*----------------------------------------------------------------***   00222500
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00222600
                   AIF   (N'&SCOPE LE 1).ZG18A  CK NUM                  00222700
&ZMS               SETC  '"SCOPE='                                      00222800
&ZMS               SETC  '&ZMS.&SCOPE"'                                 00222900
&ZMS               SETC  '&ZMS "SCOPE"'                                 00223000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00223100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00223200
.ZG18A             ANOP  ,                                              00223300
.*-------------------------------------------------------------------   00223400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00223500
&XSCOPE            SETC  ''          INITIALIZE XVARIABLE               00223600
.ZG19A   AIF   ('&SCOPE(1)' NE 'ALL').ZG20A                             00223700
&XSCOPE            SETC  'ALL'       SET KEYWORD                        00223800
.*-------------------------------------------------------------------   00223900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00224000
.ZG20A   AIF   ('&SCOPE(1)' NE 'FUNCTION').ZG21A                        00224100
&XSCOPE            SETC  'FUNCTION'  SET KEYWORD                        00224200
.*-------------------------------------------------------------------   00224300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00224400
.ZG21A             AIF   (K'&XSCOPE GT 0).ZG21C  KEYWORD                00224500
                   AIF   (K'&SCOPE(1) LE 0).ZG21B                       00224600
&ZMS               SETC  '"SCOPE='                                      00224700
&ZMS               SETC  '&ZMS.&SCOPE"'                                 00224800
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00224900
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00225000
&ZMS               SETC  '&ZMS "ALL"'                                   00225100
&ZMS               SETC  '&ZMS OR "FUNCTION".'                          00225200
                   MNOTE 8,' &ZMS '                                     00225300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00225400
.ZG21B             ANOP  ,                                              00225500
&XSCOPE            SETC  'ALL'       SET DEFAULT KEYWORD                00225600
.ZG21C             ANOP  ,                                              00225700
&ZXSCOPE           SETC  'INPUT'     SET IN/OUTPUT                      00225800
.*------------------------------------------------------------------    00225900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00226000
.ZG22              ANOP  ,                                              00226100
&ZXDOMAIN          SETC  'INPUT'     SET IN/OUTPUT                      00226200
                   AIF   (K'&XDOMAIN GT 0).ZG22E  VALID ARG             00226300
                   AIF   (T'&DOMAIN EQ 'O').ZG22D  OMITTED              00226400
&ZASYSLNDX         SETA  0                                              00226500
.ZG22A             ANOP  ,           POSITIONAL MACRO KEY               00226600
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00226700
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG22C               00226800
&ZTLC              SETC 'DOMAIN'                                        00226900
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG22A      00227000
.ZG22B             ANOP  ,                                              00227100
&ZXDOMAIN          SETC  ''          RESET IN/OUTPUT                    00227200
&ZMS               SETC  'THE "DOMAIN" KEY'                             00227300
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00227400
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00227500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00227600
                   AGO   .ZG22E                                         00227700
.ZG22C             ANOP  ,                                              00227800
&ZXDOMAIN          SETC  ''          RESET IN/OUTPUT                    00227900
&ZMS               SETC  '"DOMAIN='                                     00228000
&ZMS               SETC  '&ZMS.&DOMAIN"'                                00228100
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00228200
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00228300
&ZMS               SETC  '&ZMS "ADDRSP"'                                00228400
&ZMS               SETC  '&ZMS OR "TASK".'                              00228500
                   MNOTE 8,' &ZMS '                                     00228600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00228700
                   AGO   .ZG22E                                         00228800
.ZG22D             ANOP  ,                                              00228900
&XDOMAIN           SETC  'ADDRSP'    SET DEFAULT KEYWORD                00229000
.ZG22E             ANOP  ,                                              00229100
.*----------------------------------------------------------------***   00229200
.***AG.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE                     00229300
&XDUMMY1           SETC  ''          INITIALIZE XVARIABLE               00229400
                   AIF   (K'&PRTOKEN LE 0).ZG24C                        00229500
&ZXDUMMY1          SETC  'OUTPUT'    SET IN/OUTPUT                      00229600
&XDUMMY1           SETC  'PRTOKEN'   SET XVARIABLE                      00229700
&ZXPRTOKEN         SETC  'OUTPUT'    SET IN/OUTPUT                      00229800
&XPRTOKEN          SETC  '&PRTOKEN(1)'          SET XVARIABLE PARM      00229900
                   AIF   (N'&PRTOKEN GT 1).ZG24A                        00230000
&XPRTOKEN          SETC  '&PRTOKEN'  SET XVARIABLE PARM                 00230100
.ZG24A             AIF   (N'&PRTOKEN LE 1).ZG24B  CK NUM                00230200
&ZMS               SETC  '"PRTOKEN='                                    00230300
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               00230400
&ZMS               SETC  '&ZMS "PRTOKEN"'                               00230500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00230600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00230700
.ZG24B             AIF   (K'&XPRTOKEN GT 0).ZG24C  ONE PARM             00230800
&ZXDUMMY1          SETC  ''          RESET IN/OUTPUT                    00230900
&ZXPRTOKEN         SETC  ''          RESET IN/OUTPUT                    00231000
&ZMS               SETC  ' '                                            00231100
&ZMS               SETC  '&ZMS "PRTOKEN" KEY AND ITS'                   00231200
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00231300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00231400
.ZG24C             ANOP  ,                                              00231500
.*----------------------------------------------------------------***   00231600
.***AG.KMEKY02 NAME, OPT OUTPUT, ME KEYS -XVARIABLE                     00231700
                   AIF   (K'&PRTOKEN64 LE 0).ZG25D  NO ME KEY           00231800
                   AIF   (N'&PRTOKEN64 LE 1).ZG25A  CK NUM              00231900
&ZMS               SETC  '"PRTOKEN64='                                  00232000
&ZMS               SETC  '&ZMS.&PRTOKEN64"'                             00232100
&ZMS               SETC  '&ZMS "PRTOKEN64"'                             00232200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00232300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00232400
.ZG25A             AIF   (K'&XDUMMY1 LE 0).ZG25B                        00232500
&ZMS               SETC  '"PRTOKEN64'                                   00232600
&ZMS               SETC  '&ZMS.=&PRTOKEN64"'                            00232700
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00232800
&ZMS               SETC  '&ZMS "&XDUMMY1"'                              00232900
                   MNOTE 8,' &ZMS KEY.'                                 00233000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00233100
                   AGO   .ZG25D                                         00233200
.*                                                                      00233300
.ZG25B             ANOP  ,                                              00233400
&ZXDUMMY1          SETC  'OUTPUT'    SET IN/OUTPUT                      00233500
&XDUMMY1           SETC  'PRTOKEN64'            SET XVARIABLE           00233600
&ZXPRTOKEN64       SETC  'OUTPUT'    SET IN/OUTPUT                      00233700
&XPRTOKEN64        SETC  '&PRTOKEN64(1)'        SET XVARIABLE PARM      00233800
                   AIF   (N'&PRTOKEN64 GT 1).ZG25C                      00233900
&XPRTOKEN64        SETC  '&PRTOKEN64'           SET XVARIABLE PARM      00234000
.ZG25C             AIF   (K'&XPRTOKEN64 GT 0).ZG25D  ONE PARM           00234100
&ZXDUMMY1          SETC  ''          RESET IN/OUTPUT                    00234200
&ZXPRTOKEN64       SETC  ''          RESET IN/OUTPUT                    00234300
&ZMS               SETC  ' '                                            00234400
&ZMS               SETC  '&ZMS "PRTOKEN64" KEY AND ITS'                 00234500
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00234600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00234700
.ZG25D             ANOP  ,                                              00234800
.*------------------------------------------------------------------    00234900
.***AG.KMEKY08 NAME, OPT OUTPUT, ME KEYS -CHECK IF KEY ENTERED          00235000
                   AIF   (K'&XDUMMY1 GT 0).ZG26B                        00235100
&ZXDUMMY1          SETC  ''          RESET IN/OUTPUT                    00235200
&XDUMMY1           SETC  'PRTOKEN'   SET DEFAULT                        00235300
.ZG26B             ANOP  ,                                              00235400
.*-------------------------------------------------------------------   00235500
.***AG.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00235600
                   AIF   (K'&ZXPRTOKEN64 LE 0).ZG26R  NOT I/O           00235700
                   AIF   ('&XPRTOKEN64'(1,1) NE '(').ZG26R              00235800
&ZCGPR             SETC  '&XPRTOKEN64'(2,K'&XPRTOKEN64-2)               00235900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG26P                   00236000
                   AIF   (K'&ZCGPR GT 2).ZG26Q                          00236100
                   AIF   ('&ZCGPR' EQ '0').ZG26Q                        00236200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00236300
                   AIF   (T'&ZCGPR NE 'N').ZG26Q  INVALID REG NAME      00236400
.ZG26P             ANOP  ,                                              00236500
                   AIF   (T'&ZCGPR NE 'N').ZG26R  NON NUMERIC           00236600
                   AIF   ('&ZCGPR' LT '2').ZG26Q                        00236700
                   AIF   ('&ZCGPR' LE '12').ZG26R                       00236800
.ZG26Q             ANOP  ,                                              00236900
&ZMS               SETC  '"PRTOKEN64='                                  00237000
&ZMS               SETC  '&ZMS.&PRTOKEN64"'                             00237100
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00237200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00237300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00237400
.ZG26R             ANOP  ,                                              00237500
.*-------------------------------------------------------------------   00237600
.***AG.KMEKY13 NAME, OPT OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00237700
.ZG24ZY  AIF    ('&XDUMMY1' NE 'PRTOKEN').ZG25ZY                        00237800
.*-------------------------------------------------------------------   00237900
.***AG.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00238000
                   AIF   (K'&ZXPRTOKEN LE 0).ZG24R  NOT I/O             00238100
                   AIF   ('&XPRTOKEN'(1,1) NE '(').ZG24R                00238200
&ZCGPR             SETC  '&XPRTOKEN'(2,K'&XPRTOKEN-2)                   00238300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG24P                   00238400
                   AIF   (K'&ZCGPR GT 2).ZG24Q                          00238500
                   AIF   ('&ZCGPR' EQ '0').ZG24Q                        00238600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00238700
                   AIF   (T'&ZCGPR NE 'N').ZG24Q  INVALID REG NAME      00238800
.ZG24P             ANOP  ,                                              00238900
                   AIF   (T'&ZCGPR NE 'N').ZG24R  NON NUMERIC           00239000
                   AIF   ('&ZCGPR' LT '2').ZG24Q                        00239100
                   AIF   ('&ZCGPR' LE '12').ZG24R                       00239200
.ZG24Q             ANOP  ,                                              00239300
&ZMS               SETC  '"PRTOKEN='                                    00239400
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               00239500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00239600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00239700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00239800
.ZG24R             ANOP  ,                                              00239900
.*-------------------------------------------------------------------   00240000
.***AG.KMEKY13 NAME, OPT OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00240100
.ZG25ZY  AIF    ('&XDUMMY1' NE 'PRTOKEN64').ZG26ZY                      00240200
.*-------------------------------------------------------------------   00240300
.***AG.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00240400
                   AIF   (K'&ZXPRTOKEN64 LE 0).ZG25R  NOT I/O           00240500
                   AIF   ('&XPRTOKEN64'(1,1) NE '(').ZG25R              00240600
&ZCGPR             SETC  '&XPRTOKEN64'(2,K'&XPRTOKEN64-2)               00240700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG25P                   00240800
                   AIF   (K'&ZCGPR GT 2).ZG25Q                          00240900
                   AIF   ('&ZCGPR' EQ '0').ZG25Q                        00241000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00241100
                   AIF   (T'&ZCGPR NE 'N').ZG25Q  INVALID REG NAME      00241200
.ZG25P             ANOP  ,                                              00241300
                   AIF   (T'&ZCGPR NE 'N').ZG25R  NON NUMERIC           00241400
                   AIF   ('&ZCGPR' LT '2').ZG25Q                        00241500
                   AIF   ('&ZCGPR' LE '12').ZG25R                       00241600
.ZG25Q             ANOP  ,                                              00241700
&ZMS               SETC  '"PRTOKEN64='                                  00241800
&ZMS               SETC  '&ZMS.&PRTOKEN64"'                             00241900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00242000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00242100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00242200
.ZG25R             ANOP  ,                                              00242300
.*-------------------------------------------------------------------   00242400
.***AG.KMEKY15 NAME, OPT OUTPUT, ME KEYS -END                           00242500
.ZG26ZY            ANOP ,            END MUTUALLY EXCLUSIVE KEYS        00242600
.*------------------------------------------------------------------    00242700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00242800
&XUNAUTHSERV       SETC  ''          INITIALIZE XVARIABLE               00242900
.*-------------------------------------------------------------------   00243000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00243100
.ZG29              ANOP  ,                                              00243200
                   AIF   (K'&UNAUTHSERV(1) LE 0).ZG29A                  00243300
&ZTLC              SETC 'BASE'                                          00243400
                   AIF   ('&UNAUTHSERV(1)' NE '&ZTLC').ZG30             00243500
&XUNAUTHSERV       SETC  'BASE'      SET KEYWORD                        00243600
                   AIF   (N'&UNAUTHSERV LE 1).ZG29A  CK NUM             00243700
&ZMS               SETC  '"UNAUTHSERV='                                 00243800
&ZMS               SETC  '&ZMS.&UNAUTHSERV"'                            00243900
&ZMS               SETC  '&ZMS "UNAUTHSERV"'                            00244000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00244100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00244200
.ZG29A             ANOP  ,                                              00244300
.*-------------------------------------------------------------------   00244400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00244500
.ZG30              ANOP  ,                                              00244600
&ZTLC              SETC 'LEVEL1'                                        00244700
                   AIF   ('&UNAUTHSERV(1)' NE '&ZTLC').ZG31             00244800
&XUNAUTHSERV       SETC  'LEVEL1'    SET KEYWORD                        00244900
                   AIF   (N'&UNAUTHSERV LE 1).ZG30A  CK NUM             00245000
&ZMS               SETC  '"UNAUTHSERV='                                 00245100
&ZMS               SETC  '&ZMS.&UNAUTHSERV"'                            00245200
&ZMS               SETC  '&ZMS "UNAUTHSERV"'                            00245300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00245400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00245500
.ZG30A             ANOP  ,                                              00245600
.*------------------------------------------------------------------    00245700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00245800
.ZG31              ANOP  ,                                              00245900
&ZXUNAUTHSERV      SETC  'INPUT'     SET IN/OUTPUT                      00246000
                   AIF   (K'&XUNAUTHSERV GT 0).ZG31E  VALID ARG         00246100
                   AIF   (T'&UNAUTHSERV EQ 'O').ZG31D  OMITTED          00246200
&ZASYSLNDX         SETA  0                                              00246300
.ZG31A             ANOP  ,           POSITIONAL MACRO KEY               00246400
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00246500
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG31C               00246600
&ZTLC              SETC 'UNAUTHSERV'                                    00246700
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG31A      00246800
.ZG31B             ANOP  ,                                              00246900
&ZXUNAUTHSERV      SETC  ''          RESET IN/OUTPUT                    00247000
&ZMS               SETC  'THE "UNAUTHSERV" KEY'                         00247100
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00247200
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00247300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00247400
                   AGO   .ZG31E                                         00247500
.ZG31C             ANOP  ,                                              00247600
&ZXUNAUTHSERV      SETC  ''          RESET IN/OUTPUT                    00247700
&ZMS               SETC  '"UNAUTHSERV='                                 00247800
&ZMS               SETC  '&ZMS.&UNAUTHSERV"'                            00247900
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00248000
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00248100
&ZMS               SETC  '&ZMS "BASE"'                                  00248200
&ZMS               SETC  '&ZMS OR "LEVEL1".'                            00248300
                   MNOTE 8,' &ZMS '                                     00248400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00248500
                   AGO   .ZG31E                                         00248600
.ZG31D             ANOP  ,                                              00248700
&XUNAUTHSERV       SETC  'BASE'      SET DEFAULT KEYWORD                00248800
.ZG31E             ANOP  ,                                              00248900
.*-------------------------------------------------------------------   00249000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00249100
.ZG32              ANOP  ,                                              00249200
&ZTLC              SETC 'DEREGISTER'                                    00249300
                   AIF   ('&REQUEST(1)' NE '&ZTLC').ZG54                00249400
&XREQUEST          SETC  'DEREGISTER'           SET KEYWORD             00249500
                   AIF   (N'&REQUEST LE 1).ZG32A  CK NUM                00249600
&ZMS               SETC  '"REQUEST='                                    00249700
&ZMS               SETC  '&ZMS.&REQUEST"'                               00249800
&ZMS               SETC  '&ZMS "REQUEST"'                               00249900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00250000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00250100
.ZG32A             ANOP  ,                                              00250200
.*------------------------------------------------------------------    00250300
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00250400
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00250500
.ZG32A0            AIF   (K'&DOMAIN LE 0).ZG32A1  OK                    00250600
&ZCVAL             SETC '&ZCVAL DOMAIN'         INCORRECT KEY USED      00250700
.ZG32A1            AIF   (K'&SCOPE LE 0).ZG32A2  OK                     00250800
&ZCVAL             SETC '&ZCVAL SCOPE'          INCORRECT KEY USED      00250900
.ZG32A2            AIF   (K'&UNAUTHSERV LE 0).ZG32A3  OK                00251000
&ZCVAL             SETC '&ZCVAL UNAUTHSERV'     INCORRECT KEY USED      00251100
.ZG32A3            AIF   (K'&BEGTIME LE 0).ZG32A4  OK                   00251200
&ZCVAL             SETC '&ZCVAL BEGTIME'        INCORRECT KEY USED      00251300
.ZG32A4            AIF   (K'&BEGTIME64 LE 0).ZG32A5  OK                 00251400
&ZCVAL             SETC '&ZCVAL BEGTIME64'      INCORRECT KEY USED      00251500
.ZG32A5            AIF   (K'&DATA LE 0).ZG32A6  OK                      00251600
&ZCVAL             SETC '&ZCVAL DATA'           INCORRECT KEY USED      00251700
.ZG32A6            AIF   (K'&DATA64 LE 0).ZG32A7  OK                    00251800
&ZCVAL             SETC '&ZCVAL DATA64'         INCORRECT KEY USED      00251900
.ZG32A7            AIF   (K'&FORMAT LE 0).ZG32A8  OK                    00252000
&ZCVAL             SETC '&ZCVAL FORMAT'         INCORRECT KEY USED      00252100
.ZG32A8            AIF   (K'&CURRENTDATA LE 0).ZG32A9  OK               00252200
&ZCVAL             SETC '&ZCVAL CURRENTDATA'    INCORRECT KEY USED      00252300
.ZG32A9            AIF   (K'&CURRENTDATA64 LE 0).ZG32A10  OK            00252400
&ZCVAL             SETC '&ZCVAL CURRENTDATA64'  INCORRECT KEY USED      00252500
.ZG32A10           AIF   (K'&ZCVAL LE 0).ZG32A11  OK                    00252600
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00252700
&ZMS               SETC  '"REQUEST'                                     00252800
&ZMS               SETC  '&ZMS.=&REQUEST"'                              00252900
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00253000
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00253100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00253200
.ZG32A11           ANOP  ,                                              00253300
.*----------------------------------------------------------------***   00253400
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00253500
&XDEREGPRODNAME    SETC  ''          INITIALIZE XVARIABLE               00253600
                   AIF   (K'&PRODOWNER LE 0).ZG34C                      00253700
&ZXDEREGPRODNAME   SETC  'INPUT'     SET IN/OUTPUT                      00253800
&XDEREGPRODNAME    SETC  'PRODOWNER'            SET XVARIABLE           00253900
&ZXPRODOWNER       SETC  'INPUT'     SET IN/OUTPUT                      00254000
&XPRODOWNER        SETC  '&PRODOWNER(1)'        SET XVARIABLE PARM      00254100
                   AIF   (N'&PRODOWNER GT 1).ZG34A                      00254200
&XPRODOWNER        SETC  '&PRODOWNER'           SET XVARIABLE PARM      00254300
.ZG34A             AIF   (N'&PRODOWNER LE 1).ZG34B  CK NUM              00254400
&ZMS               SETC  '"PRODOWNER='                                  00254500
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             00254600
&ZMS               SETC  '&ZMS "PRODOWNER"'                             00254700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00254800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00254900
.ZG34B             AIF   (K'&XPRODOWNER GT 0).ZG34C  ONE PARM           00255000
&ZXDEREGPRODNAME   SETC  ''          RESET IN/OUTPUT                    00255100
&ZXPRODOWNER       SETC  ''          RESET IN/OUTPUT                    00255200
&ZMS               SETC  ' '                                            00255300
&ZMS               SETC  '&ZMS "PRODOWNER" KEY AND ITS'                 00255400
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00255500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00255600
.ZG34C             ANOP  ,                                              00255700
.*----------------------------------------------------------------***   00255800
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00255900
                   AIF   (K'&PRTOKEN LE 0).ZG43D  NO ME KEY             00256000
                   AIF   (N'&PRTOKEN LE 1).ZG43A  CK NUM                00256100
&ZMS               SETC  '"PRTOKEN='                                    00256200
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               00256300
&ZMS               SETC  '&ZMS "PRTOKEN"'                               00256400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00256500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00256600
.ZG43A             AIF   (K'&XDEREGPRODNAME LE 0).ZG43B                 00256700
&ZMS               SETC  '"PRTOKEN'                                     00256800
&ZMS               SETC  '&ZMS.=&PRTOKEN"'                              00256900
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00257000
&ZMS               SETC  '&ZMS "&XDEREGPRODNAME"'                       00257100
                   MNOTE 8,' &ZMS KEY.'                                 00257200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00257300
                   AGO   .ZG43D                                         00257400
.*                                                                      00257500
.ZG43B             ANOP  ,                                              00257600
&ZXDEREGPRODNAME   SETC  'INPUT'     SET IN/OUTPUT                      00257700
&XDEREGPRODNAME    SETC  'PRTOKEN'   SET XVARIABLE                      00257800
&ZXPRTOKEN         SETC  'INPUT'     SET IN/OUTPUT                      00257900
&XPRTOKEN          SETC  '&PRTOKEN(1)'          SET XVARIABLE PARM      00258000
                   AIF   (N'&PRTOKEN GT 1).ZG43C                        00258100
&XPRTOKEN          SETC  '&PRTOKEN'  SET XVARIABLE PARM                 00258200
.ZG43C             AIF   (K'&XPRTOKEN GT 0).ZG43D  ONE PARM             00258300
&ZXDEREGPRODNAME   SETC  ''          RESET IN/OUTPUT                    00258400
&ZXPRTOKEN         SETC  ''          RESET IN/OUTPUT                    00258500
&ZMS               SETC  ' '                                            00258600
&ZMS               SETC  '&ZMS "PRTOKEN" KEY AND ITS'                   00258700
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00258800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00258900
.ZG43D             ANOP  ,                                              00259000
.*----------------------------------------------------------------***   00259100
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00259200
                   AIF   (K'&PRTOKEN64 LE 0).ZG44D  NO ME KEY           00259300
                   AIF   (N'&PRTOKEN64 LE 1).ZG44A  CK NUM              00259400
&ZMS               SETC  '"PRTOKEN64='                                  00259500
&ZMS               SETC  '&ZMS.&PRTOKEN64"'                             00259600
&ZMS               SETC  '&ZMS "PRTOKEN64"'                             00259700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00259800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00259900
.ZG44A             AIF   (K'&XDEREGPRODNAME LE 0).ZG44B                 00260000
&ZMS               SETC  '"PRTOKEN64'                                   00260100
&ZMS               SETC  '&ZMS.=&PRTOKEN64"'                            00260200
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00260300
&ZMS               SETC  '&ZMS "&XDEREGPRODNAME"'                       00260400
                   MNOTE 8,' &ZMS KEY.'                                 00260500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00260600
                   AGO   .ZG44D                                         00260700
.*                                                                      00260800
.ZG44B             ANOP  ,                                              00260900
&ZXDEREGPRODNAME   SETC  'INPUT'     SET IN/OUTPUT                      00261000
&XDEREGPRODNAME    SETC  'PRTOKEN64'            SET XVARIABLE           00261100
&ZXPRTOKEN64       SETC  'INPUT'     SET IN/OUTPUT                      00261200
&XPRTOKEN64        SETC  '&PRTOKEN64(1)'        SET XVARIABLE PARM      00261300
                   AIF   (N'&PRTOKEN64 GT 1).ZG44C                      00261400
&XPRTOKEN64        SETC  '&PRTOKEN64'           SET XVARIABLE PARM      00261500
.ZG44C             AIF   (K'&XPRTOKEN64 GT 0).ZG44D  ONE PARM           00261600
&ZXDEREGPRODNAME   SETC  ''          RESET IN/OUTPUT                    00261700
&ZXPRTOKEN64       SETC  ''          RESET IN/OUTPUT                    00261800
&ZMS               SETC  ' '                                            00261900
&ZMS               SETC  '&ZMS "PRTOKEN64" KEY AND ITS'                 00262000
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00262100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00262200
.ZG44D             ANOP  ,                                              00262300
.*------------------------------------------------------------------    00262400
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00262500
                   AIF   (K'&XDEREGPRODNAME GT 0).ZG45B                 00262600
&ZXDEREGPRODNAME   SETC  ''          RESET IN/OUTPUT                    00262700
&ZXPRODOWNER       SETC  ''          RESET IN/OUTPUT                    00262800
&XDEREGPRODNAME    SETC  ''          ENSURE NULL                        00262900
&XPRODOWNER        SETC  ''          ENSURE NULL                        00263000
&ZMS               SETC  'ONE OF THE FOLLOWING'                         00263100
&ZMS               SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'            00263200
&ZMS               SETC  '&ZMS REQUIRED:'                               00263300
&ZMS               SETC  '&ZMS "PRODOWNER",'    VALID ME KEY            00263400
&ZMS               SETC  '&ZMS "PRTOKEN",'      VALID ME KEY            00263500
&ZMS               SETC  '&ZMS OR "PRTOKEN64".'  VALID ME KEY           00263600
                   MNOTE 8,' &ZMS '                                     00263700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00263800
.ZG45B             ANOP  ,                                              00263900
.*-------------------------------------------------------------------   00264000
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00264100
.ZG34ZY  AIF    ('&XDEREGPRODNAME' NE 'PRODOWNER').ZG43ZY               00264200
.*-------------------------------------------------------------------   00264300
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00264400
                   AIF   (K'&ZXPRODOWNER LE 0).ZG34R  NOT I/O           00264500
                   AIF   ('&XPRODOWNER'(1,1) NE '(').ZG34R              00264600
&ZCGPR             SETC  '&XPRODOWNER'(2,K'&XPRODOWNER-2)               00264700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG34P                   00264800
                   AIF   (K'&ZCGPR GT 2).ZG34Q                          00264900
                   AIF   ('&ZCGPR' EQ '0').ZG34Q                        00265000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00265100
                   AIF   (T'&ZCGPR NE 'N').ZG34Q  INVALID REG NAME      00265200
.ZG34P             ANOP  ,                                              00265300
                   AIF   (T'&ZCGPR NE 'N').ZG34R  NON NUMERIC           00265400
                   AIF   ('&ZCGPR' LT '2').ZG34Q                        00265500
                   AIF   ('&ZCGPR' LE '12').ZG34R                       00265600
.ZG34Q             ANOP  ,                                              00265700
&ZMS               SETC  '"PRODOWNER='                                  00265800
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             00265900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00266000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00266100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00266200
.ZG34R             ANOP  ,                                              00266300
.*----------------------------------------------------------------***   00266400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00266500
                   AIF   (N'&PRODNAME LE 1).ZG36A  CK NUM               00266600
&ZMS               SETC  '"PRODNAME='                                   00266700
&ZMS               SETC  '&ZMS.&PRODNAME"'                              00266800
&ZMS               SETC  '&ZMS "PRODNAME"'                              00266900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00267000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00267100
.ZG36A             ANOP  ,                                              00267200
.*-------------------------------------------------------------------   00267300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00267400
&ZXPRODNAME        SETC  'INPUT'     SET IN/OUTPUT                      00267500
&XPRODNAME         SETC  '&PRODNAME(1)'         SET XVARIABLE           00267600
                   AIF   (N'&PRODNAME GT 1).ZG36B  MULTI                00267700
&XPRODNAME         SETC  '&PRODNAME'            SET XVARIABLE           00267800
.ZG36B             AIF   (K'&PRODNAME(1) GT 0).ZG36C                    00267900
&ZXPRODNAME        SETC  ''          RESET IN/OUTPUT                    00268000
&ZMS               SETC  ' '                                            00268100
&ZMS               SETC  '&ZMS "PRODNAME" KEY AND ITS'                  00268200
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00268300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00268400
.ZG36C             ANOP  ,                                              00268500
.*-------------------------------------------------------------------   00268600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00268700
                   AIF   (K'&ZXPRODNAME LE 0).ZG36R  NOT I/O            00268800
                   AIF   ('&XPRODNAME'(1,1) NE '(').ZG36R               00268900
&ZCGPR             SETC  '&XPRODNAME'(2,K'&XPRODNAME-2)                 00269000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG36P                   00269100
                   AIF   (K'&ZCGPR GT 2).ZG36Q                          00269200
                   AIF   ('&ZCGPR' EQ '0').ZG36Q                        00269300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00269400
                   AIF   (T'&ZCGPR NE 'N').ZG36Q  INVALID REG NAME      00269500
.ZG36P             ANOP  ,                                              00269600
                   AIF   (T'&ZCGPR NE 'N').ZG36R  NON NUMERIC           00269700
                   AIF   ('&ZCGPR' LT '2').ZG36Q                        00269800
                   AIF   ('&ZCGPR' LE '12').ZG36R                       00269900
.ZG36Q             ANOP  ,                                              00270000
&ZMS               SETC  '"PRODNAME='                                   00270100
&ZMS               SETC  '&ZMS.&PRODNAME"'                              00270200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00270300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00270400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00270500
.ZG36R             ANOP  ,                                              00270600
.*----------------------------------------------------------------***   00270700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00270800
                   AIF   (N'&PRODVERS LE 1).ZG39A  CK NUM               00270900
&ZMS               SETC  '"PRODVERS='                                   00271000
&ZMS               SETC  '&ZMS.&PRODVERS"'                              00271100
&ZMS               SETC  '&ZMS "PRODVERS"'                              00271200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00271300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00271400
.ZG39A             ANOP  ,                                              00271500
.*-------------------------------------------------------------------   00271600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00271700
&ZXPRODVERS        SETC  'INPUT'     SET IN/OUTPUT                      00271800
&XPRODVERS         SETC  'NONE'                                         00271900
                   AIF   (K'&PRODVERS(1) LE 0).ZG39B  PARM              00272000
&XPRODVERS         SETC  '&PRODVERS(1)'         SET XVARIABLE           00272100
                   AIF   (N'&PRODVERS GT 1).ZG39B  MULTI                00272200
&XPRODVERS         SETC  '&PRODVERS'            SET XVARIABLE           00272300
.ZG39B             ANOP  ,                                              00272400
.*-------------------------------------------------------------------   00272500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00272600
                   AIF   (K'&ZXPRODVERS LE 0).ZG39R  NOT I/O            00272700
                   AIF   ('&XPRODVERS'(1,1) NE '(').ZG39R               00272800
&ZCGPR             SETC  '&XPRODVERS'(2,K'&XPRODVERS-2)                 00272900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG39P                   00273000
                   AIF   (K'&ZCGPR GT 2).ZG39Q                          00273100
                   AIF   ('&ZCGPR' EQ '0').ZG39Q                        00273200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00273300
                   AIF   (T'&ZCGPR NE 'N').ZG39Q  INVALID REG NAME      00273400
.ZG39P             ANOP  ,                                              00273500
                   AIF   (T'&ZCGPR NE 'N').ZG39R  NON NUMERIC           00273600
                   AIF   ('&ZCGPR' LT '2').ZG39Q                        00273700
                   AIF   ('&ZCGPR' LE '12').ZG39R                       00273800
.ZG39Q             ANOP  ,                                              00273900
&ZMS               SETC  '"PRODVERS='                                   00274000
&ZMS               SETC  '&ZMS.&PRODVERS"'                              00274100
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00274200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00274300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00274400
.ZG39R             ANOP  ,                                              00274500
.*----------------------------------------------------------------***   00274600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00274700
                   AIF   (N'&PRODQUAL LE 1).ZG40A  CK NUM               00274800
&ZMS               SETC  '"PRODQUAL='                                   00274900
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              00275000
&ZMS               SETC  '&ZMS "PRODQUAL"'                              00275100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00275200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00275300
.ZG40A             ANOP  ,                                              00275400
.*-------------------------------------------------------------------   00275500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00275600
&ZXPRODQUAL        SETC  'INPUT'     SET IN/OUTPUT                      00275700
&XPRODQUAL         SETC  'NONE'                                         00275800
                   AIF   (K'&PRODQUAL(1) LE 0).ZG40B  PARM              00275900
&XPRODQUAL         SETC  '&PRODQUAL(1)'         SET XVARIABLE           00276000
                   AIF   (N'&PRODQUAL GT 1).ZG40B  MULTI                00276100
&XPRODQUAL         SETC  '&PRODQUAL'            SET XVARIABLE           00276200
.ZG40B             ANOP  ,                                              00276300
.*-------------------------------------------------------------------   00276400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00276500
                   AIF   (K'&ZXPRODQUAL LE 0).ZG40R  NOT I/O            00276600
                   AIF   ('&XPRODQUAL'(1,1) NE '(').ZG40R               00276700
&ZCGPR             SETC  '&XPRODQUAL'(2,K'&XPRODQUAL-2)                 00276800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG40P                   00276900
                   AIF   (K'&ZCGPR GT 2).ZG40Q                          00277000
                   AIF   ('&ZCGPR' EQ '0').ZG40Q                        00277100
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00277200
                   AIF   (T'&ZCGPR NE 'N').ZG40Q  INVALID REG NAME      00277300
.ZG40P             ANOP  ,                                              00277400
                   AIF   (T'&ZCGPR NE 'N').ZG40R  NON NUMERIC           00277500
                   AIF   ('&ZCGPR' LT '2').ZG40Q                        00277600
                   AIF   ('&ZCGPR' LE '12').ZG40R                       00277700
.ZG40Q             ANOP  ,                                              00277800
&ZMS               SETC  '"PRODQUAL='                                   00277900
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              00278000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00278100
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00278200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00278300
.ZG40R             ANOP  ,                                              00278400
.*----------------------------------------------------------------***   00278500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00278600
                   AIF   (N'&PRODID LE 1).ZG41A  CK NUM                 00278700
&ZMS               SETC  '"PRODID='                                     00278800
&ZMS               SETC  '&ZMS.&PRODID"'                                00278900
&ZMS               SETC  '&ZMS "PRODID"'                                00279000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00279100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00279200
.ZG41A             ANOP  ,                                              00279300
.*-------------------------------------------------------------------   00279400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00279500
&ZXPRODID          SETC  'INPUT'     SET IN/OUTPUT                      00279600
&XPRODID           SETC  'NONE'                                         00279700
                   AIF   (K'&PRODID(1) LE 0).ZG41B  PARM                00279800
&XPRODID           SETC  '&PRODID(1)'           SET XVARIABLE           00279900
                   AIF   (N'&PRODID GT 1).ZG41B  MULTI                  00280000
&XPRODID           SETC  '&PRODID'   SET XVARIABLE                      00280100
.ZG41B             ANOP  ,                                              00280200
.*-------------------------------------------------------------------   00280300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00280400
                   AIF   (K'&ZXPRODID LE 0).ZG41R  NOT I/O              00280500
                   AIF   ('&XPRODID'(1,1) NE '(').ZG41R                 00280600
&ZCGPR             SETC  '&XPRODID'(2,K'&XPRODID-2)                     00280700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG41P                   00280800
                   AIF   (K'&ZCGPR GT 2).ZG41Q                          00280900
                   AIF   ('&ZCGPR' EQ '0').ZG41Q                        00281000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00281100
                   AIF   (T'&ZCGPR NE 'N').ZG41Q  INVALID REG NAME      00281200
.ZG41P             ANOP  ,                                              00281300
                   AIF   (T'&ZCGPR NE 'N').ZG41R  NON NUMERIC           00281400
                   AIF   ('&ZCGPR' LT '2').ZG41Q                        00281500
                   AIF   ('&ZCGPR' LE '12').ZG41R                       00281600
.ZG41Q             ANOP  ,                                              00281700
&ZMS               SETC  '"PRODID='                                     00281800
&ZMS               SETC  '&ZMS.&PRODID"'                                00281900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00282000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00282100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00282200
.ZG41R             ANOP  ,                                              00282300
.*-------------------------------------------------------------------   00282400
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00282500
.ZG43ZY  AIF    ('&XDEREGPRODNAME' NE 'PRTOKEN').ZG44ZY                 00282600
.*-------------------------------------------------------------------   00282700
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                00282800
&ZCVAL             SETC ''           ERROR KEY FIELD                    00282900
.ZG43I0            AIF   (K'&PRODNAME LE 0).ZG43I1                      00283000
&ZCVAL             SETC '&ZCVAL PRODNAME'       DISALLOWED KEY          00283100
.ZG43I1            AIF   (K'&PRODVERS LE 0).ZG43I2                      00283200
&ZCVAL             SETC '&ZCVAL PRODVERS'       DISALLOWED KEY          00283300
.ZG43I2            AIF   (K'&PRODQUAL LE 0).ZG43I3                      00283400
&ZCVAL             SETC '&ZCVAL PRODQUAL'       DISALLOWED KEY          00283500
.ZG43I3            AIF   (K'&PRODID LE 0).ZG43I4                        00283600
&ZCVAL             SETC '&ZCVAL PRODID'         DISALLOWED KEY          00283700
.ZG43I4            AIF   (K'&ZCVAL LE 0).ZG43J  KEY                     00283800
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00283900
&ZMS               SETC  '"PRTOKEN'                                     00284000
&ZMS               SETC  '&ZMS.=&PRTOKEN"'                              00284100
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00284200
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00284300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00284400
.ZG43J             ANOP  ,                                              00284500
.*-------------------------------------------------------------------   00284600
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00284700
                   AIF   (K'&ZXPRTOKEN LE 0).ZG43R  NOT I/O             00284800
                   AIF   ('&XPRTOKEN'(1,1) NE '(').ZG43R                00284900
&ZCGPR             SETC  '&XPRTOKEN'(2,K'&XPRTOKEN-2)                   00285000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG43P                   00285100
                   AIF   (K'&ZCGPR GT 2).ZG43Q                          00285200
                   AIF   ('&ZCGPR' EQ '0').ZG43Q                        00285300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00285400
                   AIF   (T'&ZCGPR NE 'N').ZG43Q  INVALID REG NAME      00285500
.ZG43P             ANOP  ,                                              00285600
                   AIF   (T'&ZCGPR NE 'N').ZG43R  NON NUMERIC           00285700
                   AIF   ('&ZCGPR' LT '2').ZG43Q                        00285800
                   AIF   ('&ZCGPR' LE '12').ZG43R                       00285900
.ZG43Q             ANOP  ,                                              00286000
&ZMS               SETC  '"PRTOKEN='                                    00286100
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               00286200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00286300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00286400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00286500
.ZG43R             ANOP  ,                                              00286600
.*-------------------------------------------------------------------   00286700
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00286800
.ZG44ZY  AIF    ('&XDEREGPRODNAME' NE 'PRTOKEN64').ZG45ZY               00286900
.*-------------------------------------------------------------------   00287000
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                00287100
&ZCVAL             SETC ''           ERROR KEY FIELD                    00287200
.ZG44I0            AIF   (K'&PRODNAME LE 0).ZG44I1                      00287300
&ZCVAL             SETC '&ZCVAL PRODNAME'       DISALLOWED KEY          00287400
.ZG44I1            AIF   (K'&PRODVERS LE 0).ZG44I2                      00287500
&ZCVAL             SETC '&ZCVAL PRODVERS'       DISALLOWED KEY          00287600
.ZG44I2            AIF   (K'&PRODQUAL LE 0).ZG44I3                      00287700
&ZCVAL             SETC '&ZCVAL PRODQUAL'       DISALLOWED KEY          00287800
.ZG44I3            AIF   (K'&PRODID LE 0).ZG44I4                        00287900
&ZCVAL             SETC '&ZCVAL PRODID'         DISALLOWED KEY          00288000
.ZG44I4            AIF   (K'&ZCVAL LE 0).ZG44J  KEY                     00288100
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00288200
&ZMS               SETC  '"PRTOKEN64'                                   00288300
&ZMS               SETC  '&ZMS.=&PRTOKEN64"'                            00288400
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00288500
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00288600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00288700
.ZG44J             ANOP  ,                                              00288800
.*-------------------------------------------------------------------   00288900
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00289000
                   AIF   (K'&ZXPRTOKEN64 LE 0).ZG44R  NOT I/O           00289100
                   AIF   ('&XPRTOKEN64'(1,1) NE '(').ZG44R              00289200
&ZCGPR             SETC  '&XPRTOKEN64'(2,K'&XPRTOKEN64-2)               00289300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG44P                   00289400
                   AIF   (K'&ZCGPR GT 2).ZG44Q                          00289500
                   AIF   ('&ZCGPR' EQ '0').ZG44Q                        00289600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00289700
                   AIF   (T'&ZCGPR NE 'N').ZG44Q  INVALID REG NAME      00289800
.ZG44P             ANOP  ,                                              00289900
                   AIF   (T'&ZCGPR NE 'N').ZG44R  NON NUMERIC           00290000
                   AIF   ('&ZCGPR' LT '2').ZG44Q                        00290100
                   AIF   ('&ZCGPR' LE '12').ZG44R                       00290200
.ZG44Q             ANOP  ,                                              00290300
&ZMS               SETC  '"PRTOKEN64='                                  00290400
&ZMS               SETC  '&ZMS.&PRTOKEN64"'                             00290500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00290600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00290700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00290800
.ZG44R             ANOP  ,                                              00290900
.*-------------------------------------------------------------------   00291000
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00291100
.ZG45ZY            ANOP ,            END MUTUALLY EXCLUSIVE KEYS        00291200
.*----------------------------------------------------------------***   00291300
.***AG.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE                     00291400
&XDEREGENDTIME     SETC  ''          INITIALIZE XVARIABLE               00291500
                   AIF   (K'&ENDTIME LE 0).ZG47C                        00291600
&ZXDEREGENDTIME    SETC  'OUTPUT'    SET IN/OUTPUT                      00291700
&XDEREGENDTIME     SETC  'ENDTIME'   SET XVARIABLE                      00291800
&ZXENDTIME         SETC  'OUTPUT'    SET IN/OUTPUT                      00291900
&XENDTIME          SETC  '&ENDTIME(1)'          SET XVARIABLE PARM      00292000
                   AIF   (N'&ENDTIME GT 1).ZG47A                        00292100
&XENDTIME          SETC  '&ENDTIME'  SET XVARIABLE PARM                 00292200
.ZG47A             AIF   (N'&ENDTIME LE 1).ZG47B  CK NUM                00292300
&ZMS               SETC  '"ENDTIME='                                    00292400
&ZMS               SETC  '&ZMS.&ENDTIME"'                               00292500
&ZMS               SETC  '&ZMS "ENDTIME"'                               00292600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00292700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00292800
.ZG47B             AIF   (K'&XENDTIME GT 0).ZG47C  ONE PARM             00292900
&ZXDEREGENDTIME    SETC  ''          RESET IN/OUTPUT                    00293000
&ZXENDTIME         SETC  ''          RESET IN/OUTPUT                    00293100
&ZMS               SETC  ' '                                            00293200
&ZMS               SETC  '&ZMS "ENDTIME" KEY AND ITS'                   00293300
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00293400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00293500
.ZG47C             ANOP  ,                                              00293600
.*----------------------------------------------------------------***   00293700
.***AG.KMEKY02 NAME, OPT OUTPUT, ME KEYS -XVARIABLE                     00293800
                   AIF   (K'&ENDTIME64 LE 0).ZG48D  NO ME KEY           00293900
                   AIF   (N'&ENDTIME64 LE 1).ZG48A  CK NUM              00294000
&ZMS               SETC  '"ENDTIME64='                                  00294100
&ZMS               SETC  '&ZMS.&ENDTIME64"'                             00294200
&ZMS               SETC  '&ZMS "ENDTIME64"'                             00294300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00294400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00294500
.ZG48A             AIF   (K'&XDEREGENDTIME LE 0).ZG48B                  00294600
&ZMS               SETC  '"ENDTIME64'                                   00294700
&ZMS               SETC  '&ZMS.=&ENDTIME64"'                            00294800
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00294900
&ZMS               SETC  '&ZMS "&XDEREGENDTIME"'                        00295000
                   MNOTE 8,' &ZMS KEY.'                                 00295100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00295200
                   AGO   .ZG48D                                         00295300
.*                                                                      00295400
.ZG48B             ANOP  ,                                              00295500
&ZXDEREGENDTIME    SETC  'OUTPUT'    SET IN/OUTPUT                      00295600
&XDEREGENDTIME     SETC  'ENDTIME64'            SET XVARIABLE           00295700
&ZXENDTIME64       SETC  'OUTPUT'    SET IN/OUTPUT                      00295800
&XENDTIME64        SETC  '&ENDTIME64(1)'        SET XVARIABLE PARM      00295900
                   AIF   (N'&ENDTIME64 GT 1).ZG48C                      00296000
&XENDTIME64        SETC  '&ENDTIME64'           SET XVARIABLE PARM      00296100
.ZG48C             AIF   (K'&XENDTIME64 GT 0).ZG48D  ONE PARM           00296200
&ZXDEREGENDTIME    SETC  ''          RESET IN/OUTPUT                    00296300
&ZXENDTIME64       SETC  ''          RESET IN/OUTPUT                    00296400
&ZMS               SETC  ' '                                            00296500
&ZMS               SETC  '&ZMS "ENDTIME64" KEY AND ITS'                 00296600
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00296700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00296800
.ZG48D             ANOP  ,                                              00296900
.*------------------------------------------------------------------    00297000
.***AG.KMEKY08 NAME, OPT OUTPUT, ME KEYS -CHECK IF KEY ENTERED          00297100
                   AIF   (K'&XDEREGENDTIME GT 0).ZG49B                  00297200
&ZXDEREGENDTIME    SETC  ''          RESET IN/OUTPUT                    00297300
&XDEREGENDTIME     SETC  'ENDTIME'   SET DEFAULT                        00297400
.ZG49B             ANOP  ,                                              00297500
.*-------------------------------------------------------------------   00297600
.***AG.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00297700
                   AIF   (K'&ZXENDTIME64 LE 0).ZG49R  NOT I/O           00297800
                   AIF   ('&XENDTIME64'(1,1) NE '(').ZG49R              00297900
&ZCGPR             SETC  '&XENDTIME64'(2,K'&XENDTIME64-2)               00298000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG49P                   00298100
                   AIF   (K'&ZCGPR GT 2).ZG49Q                          00298200
                   AIF   ('&ZCGPR' EQ '0').ZG49Q                        00298300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00298400
                   AIF   (T'&ZCGPR NE 'N').ZG49Q  INVALID REG NAME      00298500
.ZG49P             ANOP  ,                                              00298600
                   AIF   (T'&ZCGPR NE 'N').ZG49R  NON NUMERIC           00298700
                   AIF   ('&ZCGPR' LT '2').ZG49Q                        00298800
                   AIF   ('&ZCGPR' LE '12').ZG49R                       00298900
.ZG49Q             ANOP  ,                                              00299000
&ZMS               SETC  '"ENDTIME64='                                  00299100
&ZMS               SETC  '&ZMS.&ENDTIME64"'                             00299200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00299300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00299400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00299500
.ZG49R             ANOP  ,                                              00299600
.*-------------------------------------------------------------------   00299700
.***AG.KMEKY13 NAME, OPT OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00299800
.ZG47ZY  AIF    ('&XDEREGENDTIME' NE 'ENDTIME').ZG48ZY                  00299900
.*-------------------------------------------------------------------   00300000
.***AG.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00300100
                   AIF   (K'&ZXENDTIME LE 0).ZG47R  NOT I/O             00300200
                   AIF   ('&XENDTIME'(1,1) NE '(').ZG47R                00300300
&ZCGPR             SETC  '&XENDTIME'(2,K'&XENDTIME-2)                   00300400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG47P                   00300500
                   AIF   (K'&ZCGPR GT 2).ZG47Q                          00300600
                   AIF   ('&ZCGPR' EQ '0').ZG47Q                        00300700
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00300800
                   AIF   (T'&ZCGPR NE 'N').ZG47Q  INVALID REG NAME      00300900
.ZG47P             ANOP  ,                                              00301000
                   AIF   (T'&ZCGPR NE 'N').ZG47R  NON NUMERIC           00301100
                   AIF   ('&ZCGPR' LT '2').ZG47Q                        00301200
                   AIF   ('&ZCGPR' LE '12').ZG47R                       00301300
.ZG47Q             ANOP  ,                                              00301400
&ZMS               SETC  '"ENDTIME='                                    00301500
&ZMS               SETC  '&ZMS.&ENDTIME"'                               00301600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00301700
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00301800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00301900
.ZG47R             ANOP  ,                                              00302000
.*-------------------------------------------------------------------   00302100
.***AG.KMEKY13 NAME, OPT OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00302200
.ZG48ZY  AIF    ('&XDEREGENDTIME' NE 'ENDTIME64').ZG49ZY                00302300
.*-------------------------------------------------------------------   00302400
.***AG.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00302500
                   AIF   (K'&ZXENDTIME64 LE 0).ZG48R  NOT I/O           00302600
                   AIF   ('&XENDTIME64'(1,1) NE '(').ZG48R              00302700
&ZCGPR             SETC  '&XENDTIME64'(2,K'&XENDTIME64-2)               00302800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG48P                   00302900
                   AIF   (K'&ZCGPR GT 2).ZG48Q                          00303000
                   AIF   ('&ZCGPR' EQ '0').ZG48Q                        00303100
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00303200
                   AIF   (T'&ZCGPR NE 'N').ZG48Q  INVALID REG NAME      00303300
.ZG48P             ANOP  ,                                              00303400
                   AIF   (T'&ZCGPR NE 'N').ZG48R  NON NUMERIC           00303500
                   AIF   ('&ZCGPR' LT '2').ZG48Q                        00303600
                   AIF   ('&ZCGPR' LE '12').ZG48R                       00303700
.ZG48Q             ANOP  ,                                              00303800
&ZMS               SETC  '"ENDTIME64='                                  00303900
&ZMS               SETC  '&ZMS.&ENDTIME64"'                             00304000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00304100
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00304200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00304300
.ZG48R             ANOP  ,                                              00304400
.*-------------------------------------------------------------------   00304500
.***AG.KMEKY15 NAME, OPT OUTPUT, ME KEYS -END                           00304600
.ZG49ZY            ANOP ,            END MUTUALLY EXCLUSIVE KEYS        00304700
.*----------------------------------------------------------------***   00304800
.***AG.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE                     00304900
&XDEREGENDDATA     SETC  ''          INITIALIZE XVARIABLE               00305000
                   AIF   (K'&ENDDATA LE 0).ZG51C                        00305100
&ZXDEREGENDDATA    SETC  'OUTPUT'    SET IN/OUTPUT                      00305200
&XDEREGENDDATA     SETC  'ENDDATA'   SET XVARIABLE                      00305300
&ZXENDDATA         SETC  'OUTPUT'    SET IN/OUTPUT                      00305400
&XENDDATA          SETC  '&ENDDATA(1)'          SET XVARIABLE PARM      00305500
                   AIF   (N'&ENDDATA GT 1).ZG51A                        00305600
&XENDDATA          SETC  '&ENDDATA'  SET XVARIABLE PARM                 00305700
.ZG51A             AIF   (N'&ENDDATA LE 1).ZG51B  CK NUM                00305800
&ZMS               SETC  '"ENDDATA='                                    00305900
&ZMS               SETC  '&ZMS.&ENDDATA"'                               00306000
&ZMS               SETC  '&ZMS "ENDDATA"'                               00306100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00306200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00306300
.ZG51B             AIF   (K'&XENDDATA GT 0).ZG51C  ONE PARM             00306400
&ZXDEREGENDDATA    SETC  ''          RESET IN/OUTPUT                    00306500
&ZXENDDATA         SETC  ''          RESET IN/OUTPUT                    00306600
&ZMS               SETC  ' '                                            00306700
&ZMS               SETC  '&ZMS "ENDDATA" KEY AND ITS'                   00306800
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00306900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00307000
.ZG51C             ANOP  ,                                              00307100
.*----------------------------------------------------------------***   00307200
.***AG.KMEKY02 NAME, OPT OUTPUT, ME KEYS -XVARIABLE                     00307300
                   AIF   (K'&ENDDATA64 LE 0).ZG52D  NO ME KEY           00307400
                   AIF   (N'&ENDDATA64 LE 1).ZG52A  CK NUM              00307500
&ZMS               SETC  '"ENDDATA64='                                  00307600
&ZMS               SETC  '&ZMS.&ENDDATA64"'                             00307700
&ZMS               SETC  '&ZMS "ENDDATA64"'                             00307800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00307900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00308000
.ZG52A             AIF   (K'&XDEREGENDDATA LE 0).ZG52B                  00308100
&ZMS               SETC  '"ENDDATA64'                                   00308200
&ZMS               SETC  '&ZMS.=&ENDDATA64"'                            00308300
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00308400
&ZMS               SETC  '&ZMS "&XDEREGENDDATA"'                        00308500
                   MNOTE 8,' &ZMS KEY.'                                 00308600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00308700
                   AGO   .ZG52D                                         00308800
.*                                                                      00308900
.ZG52B             ANOP  ,                                              00309000
&ZXDEREGENDDATA    SETC  'OUTPUT'    SET IN/OUTPUT                      00309100
&XDEREGENDDATA     SETC  'ENDDATA64'            SET XVARIABLE           00309200
&ZXENDDATA64       SETC  'OUTPUT'    SET IN/OUTPUT                      00309300
&XENDDATA64        SETC  '&ENDDATA64(1)'        SET XVARIABLE PARM      00309400
                   AIF   (N'&ENDDATA64 GT 1).ZG52C                      00309500
&XENDDATA64        SETC  '&ENDDATA64'           SET XVARIABLE PARM      00309600
.ZG52C             AIF   (K'&XENDDATA64 GT 0).ZG52D  ONE PARM           00309700
&ZXDEREGENDDATA    SETC  ''          RESET IN/OUTPUT                    00309800
&ZXENDDATA64       SETC  ''          RESET IN/OUTPUT                    00309900
&ZMS               SETC  ' '                                            00310000
&ZMS               SETC  '&ZMS "ENDDATA64" KEY AND ITS'                 00310100
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00310200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00310300
.ZG52D             ANOP  ,                                              00310400
.*------------------------------------------------------------------    00310500
.***AG.KMEKY08 NAME, OPT OUTPUT, ME KEYS -CHECK IF KEY ENTERED          00310600
                   AIF   (K'&XDEREGENDDATA GT 0).ZG53B                  00310700
&ZXDEREGENDDATA    SETC  ''          RESET IN/OUTPUT                    00310800
&XDEREGENDDATA     SETC  'ENDDATA'   SET DEFAULT                        00310900
.ZG53B             ANOP  ,                                              00311000
.*-------------------------------------------------------------------   00311100
.***AG.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00311200
                   AIF   (K'&ZXENDDATA64 LE 0).ZG53R  NOT I/O           00311300
                   AIF   ('&XENDDATA64'(1,1) NE '(').ZG53R              00311400
&ZCGPR             SETC  '&XENDDATA64'(2,K'&XENDDATA64-2)               00311500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG53P                   00311600
                   AIF   (K'&ZCGPR GT 2).ZG53Q                          00311700
                   AIF   ('&ZCGPR' EQ '0').ZG53Q                        00311800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00311900
                   AIF   (T'&ZCGPR NE 'N').ZG53Q  INVALID REG NAME      00312000
.ZG53P             ANOP  ,                                              00312100
                   AIF   (T'&ZCGPR NE 'N').ZG53R  NON NUMERIC           00312200
                   AIF   ('&ZCGPR' LT '2').ZG53Q                        00312300
                   AIF   ('&ZCGPR' LE '12').ZG53R                       00312400
.ZG53Q             ANOP  ,                                              00312500
&ZMS               SETC  '"ENDDATA64='                                  00312600
&ZMS               SETC  '&ZMS.&ENDDATA64"'                             00312700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00312800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00312900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00313000
.ZG53R             ANOP  ,                                              00313100
.*-------------------------------------------------------------------   00313200
.***AG.KMEKY13 NAME, OPT OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00313300
.ZG51ZY  AIF    ('&XDEREGENDDATA' NE 'ENDDATA').ZG52ZY                  00313400
.*-------------------------------------------------------------------   00313500
.***AG.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00313600
                   AIF   (K'&ZXENDDATA LE 0).ZG51R  NOT I/O             00313700
                   AIF   ('&XENDDATA'(1,1) NE '(').ZG51R                00313800
&ZCGPR             SETC  '&XENDDATA'(2,K'&XENDDATA-2)                   00313900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG51P                   00314000
                   AIF   (K'&ZCGPR GT 2).ZG51Q                          00314100
                   AIF   ('&ZCGPR' EQ '0').ZG51Q                        00314200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00314300
                   AIF   (T'&ZCGPR NE 'N').ZG51Q  INVALID REG NAME      00314400
.ZG51P             ANOP  ,                                              00314500
                   AIF   (T'&ZCGPR NE 'N').ZG51R  NON NUMERIC           00314600
                   AIF   ('&ZCGPR' LT '2').ZG51Q                        00314700
                   AIF   ('&ZCGPR' LE '12').ZG51R                       00314800
.ZG51Q             ANOP  ,                                              00314900
&ZMS               SETC  '"ENDDATA='                                    00315000
&ZMS               SETC  '&ZMS.&ENDDATA"'                               00315100
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00315200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00315300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00315400
.ZG51R             ANOP  ,                                              00315500
.*-------------------------------------------------------------------   00315600
.***AG.KMEKY13 NAME, OPT OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00315700
.ZG52ZY  AIF    ('&XDEREGENDDATA' NE 'ENDDATA64').ZG53ZY                00315800
.*-------------------------------------------------------------------   00315900
.***AG.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00316000
                   AIF   (K'&ZXENDDATA64 LE 0).ZG52R  NOT I/O           00316100
                   AIF   ('&XENDDATA64'(1,1) NE '(').ZG52R              00316200
&ZCGPR             SETC  '&XENDDATA64'(2,K'&XENDDATA64-2)               00316300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG52P                   00316400
                   AIF   (K'&ZCGPR GT 2).ZG52Q                          00316500
                   AIF   ('&ZCGPR' EQ '0').ZG52Q                        00316600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00316700
                   AIF   (T'&ZCGPR NE 'N').ZG52Q  INVALID REG NAME      00316800
.ZG52P             ANOP  ,                                              00316900
                   AIF   (T'&ZCGPR NE 'N').ZG52R  NON NUMERIC           00317000
                   AIF   ('&ZCGPR' LT '2').ZG52Q                        00317100
                   AIF   ('&ZCGPR' LE '12').ZG52R                       00317200
.ZG52Q             ANOP  ,                                              00317300
&ZMS               SETC  '"ENDDATA64='                                  00317400
&ZMS               SETC  '&ZMS.&ENDDATA64"'                             00317500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00317600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00317700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00317800
.ZG52R             ANOP  ,                                              00317900
.*-------------------------------------------------------------------   00318000
.***AG.KMEKY15 NAME, OPT OUTPUT, ME KEYS -END                           00318100
.ZG53ZY            ANOP ,            END MUTUALLY EXCLUSIVE KEYS        00318200
.*-------------------------------------------------------------------   00318300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00318400
.ZG54              ANOP  ,                                              00318500
&ZTLC              SETC 'FUNCTIONBEGIN'                                 00318600
                   AIF   ('&REQUEST(1)' NE '&ZTLC').ZG72                00318700
&XREQUEST          SETC  'FUNCTIONBEGIN'        SET KEYWORD             00318800
                   AIF   (N'&REQUEST LE 1).ZG54A  CK NUM                00318900
&ZMS               SETC  '"REQUEST='                                    00319000
&ZMS               SETC  '&ZMS.&REQUEST"'                               00319100
&ZMS               SETC  '&ZMS "REQUEST"'                               00319200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00319300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00319400
.ZG54A             ANOP  ,                                              00319500
.*------------------------------------------------------------------    00319600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00319700
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00319800
.ZG54A0            AIF   (K'&DOMAIN LE 0).ZG54A1  OK                    00319900
&ZCVAL             SETC '&ZCVAL DOMAIN'         INCORRECT KEY USED      00320000
.ZG54A1            AIF   (K'&SCOPE LE 0).ZG54A2  OK                     00320100
&ZCVAL             SETC '&ZCVAL SCOPE'          INCORRECT KEY USED      00320200
.ZG54A2            AIF   (K'&UNAUTHSERV LE 0).ZG54A3  OK                00320300
&ZCVAL             SETC '&ZCVAL UNAUTHSERV'     INCORRECT KEY USED      00320400
.ZG54A3            AIF   (K'&ENDTIME LE 0).ZG54A4  OK                   00320500
&ZCVAL             SETC '&ZCVAL ENDTIME'        INCORRECT KEY USED      00320600
.ZG54A4            AIF   (K'&ENDTIME64 LE 0).ZG54A5  OK                 00320700
&ZCVAL             SETC '&ZCVAL ENDTIME64'      INCORRECT KEY USED      00320800
.ZG54A5            AIF   (K'&ENDDATA LE 0).ZG54A6  OK                   00320900
&ZCVAL             SETC '&ZCVAL ENDDATA'        INCORRECT KEY USED      00321000
.ZG54A6            AIF   (K'&ENDDATA64 LE 0).ZG54A7  OK                 00321100
&ZCVAL             SETC '&ZCVAL ENDDATA64'      INCORRECT KEY USED      00321200
.ZG54A7            AIF   (K'&DATA LE 0).ZG54A8  OK                      00321300
&ZCVAL             SETC '&ZCVAL DATA'           INCORRECT KEY USED      00321400
.ZG54A8            AIF   (K'&DATA64 LE 0).ZG54A9  OK                    00321500
&ZCVAL             SETC '&ZCVAL DATA64'         INCORRECT KEY USED      00321600
.ZG54A9            AIF   (K'&FORMAT LE 0).ZG54A10  OK                   00321700
&ZCVAL             SETC '&ZCVAL FORMAT'         INCORRECT KEY USED      00321800
.ZG54A10           AIF   (K'&CURRENTDATA LE 0).ZG54A11  OK              00321900
&ZCVAL             SETC '&ZCVAL CURRENTDATA'    INCORRECT KEY USED      00322000
.ZG54A11           AIF   (K'&CURRENTDATA64 LE 0).ZG54A12  OK            00322100
&ZCVAL             SETC '&ZCVAL CURRENTDATA64'  INCORRECT KEY USED      00322200
.ZG54A12           AIF   (K'&ZCVAL LE 0).ZG54A13  OK                    00322300
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00322400
&ZMS               SETC  '"REQUEST'                                     00322500
&ZMS               SETC  '&ZMS.=&REQUEST"'                              00322600
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00322700
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00322800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00322900
.ZG54A13           ANOP  ,                                              00323000
.*----------------------------------------------------------------***   00323100
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00323200
&XBEGINPRODNAME    SETC  ''          INITIALIZE XVARIABLE               00323300
                   AIF   (K'&PRODOWNER LE 0).ZG56C                      00323400
&ZXBEGINPRODNAME   SETC  'INPUT'     SET IN/OUTPUT                      00323500
&XBEGINPRODNAME    SETC  'PRODOWNER'            SET XVARIABLE           00323600
&ZXPRODOWNER       SETC  'INPUT'     SET IN/OUTPUT                      00323700
&XPRODOWNER        SETC  '&PRODOWNER(1)'        SET XVARIABLE PARM      00323800
                   AIF   (N'&PRODOWNER GT 1).ZG56A                      00323900
&XPRODOWNER        SETC  '&PRODOWNER'           SET XVARIABLE PARM      00324000
.ZG56A             AIF   (N'&PRODOWNER LE 1).ZG56B  CK NUM              00324100
&ZMS               SETC  '"PRODOWNER='                                  00324200
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             00324300
&ZMS               SETC  '&ZMS "PRODOWNER"'                             00324400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00324500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00324600
.ZG56B             AIF   (K'&XPRODOWNER GT 0).ZG56C  ONE PARM           00324700
&ZXBEGINPRODNAME   SETC  ''          RESET IN/OUTPUT                    00324800
&ZXPRODOWNER       SETC  ''          RESET IN/OUTPUT                    00324900
&ZMS               SETC  ' '                                            00325000
&ZMS               SETC  '&ZMS "PRODOWNER" KEY AND ITS'                 00325100
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00325200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00325300
.ZG56C             ANOP  ,                                              00325400
.*----------------------------------------------------------------***   00325500
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00325600
                   AIF   (K'&PRTOKEN LE 0).ZG65D  NO ME KEY             00325700
                   AIF   (N'&PRTOKEN LE 1).ZG65A  CK NUM                00325800
&ZMS               SETC  '"PRTOKEN='                                    00325900
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               00326000
&ZMS               SETC  '&ZMS "PRTOKEN"'                               00326100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00326200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00326300
.ZG65A             AIF   (K'&XBEGINPRODNAME LE 0).ZG65B                 00326400
&ZMS               SETC  '"PRTOKEN'                                     00326500
&ZMS               SETC  '&ZMS.=&PRTOKEN"'                              00326600
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00326700
&ZMS               SETC  '&ZMS "&XBEGINPRODNAME"'                       00326800
                   MNOTE 8,' &ZMS KEY.'                                 00326900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00327000
                   AGO   .ZG65D                                         00327100
.*                                                                      00327200
.ZG65B             ANOP  ,                                              00327300
&ZXBEGINPRODNAME   SETC  'INPUT'     SET IN/OUTPUT                      00327400
&XBEGINPRODNAME    SETC  'PRTOKEN'   SET XVARIABLE                      00327500
&ZXPRTOKEN         SETC  'INPUT'     SET IN/OUTPUT                      00327600
&XPRTOKEN          SETC  '&PRTOKEN(1)'          SET XVARIABLE PARM      00327700
                   AIF   (N'&PRTOKEN GT 1).ZG65C                        00327800
&XPRTOKEN          SETC  '&PRTOKEN'  SET XVARIABLE PARM                 00327900
.ZG65C             AIF   (K'&XPRTOKEN GT 0).ZG65D  ONE PARM             00328000
&ZXBEGINPRODNAME   SETC  ''          RESET IN/OUTPUT                    00328100
&ZXPRTOKEN         SETC  ''          RESET IN/OUTPUT                    00328200
&ZMS               SETC  ' '                                            00328300
&ZMS               SETC  '&ZMS "PRTOKEN" KEY AND ITS'                   00328400
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00328500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00328600
.ZG65D             ANOP  ,                                              00328700
.*----------------------------------------------------------------***   00328800
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00328900
                   AIF   (K'&PRTOKEN64 LE 0).ZG66D  NO ME KEY           00329000
                   AIF   (N'&PRTOKEN64 LE 1).ZG66A  CK NUM              00329100
&ZMS               SETC  '"PRTOKEN64='                                  00329200
&ZMS               SETC  '&ZMS.&PRTOKEN64"'                             00329300
&ZMS               SETC  '&ZMS "PRTOKEN64"'                             00329400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00329500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00329600
.ZG66A             AIF   (K'&XBEGINPRODNAME LE 0).ZG66B                 00329700
&ZMS               SETC  '"PRTOKEN64'                                   00329800
&ZMS               SETC  '&ZMS.=&PRTOKEN64"'                            00329900
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00330000
&ZMS               SETC  '&ZMS "&XBEGINPRODNAME"'                       00330100
                   MNOTE 8,' &ZMS KEY.'                                 00330200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00330300
                   AGO   .ZG66D                                         00330400
.*                                                                      00330500
.ZG66B             ANOP  ,                                              00330600
&ZXBEGINPRODNAME   SETC  'INPUT'     SET IN/OUTPUT                      00330700
&XBEGINPRODNAME    SETC  'PRTOKEN64'            SET XVARIABLE           00330800
&ZXPRTOKEN64       SETC  'INPUT'     SET IN/OUTPUT                      00330900
&XPRTOKEN64        SETC  '&PRTOKEN64(1)'        SET XVARIABLE PARM      00331000
                   AIF   (N'&PRTOKEN64 GT 1).ZG66C                      00331100
&XPRTOKEN64        SETC  '&PRTOKEN64'           SET XVARIABLE PARM      00331200
.ZG66C             AIF   (K'&XPRTOKEN64 GT 0).ZG66D  ONE PARM           00331300
&ZXBEGINPRODNAME   SETC  ''          RESET IN/OUTPUT                    00331400
&ZXPRTOKEN64       SETC  ''          RESET IN/OUTPUT                    00331500
&ZMS               SETC  ' '                                            00331600
&ZMS               SETC  '&ZMS "PRTOKEN64" KEY AND ITS'                 00331700
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00331800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00331900
.ZG66D             ANOP  ,                                              00332000
.*------------------------------------------------------------------    00332100
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00332200
                   AIF   (K'&XBEGINPRODNAME GT 0).ZG67B                 00332300
&ZXBEGINPRODNAME   SETC  ''          RESET IN/OUTPUT                    00332400
&ZXPRODOWNER       SETC  ''          RESET IN/OUTPUT                    00332500
&XBEGINPRODNAME    SETC  ''          ENSURE NULL                        00332600
&XPRODOWNER        SETC  ''          ENSURE NULL                        00332700
&ZMS               SETC  'ONE OF THE FOLLOWING'                         00332800
&ZMS               SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'            00332900
&ZMS               SETC  '&ZMS REQUIRED:'                               00333000
&ZMS               SETC  '&ZMS "PRODOWNER",'    VALID ME KEY            00333100
&ZMS               SETC  '&ZMS "PRTOKEN",'      VALID ME KEY            00333200
&ZMS               SETC  '&ZMS OR "PRTOKEN64".'  VALID ME KEY           00333300
                   MNOTE 8,' &ZMS '                                     00333400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00333500
.ZG67B             ANOP  ,                                              00333600
.*-------------------------------------------------------------------   00333700
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00333800
.ZG56ZY  AIF    ('&XBEGINPRODNAME' NE 'PRODOWNER').ZG65ZY               00333900
.*-------------------------------------------------------------------   00334000
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00334100
                   AIF   (K'&ZXPRODOWNER LE 0).ZG56R  NOT I/O           00334200
                   AIF   ('&XPRODOWNER'(1,1) NE '(').ZG56R              00334300
&ZCGPR             SETC  '&XPRODOWNER'(2,K'&XPRODOWNER-2)               00334400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG56P                   00334500
                   AIF   (K'&ZCGPR GT 2).ZG56Q                          00334600
                   AIF   ('&ZCGPR' EQ '0').ZG56Q                        00334700
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00334800
                   AIF   (T'&ZCGPR NE 'N').ZG56Q  INVALID REG NAME      00334900
.ZG56P             ANOP  ,                                              00335000
                   AIF   (T'&ZCGPR NE 'N').ZG56R  NON NUMERIC           00335100
                   AIF   ('&ZCGPR' LT '2').ZG56Q                        00335200
                   AIF   ('&ZCGPR' LE '12').ZG56R                       00335300
.ZG56Q             ANOP  ,                                              00335400
&ZMS               SETC  '"PRODOWNER='                                  00335500
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             00335600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00335700
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00335800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00335900
.ZG56R             ANOP  ,                                              00336000
.*----------------------------------------------------------------***   00336100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00336200
                   AIF   (N'&PRODNAME LE 1).ZG58A  CK NUM               00336300
&ZMS               SETC  '"PRODNAME='                                   00336400
&ZMS               SETC  '&ZMS.&PRODNAME"'                              00336500
&ZMS               SETC  '&ZMS "PRODNAME"'                              00336600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00336700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00336800
.ZG58A             ANOP  ,                                              00336900
.*-------------------------------------------------------------------   00337000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00337100
&ZXPRODNAME        SETC  'INPUT'     SET IN/OUTPUT                      00337200
&XPRODNAME         SETC  '&PRODNAME(1)'         SET XVARIABLE           00337300
                   AIF   (N'&PRODNAME GT 1).ZG58B  MULTI                00337400
&XPRODNAME         SETC  '&PRODNAME'            SET XVARIABLE           00337500
.ZG58B             AIF   (K'&PRODNAME(1) GT 0).ZG58C                    00337600
&ZXPRODNAME        SETC  ''          RESET IN/OUTPUT                    00337700
&ZMS               SETC  ' '                                            00337800
&ZMS               SETC  '&ZMS "PRODNAME" KEY AND ITS'                  00337900
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00338000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00338100
.ZG58C             ANOP  ,                                              00338200
.*-------------------------------------------------------------------   00338300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00338400
                   AIF   (K'&ZXPRODNAME LE 0).ZG58R  NOT I/O            00338500
                   AIF   ('&XPRODNAME'(1,1) NE '(').ZG58R               00338600
&ZCGPR             SETC  '&XPRODNAME'(2,K'&XPRODNAME-2)                 00338700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG58P                   00338800
                   AIF   (K'&ZCGPR GT 2).ZG58Q                          00338900
                   AIF   ('&ZCGPR' EQ '0').ZG58Q                        00339000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00339100
                   AIF   (T'&ZCGPR NE 'N').ZG58Q  INVALID REG NAME      00339200
.ZG58P             ANOP  ,                                              00339300
                   AIF   (T'&ZCGPR NE 'N').ZG58R  NON NUMERIC           00339400
                   AIF   ('&ZCGPR' LT '2').ZG58Q                        00339500
                   AIF   ('&ZCGPR' LE '12').ZG58R                       00339600
.ZG58Q             ANOP  ,                                              00339700
&ZMS               SETC  '"PRODNAME='                                   00339800
&ZMS               SETC  '&ZMS.&PRODNAME"'                              00339900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00340000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00340100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00340200
.ZG58R             ANOP  ,                                              00340300
.*----------------------------------------------------------------***   00340400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00340500
                   AIF   (N'&PRODVERS LE 1).ZG61A  CK NUM               00340600
&ZMS               SETC  '"PRODVERS='                                   00340700
&ZMS               SETC  '&ZMS.&PRODVERS"'                              00340800
&ZMS               SETC  '&ZMS "PRODVERS"'                              00340900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00341000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00341100
.ZG61A             ANOP  ,                                              00341200
.*-------------------------------------------------------------------   00341300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00341400
&ZXPRODVERS        SETC  'INPUT'     SET IN/OUTPUT                      00341500
&XPRODVERS         SETC  'NONE'                                         00341600
                   AIF   (K'&PRODVERS(1) LE 0).ZG61B  PARM              00341700
&XPRODVERS         SETC  '&PRODVERS(1)'         SET XVARIABLE           00341800
                   AIF   (N'&PRODVERS GT 1).ZG61B  MULTI                00341900
&XPRODVERS         SETC  '&PRODVERS'            SET XVARIABLE           00342000
.ZG61B             ANOP  ,                                              00342100
.*-------------------------------------------------------------------   00342200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00342300
                   AIF   (K'&ZXPRODVERS LE 0).ZG61R  NOT I/O            00342400
                   AIF   ('&XPRODVERS'(1,1) NE '(').ZG61R               00342500
&ZCGPR             SETC  '&XPRODVERS'(2,K'&XPRODVERS-2)                 00342600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG61P                   00342700
                   AIF   (K'&ZCGPR GT 2).ZG61Q                          00342800
                   AIF   ('&ZCGPR' EQ '0').ZG61Q                        00342900
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00343000
                   AIF   (T'&ZCGPR NE 'N').ZG61Q  INVALID REG NAME      00343100
.ZG61P             ANOP  ,                                              00343200
                   AIF   (T'&ZCGPR NE 'N').ZG61R  NON NUMERIC           00343300
                   AIF   ('&ZCGPR' LT '2').ZG61Q                        00343400
                   AIF   ('&ZCGPR' LE '12').ZG61R                       00343500
.ZG61Q             ANOP  ,                                              00343600
&ZMS               SETC  '"PRODVERS='                                   00343700
&ZMS               SETC  '&ZMS.&PRODVERS"'                              00343800
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00343900
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00344000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00344100
.ZG61R             ANOP  ,                                              00344200
.*----------------------------------------------------------------***   00344300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00344400
                   AIF   (N'&PRODQUAL LE 1).ZG62A  CK NUM               00344500
&ZMS               SETC  '"PRODQUAL='                                   00344600
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              00344700
&ZMS               SETC  '&ZMS "PRODQUAL"'                              00344800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00344900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00345000
.ZG62A             ANOP  ,                                              00345100
.*-------------------------------------------------------------------   00345200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00345300
&ZXPRODQUAL        SETC  'INPUT'     SET IN/OUTPUT                      00345400
&XPRODQUAL         SETC  'NONE'                                         00345500
                   AIF   (K'&PRODQUAL(1) LE 0).ZG62B  PARM              00345600
&XPRODQUAL         SETC  '&PRODQUAL(1)'         SET XVARIABLE           00345700
                   AIF   (N'&PRODQUAL GT 1).ZG62B  MULTI                00345800
&XPRODQUAL         SETC  '&PRODQUAL'            SET XVARIABLE           00345900
.ZG62B             ANOP  ,                                              00346000
.*-------------------------------------------------------------------   00346100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00346200
                   AIF   (K'&ZXPRODQUAL LE 0).ZG62R  NOT I/O            00346300
                   AIF   ('&XPRODQUAL'(1,1) NE '(').ZG62R               00346400
&ZCGPR             SETC  '&XPRODQUAL'(2,K'&XPRODQUAL-2)                 00346500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG62P                   00346600
                   AIF   (K'&ZCGPR GT 2).ZG62Q                          00346700
                   AIF   ('&ZCGPR' EQ '0').ZG62Q                        00346800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00346900
                   AIF   (T'&ZCGPR NE 'N').ZG62Q  INVALID REG NAME      00347000
.ZG62P             ANOP  ,                                              00347100
                   AIF   (T'&ZCGPR NE 'N').ZG62R  NON NUMERIC           00347200
                   AIF   ('&ZCGPR' LT '2').ZG62Q                        00347300
                   AIF   ('&ZCGPR' LE '12').ZG62R                       00347400
.ZG62Q             ANOP  ,                                              00347500
&ZMS               SETC  '"PRODQUAL='                                   00347600
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              00347700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00347800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00347900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00348000
.ZG62R             ANOP  ,                                              00348100
.*----------------------------------------------------------------***   00348200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00348300
                   AIF   (N'&PRODID LE 1).ZG63A  CK NUM                 00348400
&ZMS               SETC  '"PRODID='                                     00348500
&ZMS               SETC  '&ZMS.&PRODID"'                                00348600
&ZMS               SETC  '&ZMS "PRODID"'                                00348700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00348800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00348900
.ZG63A             ANOP  ,                                              00349000
.*-------------------------------------------------------------------   00349100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00349200
&ZXPRODID          SETC  'INPUT'     SET IN/OUTPUT                      00349300
&XPRODID           SETC  'NONE'                                         00349400
                   AIF   (K'&PRODID(1) LE 0).ZG63B  PARM                00349500
&XPRODID           SETC  '&PRODID(1)'           SET XVARIABLE           00349600
                   AIF   (N'&PRODID GT 1).ZG63B  MULTI                  00349700
&XPRODID           SETC  '&PRODID'   SET XVARIABLE                      00349800
.ZG63B             ANOP  ,                                              00349900
.*-------------------------------------------------------------------   00350000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00350100
                   AIF   (K'&ZXPRODID LE 0).ZG63R  NOT I/O              00350200
                   AIF   ('&XPRODID'(1,1) NE '(').ZG63R                 00350300
&ZCGPR             SETC  '&XPRODID'(2,K'&XPRODID-2)                     00350400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG63P                   00350500
                   AIF   (K'&ZCGPR GT 2).ZG63Q                          00350600
                   AIF   ('&ZCGPR' EQ '0').ZG63Q                        00350700
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00350800
                   AIF   (T'&ZCGPR NE 'N').ZG63Q  INVALID REG NAME      00350900
.ZG63P             ANOP  ,                                              00351000
                   AIF   (T'&ZCGPR NE 'N').ZG63R  NON NUMERIC           00351100
                   AIF   ('&ZCGPR' LT '2').ZG63Q                        00351200
                   AIF   ('&ZCGPR' LE '12').ZG63R                       00351300
.ZG63Q             ANOP  ,                                              00351400
&ZMS               SETC  '"PRODID='                                     00351500
&ZMS               SETC  '&ZMS.&PRODID"'                                00351600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00351700
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00351800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00351900
.ZG63R             ANOP  ,                                              00352000
.*-------------------------------------------------------------------   00352100
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00352200
.ZG65ZY  AIF    ('&XBEGINPRODNAME' NE 'PRTOKEN').ZG66ZY                 00352300
.*-------------------------------------------------------------------   00352400
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                00352500
&ZCVAL             SETC ''           ERROR KEY FIELD                    00352600
.ZG65I0            AIF   (K'&PRODNAME LE 0).ZG65I1                      00352700
&ZCVAL             SETC '&ZCVAL PRODNAME'       DISALLOWED KEY          00352800
.ZG65I1            AIF   (K'&PRODVERS LE 0).ZG65I2                      00352900
&ZCVAL             SETC '&ZCVAL PRODVERS'       DISALLOWED KEY          00353000
.ZG65I2            AIF   (K'&PRODQUAL LE 0).ZG65I3                      00353100
&ZCVAL             SETC '&ZCVAL PRODQUAL'       DISALLOWED KEY          00353200
.ZG65I3            AIF   (K'&PRODID LE 0).ZG65I4                        00353300
&ZCVAL             SETC '&ZCVAL PRODID'         DISALLOWED KEY          00353400
.ZG65I4            AIF   (K'&ZCVAL LE 0).ZG65J  KEY                     00353500
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00353600
&ZMS               SETC  '"PRTOKEN'                                     00353700
&ZMS               SETC  '&ZMS.=&PRTOKEN"'                              00353800
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00353900
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00354000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00354100
.ZG65J             ANOP  ,                                              00354200
.*-------------------------------------------------------------------   00354300
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00354400
                   AIF   (K'&ZXPRTOKEN LE 0).ZG65R  NOT I/O             00354500
                   AIF   ('&XPRTOKEN'(1,1) NE '(').ZG65R                00354600
&ZCGPR             SETC  '&XPRTOKEN'(2,K'&XPRTOKEN-2)                   00354700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG65P                   00354800
                   AIF   (K'&ZCGPR GT 2).ZG65Q                          00354900
                   AIF   ('&ZCGPR' EQ '0').ZG65Q                        00355000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00355100
                   AIF   (T'&ZCGPR NE 'N').ZG65Q  INVALID REG NAME      00355200
.ZG65P             ANOP  ,                                              00355300
                   AIF   (T'&ZCGPR NE 'N').ZG65R  NON NUMERIC           00355400
                   AIF   ('&ZCGPR' LT '2').ZG65Q                        00355500
                   AIF   ('&ZCGPR' LE '12').ZG65R                       00355600
.ZG65Q             ANOP  ,                                              00355700
&ZMS               SETC  '"PRTOKEN='                                    00355800
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               00355900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00356000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00356100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00356200
.ZG65R             ANOP  ,                                              00356300
.*-------------------------------------------------------------------   00356400
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00356500
.ZG66ZY  AIF    ('&XBEGINPRODNAME' NE 'PRTOKEN64').ZG67ZY               00356600
.*-------------------------------------------------------------------   00356700
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                00356800
&ZCVAL             SETC ''           ERROR KEY FIELD                    00356900
.ZG66I0            AIF   (K'&PRODNAME LE 0).ZG66I1                      00357000
&ZCVAL             SETC '&ZCVAL PRODNAME'       DISALLOWED KEY          00357100
.ZG66I1            AIF   (K'&PRODVERS LE 0).ZG66I2                      00357200
&ZCVAL             SETC '&ZCVAL PRODVERS'       DISALLOWED KEY          00357300
.ZG66I2            AIF   (K'&PRODQUAL LE 0).ZG66I3                      00357400
&ZCVAL             SETC '&ZCVAL PRODQUAL'       DISALLOWED KEY          00357500
.ZG66I3            AIF   (K'&PRODID LE 0).ZG66I4                        00357600
&ZCVAL             SETC '&ZCVAL PRODID'         DISALLOWED KEY          00357700
.ZG66I4            AIF   (K'&ZCVAL LE 0).ZG66J  KEY                     00357800
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00357900
&ZMS               SETC  '"PRTOKEN64'                                   00358000
&ZMS               SETC  '&ZMS.=&PRTOKEN64"'                            00358100
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00358200
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00358300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00358400
.ZG66J             ANOP  ,                                              00358500
.*-------------------------------------------------------------------   00358600
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00358700
                   AIF   (K'&ZXPRTOKEN64 LE 0).ZG66R  NOT I/O           00358800
                   AIF   ('&XPRTOKEN64'(1,1) NE '(').ZG66R              00358900
&ZCGPR             SETC  '&XPRTOKEN64'(2,K'&XPRTOKEN64-2)               00359000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG66P                   00359100
                   AIF   (K'&ZCGPR GT 2).ZG66Q                          00359200
                   AIF   ('&ZCGPR' EQ '0').ZG66Q                        00359300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00359400
                   AIF   (T'&ZCGPR NE 'N').ZG66Q  INVALID REG NAME      00359500
.ZG66P             ANOP  ,                                              00359600
                   AIF   (T'&ZCGPR NE 'N').ZG66R  NON NUMERIC           00359700
                   AIF   ('&ZCGPR' LT '2').ZG66Q                        00359800
                   AIF   ('&ZCGPR' LE '12').ZG66R                       00359900
.ZG66Q             ANOP  ,                                              00360000
&ZMS               SETC  '"PRTOKEN64='                                  00360100
&ZMS               SETC  '&ZMS.&PRTOKEN64"'                             00360200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00360300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00360400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00360500
.ZG66R             ANOP  ,                                              00360600
.*-------------------------------------------------------------------   00360700
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00360800
.ZG67ZY            ANOP ,            END MUTUALLY EXCLUSIVE KEYS        00360900
.*----------------------------------------------------------------***   00361000
.***AG.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE                     00361100
&XDUMMY2           SETC  ''          INITIALIZE XVARIABLE               00361200
                   AIF   (K'&BEGTIME LE 0).ZG69C                        00361300
&ZXDUMMY2          SETC  'OUTPUT'    SET IN/OUTPUT                      00361400
&XDUMMY2           SETC  'BEGTIME'   SET XVARIABLE                      00361500
&ZXBEGTIME         SETC  'OUTPUT'    SET IN/OUTPUT                      00361600
&XBEGTIME          SETC  '&BEGTIME(1)'          SET XVARIABLE PARM      00361700
                   AIF   (N'&BEGTIME GT 1).ZG69A                        00361800
&XBEGTIME          SETC  '&BEGTIME'  SET XVARIABLE PARM                 00361900
.ZG69A             AIF   (N'&BEGTIME LE 1).ZG69B  CK NUM                00362000
&ZMS               SETC  '"BEGTIME='                                    00362100
&ZMS               SETC  '&ZMS.&BEGTIME"'                               00362200
&ZMS               SETC  '&ZMS "BEGTIME"'                               00362300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00362400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00362500
.ZG69B             AIF   (K'&XBEGTIME GT 0).ZG69C  ONE PARM             00362600
&ZXDUMMY2          SETC  ''          RESET IN/OUTPUT                    00362700
&ZXBEGTIME         SETC  ''          RESET IN/OUTPUT                    00362800
&ZMS               SETC  ' '                                            00362900
&ZMS               SETC  '&ZMS "BEGTIME" KEY AND ITS'                   00363000
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00363100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00363200
.ZG69C             ANOP  ,                                              00363300
.*----------------------------------------------------------------***   00363400
.***AG.KMEKY02 NAME, OPT OUTPUT, ME KEYS -XVARIABLE                     00363500
                   AIF   (K'&BEGTIME64 LE 0).ZG70D  NO ME KEY           00363600
                   AIF   (N'&BEGTIME64 LE 1).ZG70A  CK NUM              00363700
&ZMS               SETC  '"BEGTIME64='                                  00363800
&ZMS               SETC  '&ZMS.&BEGTIME64"'                             00363900
&ZMS               SETC  '&ZMS "BEGTIME64"'                             00364000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00364100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00364200
.ZG70A             AIF   (K'&XDUMMY2 LE 0).ZG70B                        00364300
&ZMS               SETC  '"BEGTIME64'                                   00364400
&ZMS               SETC  '&ZMS.=&BEGTIME64"'                            00364500
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00364600
&ZMS               SETC  '&ZMS "&XDUMMY2"'                              00364700
                   MNOTE 8,' &ZMS KEY.'                                 00364800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00364900
                   AGO   .ZG70D                                         00365000
.*                                                                      00365100
.ZG70B             ANOP  ,                                              00365200
&ZXDUMMY2          SETC  'OUTPUT'    SET IN/OUTPUT                      00365300
&XDUMMY2           SETC  'BEGTIME64'            SET XVARIABLE           00365400
&ZXBEGTIME64       SETC  'OUTPUT'    SET IN/OUTPUT                      00365500
&XBEGTIME64        SETC  '&BEGTIME64(1)'        SET XVARIABLE PARM      00365600
                   AIF   (N'&BEGTIME64 GT 1).ZG70C                      00365700
&XBEGTIME64        SETC  '&BEGTIME64'           SET XVARIABLE PARM      00365800
.ZG70C             AIF   (K'&XBEGTIME64 GT 0).ZG70D  ONE PARM           00365900
&ZXDUMMY2          SETC  ''          RESET IN/OUTPUT                    00366000
&ZXBEGTIME64       SETC  ''          RESET IN/OUTPUT                    00366100
&ZMS               SETC  ' '                                            00366200
&ZMS               SETC  '&ZMS "BEGTIME64" KEY AND ITS'                 00366300
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00366400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00366500
.ZG70D             ANOP  ,                                              00366600
.*------------------------------------------------------------------    00366700
.***AG.KMEKY08 NAME, OPT OUTPUT, ME KEYS -CHECK IF KEY ENTERED          00366800
                   AIF   (K'&XDUMMY2 GT 0).ZG71B                        00366900
&ZXDUMMY2          SETC  ''          RESET IN/OUTPUT                    00367000
&XDUMMY2           SETC  'BEGTIME'   SET DEFAULT                        00367100
.ZG71B             ANOP  ,                                              00367200
.*-------------------------------------------------------------------   00367300
.***AG.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00367400
                   AIF   (K'&ZXBEGTIME64 LE 0).ZG71R  NOT I/O           00367500
                   AIF   ('&XBEGTIME64'(1,1) NE '(').ZG71R              00367600
&ZCGPR             SETC  '&XBEGTIME64'(2,K'&XBEGTIME64-2)               00367700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG71P                   00367800
                   AIF   (K'&ZCGPR GT 2).ZG71Q                          00367900
                   AIF   ('&ZCGPR' EQ '0').ZG71Q                        00368000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00368100
                   AIF   (T'&ZCGPR NE 'N').ZG71Q  INVALID REG NAME      00368200
.ZG71P             ANOP  ,                                              00368300
                   AIF   (T'&ZCGPR NE 'N').ZG71R  NON NUMERIC           00368400
                   AIF   ('&ZCGPR' LT '2').ZG71Q                        00368500
                   AIF   ('&ZCGPR' LE '12').ZG71R                       00368600
.ZG71Q             ANOP  ,                                              00368700
&ZMS               SETC  '"BEGTIME64='                                  00368800
&ZMS               SETC  '&ZMS.&BEGTIME64"'                             00368900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00369000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00369100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00369200
.ZG71R             ANOP  ,                                              00369300
.*-------------------------------------------------------------------   00369400
.***AG.KMEKY13 NAME, OPT OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00369500
.ZG69ZY  AIF    ('&XDUMMY2' NE 'BEGTIME').ZG70ZY                        00369600
.*-------------------------------------------------------------------   00369700
.***AG.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00369800
                   AIF   (K'&ZXBEGTIME LE 0).ZG69R  NOT I/O             00369900
                   AIF   ('&XBEGTIME'(1,1) NE '(').ZG69R                00370000
&ZCGPR             SETC  '&XBEGTIME'(2,K'&XBEGTIME-2)                   00370100
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG69P                   00370200
                   AIF   (K'&ZCGPR GT 2).ZG69Q                          00370300
                   AIF   ('&ZCGPR' EQ '0').ZG69Q                        00370400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00370500
                   AIF   (T'&ZCGPR NE 'N').ZG69Q  INVALID REG NAME      00370600
.ZG69P             ANOP  ,                                              00370700
                   AIF   (T'&ZCGPR NE 'N').ZG69R  NON NUMERIC           00370800
                   AIF   ('&ZCGPR' LT '2').ZG69Q                        00370900
                   AIF   ('&ZCGPR' LE '12').ZG69R                       00371000
.ZG69Q             ANOP  ,                                              00371100
&ZMS               SETC  '"BEGTIME='                                    00371200
&ZMS               SETC  '&ZMS.&BEGTIME"'                               00371300
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00371400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00371500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00371600
.ZG69R             ANOP  ,                                              00371700
.*-------------------------------------------------------------------   00371800
.***AG.KMEKY13 NAME, OPT OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00371900
.ZG70ZY  AIF    ('&XDUMMY2' NE 'BEGTIME64').ZG71ZY                      00372000
.*-------------------------------------------------------------------   00372100
.***AG.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00372200
                   AIF   (K'&ZXBEGTIME64 LE 0).ZG70R  NOT I/O           00372300
                   AIF   ('&XBEGTIME64'(1,1) NE '(').ZG70R              00372400
&ZCGPR             SETC  '&XBEGTIME64'(2,K'&XBEGTIME64-2)               00372500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG70P                   00372600
                   AIF   (K'&ZCGPR GT 2).ZG70Q                          00372700
                   AIF   ('&ZCGPR' EQ '0').ZG70Q                        00372800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00372900
                   AIF   (T'&ZCGPR NE 'N').ZG70Q  INVALID REG NAME      00373000
.ZG70P             ANOP  ,                                              00373100
                   AIF   (T'&ZCGPR NE 'N').ZG70R  NON NUMERIC           00373200
                   AIF   ('&ZCGPR' LT '2').ZG70Q                        00373300
                   AIF   ('&ZCGPR' LE '12').ZG70R                       00373400
.ZG70Q             ANOP  ,                                              00373500
&ZMS               SETC  '"BEGTIME64='                                  00373600
&ZMS               SETC  '&ZMS.&BEGTIME64"'                             00373700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00373800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00373900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00374000
.ZG70R             ANOP  ,                                              00374100
.*-------------------------------------------------------------------   00374200
.***AG.KMEKY15 NAME, OPT OUTPUT, ME KEYS -END                           00374300
.ZG71ZY            ANOP ,            END MUTUALLY EXCLUSIVE KEYS        00374400
.*-------------------------------------------------------------------   00374500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00374600
.ZG72              ANOP  ,                                              00374700
&ZTLC              SETC 'FUNCTIONDATA'                                  00374800
                   AIF   ('&REQUEST(1)' NE '&ZTLC').ZG100               00374900
&XREQUEST          SETC  'FUNCTIONDATA'         SET KEYWORD             00375000
                   AIF   (N'&REQUEST LE 1).ZG72A  CK NUM                00375100
&ZMS               SETC  '"REQUEST='                                    00375200
&ZMS               SETC  '&ZMS.&REQUEST"'                               00375300
&ZMS               SETC  '&ZMS "REQUEST"'                               00375400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00375500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00375600
.ZG72A             ANOP  ,                                              00375700
.*------------------------------------------------------------------    00375800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00375900
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00376000
.ZG72A0            AIF   (K'&DOMAIN LE 0).ZG72A1  OK                    00376100
&ZCVAL             SETC '&ZCVAL DOMAIN'         INCORRECT KEY USED      00376200
.ZG72A1            AIF   (K'&SCOPE LE 0).ZG72A2  OK                     00376300
&ZCVAL             SETC '&ZCVAL SCOPE'          INCORRECT KEY USED      00376400
.ZG72A2            AIF   (K'&UNAUTHSERV LE 0).ZG72A3  OK                00376500
&ZCVAL             SETC '&ZCVAL UNAUTHSERV'     INCORRECT KEY USED      00376600
.ZG72A3            AIF   (K'&ENDTIME LE 0).ZG72A4  OK                   00376700
&ZCVAL             SETC '&ZCVAL ENDTIME'        INCORRECT KEY USED      00376800
.ZG72A4            AIF   (K'&ENDTIME64 LE 0).ZG72A5  OK                 00376900
&ZCVAL             SETC '&ZCVAL ENDTIME64'      INCORRECT KEY USED      00377000
.ZG72A5            AIF   (K'&ENDDATA LE 0).ZG72A6  OK                   00377100
&ZCVAL             SETC '&ZCVAL ENDDATA'        INCORRECT KEY USED      00377200
.ZG72A6            AIF   (K'&ENDDATA64 LE 0).ZG72A7  OK                 00377300
&ZCVAL             SETC '&ZCVAL ENDDATA64'      INCORRECT KEY USED      00377400
.ZG72A7            AIF   (K'&BEGTIME LE 0).ZG72A8  OK                   00377500
&ZCVAL             SETC '&ZCVAL BEGTIME'        INCORRECT KEY USED      00377600
.ZG72A8            AIF   (K'&BEGTIME64 LE 0).ZG72A9  OK                 00377700
&ZCVAL             SETC '&ZCVAL BEGTIME64'      INCORRECT KEY USED      00377800
.ZG72A9            AIF   (K'&ZCVAL LE 0).ZG72A10  OK                    00377900
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00378000
&ZMS               SETC  '"REQUEST'                                     00378100
&ZMS               SETC  '&ZMS.=&REQUEST"'                              00378200
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00378300
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00378400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00378500
.ZG72A10           ANOP  ,                                              00378600
.*----------------------------------------------------------------***   00378700
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00378800
&XDATAPRODNAME     SETC  ''          INITIALIZE XVARIABLE               00378900
                   AIF   (K'&PRODOWNER LE 0).ZG74C                      00379000
&ZXDATAPRODNAME    SETC  'INPUT'     SET IN/OUTPUT                      00379100
&XDATAPRODNAME     SETC  'PRODOWNER'            SET XVARIABLE           00379200
&ZXPRODOWNER       SETC  'INPUT'     SET IN/OUTPUT                      00379300
&XPRODOWNER        SETC  '&PRODOWNER(1)'        SET XVARIABLE PARM      00379400
                   AIF   (N'&PRODOWNER GT 1).ZG74A                      00379500
&XPRODOWNER        SETC  '&PRODOWNER'           SET XVARIABLE PARM      00379600
.ZG74A             AIF   (N'&PRODOWNER LE 1).ZG74B  CK NUM              00379700
&ZMS               SETC  '"PRODOWNER='                                  00379800
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             00379900
&ZMS               SETC  '&ZMS "PRODOWNER"'                             00380000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00380100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00380200
.ZG74B             AIF   (K'&XPRODOWNER GT 0).ZG74C  ONE PARM           00380300
&ZXDATAPRODNAME    SETC  ''          RESET IN/OUTPUT                    00380400
&ZXPRODOWNER       SETC  ''          RESET IN/OUTPUT                    00380500
&ZMS               SETC  ' '                                            00380600
&ZMS               SETC  '&ZMS "PRODOWNER" KEY AND ITS'                 00380700
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00380800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00380900
.ZG74C             ANOP  ,                                              00381000
.*----------------------------------------------------------------***   00381100
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00381200
                   AIF   (K'&PRTOKEN LE 0).ZG83D  NO ME KEY             00381300
                   AIF   (N'&PRTOKEN LE 1).ZG83A  CK NUM                00381400
&ZMS               SETC  '"PRTOKEN='                                    00381500
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               00381600
&ZMS               SETC  '&ZMS "PRTOKEN"'                               00381700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00381800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00381900
.ZG83A             AIF   (K'&XDATAPRODNAME LE 0).ZG83B                  00382000
&ZMS               SETC  '"PRTOKEN'                                     00382100
&ZMS               SETC  '&ZMS.=&PRTOKEN"'                              00382200
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00382300
&ZMS               SETC  '&ZMS "&XDATAPRODNAME"'                        00382400
                   MNOTE 8,' &ZMS KEY.'                                 00382500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00382600
                   AGO   .ZG83D                                         00382700
.*                                                                      00382800
.ZG83B             ANOP  ,                                              00382900
&ZXDATAPRODNAME    SETC  'INPUT'     SET IN/OUTPUT                      00383000
&XDATAPRODNAME     SETC  'PRTOKEN'   SET XVARIABLE                      00383100
&ZXPRTOKEN         SETC  'INPUT'     SET IN/OUTPUT                      00383200
&XPRTOKEN          SETC  '&PRTOKEN(1)'          SET XVARIABLE PARM      00383300
                   AIF   (N'&PRTOKEN GT 1).ZG83C                        00383400
&XPRTOKEN          SETC  '&PRTOKEN'  SET XVARIABLE PARM                 00383500
.ZG83C             AIF   (K'&XPRTOKEN GT 0).ZG83D  ONE PARM             00383600
&ZXDATAPRODNAME    SETC  ''          RESET IN/OUTPUT                    00383700
&ZXPRTOKEN         SETC  ''          RESET IN/OUTPUT                    00383800
&ZMS               SETC  ' '                                            00383900
&ZMS               SETC  '&ZMS "PRTOKEN" KEY AND ITS'                   00384000
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00384100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00384200
.ZG83D             ANOP  ,                                              00384300
.*----------------------------------------------------------------***   00384400
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00384500
                   AIF   (K'&PRTOKEN64 LE 0).ZG84D  NO ME KEY           00384600
                   AIF   (N'&PRTOKEN64 LE 1).ZG84A  CK NUM              00384700
&ZMS               SETC  '"PRTOKEN64='                                  00384800
&ZMS               SETC  '&ZMS.&PRTOKEN64"'                             00384900
&ZMS               SETC  '&ZMS "PRTOKEN64"'                             00385000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00385100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00385200
.ZG84A             AIF   (K'&XDATAPRODNAME LE 0).ZG84B                  00385300
&ZMS               SETC  '"PRTOKEN64'                                   00385400
&ZMS               SETC  '&ZMS.=&PRTOKEN64"'                            00385500
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00385600
&ZMS               SETC  '&ZMS "&XDATAPRODNAME"'                        00385700
                   MNOTE 8,' &ZMS KEY.'                                 00385800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00385900
                   AGO   .ZG84D                                         00386000
.*                                                                      00386100
.ZG84B             ANOP  ,                                              00386200
&ZXDATAPRODNAME    SETC  'INPUT'     SET IN/OUTPUT                      00386300
&XDATAPRODNAME     SETC  'PRTOKEN64'            SET XVARIABLE           00386400
&ZXPRTOKEN64       SETC  'INPUT'     SET IN/OUTPUT                      00386500
&XPRTOKEN64        SETC  '&PRTOKEN64(1)'        SET XVARIABLE PARM      00386600
                   AIF   (N'&PRTOKEN64 GT 1).ZG84C                      00386700
&XPRTOKEN64        SETC  '&PRTOKEN64'           SET XVARIABLE PARM      00386800
.ZG84C             AIF   (K'&XPRTOKEN64 GT 0).ZG84D  ONE PARM           00386900
&ZXDATAPRODNAME    SETC  ''          RESET IN/OUTPUT                    00387000
&ZXPRTOKEN64       SETC  ''          RESET IN/OUTPUT                    00387100
&ZMS               SETC  ' '                                            00387200
&ZMS               SETC  '&ZMS "PRTOKEN64" KEY AND ITS'                 00387300
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00387400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00387500
.ZG84D             ANOP  ,                                              00387600
.*------------------------------------------------------------------    00387700
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00387800
                   AIF   (K'&XDATAPRODNAME GT 0).ZG85B                  00387900
&ZXDATAPRODNAME    SETC  ''          RESET IN/OUTPUT                    00388000
&ZXPRODOWNER       SETC  ''          RESET IN/OUTPUT                    00388100
&XDATAPRODNAME     SETC  ''          ENSURE NULL                        00388200
&XPRODOWNER        SETC  ''          ENSURE NULL                        00388300
&ZMS               SETC  'ONE OF THE FOLLOWING'                         00388400
&ZMS               SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'            00388500
&ZMS               SETC  '&ZMS REQUIRED:'                               00388600
&ZMS               SETC  '&ZMS "PRODOWNER",'    VALID ME KEY            00388700
&ZMS               SETC  '&ZMS "PRTOKEN",'      VALID ME KEY            00388800
&ZMS               SETC  '&ZMS OR "PRTOKEN64".'  VALID ME KEY           00388900
                   MNOTE 8,' &ZMS '                                     00389000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00389100
.ZG85B             ANOP  ,                                              00389200
.*-------------------------------------------------------------------   00389300
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00389400
.ZG74ZY  AIF    ('&XDATAPRODNAME' NE 'PRODOWNER').ZG83ZY                00389500
.*-------------------------------------------------------------------   00389600
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00389700
                   AIF   (K'&ZXPRODOWNER LE 0).ZG74R  NOT I/O           00389800
                   AIF   ('&XPRODOWNER'(1,1) NE '(').ZG74R              00389900
&ZCGPR             SETC  '&XPRODOWNER'(2,K'&XPRODOWNER-2)               00390000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG74P                   00390100
                   AIF   (K'&ZCGPR GT 2).ZG74Q                          00390200
                   AIF   ('&ZCGPR' EQ '0').ZG74Q                        00390300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00390400
                   AIF   (T'&ZCGPR NE 'N').ZG74Q  INVALID REG NAME      00390500
.ZG74P             ANOP  ,                                              00390600
                   AIF   (T'&ZCGPR NE 'N').ZG74R  NON NUMERIC           00390700
                   AIF   ('&ZCGPR' LT '2').ZG74Q                        00390800
                   AIF   ('&ZCGPR' LE '12').ZG74R                       00390900
.ZG74Q             ANOP  ,                                              00391000
&ZMS               SETC  '"PRODOWNER='                                  00391100
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             00391200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00391300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00391400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00391500
.ZG74R             ANOP  ,                                              00391600
.*----------------------------------------------------------------***   00391700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00391800
                   AIF   (N'&PRODNAME LE 1).ZG76A  CK NUM               00391900
&ZMS               SETC  '"PRODNAME='                                   00392000
&ZMS               SETC  '&ZMS.&PRODNAME"'                              00392100
&ZMS               SETC  '&ZMS "PRODNAME"'                              00392200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00392300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00392400
.ZG76A             ANOP  ,                                              00392500
.*-------------------------------------------------------------------   00392600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00392700
&ZXPRODNAME        SETC  'INPUT'     SET IN/OUTPUT                      00392800
&XPRODNAME         SETC  '&PRODNAME(1)'         SET XVARIABLE           00392900
                   AIF   (N'&PRODNAME GT 1).ZG76B  MULTI                00393000
&XPRODNAME         SETC  '&PRODNAME'            SET XVARIABLE           00393100
.ZG76B             AIF   (K'&PRODNAME(1) GT 0).ZG76C                    00393200
&ZXPRODNAME        SETC  ''          RESET IN/OUTPUT                    00393300
&ZMS               SETC  ' '                                            00393400
&ZMS               SETC  '&ZMS "PRODNAME" KEY AND ITS'                  00393500
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00393600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00393700
.ZG76C             ANOP  ,                                              00393800
.*-------------------------------------------------------------------   00393900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00394000
                   AIF   (K'&ZXPRODNAME LE 0).ZG76R  NOT I/O            00394100
                   AIF   ('&XPRODNAME'(1,1) NE '(').ZG76R               00394200
&ZCGPR             SETC  '&XPRODNAME'(2,K'&XPRODNAME-2)                 00394300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG76P                   00394400
                   AIF   (K'&ZCGPR GT 2).ZG76Q                          00394500
                   AIF   ('&ZCGPR' EQ '0').ZG76Q                        00394600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00394700
                   AIF   (T'&ZCGPR NE 'N').ZG76Q  INVALID REG NAME      00394800
.ZG76P             ANOP  ,                                              00394900
                   AIF   (T'&ZCGPR NE 'N').ZG76R  NON NUMERIC           00395000
                   AIF   ('&ZCGPR' LT '2').ZG76Q                        00395100
                   AIF   ('&ZCGPR' LE '12').ZG76R                       00395200
.ZG76Q             ANOP  ,                                              00395300
&ZMS               SETC  '"PRODNAME='                                   00395400
&ZMS               SETC  '&ZMS.&PRODNAME"'                              00395500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00395600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00395700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00395800
.ZG76R             ANOP  ,                                              00395900
.*----------------------------------------------------------------***   00396000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00396100
                   AIF   (N'&PRODVERS LE 1).ZG79A  CK NUM               00396200
&ZMS               SETC  '"PRODVERS='                                   00396300
&ZMS               SETC  '&ZMS.&PRODVERS"'                              00396400
&ZMS               SETC  '&ZMS "PRODVERS"'                              00396500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00396600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00396700
.ZG79A             ANOP  ,                                              00396800
.*-------------------------------------------------------------------   00396900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00397000
&ZXPRODVERS        SETC  'INPUT'     SET IN/OUTPUT                      00397100
&XPRODVERS         SETC  'NONE'                                         00397200
                   AIF   (K'&PRODVERS(1) LE 0).ZG79B  PARM              00397300
&XPRODVERS         SETC  '&PRODVERS(1)'         SET XVARIABLE           00397400
                   AIF   (N'&PRODVERS GT 1).ZG79B  MULTI                00397500
&XPRODVERS         SETC  '&PRODVERS'            SET XVARIABLE           00397600
.ZG79B             ANOP  ,                                              00397700
.*-------------------------------------------------------------------   00397800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00397900
                   AIF   (K'&ZXPRODVERS LE 0).ZG79R  NOT I/O            00398000
                   AIF   ('&XPRODVERS'(1,1) NE '(').ZG79R               00398100
&ZCGPR             SETC  '&XPRODVERS'(2,K'&XPRODVERS-2)                 00398200
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG79P                   00398300
                   AIF   (K'&ZCGPR GT 2).ZG79Q                          00398400
                   AIF   ('&ZCGPR' EQ '0').ZG79Q                        00398500
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00398600
                   AIF   (T'&ZCGPR NE 'N').ZG79Q  INVALID REG NAME      00398700
.ZG79P             ANOP  ,                                              00398800
                   AIF   (T'&ZCGPR NE 'N').ZG79R  NON NUMERIC           00398900
                   AIF   ('&ZCGPR' LT '2').ZG79Q                        00399000
                   AIF   ('&ZCGPR' LE '12').ZG79R                       00399100
.ZG79Q             ANOP  ,                                              00399200
&ZMS               SETC  '"PRODVERS='                                   00399300
&ZMS               SETC  '&ZMS.&PRODVERS"'                              00399400
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00399500
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00399600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00399700
.ZG79R             ANOP  ,                                              00399800
.*----------------------------------------------------------------***   00399900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00400000
                   AIF   (N'&PRODQUAL LE 1).ZG80A  CK NUM               00400100
&ZMS               SETC  '"PRODQUAL='                                   00400200
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              00400300
&ZMS               SETC  '&ZMS "PRODQUAL"'                              00400400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00400500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00400600
.ZG80A             ANOP  ,                                              00400700
.*-------------------------------------------------------------------   00400800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00400900
&ZXPRODQUAL        SETC  'INPUT'     SET IN/OUTPUT                      00401000
&XPRODQUAL         SETC  'NONE'                                         00401100
                   AIF   (K'&PRODQUAL(1) LE 0).ZG80B  PARM              00401200
&XPRODQUAL         SETC  '&PRODQUAL(1)'         SET XVARIABLE           00401300
                   AIF   (N'&PRODQUAL GT 1).ZG80B  MULTI                00401400
&XPRODQUAL         SETC  '&PRODQUAL'            SET XVARIABLE           00401500
.ZG80B             ANOP  ,                                              00401600
.*-------------------------------------------------------------------   00401700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00401800
                   AIF   (K'&ZXPRODQUAL LE 0).ZG80R  NOT I/O            00401900
                   AIF   ('&XPRODQUAL'(1,1) NE '(').ZG80R               00402000
&ZCGPR             SETC  '&XPRODQUAL'(2,K'&XPRODQUAL-2)                 00402100
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG80P                   00402200
                   AIF   (K'&ZCGPR GT 2).ZG80Q                          00402300
                   AIF   ('&ZCGPR' EQ '0').ZG80Q                        00402400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00402500
                   AIF   (T'&ZCGPR NE 'N').ZG80Q  INVALID REG NAME      00402600
.ZG80P             ANOP  ,                                              00402700
                   AIF   (T'&ZCGPR NE 'N').ZG80R  NON NUMERIC           00402800
                   AIF   ('&ZCGPR' LT '2').ZG80Q                        00402900
                   AIF   ('&ZCGPR' LE '12').ZG80R                       00403000
.ZG80Q             ANOP  ,                                              00403100
&ZMS               SETC  '"PRODQUAL='                                   00403200
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              00403300
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00403400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00403500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00403600
.ZG80R             ANOP  ,                                              00403700
.*----------------------------------------------------------------***   00403800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00403900
                   AIF   (N'&PRODID LE 1).ZG81A  CK NUM                 00404000
&ZMS               SETC  '"PRODID='                                     00404100
&ZMS               SETC  '&ZMS.&PRODID"'                                00404200
&ZMS               SETC  '&ZMS "PRODID"'                                00404300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00404400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00404500
.ZG81A             ANOP  ,                                              00404600
.*-------------------------------------------------------------------   00404700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00404800
&ZXPRODID          SETC  'INPUT'     SET IN/OUTPUT                      00404900
&XPRODID           SETC  'NONE'                                         00405000
                   AIF   (K'&PRODID(1) LE 0).ZG81B  PARM                00405100
&XPRODID           SETC  '&PRODID(1)'           SET XVARIABLE           00405200
                   AIF   (N'&PRODID GT 1).ZG81B  MULTI                  00405300
&XPRODID           SETC  '&PRODID'   SET XVARIABLE                      00405400
.ZG81B             ANOP  ,                                              00405500
.*-------------------------------------------------------------------   00405600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00405700
                   AIF   (K'&ZXPRODID LE 0).ZG81R  NOT I/O              00405800
                   AIF   ('&XPRODID'(1,1) NE '(').ZG81R                 00405900
&ZCGPR             SETC  '&XPRODID'(2,K'&XPRODID-2)                     00406000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG81P                   00406100
                   AIF   (K'&ZCGPR GT 2).ZG81Q                          00406200
                   AIF   ('&ZCGPR' EQ '0').ZG81Q                        00406300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00406400
                   AIF   (T'&ZCGPR NE 'N').ZG81Q  INVALID REG NAME      00406500
.ZG81P             ANOP  ,                                              00406600
                   AIF   (T'&ZCGPR NE 'N').ZG81R  NON NUMERIC           00406700
                   AIF   ('&ZCGPR' LT '2').ZG81Q                        00406800
                   AIF   ('&ZCGPR' LE '12').ZG81R                       00406900
.ZG81Q             ANOP  ,                                              00407000
&ZMS               SETC  '"PRODID='                                     00407100
&ZMS               SETC  '&ZMS.&PRODID"'                                00407200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00407300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00407400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00407500
.ZG81R             ANOP  ,                                              00407600
.*-------------------------------------------------------------------   00407700
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00407800
.ZG83ZY  AIF    ('&XDATAPRODNAME' NE 'PRTOKEN').ZG84ZY                  00407900
.*-------------------------------------------------------------------   00408000
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                00408100
&ZCVAL             SETC ''           ERROR KEY FIELD                    00408200
.ZG83I0            AIF   (K'&PRODNAME LE 0).ZG83I1                      00408300
&ZCVAL             SETC '&ZCVAL PRODNAME'       DISALLOWED KEY          00408400
.ZG83I1            AIF   (K'&PRODVERS LE 0).ZG83I2                      00408500
&ZCVAL             SETC '&ZCVAL PRODVERS'       DISALLOWED KEY          00408600
.ZG83I2            AIF   (K'&PRODQUAL LE 0).ZG83I3                      00408700
&ZCVAL             SETC '&ZCVAL PRODQUAL'       DISALLOWED KEY          00408800
.ZG83I3            AIF   (K'&PRODID LE 0).ZG83I4                        00408900
&ZCVAL             SETC '&ZCVAL PRODID'         DISALLOWED KEY          00409000
.ZG83I4            AIF   (K'&ZCVAL LE 0).ZG83J  KEY                     00409100
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00409200
&ZMS               SETC  '"PRTOKEN'                                     00409300
&ZMS               SETC  '&ZMS.=&PRTOKEN"'                              00409400
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00409500
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00409600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00409700
.ZG83J             ANOP  ,                                              00409800
.*-------------------------------------------------------------------   00409900
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00410000
                   AIF   (K'&ZXPRTOKEN LE 0).ZG83R  NOT I/O             00410100
                   AIF   ('&XPRTOKEN'(1,1) NE '(').ZG83R                00410200
&ZCGPR             SETC  '&XPRTOKEN'(2,K'&XPRTOKEN-2)                   00410300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG83P                   00410400
                   AIF   (K'&ZCGPR GT 2).ZG83Q                          00410500
                   AIF   ('&ZCGPR' EQ '0').ZG83Q                        00410600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00410700
                   AIF   (T'&ZCGPR NE 'N').ZG83Q  INVALID REG NAME      00410800
.ZG83P             ANOP  ,                                              00410900
                   AIF   (T'&ZCGPR NE 'N').ZG83R  NON NUMERIC           00411000
                   AIF   ('&ZCGPR' LT '2').ZG83Q                        00411100
                   AIF   ('&ZCGPR' LE '12').ZG83R                       00411200
.ZG83Q             ANOP  ,                                              00411300
&ZMS               SETC  '"PRTOKEN='                                    00411400
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               00411500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00411600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00411700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00411800
.ZG83R             ANOP  ,                                              00411900
.*-------------------------------------------------------------------   00412000
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00412100
.ZG84ZY  AIF    ('&XDATAPRODNAME' NE 'PRTOKEN64').ZG85ZY                00412200
.*-------------------------------------------------------------------   00412300
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                00412400
&ZCVAL             SETC ''           ERROR KEY FIELD                    00412500
.ZG84I0            AIF   (K'&PRODNAME LE 0).ZG84I1                      00412600
&ZCVAL             SETC '&ZCVAL PRODNAME'       DISALLOWED KEY          00412700
.ZG84I1            AIF   (K'&PRODVERS LE 0).ZG84I2                      00412800
&ZCVAL             SETC '&ZCVAL PRODVERS'       DISALLOWED KEY          00412900
.ZG84I2            AIF   (K'&PRODQUAL LE 0).ZG84I3                      00413000
&ZCVAL             SETC '&ZCVAL PRODQUAL'       DISALLOWED KEY          00413100
.ZG84I3            AIF   (K'&PRODID LE 0).ZG84I4                        00413200
&ZCVAL             SETC '&ZCVAL PRODID'         DISALLOWED KEY          00413300
.ZG84I4            AIF   (K'&ZCVAL LE 0).ZG84J  KEY                     00413400
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00413500
&ZMS               SETC  '"PRTOKEN64'                                   00413600
&ZMS               SETC  '&ZMS.=&PRTOKEN64"'                            00413700
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00413800
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00413900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00414000
.ZG84J             ANOP  ,                                              00414100
.*-------------------------------------------------------------------   00414200
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00414300
                   AIF   (K'&ZXPRTOKEN64 LE 0).ZG84R  NOT I/O           00414400
                   AIF   ('&XPRTOKEN64'(1,1) NE '(').ZG84R              00414500
&ZCGPR             SETC  '&XPRTOKEN64'(2,K'&XPRTOKEN64-2)               00414600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG84P                   00414700
                   AIF   (K'&ZCGPR GT 2).ZG84Q                          00414800
                   AIF   ('&ZCGPR' EQ '0').ZG84Q                        00414900
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00415000
                   AIF   (T'&ZCGPR NE 'N').ZG84Q  INVALID REG NAME      00415100
.ZG84P             ANOP  ,                                              00415200
                   AIF   (T'&ZCGPR NE 'N').ZG84R  NON NUMERIC           00415300
                   AIF   ('&ZCGPR' LT '2').ZG84Q                        00415400
                   AIF   ('&ZCGPR' LE '12').ZG84R                       00415500
.ZG84Q             ANOP  ,                                              00415600
&ZMS               SETC  '"PRTOKEN64='                                  00415700
&ZMS               SETC  '&ZMS.&PRTOKEN64"'                             00415800
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00415900
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00416000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00416100
.ZG84R             ANOP  ,                                              00416200
.*-------------------------------------------------------------------   00416300
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00416400
.ZG85ZY            ANOP ,            END MUTUALLY EXCLUSIVE KEYS        00416500
.*----------------------------------------------------------------***   00416600
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00416700
&XDUMMY3           SETC  ''          INITIALIZE XVARIABLE               00416800
                   AIF   (K'&DATA LE 0).ZG87C                           00416900
&ZXDUMMY3          SETC  'INPUT'     SET IN/OUTPUT                      00417000
&XDUMMY3           SETC  'DATA'      SET XVARIABLE                      00417100
&ZXDATA            SETC  'INPUT'     SET IN/OUTPUT                      00417200
&XDATA             SETC  '&DATA(1)'  SET XVARIABLE PARM                 00417300
                   AIF   (N'&DATA GT 1).ZG87A                           00417400
&XDATA             SETC  '&DATA'     SET XVARIABLE PARM                 00417500
.ZG87A             AIF   (N'&DATA LE 1).ZG87B   CK NUM                  00417600
&ZMS               SETC  '"DATA='                                       00417700
&ZMS               SETC  '&ZMS.&DATA"'                                  00417800
&ZMS               SETC  '&ZMS "DATA"'                                  00417900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00418000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00418100
.ZG87B             AIF   (K'&XDATA GT 0).ZG87C  ONE PARM                00418200
&ZXDUMMY3          SETC  ''          RESET IN/OUTPUT                    00418300
&ZXDATA            SETC  ''          RESET IN/OUTPUT                    00418400
&ZMS               SETC  ' '                                            00418500
&ZMS               SETC  '&ZMS "DATA" KEY AND ITS'                      00418600
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00418700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00418800
.ZG87C             ANOP  ,                                              00418900
.*----------------------------------------------------------------***   00419000
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00419100
                   AIF   (K'&DATA64 LE 0).ZG88D  NO ME KEY              00419200
                   AIF   (N'&DATA64 LE 1).ZG88A  CK NUM                 00419300
&ZMS               SETC  '"DATA64='                                     00419400
&ZMS               SETC  '&ZMS.&DATA64"'                                00419500
&ZMS               SETC  '&ZMS "DATA64"'                                00419600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00419700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00419800
.ZG88A             AIF   (K'&XDUMMY3 LE 0).ZG88B                        00419900
&ZMS               SETC  '"DATA64'                                      00420000
&ZMS               SETC  '&ZMS.=&DATA64"'                               00420100
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00420200
&ZMS               SETC  '&ZMS "&XDUMMY3"'                              00420300
                   MNOTE 8,' &ZMS KEY.'                                 00420400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00420500
                   AGO   .ZG88D                                         00420600
.*                                                                      00420700
.ZG88B             ANOP  ,                                              00420800
&ZXDUMMY3          SETC  'INPUT'     SET IN/OUTPUT                      00420900
&XDUMMY3           SETC  'DATA64'    SET XVARIABLE                      00421000
&ZXDATA64          SETC  'INPUT'     SET IN/OUTPUT                      00421100
&XDATA64           SETC  '&DATA64(1)'           SET XVARIABLE PARM      00421200
                   AIF   (N'&DATA64 GT 1).ZG88C                         00421300
&XDATA64           SETC  '&DATA64'   SET XVARIABLE PARM                 00421400
.ZG88C             AIF   (K'&XDATA64 GT 0).ZG88D  ONE PARM              00421500
&ZXDUMMY3          SETC  ''          RESET IN/OUTPUT                    00421600
&ZXDATA64          SETC  ''          RESET IN/OUTPUT                    00421700
&ZMS               SETC  ' '                                            00421800
&ZMS               SETC  '&ZMS "DATA64" KEY AND ITS'                    00421900
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00422000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00422100
.ZG88D             ANOP  ,                                              00422200
.*------------------------------------------------------------------    00422300
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00422400
                   AIF   (K'&XDUMMY3 GT 0).ZG89B                        00422500
&ZXDUMMY3          SETC  ''          RESET IN/OUTPUT                    00422600
&ZXDATA            SETC  ''          RESET IN/OUTPUT                    00422700
&XDUMMY3           SETC  ''          ENSURE NULL                        00422800
&XDATA             SETC  ''          ENSURE NULL                        00422900
&ZMS               SETC  'ONE OF THE FOLLOWING'                         00423000
&ZMS               SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'            00423100
&ZMS               SETC  '&ZMS REQUIRED:'                               00423200
&ZMS               SETC  '&ZMS "DATA"'          VALID ME KEY            00423300
&ZMS               SETC  '&ZMS OR "DATA64".'    VALID ME KEY            00423400
                   MNOTE 8,' &ZMS '                                     00423500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00423600
.ZG89B             ANOP  ,                                              00423700
.*-------------------------------------------------------------------   00423800
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00423900
.ZG87ZY  AIF    ('&XDUMMY3' NE 'DATA').ZG88ZY                           00424000
.*-------------------------------------------------------------------   00424100
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00424200
                   AIF   (K'&ZXDATA LE 0).ZG87R  NOT I/O                00424300
                   AIF   ('&XDATA'(1,1) NE '(').ZG87R                   00424400
&ZCGPR             SETC  '&XDATA'(2,K'&XDATA-2)                         00424500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG87P                   00424600
                   AIF   (K'&ZCGPR GT 2).ZG87Q                          00424700
                   AIF   ('&ZCGPR' EQ '0').ZG87Q                        00424800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00424900
                   AIF   (T'&ZCGPR NE 'N').ZG87Q  INVALID REG NAME      00425000
.ZG87P             ANOP  ,                                              00425100
                   AIF   (T'&ZCGPR NE 'N').ZG87R  NON NUMERIC           00425200
                   AIF   ('&ZCGPR' LT '2').ZG87Q                        00425300
                   AIF   ('&ZCGPR' LE '12').ZG87R                       00425400
.ZG87Q             ANOP  ,                                              00425500
&ZMS               SETC  '"DATA='                                       00425600
&ZMS               SETC  '&ZMS.&DATA"'                                  00425700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00425800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00425900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00426000
.ZG87R             ANOP  ,                                              00426100
.*-------------------------------------------------------------------   00426200
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00426300
.ZG88ZY  AIF    ('&XDUMMY3' NE 'DATA64').ZG89ZY                         00426400
.*-------------------------------------------------------------------   00426500
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00426600
                   AIF   (K'&ZXDATA64 LE 0).ZG88R  NOT I/O              00426700
                   AIF   ('&XDATA64'(1,1) NE '(').ZG88R                 00426800
&ZCGPR             SETC  '&XDATA64'(2,K'&XDATA64-2)                     00426900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG88P                   00427000
                   AIF   (K'&ZCGPR GT 2).ZG88Q                          00427100
                   AIF   ('&ZCGPR' EQ '0').ZG88Q                        00427200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00427300
                   AIF   (T'&ZCGPR NE 'N').ZG88Q  INVALID REG NAME      00427400
.ZG88P             ANOP  ,                                              00427500
                   AIF   (T'&ZCGPR NE 'N').ZG88R  NON NUMERIC           00427600
                   AIF   ('&ZCGPR' LT '2').ZG88Q                        00427700
                   AIF   ('&ZCGPR' LE '12').ZG88R                       00427800
.ZG88Q             ANOP  ,                                              00427900
&ZMS               SETC  '"DATA64='                                     00428000
&ZMS               SETC  '&ZMS.&DATA64"'                                00428100
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00428200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00428300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00428400
.ZG88R             ANOP  ,                                              00428500
.*-------------------------------------------------------------------   00428600
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00428700
.ZG89ZY            ANOP ,            END MUTUALLY EXCLUSIVE KEYS        00428800
.*----------------------------------------------------------------***   00428900
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00429000
                   AIF   (N'&FORMAT LE 1).ZG91A  CK NUM                 00429100
&ZMS               SETC  '"FORMAT='                                     00429200
&ZMS               SETC  '&ZMS.&FORMAT"'                                00429300
&ZMS               SETC  '&ZMS "FORMAT"'                                00429400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00429500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00429600
.ZG91A             ANOP  ,                                              00429700
.*-------------------------------------------------------------------   00429800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00429900
&XFORMAT           SETC  ''          INITIALIZE XVARIABLE               00430000
.ZG92A   AIF   ('&FORMAT(1)' NE 'CPUTIME').ZG93A                        00430100
&XFORMAT           SETC  'CPUTIME'   SET KEYWORD                        00430200
.*-------------------------------------------------------------------   00430300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00430400
.ZG93A   AIF   ('&FORMAT(1)' NE 'BINARY').ZG94A                         00430500
&XFORMAT           SETC  'BINARY'    SET KEYWORD                        00430600
.*-------------------------------------------------------------------   00430700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00430800
.ZG94A   AIF   ('&FORMAT(1)' NE 'FLOAT').ZG95A                          00430900
&XFORMAT           SETC  'FLOAT'     SET KEYWORD                        00431000
.*-------------------------------------------------------------------   00431100
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00431200
.ZG95A             AIF   (K'&XFORMAT GT 0).ZG95C  KEYWORD               00431300
                   AIF   (K'&FORMAT(1) LE 0).ZG95B                      00431400
&ZMS               SETC  '"FORMAT='                                     00431500
&ZMS               SETC  '&ZMS.&FORMAT"'                                00431600
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00431700
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00431800
&ZMS               SETC  '&ZMS "CPUTIME",'                              00431900
&ZMS               SETC  '&ZMS "BINARY",'                               00432000
&ZMS               SETC  '&ZMS OR "FLOAT".'                             00432100
                   MNOTE 8,' &ZMS '                                     00432200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00432300
.ZG95B             ANOP  ,                                              00432400
&XFORMAT           SETC  'CPUTIME'   SET DEFAULT KEYWORD                00432500
.ZG95C             ANOP  ,                                              00432600
&ZXFORMAT          SETC  'INPUT'     SET IN/OUTPUT                      00432700
.*----------------------------------------------------------------***   00432800
.***AG.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE                     00432900
&XDUMMY4           SETC  ''          INITIALIZE XVARIABLE               00433000
                   AIF   (K'&CURRENTDATA LE 0).ZG97C                    00433100
&ZXDUMMY4          SETC  'OUTPUT'    SET IN/OUTPUT                      00433200
&XDUMMY4           SETC  'CURRENTDATA'          SET XVARIABLE           00433300
&ZXCURRENTDATA     SETC  'OUTPUT'    SET IN/OUTPUT                      00433400
&XCURRENTDATA      SETC  '&CURRENTDATA(1)'      SET XVARIABLE PARM      00433500
                   AIF   (N'&CURRENTDATA GT 1).ZG97A                    00433600
&XCURRENTDATA      SETC  '&CURRENTDATA'         SET XVARIABLE PARM      00433700
.ZG97A             AIF   (N'&CURRENTDATA LE 1).ZG97B  CK NUM            00433800
&ZMS               SETC  '"CURRENTDATA='                                00433900
&ZMS               SETC  '&ZMS.&CURRENTDATA"'                           00434000
&ZMS               SETC  '&ZMS "CURRENTDATA"'                           00434100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00434200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00434300
.ZG97B             AIF   (K'&XCURRENTDATA GT 0).ZG97C  ONE PARM         00434400
&ZXDUMMY4          SETC  ''          RESET IN/OUTPUT                    00434500
&ZXCURRENTDATA     SETC  ''          RESET IN/OUTPUT                    00434600
&ZMS               SETC  ' '                                            00434700
&ZMS               SETC  '&ZMS "CURRENTDATA" KEY AND ITS'               00434800
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00434900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00435000
.ZG97C             ANOP  ,                                              00435100
.*----------------------------------------------------------------***   00435200
.***AG.KMEKY02 NAME, OPT OUTPUT, ME KEYS -XVARIABLE                     00435300
                   AIF   (K'&CURRENTDATA64 LE 0).ZG98D  NO ME KEY       00435400
                   AIF   (N'&CURRENTDATA64 LE 1).ZG98A  CK NUM          00435500
&ZMS               SETC  '"CURRENTDATA64='                              00435600
&ZMS               SETC  '&ZMS.&CURRENTDATA64"'                         00435700
&ZMS               SETC  '&ZMS "CURRENTDATA64"'                         00435800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00435900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00436000
.ZG98A             AIF   (K'&XDUMMY4 LE 0).ZG98B                        00436100
&ZMS               SETC  '"CURRENTDATA64'                               00436200
&ZMS               SETC  '&ZMS.=&CURRENTDATA64"'                        00436300
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00436400
&ZMS               SETC  '&ZMS "&XDUMMY4"'                              00436500
                   MNOTE 8,' &ZMS KEY.'                                 00436600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00436700
                   AGO   .ZG98D                                         00436800
.*                                                                      00436900
.ZG98B             ANOP  ,                                              00437000
&ZXDUMMY4          SETC  'OUTPUT'    SET IN/OUTPUT                      00437100
&XDUMMY4           SETC  'CURRENTDATA64'        SET XVARIABLE           00437200
&ZXCURRENTDATA64   SETC  'OUTPUT'    SET IN/OUTPUT                      00437300
&XCURRENTDATA64    SETC  '&CURRENTDATA64(1)'    SET XVARIABLE PARM      00437400
                   AIF   (N'&CURRENTDATA64 GT 1).ZG98C                  00437500
&XCURRENTDATA64    SETC  '&CURRENTDATA64'       SET XVARIABLE PARM      00437600
.ZG98C             AIF   (K'&XCURRENTDATA64 GT 0).ZG98D  ONE PARM       00437700
&ZXDUMMY4          SETC  ''          RESET IN/OUTPUT                    00437800
&ZXCURRENTDATA64   SETC  ''          RESET IN/OUTPUT                    00437900
&ZMS               SETC  ' '                                            00438000
&ZMS               SETC  '&ZMS "CURRENTDATA64" KEY AND ITS'             00438100
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00438200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00438300
.ZG98D             ANOP  ,                                              00438400
.*------------------------------------------------------------------    00438500
.***AG.KMEKY08 NAME, OPT OUTPUT, ME KEYS -CHECK IF KEY ENTERED          00438600
                   AIF   (K'&XDUMMY4 GT 0).ZG99B                        00438700
&ZXDUMMY4          SETC  ''          RESET IN/OUTPUT                    00438800
&XDUMMY4           SETC  'CURRENTDATA'          SET DEFAULT             00438900
.ZG99B             ANOP  ,                                              00439000
.*-------------------------------------------------------------------   00439100
.***AG.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00439200
                   AIF   (K'&ZXCURRENTDATA64 LE 0).ZG99R  NOT I/O       00439300
                   AIF   ('&XCURRENTDATA64'(1,1) NE '(').ZG99R          00439400
&ZCGPR             SETC  '&XCURRENTDATA64'(2,K'&XCURRENTDATA64-2)       00439500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG99P                   00439600
                   AIF   (K'&ZCGPR GT 2).ZG99Q                          00439700
                   AIF   ('&ZCGPR' EQ '0').ZG99Q                        00439800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00439900
                   AIF   (T'&ZCGPR NE 'N').ZG99Q  INVALID REG NAME      00440000
.ZG99P             ANOP  ,                                              00440100
                   AIF   (T'&ZCGPR NE 'N').ZG99R  NON NUMERIC           00440200
                   AIF   ('&ZCGPR' LT '2').ZG99Q                        00440300
                   AIF   ('&ZCGPR' LE '12').ZG99R                       00440400
.ZG99Q             ANOP  ,                                              00440500
&ZMS               SETC  '"CURRENTDATA64='                              00440600
&ZMS               SETC  '&ZMS.&CURRENTDATA64"'                         00440700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00440800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00440900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00441000
.ZG99R             ANOP  ,                                              00441100
.*-------------------------------------------------------------------   00441200
.***AG.KMEKY13 NAME, OPT OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00441300
.ZG97ZY  AIF    ('&XDUMMY4' NE 'CURRENTDATA').ZG98ZY                    00441400
.*-------------------------------------------------------------------   00441500
.***AG.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00441600
                   AIF   (K'&ZXCURRENTDATA LE 0).ZG97R  NOT I/O         00441700
                   AIF   ('&XCURRENTDATA'(1,1) NE '(').ZG97R            00441800
&ZCGPR             SETC  '&XCURRENTDATA'(2,K'&XCURRENTDATA-2)           00441900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG97P                   00442000
                   AIF   (K'&ZCGPR GT 2).ZG97Q                          00442100
                   AIF   ('&ZCGPR' EQ '0').ZG97Q                        00442200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00442300
                   AIF   (T'&ZCGPR NE 'N').ZG97Q  INVALID REG NAME      00442400
.ZG97P             ANOP  ,                                              00442500
                   AIF   (T'&ZCGPR NE 'N').ZG97R  NON NUMERIC           00442600
                   AIF   ('&ZCGPR' LT '2').ZG97Q                        00442700
                   AIF   ('&ZCGPR' LE '12').ZG97R                       00442800
.ZG97Q             ANOP  ,                                              00442900
&ZMS               SETC  '"CURRENTDATA='                                00443000
&ZMS               SETC  '&ZMS.&CURRENTDATA"'                           00443100
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00443200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00443300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00443400
.ZG97R             ANOP  ,                                              00443500
.*-------------------------------------------------------------------   00443600
.***AG.KMEKY13 NAME, OPT OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00443700
.ZG98ZY  AIF    ('&XDUMMY4' NE 'CURRENTDATA64').ZG99ZY                  00443800
.*-------------------------------------------------------------------   00443900
.***AG.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00444000
                   AIF   (K'&ZXCURRENTDATA64 LE 0).ZG98R  NOT I/O       00444100
                   AIF   ('&XCURRENTDATA64'(1,1) NE '(').ZG98R          00444200
&ZCGPR             SETC  '&XCURRENTDATA64'(2,K'&XCURRENTDATA64-2)       00444300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG98P                   00444400
                   AIF   (K'&ZCGPR GT 2).ZG98Q                          00444500
                   AIF   ('&ZCGPR' EQ '0').ZG98Q                        00444600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00444700
                   AIF   (T'&ZCGPR NE 'N').ZG98Q  INVALID REG NAME      00444800
.ZG98P             ANOP  ,                                              00444900
                   AIF   (T'&ZCGPR NE 'N').ZG98R  NON NUMERIC           00445000
                   AIF   ('&ZCGPR' LT '2').ZG98Q                        00445100
                   AIF   ('&ZCGPR' LE '12').ZG98R                       00445200
.ZG98Q             ANOP  ,                                              00445300
&ZMS               SETC  '"CURRENTDATA64='                              00445400
&ZMS               SETC  '&ZMS.&CURRENTDATA64"'                         00445500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00445600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00445700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00445800
.ZG98R             ANOP  ,                                              00445900
.*-------------------------------------------------------------------   00446000
.***AG.KMEKY15 NAME, OPT OUTPUT, ME KEYS -END                           00446100
.ZG99ZY            ANOP ,            END MUTUALLY EXCLUSIVE KEYS        00446200
.*-------------------------------------------------------------------   00446300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00446400
.ZG100             ANOP  ,                                              00446500
&ZTLC              SETC 'FUNCTIONEND'                                   00446600
                   AIF   ('&REQUEST(1)' NE '&ZTLC').ZG122               00446700
&XREQUEST          SETC  'FUNCTIONEND'          SET KEYWORD             00446800
                   AIF   (N'&REQUEST LE 1).ZG100A  CK NUM               00446900
&ZMS               SETC  '"REQUEST='                                    00447000
&ZMS               SETC  '&ZMS.&REQUEST"'                               00447100
&ZMS               SETC  '&ZMS "REQUEST"'                               00447200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00447300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00447400
.ZG100A            ANOP  ,                                              00447500
.*------------------------------------------------------------------    00447600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00447700
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00447800
.ZG100A0           AIF   (K'&DOMAIN LE 0).ZG100A1  OK                   00447900
&ZCVAL             SETC '&ZCVAL DOMAIN'         INCORRECT KEY USED      00448000
.ZG100A1           AIF   (K'&SCOPE LE 0).ZG100A2  OK                    00448100
&ZCVAL             SETC '&ZCVAL SCOPE'          INCORRECT KEY USED      00448200
.ZG100A2           AIF   (K'&UNAUTHSERV LE 0).ZG100A3  OK               00448300
&ZCVAL             SETC '&ZCVAL UNAUTHSERV'     INCORRECT KEY USED      00448400
.ZG100A3           AIF   (K'&BEGTIME LE 0).ZG100A4  OK                  00448500
&ZCVAL             SETC '&ZCVAL BEGTIME'        INCORRECT KEY USED      00448600
.ZG100A4           AIF   (K'&BEGTIME64 LE 0).ZG100A5  OK                00448700
&ZCVAL             SETC '&ZCVAL BEGTIME64'      INCORRECT KEY USED      00448800
.ZG100A5           AIF   (K'&DATA LE 0).ZG100A6  OK                     00448900
&ZCVAL             SETC '&ZCVAL DATA'           INCORRECT KEY USED      00449000
.ZG100A6           AIF   (K'&DATA64 LE 0).ZG100A7  OK                   00449100
&ZCVAL             SETC '&ZCVAL DATA64'         INCORRECT KEY USED      00449200
.ZG100A7           AIF   (K'&FORMAT LE 0).ZG100A8  OK                   00449300
&ZCVAL             SETC '&ZCVAL FORMAT'         INCORRECT KEY USED      00449400
.ZG100A8           AIF   (K'&CURRENTDATA LE 0).ZG100A9  OK              00449500
&ZCVAL             SETC '&ZCVAL CURRENTDATA'    INCORRECT KEY USED      00449600
.ZG100A9           AIF   (K'&CURRENTDATA64 LE 0).ZG100A10  OK           00449700
&ZCVAL             SETC '&ZCVAL CURRENTDATA64'  INCORRECT KEY USED      00449800
.ZG100A10          AIF   (K'&ZCVAL LE 0).ZG100A11  OK                   00449900
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00450000
&ZMS               SETC  '"REQUEST'                                     00450100
&ZMS               SETC  '&ZMS.=&REQUEST"'                              00450200
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00450300
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00450400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00450500
.ZG100A11          ANOP  ,                                              00450600
.*----------------------------------------------------------------***   00450700
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00450800
&XENDPRODNAME      SETC  ''          INITIALIZE XVARIABLE               00450900
                   AIF   (K'&PRODOWNER LE 0).ZG102C                     00451000
&ZXENDPRODNAME     SETC  'INPUT'     SET IN/OUTPUT                      00451100
&XENDPRODNAME      SETC  'PRODOWNER'            SET XVARIABLE           00451200
&ZXPRODOWNER       SETC  'INPUT'     SET IN/OUTPUT                      00451300
&XPRODOWNER        SETC  '&PRODOWNER(1)'        SET XVARIABLE PARM      00451400
                   AIF   (N'&PRODOWNER GT 1).ZG102A                     00451500
&XPRODOWNER        SETC  '&PRODOWNER'           SET XVARIABLE PARM      00451600
.ZG102A            AIF   (N'&PRODOWNER LE 1).ZG102B  CK NUM             00451700
&ZMS               SETC  '"PRODOWNER='                                  00451800
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             00451900
&ZMS               SETC  '&ZMS "PRODOWNER"'                             00452000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00452100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00452200
.ZG102B            AIF   (K'&XPRODOWNER GT 0).ZG102C  ONE PARM          00452300
&ZXENDPRODNAME     SETC  ''          RESET IN/OUTPUT                    00452400
&ZXPRODOWNER       SETC  ''          RESET IN/OUTPUT                    00452500
&ZMS               SETC  ' '                                            00452600
&ZMS               SETC  '&ZMS "PRODOWNER" KEY AND ITS'                 00452700
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00452800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00452900
.ZG102C            ANOP  ,                                              00453000
.*----------------------------------------------------------------***   00453100
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00453200
                   AIF   (K'&PRTOKEN LE 0).ZG111D  NO ME KEY            00453300
                   AIF   (N'&PRTOKEN LE 1).ZG111A  CK NUM               00453400
&ZMS               SETC  '"PRTOKEN='                                    00453500
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               00453600
&ZMS               SETC  '&ZMS "PRTOKEN"'                               00453700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00453800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00453900
.ZG111A            AIF   (K'&XENDPRODNAME LE 0).ZG111B                  00454000
&ZMS               SETC  '"PRTOKEN'                                     00454100
&ZMS               SETC  '&ZMS.=&PRTOKEN"'                              00454200
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00454300
&ZMS               SETC  '&ZMS "&XENDPRODNAME"'                         00454400
                   MNOTE 8,' &ZMS KEY.'                                 00454500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00454600
                   AGO   .ZG111D                                        00454700
.*                                                                      00454800
.ZG111B            ANOP  ,                                              00454900
&ZXENDPRODNAME     SETC  'INPUT'     SET IN/OUTPUT                      00455000
&XENDPRODNAME      SETC  'PRTOKEN'   SET XVARIABLE                      00455100
&ZXPRTOKEN         SETC  'INPUT'     SET IN/OUTPUT                      00455200
&XPRTOKEN          SETC  '&PRTOKEN(1)'          SET XVARIABLE PARM      00455300
                   AIF   (N'&PRTOKEN GT 1).ZG111C                       00455400
&XPRTOKEN          SETC  '&PRTOKEN'  SET XVARIABLE PARM                 00455500
.ZG111C            AIF   (K'&XPRTOKEN GT 0).ZG111D  ONE PARM            00455600
&ZXENDPRODNAME     SETC  ''          RESET IN/OUTPUT                    00455700
&ZXPRTOKEN         SETC  ''          RESET IN/OUTPUT                    00455800
&ZMS               SETC  ' '                                            00455900
&ZMS               SETC  '&ZMS "PRTOKEN" KEY AND ITS'                   00456000
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00456100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00456200
.ZG111D            ANOP  ,                                              00456300
.*----------------------------------------------------------------***   00456400
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00456500
                   AIF   (K'&PRTOKEN64 LE 0).ZG112D  NO ME KEY          00456600
                   AIF   (N'&PRTOKEN64 LE 1).ZG112A  CK NUM             00456700
&ZMS               SETC  '"PRTOKEN64='                                  00456800
&ZMS               SETC  '&ZMS.&PRTOKEN64"'                             00456900
&ZMS               SETC  '&ZMS "PRTOKEN64"'                             00457000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00457100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00457200
.ZG112A            AIF   (K'&XENDPRODNAME LE 0).ZG112B                  00457300
&ZMS               SETC  '"PRTOKEN64'                                   00457400
&ZMS               SETC  '&ZMS.=&PRTOKEN64"'                            00457500
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00457600
&ZMS               SETC  '&ZMS "&XENDPRODNAME"'                         00457700
                   MNOTE 8,' &ZMS KEY.'                                 00457800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00457900
                   AGO   .ZG112D                                        00458000
.*                                                                      00458100
.ZG112B            ANOP  ,                                              00458200
&ZXENDPRODNAME     SETC  'INPUT'     SET IN/OUTPUT                      00458300
&XENDPRODNAME      SETC  'PRTOKEN64'            SET XVARIABLE           00458400
&ZXPRTOKEN64       SETC  'INPUT'     SET IN/OUTPUT                      00458500
&XPRTOKEN64        SETC  '&PRTOKEN64(1)'        SET XVARIABLE PARM      00458600
                   AIF   (N'&PRTOKEN64 GT 1).ZG112C                     00458700
&XPRTOKEN64        SETC  '&PRTOKEN64'           SET XVARIABLE PARM      00458800
.ZG112C            AIF   (K'&XPRTOKEN64 GT 0).ZG112D  ONE PARM          00458900
&ZXENDPRODNAME     SETC  ''          RESET IN/OUTPUT                    00459000
&ZXPRTOKEN64       SETC  ''          RESET IN/OUTPUT                    00459100
&ZMS               SETC  ' '                                            00459200
&ZMS               SETC  '&ZMS "PRTOKEN64" KEY AND ITS'                 00459300
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00459400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00459500
.ZG112D            ANOP  ,                                              00459600
.*------------------------------------------------------------------    00459700
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00459800
                   AIF   (K'&XENDPRODNAME GT 0).ZG113B                  00459900
&ZXENDPRODNAME     SETC  ''          RESET IN/OUTPUT                    00460000
&ZXPRODOWNER       SETC  ''          RESET IN/OUTPUT                    00460100
&XENDPRODNAME      SETC  ''          ENSURE NULL                        00460200
&XPRODOWNER        SETC  ''          ENSURE NULL                        00460300
&ZMS               SETC  'ONE OF THE FOLLOWING'                         00460400
&ZMS               SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'            00460500
&ZMS               SETC  '&ZMS REQUIRED:'                               00460600
&ZMS               SETC  '&ZMS "PRODOWNER",'    VALID ME KEY            00460700
&ZMS               SETC  '&ZMS "PRTOKEN",'      VALID ME KEY            00460800
&ZMS               SETC  '&ZMS OR "PRTOKEN64".'  VALID ME KEY           00460900
                   MNOTE 8,' &ZMS '                                     00461000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00461100
.ZG113B            ANOP  ,                                              00461200
.*-------------------------------------------------------------------   00461300
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00461400
.ZG102ZY  AIF    ('&XENDPRODNAME' NE 'PRODOWNER').ZG111ZY               00461500
.*-------------------------------------------------------------------   00461600
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00461700
                   AIF   (K'&ZXPRODOWNER LE 0).ZG102R  NOT I/O          00461800
                   AIF   ('&XPRODOWNER'(1,1) NE '(').ZG102R             00461900
&ZCGPR             SETC  '&XPRODOWNER'(2,K'&XPRODOWNER-2)               00462000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG102P                  00462100
                   AIF   (K'&ZCGPR GT 2).ZG102Q                         00462200
                   AIF   ('&ZCGPR' EQ '0').ZG102Q                       00462300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00462400
                   AIF   (T'&ZCGPR NE 'N').ZG102Q  INVALID REG NAME     00462500
.ZG102P            ANOP  ,                                              00462600
                   AIF   (T'&ZCGPR NE 'N').ZG102R  NON NUMERIC          00462700
                   AIF   ('&ZCGPR' LT '2').ZG102Q                       00462800
                   AIF   ('&ZCGPR' LE '12').ZG102R                      00462900
.ZG102Q            ANOP  ,                                              00463000
&ZMS               SETC  '"PRODOWNER='                                  00463100
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             00463200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00463300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00463400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00463500
.ZG102R            ANOP  ,                                              00463600
.*----------------------------------------------------------------***   00463700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00463800
                   AIF   (N'&PRODNAME LE 1).ZG104A  CK NUM              00463900
&ZMS               SETC  '"PRODNAME='                                   00464000
&ZMS               SETC  '&ZMS.&PRODNAME"'                              00464100
&ZMS               SETC  '&ZMS "PRODNAME"'                              00464200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00464300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00464400
.ZG104A            ANOP  ,                                              00464500
.*-------------------------------------------------------------------   00464600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00464700
&ZXPRODNAME        SETC  'INPUT'     SET IN/OUTPUT                      00464800
&XPRODNAME         SETC  '&PRODNAME(1)'         SET XVARIABLE           00464900
                   AIF   (N'&PRODNAME GT 1).ZG104B  MULTI               00465000
&XPRODNAME         SETC  '&PRODNAME'            SET XVARIABLE           00465100
.ZG104B            AIF   (K'&PRODNAME(1) GT 0).ZG104C                   00465200
&ZXPRODNAME        SETC  ''          RESET IN/OUTPUT                    00465300
&ZMS               SETC  ' '                                            00465400
&ZMS               SETC  '&ZMS "PRODNAME" KEY AND ITS'                  00465500
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00465600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00465700
.ZG104C            ANOP  ,                                              00465800
.*-------------------------------------------------------------------   00465900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00466000
                   AIF   (K'&ZXPRODNAME LE 0).ZG104R  NOT I/O           00466100
                   AIF   ('&XPRODNAME'(1,1) NE '(').ZG104R              00466200
&ZCGPR             SETC  '&XPRODNAME'(2,K'&XPRODNAME-2)                 00466300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG104P                  00466400
                   AIF   (K'&ZCGPR GT 2).ZG104Q                         00466500
                   AIF   ('&ZCGPR' EQ '0').ZG104Q                       00466600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00466700
                   AIF   (T'&ZCGPR NE 'N').ZG104Q  INVALID REG NAME     00466800
.ZG104P            ANOP  ,                                              00466900
                   AIF   (T'&ZCGPR NE 'N').ZG104R  NON NUMERIC          00467000
                   AIF   ('&ZCGPR' LT '2').ZG104Q                       00467100
                   AIF   ('&ZCGPR' LE '12').ZG104R                      00467200
.ZG104Q            ANOP  ,                                              00467300
&ZMS               SETC  '"PRODNAME='                                   00467400
&ZMS               SETC  '&ZMS.&PRODNAME"'                              00467500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00467600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00467700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00467800
.ZG104R            ANOP  ,                                              00467900
.*----------------------------------------------------------------***   00468000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00468100
                   AIF   (N'&PRODVERS LE 1).ZG107A  CK NUM              00468200
&ZMS               SETC  '"PRODVERS='                                   00468300
&ZMS               SETC  '&ZMS.&PRODVERS"'                              00468400
&ZMS               SETC  '&ZMS "PRODVERS"'                              00468500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00468600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00468700
.ZG107A            ANOP  ,                                              00468800
.*-------------------------------------------------------------------   00468900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00469000
&ZXPRODVERS        SETC  'INPUT'     SET IN/OUTPUT                      00469100
&XPRODVERS         SETC  'NONE'                                         00469200
                   AIF   (K'&PRODVERS(1) LE 0).ZG107B  PARM             00469300
&XPRODVERS         SETC  '&PRODVERS(1)'         SET XVARIABLE           00469400
                   AIF   (N'&PRODVERS GT 1).ZG107B  MULTI               00469500
&XPRODVERS         SETC  '&PRODVERS'            SET XVARIABLE           00469600
.ZG107B            ANOP  ,                                              00469700
.*-------------------------------------------------------------------   00469800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00469900
                   AIF   (K'&ZXPRODVERS LE 0).ZG107R  NOT I/O           00470000
                   AIF   ('&XPRODVERS'(1,1) NE '(').ZG107R              00470100
&ZCGPR             SETC  '&XPRODVERS'(2,K'&XPRODVERS-2)                 00470200
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG107P                  00470300
                   AIF   (K'&ZCGPR GT 2).ZG107Q                         00470400
                   AIF   ('&ZCGPR' EQ '0').ZG107Q                       00470500
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00470600
                   AIF   (T'&ZCGPR NE 'N').ZG107Q  INVALID REG NAME     00470700
.ZG107P            ANOP  ,                                              00470800
                   AIF   (T'&ZCGPR NE 'N').ZG107R  NON NUMERIC          00470900
                   AIF   ('&ZCGPR' LT '2').ZG107Q                       00471000
                   AIF   ('&ZCGPR' LE '12').ZG107R                      00471100
.ZG107Q            ANOP  ,                                              00471200
&ZMS               SETC  '"PRODVERS='                                   00471300
&ZMS               SETC  '&ZMS.&PRODVERS"'                              00471400
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00471500
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00471600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00471700
.ZG107R            ANOP  ,                                              00471800
.*----------------------------------------------------------------***   00471900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00472000
                   AIF   (N'&PRODQUAL LE 1).ZG108A  CK NUM              00472100
&ZMS               SETC  '"PRODQUAL='                                   00472200
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              00472300
&ZMS               SETC  '&ZMS "PRODQUAL"'                              00472400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00472500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00472600
.ZG108A            ANOP  ,                                              00472700
.*-------------------------------------------------------------------   00472800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00472900
&ZXPRODQUAL        SETC  'INPUT'     SET IN/OUTPUT                      00473000
&XPRODQUAL         SETC  'NONE'                                         00473100
                   AIF   (K'&PRODQUAL(1) LE 0).ZG108B  PARM             00473200
&XPRODQUAL         SETC  '&PRODQUAL(1)'         SET XVARIABLE           00473300
                   AIF   (N'&PRODQUAL GT 1).ZG108B  MULTI               00473400
&XPRODQUAL         SETC  '&PRODQUAL'            SET XVARIABLE           00473500
.ZG108B            ANOP  ,                                              00473600
.*-------------------------------------------------------------------   00473700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00473800
                   AIF   (K'&ZXPRODQUAL LE 0).ZG108R  NOT I/O           00473900
                   AIF   ('&XPRODQUAL'(1,1) NE '(').ZG108R              00474000
&ZCGPR             SETC  '&XPRODQUAL'(2,K'&XPRODQUAL-2)                 00474100
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG108P                  00474200
                   AIF   (K'&ZCGPR GT 2).ZG108Q                         00474300
                   AIF   ('&ZCGPR' EQ '0').ZG108Q                       00474400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00474500
                   AIF   (T'&ZCGPR NE 'N').ZG108Q  INVALID REG NAME     00474600
.ZG108P            ANOP  ,                                              00474700
                   AIF   (T'&ZCGPR NE 'N').ZG108R  NON NUMERIC          00474800
                   AIF   ('&ZCGPR' LT '2').ZG108Q                       00474900
                   AIF   ('&ZCGPR' LE '12').ZG108R                      00475000
.ZG108Q            ANOP  ,                                              00475100
&ZMS               SETC  '"PRODQUAL='                                   00475200
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              00475300
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00475400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00475500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00475600
.ZG108R            ANOP  ,                                              00475700
.*----------------------------------------------------------------***   00475800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00475900
                   AIF   (N'&PRODID LE 1).ZG109A  CK NUM                00476000
&ZMS               SETC  '"PRODID='                                     00476100
&ZMS               SETC  '&ZMS.&PRODID"'                                00476200
&ZMS               SETC  '&ZMS "PRODID"'                                00476300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00476400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00476500
.ZG109A            ANOP  ,                                              00476600
.*-------------------------------------------------------------------   00476700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00476800
&ZXPRODID          SETC  'INPUT'     SET IN/OUTPUT                      00476900
&XPRODID           SETC  'NONE'                                         00477000
                   AIF   (K'&PRODID(1) LE 0).ZG109B  PARM               00477100
&XPRODID           SETC  '&PRODID(1)'           SET XVARIABLE           00477200
                   AIF   (N'&PRODID GT 1).ZG109B  MULTI                 00477300
&XPRODID           SETC  '&PRODID'   SET XVARIABLE                      00477400
.ZG109B            ANOP  ,                                              00477500
.*-------------------------------------------------------------------   00477600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00477700
                   AIF   (K'&ZXPRODID LE 0).ZG109R  NOT I/O             00477800
                   AIF   ('&XPRODID'(1,1) NE '(').ZG109R                00477900
&ZCGPR             SETC  '&XPRODID'(2,K'&XPRODID-2)                     00478000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG109P                  00478100
                   AIF   (K'&ZCGPR GT 2).ZG109Q                         00478200
                   AIF   ('&ZCGPR' EQ '0').ZG109Q                       00478300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00478400
                   AIF   (T'&ZCGPR NE 'N').ZG109Q  INVALID REG NAME     00478500
.ZG109P            ANOP  ,                                              00478600
                   AIF   (T'&ZCGPR NE 'N').ZG109R  NON NUMERIC          00478700
                   AIF   ('&ZCGPR' LT '2').ZG109Q                       00478800
                   AIF   ('&ZCGPR' LE '12').ZG109R                      00478900
.ZG109Q            ANOP  ,                                              00479000
&ZMS               SETC  '"PRODID='                                     00479100
&ZMS               SETC  '&ZMS.&PRODID"'                                00479200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00479300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00479400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00479500
.ZG109R            ANOP  ,                                              00479600
.*-------------------------------------------------------------------   00479700
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00479800
.ZG111ZY  AIF    ('&XENDPRODNAME' NE 'PRTOKEN').ZG112ZY                 00479900
.*-------------------------------------------------------------------   00480000
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                00480100
&ZCVAL             SETC ''           ERROR KEY FIELD                    00480200
.ZG111I0           AIF   (K'&PRODNAME LE 0).ZG111I1                     00480300
&ZCVAL             SETC '&ZCVAL PRODNAME'       DISALLOWED KEY          00480400
.ZG111I1           AIF   (K'&PRODVERS LE 0).ZG111I2                     00480500
&ZCVAL             SETC '&ZCVAL PRODVERS'       DISALLOWED KEY          00480600
.ZG111I2           AIF   (K'&PRODQUAL LE 0).ZG111I3                     00480700
&ZCVAL             SETC '&ZCVAL PRODQUAL'       DISALLOWED KEY          00480800
.ZG111I3           AIF   (K'&PRODID LE 0).ZG111I4                       00480900
&ZCVAL             SETC '&ZCVAL PRODID'         DISALLOWED KEY          00481000
.ZG111I4           AIF   (K'&ZCVAL LE 0).ZG111J  KEY                    00481100
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00481200
&ZMS               SETC  '"PRTOKEN'                                     00481300
&ZMS               SETC  '&ZMS.=&PRTOKEN"'                              00481400
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00481500
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00481600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00481700
.ZG111J            ANOP  ,                                              00481800
.*-------------------------------------------------------------------   00481900
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00482000
                   AIF   (K'&ZXPRTOKEN LE 0).ZG111R  NOT I/O            00482100
                   AIF   ('&XPRTOKEN'(1,1) NE '(').ZG111R               00482200
&ZCGPR             SETC  '&XPRTOKEN'(2,K'&XPRTOKEN-2)                   00482300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG111P                  00482400
                   AIF   (K'&ZCGPR GT 2).ZG111Q                         00482500
                   AIF   ('&ZCGPR' EQ '0').ZG111Q                       00482600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00482700
                   AIF   (T'&ZCGPR NE 'N').ZG111Q  INVALID REG NAME     00482800
.ZG111P            ANOP  ,                                              00482900
                   AIF   (T'&ZCGPR NE 'N').ZG111R  NON NUMERIC          00483000
                   AIF   ('&ZCGPR' LT '2').ZG111Q                       00483100
                   AIF   ('&ZCGPR' LE '12').ZG111R                      00483200
.ZG111Q            ANOP  ,                                              00483300
&ZMS               SETC  '"PRTOKEN='                                    00483400
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               00483500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00483600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00483700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00483800
.ZG111R            ANOP  ,                                              00483900
.*-------------------------------------------------------------------   00484000
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00484100
.ZG112ZY  AIF    ('&XENDPRODNAME' NE 'PRTOKEN64').ZG113ZY               00484200
.*-------------------------------------------------------------------   00484300
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                00484400
&ZCVAL             SETC ''           ERROR KEY FIELD                    00484500
.ZG112I0           AIF   (K'&PRODNAME LE 0).ZG112I1                     00484600
&ZCVAL             SETC '&ZCVAL PRODNAME'       DISALLOWED KEY          00484700
.ZG112I1           AIF   (K'&PRODVERS LE 0).ZG112I2                     00484800
&ZCVAL             SETC '&ZCVAL PRODVERS'       DISALLOWED KEY          00484900
.ZG112I2           AIF   (K'&PRODQUAL LE 0).ZG112I3                     00485000
&ZCVAL             SETC '&ZCVAL PRODQUAL'       DISALLOWED KEY          00485100
.ZG112I3           AIF   (K'&PRODID LE 0).ZG112I4                       00485200
&ZCVAL             SETC '&ZCVAL PRODID'         DISALLOWED KEY          00485300
.ZG112I4           AIF   (K'&ZCVAL LE 0).ZG112J  KEY                    00485400
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00485500
&ZMS               SETC  '"PRTOKEN64'                                   00485600
&ZMS               SETC  '&ZMS.=&PRTOKEN64"'                            00485700
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00485800
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00485900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00486000
.ZG112J            ANOP  ,                                              00486100
.*-------------------------------------------------------------------   00486200
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00486300
                   AIF   (K'&ZXPRTOKEN64 LE 0).ZG112R  NOT I/O          00486400
                   AIF   ('&XPRTOKEN64'(1,1) NE '(').ZG112R             00486500
&ZCGPR             SETC  '&XPRTOKEN64'(2,K'&XPRTOKEN64-2)               00486600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG112P                  00486700
                   AIF   (K'&ZCGPR GT 2).ZG112Q                         00486800
                   AIF   ('&ZCGPR' EQ '0').ZG112Q                       00486900
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00487000
                   AIF   (T'&ZCGPR NE 'N').ZG112Q  INVALID REG NAME     00487100
.ZG112P            ANOP  ,                                              00487200
                   AIF   (T'&ZCGPR NE 'N').ZG112R  NON NUMERIC          00487300
                   AIF   ('&ZCGPR' LT '2').ZG112Q                       00487400
                   AIF   ('&ZCGPR' LE '12').ZG112R                      00487500
.ZG112Q            ANOP  ,                                              00487600
&ZMS               SETC  '"PRTOKEN64='                                  00487700
&ZMS               SETC  '&ZMS.&PRTOKEN64"'                             00487800
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00487900
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00488000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00488100
.ZG112R            ANOP  ,                                              00488200
.*-------------------------------------------------------------------   00488300
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00488400
.ZG113ZY           ANOP ,            END MUTUALLY EXCLUSIVE KEYS        00488500
.*----------------------------------------------------------------***   00488600
.***AG.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE                     00488700
&XDUMMY5           SETC  ''          INITIALIZE XVARIABLE               00488800
                   AIF   (K'&ENDTIME LE 0).ZG115C                       00488900
&ZXDUMMY5          SETC  'OUTPUT'    SET IN/OUTPUT                      00489000
&XDUMMY5           SETC  'ENDTIME'   SET XVARIABLE                      00489100
&ZXENDTIME         SETC  'OUTPUT'    SET IN/OUTPUT                      00489200
&XENDTIME          SETC  '&ENDTIME(1)'          SET XVARIABLE PARM      00489300
                   AIF   (N'&ENDTIME GT 1).ZG115A                       00489400
&XENDTIME          SETC  '&ENDTIME'  SET XVARIABLE PARM                 00489500
.ZG115A            AIF   (N'&ENDTIME LE 1).ZG115B  CK NUM               00489600
&ZMS               SETC  '"ENDTIME='                                    00489700
&ZMS               SETC  '&ZMS.&ENDTIME"'                               00489800
&ZMS               SETC  '&ZMS "ENDTIME"'                               00489900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00490000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00490100
.ZG115B            AIF   (K'&XENDTIME GT 0).ZG115C  ONE PARM            00490200
&ZXDUMMY5          SETC  ''          RESET IN/OUTPUT                    00490300
&ZXENDTIME         SETC  ''          RESET IN/OUTPUT                    00490400
&ZMS               SETC  'WHEN "FUNCTIONEND" IS SPECIFIED'              00490500
&ZMS               SETC  '&ZMS , "ENDTIME" KEY AND ITS'                 00490600
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00490700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00490800
.ZG115C            ANOP  ,                                              00490900
.*----------------------------------------------------------------***   00491000
.***AG.KMEKY02 NAME, OPT OUTPUT, ME KEYS -XVARIABLE                     00491100
                   AIF   (K'&ENDTIME64 LE 0).ZG116D  NO ME KEY          00491200
                   AIF   (N'&ENDTIME64 LE 1).ZG116A  CK NUM             00491300
&ZMS               SETC  '"ENDTIME64='                                  00491400
&ZMS               SETC  '&ZMS.&ENDTIME64"'                             00491500
&ZMS               SETC  '&ZMS "ENDTIME64"'                             00491600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00491700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00491800
.ZG116A            AIF   (K'&XDUMMY5 LE 0).ZG116B                       00491900
&ZMS               SETC  '"ENDTIME64'                                   00492000
&ZMS               SETC  '&ZMS.=&ENDTIME64"'                            00492100
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00492200
&ZMS               SETC  '&ZMS "&XDUMMY5"'                              00492300
                   MNOTE 8,' &ZMS KEY.'                                 00492400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00492500
                   AGO   .ZG116D                                        00492600
.*                                                                      00492700
.ZG116B            ANOP  ,                                              00492800
&ZXDUMMY5          SETC  'OUTPUT'    SET IN/OUTPUT                      00492900
&XDUMMY5           SETC  'ENDTIME64'            SET XVARIABLE           00493000
&ZXENDTIME64       SETC  'OUTPUT'    SET IN/OUTPUT                      00493100
&XENDTIME64        SETC  '&ENDTIME64(1)'        SET XVARIABLE PARM      00493200
                   AIF   (N'&ENDTIME64 GT 1).ZG116C                     00493300
&XENDTIME64        SETC  '&ENDTIME64'           SET XVARIABLE PARM      00493400
.ZG116C            AIF   (K'&XENDTIME64 GT 0).ZG116D  ONE PARM          00493500
&ZXDUMMY5          SETC  ''          RESET IN/OUTPUT                    00493600
&ZXENDTIME64       SETC  ''          RESET IN/OUTPUT                    00493700
&ZMS               SETC  'WHEN "FUNCTIONEND" IS SPECIFIED'              00493800
&ZMS               SETC  '&ZMS , "ENDTIME64" KEY AND ITS'               00493900
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00494000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00494100
.ZG116D            ANOP  ,                                              00494200
.*------------------------------------------------------------------    00494300
.***AG.KMEKY08 NAME, OPT OUTPUT, ME KEYS -CHECK IF KEY ENTERED          00494400
                   AIF   (K'&XDUMMY5 GT 0).ZG117B                       00494500
&ZXDUMMY5          SETC  ''          RESET IN/OUTPUT                    00494600
&XDUMMY5           SETC  'ENDTIME'   SET DEFAULT                        00494700
.ZG117B            ANOP  ,                                              00494800
.*-------------------------------------------------------------------   00494900
.***AG.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00495000
                   AIF   (K'&ZXENDTIME64 LE 0).ZG117R  NOT I/O          00495100
                   AIF   ('&XENDTIME64'(1,1) NE '(').ZG117R             00495200
&ZCGPR             SETC  '&XENDTIME64'(2,K'&XENDTIME64-2)               00495300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG117P                  00495400
                   AIF   (K'&ZCGPR GT 2).ZG117Q                         00495500
                   AIF   ('&ZCGPR' EQ '0').ZG117Q                       00495600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00495700
                   AIF   (T'&ZCGPR NE 'N').ZG117Q  INVALID REG NAME     00495800
.ZG117P            ANOP  ,                                              00495900
                   AIF   (T'&ZCGPR NE 'N').ZG117R  NON NUMERIC          00496000
                   AIF   ('&ZCGPR' LT '2').ZG117Q                       00496100
                   AIF   ('&ZCGPR' LE '12').ZG117R                      00496200
.ZG117Q            ANOP  ,                                              00496300
&ZMS               SETC  '"ENDTIME64='                                  00496400
&ZMS               SETC  '&ZMS.&ENDTIME64"'                             00496500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00496600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00496700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00496800
.ZG117R            ANOP  ,                                              00496900
.*-------------------------------------------------------------------   00497000
.***AG.KMEKY13 NAME, OPT OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00497100
.ZG115ZY  AIF    ('&XDUMMY5' NE 'ENDTIME').ZG116ZY                      00497200
.*-------------------------------------------------------------------   00497300
.***AG.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00497400
                   AIF   (K'&ZXENDTIME LE 0).ZG115R  NOT I/O            00497500
                   AIF   ('&XENDTIME'(1,1) NE '(').ZG115R               00497600
&ZCGPR             SETC  '&XENDTIME'(2,K'&XENDTIME-2)                   00497700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG115P                  00497800
                   AIF   (K'&ZCGPR GT 2).ZG115Q                         00497900
                   AIF   ('&ZCGPR' EQ '0').ZG115Q                       00498000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00498100
                   AIF   (T'&ZCGPR NE 'N').ZG115Q  INVALID REG NAME     00498200
.ZG115P            ANOP  ,                                              00498300
                   AIF   (T'&ZCGPR NE 'N').ZG115R  NON NUMERIC          00498400
                   AIF   ('&ZCGPR' LT '2').ZG115Q                       00498500
                   AIF   ('&ZCGPR' LE '12').ZG115R                      00498600
.ZG115Q            ANOP  ,                                              00498700
&ZMS               SETC  '"ENDTIME='                                    00498800
&ZMS               SETC  '&ZMS.&ENDTIME"'                               00498900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00499000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00499100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00499200
.ZG115R            ANOP  ,                                              00499300
.*-------------------------------------------------------------------   00499400
.***AG.KMEKY13 NAME, OPT OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00499500
.ZG116ZY  AIF    ('&XDUMMY5' NE 'ENDTIME64').ZG117ZY                    00499600
.*-------------------------------------------------------------------   00499700
.***AG.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00499800
                   AIF   (K'&ZXENDTIME64 LE 0).ZG116R  NOT I/O          00499900
                   AIF   ('&XENDTIME64'(1,1) NE '(').ZG116R             00500000
&ZCGPR             SETC  '&XENDTIME64'(2,K'&XENDTIME64-2)               00500100
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG116P                  00500200
                   AIF   (K'&ZCGPR GT 2).ZG116Q                         00500300
                   AIF   ('&ZCGPR' EQ '0').ZG116Q                       00500400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00500500
                   AIF   (T'&ZCGPR NE 'N').ZG116Q  INVALID REG NAME     00500600
.ZG116P            ANOP  ,                                              00500700
                   AIF   (T'&ZCGPR NE 'N').ZG116R  NON NUMERIC          00500800
                   AIF   ('&ZCGPR' LT '2').ZG116Q                       00500900
                   AIF   ('&ZCGPR' LE '12').ZG116R                      00501000
.ZG116Q            ANOP  ,                                              00501100
&ZMS               SETC  '"ENDTIME64='                                  00501200
&ZMS               SETC  '&ZMS.&ENDTIME64"'                             00501300
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00501400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00501500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00501600
.ZG116R            ANOP  ,                                              00501700
.*-------------------------------------------------------------------   00501800
.***AG.KMEKY15 NAME, OPT OUTPUT, ME KEYS -END                           00501900
.ZG117ZY           ANOP ,            END MUTUALLY EXCLUSIVE KEYS        00502000
.*----------------------------------------------------------------***   00502100
.***AG.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE                     00502200
&XDUMMY6           SETC  ''          INITIALIZE XVARIABLE               00502300
                   AIF   (K'&ENDDATA LE 0).ZG119C                       00502400
&ZXDUMMY6          SETC  'OUTPUT'    SET IN/OUTPUT                      00502500
&XDUMMY6           SETC  'ENDDATA'   SET XVARIABLE                      00502600
&ZXENDDATA         SETC  'OUTPUT'    SET IN/OUTPUT                      00502700
&XENDDATA          SETC  '&ENDDATA(1)'          SET XVARIABLE PARM      00502800
                   AIF   (N'&ENDDATA GT 1).ZG119A                       00502900
&XENDDATA          SETC  '&ENDDATA'  SET XVARIABLE PARM                 00503000
.ZG119A            AIF   (N'&ENDDATA LE 1).ZG119B  CK NUM               00503100
&ZMS               SETC  '"ENDDATA='                                    00503200
&ZMS               SETC  '&ZMS.&ENDDATA"'                               00503300
&ZMS               SETC  '&ZMS "ENDDATA"'                               00503400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00503500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00503600
.ZG119B            AIF   (K'&XENDDATA GT 0).ZG119C  ONE PARM            00503700
&ZXDUMMY6          SETC  ''          RESET IN/OUTPUT                    00503800
&ZXENDDATA         SETC  ''          RESET IN/OUTPUT                    00503900
&ZMS               SETC  'WHEN "FUNCTIONEND" IS SPECIFIED'              00504000
&ZMS               SETC  '&ZMS , "ENDDATA" KEY AND ITS'                 00504100
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00504200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00504300
.ZG119C            ANOP  ,                                              00504400
.*----------------------------------------------------------------***   00504500
.***AG.KMEKY02 NAME, OPT OUTPUT, ME KEYS -XVARIABLE                     00504600
                   AIF   (K'&ENDDATA64 LE 0).ZG120D  NO ME KEY          00504700
                   AIF   (N'&ENDDATA64 LE 1).ZG120A  CK NUM             00504800
&ZMS               SETC  '"ENDDATA64='                                  00504900
&ZMS               SETC  '&ZMS.&ENDDATA64"'                             00505000
&ZMS               SETC  '&ZMS "ENDDATA64"'                             00505100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00505200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00505300
.ZG120A            AIF   (K'&XDUMMY6 LE 0).ZG120B                       00505400
&ZMS               SETC  '"ENDDATA64'                                   00505500
&ZMS               SETC  '&ZMS.=&ENDDATA64"'                            00505600
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00505700
&ZMS               SETC  '&ZMS "&XDUMMY6"'                              00505800
                   MNOTE 8,' &ZMS KEY.'                                 00505900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00506000
                   AGO   .ZG120D                                        00506100
.*                                                                      00506200
.ZG120B            ANOP  ,                                              00506300
&ZXDUMMY6          SETC  'OUTPUT'    SET IN/OUTPUT                      00506400
&XDUMMY6           SETC  'ENDDATA64'            SET XVARIABLE           00506500
&ZXENDDATA64       SETC  'OUTPUT'    SET IN/OUTPUT                      00506600
&XENDDATA64        SETC  '&ENDDATA64(1)'        SET XVARIABLE PARM      00506700
                   AIF   (N'&ENDDATA64 GT 1).ZG120C                     00506800
&XENDDATA64        SETC  '&ENDDATA64'           SET XVARIABLE PARM      00506900
.ZG120C            AIF   (K'&XENDDATA64 GT 0).ZG120D  ONE PARM          00507000
&ZXDUMMY6          SETC  ''          RESET IN/OUTPUT                    00507100
&ZXENDDATA64       SETC  ''          RESET IN/OUTPUT                    00507200
&ZMS               SETC  'WHEN "FUNCTIONEND" IS SPECIFIED'              00507300
&ZMS               SETC  '&ZMS , "ENDDATA64" KEY AND ITS'               00507400
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00507500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00507600
.ZG120D            ANOP  ,                                              00507700
.*------------------------------------------------------------------    00507800
.***AG.KMEKY08 NAME, OPT OUTPUT, ME KEYS -CHECK IF KEY ENTERED          00507900
                   AIF   (K'&XDUMMY6 GT 0).ZG121B                       00508000
&ZXDUMMY6          SETC  ''          RESET IN/OUTPUT                    00508100
&XDUMMY6           SETC  'ENDDATA'   SET DEFAULT                        00508200
.ZG121B            ANOP  ,                                              00508300
.*-------------------------------------------------------------------   00508400
.***AG.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00508500
                   AIF   (K'&ZXENDDATA64 LE 0).ZG121R  NOT I/O          00508600
                   AIF   ('&XENDDATA64'(1,1) NE '(').ZG121R             00508700
&ZCGPR             SETC  '&XENDDATA64'(2,K'&XENDDATA64-2)               00508800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG121P                  00508900
                   AIF   (K'&ZCGPR GT 2).ZG121Q                         00509000
                   AIF   ('&ZCGPR' EQ '0').ZG121Q                       00509100
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00509200
                   AIF   (T'&ZCGPR NE 'N').ZG121Q  INVALID REG NAME     00509300
.ZG121P            ANOP  ,                                              00509400
                   AIF   (T'&ZCGPR NE 'N').ZG121R  NON NUMERIC          00509500
                   AIF   ('&ZCGPR' LT '2').ZG121Q                       00509600
                   AIF   ('&ZCGPR' LE '12').ZG121R                      00509700
.ZG121Q            ANOP  ,                                              00509800
&ZMS               SETC  '"ENDDATA64='                                  00509900
&ZMS               SETC  '&ZMS.&ENDDATA64"'                             00510000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00510100
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00510200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00510300
.ZG121R            ANOP  ,                                              00510400
.*-------------------------------------------------------------------   00510500
.***AG.KMEKY13 NAME, OPT OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00510600
.ZG119ZY  AIF    ('&XDUMMY6' NE 'ENDDATA').ZG120ZY                      00510700
.*-------------------------------------------------------------------   00510800
.***AG.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00510900
                   AIF   (K'&ZXENDDATA LE 0).ZG119R  NOT I/O            00511000
                   AIF   ('&XENDDATA'(1,1) NE '(').ZG119R               00511100
&ZCGPR             SETC  '&XENDDATA'(2,K'&XENDDATA-2)                   00511200
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG119P                  00511300
                   AIF   (K'&ZCGPR GT 2).ZG119Q                         00511400
                   AIF   ('&ZCGPR' EQ '0').ZG119Q                       00511500
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00511600
                   AIF   (T'&ZCGPR NE 'N').ZG119Q  INVALID REG NAME     00511700
.ZG119P            ANOP  ,                                              00511800
                   AIF   (T'&ZCGPR NE 'N').ZG119R  NON NUMERIC          00511900
                   AIF   ('&ZCGPR' LT '2').ZG119Q                       00512000
                   AIF   ('&ZCGPR' LE '12').ZG119R                      00512100
.ZG119Q            ANOP  ,                                              00512200
&ZMS               SETC  '"ENDDATA='                                    00512300
&ZMS               SETC  '&ZMS.&ENDDATA"'                               00512400
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00512500
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00512600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00512700
.ZG119R            ANOP  ,                                              00512800
.*-------------------------------------------------------------------   00512900
.***AG.KMEKY13 NAME, OPT OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00513000
.ZG120ZY  AIF    ('&XDUMMY6' NE 'ENDDATA64').ZG121ZY                    00513100
.*-------------------------------------------------------------------   00513200
.***AG.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00513300
                   AIF   (K'&ZXENDDATA64 LE 0).ZG120R  NOT I/O          00513400
                   AIF   ('&XENDDATA64'(1,1) NE '(').ZG120R             00513500
&ZCGPR             SETC  '&XENDDATA64'(2,K'&XENDDATA64-2)               00513600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG120P                  00513700
                   AIF   (K'&ZCGPR GT 2).ZG120Q                         00513800
                   AIF   ('&ZCGPR' EQ '0').ZG120Q                       00513900
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00514000
                   AIF   (T'&ZCGPR NE 'N').ZG120Q  INVALID REG NAME     00514100
.ZG120P            ANOP  ,                                              00514200
                   AIF   (T'&ZCGPR NE 'N').ZG120R  NON NUMERIC          00514300
                   AIF   ('&ZCGPR' LT '2').ZG120Q                       00514400
                   AIF   ('&ZCGPR' LE '12').ZG120R                      00514500
.ZG120Q            ANOP  ,                                              00514600
&ZMS               SETC  '"ENDDATA64='                                  00514700
&ZMS               SETC  '&ZMS.&ENDDATA64"'                             00514800
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00514900
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00515000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00515100
.ZG120R            ANOP  ,                                              00515200
.*-------------------------------------------------------------------   00515300
.***AG.KMEKY15 NAME, OPT OUTPUT, ME KEYS -END                           00515400
.ZG121ZY           ANOP ,            END MUTUALLY EXCLUSIVE KEYS        00515500
.*-------------------------------------------------------------------   00515600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00515700
.ZG122             ANOP  ,                                              00515800
&ZTLC              SETC 'STATUS'                                        00515900
                   AIF   ('&REQUEST(1)' NE '&ZTLC').ZG123               00516000
&XREQUEST          SETC  'STATUS'    SET KEYWORD                        00516100
                   AIF   (N'&REQUEST LE 1).ZG122A  CK NUM               00516200
&ZMS               SETC  '"REQUEST='                                    00516300
&ZMS               SETC  '&ZMS.&REQUEST"'                               00516400
&ZMS               SETC  '&ZMS "REQUEST"'                               00516500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00516600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00516700
.ZG122A            ANOP  ,                                              00516800
.*------------------------------------------------------------------    00516900
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00517000
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00517100
.ZG122A0           AIF   (K'&PRODOWNER LE 0).ZG122A1  OK                00517200
&ZCVAL             SETC '&ZCVAL PRODOWNER'      INCORRECT KEY USED      00517300
.ZG122A1           AIF   (K'&PRODNAME LE 0).ZG122A2  OK                 00517400
&ZCVAL             SETC '&ZCVAL PRODNAME'       INCORRECT KEY USED      00517500
.ZG122A2           AIF   (K'&PRODVERS LE 0).ZG122A3  OK                 00517600
&ZCVAL             SETC '&ZCVAL PRODVERS'       INCORRECT KEY USED      00517700
.ZG122A3           AIF   (K'&PRODQUAL LE 0).ZG122A4  OK                 00517800
&ZCVAL             SETC '&ZCVAL PRODQUAL'       INCORRECT KEY USED      00517900
.ZG122A4           AIF   (K'&PRODID LE 0).ZG122A5  OK                   00518000
&ZCVAL             SETC '&ZCVAL PRODID'         INCORRECT KEY USED      00518100
.ZG122A5           AIF   (K'&DOMAIN LE 0).ZG122A6  OK                   00518200
&ZCVAL             SETC '&ZCVAL DOMAIN'         INCORRECT KEY USED      00518300
.ZG122A6           AIF   (K'&SCOPE LE 0).ZG122A7  OK                    00518400
&ZCVAL             SETC '&ZCVAL SCOPE'          INCORRECT KEY USED      00518500
.ZG122A7           AIF   (K'&PRTOKEN LE 0).ZG122A8  OK                  00518600
&ZCVAL             SETC '&ZCVAL PRTOKEN'        INCORRECT KEY USED      00518700
.ZG122A8           AIF   (K'&PRTOKEN64 LE 0).ZG122A9  OK                00518800
&ZCVAL             SETC '&ZCVAL PRTOKEN64'      INCORRECT KEY USED      00518900
.ZG122A9           AIF   (K'&UNAUTHSERV LE 0).ZG122A10  OK              00519000
&ZCVAL             SETC '&ZCVAL UNAUTHSERV'     INCORRECT KEY USED      00519100
.ZG122A10          AIF   (K'&ENDTIME LE 0).ZG122A11  OK                 00519200
&ZCVAL             SETC '&ZCVAL ENDTIME'        INCORRECT KEY USED      00519300
.ZG122A11          AIF   (K'&ENDTIME64 LE 0).ZG122A12  OK               00519400
&ZCVAL             SETC '&ZCVAL ENDTIME64'      INCORRECT KEY USED      00519500
.ZG122A12          AIF   (K'&ENDDATA LE 0).ZG122A13  OK                 00519600
&ZCVAL             SETC '&ZCVAL ENDDATA'        INCORRECT KEY USED      00519700
.ZG122A13          AIF   (K'&ENDDATA64 LE 0).ZG122A14  OK               00519800
&ZCVAL             SETC '&ZCVAL ENDDATA64'      INCORRECT KEY USED      00519900
.ZG122A14          AIF   (K'&BEGTIME LE 0).ZG122A15  OK                 00520000
&ZCVAL             SETC '&ZCVAL BEGTIME'        INCORRECT KEY USED      00520100
.ZG122A15          AIF   (K'&BEGTIME64 LE 0).ZG122A16  OK               00520200
&ZCVAL             SETC '&ZCVAL BEGTIME64'      INCORRECT KEY USED      00520300
.ZG122A16          AIF   (K'&DATA LE 0).ZG122A17  OK                    00520400
&ZCVAL             SETC '&ZCVAL DATA'           INCORRECT KEY USED      00520500
.ZG122A17          AIF   (K'&DATA64 LE 0).ZG122A18  OK                  00520600
&ZCVAL             SETC '&ZCVAL DATA64'         INCORRECT KEY USED      00520700
.ZG122A18          AIF   (K'&FORMAT LE 0).ZG122A19  OK                  00520800
&ZCVAL             SETC '&ZCVAL FORMAT'         INCORRECT KEY USED      00520900
.ZG122A19          AIF   (K'&CURRENTDATA LE 0).ZG122A20  OK             00521000
&ZCVAL             SETC '&ZCVAL CURRENTDATA'    INCORRECT KEY USED      00521100
.ZG122A20          AIF   (K'&CURRENTDATA64 LE 0).ZG122A21  OK           00521200
&ZCVAL             SETC '&ZCVAL CURRENTDATA64'  INCORRECT KEY USED      00521300
.ZG122A21          AIF   (K'&ZCVAL LE 0).ZG122A22  OK                   00521400
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00521500
                   AIF  (K'&ZCVAL LE 160).ZG122A22A                     00521600
&ZCVAL             SETC '&ZCVAL'(1,160)                                 00521700
&ZCVAL             SETC '&ZCVAL....'                                    00521800
.ZG122A22A         ANOP                                                 00521900
&ZMS               SETC  '"REQUEST'                                     00522000
&ZMS               SETC  '&ZMS.=&REQUEST"'                              00522100
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00522200
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00522300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00522400
.ZG122A22          ANOP  ,                                              00522500
.*------------------------------------------------------------------    00522600
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00522700
.ZG123             ANOP  ,                                              00522800
&ZXREQUEST         SETC  'INPUT'     SET IN/OUTPUT                      00522900
                   AIF   (K'&XREQUEST GT 0).ZG123E  VALID ARG           00523000
                   AIF   (T'&REQUEST EQ 'O').ZG123D  OMITTED            00523100
&ZASYSLNDX         SETA  0                                              00523200
.ZG123A            ANOP  ,           POSITIONAL MACRO KEY               00523300
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00523400
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG123C              00523500
&ZTLC              SETC 'REQUEST'                                       00523600
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG123A     00523700
.ZG123B            ANOP  ,                                              00523800
&ZXREQUEST         SETC  ''          RESET IN/OUTPUT                    00523900
&ZMS               SETC  'THE "REQUEST" KEY'                            00524000
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00524100
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00524200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00524300
                   AGO   .ZG123E                                        00524400
.ZG123C            ANOP  ,                                              00524500
&ZXREQUEST         SETC  ''          RESET IN/OUTPUT                    00524600
&ZMS               SETC  '"REQUEST='                                    00524700
&ZMS               SETC  '&ZMS.&REQUEST"'                               00524800
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00524900
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00525000
&ZMS               SETC  '&ZMS "REGISTER",'                             00525100
&ZMS               SETC  '&ZMS "DEREGISTER",'                           00525200
&ZMS               SETC  '&ZMS "FUNCTIONBEGIN",'                        00525300
&ZMS               SETC  '&ZMS "FUNCTIONDATA",'                         00525400
&ZMS               SETC  '&ZMS "FUNCTIONEND",'                          00525500
&ZMS               SETC  '&ZMS OR "STATUS".'                            00525600
                   MNOTE 8,' &ZMS '                                     00525700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00525800
                   AGO   .ZG123E                                        00525900
.ZG123D            ANOP  ,                                              00526000
&XREQUEST          SETC  'REGISTER'  SET DEFAULT KEYWORD                00526100
.ZG123E            ANOP  ,                                              00526200
.*------------------------------------------------------------------    00526300
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00526400
                   AIF   (K'&REQUEST(1) GT 0).ZG123F  PARM              00526500
&XREQUEST          SETC  ''          ENSURE NULL KEYWORD                00526600
&ZXREQUEST         SETC  ''          RESET IN/OUTPUT                    00526700
&ZMS               SETC  'THE'                                          00526800
&ZMS               SETC  '&ZMS "REQUEST" KEY AND ITS'                   00526900
&ZMS               SETC  '&ZMS ARGUMENT ARE REQUIRED.'                  00527000
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00527100
&ZMS               SETC  '&ZMS "REGISTER",'                             00527200
&ZMS               SETC  '&ZMS "DEREGISTER",'                           00527300
&ZMS               SETC  '&ZMS "FUNCTIONBEGIN",'                        00527400
&ZMS               SETC  '&ZMS "FUNCTIONDATA",'                         00527500
&ZMS               SETC  '&ZMS "FUNCTIONEND",'                          00527600
&ZMS               SETC  '&ZMS OR "STATUS".'                            00527700
                   MNOTE 8,' &ZMS '                                     00527800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00527900
.ZG123F            ANOP  ,                                              00528000
.*------------------------------------------------------------------    00528100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00528200
&XLINKAGE          SETC  ''          INITIALIZE XVARIABLE               00528300
.*-------------------------------------------------------------------   00528400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00528500
.ZG126             ANOP  ,                                              00528600
                   AIF   (K'&LINKAGE(1) LE 0).ZG126A                    00528700
&ZTLC              SETC 'SVC'                                           00528800
                   AIF   ('&LINKAGE(1)' NE '&ZTLC').ZG127               00528900
&XLINKAGE          SETC  'SVC'       SET KEYWORD                        00529000
                   AIF   (N'&LINKAGE LE 1).ZG126A  CK NUM               00529100
&ZMS               SETC  '"LINKAGE='                                    00529200
&ZMS               SETC  '&ZMS.&LINKAGE"'                               00529300
&ZMS               SETC  '&ZMS "LINKAGE"'                               00529400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00529500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00529600
.ZG126A            ANOP  ,                                              00529700
.*------------------------------------------------------------------    00529800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00529900
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00530000
.ZG126A0           AIF   (K'&VALIDATE LE 0).ZG126A1  OK                 00530100
&ZCVAL             SETC '&ZCVAL VALIDATE'       INCORRECT KEY USED      00530200
.ZG126A1           AIF   (K'&ZCVAL LE 0).ZG126A2  OK                    00530300
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00530400
&ZMS               SETC  '"LINKAGE'                                     00530500
&ZMS               SETC  '&ZMS.=&LINKAGE"'                              00530600
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00530700
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00530800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00530900
.ZG126A2           ANOP  ,                                              00531000
.*-------------------------------------------------------------------   00531100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00531200
.ZG127             ANOP  ,                                              00531300
&ZTLC              SETC 'BRANCH'                                        00531400
                   AIF   ('&LINKAGE(1)' NE '&ZTLC').ZG133               00531500
&XLINKAGE          SETC  'BRANCH'    SET KEYWORD                        00531600
                   AIF   (N'&LINKAGE LE 1).ZG127A  CK NUM               00531700
&ZMS               SETC  '"LINKAGE='                                    00531800
&ZMS               SETC  '&ZMS.&LINKAGE"'                               00531900
&ZMS               SETC  '&ZMS "LINKAGE"'                               00532000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00532100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00532200
.ZG127A            ANOP  ,                                              00532300
.*------------------------------------------------------------------    00532400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00532500
&XVALIDATE         SETC  ''          INITIALIZE XVARIABLE               00532600
.*-------------------------------------------------------------------   00532700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00532800
.ZG130             ANOP  ,                                              00532900
                   AIF   (K'&VALIDATE(1) LE 0).ZG130A                   00533000
&ZTLC              SETC 'YES'                                           00533100
                   AIF   ('&VALIDATE(1)' NE '&ZTLC').ZG131              00533200
&XVALIDATE         SETC  'YES'       SET KEYWORD                        00533300
                   AIF   (N'&VALIDATE LE 1).ZG130A  CK NUM              00533400
&ZMS               SETC  '"VALIDATE='                                   00533500
&ZMS               SETC  '&ZMS.&VALIDATE"'                              00533600
&ZMS               SETC  '&ZMS "VALIDATE"'                              00533700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00533800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00533900
.ZG130A            ANOP  ,                                              00534000
.*-------------------------------------------------------------------   00534100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00534200
.ZG131             ANOP  ,                                              00534300
&ZTLC              SETC 'NO'                                            00534400
                   AIF   ('&VALIDATE(1)' NE '&ZTLC').ZG132              00534500
&XVALIDATE         SETC  'NO'        SET KEYWORD                        00534600
                   AIF   (N'&VALIDATE LE 1).ZG131A  CK NUM              00534700
&ZMS               SETC  '"VALIDATE='                                   00534800
&ZMS               SETC  '&ZMS.&VALIDATE"'                              00534900
&ZMS               SETC  '&ZMS "VALIDATE"'                              00535000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00535100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00535200
.ZG131A            ANOP  ,                                              00535300
.*------------------------------------------------------------------    00535400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00535500
.ZG132             ANOP  ,                                              00535600
&ZXVALIDATE        SETC  'INPUT'     SET IN/OUTPUT                      00535700
                   AIF   (K'&XVALIDATE GT 0).ZG132E  VALID ARG          00535800
                   AIF   (T'&VALIDATE EQ 'O').ZG132D  OMITTED           00535900
&ZASYSLNDX         SETA  0                                              00536000
.ZG132A            ANOP  ,           POSITIONAL MACRO KEY               00536100
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00536200
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG132C              00536300
&ZTLC              SETC 'VALIDATE'                                      00536400
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG132A     00536500
.ZG132B            ANOP  ,                                              00536600
&ZXVALIDATE        SETC  ''          RESET IN/OUTPUT                    00536700
&ZMS               SETC  'THE "VALIDATE" KEY'                           00536800
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00536900
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00537000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00537100
                   AGO   .ZG132E                                        00537200
.ZG132C            ANOP  ,                                              00537300
&ZXVALIDATE        SETC  ''          RESET IN/OUTPUT                    00537400
&ZMS               SETC  '"VALIDATE='                                   00537500
&ZMS               SETC  '&ZMS.&VALIDATE"'                              00537600
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00537700
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00537800
&ZMS               SETC  '&ZMS "YES"'                                   00537900
&ZMS               SETC  '&ZMS OR "NO".'                                00538000
                   MNOTE 8,' &ZMS '                                     00538100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00538200
                   AGO   .ZG132E                                        00538300
.ZG132D            ANOP  ,                                              00538400
&XVALIDATE         SETC  'YES'       SET DEFAULT KEYWORD                00538500
.ZG132E            ANOP  ,                                              00538600
.*------------------------------------------------------------------    00538700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00538800
.ZG133             ANOP  ,                                              00538900
&ZXLINKAGE         SETC  'INPUT'     SET IN/OUTPUT                      00539000
                   AIF   (K'&XLINKAGE GT 0).ZG133E  VALID ARG           00539100
                   AIF   (T'&LINKAGE EQ 'O').ZG133D  OMITTED            00539200
&ZASYSLNDX         SETA  0                                              00539300
.ZG133A            ANOP  ,           POSITIONAL MACRO KEY               00539400
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00539500
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG133C              00539600
&ZTLC              SETC 'LINKAGE'                                       00539700
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG133A     00539800
.ZG133B            ANOP  ,                                              00539900
&ZXLINKAGE         SETC  ''          RESET IN/OUTPUT                    00540000
&ZMS               SETC  'THE "LINKAGE" KEY'                            00540100
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00540200
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00540300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00540400
                   AGO   .ZG133E                                        00540500
.ZG133C            ANOP  ,                                              00540600
&ZXLINKAGE         SETC  ''          RESET IN/OUTPUT                    00540700
&ZMS               SETC  '"LINKAGE='                                    00540800
&ZMS               SETC  '&ZMS.&LINKAGE"'                               00540900
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00541000
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00541100
&ZMS               SETC  '&ZMS "SVC"'                                   00541200
&ZMS               SETC  '&ZMS OR "BRANCH".'                            00541300
                   MNOTE 8,' &ZMS '                                     00541400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00541500
                   AGO   .ZG133E                                        00541600
.ZG133D            ANOP  ,                                              00541700
&XLINKAGE          SETC  'SVC'       SET DEFAULT KEYWORD                00541800
.ZG133E            ANOP  ,                                              00541900
.*------------------------------------------------------------------    00542000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00542100
&XFBFE             SETC  ''          INITIALIZE XVARIABLE               00542200
.*-------------------------------------------------------------------   00542300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00542400
.ZG136             ANOP  ,                                              00542500
                   AIF   (K'&FBFE(1) LE 0).ZG136A                       00542600
&ZTLC              SETC 'NO'                                            00542700
                   AIF   ('&FBFE(1)' NE '&ZTLC').ZG137                  00542800
&XFBFE             SETC  'NO'        SET KEYWORD                        00542900
                   AIF   (N'&FBFE LE 1).ZG136A  CK NUM                  00543000
&ZMS               SETC  '"FBFE='                                       00543100
&ZMS               SETC  '&ZMS.&FBFE"'                                  00543200
&ZMS               SETC  '&ZMS "FBFE"'                                  00543300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00543400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00543500
.ZG136A            ANOP  ,                                              00543600
.*-------------------------------------------------------------------   00543700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00543800
.ZG137             ANOP  ,                                              00543900
&ZTLC              SETC 'YES'                                           00544000
                   AIF   ('&FBFE(1)' NE '&ZTLC').ZG138                  00544100
&XFBFE             SETC  'YES'       SET KEYWORD                        00544200
                   AIF   (N'&FBFE LE 1).ZG137A  CK NUM                  00544300
&ZMS               SETC  '"FBFE='                                       00544400
&ZMS               SETC  '&ZMS.&FBFE"'                                  00544500
&ZMS               SETC  '&ZMS "FBFE"'                                  00544600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00544700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00544800
.ZG137A            ANOP  ,                                              00544900
.*------------------------------------------------------------------    00545000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00545100
.ZG138             ANOP  ,                                              00545200
&ZXFBFE            SETC  'INPUT'     SET IN/OUTPUT                      00545300
                   AIF   (K'&XFBFE GT 0).ZG138E  VALID ARG              00545400
                   AIF   (T'&FBFE EQ 'O').ZG138D  OMITTED               00545500
&ZASYSLNDX         SETA  0                                              00545600
.ZG138A            ANOP  ,           POSITIONAL MACRO KEY               00545700
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00545800
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG138C              00545900
&ZTLC              SETC 'FBFE'                                          00546000
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG138A     00546100
.ZG138B            ANOP  ,                                              00546200
&ZXFBFE            SETC  ''          RESET IN/OUTPUT                    00546300
&ZMS               SETC  'THE "FBFE" KEY'                               00546400
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00546500
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00546600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00546700
                   AGO   .ZG138E                                        00546800
.ZG138C            ANOP  ,                                              00546900
&ZXFBFE            SETC  ''          RESET IN/OUTPUT                    00547000
&ZMS               SETC  '"FBFE='                                       00547100
&ZMS               SETC  '&ZMS.&FBFE"'                                  00547200
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00547300
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00547400
&ZMS               SETC  '&ZMS "NO"'                                    00547500
&ZMS               SETC  '&ZMS OR "YES".'                               00547600
                   MNOTE 8,' &ZMS '                                     00547700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00547800
                   AGO   .ZG138E                                        00547900
.ZG138D            ANOP  ,                                              00548000
&XFBFE             SETC  'NO'        SET DEFAULT KEYWORD                00548100
.ZG138E            ANOP  ,                                              00548200
.*----------------------------------------------------------------***   00548300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00548400
                   AIF   (N'&RETCODE LE 1).ZG140A  CK NUM               00548500
&ZMS               SETC  '"RETCODE='                                    00548600
&ZMS               SETC  '&ZMS.&RETCODE"'                               00548700
&ZMS               SETC  '&ZMS "RETCODE"'                               00548800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00548900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00549000
.ZG140A            ANOP  ,                                              00549100
.*-------------------------------------------------------------------   00549200
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00549300
                   AIF   (K'&RETCODE(1) LE 0).ZG140C  NO PARM           00549400
&ZXRETCODE         SETC  'OUTPUT'    SET OUTPUT                         00549500
&XRETCODE          SETC  '&RETCODE(1)'          SET XVARIABLE           00549600
                   AIF   (N'&RETCODE GT 1).ZG140C                       00549700
&XRETCODE          SETC  '&RETCODE'  SET XVARIABLE                      00549800
.ZG140C            ANOP  ,                                              00549900
.*-------------------------------------------------------------------   00550000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00550100
                   AIF   (K'&ZXRETCODE LE 0).ZG140R  NOT I/O            00550200
                   AIF   ('&XRETCODE'(1,1) NE '(').ZG140R               00550300
&ZCGPR             SETC  '&XRETCODE'(2,K'&XRETCODE-2)                   00550400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG140P                  00550500
                   AIF   (K'&ZCGPR GT 2).ZG140Q                         00550600
                   AIF   ('&ZCGPR' EQ '0').ZG140Q                       00550700
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00550800
                   AIF   (T'&ZCGPR NE 'N').ZG140Q  INVALID REG NAME     00550900
.ZG140P            ANOP  ,                                              00551000
                   AIF   (T'&ZCGPR NE 'N').ZG140R  NON NUMERIC          00551100
                   AIF   ('&ZCGPR' EQ '15').ZG140R                      00551200
                   AIF   ('&ZCGPR' LT '2').ZG140Q                       00551300
                   AIF   ('&ZCGPR' LE '12').ZG140R                      00551400
.ZG140Q            ANOP  ,                                              00551500
&ZMS               SETC  '"RETCODE='                                    00551600
&ZMS               SETC  '&ZMS.&RETCODE"'                               00551700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00551800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'       00551900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00552000
.ZG140R            ANOP  ,                                              00552100
.******************************************************************     00552200
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00552300
.******************************************************************     00552400
                   ACTR  10000                                          00552500
.*----------------------------------------------------------------***   00552600
.***AH.P02 EXTRA POSITIONALS                                            00552700
                   AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS           00552800
                   AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL           00552900
                   AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL       00553000
                   AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL        00553100
.ZGLISTX1          ANOP  ,                                              00553200
&ZCVAL             SETC  ''          ERROR FIELD                        00553300
&ZAWRK             SETA  0           POSITIONAL NUMBER                  00553400
.ZGLIST2           ANOP  ,                                              00553500
&ZAWRK             SETA  &ZAWRK+1    NEXT POSITIONAL                    00553600
                   AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE           00553700
&ZCVAL             SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                00553800
                   AGO   .ZGLIST2                                       00553900
.*                                                                      00554000
.ZGLIST3           ANOP  ,                                              00554100
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA             00554200
&ZMS               SETC  'POSITIONAL ARGUMENT(S),'                      00554300
&ZMS               SETC  '&ZMS "&ZCVAL"'                                00554400
&ZMS               SETC  '&ZMS CANNOT BE USED.'                         00554500
&ZMS               SETC  '&ZMS NO POSITIONAL ARGUMENTS'                 00554600
                   MNOTE 8,' &ZMS ARE ALLOWED.'                         00554700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00554800
.ZGLISTX           ANOP  ,                                              00554900
&ZASYSLNDX         SETA  0                                              00555000
.*-------------------------------------------------------------------   00555100
.***AG.MF04 MF=(SLME)                                                   00555200
.ZGMFX             ANOP  ,           END OF FULL SYNTAX CHECK           00555300
.********************************************************************   00555400
.***AE.MF01   PARTIAL MACRO SYNTAX CHECKING                             00555500
.********************************************************************   00555600
                   ACTR  10000                                          00555700
.*-------------------------------------------------------------------   00555800
.***AE.MF01 MF=(SLME)                                                   00555900
                   AIF   ('&XMF' EQ 'L').ZEMFX                          00556000
                   AIF   ('&XMFSCK' NE 'NOCHECK').ZEMFX                 00556100
.********************************************************************   00556200
.***AE.KC00 INITIALIZE KEYWORD CONTROL VARIABLES                        00556300
.********************************************************************   00556400
&XREQUEST          SETC  ''          INITIALIZE XVARIABLE               00556500
&XDOMAIN           SETC  ''          INITIALIZE XVARIABLE               00556600
&XSCOPE            SETC  ''          INITIALIZE XVARIABLE               00556700
&XUNAUTHSERV       SETC  ''          INITIALIZE XVARIABLE               00556800
&XFORMAT           SETC  ''          INITIALIZE XVARIABLE               00556900
&XLINKAGE          SETC  ''          INITIALIZE XVARIABLE               00557000
&XVALIDATE         SETC  ''          INITIALIZE XVARIABLE               00557100
&XFBFE             SETC  ''          INITIALIZE XVARIABLE               00557200
.*-------------------------------------------------------------------   00557300
.***AE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00557400
&ZTLC              SETC 'REGISTER'                                      00557500
                   AIF   ('&REQUEST(1)' NE '&ZTLC').ZE3A                00557600
&XREQUEST          SETC  'REGISTER'  SET KEYWORD                        00557700
                   AIF   (N'&REQUEST LE 1).ZE3A  CK NUM                 00557800
&ZMS               SETC  '"REQUEST='                                    00557900
&ZMS               SETC  '&ZMS.&REQUEST"'                               00558000
&ZMS               SETC  '&ZMS "REQUEST"'                               00558100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00558200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00558300
.ZE3A              ANOP  ,                                              00558400
.*----------------------------------------------------------------***   00558500
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          00558600
                   AIF   (N'&PRODOWNER LE 1).ZE5A  CK NUM               00558700
&ZMS               SETC  '"PRODOWNER='                                  00558800
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             00558900
&ZMS               SETC  '&ZMS "PRODOWNER"'                             00559000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00559100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00559200
.ZE5A              ANOP  ,                                              00559300
.*-------------------------------------------------------------------   00559400
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     00559500
                   AIF   (K'&PRODOWNER(1) LE 0).ZE5B NO PRM             00559600
&ZXPRODOWNER       SETC  'INPUT'     SET IN/OUTPUT                      00559700
&XPRODOWNER        SETC  '&PRODOWNER(1)'        SET XVARIABLE           00559800
                   AIF   (N'&PRODOWNER GT 1).ZE5B                       00559900
.*                 ANOP                                                 00560000
&XPRODOWNER        SETC  '&PRODOWNER'           SET XVARIABLE           00560100
.ZE5B              ANOP  ,                                              00560200
.*-------------------------------------------------------------------   00560300
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00560400
                   AIF   (K'&ZXPRODOWNER LE 0).ZE5R  NOT I/O            00560500
                   AIF   ('&XPRODOWNER'(1,1) NE '(').ZE5R               00560600
&ZCGPR             SETC  '&XPRODOWNER'(2,K'&XPRODOWNER-2)               00560700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE5P                    00560800
                   AIF   (K'&ZCGPR GT 2).ZE5Q                           00560900
                   AIF   ('&ZCGPR' EQ '0').ZE5Q                         00561000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00561100
                   AIF   (T'&ZCGPR NE 'N').ZE5Q  INVALID REG NAME       00561200
.ZE5P              ANOP  ,                                              00561300
                   AIF   (T'&ZCGPR NE 'N').ZE5R  NON NUMERIC            00561400
                   AIF   ('&ZCGPR' LT '2').ZE5Q                         00561500
                   AIF   ('&ZCGPR' LE '12').ZE5R                        00561600
.ZE5Q              ANOP  ,                                              00561700
&ZMS               SETC  '"PRODOWNER='                                  00561800
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             00561900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00562000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00562100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00562200
.ZE5R              ANOP  ,                                              00562300
.*----------------------------------------------------------------***   00562400
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          00562500
                   AIF   (N'&PRODNAME LE 1).ZE6A  CK NUM                00562600
&ZMS               SETC  '"PRODNAME='                                   00562700
&ZMS               SETC  '&ZMS.&PRODNAME"'                              00562800
&ZMS               SETC  '&ZMS "PRODNAME"'                              00562900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00563000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00563100
.ZE6A              ANOP  ,                                              00563200
.*-------------------------------------------------------------------   00563300
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     00563400
                   AIF   (K'&PRODNAME(1) LE 0).ZE6B NO PRM              00563500
&ZXPRODNAME        SETC  'INPUT'     SET IN/OUTPUT                      00563600
&XPRODNAME         SETC  '&PRODNAME(1)'         SET XVARIABLE           00563700
                   AIF   (N'&PRODNAME GT 1).ZE6B                        00563800
.*                 ANOP                                                 00563900
&XPRODNAME         SETC  '&PRODNAME'            SET XVARIABLE           00564000
.ZE6B              ANOP  ,                                              00564100
.*-------------------------------------------------------------------   00564200
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00564300
                   AIF   (K'&ZXPRODNAME LE 0).ZE6R  NOT I/O             00564400
                   AIF   ('&XPRODNAME'(1,1) NE '(').ZE6R                00564500
&ZCGPR             SETC  '&XPRODNAME'(2,K'&XPRODNAME-2)                 00564600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE6P                    00564700
                   AIF   (K'&ZCGPR GT 2).ZE6Q                           00564800
                   AIF   ('&ZCGPR' EQ '0').ZE6Q                         00564900
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00565000
                   AIF   (T'&ZCGPR NE 'N').ZE6Q  INVALID REG NAME       00565100
.ZE6P              ANOP  ,                                              00565200
                   AIF   (T'&ZCGPR NE 'N').ZE6R  NON NUMERIC            00565300
                   AIF   ('&ZCGPR' LT '2').ZE6Q                         00565400
                   AIF   ('&ZCGPR' LE '12').ZE6R                        00565500
.ZE6Q              ANOP  ,                                              00565600
&ZMS               SETC  '"PRODNAME='                                   00565700
&ZMS               SETC  '&ZMS.&PRODNAME"'                              00565800
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00565900
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00566000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00566100
.ZE6R              ANOP  ,                                              00566200
.*----------------------------------------------------------------***   00566300
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          00566400
                   AIF   (N'&PRODVERS LE 1).ZE9A  CK NUM                00566500
&ZMS               SETC  '"PRODVERS='                                   00566600
&ZMS               SETC  '&ZMS.&PRODVERS"'                              00566700
&ZMS               SETC  '&ZMS "PRODVERS"'                              00566800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00566900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00567000
.ZE9A              ANOP  ,                                              00567100
.*-------------------------------------------------------------------   00567200
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     00567300
                   AIF   (K'&PRODVERS(1) LE 0).ZE9B NO PRM              00567400
&ZXPRODVERS        SETC  'INPUT'     SET IN/OUTPUT                      00567500
&XPRODVERS         SETC  '&PRODVERS(1)'         SET XVARIABLE           00567600
                   AIF   (N'&PRODVERS GT 1).ZE9B                        00567700
.*                 ANOP                                                 00567800
&XPRODVERS         SETC  '&PRODVERS'            SET XVARIABLE           00567900
.ZE9B              ANOP  ,                                              00568000
.*-------------------------------------------------------------------   00568100
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00568200
                   AIF   (K'&ZXPRODVERS LE 0).ZE9R  NOT I/O             00568300
                   AIF   ('&XPRODVERS'(1,1) NE '(').ZE9R                00568400
&ZCGPR             SETC  '&XPRODVERS'(2,K'&XPRODVERS-2)                 00568500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE9P                    00568600
                   AIF   (K'&ZCGPR GT 2).ZE9Q                           00568700
                   AIF   ('&ZCGPR' EQ '0').ZE9Q                         00568800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00568900
                   AIF   (T'&ZCGPR NE 'N').ZE9Q  INVALID REG NAME       00569000
.ZE9P              ANOP  ,                                              00569100
                   AIF   (T'&ZCGPR NE 'N').ZE9R  NON NUMERIC            00569200
                   AIF   ('&ZCGPR' LT '2').ZE9Q                         00569300
                   AIF   ('&ZCGPR' LE '12').ZE9R                        00569400
.ZE9Q              ANOP  ,                                              00569500
&ZMS               SETC  '"PRODVERS='                                   00569600
&ZMS               SETC  '&ZMS.&PRODVERS"'                              00569700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00569800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00569900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00570000
.ZE9R              ANOP  ,                                              00570100
.*----------------------------------------------------------------***   00570200
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          00570300
                   AIF   (N'&PRODQUAL LE 1).ZE10A  CK NUM               00570400
&ZMS               SETC  '"PRODQUAL='                                   00570500
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              00570600
&ZMS               SETC  '&ZMS "PRODQUAL"'                              00570700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00570800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00570900
.ZE10A             ANOP  ,                                              00571000
.*-------------------------------------------------------------------   00571100
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     00571200
                   AIF   (K'&PRODQUAL(1) LE 0).ZE10B NO PRM             00571300
&ZXPRODQUAL        SETC  'INPUT'     SET IN/OUTPUT                      00571400
&XPRODQUAL         SETC  '&PRODQUAL(1)'         SET XVARIABLE           00571500
                   AIF   (N'&PRODQUAL GT 1).ZE10B                       00571600
.*                 ANOP                                                 00571700
&XPRODQUAL         SETC  '&PRODQUAL'            SET XVARIABLE           00571800
.ZE10B             ANOP  ,                                              00571900
.*-------------------------------------------------------------------   00572000
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00572100
                   AIF   (K'&ZXPRODQUAL LE 0).ZE10R  NOT I/O            00572200
                   AIF   ('&XPRODQUAL'(1,1) NE '(').ZE10R               00572300
&ZCGPR             SETC  '&XPRODQUAL'(2,K'&XPRODQUAL-2)                 00572400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE10P                   00572500
                   AIF   (K'&ZCGPR GT 2).ZE10Q                          00572600
                   AIF   ('&ZCGPR' EQ '0').ZE10Q                        00572700
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00572800
                   AIF   (T'&ZCGPR NE 'N').ZE10Q  INVALID REG NAME      00572900
.ZE10P             ANOP  ,                                              00573000
                   AIF   (T'&ZCGPR NE 'N').ZE10R  NON NUMERIC           00573100
                   AIF   ('&ZCGPR' LT '2').ZE10Q                        00573200
                   AIF   ('&ZCGPR' LE '12').ZE10R                       00573300
.ZE10Q             ANOP  ,                                              00573400
&ZMS               SETC  '"PRODQUAL='                                   00573500
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              00573600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00573700
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00573800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00573900
.ZE10R             ANOP  ,                                              00574000
.*----------------------------------------------------------------***   00574100
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          00574200
                   AIF   (N'&PRODID LE 1).ZE11A  CK NUM                 00574300
&ZMS               SETC  '"PRODID='                                     00574400
&ZMS               SETC  '&ZMS.&PRODID"'                                00574500
&ZMS               SETC  '&ZMS "PRODID"'                                00574600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00574700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00574800
.ZE11A             ANOP  ,                                              00574900
.*-------------------------------------------------------------------   00575000
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     00575100
                   AIF   (K'&PRODID(1) LE 0).ZE11B NO PRM               00575200
&ZXPRODID          SETC  'INPUT'     SET IN/OUTPUT                      00575300
&XPRODID           SETC  '&PRODID(1)'           SET XVARIABLE           00575400
                   AIF   (N'&PRODID GT 1).ZE11B                         00575500
.*                 ANOP                                                 00575600
&XPRODID           SETC  '&PRODID'   SET XVARIABLE                      00575700
.ZE11B             ANOP  ,                                              00575800
.*-------------------------------------------------------------------   00575900
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00576000
                   AIF   (K'&ZXPRODID LE 0).ZE11R  NOT I/O              00576100
                   AIF   ('&XPRODID'(1,1) NE '(').ZE11R                 00576200
&ZCGPR             SETC  '&XPRODID'(2,K'&XPRODID-2)                     00576300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE11P                   00576400
                   AIF   (K'&ZCGPR GT 2).ZE11Q                          00576500
                   AIF   ('&ZCGPR' EQ '0').ZE11Q                        00576600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00576700
                   AIF   (T'&ZCGPR NE 'N').ZE11Q  INVALID REG NAME      00576800
.ZE11P             ANOP  ,                                              00576900
                   AIF   (T'&ZCGPR NE 'N').ZE11R  NON NUMERIC           00577000
                   AIF   ('&ZCGPR' LT '2').ZE11Q                        00577100
                   AIF   ('&ZCGPR' LE '12').ZE11R                       00577200
.ZE11Q             ANOP  ,                                              00577300
&ZMS               SETC  '"PRODID='                                     00577400
&ZMS               SETC  '&ZMS.&PRODID"'                                00577500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00577600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00577700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00577800
.ZE11R             ANOP  ,                                              00577900
.*-------------------------------------------------------------------   00578000
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00578100
&ZTLC              SETC 'ADDRSP'                                        00578200
                   AIF   ('&DOMAIN(1)' NE '&ZTLC').ZE15A                00578300
&XDOMAIN           SETC  'ADDRSP'    SET KEYWORD                        00578400
                   AIF   (N'&DOMAIN LE 1).ZE15A  CK NUM                 00578500
&ZMS               SETC  '"DOMAIN='                                     00578600
&ZMS               SETC  '&ZMS.&DOMAIN"'                                00578700
&ZMS               SETC  '&ZMS "DOMAIN"'                                00578800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00578900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00579000
.ZE15A             ANOP  ,                                              00579100
.*-------------------------------------------------------------------   00579200
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00579300
&ZTLC              SETC 'TASK'                                          00579400
                   AIF   ('&DOMAIN(1)' NE '&ZTLC').ZE16A                00579500
&XDOMAIN           SETC  'TASK'      SET KEYWORD                        00579600
                   AIF   (N'&DOMAIN LE 1).ZE16A  CK NUM                 00579700
&ZMS               SETC  '"DOMAIN='                                     00579800
&ZMS               SETC  '&ZMS.&DOMAIN"'                                00579900
&ZMS               SETC  '&ZMS "DOMAIN"'                                00580000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00580100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00580200
.ZE16A             ANOP  ,                                              00580300
.*----------------------------------------------------------------***   00580400
.***AE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00580500
                   AIF   (N'&SCOPE LE 1).ZE18A  CK NUM                  00580600
&ZMS               SETC  '"SCOPE='                                      00580700
&ZMS               SETC  '&ZMS.&SCOPE"'                                 00580800
&ZMS               SETC  '&ZMS "SCOPE"'                                 00580900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00581000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00581100
.ZE18A             ANOP  ,                                              00581200
.*-------------------------------------------------------------------   00581300
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00581400
.ZE19A   AIF   ('&SCOPE(1)' NE 'ALL').ZE20A                             00581500
&XSCOPE            SETC  'ALL'       SET KEYWORD                        00581600
.*-------------------------------------------------------------------   00581700
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00581800
.ZE20A   AIF   ('&SCOPE(1)' NE 'FUNCTION').ZE21A                        00581900
&XSCOPE            SETC  'FUNCTION'  SET KEYWORD                        00582000
.*-------------------------------------------------------------------   00582100
.***AE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00582200
.ZE21A             AIF   (K'&XSCOPE GT 0).ZE21B                         00582300
                   AIF   (K'&SCOPE(1) LE 0).ZE21C                       00582400
&ZMS               SETC  '"SCOPE='                                      00582500
&ZMS               SETC  '&ZMS.&SCOPE"'                                 00582600
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00582700
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00582800
&ZMS               SETC  '&ZMS "ALL"'                                   00582900
&ZMS               SETC  '&ZMS OR "FUNCTION".'                          00583000
                   MNOTE 8,' &ZMS '                                     00583100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00583200
                   AGO   .ZE21C                                         00583300
.*                                                                      00583400
.ZE21B             ANOP  ,                                              00583500
&ZXSCOPE           SETC  'INPUT'     SET IN/OUTPUT                      00583600
.ZE21C             ANOP  ,                                              00583700
.*------------------------------------------------------------------    00583800
.***AE.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00583900
.ZE22              AIF   (K'&XDOMAIN GT 0).ZE22A                        00584000
                   AIF   (K'&DOMAIN(1) LE 0).ZE22B                      00584100
&ZMS               SETC  '"DOMAIN='                                     00584200
&ZMS               SETC  '&ZMS.&DOMAIN"'                                00584300
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00584400
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00584500
&ZMS               SETC  '&ZMS "ADDRSP"'                                00584600
&ZMS               SETC  '&ZMS OR "TASK".'                              00584700
                   MNOTE 8,' &ZMS '                                     00584800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00584900
                   AGO   .ZE22B                                         00585000
.*                                                                      00585100
.ZE22A             ANOP  ,                                              00585200
&ZXDOMAIN          SETC  'INPUT'     SET IN/OUTPUT                      00585300
.ZE22B             ANOP  ,                                              00585400
.*----------------------------------------------------------------***   00585500
.***AE.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE                     00585600
&XDUMMY1           SETC  ''          INITIALIZE XVARIABLE               00585700
                   AIF   (K'&PRTOKEN LE 0).ZE24C                        00585800
&ZXDUMMY1          SETC  'OUTPUT'    SET IN/OUTPUT                      00585900
&XDUMMY1           SETC  'PRTOKEN'   SET XVARIABLE                      00586000
&ZXPRTOKEN         SETC  'OUTPUT'    SET IN/OUTPUT                      00586100
&XPRTOKEN          SETC  '&PRTOKEN(1)'          SET XVARIABLE PARM      00586200
                   AIF   (N'&PRTOKEN GT 1).ZE24A                        00586300
&XPRTOKEN          SETC  '&PRTOKEN'  SET XVARIABLE PARM                 00586400
.ZE24A             AIF   (N'&PRTOKEN LE 1).ZE24B  CK NUM                00586500
&ZMS               SETC  '"PRTOKEN='                                    00586600
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               00586700
&ZMS               SETC  '&ZMS "PRTOKEN"'                               00586800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00586900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00587000
.ZE24B             AIF   (K'&XPRTOKEN GT 0).ZE24C  ONE PARM             00587100
&ZXDUMMY1          SETC  ''          RESET IN/OUTPUT                    00587200
&ZXPRTOKEN         SETC  ''          RESET IN/OUTPUT                    00587300
.ZE24C             ANOP  ,                                              00587400
.*----------------------------------------------------------------***   00587500
.***AE.KMEKY02 NAME, OPT OUTPUT, ME KEYS -NON-XVAR KEY                  00587600
                   AIF   (K'&PRTOKEN64 LE 0).ZE25D  NO ME KEY           00587700
                   AIF   (N'&PRTOKEN64 LE 1).ZE25A  CK NUM              00587800
&ZMS               SETC  '"PRTOKEN64='                                  00587900
&ZMS               SETC  '&ZMS.&PRTOKEN64"'                             00588000
&ZMS               SETC  '&ZMS "PRTOKEN64"'                             00588100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00588200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00588300
.ZE25A             AIF   (K'&XDUMMY1 LE 0).ZE25B                        00588400
&ZMS               SETC  '"PRTOKEN64'                                   00588500
&ZMS               SETC  '&ZMS.=&PRTOKEN64"'                            00588600
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00588700
&ZMS               SETC  '&ZMS "&XDUMMY1"'                              00588800
                   MNOTE 8,' &ZMS KEY.'                                 00588900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00589000
                   AGO   .ZE25D                                         00589100
.*                                                                      00589200
.ZE25B             ANOP  ,                                              00589300
&ZXDUMMY1          SETC  'OUTPUT'    SET IN/OUTPUT                      00589400
&XDUMMY1           SETC  'PRTOKEN64'            SET XVARIABLE           00589500
&ZXPRTOKEN64       SETC  'OUTPUT'    SET IN/OUTPUT                      00589600
&XPRTOKEN64        SETC  '&PRTOKEN64(1)'        SET PARM                00589700
                   AIF   (N'&PRTOKEN64 GT 1).ZE25C                      00589800
&XPRTOKEN64        SETC  '&PRTOKEN64'           SET PARM                00589900
.ZE25C             AIF   (K'&XPRTOKEN64 GT 0).ZE25D  ONE PARM           00590000
&ZXDUMMY1          SETC  ''          RESET IN/OUTPUT                    00590100
&ZXPRTOKEN64       SETC  ''          RESET IN/OUTPUT                    00590200
.ZE25D             ANOP  ,                                              00590300
.*------------------------------------------------------------------    00590400
.***AE.KMEKY07 NAME, OPT OUTPUT, ME KEYS -CHECK IF ENTERED              00590500
                   AIF   (K'&XDUMMY1 GT 0).ZE26B                        00590600
&ZXDUMMY1          SETC  ''          RESET IN/OUTPUT                    00590700
&XDUMMY1           SETC  ''          SET NULL                           00590800
&ZXPRTOKEN         SETC  ''          RESET OUTPUT                       00590900
&XPRTOKEN          SETC  ''          SET NULL PARM                      00591000
.ZE26B             ANOP  ,                                              00591100
.*-------------------------------------------------------------------   00591200
.***AE.KMEKY08 NAME, OPT OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00591300
.ZE24     AIF   ('&XDUMMY1' NE 'PRTOKEN').ZE25                          00591400
.*-------------------------------------------------------------------   00591500
.***AE.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00591600
                   AIF   (K'&ZXPRTOKEN LE 0).ZE24R  NOT I/O             00591700
                   AIF   ('&XPRTOKEN'(1,1) NE '(').ZE24R                00591800
&ZCGPR             SETC  '&XPRTOKEN'(2,K'&XPRTOKEN-2)                   00591900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE24P                   00592000
                   AIF   (K'&ZCGPR GT 2).ZE24Q                          00592100
                   AIF   ('&ZCGPR' EQ '0').ZE24Q                        00592200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00592300
                   AIF   (T'&ZCGPR NE 'N').ZE24Q  INVALID REG NAME      00592400
.ZE24P             ANOP  ,                                              00592500
                   AIF   (T'&ZCGPR NE 'N').ZE24R  NON NUMERIC           00592600
                   AIF   ('&ZCGPR' LT '2').ZE24Q                        00592700
                   AIF   ('&ZCGPR' LE '12').ZE24R                       00592800
.ZE24Q             ANOP  ,                                              00592900
&ZMS               SETC  '"PRTOKEN='                                    00593000
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               00593100
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00593200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00593300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00593400
.ZE24R             ANOP  ,                                              00593500
.*-------------------------------------------------------------------   00593600
.***AE.KMEKY08 NAME, OPT OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00593700
.ZE25     AIF   ('&XDUMMY1' NE 'PRTOKEN64').ZE26                        00593800
.*-------------------------------------------------------------------   00593900
.***AE.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00594000
                   AIF   (K'&ZXPRTOKEN64 LE 0).ZE25R  NOT I/O           00594100
                   AIF   ('&XPRTOKEN64'(1,1) NE '(').ZE25R              00594200
&ZCGPR             SETC  '&XPRTOKEN64'(2,K'&XPRTOKEN64-2)               00594300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE25P                   00594400
                   AIF   (K'&ZCGPR GT 2).ZE25Q                          00594500
                   AIF   ('&ZCGPR' EQ '0').ZE25Q                        00594600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00594700
                   AIF   (T'&ZCGPR NE 'N').ZE25Q  INVALID REG NAME      00594800
.ZE25P             ANOP  ,                                              00594900
                   AIF   (T'&ZCGPR NE 'N').ZE25R  NON NUMERIC           00595000
                   AIF   ('&ZCGPR' LT '2').ZE25Q                        00595100
                   AIF   ('&ZCGPR' LE '12').ZE25R                       00595200
.ZE25Q             ANOP  ,                                              00595300
&ZMS               SETC  '"PRTOKEN64='                                  00595400
&ZMS               SETC  '&ZMS.&PRTOKEN64"'                             00595500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00595600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00595700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00595800
.ZE25R             ANOP  ,                                              00595900
.*-------------------------------------------------------------------   00596000
.***AE.KMEKY09 NAME, OPT OUTPUT, ME KEYS -END                           00596100
.ZE26              ANOP  ,           END MUTUALLY EXCLUSIVE KEYS        00596200
.*-------------------------------------------------------------------   00596300
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00596400
&ZTLC              SETC 'BASE'                                          00596500
                   AIF   ('&UNAUTHSERV(1)' NE '&ZTLC').ZE29A            00596600
&XUNAUTHSERV       SETC  'BASE'      SET KEYWORD                        00596700
                   AIF   (N'&UNAUTHSERV LE 1).ZE29A  CK NUM             00596800
&ZMS               SETC  '"UNAUTHSERV='                                 00596900
&ZMS               SETC  '&ZMS.&UNAUTHSERV"'                            00597000
&ZMS               SETC  '&ZMS "UNAUTHSERV"'                            00597100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00597200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00597300
.ZE29A             ANOP  ,                                              00597400
.*-------------------------------------------------------------------   00597500
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00597600
&ZTLC              SETC 'LEVEL1'                                        00597700
                   AIF   ('&UNAUTHSERV(1)' NE '&ZTLC').ZE30A            00597800
&XUNAUTHSERV       SETC  'LEVEL1'    SET KEYWORD                        00597900
                   AIF   (N'&UNAUTHSERV LE 1).ZE30A  CK NUM             00598000
&ZMS               SETC  '"UNAUTHSERV='                                 00598100
&ZMS               SETC  '&ZMS.&UNAUTHSERV"'                            00598200
&ZMS               SETC  '&ZMS "UNAUTHSERV"'                            00598300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00598400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00598500
.ZE30A             ANOP  ,                                              00598600
.*------------------------------------------------------------------    00598700
.***AE.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00598800
.ZE31              AIF   (K'&XUNAUTHSERV GT 0).ZE31A                    00598900
                   AIF   (K'&UNAUTHSERV(1) LE 0).ZE31B                  00599000
&ZMS               SETC  '"UNAUTHSERV='                                 00599100
&ZMS               SETC  '&ZMS.&UNAUTHSERV"'                            00599200
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00599300
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00599400
&ZMS               SETC  '&ZMS "BASE"'                                  00599500
&ZMS               SETC  '&ZMS OR "LEVEL1".'                            00599600
                   MNOTE 8,' &ZMS '                                     00599700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00599800
                   AGO   .ZE31B                                         00599900
.*                                                                      00600000
.ZE31A             ANOP  ,                                              00600100
&ZXUNAUTHSERV      SETC  'INPUT'     SET IN/OUTPUT                      00600200
.ZE31B             ANOP  ,                                              00600300
.*-------------------------------------------------------------------   00600400
.***AE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00600500
&ZTLC              SETC 'DEREGISTER'                                    00600600
                   AIF   ('&REQUEST(1)' NE '&ZTLC').ZE32A               00600700
&XREQUEST          SETC  'DEREGISTER'           SET KEYWORD             00600800
                   AIF   (N'&REQUEST LE 1).ZE32A  CK NUM                00600900
&ZMS               SETC  '"REQUEST='                                    00601000
&ZMS               SETC  '&ZMS.&REQUEST"'                               00601100
&ZMS               SETC  '&ZMS "REQUEST"'                               00601200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00601300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00601400
.ZE32A             ANOP  ,                                              00601500
.*----------------------------------------------------------------***   00601600
.***AE.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00601700
&XDEREGPRODNAME    SETC  ''          INITIALIZE XVARIABLE               00601800
                   AIF   (K'&PRODOWNER LE 0).ZE34C                      00601900
&ZXDEREGPRODNAME   SETC  'INPUT'     SET IN/OUTPUT                      00602000
&XDEREGPRODNAME    SETC  'PRODOWNER'            SET XVARIABLE           00602100
&ZXPRODOWNER       SETC  'INPUT'     SET IN/OUTPUT                      00602200
&XPRODOWNER        SETC  '&PRODOWNER(1)'        SET XVARIABLE PARM      00602300
                   AIF   (N'&PRODOWNER GT 1).ZE34A                      00602400
&XPRODOWNER        SETC  '&PRODOWNER'           SET XVARIABLE PARM      00602500
.ZE34A             AIF   (N'&PRODOWNER LE 1).ZE34B  CK NUM              00602600
&ZMS               SETC  '"PRODOWNER='                                  00602700
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             00602800
&ZMS               SETC  '&ZMS "PRODOWNER"'                             00602900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00603000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00603100
.ZE34B             AIF   (K'&XPRODOWNER GT 0).ZE34C  ONE PARM           00603200
&ZXDEREGPRODNAME   SETC  ''          RESET IN/OUTPUT                    00603300
&ZXPRODOWNER       SETC  ''          RESET IN/OUTPUT                    00603400
.ZE34C             ANOP  ,                                              00603500
.*----------------------------------------------------------------***   00603600
.***AE.KMEKY02 NAME, RQD INPUT, ME KEYS -NON-XVAR KEY                   00603700
                   AIF   (K'&PRTOKEN LE 0).ZE43D  NO ME KEY             00603800
                   AIF   (N'&PRTOKEN LE 1).ZE43A  CK NUM                00603900
&ZMS               SETC  '"PRTOKEN='                                    00604000
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               00604100
&ZMS               SETC  '&ZMS "PRTOKEN"'                               00604200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00604300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00604400
.ZE43A             AIF   (K'&XDEREGPRODNAME LE 0).ZE43B                 00604500
&ZMS               SETC  '"PRTOKEN'                                     00604600
&ZMS               SETC  '&ZMS.=&PRTOKEN"'                              00604700
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00604800
&ZMS               SETC  '&ZMS "&XDEREGPRODNAME"'                       00604900
                   MNOTE 8,' &ZMS KEY.'                                 00605000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00605100
                   AGO   .ZE43D                                         00605200
.*                                                                      00605300
.ZE43B             ANOP  ,                                              00605400
&ZXDEREGPRODNAME   SETC  'INPUT'     SET IN/OUTPUT                      00605500
&XDEREGPRODNAME    SETC  'PRTOKEN'   SET XVARIABLE                      00605600
&ZXPRTOKEN         SETC  'INPUT'     SET IN/OUTPUT                      00605700
&XPRTOKEN          SETC  '&PRTOKEN(1)'          SET PARM                00605800
                   AIF   (N'&PRTOKEN GT 1).ZE43C                        00605900
&XPRTOKEN          SETC  '&PRTOKEN'  SET PARM                           00606000
.ZE43C             AIF   (K'&XPRTOKEN GT 0).ZE43D  ONE PARM             00606100
&ZXDEREGPRODNAME   SETC  ''          RESET IN/OUTPUT                    00606200
&ZXPRTOKEN         SETC  ''          RESET IN/OUTPUT                    00606300
.ZE43D             ANOP  ,                                              00606400
.*----------------------------------------------------------------***   00606500
.***AE.KMEKY02 NAME, RQD INPUT, ME KEYS -NON-XVAR KEY                   00606600
                   AIF   (K'&PRTOKEN64 LE 0).ZE44D  NO ME KEY           00606700
                   AIF   (N'&PRTOKEN64 LE 1).ZE44A  CK NUM              00606800
&ZMS               SETC  '"PRTOKEN64='                                  00606900
&ZMS               SETC  '&ZMS.&PRTOKEN64"'                             00607000
&ZMS               SETC  '&ZMS "PRTOKEN64"'                             00607100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00607200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00607300
.ZE44A             AIF   (K'&XDEREGPRODNAME LE 0).ZE44B                 00607400
&ZMS               SETC  '"PRTOKEN64'                                   00607500
&ZMS               SETC  '&ZMS.=&PRTOKEN64"'                            00607600
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00607700
&ZMS               SETC  '&ZMS "&XDEREGPRODNAME"'                       00607800
                   MNOTE 8,' &ZMS KEY.'                                 00607900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00608000
                   AGO   .ZE44D                                         00608100
.*                                                                      00608200
.ZE44B             ANOP  ,                                              00608300
&ZXDEREGPRODNAME   SETC  'INPUT'     SET IN/OUTPUT                      00608400
&XDEREGPRODNAME    SETC  'PRTOKEN64'            SET XVARIABLE           00608500
&ZXPRTOKEN64       SETC  'INPUT'     SET IN/OUTPUT                      00608600
&XPRTOKEN64        SETC  '&PRTOKEN64(1)'        SET PARM                00608700
                   AIF   (N'&PRTOKEN64 GT 1).ZE44C                      00608800
&XPRTOKEN64        SETC  '&PRTOKEN64'           SET PARM                00608900
.ZE44C             AIF   (K'&XPRTOKEN64 GT 0).ZE44D  ONE PARM           00609000
&ZXDEREGPRODNAME   SETC  ''          RESET IN/OUTPUT                    00609100
&ZXPRTOKEN64       SETC  ''          RESET IN/OUTPUT                    00609200
.ZE44D             ANOP  ,                                              00609300
.*------------------------------------------------------------------    00609400
.***AE.KMEKY07 NAME, RQD INPUT, ME KEYS -CHECK IF ENTERED               00609500
                   AIF   (K'&XDEREGPRODNAME GT 0).ZE45B                 00609600
&ZXDEREGPRODNAME   SETC  ''          RESET IN/OUTPUT                    00609700
&XDEREGPRODNAME    SETC  ''          SET NULL                           00609800
&ZXPRODOWNER       SETC  ''          RESET OUTPUT                       00609900
&XPRODOWNER        SETC  ''          SET NULL PARM                      00610000
.ZE45B             ANOP  ,                                              00610100
.*-------------------------------------------------------------------   00610200
.***AE.KMEKY08 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00610300
.ZE34     AIF   ('&XDEREGPRODNAME' NE 'PRODOWNER').ZE43                 00610400
.*-------------------------------------------------------------------   00610500
.***AE.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00610600
                   AIF   (K'&ZXPRODOWNER LE 0).ZE34R  NOT I/O           00610700
                   AIF   ('&XPRODOWNER'(1,1) NE '(').ZE34R              00610800
&ZCGPR             SETC  '&XPRODOWNER'(2,K'&XPRODOWNER-2)               00610900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE34P                   00611000
                   AIF   (K'&ZCGPR GT 2).ZE34Q                          00611100
                   AIF   ('&ZCGPR' EQ '0').ZE34Q                        00611200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00611300
                   AIF   (T'&ZCGPR NE 'N').ZE34Q  INVALID REG NAME      00611400
.ZE34P             ANOP  ,                                              00611500
                   AIF   (T'&ZCGPR NE 'N').ZE34R  NON NUMERIC           00611600
                   AIF   ('&ZCGPR' LT '2').ZE34Q                        00611700
                   AIF   ('&ZCGPR' LE '12').ZE34R                       00611800
.ZE34Q             ANOP  ,                                              00611900
&ZMS               SETC  '"PRODOWNER='                                  00612000
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             00612100
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00612200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00612300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00612400
.ZE34R             ANOP  ,                                              00612500
.*----------------------------------------------------------------***   00612600
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          00612700
                   AIF   (N'&PRODNAME LE 1).ZE36A  CK NUM               00612800
&ZMS               SETC  '"PRODNAME='                                   00612900
&ZMS               SETC  '&ZMS.&PRODNAME"'                              00613000
&ZMS               SETC  '&ZMS "PRODNAME"'                              00613100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00613200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00613300
.ZE36A             ANOP  ,                                              00613400
.*-------------------------------------------------------------------   00613500
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     00613600
                   AIF   (K'&PRODNAME(1) LE 0).ZE36B NO PRM             00613700
&ZXPRODNAME        SETC  'INPUT'     SET IN/OUTPUT                      00613800
&XPRODNAME         SETC  '&PRODNAME(1)'         SET XVARIABLE           00613900
                   AIF   (N'&PRODNAME GT 1).ZE36B                       00614000
.*                 ANOP                                                 00614100
&XPRODNAME         SETC  '&PRODNAME'            SET XVARIABLE           00614200
.ZE36B             ANOP  ,                                              00614300
.*-------------------------------------------------------------------   00614400
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00614500
                   AIF   (K'&ZXPRODNAME LE 0).ZE36R  NOT I/O            00614600
                   AIF   ('&XPRODNAME'(1,1) NE '(').ZE36R               00614700
&ZCGPR             SETC  '&XPRODNAME'(2,K'&XPRODNAME-2)                 00614800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE36P                   00614900
                   AIF   (K'&ZCGPR GT 2).ZE36Q                          00615000
                   AIF   ('&ZCGPR' EQ '0').ZE36Q                        00615100
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00615200
                   AIF   (T'&ZCGPR NE 'N').ZE36Q  INVALID REG NAME      00615300
.ZE36P             ANOP  ,                                              00615400
                   AIF   (T'&ZCGPR NE 'N').ZE36R  NON NUMERIC           00615500
                   AIF   ('&ZCGPR' LT '2').ZE36Q                        00615600
                   AIF   ('&ZCGPR' LE '12').ZE36R                       00615700
.ZE36Q             ANOP  ,                                              00615800
&ZMS               SETC  '"PRODNAME='                                   00615900
&ZMS               SETC  '&ZMS.&PRODNAME"'                              00616000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00616100
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00616200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00616300
.ZE36R             ANOP  ,                                              00616400
.*----------------------------------------------------------------***   00616500
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          00616600
                   AIF   (N'&PRODVERS LE 1).ZE39A  CK NUM               00616700
&ZMS               SETC  '"PRODVERS='                                   00616800
&ZMS               SETC  '&ZMS.&PRODVERS"'                              00616900
&ZMS               SETC  '&ZMS "PRODVERS"'                              00617000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00617100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00617200
.ZE39A             ANOP  ,                                              00617300
.*-------------------------------------------------------------------   00617400
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     00617500
                   AIF   (K'&PRODVERS(1) LE 0).ZE39B NO PRM             00617600
&ZXPRODVERS        SETC  'INPUT'     SET IN/OUTPUT                      00617700
&XPRODVERS         SETC  '&PRODVERS(1)'         SET XVARIABLE           00617800
                   AIF   (N'&PRODVERS GT 1).ZE39B                       00617900
.*                 ANOP                                                 00618000
&XPRODVERS         SETC  '&PRODVERS'            SET XVARIABLE           00618100
.ZE39B             ANOP  ,                                              00618200
.*-------------------------------------------------------------------   00618300
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00618400
                   AIF   (K'&ZXPRODVERS LE 0).ZE39R  NOT I/O            00618500
                   AIF   ('&XPRODVERS'(1,1) NE '(').ZE39R               00618600
&ZCGPR             SETC  '&XPRODVERS'(2,K'&XPRODVERS-2)                 00618700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE39P                   00618800
                   AIF   (K'&ZCGPR GT 2).ZE39Q                          00618900
                   AIF   ('&ZCGPR' EQ '0').ZE39Q                        00619000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00619100
                   AIF   (T'&ZCGPR NE 'N').ZE39Q  INVALID REG NAME      00619200
.ZE39P             ANOP  ,                                              00619300
                   AIF   (T'&ZCGPR NE 'N').ZE39R  NON NUMERIC           00619400
                   AIF   ('&ZCGPR' LT '2').ZE39Q                        00619500
                   AIF   ('&ZCGPR' LE '12').ZE39R                       00619600
.ZE39Q             ANOP  ,                                              00619700
&ZMS               SETC  '"PRODVERS='                                   00619800
&ZMS               SETC  '&ZMS.&PRODVERS"'                              00619900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00620000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00620100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00620200
.ZE39R             ANOP  ,                                              00620300
.*----------------------------------------------------------------***   00620400
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          00620500
                   AIF   (N'&PRODQUAL LE 1).ZE40A  CK NUM               00620600
&ZMS               SETC  '"PRODQUAL='                                   00620700
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              00620800
&ZMS               SETC  '&ZMS "PRODQUAL"'                              00620900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00621000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00621100
.ZE40A             ANOP  ,                                              00621200
.*-------------------------------------------------------------------   00621300
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     00621400
                   AIF   (K'&PRODQUAL(1) LE 0).ZE40B NO PRM             00621500
&ZXPRODQUAL        SETC  'INPUT'     SET IN/OUTPUT                      00621600
&XPRODQUAL         SETC  '&PRODQUAL(1)'         SET XVARIABLE           00621700
                   AIF   (N'&PRODQUAL GT 1).ZE40B                       00621800
.*                 ANOP                                                 00621900
&XPRODQUAL         SETC  '&PRODQUAL'            SET XVARIABLE           00622000
.ZE40B             ANOP  ,                                              00622100
.*-------------------------------------------------------------------   00622200
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00622300
                   AIF   (K'&ZXPRODQUAL LE 0).ZE40R  NOT I/O            00622400
                   AIF   ('&XPRODQUAL'(1,1) NE '(').ZE40R               00622500
&ZCGPR             SETC  '&XPRODQUAL'(2,K'&XPRODQUAL-2)                 00622600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE40P                   00622700
                   AIF   (K'&ZCGPR GT 2).ZE40Q                          00622800
                   AIF   ('&ZCGPR' EQ '0').ZE40Q                        00622900
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00623000
                   AIF   (T'&ZCGPR NE 'N').ZE40Q  INVALID REG NAME      00623100
.ZE40P             ANOP  ,                                              00623200
                   AIF   (T'&ZCGPR NE 'N').ZE40R  NON NUMERIC           00623300
                   AIF   ('&ZCGPR' LT '2').ZE40Q                        00623400
                   AIF   ('&ZCGPR' LE '12').ZE40R                       00623500
.ZE40Q             ANOP  ,                                              00623600
&ZMS               SETC  '"PRODQUAL='                                   00623700
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              00623800
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00623900
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00624000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00624100
.ZE40R             ANOP  ,                                              00624200
.*----------------------------------------------------------------***   00624300
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          00624400
                   AIF   (N'&PRODID LE 1).ZE41A  CK NUM                 00624500
&ZMS               SETC  '"PRODID='                                     00624600
&ZMS               SETC  '&ZMS.&PRODID"'                                00624700
&ZMS               SETC  '&ZMS "PRODID"'                                00624800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00624900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00625000
.ZE41A             ANOP  ,                                              00625100
.*-------------------------------------------------------------------   00625200
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     00625300
                   AIF   (K'&PRODID(1) LE 0).ZE41B NO PRM               00625400
&ZXPRODID          SETC  'INPUT'     SET IN/OUTPUT                      00625500
&XPRODID           SETC  '&PRODID(1)'           SET XVARIABLE           00625600
                   AIF   (N'&PRODID GT 1).ZE41B                         00625700
.*                 ANOP                                                 00625800
&XPRODID           SETC  '&PRODID'   SET XVARIABLE                      00625900
.ZE41B             ANOP  ,                                              00626000
.*-------------------------------------------------------------------   00626100
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00626200
                   AIF   (K'&ZXPRODID LE 0).ZE41R  NOT I/O              00626300
                   AIF   ('&XPRODID'(1,1) NE '(').ZE41R                 00626400
&ZCGPR             SETC  '&XPRODID'(2,K'&XPRODID-2)                     00626500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE41P                   00626600
                   AIF   (K'&ZCGPR GT 2).ZE41Q                          00626700
                   AIF   ('&ZCGPR' EQ '0').ZE41Q                        00626800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00626900
                   AIF   (T'&ZCGPR NE 'N').ZE41Q  INVALID REG NAME      00627000
.ZE41P             ANOP  ,                                              00627100
                   AIF   (T'&ZCGPR NE 'N').ZE41R  NON NUMERIC           00627200
                   AIF   ('&ZCGPR' LT '2').ZE41Q                        00627300
                   AIF   ('&ZCGPR' LE '12').ZE41R                       00627400
.ZE41Q             ANOP  ,                                              00627500
&ZMS               SETC  '"PRODID='                                     00627600
&ZMS               SETC  '&ZMS.&PRODID"'                                00627700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00627800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00627900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00628000
.ZE41R             ANOP  ,                                              00628100
.*-------------------------------------------------------------------   00628200
.***AE.KMEKY08 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00628300
.ZE43     AIF   ('&XDEREGPRODNAME' NE 'PRTOKEN').ZE44                   00628400
.*-------------------------------------------------------------------   00628500
.***AE.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00628600
                   AIF   (K'&ZXPRTOKEN LE 0).ZE43R  NOT I/O             00628700
                   AIF   ('&XPRTOKEN'(1,1) NE '(').ZE43R                00628800
&ZCGPR             SETC  '&XPRTOKEN'(2,K'&XPRTOKEN-2)                   00628900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE43P                   00629000
                   AIF   (K'&ZCGPR GT 2).ZE43Q                          00629100
                   AIF   ('&ZCGPR' EQ '0').ZE43Q                        00629200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00629300
                   AIF   (T'&ZCGPR NE 'N').ZE43Q  INVALID REG NAME      00629400
.ZE43P             ANOP  ,                                              00629500
                   AIF   (T'&ZCGPR NE 'N').ZE43R  NON NUMERIC           00629600
                   AIF   ('&ZCGPR' LT '2').ZE43Q                        00629700
                   AIF   ('&ZCGPR' LE '12').ZE43R                       00629800
.ZE43Q             ANOP  ,                                              00629900
&ZMS               SETC  '"PRTOKEN='                                    00630000
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               00630100
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00630200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00630300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00630400
.ZE43R             ANOP  ,                                              00630500
.*-------------------------------------------------------------------   00630600
.***AE.KMEKY08 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00630700
.ZE44     AIF   ('&XDEREGPRODNAME' NE 'PRTOKEN64').ZE45                 00630800
.*-------------------------------------------------------------------   00630900
.***AE.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00631000
                   AIF   (K'&ZXPRTOKEN64 LE 0).ZE44R  NOT I/O           00631100
                   AIF   ('&XPRTOKEN64'(1,1) NE '(').ZE44R              00631200
&ZCGPR             SETC  '&XPRTOKEN64'(2,K'&XPRTOKEN64-2)               00631300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE44P                   00631400
                   AIF   (K'&ZCGPR GT 2).ZE44Q                          00631500
                   AIF   ('&ZCGPR' EQ '0').ZE44Q                        00631600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00631700
                   AIF   (T'&ZCGPR NE 'N').ZE44Q  INVALID REG NAME      00631800
.ZE44P             ANOP  ,                                              00631900
                   AIF   (T'&ZCGPR NE 'N').ZE44R  NON NUMERIC           00632000
                   AIF   ('&ZCGPR' LT '2').ZE44Q                        00632100
                   AIF   ('&ZCGPR' LE '12').ZE44R                       00632200
.ZE44Q             ANOP  ,                                              00632300
&ZMS               SETC  '"PRTOKEN64='                                  00632400
&ZMS               SETC  '&ZMS.&PRTOKEN64"'                             00632500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00632600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00632700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00632800
.ZE44R             ANOP  ,                                              00632900
.*-------------------------------------------------------------------   00633000
.***AE.KMEKY09 NAME, RQD INPUT, ME KEYS -END                            00633100
.ZE45              ANOP  ,           END MUTUALLY EXCLUSIVE KEYS        00633200
.*----------------------------------------------------------------***   00633300
.***AE.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE                     00633400
&XDEREGENDTIME     SETC  ''          INITIALIZE XVARIABLE               00633500
                   AIF   (K'&ENDTIME LE 0).ZE47C                        00633600
&ZXDEREGENDTIME    SETC  'OUTPUT'    SET IN/OUTPUT                      00633700
&XDEREGENDTIME     SETC  'ENDTIME'   SET XVARIABLE                      00633800
&ZXENDTIME         SETC  'OUTPUT'    SET IN/OUTPUT                      00633900
&XENDTIME          SETC  '&ENDTIME(1)'          SET XVARIABLE PARM      00634000
                   AIF   (N'&ENDTIME GT 1).ZE47A                        00634100
&XENDTIME          SETC  '&ENDTIME'  SET XVARIABLE PARM                 00634200
.ZE47A             AIF   (N'&ENDTIME LE 1).ZE47B  CK NUM                00634300
&ZMS               SETC  '"ENDTIME='                                    00634400
&ZMS               SETC  '&ZMS.&ENDTIME"'                               00634500
&ZMS               SETC  '&ZMS "ENDTIME"'                               00634600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00634700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00634800
.ZE47B             AIF   (K'&XENDTIME GT 0).ZE47C  ONE PARM             00634900
&ZXDEREGENDTIME    SETC  ''          RESET IN/OUTPUT                    00635000
&ZXENDTIME         SETC  ''          RESET IN/OUTPUT                    00635100
.ZE47C             ANOP  ,                                              00635200
.*----------------------------------------------------------------***   00635300
.***AE.KMEKY02 NAME, OPT OUTPUT, ME KEYS -NON-XVAR KEY                  00635400
                   AIF   (K'&ENDTIME64 LE 0).ZE48D  NO ME KEY           00635500
                   AIF   (N'&ENDTIME64 LE 1).ZE48A  CK NUM              00635600
&ZMS               SETC  '"ENDTIME64='                                  00635700
&ZMS               SETC  '&ZMS.&ENDTIME64"'                             00635800
&ZMS               SETC  '&ZMS "ENDTIME64"'                             00635900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00636000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00636100
.ZE48A             AIF   (K'&XDEREGENDTIME LE 0).ZE48B                  00636200
&ZMS               SETC  '"ENDTIME64'                                   00636300
&ZMS               SETC  '&ZMS.=&ENDTIME64"'                            00636400
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00636500
&ZMS               SETC  '&ZMS "&XDEREGENDTIME"'                        00636600
                   MNOTE 8,' &ZMS KEY.'                                 00636700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00636800
                   AGO   .ZE48D                                         00636900
.*                                                                      00637000
.ZE48B             ANOP  ,                                              00637100
&ZXDEREGENDTIME    SETC  'OUTPUT'    SET IN/OUTPUT                      00637200
&XDEREGENDTIME     SETC  'ENDTIME64'            SET XVARIABLE           00637300
&ZXENDTIME64       SETC  'OUTPUT'    SET IN/OUTPUT                      00637400
&XENDTIME64        SETC  '&ENDTIME64(1)'        SET PARM                00637500
                   AIF   (N'&ENDTIME64 GT 1).ZE48C                      00637600
&XENDTIME64        SETC  '&ENDTIME64'           SET PARM                00637700
.ZE48C             AIF   (K'&XENDTIME64 GT 0).ZE48D  ONE PARM           00637800
&ZXDEREGENDTIME    SETC  ''          RESET IN/OUTPUT                    00637900
&ZXENDTIME64       SETC  ''          RESET IN/OUTPUT                    00638000
.ZE48D             ANOP  ,                                              00638100
.*------------------------------------------------------------------    00638200
.***AE.KMEKY07 NAME, OPT OUTPUT, ME KEYS -CHECK IF ENTERED              00638300
                   AIF   (K'&XDEREGENDTIME GT 0).ZE49B                  00638400
&ZXDEREGENDTIME    SETC  ''          RESET IN/OUTPUT                    00638500
&XDEREGENDTIME     SETC  ''          SET NULL                           00638600
&ZXENDTIME         SETC  ''          RESET OUTPUT                       00638700
&XENDTIME          SETC  ''          SET NULL PARM                      00638800
.ZE49B             ANOP  ,                                              00638900
.*-------------------------------------------------------------------   00639000
.***AE.KMEKY08 NAME, OPT OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00639100
.ZE47     AIF   ('&XDEREGENDTIME' NE 'ENDTIME').ZE48                    00639200
.*-------------------------------------------------------------------   00639300
.***AE.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00639400
                   AIF   (K'&ZXENDTIME LE 0).ZE47R  NOT I/O             00639500
                   AIF   ('&XENDTIME'(1,1) NE '(').ZE47R                00639600
&ZCGPR             SETC  '&XENDTIME'(2,K'&XENDTIME-2)                   00639700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE47P                   00639800
                   AIF   (K'&ZCGPR GT 2).ZE47Q                          00639900
                   AIF   ('&ZCGPR' EQ '0').ZE47Q                        00640000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00640100
                   AIF   (T'&ZCGPR NE 'N').ZE47Q  INVALID REG NAME      00640200
.ZE47P             ANOP  ,                                              00640300
                   AIF   (T'&ZCGPR NE 'N').ZE47R  NON NUMERIC           00640400
                   AIF   ('&ZCGPR' LT '2').ZE47Q                        00640500
                   AIF   ('&ZCGPR' LE '12').ZE47R                       00640600
.ZE47Q             ANOP  ,                                              00640700
&ZMS               SETC  '"ENDTIME='                                    00640800
&ZMS               SETC  '&ZMS.&ENDTIME"'                               00640900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00641000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00641100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00641200
.ZE47R             ANOP  ,                                              00641300
.*-------------------------------------------------------------------   00641400
.***AE.KMEKY08 NAME, OPT OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00641500
.ZE48     AIF   ('&XDEREGENDTIME' NE 'ENDTIME64').ZE49                  00641600
.*-------------------------------------------------------------------   00641700
.***AE.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00641800
                   AIF   (K'&ZXENDTIME64 LE 0).ZE48R  NOT I/O           00641900
                   AIF   ('&XENDTIME64'(1,1) NE '(').ZE48R              00642000
&ZCGPR             SETC  '&XENDTIME64'(2,K'&XENDTIME64-2)               00642100
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE48P                   00642200
                   AIF   (K'&ZCGPR GT 2).ZE48Q                          00642300
                   AIF   ('&ZCGPR' EQ '0').ZE48Q                        00642400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00642500
                   AIF   (T'&ZCGPR NE 'N').ZE48Q  INVALID REG NAME      00642600
.ZE48P             ANOP  ,                                              00642700
                   AIF   (T'&ZCGPR NE 'N').ZE48R  NON NUMERIC           00642800
                   AIF   ('&ZCGPR' LT '2').ZE48Q                        00642900
                   AIF   ('&ZCGPR' LE '12').ZE48R                       00643000
.ZE48Q             ANOP  ,                                              00643100
&ZMS               SETC  '"ENDTIME64='                                  00643200
&ZMS               SETC  '&ZMS.&ENDTIME64"'                             00643300
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00643400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00643500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00643600
.ZE48R             ANOP  ,                                              00643700
.*-------------------------------------------------------------------   00643800
.***AE.KMEKY09 NAME, OPT OUTPUT, ME KEYS -END                           00643900
.ZE49              ANOP  ,           END MUTUALLY EXCLUSIVE KEYS        00644000
.*----------------------------------------------------------------***   00644100
.***AE.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE                     00644200
&XDEREGENDDATA     SETC  ''          INITIALIZE XVARIABLE               00644300
                   AIF   (K'&ENDDATA LE 0).ZE51C                        00644400
&ZXDEREGENDDATA    SETC  'OUTPUT'    SET IN/OUTPUT                      00644500
&XDEREGENDDATA     SETC  'ENDDATA'   SET XVARIABLE                      00644600
&ZXENDDATA         SETC  'OUTPUT'    SET IN/OUTPUT                      00644700
&XENDDATA          SETC  '&ENDDATA(1)'          SET XVARIABLE PARM      00644800
                   AIF   (N'&ENDDATA GT 1).ZE51A                        00644900
&XENDDATA          SETC  '&ENDDATA'  SET XVARIABLE PARM                 00645000
.ZE51A             AIF   (N'&ENDDATA LE 1).ZE51B  CK NUM                00645100
&ZMS               SETC  '"ENDDATA='                                    00645200
&ZMS               SETC  '&ZMS.&ENDDATA"'                               00645300
&ZMS               SETC  '&ZMS "ENDDATA"'                               00645400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00645500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00645600
.ZE51B             AIF   (K'&XENDDATA GT 0).ZE51C  ONE PARM             00645700
&ZXDEREGENDDATA    SETC  ''          RESET IN/OUTPUT                    00645800
&ZXENDDATA         SETC  ''          RESET IN/OUTPUT                    00645900
.ZE51C             ANOP  ,                                              00646000
.*----------------------------------------------------------------***   00646100
.***AE.KMEKY02 NAME, OPT OUTPUT, ME KEYS -NON-XVAR KEY                  00646200
                   AIF   (K'&ENDDATA64 LE 0).ZE52D  NO ME KEY           00646300
                   AIF   (N'&ENDDATA64 LE 1).ZE52A  CK NUM              00646400
&ZMS               SETC  '"ENDDATA64='                                  00646500
&ZMS               SETC  '&ZMS.&ENDDATA64"'                             00646600
&ZMS               SETC  '&ZMS "ENDDATA64"'                             00646700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00646800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00646900
.ZE52A             AIF   (K'&XDEREGENDDATA LE 0).ZE52B                  00647000
&ZMS               SETC  '"ENDDATA64'                                   00647100
&ZMS               SETC  '&ZMS.=&ENDDATA64"'                            00647200
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00647300
&ZMS               SETC  '&ZMS "&XDEREGENDDATA"'                        00647400
                   MNOTE 8,' &ZMS KEY.'                                 00647500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00647600
                   AGO   .ZE52D                                         00647700
.*                                                                      00647800
.ZE52B             ANOP  ,                                              00647900
&ZXDEREGENDDATA    SETC  'OUTPUT'    SET IN/OUTPUT                      00648000
&XDEREGENDDATA     SETC  'ENDDATA64'            SET XVARIABLE           00648100
&ZXENDDATA64       SETC  'OUTPUT'    SET IN/OUTPUT                      00648200
&XENDDATA64        SETC  '&ENDDATA64(1)'        SET PARM                00648300
                   AIF   (N'&ENDDATA64 GT 1).ZE52C                      00648400
&XENDDATA64        SETC  '&ENDDATA64'           SET PARM                00648500
.ZE52C             AIF   (K'&XENDDATA64 GT 0).ZE52D  ONE PARM           00648600
&ZXDEREGENDDATA    SETC  ''          RESET IN/OUTPUT                    00648700
&ZXENDDATA64       SETC  ''          RESET IN/OUTPUT                    00648800
.ZE52D             ANOP  ,                                              00648900
.*------------------------------------------------------------------    00649000
.***AE.KMEKY07 NAME, OPT OUTPUT, ME KEYS -CHECK IF ENTERED              00649100
                   AIF   (K'&XDEREGENDDATA GT 0).ZE53B                  00649200
&ZXDEREGENDDATA    SETC  ''          RESET IN/OUTPUT                    00649300
&XDEREGENDDATA     SETC  ''          SET NULL                           00649400
&ZXENDDATA         SETC  ''          RESET OUTPUT                       00649500
&XENDDATA          SETC  ''          SET NULL PARM                      00649600
.ZE53B             ANOP  ,                                              00649700
.*-------------------------------------------------------------------   00649800
.***AE.KMEKY08 NAME, OPT OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00649900
.ZE51     AIF   ('&XDEREGENDDATA' NE 'ENDDATA').ZE52                    00650000
.*-------------------------------------------------------------------   00650100
.***AE.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00650200
                   AIF   (K'&ZXENDDATA LE 0).ZE51R  NOT I/O             00650300
                   AIF   ('&XENDDATA'(1,1) NE '(').ZE51R                00650400
&ZCGPR             SETC  '&XENDDATA'(2,K'&XENDDATA-2)                   00650500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE51P                   00650600
                   AIF   (K'&ZCGPR GT 2).ZE51Q                          00650700
                   AIF   ('&ZCGPR' EQ '0').ZE51Q                        00650800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00650900
                   AIF   (T'&ZCGPR NE 'N').ZE51Q  INVALID REG NAME      00651000
.ZE51P             ANOP  ,                                              00651100
                   AIF   (T'&ZCGPR NE 'N').ZE51R  NON NUMERIC           00651200
                   AIF   ('&ZCGPR' LT '2').ZE51Q                        00651300
                   AIF   ('&ZCGPR' LE '12').ZE51R                       00651400
.ZE51Q             ANOP  ,                                              00651500
&ZMS               SETC  '"ENDDATA='                                    00651600
&ZMS               SETC  '&ZMS.&ENDDATA"'                               00651700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00651800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00651900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00652000
.ZE51R             ANOP  ,                                              00652100
.*-------------------------------------------------------------------   00652200
.***AE.KMEKY08 NAME, OPT OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00652300
.ZE52     AIF   ('&XDEREGENDDATA' NE 'ENDDATA64').ZE53                  00652400
.*-------------------------------------------------------------------   00652500
.***AE.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00652600
                   AIF   (K'&ZXENDDATA64 LE 0).ZE52R  NOT I/O           00652700
                   AIF   ('&XENDDATA64'(1,1) NE '(').ZE52R              00652800
&ZCGPR             SETC  '&XENDDATA64'(2,K'&XENDDATA64-2)               00652900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE52P                   00653000
                   AIF   (K'&ZCGPR GT 2).ZE52Q                          00653100
                   AIF   ('&ZCGPR' EQ '0').ZE52Q                        00653200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00653300
                   AIF   (T'&ZCGPR NE 'N').ZE52Q  INVALID REG NAME      00653400
.ZE52P             ANOP  ,                                              00653500
                   AIF   (T'&ZCGPR NE 'N').ZE52R  NON NUMERIC           00653600
                   AIF   ('&ZCGPR' LT '2').ZE52Q                        00653700
                   AIF   ('&ZCGPR' LE '12').ZE52R                       00653800
.ZE52Q             ANOP  ,                                              00653900
&ZMS               SETC  '"ENDDATA64='                                  00654000
&ZMS               SETC  '&ZMS.&ENDDATA64"'                             00654100
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00654200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00654300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00654400
.ZE52R             ANOP  ,                                              00654500
.*-------------------------------------------------------------------   00654600
.***AE.KMEKY09 NAME, OPT OUTPUT, ME KEYS -END                           00654700
.ZE53              ANOP  ,           END MUTUALLY EXCLUSIVE KEYS        00654800
.*-------------------------------------------------------------------   00654900
.***AE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00655000
&ZTLC              SETC 'FUNCTIONBEGIN'                                 00655100
                   AIF   ('&REQUEST(1)' NE '&ZTLC').ZE54A               00655200
&XREQUEST          SETC  'FUNCTIONBEGIN'        SET KEYWORD             00655300
                   AIF   (N'&REQUEST LE 1).ZE54A  CK NUM                00655400
&ZMS               SETC  '"REQUEST='                                    00655500
&ZMS               SETC  '&ZMS.&REQUEST"'                               00655600
&ZMS               SETC  '&ZMS "REQUEST"'                               00655700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00655800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00655900
.ZE54A             ANOP  ,                                              00656000
.*----------------------------------------------------------------***   00656100
.***AE.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00656200
&XBEGINPRODNAME    SETC  ''          INITIALIZE XVARIABLE               00656300
                   AIF   (K'&PRODOWNER LE 0).ZE56C                      00656400
&ZXBEGINPRODNAME   SETC  'INPUT'     SET IN/OUTPUT                      00656500
&XBEGINPRODNAME    SETC  'PRODOWNER'            SET XVARIABLE           00656600
&ZXPRODOWNER       SETC  'INPUT'     SET IN/OUTPUT                      00656700
&XPRODOWNER        SETC  '&PRODOWNER(1)'        SET XVARIABLE PARM      00656800
                   AIF   (N'&PRODOWNER GT 1).ZE56A                      00656900
&XPRODOWNER        SETC  '&PRODOWNER'           SET XVARIABLE PARM      00657000
.ZE56A             AIF   (N'&PRODOWNER LE 1).ZE56B  CK NUM              00657100
&ZMS               SETC  '"PRODOWNER='                                  00657200
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             00657300
&ZMS               SETC  '&ZMS "PRODOWNER"'                             00657400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00657500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00657600
.ZE56B             AIF   (K'&XPRODOWNER GT 0).ZE56C  ONE PARM           00657700
&ZXBEGINPRODNAME   SETC  ''          RESET IN/OUTPUT                    00657800
&ZXPRODOWNER       SETC  ''          RESET IN/OUTPUT                    00657900
.ZE56C             ANOP  ,                                              00658000
.*----------------------------------------------------------------***   00658100
.***AE.KMEKY02 NAME, RQD INPUT, ME KEYS -NON-XVAR KEY                   00658200
                   AIF   (K'&PRTOKEN LE 0).ZE65D  NO ME KEY             00658300
                   AIF   (N'&PRTOKEN LE 1).ZE65A  CK NUM                00658400
&ZMS               SETC  '"PRTOKEN='                                    00658500
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               00658600
&ZMS               SETC  '&ZMS "PRTOKEN"'                               00658700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00658800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00658900
.ZE65A             AIF   (K'&XBEGINPRODNAME LE 0).ZE65B                 00659000
&ZMS               SETC  '"PRTOKEN'                                     00659100
&ZMS               SETC  '&ZMS.=&PRTOKEN"'                              00659200
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00659300
&ZMS               SETC  '&ZMS "&XBEGINPRODNAME"'                       00659400
                   MNOTE 8,' &ZMS KEY.'                                 00659500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00659600
                   AGO   .ZE65D                                         00659700
.*                                                                      00659800
.ZE65B             ANOP  ,                                              00659900
&ZXBEGINPRODNAME   SETC  'INPUT'     SET IN/OUTPUT                      00660000
&XBEGINPRODNAME    SETC  'PRTOKEN'   SET XVARIABLE                      00660100
&ZXPRTOKEN         SETC  'INPUT'     SET IN/OUTPUT                      00660200
&XPRTOKEN          SETC  '&PRTOKEN(1)'          SET PARM                00660300
                   AIF   (N'&PRTOKEN GT 1).ZE65C                        00660400
&XPRTOKEN          SETC  '&PRTOKEN'  SET PARM                           00660500
.ZE65C             AIF   (K'&XPRTOKEN GT 0).ZE65D  ONE PARM             00660600
&ZXBEGINPRODNAME   SETC  ''          RESET IN/OUTPUT                    00660700
&ZXPRTOKEN         SETC  ''          RESET IN/OUTPUT                    00660800
.ZE65D             ANOP  ,                                              00660900
.*----------------------------------------------------------------***   00661000
.***AE.KMEKY02 NAME, RQD INPUT, ME KEYS -NON-XVAR KEY                   00661100
                   AIF   (K'&PRTOKEN64 LE 0).ZE66D  NO ME KEY           00661200
                   AIF   (N'&PRTOKEN64 LE 1).ZE66A  CK NUM              00661300
&ZMS               SETC  '"PRTOKEN64='                                  00661400
&ZMS               SETC  '&ZMS.&PRTOKEN64"'                             00661500
&ZMS               SETC  '&ZMS "PRTOKEN64"'                             00661600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00661700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00661800
.ZE66A             AIF   (K'&XBEGINPRODNAME LE 0).ZE66B                 00661900
&ZMS               SETC  '"PRTOKEN64'                                   00662000
&ZMS               SETC  '&ZMS.=&PRTOKEN64"'                            00662100
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00662200
&ZMS               SETC  '&ZMS "&XBEGINPRODNAME"'                       00662300
                   MNOTE 8,' &ZMS KEY.'                                 00662400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00662500
                   AGO   .ZE66D                                         00662600
.*                                                                      00662700
.ZE66B             ANOP  ,                                              00662800
&ZXBEGINPRODNAME   SETC  'INPUT'     SET IN/OUTPUT                      00662900
&XBEGINPRODNAME    SETC  'PRTOKEN64'            SET XVARIABLE           00663000
&ZXPRTOKEN64       SETC  'INPUT'     SET IN/OUTPUT                      00663100
&XPRTOKEN64        SETC  '&PRTOKEN64(1)'        SET PARM                00663200
                   AIF   (N'&PRTOKEN64 GT 1).ZE66C                      00663300
&XPRTOKEN64        SETC  '&PRTOKEN64'           SET PARM                00663400
.ZE66C             AIF   (K'&XPRTOKEN64 GT 0).ZE66D  ONE PARM           00663500
&ZXBEGINPRODNAME   SETC  ''          RESET IN/OUTPUT                    00663600
&ZXPRTOKEN64       SETC  ''          RESET IN/OUTPUT                    00663700
.ZE66D             ANOP  ,                                              00663800
.*------------------------------------------------------------------    00663900
.***AE.KMEKY07 NAME, RQD INPUT, ME KEYS -CHECK IF ENTERED               00664000
                   AIF   (K'&XBEGINPRODNAME GT 0).ZE67B                 00664100
&ZXBEGINPRODNAME   SETC  ''          RESET IN/OUTPUT                    00664200
&XBEGINPRODNAME    SETC  ''          SET NULL                           00664300
&ZXPRODOWNER       SETC  ''          RESET OUTPUT                       00664400
&XPRODOWNER        SETC  ''          SET NULL PARM                      00664500
.ZE67B             ANOP  ,                                              00664600
.*-------------------------------------------------------------------   00664700
.***AE.KMEKY08 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00664800
.ZE56     AIF   ('&XBEGINPRODNAME' NE 'PRODOWNER').ZE65                 00664900
.*-------------------------------------------------------------------   00665000
.***AE.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00665100
                   AIF   (K'&ZXPRODOWNER LE 0).ZE56R  NOT I/O           00665200
                   AIF   ('&XPRODOWNER'(1,1) NE '(').ZE56R              00665300
&ZCGPR             SETC  '&XPRODOWNER'(2,K'&XPRODOWNER-2)               00665400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE56P                   00665500
                   AIF   (K'&ZCGPR GT 2).ZE56Q                          00665600
                   AIF   ('&ZCGPR' EQ '0').ZE56Q                        00665700
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00665800
                   AIF   (T'&ZCGPR NE 'N').ZE56Q  INVALID REG NAME      00665900
.ZE56P             ANOP  ,                                              00666000
                   AIF   (T'&ZCGPR NE 'N').ZE56R  NON NUMERIC           00666100
                   AIF   ('&ZCGPR' LT '2').ZE56Q                        00666200
                   AIF   ('&ZCGPR' LE '12').ZE56R                       00666300
.ZE56Q             ANOP  ,                                              00666400
&ZMS               SETC  '"PRODOWNER='                                  00666500
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             00666600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00666700
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00666800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00666900
.ZE56R             ANOP  ,                                              00667000
.*----------------------------------------------------------------***   00667100
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          00667200
                   AIF   (N'&PRODNAME LE 1).ZE58A  CK NUM               00667300
&ZMS               SETC  '"PRODNAME='                                   00667400
&ZMS               SETC  '&ZMS.&PRODNAME"'                              00667500
&ZMS               SETC  '&ZMS "PRODNAME"'                              00667600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00667700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00667800
.ZE58A             ANOP  ,                                              00667900
.*-------------------------------------------------------------------   00668000
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     00668100
                   AIF   (K'&PRODNAME(1) LE 0).ZE58B NO PRM             00668200
&ZXPRODNAME        SETC  'INPUT'     SET IN/OUTPUT                      00668300
&XPRODNAME         SETC  '&PRODNAME(1)'         SET XVARIABLE           00668400
                   AIF   (N'&PRODNAME GT 1).ZE58B                       00668500
.*                 ANOP                                                 00668600
&XPRODNAME         SETC  '&PRODNAME'            SET XVARIABLE           00668700
.ZE58B             ANOP  ,                                              00668800
.*-------------------------------------------------------------------   00668900
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00669000
                   AIF   (K'&ZXPRODNAME LE 0).ZE58R  NOT I/O            00669100
                   AIF   ('&XPRODNAME'(1,1) NE '(').ZE58R               00669200
&ZCGPR             SETC  '&XPRODNAME'(2,K'&XPRODNAME-2)                 00669300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE58P                   00669400
                   AIF   (K'&ZCGPR GT 2).ZE58Q                          00669500
                   AIF   ('&ZCGPR' EQ '0').ZE58Q                        00669600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00669700
                   AIF   (T'&ZCGPR NE 'N').ZE58Q  INVALID REG NAME      00669800
.ZE58P             ANOP  ,                                              00669900
                   AIF   (T'&ZCGPR NE 'N').ZE58R  NON NUMERIC           00670000
                   AIF   ('&ZCGPR' LT '2').ZE58Q                        00670100
                   AIF   ('&ZCGPR' LE '12').ZE58R                       00670200
.ZE58Q             ANOP  ,                                              00670300
&ZMS               SETC  '"PRODNAME='                                   00670400
&ZMS               SETC  '&ZMS.&PRODNAME"'                              00670500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00670600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00670700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00670800
.ZE58R             ANOP  ,                                              00670900
.*----------------------------------------------------------------***   00671000
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          00671100
                   AIF   (N'&PRODVERS LE 1).ZE61A  CK NUM               00671200
&ZMS               SETC  '"PRODVERS='                                   00671300
&ZMS               SETC  '&ZMS.&PRODVERS"'                              00671400
&ZMS               SETC  '&ZMS "PRODVERS"'                              00671500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00671600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00671700
.ZE61A             ANOP  ,                                              00671800
.*-------------------------------------------------------------------   00671900
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     00672000
                   AIF   (K'&PRODVERS(1) LE 0).ZE61B NO PRM             00672100
&ZXPRODVERS        SETC  'INPUT'     SET IN/OUTPUT                      00672200
&XPRODVERS         SETC  '&PRODVERS(1)'         SET XVARIABLE           00672300
                   AIF   (N'&PRODVERS GT 1).ZE61B                       00672400
.*                 ANOP                                                 00672500
&XPRODVERS         SETC  '&PRODVERS'            SET XVARIABLE           00672600
.ZE61B             ANOP  ,                                              00672700
.*-------------------------------------------------------------------   00672800
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00672900
                   AIF   (K'&ZXPRODVERS LE 0).ZE61R  NOT I/O            00673000
                   AIF   ('&XPRODVERS'(1,1) NE '(').ZE61R               00673100
&ZCGPR             SETC  '&XPRODVERS'(2,K'&XPRODVERS-2)                 00673200
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE61P                   00673300
                   AIF   (K'&ZCGPR GT 2).ZE61Q                          00673400
                   AIF   ('&ZCGPR' EQ '0').ZE61Q                        00673500
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00673600
                   AIF   (T'&ZCGPR NE 'N').ZE61Q  INVALID REG NAME      00673700
.ZE61P             ANOP  ,                                              00673800
                   AIF   (T'&ZCGPR NE 'N').ZE61R  NON NUMERIC           00673900
                   AIF   ('&ZCGPR' LT '2').ZE61Q                        00674000
                   AIF   ('&ZCGPR' LE '12').ZE61R                       00674100
.ZE61Q             ANOP  ,                                              00674200
&ZMS               SETC  '"PRODVERS='                                   00674300
&ZMS               SETC  '&ZMS.&PRODVERS"'                              00674400
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00674500
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00674600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00674700
.ZE61R             ANOP  ,                                              00674800
.*----------------------------------------------------------------***   00674900
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          00675000
                   AIF   (N'&PRODQUAL LE 1).ZE62A  CK NUM               00675100
&ZMS               SETC  '"PRODQUAL='                                   00675200
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              00675300
&ZMS               SETC  '&ZMS "PRODQUAL"'                              00675400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00675500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00675600
.ZE62A             ANOP  ,                                              00675700
.*-------------------------------------------------------------------   00675800
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     00675900
                   AIF   (K'&PRODQUAL(1) LE 0).ZE62B NO PRM             00676000
&ZXPRODQUAL        SETC  'INPUT'     SET IN/OUTPUT                      00676100
&XPRODQUAL         SETC  '&PRODQUAL(1)'         SET XVARIABLE           00676200
                   AIF   (N'&PRODQUAL GT 1).ZE62B                       00676300
.*                 ANOP                                                 00676400
&XPRODQUAL         SETC  '&PRODQUAL'            SET XVARIABLE           00676500
.ZE62B             ANOP  ,                                              00676600
.*-------------------------------------------------------------------   00676700
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00676800
                   AIF   (K'&ZXPRODQUAL LE 0).ZE62R  NOT I/O            00676900
                   AIF   ('&XPRODQUAL'(1,1) NE '(').ZE62R               00677000
&ZCGPR             SETC  '&XPRODQUAL'(2,K'&XPRODQUAL-2)                 00677100
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE62P                   00677200
                   AIF   (K'&ZCGPR GT 2).ZE62Q                          00677300
                   AIF   ('&ZCGPR' EQ '0').ZE62Q                        00677400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00677500
                   AIF   (T'&ZCGPR NE 'N').ZE62Q  INVALID REG NAME      00677600
.ZE62P             ANOP  ,                                              00677700
                   AIF   (T'&ZCGPR NE 'N').ZE62R  NON NUMERIC           00677800
                   AIF   ('&ZCGPR' LT '2').ZE62Q                        00677900
                   AIF   ('&ZCGPR' LE '12').ZE62R                       00678000
.ZE62Q             ANOP  ,                                              00678100
&ZMS               SETC  '"PRODQUAL='                                   00678200
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              00678300
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00678400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00678500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00678600
.ZE62R             ANOP  ,                                              00678700
.*----------------------------------------------------------------***   00678800
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          00678900
                   AIF   (N'&PRODID LE 1).ZE63A  CK NUM                 00679000
&ZMS               SETC  '"PRODID='                                     00679100
&ZMS               SETC  '&ZMS.&PRODID"'                                00679200
&ZMS               SETC  '&ZMS "PRODID"'                                00679300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00679400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00679500
.ZE63A             ANOP  ,                                              00679600
.*-------------------------------------------------------------------   00679700
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     00679800
                   AIF   (K'&PRODID(1) LE 0).ZE63B NO PRM               00679900
&ZXPRODID          SETC  'INPUT'     SET IN/OUTPUT                      00680000
&XPRODID           SETC  '&PRODID(1)'           SET XVARIABLE           00680100
                   AIF   (N'&PRODID GT 1).ZE63B                         00680200
.*                 ANOP                                                 00680300
&XPRODID           SETC  '&PRODID'   SET XVARIABLE                      00680400
.ZE63B             ANOP  ,                                              00680500
.*-------------------------------------------------------------------   00680600
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00680700
                   AIF   (K'&ZXPRODID LE 0).ZE63R  NOT I/O              00680800
                   AIF   ('&XPRODID'(1,1) NE '(').ZE63R                 00680900
&ZCGPR             SETC  '&XPRODID'(2,K'&XPRODID-2)                     00681000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE63P                   00681100
                   AIF   (K'&ZCGPR GT 2).ZE63Q                          00681200
                   AIF   ('&ZCGPR' EQ '0').ZE63Q                        00681300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00681400
                   AIF   (T'&ZCGPR NE 'N').ZE63Q  INVALID REG NAME      00681500
.ZE63P             ANOP  ,                                              00681600
                   AIF   (T'&ZCGPR NE 'N').ZE63R  NON NUMERIC           00681700
                   AIF   ('&ZCGPR' LT '2').ZE63Q                        00681800
                   AIF   ('&ZCGPR' LE '12').ZE63R                       00681900
.ZE63Q             ANOP  ,                                              00682000
&ZMS               SETC  '"PRODID='                                     00682100
&ZMS               SETC  '&ZMS.&PRODID"'                                00682200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00682300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00682400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00682500
.ZE63R             ANOP  ,                                              00682600
.*-------------------------------------------------------------------   00682700
.***AE.KMEKY08 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00682800
.ZE65     AIF   ('&XBEGINPRODNAME' NE 'PRTOKEN').ZE66                   00682900
.*-------------------------------------------------------------------   00683000
.***AE.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00683100
                   AIF   (K'&ZXPRTOKEN LE 0).ZE65R  NOT I/O             00683200
                   AIF   ('&XPRTOKEN'(1,1) NE '(').ZE65R                00683300
&ZCGPR             SETC  '&XPRTOKEN'(2,K'&XPRTOKEN-2)                   00683400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE65P                   00683500
                   AIF   (K'&ZCGPR GT 2).ZE65Q                          00683600
                   AIF   ('&ZCGPR' EQ '0').ZE65Q                        00683700
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00683800
                   AIF   (T'&ZCGPR NE 'N').ZE65Q  INVALID REG NAME      00683900
.ZE65P             ANOP  ,                                              00684000
                   AIF   (T'&ZCGPR NE 'N').ZE65R  NON NUMERIC           00684100
                   AIF   ('&ZCGPR' LT '2').ZE65Q                        00684200
                   AIF   ('&ZCGPR' LE '12').ZE65R                       00684300
.ZE65Q             ANOP  ,                                              00684400
&ZMS               SETC  '"PRTOKEN='                                    00684500
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               00684600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00684700
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00684800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00684900
.ZE65R             ANOP  ,                                              00685000
.*-------------------------------------------------------------------   00685100
.***AE.KMEKY08 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00685200
.ZE66     AIF   ('&XBEGINPRODNAME' NE 'PRTOKEN64').ZE67                 00685300
.*-------------------------------------------------------------------   00685400
.***AE.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00685500
                   AIF   (K'&ZXPRTOKEN64 LE 0).ZE66R  NOT I/O           00685600
                   AIF   ('&XPRTOKEN64'(1,1) NE '(').ZE66R              00685700
&ZCGPR             SETC  '&XPRTOKEN64'(2,K'&XPRTOKEN64-2)               00685800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE66P                   00685900
                   AIF   (K'&ZCGPR GT 2).ZE66Q                          00686000
                   AIF   ('&ZCGPR' EQ '0').ZE66Q                        00686100
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00686200
                   AIF   (T'&ZCGPR NE 'N').ZE66Q  INVALID REG NAME      00686300
.ZE66P             ANOP  ,                                              00686400
                   AIF   (T'&ZCGPR NE 'N').ZE66R  NON NUMERIC           00686500
                   AIF   ('&ZCGPR' LT '2').ZE66Q                        00686600
                   AIF   ('&ZCGPR' LE '12').ZE66R                       00686700
.ZE66Q             ANOP  ,                                              00686800
&ZMS               SETC  '"PRTOKEN64='                                  00686900
&ZMS               SETC  '&ZMS.&PRTOKEN64"'                             00687000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00687100
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00687200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00687300
.ZE66R             ANOP  ,                                              00687400
.*-------------------------------------------------------------------   00687500
.***AE.KMEKY09 NAME, RQD INPUT, ME KEYS -END                            00687600
.ZE67              ANOP  ,           END MUTUALLY EXCLUSIVE KEYS        00687700
.*----------------------------------------------------------------***   00687800
.***AE.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE                     00687900
&XDUMMY2           SETC  ''          INITIALIZE XVARIABLE               00688000
                   AIF   (K'&BEGTIME LE 0).ZE69C                        00688100
&ZXDUMMY2          SETC  'OUTPUT'    SET IN/OUTPUT                      00688200
&XDUMMY2           SETC  'BEGTIME'   SET XVARIABLE                      00688300
&ZXBEGTIME         SETC  'OUTPUT'    SET IN/OUTPUT                      00688400
&XBEGTIME          SETC  '&BEGTIME(1)'          SET XVARIABLE PARM      00688500
                   AIF   (N'&BEGTIME GT 1).ZE69A                        00688600
&XBEGTIME          SETC  '&BEGTIME'  SET XVARIABLE PARM                 00688700
.ZE69A             AIF   (N'&BEGTIME LE 1).ZE69B  CK NUM                00688800
&ZMS               SETC  '"BEGTIME='                                    00688900
&ZMS               SETC  '&ZMS.&BEGTIME"'                               00689000
&ZMS               SETC  '&ZMS "BEGTIME"'                               00689100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00689200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00689300
.ZE69B             AIF   (K'&XBEGTIME GT 0).ZE69C  ONE PARM             00689400
&ZXDUMMY2          SETC  ''          RESET IN/OUTPUT                    00689500
&ZXBEGTIME         SETC  ''          RESET IN/OUTPUT                    00689600
.ZE69C             ANOP  ,                                              00689700
.*----------------------------------------------------------------***   00689800
.***AE.KMEKY02 NAME, OPT OUTPUT, ME KEYS -NON-XVAR KEY                  00689900
                   AIF   (K'&BEGTIME64 LE 0).ZE70D  NO ME KEY           00690000
                   AIF   (N'&BEGTIME64 LE 1).ZE70A  CK NUM              00690100
&ZMS               SETC  '"BEGTIME64='                                  00690200
&ZMS               SETC  '&ZMS.&BEGTIME64"'                             00690300
&ZMS               SETC  '&ZMS "BEGTIME64"'                             00690400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00690500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00690600
.ZE70A             AIF   (K'&XDUMMY2 LE 0).ZE70B                        00690700
&ZMS               SETC  '"BEGTIME64'                                   00690800
&ZMS               SETC  '&ZMS.=&BEGTIME64"'                            00690900
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00691000
&ZMS               SETC  '&ZMS "&XDUMMY2"'                              00691100
                   MNOTE 8,' &ZMS KEY.'                                 00691200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00691300
                   AGO   .ZE70D                                         00691400
.*                                                                      00691500
.ZE70B             ANOP  ,                                              00691600
&ZXDUMMY2          SETC  'OUTPUT'    SET IN/OUTPUT                      00691700
&XDUMMY2           SETC  'BEGTIME64'            SET XVARIABLE           00691800
&ZXBEGTIME64       SETC  'OUTPUT'    SET IN/OUTPUT                      00691900
&XBEGTIME64        SETC  '&BEGTIME64(1)'        SET PARM                00692000
                   AIF   (N'&BEGTIME64 GT 1).ZE70C                      00692100
&XBEGTIME64        SETC  '&BEGTIME64'           SET PARM                00692200
.ZE70C             AIF   (K'&XBEGTIME64 GT 0).ZE70D  ONE PARM           00692300
&ZXDUMMY2          SETC  ''          RESET IN/OUTPUT                    00692400
&ZXBEGTIME64       SETC  ''          RESET IN/OUTPUT                    00692500
.ZE70D             ANOP  ,                                              00692600
.*------------------------------------------------------------------    00692700
.***AE.KMEKY07 NAME, OPT OUTPUT, ME KEYS -CHECK IF ENTERED              00692800
                   AIF   (K'&XDUMMY2 GT 0).ZE71B                        00692900
&ZXDUMMY2          SETC  ''          RESET IN/OUTPUT                    00693000
&XDUMMY2           SETC  ''          SET NULL                           00693100
&ZXBEGTIME         SETC  ''          RESET OUTPUT                       00693200
&XBEGTIME          SETC  ''          SET NULL PARM                      00693300
.ZE71B             ANOP  ,                                              00693400
.*-------------------------------------------------------------------   00693500
.***AE.KMEKY08 NAME, OPT OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00693600
.ZE69     AIF   ('&XDUMMY2' NE 'BEGTIME').ZE70                          00693700
.*-------------------------------------------------------------------   00693800
.***AE.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00693900
                   AIF   (K'&ZXBEGTIME LE 0).ZE69R  NOT I/O             00694000
                   AIF   ('&XBEGTIME'(1,1) NE '(').ZE69R                00694100
&ZCGPR             SETC  '&XBEGTIME'(2,K'&XBEGTIME-2)                   00694200
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE69P                   00694300
                   AIF   (K'&ZCGPR GT 2).ZE69Q                          00694400
                   AIF   ('&ZCGPR' EQ '0').ZE69Q                        00694500
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00694600
                   AIF   (T'&ZCGPR NE 'N').ZE69Q  INVALID REG NAME      00694700
.ZE69P             ANOP  ,                                              00694800
                   AIF   (T'&ZCGPR NE 'N').ZE69R  NON NUMERIC           00694900
                   AIF   ('&ZCGPR' LT '2').ZE69Q                        00695000
                   AIF   ('&ZCGPR' LE '12').ZE69R                       00695100
.ZE69Q             ANOP  ,                                              00695200
&ZMS               SETC  '"BEGTIME='                                    00695300
&ZMS               SETC  '&ZMS.&BEGTIME"'                               00695400
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00695500
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00695600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00695700
.ZE69R             ANOP  ,                                              00695800
.*-------------------------------------------------------------------   00695900
.***AE.KMEKY08 NAME, OPT OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00696000
.ZE70     AIF   ('&XDUMMY2' NE 'BEGTIME64').ZE71                        00696100
.*-------------------------------------------------------------------   00696200
.***AE.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00696300
                   AIF   (K'&ZXBEGTIME64 LE 0).ZE70R  NOT I/O           00696400
                   AIF   ('&XBEGTIME64'(1,1) NE '(').ZE70R              00696500
&ZCGPR             SETC  '&XBEGTIME64'(2,K'&XBEGTIME64-2)               00696600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE70P                   00696700
                   AIF   (K'&ZCGPR GT 2).ZE70Q                          00696800
                   AIF   ('&ZCGPR' EQ '0').ZE70Q                        00696900
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00697000
                   AIF   (T'&ZCGPR NE 'N').ZE70Q  INVALID REG NAME      00697100
.ZE70P             ANOP  ,                                              00697200
                   AIF   (T'&ZCGPR NE 'N').ZE70R  NON NUMERIC           00697300
                   AIF   ('&ZCGPR' LT '2').ZE70Q                        00697400
                   AIF   ('&ZCGPR' LE '12').ZE70R                       00697500
.ZE70Q             ANOP  ,                                              00697600
&ZMS               SETC  '"BEGTIME64='                                  00697700
&ZMS               SETC  '&ZMS.&BEGTIME64"'                             00697800
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00697900
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00698000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00698100
.ZE70R             ANOP  ,                                              00698200
.*-------------------------------------------------------------------   00698300
.***AE.KMEKY09 NAME, OPT OUTPUT, ME KEYS -END                           00698400
.ZE71              ANOP  ,           END MUTUALLY EXCLUSIVE KEYS        00698500
.*-------------------------------------------------------------------   00698600
.***AE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00698700
&ZTLC              SETC 'FUNCTIONDATA'                                  00698800
                   AIF   ('&REQUEST(1)' NE '&ZTLC').ZE72A               00698900
&XREQUEST          SETC  'FUNCTIONDATA'         SET KEYWORD             00699000
                   AIF   (N'&REQUEST LE 1).ZE72A  CK NUM                00699100
&ZMS               SETC  '"REQUEST='                                    00699200
&ZMS               SETC  '&ZMS.&REQUEST"'                               00699300
&ZMS               SETC  '&ZMS "REQUEST"'                               00699400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00699500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00699600
.ZE72A             ANOP  ,                                              00699700
.*----------------------------------------------------------------***   00699800
.***AE.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00699900
&XDATAPRODNAME     SETC  ''          INITIALIZE XVARIABLE               00700000
                   AIF   (K'&PRODOWNER LE 0).ZE74C                      00700100
&ZXDATAPRODNAME    SETC  'INPUT'     SET IN/OUTPUT                      00700200
&XDATAPRODNAME     SETC  'PRODOWNER'            SET XVARIABLE           00700300
&ZXPRODOWNER       SETC  'INPUT'     SET IN/OUTPUT                      00700400
&XPRODOWNER        SETC  '&PRODOWNER(1)'        SET XVARIABLE PARM      00700500
                   AIF   (N'&PRODOWNER GT 1).ZE74A                      00700600
&XPRODOWNER        SETC  '&PRODOWNER'           SET XVARIABLE PARM      00700700
.ZE74A             AIF   (N'&PRODOWNER LE 1).ZE74B  CK NUM              00700800
&ZMS               SETC  '"PRODOWNER='                                  00700900
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             00701000
&ZMS               SETC  '&ZMS "PRODOWNER"'                             00701100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00701200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00701300
.ZE74B             AIF   (K'&XPRODOWNER GT 0).ZE74C  ONE PARM           00701400
&ZXDATAPRODNAME    SETC  ''          RESET IN/OUTPUT                    00701500
&ZXPRODOWNER       SETC  ''          RESET IN/OUTPUT                    00701600
.ZE74C             ANOP  ,                                              00701700
.*----------------------------------------------------------------***   00701800
.***AE.KMEKY02 NAME, RQD INPUT, ME KEYS -NON-XVAR KEY                   00701900
                   AIF   (K'&PRTOKEN LE 0).ZE83D  NO ME KEY             00702000
                   AIF   (N'&PRTOKEN LE 1).ZE83A  CK NUM                00702100
&ZMS               SETC  '"PRTOKEN='                                    00702200
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               00702300
&ZMS               SETC  '&ZMS "PRTOKEN"'                               00702400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00702500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00702600
.ZE83A             AIF   (K'&XDATAPRODNAME LE 0).ZE83B                  00702700
&ZMS               SETC  '"PRTOKEN'                                     00702800
&ZMS               SETC  '&ZMS.=&PRTOKEN"'                              00702900
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00703000
&ZMS               SETC  '&ZMS "&XDATAPRODNAME"'                        00703100
                   MNOTE 8,' &ZMS KEY.'                                 00703200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00703300
                   AGO   .ZE83D                                         00703400
.*                                                                      00703500
.ZE83B             ANOP  ,                                              00703600
&ZXDATAPRODNAME    SETC  'INPUT'     SET IN/OUTPUT                      00703700
&XDATAPRODNAME     SETC  'PRTOKEN'   SET XVARIABLE                      00703800
&ZXPRTOKEN         SETC  'INPUT'     SET IN/OUTPUT                      00703900
&XPRTOKEN          SETC  '&PRTOKEN(1)'          SET PARM                00704000
                   AIF   (N'&PRTOKEN GT 1).ZE83C                        00704100
&XPRTOKEN          SETC  '&PRTOKEN'  SET PARM                           00704200
.ZE83C             AIF   (K'&XPRTOKEN GT 0).ZE83D  ONE PARM             00704300
&ZXDATAPRODNAME    SETC  ''          RESET IN/OUTPUT                    00704400
&ZXPRTOKEN         SETC  ''          RESET IN/OUTPUT                    00704500
.ZE83D             ANOP  ,                                              00704600
.*----------------------------------------------------------------***   00704700
.***AE.KMEKY02 NAME, RQD INPUT, ME KEYS -NON-XVAR KEY                   00704800
                   AIF   (K'&PRTOKEN64 LE 0).ZE84D  NO ME KEY           00704900
                   AIF   (N'&PRTOKEN64 LE 1).ZE84A  CK NUM              00705000
&ZMS               SETC  '"PRTOKEN64='                                  00705100
&ZMS               SETC  '&ZMS.&PRTOKEN64"'                             00705200
&ZMS               SETC  '&ZMS "PRTOKEN64"'                             00705300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00705400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00705500
.ZE84A             AIF   (K'&XDATAPRODNAME LE 0).ZE84B                  00705600
&ZMS               SETC  '"PRTOKEN64'                                   00705700
&ZMS               SETC  '&ZMS.=&PRTOKEN64"'                            00705800
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00705900
&ZMS               SETC  '&ZMS "&XDATAPRODNAME"'                        00706000
                   MNOTE 8,' &ZMS KEY.'                                 00706100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00706200
                   AGO   .ZE84D                                         00706300
.*                                                                      00706400
.ZE84B             ANOP  ,                                              00706500
&ZXDATAPRODNAME    SETC  'INPUT'     SET IN/OUTPUT                      00706600
&XDATAPRODNAME     SETC  'PRTOKEN64'            SET XVARIABLE           00706700
&ZXPRTOKEN64       SETC  'INPUT'     SET IN/OUTPUT                      00706800
&XPRTOKEN64        SETC  '&PRTOKEN64(1)'        SET PARM                00706900
                   AIF   (N'&PRTOKEN64 GT 1).ZE84C                      00707000
&XPRTOKEN64        SETC  '&PRTOKEN64'           SET PARM                00707100
.ZE84C             AIF   (K'&XPRTOKEN64 GT 0).ZE84D  ONE PARM           00707200
&ZXDATAPRODNAME    SETC  ''          RESET IN/OUTPUT                    00707300
&ZXPRTOKEN64       SETC  ''          RESET IN/OUTPUT                    00707400
.ZE84D             ANOP  ,                                              00707500
.*------------------------------------------------------------------    00707600
.***AE.KMEKY07 NAME, RQD INPUT, ME KEYS -CHECK IF ENTERED               00707700
                   AIF   (K'&XDATAPRODNAME GT 0).ZE85B                  00707800
&ZXDATAPRODNAME    SETC  ''          RESET IN/OUTPUT                    00707900
&XDATAPRODNAME     SETC  ''          SET NULL                           00708000
&ZXPRODOWNER       SETC  ''          RESET OUTPUT                       00708100
&XPRODOWNER        SETC  ''          SET NULL PARM                      00708200
.ZE85B             ANOP  ,                                              00708300
.*-------------------------------------------------------------------   00708400
.***AE.KMEKY08 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00708500
.ZE74     AIF   ('&XDATAPRODNAME' NE 'PRODOWNER').ZE83                  00708600
.*-------------------------------------------------------------------   00708700
.***AE.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00708800
                   AIF   (K'&ZXPRODOWNER LE 0).ZE74R  NOT I/O           00708900
                   AIF   ('&XPRODOWNER'(1,1) NE '(').ZE74R              00709000
&ZCGPR             SETC  '&XPRODOWNER'(2,K'&XPRODOWNER-2)               00709100
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE74P                   00709200
                   AIF   (K'&ZCGPR GT 2).ZE74Q                          00709300
                   AIF   ('&ZCGPR' EQ '0').ZE74Q                        00709400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00709500
                   AIF   (T'&ZCGPR NE 'N').ZE74Q  INVALID REG NAME      00709600
.ZE74P             ANOP  ,                                              00709700
                   AIF   (T'&ZCGPR NE 'N').ZE74R  NON NUMERIC           00709800
                   AIF   ('&ZCGPR' LT '2').ZE74Q                        00709900
                   AIF   ('&ZCGPR' LE '12').ZE74R                       00710000
.ZE74Q             ANOP  ,                                              00710100
&ZMS               SETC  '"PRODOWNER='                                  00710200
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             00710300
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00710400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00710500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00710600
.ZE74R             ANOP  ,                                              00710700
.*----------------------------------------------------------------***   00710800
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          00710900
                   AIF   (N'&PRODNAME LE 1).ZE76A  CK NUM               00711000
&ZMS               SETC  '"PRODNAME='                                   00711100
&ZMS               SETC  '&ZMS.&PRODNAME"'                              00711200
&ZMS               SETC  '&ZMS "PRODNAME"'                              00711300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00711400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00711500
.ZE76A             ANOP  ,                                              00711600
.*-------------------------------------------------------------------   00711700
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     00711800
                   AIF   (K'&PRODNAME(1) LE 0).ZE76B NO PRM             00711900
&ZXPRODNAME        SETC  'INPUT'     SET IN/OUTPUT                      00712000
&XPRODNAME         SETC  '&PRODNAME(1)'         SET XVARIABLE           00712100
                   AIF   (N'&PRODNAME GT 1).ZE76B                       00712200
.*                 ANOP                                                 00712300
&XPRODNAME         SETC  '&PRODNAME'            SET XVARIABLE           00712400
.ZE76B             ANOP  ,                                              00712500
.*-------------------------------------------------------------------   00712600
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00712700
                   AIF   (K'&ZXPRODNAME LE 0).ZE76R  NOT I/O            00712800
                   AIF   ('&XPRODNAME'(1,1) NE '(').ZE76R               00712900
&ZCGPR             SETC  '&XPRODNAME'(2,K'&XPRODNAME-2)                 00713000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE76P                   00713100
                   AIF   (K'&ZCGPR GT 2).ZE76Q                          00713200
                   AIF   ('&ZCGPR' EQ '0').ZE76Q                        00713300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00713400
                   AIF   (T'&ZCGPR NE 'N').ZE76Q  INVALID REG NAME      00713500
.ZE76P             ANOP  ,                                              00713600
                   AIF   (T'&ZCGPR NE 'N').ZE76R  NON NUMERIC           00713700
                   AIF   ('&ZCGPR' LT '2').ZE76Q                        00713800
                   AIF   ('&ZCGPR' LE '12').ZE76R                       00713900
.ZE76Q             ANOP  ,                                              00714000
&ZMS               SETC  '"PRODNAME='                                   00714100
&ZMS               SETC  '&ZMS.&PRODNAME"'                              00714200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00714300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00714400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00714500
.ZE76R             ANOP  ,                                              00714600
.*----------------------------------------------------------------***   00714700
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          00714800
                   AIF   (N'&PRODVERS LE 1).ZE79A  CK NUM               00714900
&ZMS               SETC  '"PRODVERS='                                   00715000
&ZMS               SETC  '&ZMS.&PRODVERS"'                              00715100
&ZMS               SETC  '&ZMS "PRODVERS"'                              00715200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00715300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00715400
.ZE79A             ANOP  ,                                              00715500
.*-------------------------------------------------------------------   00715600
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     00715700
                   AIF   (K'&PRODVERS(1) LE 0).ZE79B NO PRM             00715800
&ZXPRODVERS        SETC  'INPUT'     SET IN/OUTPUT                      00715900
&XPRODVERS         SETC  '&PRODVERS(1)'         SET XVARIABLE           00716000
                   AIF   (N'&PRODVERS GT 1).ZE79B                       00716100
.*                 ANOP                                                 00716200
&XPRODVERS         SETC  '&PRODVERS'            SET XVARIABLE           00716300
.ZE79B             ANOP  ,                                              00716400
.*-------------------------------------------------------------------   00716500
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00716600
                   AIF   (K'&ZXPRODVERS LE 0).ZE79R  NOT I/O            00716700
                   AIF   ('&XPRODVERS'(1,1) NE '(').ZE79R               00716800
&ZCGPR             SETC  '&XPRODVERS'(2,K'&XPRODVERS-2)                 00716900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE79P                   00717000
                   AIF   (K'&ZCGPR GT 2).ZE79Q                          00717100
                   AIF   ('&ZCGPR' EQ '0').ZE79Q                        00717200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00717300
                   AIF   (T'&ZCGPR NE 'N').ZE79Q  INVALID REG NAME      00717400
.ZE79P             ANOP  ,                                              00717500
                   AIF   (T'&ZCGPR NE 'N').ZE79R  NON NUMERIC           00717600
                   AIF   ('&ZCGPR' LT '2').ZE79Q                        00717700
                   AIF   ('&ZCGPR' LE '12').ZE79R                       00717800
.ZE79Q             ANOP  ,                                              00717900
&ZMS               SETC  '"PRODVERS='                                   00718000
&ZMS               SETC  '&ZMS.&PRODVERS"'                              00718100
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00718200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00718300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00718400
.ZE79R             ANOP  ,                                              00718500
.*----------------------------------------------------------------***   00718600
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          00718700
                   AIF   (N'&PRODQUAL LE 1).ZE80A  CK NUM               00718800
&ZMS               SETC  '"PRODQUAL='                                   00718900
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              00719000
&ZMS               SETC  '&ZMS "PRODQUAL"'                              00719100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00719200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00719300
.ZE80A             ANOP  ,                                              00719400
.*-------------------------------------------------------------------   00719500
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     00719600
                   AIF   (K'&PRODQUAL(1) LE 0).ZE80B NO PRM             00719700
&ZXPRODQUAL        SETC  'INPUT'     SET IN/OUTPUT                      00719800
&XPRODQUAL         SETC  '&PRODQUAL(1)'         SET XVARIABLE           00719900
                   AIF   (N'&PRODQUAL GT 1).ZE80B                       00720000
.*                 ANOP                                                 00720100
&XPRODQUAL         SETC  '&PRODQUAL'            SET XVARIABLE           00720200
.ZE80B             ANOP  ,                                              00720300
.*-------------------------------------------------------------------   00720400
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00720500
                   AIF   (K'&ZXPRODQUAL LE 0).ZE80R  NOT I/O            00720600
                   AIF   ('&XPRODQUAL'(1,1) NE '(').ZE80R               00720700
&ZCGPR             SETC  '&XPRODQUAL'(2,K'&XPRODQUAL-2)                 00720800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE80P                   00720900
                   AIF   (K'&ZCGPR GT 2).ZE80Q                          00721000
                   AIF   ('&ZCGPR' EQ '0').ZE80Q                        00721100
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00721200
                   AIF   (T'&ZCGPR NE 'N').ZE80Q  INVALID REG NAME      00721300
.ZE80P             ANOP  ,                                              00721400
                   AIF   (T'&ZCGPR NE 'N').ZE80R  NON NUMERIC           00721500
                   AIF   ('&ZCGPR' LT '2').ZE80Q                        00721600
                   AIF   ('&ZCGPR' LE '12').ZE80R                       00721700
.ZE80Q             ANOP  ,                                              00721800
&ZMS               SETC  '"PRODQUAL='                                   00721900
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              00722000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00722100
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00722200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00722300
.ZE80R             ANOP  ,                                              00722400
.*----------------------------------------------------------------***   00722500
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          00722600
                   AIF   (N'&PRODID LE 1).ZE81A  CK NUM                 00722700
&ZMS               SETC  '"PRODID='                                     00722800
&ZMS               SETC  '&ZMS.&PRODID"'                                00722900
&ZMS               SETC  '&ZMS "PRODID"'                                00723000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00723100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00723200
.ZE81A             ANOP  ,                                              00723300
.*-------------------------------------------------------------------   00723400
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     00723500
                   AIF   (K'&PRODID(1) LE 0).ZE81B NO PRM               00723600
&ZXPRODID          SETC  'INPUT'     SET IN/OUTPUT                      00723700
&XPRODID           SETC  '&PRODID(1)'           SET XVARIABLE           00723800
                   AIF   (N'&PRODID GT 1).ZE81B                         00723900
.*                 ANOP                                                 00724000
&XPRODID           SETC  '&PRODID'   SET XVARIABLE                      00724100
.ZE81B             ANOP  ,                                              00724200
.*-------------------------------------------------------------------   00724300
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00724400
                   AIF   (K'&ZXPRODID LE 0).ZE81R  NOT I/O              00724500
                   AIF   ('&XPRODID'(1,1) NE '(').ZE81R                 00724600
&ZCGPR             SETC  '&XPRODID'(2,K'&XPRODID-2)                     00724700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE81P                   00724800
                   AIF   (K'&ZCGPR GT 2).ZE81Q                          00724900
                   AIF   ('&ZCGPR' EQ '0').ZE81Q                        00725000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00725100
                   AIF   (T'&ZCGPR NE 'N').ZE81Q  INVALID REG NAME      00725200
.ZE81P             ANOP  ,                                              00725300
                   AIF   (T'&ZCGPR NE 'N').ZE81R  NON NUMERIC           00725400
                   AIF   ('&ZCGPR' LT '2').ZE81Q                        00725500
                   AIF   ('&ZCGPR' LE '12').ZE81R                       00725600
.ZE81Q             ANOP  ,                                              00725700
&ZMS               SETC  '"PRODID='                                     00725800
&ZMS               SETC  '&ZMS.&PRODID"'                                00725900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00726000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00726100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00726200
.ZE81R             ANOP  ,                                              00726300
.*-------------------------------------------------------------------   00726400
.***AE.KMEKY08 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00726500
.ZE83     AIF   ('&XDATAPRODNAME' NE 'PRTOKEN').ZE84                    00726600
.*-------------------------------------------------------------------   00726700
.***AE.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00726800
                   AIF   (K'&ZXPRTOKEN LE 0).ZE83R  NOT I/O             00726900
                   AIF   ('&XPRTOKEN'(1,1) NE '(').ZE83R                00727000
&ZCGPR             SETC  '&XPRTOKEN'(2,K'&XPRTOKEN-2)                   00727100
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE83P                   00727200
                   AIF   (K'&ZCGPR GT 2).ZE83Q                          00727300
                   AIF   ('&ZCGPR' EQ '0').ZE83Q                        00727400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00727500
                   AIF   (T'&ZCGPR NE 'N').ZE83Q  INVALID REG NAME      00727600
.ZE83P             ANOP  ,                                              00727700
                   AIF   (T'&ZCGPR NE 'N').ZE83R  NON NUMERIC           00727800
                   AIF   ('&ZCGPR' LT '2').ZE83Q                        00727900
                   AIF   ('&ZCGPR' LE '12').ZE83R                       00728000
.ZE83Q             ANOP  ,                                              00728100
&ZMS               SETC  '"PRTOKEN='                                    00728200
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               00728300
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00728400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00728500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00728600
.ZE83R             ANOP  ,                                              00728700
.*-------------------------------------------------------------------   00728800
.***AE.KMEKY08 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00728900
.ZE84     AIF   ('&XDATAPRODNAME' NE 'PRTOKEN64').ZE85                  00729000
.*-------------------------------------------------------------------   00729100
.***AE.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00729200
                   AIF   (K'&ZXPRTOKEN64 LE 0).ZE84R  NOT I/O           00729300
                   AIF   ('&XPRTOKEN64'(1,1) NE '(').ZE84R              00729400
&ZCGPR             SETC  '&XPRTOKEN64'(2,K'&XPRTOKEN64-2)               00729500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE84P                   00729600
                   AIF   (K'&ZCGPR GT 2).ZE84Q                          00729700
                   AIF   ('&ZCGPR' EQ '0').ZE84Q                        00729800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00729900
                   AIF   (T'&ZCGPR NE 'N').ZE84Q  INVALID REG NAME      00730000
.ZE84P             ANOP  ,                                              00730100
                   AIF   (T'&ZCGPR NE 'N').ZE84R  NON NUMERIC           00730200
                   AIF   ('&ZCGPR' LT '2').ZE84Q                        00730300
                   AIF   ('&ZCGPR' LE '12').ZE84R                       00730400
.ZE84Q             ANOP  ,                                              00730500
&ZMS               SETC  '"PRTOKEN64='                                  00730600
&ZMS               SETC  '&ZMS.&PRTOKEN64"'                             00730700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00730800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00730900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00731000
.ZE84R             ANOP  ,                                              00731100
.*-------------------------------------------------------------------   00731200
.***AE.KMEKY09 NAME, RQD INPUT, ME KEYS -END                            00731300
.ZE85              ANOP  ,           END MUTUALLY EXCLUSIVE KEYS        00731400
.*----------------------------------------------------------------***   00731500
.***AE.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00731600
&XDUMMY3           SETC  ''          INITIALIZE XVARIABLE               00731700
                   AIF   (K'&DATA LE 0).ZE87C                           00731800
&ZXDUMMY3          SETC  'INPUT'     SET IN/OUTPUT                      00731900
&XDUMMY3           SETC  'DATA'      SET XVARIABLE                      00732000
&ZXDATA            SETC  'INPUT'     SET IN/OUTPUT                      00732100
&XDATA             SETC  '&DATA(1)'  SET XVARIABLE PARM                 00732200
                   AIF   (N'&DATA GT 1).ZE87A                           00732300
&XDATA             SETC  '&DATA'     SET XVARIABLE PARM                 00732400
.ZE87A             AIF   (N'&DATA LE 1).ZE87B   CK NUM                  00732500
&ZMS               SETC  '"DATA='                                       00732600
&ZMS               SETC  '&ZMS.&DATA"'                                  00732700
&ZMS               SETC  '&ZMS "DATA"'                                  00732800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00732900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00733000
.ZE87B             AIF   (K'&XDATA GT 0).ZE87C  ONE PARM                00733100
&ZXDUMMY3          SETC  ''          RESET IN/OUTPUT                    00733200
&ZXDATA            SETC  ''          RESET IN/OUTPUT                    00733300
.ZE87C             ANOP  ,                                              00733400
.*----------------------------------------------------------------***   00733500
.***AE.KMEKY02 NAME, RQD INPUT, ME KEYS -NON-XVAR KEY                   00733600
                   AIF   (K'&DATA64 LE 0).ZE88D  NO ME KEY              00733700
                   AIF   (N'&DATA64 LE 1).ZE88A  CK NUM                 00733800
&ZMS               SETC  '"DATA64='                                     00733900
&ZMS               SETC  '&ZMS.&DATA64"'                                00734000
&ZMS               SETC  '&ZMS "DATA64"'                                00734100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00734200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00734300
.ZE88A             AIF   (K'&XDUMMY3 LE 0).ZE88B                        00734400
&ZMS               SETC  '"DATA64'                                      00734500
&ZMS               SETC  '&ZMS.=&DATA64"'                               00734600
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00734700
&ZMS               SETC  '&ZMS "&XDUMMY3"'                              00734800
                   MNOTE 8,' &ZMS KEY.'                                 00734900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00735000
                   AGO   .ZE88D                                         00735100
.*                                                                      00735200
.ZE88B             ANOP  ,                                              00735300
&ZXDUMMY3          SETC  'INPUT'     SET IN/OUTPUT                      00735400
&XDUMMY3           SETC  'DATA64'    SET XVARIABLE                      00735500
&ZXDATA64          SETC  'INPUT'     SET IN/OUTPUT                      00735600
&XDATA64           SETC  '&DATA64(1)'           SET PARM                00735700
                   AIF   (N'&DATA64 GT 1).ZE88C                         00735800
&XDATA64           SETC  '&DATA64'   SET PARM                           00735900
.ZE88C             AIF   (K'&XDATA64 GT 0).ZE88D  ONE PARM              00736000
&ZXDUMMY3          SETC  ''          RESET IN/OUTPUT                    00736100
&ZXDATA64          SETC  ''          RESET IN/OUTPUT                    00736200
.ZE88D             ANOP  ,                                              00736300
.*------------------------------------------------------------------    00736400
.***AE.KMEKY07 NAME, RQD INPUT, ME KEYS -CHECK IF ENTERED               00736500
                   AIF   (K'&XDUMMY3 GT 0).ZE89B                        00736600
&ZXDUMMY3          SETC  ''          RESET IN/OUTPUT                    00736700
&XDUMMY3           SETC  ''          SET NULL                           00736800
&ZXDATA            SETC  ''          RESET OUTPUT                       00736900
&XDATA             SETC  ''          SET NULL PARM                      00737000
.ZE89B             ANOP  ,                                              00737100
.*-------------------------------------------------------------------   00737200
.***AE.KMEKY08 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00737300
.ZE87     AIF   ('&XDUMMY3' NE 'DATA').ZE88                             00737400
.*-------------------------------------------------------------------   00737500
.***AE.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00737600
                   AIF   (K'&ZXDATA LE 0).ZE87R  NOT I/O                00737700
                   AIF   ('&XDATA'(1,1) NE '(').ZE87R                   00737800
&ZCGPR             SETC  '&XDATA'(2,K'&XDATA-2)                         00737900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE87P                   00738000
                   AIF   (K'&ZCGPR GT 2).ZE87Q                          00738100
                   AIF   ('&ZCGPR' EQ '0').ZE87Q                        00738200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00738300
                   AIF   (T'&ZCGPR NE 'N').ZE87Q  INVALID REG NAME      00738400
.ZE87P             ANOP  ,                                              00738500
                   AIF   (T'&ZCGPR NE 'N').ZE87R  NON NUMERIC           00738600
                   AIF   ('&ZCGPR' LT '2').ZE87Q                        00738700
                   AIF   ('&ZCGPR' LE '12').ZE87R                       00738800
.ZE87Q             ANOP  ,                                              00738900
&ZMS               SETC  '"DATA='                                       00739000
&ZMS               SETC  '&ZMS.&DATA"'                                  00739100
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00739200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00739300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00739400
.ZE87R             ANOP  ,                                              00739500
.*-------------------------------------------------------------------   00739600
.***AE.KMEKY08 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00739700
.ZE88     AIF   ('&XDUMMY3' NE 'DATA64').ZE89                           00739800
.*-------------------------------------------------------------------   00739900
.***AE.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00740000
                   AIF   (K'&ZXDATA64 LE 0).ZE88R  NOT I/O              00740100
                   AIF   ('&XDATA64'(1,1) NE '(').ZE88R                 00740200
&ZCGPR             SETC  '&XDATA64'(2,K'&XDATA64-2)                     00740300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE88P                   00740400
                   AIF   (K'&ZCGPR GT 2).ZE88Q                          00740500
                   AIF   ('&ZCGPR' EQ '0').ZE88Q                        00740600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00740700
                   AIF   (T'&ZCGPR NE 'N').ZE88Q  INVALID REG NAME      00740800
.ZE88P             ANOP  ,                                              00740900
                   AIF   (T'&ZCGPR NE 'N').ZE88R  NON NUMERIC           00741000
                   AIF   ('&ZCGPR' LT '2').ZE88Q                        00741100
                   AIF   ('&ZCGPR' LE '12').ZE88R                       00741200
.ZE88Q             ANOP  ,                                              00741300
&ZMS               SETC  '"DATA64='                                     00741400
&ZMS               SETC  '&ZMS.&DATA64"'                                00741500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00741600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00741700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00741800
.ZE88R             ANOP  ,                                              00741900
.*-------------------------------------------------------------------   00742000
.***AE.KMEKY09 NAME, RQD INPUT, ME KEYS -END                            00742100
.ZE89              ANOP  ,           END MUTUALLY EXCLUSIVE KEYS        00742200
.*----------------------------------------------------------------***   00742300
.***AE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00742400
                   AIF   (N'&FORMAT LE 1).ZE91A  CK NUM                 00742500
&ZMS               SETC  '"FORMAT='                                     00742600
&ZMS               SETC  '&ZMS.&FORMAT"'                                00742700
&ZMS               SETC  '&ZMS "FORMAT"'                                00742800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00742900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00743000
.ZE91A             ANOP  ,                                              00743100
.*-------------------------------------------------------------------   00743200
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00743300
.ZE92A   AIF   ('&FORMAT(1)' NE 'CPUTIME').ZE93A                        00743400
&XFORMAT           SETC  'CPUTIME'   SET KEYWORD                        00743500
.*-------------------------------------------------------------------   00743600
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00743700
.ZE93A   AIF   ('&FORMAT(1)' NE 'BINARY').ZE94A                         00743800
&XFORMAT           SETC  'BINARY'    SET KEYWORD                        00743900
.*-------------------------------------------------------------------   00744000
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00744100
.ZE94A   AIF   ('&FORMAT(1)' NE 'FLOAT').ZE95A                          00744200
&XFORMAT           SETC  'FLOAT'     SET KEYWORD                        00744300
.*-------------------------------------------------------------------   00744400
.***AE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00744500
.ZE95A             AIF   (K'&XFORMAT GT 0).ZE95B                        00744600
                   AIF   (K'&FORMAT(1) LE 0).ZE95C                      00744700
&ZMS               SETC  '"FORMAT='                                     00744800
&ZMS               SETC  '&ZMS.&FORMAT"'                                00744900
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00745000
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00745100
&ZMS               SETC  '&ZMS "CPUTIME",'                              00745200
&ZMS               SETC  '&ZMS "BINARY",'                               00745300
&ZMS               SETC  '&ZMS OR "FLOAT".'                             00745400
                   MNOTE 8,' &ZMS '                                     00745500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00745600
                   AGO   .ZE95C                                         00745700
.*                                                                      00745800
.ZE95B             ANOP  ,                                              00745900
&ZXFORMAT          SETC  'INPUT'     SET IN/OUTPUT                      00746000
.ZE95C             ANOP  ,                                              00746100
.*----------------------------------------------------------------***   00746200
.***AE.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE                     00746300
&XDUMMY4           SETC  ''          INITIALIZE XVARIABLE               00746400
                   AIF   (K'&CURRENTDATA LE 0).ZE97C                    00746500
&ZXDUMMY4          SETC  'OUTPUT'    SET IN/OUTPUT                      00746600
&XDUMMY4           SETC  'CURRENTDATA'          SET XVARIABLE           00746700
&ZXCURRENTDATA     SETC  'OUTPUT'    SET IN/OUTPUT                      00746800
&XCURRENTDATA      SETC  '&CURRENTDATA(1)'      SET XVARIABLE PARM      00746900
                   AIF   (N'&CURRENTDATA GT 1).ZE97A                    00747000
&XCURRENTDATA      SETC  '&CURRENTDATA'         SET XVARIABLE PARM      00747100
.ZE97A             AIF   (N'&CURRENTDATA LE 1).ZE97B  CK NUM            00747200
&ZMS               SETC  '"CURRENTDATA='                                00747300
&ZMS               SETC  '&ZMS.&CURRENTDATA"'                           00747400
&ZMS               SETC  '&ZMS "CURRENTDATA"'                           00747500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00747600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00747700
.ZE97B             AIF   (K'&XCURRENTDATA GT 0).ZE97C  ONE PARM         00747800
&ZXDUMMY4          SETC  ''          RESET IN/OUTPUT                    00747900
&ZXCURRENTDATA     SETC  ''          RESET IN/OUTPUT                    00748000
.ZE97C             ANOP  ,                                              00748100
.*----------------------------------------------------------------***   00748200
.***AE.KMEKY02 NAME, OPT OUTPUT, ME KEYS -NON-XVAR KEY                  00748300
                   AIF   (K'&CURRENTDATA64 LE 0).ZE98D  NO ME KEY       00748400
                   AIF   (N'&CURRENTDATA64 LE 1).ZE98A  CK NUM          00748500
&ZMS               SETC  '"CURRENTDATA64='                              00748600
&ZMS               SETC  '&ZMS.&CURRENTDATA64"'                         00748700
&ZMS               SETC  '&ZMS "CURRENTDATA64"'                         00748800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00748900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00749000
.ZE98A             AIF   (K'&XDUMMY4 LE 0).ZE98B                        00749100
&ZMS               SETC  '"CURRENTDATA64'                               00749200
&ZMS               SETC  '&ZMS.=&CURRENTDATA64"'                        00749300
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00749400
&ZMS               SETC  '&ZMS "&XDUMMY4"'                              00749500
                   MNOTE 8,' &ZMS KEY.'                                 00749600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00749700
                   AGO   .ZE98D                                         00749800
.*                                                                      00749900
.ZE98B             ANOP  ,                                              00750000
&ZXDUMMY4          SETC  'OUTPUT'    SET IN/OUTPUT                      00750100
&XDUMMY4           SETC  'CURRENTDATA64'        SET XVARIABLE           00750200
&ZXCURRENTDATA64   SETC  'OUTPUT'    SET IN/OUTPUT                      00750300
&XCURRENTDATA64    SETC  '&CURRENTDATA64(1)'    SET PARM                00750400
                   AIF   (N'&CURRENTDATA64 GT 1).ZE98C                  00750500
&XCURRENTDATA64    SETC  '&CURRENTDATA64'       SET PARM                00750600
.ZE98C             AIF   (K'&XCURRENTDATA64 GT 0).ZE98D  ONE PARM       00750700
&ZXDUMMY4          SETC  ''          RESET IN/OUTPUT                    00750800
&ZXCURRENTDATA64   SETC  ''          RESET IN/OUTPUT                    00750900
.ZE98D             ANOP  ,                                              00751000
.*------------------------------------------------------------------    00751100
.***AE.KMEKY07 NAME, OPT OUTPUT, ME KEYS -CHECK IF ENTERED              00751200
                   AIF   (K'&XDUMMY4 GT 0).ZE99B                        00751300
&ZXDUMMY4          SETC  ''          RESET IN/OUTPUT                    00751400
&XDUMMY4           SETC  ''          SET NULL                           00751500
&ZXCURRENTDATA     SETC  ''          RESET OUTPUT                       00751600
&XCURRENTDATA      SETC  ''          SET NULL PARM                      00751700
.ZE99B             ANOP  ,                                              00751800
.*-------------------------------------------------------------------   00751900
.***AE.KMEKY08 NAME, OPT OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00752000
.ZE97     AIF   ('&XDUMMY4' NE 'CURRENTDATA').ZE98                      00752100
.*-------------------------------------------------------------------   00752200
.***AE.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00752300
                   AIF   (K'&ZXCURRENTDATA LE 0).ZE97R  NOT I/O         00752400
                   AIF   ('&XCURRENTDATA'(1,1) NE '(').ZE97R            00752500
&ZCGPR             SETC  '&XCURRENTDATA'(2,K'&XCURRENTDATA-2)           00752600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE97P                   00752700
                   AIF   (K'&ZCGPR GT 2).ZE97Q                          00752800
                   AIF   ('&ZCGPR' EQ '0').ZE97Q                        00752900
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00753000
                   AIF   (T'&ZCGPR NE 'N').ZE97Q  INVALID REG NAME      00753100
.ZE97P             ANOP  ,                                              00753200
                   AIF   (T'&ZCGPR NE 'N').ZE97R  NON NUMERIC           00753300
                   AIF   ('&ZCGPR' LT '2').ZE97Q                        00753400
                   AIF   ('&ZCGPR' LE '12').ZE97R                       00753500
.ZE97Q             ANOP  ,                                              00753600
&ZMS               SETC  '"CURRENTDATA='                                00753700
&ZMS               SETC  '&ZMS.&CURRENTDATA"'                           00753800
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00753900
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00754000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00754100
.ZE97R             ANOP  ,                                              00754200
.*-------------------------------------------------------------------   00754300
.***AE.KMEKY08 NAME, OPT OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00754400
.ZE98     AIF   ('&XDUMMY4' NE 'CURRENTDATA64').ZE99                    00754500
.*-------------------------------------------------------------------   00754600
.***AE.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00754700
                   AIF   (K'&ZXCURRENTDATA64 LE 0).ZE98R  NOT I/O       00754800
                   AIF   ('&XCURRENTDATA64'(1,1) NE '(').ZE98R          00754900
&ZCGPR             SETC  '&XCURRENTDATA64'(2,K'&XCURRENTDATA64-2)       00755000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE98P                   00755100
                   AIF   (K'&ZCGPR GT 2).ZE98Q                          00755200
                   AIF   ('&ZCGPR' EQ '0').ZE98Q                        00755300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00755400
                   AIF   (T'&ZCGPR NE 'N').ZE98Q  INVALID REG NAME      00755500
.ZE98P             ANOP  ,                                              00755600
                   AIF   (T'&ZCGPR NE 'N').ZE98R  NON NUMERIC           00755700
                   AIF   ('&ZCGPR' LT '2').ZE98Q                        00755800
                   AIF   ('&ZCGPR' LE '12').ZE98R                       00755900
.ZE98Q             ANOP  ,                                              00756000
&ZMS               SETC  '"CURRENTDATA64='                              00756100
&ZMS               SETC  '&ZMS.&CURRENTDATA64"'                         00756200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00756300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00756400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00756500
.ZE98R             ANOP  ,                                              00756600
.*-------------------------------------------------------------------   00756700
.***AE.KMEKY09 NAME, OPT OUTPUT, ME KEYS -END                           00756800
.ZE99              ANOP  ,           END MUTUALLY EXCLUSIVE KEYS        00756900
.*-------------------------------------------------------------------   00757000
.***AE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00757100
&ZTLC              SETC 'FUNCTIONEND'                                   00757200
                   AIF   ('&REQUEST(1)' NE '&ZTLC').ZE100A              00757300
&XREQUEST          SETC  'FUNCTIONEND'          SET KEYWORD             00757400
                   AIF   (N'&REQUEST LE 1).ZE100A  CK NUM               00757500
&ZMS               SETC  '"REQUEST='                                    00757600
&ZMS               SETC  '&ZMS.&REQUEST"'                               00757700
&ZMS               SETC  '&ZMS "REQUEST"'                               00757800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00757900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00758000
.ZE100A            ANOP  ,                                              00758100
.*----------------------------------------------------------------***   00758200
.***AE.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00758300
&XENDPRODNAME      SETC  ''          INITIALIZE XVARIABLE               00758400
                   AIF   (K'&PRODOWNER LE 0).ZE102C                     00758500
&ZXENDPRODNAME     SETC  'INPUT'     SET IN/OUTPUT                      00758600
&XENDPRODNAME      SETC  'PRODOWNER'            SET XVARIABLE           00758700
&ZXPRODOWNER       SETC  'INPUT'     SET IN/OUTPUT                      00758800
&XPRODOWNER        SETC  '&PRODOWNER(1)'        SET XVARIABLE PARM      00758900
                   AIF   (N'&PRODOWNER GT 1).ZE102A                     00759000
&XPRODOWNER        SETC  '&PRODOWNER'           SET XVARIABLE PARM      00759100
.ZE102A            AIF   (N'&PRODOWNER LE 1).ZE102B  CK NUM             00759200
&ZMS               SETC  '"PRODOWNER='                                  00759300
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             00759400
&ZMS               SETC  '&ZMS "PRODOWNER"'                             00759500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00759600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00759700
.ZE102B            AIF   (K'&XPRODOWNER GT 0).ZE102C  ONE PARM          00759800
&ZXENDPRODNAME     SETC  ''          RESET IN/OUTPUT                    00759900
&ZXPRODOWNER       SETC  ''          RESET IN/OUTPUT                    00760000
.ZE102C            ANOP  ,                                              00760100
.*----------------------------------------------------------------***   00760200
.***AE.KMEKY02 NAME, RQD INPUT, ME KEYS -NON-XVAR KEY                   00760300
                   AIF   (K'&PRTOKEN LE 0).ZE111D  NO ME KEY            00760400
                   AIF   (N'&PRTOKEN LE 1).ZE111A  CK NUM               00760500
&ZMS               SETC  '"PRTOKEN='                                    00760600
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               00760700
&ZMS               SETC  '&ZMS "PRTOKEN"'                               00760800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00760900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00761000
.ZE111A            AIF   (K'&XENDPRODNAME LE 0).ZE111B                  00761100
&ZMS               SETC  '"PRTOKEN'                                     00761200
&ZMS               SETC  '&ZMS.=&PRTOKEN"'                              00761300
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00761400
&ZMS               SETC  '&ZMS "&XENDPRODNAME"'                         00761500
                   MNOTE 8,' &ZMS KEY.'                                 00761600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00761700
                   AGO   .ZE111D                                        00761800
.*                                                                      00761900
.ZE111B            ANOP  ,                                              00762000
&ZXENDPRODNAME     SETC  'INPUT'     SET IN/OUTPUT                      00762100
&XENDPRODNAME      SETC  'PRTOKEN'   SET XVARIABLE                      00762200
&ZXPRTOKEN         SETC  'INPUT'     SET IN/OUTPUT                      00762300
&XPRTOKEN          SETC  '&PRTOKEN(1)'          SET PARM                00762400
                   AIF   (N'&PRTOKEN GT 1).ZE111C                       00762500
&XPRTOKEN          SETC  '&PRTOKEN'  SET PARM                           00762600
.ZE111C            AIF   (K'&XPRTOKEN GT 0).ZE111D  ONE PARM            00762700
&ZXENDPRODNAME     SETC  ''          RESET IN/OUTPUT                    00762800
&ZXPRTOKEN         SETC  ''          RESET IN/OUTPUT                    00762900
.ZE111D            ANOP  ,                                              00763000
.*----------------------------------------------------------------***   00763100
.***AE.KMEKY02 NAME, RQD INPUT, ME KEYS -NON-XVAR KEY                   00763200
                   AIF   (K'&PRTOKEN64 LE 0).ZE112D  NO ME KEY          00763300
                   AIF   (N'&PRTOKEN64 LE 1).ZE112A  CK NUM             00763400
&ZMS               SETC  '"PRTOKEN64='                                  00763500
&ZMS               SETC  '&ZMS.&PRTOKEN64"'                             00763600
&ZMS               SETC  '&ZMS "PRTOKEN64"'                             00763700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00763800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00763900
.ZE112A            AIF   (K'&XENDPRODNAME LE 0).ZE112B                  00764000
&ZMS               SETC  '"PRTOKEN64'                                   00764100
&ZMS               SETC  '&ZMS.=&PRTOKEN64"'                            00764200
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00764300
&ZMS               SETC  '&ZMS "&XENDPRODNAME"'                         00764400
                   MNOTE 8,' &ZMS KEY.'                                 00764500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00764600
                   AGO   .ZE112D                                        00764700
.*                                                                      00764800
.ZE112B            ANOP  ,                                              00764900
&ZXENDPRODNAME     SETC  'INPUT'     SET IN/OUTPUT                      00765000
&XENDPRODNAME      SETC  'PRTOKEN64'            SET XVARIABLE           00765100
&ZXPRTOKEN64       SETC  'INPUT'     SET IN/OUTPUT                      00765200
&XPRTOKEN64        SETC  '&PRTOKEN64(1)'        SET PARM                00765300
                   AIF   (N'&PRTOKEN64 GT 1).ZE112C                     00765400
&XPRTOKEN64        SETC  '&PRTOKEN64'           SET PARM                00765500
.ZE112C            AIF   (K'&XPRTOKEN64 GT 0).ZE112D  ONE PARM          00765600
&ZXENDPRODNAME     SETC  ''          RESET IN/OUTPUT                    00765700
&ZXPRTOKEN64       SETC  ''          RESET IN/OUTPUT                    00765800
.ZE112D            ANOP  ,                                              00765900
.*------------------------------------------------------------------    00766000
.***AE.KMEKY07 NAME, RQD INPUT, ME KEYS -CHECK IF ENTERED               00766100
                   AIF   (K'&XENDPRODNAME GT 0).ZE113B                  00766200
&ZXENDPRODNAME     SETC  ''          RESET IN/OUTPUT                    00766300
&XENDPRODNAME      SETC  ''          SET NULL                           00766400
&ZXPRODOWNER       SETC  ''          RESET OUTPUT                       00766500
&XPRODOWNER        SETC  ''          SET NULL PARM                      00766600
.ZE113B            ANOP  ,                                              00766700
.*-------------------------------------------------------------------   00766800
.***AE.KMEKY08 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00766900
.ZE102     AIF   ('&XENDPRODNAME' NE 'PRODOWNER').ZE111                 00767000
.*-------------------------------------------------------------------   00767100
.***AE.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00767200
                   AIF   (K'&ZXPRODOWNER LE 0).ZE102R  NOT I/O          00767300
                   AIF   ('&XPRODOWNER'(1,1) NE '(').ZE102R             00767400
&ZCGPR             SETC  '&XPRODOWNER'(2,K'&XPRODOWNER-2)               00767500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE102P                  00767600
                   AIF   (K'&ZCGPR GT 2).ZE102Q                         00767700
                   AIF   ('&ZCGPR' EQ '0').ZE102Q                       00767800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00767900
                   AIF   (T'&ZCGPR NE 'N').ZE102Q  INVALID REG NAME     00768000
.ZE102P            ANOP  ,                                              00768100
                   AIF   (T'&ZCGPR NE 'N').ZE102R  NON NUMERIC          00768200
                   AIF   ('&ZCGPR' LT '2').ZE102Q                       00768300
                   AIF   ('&ZCGPR' LE '12').ZE102R                      00768400
.ZE102Q            ANOP  ,                                              00768500
&ZMS               SETC  '"PRODOWNER='                                  00768600
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             00768700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00768800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00768900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00769000
.ZE102R            ANOP  ,                                              00769100
.*----------------------------------------------------------------***   00769200
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          00769300
                   AIF   (N'&PRODNAME LE 1).ZE104A  CK NUM              00769400
&ZMS               SETC  '"PRODNAME='                                   00769500
&ZMS               SETC  '&ZMS.&PRODNAME"'                              00769600
&ZMS               SETC  '&ZMS "PRODNAME"'                              00769700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00769800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00769900
.ZE104A            ANOP  ,                                              00770000
.*-------------------------------------------------------------------   00770100
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     00770200
                   AIF   (K'&PRODNAME(1) LE 0).ZE104B NO PRM            00770300
&ZXPRODNAME        SETC  'INPUT'     SET IN/OUTPUT                      00770400
&XPRODNAME         SETC  '&PRODNAME(1)'         SET XVARIABLE           00770500
                   AIF   (N'&PRODNAME GT 1).ZE104B                      00770600
.*                 ANOP                                                 00770700
&XPRODNAME         SETC  '&PRODNAME'            SET XVARIABLE           00770800
.ZE104B            ANOP  ,                                              00770900
.*-------------------------------------------------------------------   00771000
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00771100
                   AIF   (K'&ZXPRODNAME LE 0).ZE104R  NOT I/O           00771200
                   AIF   ('&XPRODNAME'(1,1) NE '(').ZE104R              00771300
&ZCGPR             SETC  '&XPRODNAME'(2,K'&XPRODNAME-2)                 00771400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE104P                  00771500
                   AIF   (K'&ZCGPR GT 2).ZE104Q                         00771600
                   AIF   ('&ZCGPR' EQ '0').ZE104Q                       00771700
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00771800
                   AIF   (T'&ZCGPR NE 'N').ZE104Q  INVALID REG NAME     00771900
.ZE104P            ANOP  ,                                              00772000
                   AIF   (T'&ZCGPR NE 'N').ZE104R  NON NUMERIC          00772100
                   AIF   ('&ZCGPR' LT '2').ZE104Q                       00772200
                   AIF   ('&ZCGPR' LE '12').ZE104R                      00772300
.ZE104Q            ANOP  ,                                              00772400
&ZMS               SETC  '"PRODNAME='                                   00772500
&ZMS               SETC  '&ZMS.&PRODNAME"'                              00772600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00772700
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00772800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00772900
.ZE104R            ANOP  ,                                              00773000
.*----------------------------------------------------------------***   00773100
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          00773200
                   AIF   (N'&PRODVERS LE 1).ZE107A  CK NUM              00773300
&ZMS               SETC  '"PRODVERS='                                   00773400
&ZMS               SETC  '&ZMS.&PRODVERS"'                              00773500
&ZMS               SETC  '&ZMS "PRODVERS"'                              00773600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00773700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00773800
.ZE107A            ANOP  ,                                              00773900
.*-------------------------------------------------------------------   00774000
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     00774100
                   AIF   (K'&PRODVERS(1) LE 0).ZE107B NO PRM            00774200
&ZXPRODVERS        SETC  'INPUT'     SET IN/OUTPUT                      00774300
&XPRODVERS         SETC  '&PRODVERS(1)'         SET XVARIABLE           00774400
                   AIF   (N'&PRODVERS GT 1).ZE107B                      00774500
.*                 ANOP                                                 00774600
&XPRODVERS         SETC  '&PRODVERS'            SET XVARIABLE           00774700
.ZE107B            ANOP  ,                                              00774800
.*-------------------------------------------------------------------   00774900
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00775000
                   AIF   (K'&ZXPRODVERS LE 0).ZE107R  NOT I/O           00775100
                   AIF   ('&XPRODVERS'(1,1) NE '(').ZE107R              00775200
&ZCGPR             SETC  '&XPRODVERS'(2,K'&XPRODVERS-2)                 00775300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE107P                  00775400
                   AIF   (K'&ZCGPR GT 2).ZE107Q                         00775500
                   AIF   ('&ZCGPR' EQ '0').ZE107Q                       00775600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00775700
                   AIF   (T'&ZCGPR NE 'N').ZE107Q  INVALID REG NAME     00775800
.ZE107P            ANOP  ,                                              00775900
                   AIF   (T'&ZCGPR NE 'N').ZE107R  NON NUMERIC          00776000
                   AIF   ('&ZCGPR' LT '2').ZE107Q                       00776100
                   AIF   ('&ZCGPR' LE '12').ZE107R                      00776200
.ZE107Q            ANOP  ,                                              00776300
&ZMS               SETC  '"PRODVERS='                                   00776400
&ZMS               SETC  '&ZMS.&PRODVERS"'                              00776500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00776600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00776700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00776800
.ZE107R            ANOP  ,                                              00776900
.*----------------------------------------------------------------***   00777000
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          00777100
                   AIF   (N'&PRODQUAL LE 1).ZE108A  CK NUM              00777200
&ZMS               SETC  '"PRODQUAL='                                   00777300
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              00777400
&ZMS               SETC  '&ZMS "PRODQUAL"'                              00777500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00777600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00777700
.ZE108A            ANOP  ,                                              00777800
.*-------------------------------------------------------------------   00777900
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     00778000
                   AIF   (K'&PRODQUAL(1) LE 0).ZE108B NO PRM            00778100
&ZXPRODQUAL        SETC  'INPUT'     SET IN/OUTPUT                      00778200
&XPRODQUAL         SETC  '&PRODQUAL(1)'         SET XVARIABLE           00778300
                   AIF   (N'&PRODQUAL GT 1).ZE108B                      00778400
.*                 ANOP                                                 00778500
&XPRODQUAL         SETC  '&PRODQUAL'            SET XVARIABLE           00778600
.ZE108B            ANOP  ,                                              00778700
.*-------------------------------------------------------------------   00778800
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00778900
                   AIF   (K'&ZXPRODQUAL LE 0).ZE108R  NOT I/O           00779000
                   AIF   ('&XPRODQUAL'(1,1) NE '(').ZE108R              00779100
&ZCGPR             SETC  '&XPRODQUAL'(2,K'&XPRODQUAL-2)                 00779200
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE108P                  00779300
                   AIF   (K'&ZCGPR GT 2).ZE108Q                         00779400
                   AIF   ('&ZCGPR' EQ '0').ZE108Q                       00779500
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00779600
                   AIF   (T'&ZCGPR NE 'N').ZE108Q  INVALID REG NAME     00779700
.ZE108P            ANOP  ,                                              00779800
                   AIF   (T'&ZCGPR NE 'N').ZE108R  NON NUMERIC          00779900
                   AIF   ('&ZCGPR' LT '2').ZE108Q                       00780000
                   AIF   ('&ZCGPR' LE '12').ZE108R                      00780100
.ZE108Q            ANOP  ,                                              00780200
&ZMS               SETC  '"PRODQUAL='                                   00780300
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              00780400
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00780500
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00780600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00780700
.ZE108R            ANOP  ,                                              00780800
.*----------------------------------------------------------------***   00780900
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          00781000
                   AIF   (N'&PRODID LE 1).ZE109A  CK NUM                00781100
&ZMS               SETC  '"PRODID='                                     00781200
&ZMS               SETC  '&ZMS.&PRODID"'                                00781300
&ZMS               SETC  '&ZMS "PRODID"'                                00781400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00781500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00781600
.ZE109A            ANOP  ,                                              00781700
.*-------------------------------------------------------------------   00781800
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     00781900
                   AIF   (K'&PRODID(1) LE 0).ZE109B NO PRM              00782000
&ZXPRODID          SETC  'INPUT'     SET IN/OUTPUT                      00782100
&XPRODID           SETC  '&PRODID(1)'           SET XVARIABLE           00782200
                   AIF   (N'&PRODID GT 1).ZE109B                        00782300
.*                 ANOP                                                 00782400
&XPRODID           SETC  '&PRODID'   SET XVARIABLE                      00782500
.ZE109B            ANOP  ,                                              00782600
.*-------------------------------------------------------------------   00782700
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00782800
                   AIF   (K'&ZXPRODID LE 0).ZE109R  NOT I/O             00782900
                   AIF   ('&XPRODID'(1,1) NE '(').ZE109R                00783000
&ZCGPR             SETC  '&XPRODID'(2,K'&XPRODID-2)                     00783100
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE109P                  00783200
                   AIF   (K'&ZCGPR GT 2).ZE109Q                         00783300
                   AIF   ('&ZCGPR' EQ '0').ZE109Q                       00783400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00783500
                   AIF   (T'&ZCGPR NE 'N').ZE109Q  INVALID REG NAME     00783600
.ZE109P            ANOP  ,                                              00783700
                   AIF   (T'&ZCGPR NE 'N').ZE109R  NON NUMERIC          00783800
                   AIF   ('&ZCGPR' LT '2').ZE109Q                       00783900
                   AIF   ('&ZCGPR' LE '12').ZE109R                      00784000
.ZE109Q            ANOP  ,                                              00784100
&ZMS               SETC  '"PRODID='                                     00784200
&ZMS               SETC  '&ZMS.&PRODID"'                                00784300
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00784400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00784500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00784600
.ZE109R            ANOP  ,                                              00784700
.*-------------------------------------------------------------------   00784800
.***AE.KMEKY08 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00784900
.ZE111     AIF   ('&XENDPRODNAME' NE 'PRTOKEN').ZE112                   00785000
.*-------------------------------------------------------------------   00785100
.***AE.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00785200
                   AIF   (K'&ZXPRTOKEN LE 0).ZE111R  NOT I/O            00785300
                   AIF   ('&XPRTOKEN'(1,1) NE '(').ZE111R               00785400
&ZCGPR             SETC  '&XPRTOKEN'(2,K'&XPRTOKEN-2)                   00785500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE111P                  00785600
                   AIF   (K'&ZCGPR GT 2).ZE111Q                         00785700
                   AIF   ('&ZCGPR' EQ '0').ZE111Q                       00785800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00785900
                   AIF   (T'&ZCGPR NE 'N').ZE111Q  INVALID REG NAME     00786000
.ZE111P            ANOP  ,                                              00786100
                   AIF   (T'&ZCGPR NE 'N').ZE111R  NON NUMERIC          00786200
                   AIF   ('&ZCGPR' LT '2').ZE111Q                       00786300
                   AIF   ('&ZCGPR' LE '12').ZE111R                      00786400
.ZE111Q            ANOP  ,                                              00786500
&ZMS               SETC  '"PRTOKEN='                                    00786600
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               00786700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00786800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00786900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00787000
.ZE111R            ANOP  ,                                              00787100
.*-------------------------------------------------------------------   00787200
.***AE.KMEKY08 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00787300
.ZE112     AIF   ('&XENDPRODNAME' NE 'PRTOKEN64').ZE113                 00787400
.*-------------------------------------------------------------------   00787500
.***AE.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00787600
                   AIF   (K'&ZXPRTOKEN64 LE 0).ZE112R  NOT I/O          00787700
                   AIF   ('&XPRTOKEN64'(1,1) NE '(').ZE112R             00787800
&ZCGPR             SETC  '&XPRTOKEN64'(2,K'&XPRTOKEN64-2)               00787900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE112P                  00788000
                   AIF   (K'&ZCGPR GT 2).ZE112Q                         00788100
                   AIF   ('&ZCGPR' EQ '0').ZE112Q                       00788200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00788300
                   AIF   (T'&ZCGPR NE 'N').ZE112Q  INVALID REG NAME     00788400
.ZE112P            ANOP  ,                                              00788500
                   AIF   (T'&ZCGPR NE 'N').ZE112R  NON NUMERIC          00788600
                   AIF   ('&ZCGPR' LT '2').ZE112Q                       00788700
                   AIF   ('&ZCGPR' LE '12').ZE112R                      00788800
.ZE112Q            ANOP  ,                                              00788900
&ZMS               SETC  '"PRTOKEN64='                                  00789000
&ZMS               SETC  '&ZMS.&PRTOKEN64"'                             00789100
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00789200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00789300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00789400
.ZE112R            ANOP  ,                                              00789500
.*-------------------------------------------------------------------   00789600
.***AE.KMEKY09 NAME, RQD INPUT, ME KEYS -END                            00789700
.ZE113             ANOP  ,           END MUTUALLY EXCLUSIVE KEYS        00789800
.*----------------------------------------------------------------***   00789900
.***AE.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE                     00790000
&XDUMMY5           SETC  ''          INITIALIZE XVARIABLE               00790100
                   AIF   (K'&ENDTIME LE 0).ZE115C                       00790200
&ZXDUMMY5          SETC  'OUTPUT'    SET IN/OUTPUT                      00790300
&XDUMMY5           SETC  'ENDTIME'   SET XVARIABLE                      00790400
&ZXENDTIME         SETC  'OUTPUT'    SET IN/OUTPUT                      00790500
&XENDTIME          SETC  '&ENDTIME(1)'          SET XVARIABLE PARM      00790600
                   AIF   (N'&ENDTIME GT 1).ZE115A                       00790700
&XENDTIME          SETC  '&ENDTIME'  SET XVARIABLE PARM                 00790800
.ZE115A            AIF   (N'&ENDTIME LE 1).ZE115B  CK NUM               00790900
&ZMS               SETC  '"ENDTIME='                                    00791000
&ZMS               SETC  '&ZMS.&ENDTIME"'                               00791100
&ZMS               SETC  '&ZMS "ENDTIME"'                               00791200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00791300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00791400
.ZE115B            AIF   (K'&XENDTIME GT 0).ZE115C  ONE PARM            00791500
&ZXDUMMY5          SETC  ''          RESET IN/OUTPUT                    00791600
&ZXENDTIME         SETC  ''          RESET IN/OUTPUT                    00791700
.ZE115C            ANOP  ,                                              00791800
.*----------------------------------------------------------------***   00791900
.***AE.KMEKY02 NAME, OPT OUTPUT, ME KEYS -NON-XVAR KEY                  00792000
                   AIF   (K'&ENDTIME64 LE 0).ZE116D  NO ME KEY          00792100
                   AIF   (N'&ENDTIME64 LE 1).ZE116A  CK NUM             00792200
&ZMS               SETC  '"ENDTIME64='                                  00792300
&ZMS               SETC  '&ZMS.&ENDTIME64"'                             00792400
&ZMS               SETC  '&ZMS "ENDTIME64"'                             00792500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00792600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00792700
.ZE116A            AIF   (K'&XDUMMY5 LE 0).ZE116B                       00792800
&ZMS               SETC  '"ENDTIME64'                                   00792900
&ZMS               SETC  '&ZMS.=&ENDTIME64"'                            00793000
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00793100
&ZMS               SETC  '&ZMS "&XDUMMY5"'                              00793200
                   MNOTE 8,' &ZMS KEY.'                                 00793300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00793400
                   AGO   .ZE116D                                        00793500
.*                                                                      00793600
.ZE116B            ANOP  ,                                              00793700
&ZXDUMMY5          SETC  'OUTPUT'    SET IN/OUTPUT                      00793800
&XDUMMY5           SETC  'ENDTIME64'            SET XVARIABLE           00793900
&ZXENDTIME64       SETC  'OUTPUT'    SET IN/OUTPUT                      00794000
&XENDTIME64        SETC  '&ENDTIME64(1)'        SET PARM                00794100
                   AIF   (N'&ENDTIME64 GT 1).ZE116C                     00794200
&XENDTIME64        SETC  '&ENDTIME64'           SET PARM                00794300
.ZE116C            AIF   (K'&XENDTIME64 GT 0).ZE116D  ONE PARM          00794400
&ZXDUMMY5          SETC  ''          RESET IN/OUTPUT                    00794500
&ZXENDTIME64       SETC  ''          RESET IN/OUTPUT                    00794600
.ZE116D            ANOP  ,                                              00794700
.*------------------------------------------------------------------    00794800
.***AE.KMEKY07 NAME, OPT OUTPUT, ME KEYS -CHECK IF ENTERED              00794900
                   AIF   (K'&XDUMMY5 GT 0).ZE117B                       00795000
&ZXDUMMY5          SETC  ''          RESET IN/OUTPUT                    00795100
&XDUMMY5           SETC  ''          SET NULL                           00795200
&ZXENDTIME         SETC  ''          RESET OUTPUT                       00795300
&XENDTIME          SETC  ''          SET NULL PARM                      00795400
.ZE117B            ANOP  ,                                              00795500
.*-------------------------------------------------------------------   00795600
.***AE.KMEKY08 NAME, OPT OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00795700
.ZE115     AIF   ('&XDUMMY5' NE 'ENDTIME').ZE116                        00795800
.*-------------------------------------------------------------------   00795900
.***AE.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00796000
                   AIF   (K'&ZXENDTIME LE 0).ZE115R  NOT I/O            00796100
                   AIF   ('&XENDTIME'(1,1) NE '(').ZE115R               00796200
&ZCGPR             SETC  '&XENDTIME'(2,K'&XENDTIME-2)                   00796300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE115P                  00796400
                   AIF   (K'&ZCGPR GT 2).ZE115Q                         00796500
                   AIF   ('&ZCGPR' EQ '0').ZE115Q                       00796600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00796700
                   AIF   (T'&ZCGPR NE 'N').ZE115Q  INVALID REG NAME     00796800
.ZE115P            ANOP  ,                                              00796900
                   AIF   (T'&ZCGPR NE 'N').ZE115R  NON NUMERIC          00797000
                   AIF   ('&ZCGPR' LT '2').ZE115Q                       00797100
                   AIF   ('&ZCGPR' LE '12').ZE115R                      00797200
.ZE115Q            ANOP  ,                                              00797300
&ZMS               SETC  '"ENDTIME='                                    00797400
&ZMS               SETC  '&ZMS.&ENDTIME"'                               00797500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00797600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00797700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00797800
.ZE115R            ANOP  ,                                              00797900
.*-------------------------------------------------------------------   00798000
.***AE.KMEKY08 NAME, OPT OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00798100
.ZE116     AIF   ('&XDUMMY5' NE 'ENDTIME64').ZE117                      00798200
.*-------------------------------------------------------------------   00798300
.***AE.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00798400
                   AIF   (K'&ZXENDTIME64 LE 0).ZE116R  NOT I/O          00798500
                   AIF   ('&XENDTIME64'(1,1) NE '(').ZE116R             00798600
&ZCGPR             SETC  '&XENDTIME64'(2,K'&XENDTIME64-2)               00798700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE116P                  00798800
                   AIF   (K'&ZCGPR GT 2).ZE116Q                         00798900
                   AIF   ('&ZCGPR' EQ '0').ZE116Q                       00799000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00799100
                   AIF   (T'&ZCGPR NE 'N').ZE116Q  INVALID REG NAME     00799200
.ZE116P            ANOP  ,                                              00799300
                   AIF   (T'&ZCGPR NE 'N').ZE116R  NON NUMERIC          00799400
                   AIF   ('&ZCGPR' LT '2').ZE116Q                       00799500
                   AIF   ('&ZCGPR' LE '12').ZE116R                      00799600
.ZE116Q            ANOP  ,                                              00799700
&ZMS               SETC  '"ENDTIME64='                                  00799800
&ZMS               SETC  '&ZMS.&ENDTIME64"'                             00799900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00800000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00800100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00800200
.ZE116R            ANOP  ,                                              00800300
.*-------------------------------------------------------------------   00800400
.***AE.KMEKY09 NAME, OPT OUTPUT, ME KEYS -END                           00800500
.ZE117             ANOP  ,           END MUTUALLY EXCLUSIVE KEYS        00800600
.*----------------------------------------------------------------***   00800700
.***AE.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE                     00800800
&XDUMMY6           SETC  ''          INITIALIZE XVARIABLE               00800900
                   AIF   (K'&ENDDATA LE 0).ZE119C                       00801000
&ZXDUMMY6          SETC  'OUTPUT'    SET IN/OUTPUT                      00801100
&XDUMMY6           SETC  'ENDDATA'   SET XVARIABLE                      00801200
&ZXENDDATA         SETC  'OUTPUT'    SET IN/OUTPUT                      00801300
&XENDDATA          SETC  '&ENDDATA(1)'          SET XVARIABLE PARM      00801400
                   AIF   (N'&ENDDATA GT 1).ZE119A                       00801500
&XENDDATA          SETC  '&ENDDATA'  SET XVARIABLE PARM                 00801600
.ZE119A            AIF   (N'&ENDDATA LE 1).ZE119B  CK NUM               00801700
&ZMS               SETC  '"ENDDATA='                                    00801800
&ZMS               SETC  '&ZMS.&ENDDATA"'                               00801900
&ZMS               SETC  '&ZMS "ENDDATA"'                               00802000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00802100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00802200
.ZE119B            AIF   (K'&XENDDATA GT 0).ZE119C  ONE PARM            00802300
&ZXDUMMY6          SETC  ''          RESET IN/OUTPUT                    00802400
&ZXENDDATA         SETC  ''          RESET IN/OUTPUT                    00802500
.ZE119C            ANOP  ,                                              00802600
.*----------------------------------------------------------------***   00802700
.***AE.KMEKY02 NAME, OPT OUTPUT, ME KEYS -NON-XVAR KEY                  00802800
                   AIF   (K'&ENDDATA64 LE 0).ZE120D  NO ME KEY          00802900
                   AIF   (N'&ENDDATA64 LE 1).ZE120A  CK NUM             00803000
&ZMS               SETC  '"ENDDATA64='                                  00803100
&ZMS               SETC  '&ZMS.&ENDDATA64"'                             00803200
&ZMS               SETC  '&ZMS "ENDDATA64"'                             00803300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00803400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00803500
.ZE120A            AIF   (K'&XDUMMY6 LE 0).ZE120B                       00803600
&ZMS               SETC  '"ENDDATA64'                                   00803700
&ZMS               SETC  '&ZMS.=&ENDDATA64"'                            00803800
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00803900
&ZMS               SETC  '&ZMS "&XDUMMY6"'                              00804000
                   MNOTE 8,' &ZMS KEY.'                                 00804100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00804200
                   AGO   .ZE120D                                        00804300
.*                                                                      00804400
.ZE120B            ANOP  ,                                              00804500
&ZXDUMMY6          SETC  'OUTPUT'    SET IN/OUTPUT                      00804600
&XDUMMY6           SETC  'ENDDATA64'            SET XVARIABLE           00804700
&ZXENDDATA64       SETC  'OUTPUT'    SET IN/OUTPUT                      00804800
&XENDDATA64        SETC  '&ENDDATA64(1)'        SET PARM                00804900
                   AIF   (N'&ENDDATA64 GT 1).ZE120C                     00805000
&XENDDATA64        SETC  '&ENDDATA64'           SET PARM                00805100
.ZE120C            AIF   (K'&XENDDATA64 GT 0).ZE120D  ONE PARM          00805200
&ZXDUMMY6          SETC  ''          RESET IN/OUTPUT                    00805300
&ZXENDDATA64       SETC  ''          RESET IN/OUTPUT                    00805400
.ZE120D            ANOP  ,                                              00805500
.*------------------------------------------------------------------    00805600
.***AE.KMEKY07 NAME, OPT OUTPUT, ME KEYS -CHECK IF ENTERED              00805700
                   AIF   (K'&XDUMMY6 GT 0).ZE121B                       00805800
&ZXDUMMY6          SETC  ''          RESET IN/OUTPUT                    00805900
&XDUMMY6           SETC  ''          SET NULL                           00806000
&ZXENDDATA         SETC  ''          RESET OUTPUT                       00806100
&XENDDATA          SETC  ''          SET NULL PARM                      00806200
.ZE121B            ANOP  ,                                              00806300
.*-------------------------------------------------------------------   00806400
.***AE.KMEKY08 NAME, OPT OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00806500
.ZE119     AIF   ('&XDUMMY6' NE 'ENDDATA').ZE120                        00806600
.*-------------------------------------------------------------------   00806700
.***AE.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00806800
                   AIF   (K'&ZXENDDATA LE 0).ZE119R  NOT I/O            00806900
                   AIF   ('&XENDDATA'(1,1) NE '(').ZE119R               00807000
&ZCGPR             SETC  '&XENDDATA'(2,K'&XENDDATA-2)                   00807100
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE119P                  00807200
                   AIF   (K'&ZCGPR GT 2).ZE119Q                         00807300
                   AIF   ('&ZCGPR' EQ '0').ZE119Q                       00807400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00807500
                   AIF   (T'&ZCGPR NE 'N').ZE119Q  INVALID REG NAME     00807600
.ZE119P            ANOP  ,                                              00807700
                   AIF   (T'&ZCGPR NE 'N').ZE119R  NON NUMERIC          00807800
                   AIF   ('&ZCGPR' LT '2').ZE119Q                       00807900
                   AIF   ('&ZCGPR' LE '12').ZE119R                      00808000
.ZE119Q            ANOP  ,                                              00808100
&ZMS               SETC  '"ENDDATA='                                    00808200
&ZMS               SETC  '&ZMS.&ENDDATA"'                               00808300
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00808400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00808500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00808600
.ZE119R            ANOP  ,                                              00808700
.*-------------------------------------------------------------------   00808800
.***AE.KMEKY08 NAME, OPT OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00808900
.ZE120     AIF   ('&XDUMMY6' NE 'ENDDATA64').ZE121                      00809000
.*-------------------------------------------------------------------   00809100
.***AE.KCK02 NAME, OPT OUTPUT, ME KEYS -GPR OUT OF RANGE                00809200
                   AIF   (K'&ZXENDDATA64 LE 0).ZE120R  NOT I/O          00809300
                   AIF   ('&XENDDATA64'(1,1) NE '(').ZE120R             00809400
&ZCGPR             SETC  '&XENDDATA64'(2,K'&XENDDATA64-2)               00809500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE120P                  00809600
                   AIF   (K'&ZCGPR GT 2).ZE120Q                         00809700
                   AIF   ('&ZCGPR' EQ '0').ZE120Q                       00809800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00809900
                   AIF   (T'&ZCGPR NE 'N').ZE120Q  INVALID REG NAME     00810000
.ZE120P            ANOP  ,                                              00810100
                   AIF   (T'&ZCGPR NE 'N').ZE120R  NON NUMERIC          00810200
                   AIF   ('&ZCGPR' LT '2').ZE120Q                       00810300
                   AIF   ('&ZCGPR' LE '12').ZE120R                      00810400
.ZE120Q            ANOP  ,                                              00810500
&ZMS               SETC  '"ENDDATA64='                                  00810600
&ZMS               SETC  '&ZMS.&ENDDATA64"'                             00810700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00810800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00810900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00811000
.ZE120R            ANOP  ,                                              00811100
.*-------------------------------------------------------------------   00811200
.***AE.KMEKY09 NAME, OPT OUTPUT, ME KEYS -END                           00811300
.ZE121             ANOP  ,           END MUTUALLY EXCLUSIVE KEYS        00811400
.*-------------------------------------------------------------------   00811500
.***AE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00811600
&ZTLC              SETC 'STATUS'                                        00811700
                   AIF   ('&REQUEST(1)' NE '&ZTLC').ZE122A              00811800
&XREQUEST          SETC  'STATUS'    SET KEYWORD                        00811900
                   AIF   (N'&REQUEST LE 1).ZE122A  CK NUM               00812000
&ZMS               SETC  '"REQUEST='                                    00812100
&ZMS               SETC  '&ZMS.&REQUEST"'                               00812200
&ZMS               SETC  '&ZMS "REQUEST"'                               00812300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00812400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00812500
.ZE122A            ANOP  ,                                              00812600
.*------------------------------------------------------------------    00812700
.***AE.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00812800
.ZE123             AIF   (K'&XREQUEST GT 0).ZE123A                      00812900
                   AIF   (K'&REQUEST(1) LE 0).ZE123B                    00813000
&ZMS               SETC  '"REQUEST='                                    00813100
&ZMS               SETC  '&ZMS.&REQUEST"'                               00813200
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00813300
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00813400
&ZMS               SETC  '&ZMS "REGISTER",'                             00813500
&ZMS               SETC  '&ZMS "DEREGISTER",'                           00813600
&ZMS               SETC  '&ZMS "FUNCTIONBEGIN",'                        00813700
&ZMS               SETC  '&ZMS "FUNCTIONDATA",'                         00813800
&ZMS               SETC  '&ZMS "FUNCTIONEND",'                          00813900
&ZMS               SETC  '&ZMS OR "STATUS".'                            00814000
                   MNOTE 8,' &ZMS '                                     00814100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00814200
                   AGO   .ZE123B                                        00814300
.*                                                                      00814400
.ZE123A            ANOP  ,                                              00814500
&ZXREQUEST         SETC  'INPUT'     SET IN/OUTPUT                      00814600
.ZE123B            ANOP  ,                                              00814700
.*-------------------------------------------------------------------   00814800
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00814900
&ZTLC              SETC 'SVC'                                           00815000
                   AIF   ('&LINKAGE(1)' NE '&ZTLC').ZE126A              00815100
&XLINKAGE          SETC  'SVC'       SET KEYWORD                        00815200
                   AIF   (N'&LINKAGE LE 1).ZE126A  CK NUM               00815300
&ZMS               SETC  '"LINKAGE='                                    00815400
&ZMS               SETC  '&ZMS.&LINKAGE"'                               00815500
&ZMS               SETC  '&ZMS "LINKAGE"'                               00815600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00815700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00815800
.ZE126A            ANOP  ,                                              00815900
.*-------------------------------------------------------------------   00816000
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00816100
&ZTLC              SETC 'BRANCH'                                        00816200
                   AIF   ('&LINKAGE(1)' NE '&ZTLC').ZE127A              00816300
&XLINKAGE          SETC  'BRANCH'    SET KEYWORD                        00816400
                   AIF   (N'&LINKAGE LE 1).ZE127A  CK NUM               00816500
&ZMS               SETC  '"LINKAGE='                                    00816600
&ZMS               SETC  '&ZMS.&LINKAGE"'                               00816700
&ZMS               SETC  '&ZMS "LINKAGE"'                               00816800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00816900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00817000
.ZE127A            ANOP  ,                                              00817100
.*-------------------------------------------------------------------   00817200
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00817300
&ZTLC              SETC 'YES'                                           00817400
                   AIF   ('&VALIDATE(1)' NE '&ZTLC').ZE130A             00817500
&XVALIDATE         SETC  'YES'       SET KEYWORD                        00817600
                   AIF   (N'&VALIDATE LE 1).ZE130A  CK NUM              00817700
&ZMS               SETC  '"VALIDATE='                                   00817800
&ZMS               SETC  '&ZMS.&VALIDATE"'                              00817900
&ZMS               SETC  '&ZMS "VALIDATE"'                              00818000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00818100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00818200
.ZE130A            ANOP  ,                                              00818300
.*-------------------------------------------------------------------   00818400
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00818500
&ZTLC              SETC 'NO'                                            00818600
                   AIF   ('&VALIDATE(1)' NE '&ZTLC').ZE131A             00818700
&XVALIDATE         SETC  'NO'        SET KEYWORD                        00818800
                   AIF   (N'&VALIDATE LE 1).ZE131A  CK NUM              00818900
&ZMS               SETC  '"VALIDATE='                                   00819000
&ZMS               SETC  '&ZMS.&VALIDATE"'                              00819100
&ZMS               SETC  '&ZMS "VALIDATE"'                              00819200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00819300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00819400
.ZE131A            ANOP  ,                                              00819500
.*------------------------------------------------------------------    00819600
.***AE.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00819700
.ZE132             AIF   (K'&XVALIDATE GT 0).ZE132A                     00819800
                   AIF   (K'&VALIDATE(1) LE 0).ZE132B                   00819900
&ZMS               SETC  '"VALIDATE='                                   00820000
&ZMS               SETC  '&ZMS.&VALIDATE"'                              00820100
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00820200
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00820300
&ZMS               SETC  '&ZMS "YES"'                                   00820400
&ZMS               SETC  '&ZMS OR "NO".'                                00820500
                   MNOTE 8,' &ZMS '                                     00820600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00820700
                   AGO   .ZE132B                                        00820800
.*                                                                      00820900
.ZE132A            ANOP  ,                                              00821000
&ZXVALIDATE        SETC  'INPUT'     SET IN/OUTPUT                      00821100
.ZE132B            ANOP  ,                                              00821200
.*------------------------------------------------------------------    00821300
.***AE.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00821400
.ZE133             AIF   (K'&XLINKAGE GT 0).ZE133A                      00821500
                   AIF   (K'&LINKAGE(1) LE 0).ZE133B                    00821600
&ZMS               SETC  '"LINKAGE='                                    00821700
&ZMS               SETC  '&ZMS.&LINKAGE"'                               00821800
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00821900
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00822000
&ZMS               SETC  '&ZMS "SVC"'                                   00822100
&ZMS               SETC  '&ZMS OR "BRANCH".'                            00822200
                   MNOTE 8,' &ZMS '                                     00822300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00822400
                   AGO   .ZE133B                                        00822500
.*                                                                      00822600
.ZE133A            ANOP  ,                                              00822700
&ZXLINKAGE         SETC  'INPUT'     SET IN/OUTPUT                      00822800
.ZE133B            ANOP  ,                                              00822900
.*-------------------------------------------------------------------   00823000
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00823100
&ZTLC              SETC 'NO'                                            00823200
                   AIF   ('&FBFE(1)' NE '&ZTLC').ZE136A                 00823300
&XFBFE             SETC  'NO'        SET KEYWORD                        00823400
                   AIF   (N'&FBFE LE 1).ZE136A  CK NUM                  00823500
&ZMS               SETC  '"FBFE='                                       00823600
&ZMS               SETC  '&ZMS.&FBFE"'                                  00823700
&ZMS               SETC  '&ZMS "FBFE"'                                  00823800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00823900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00824000
.ZE136A            ANOP  ,                                              00824100
.*-------------------------------------------------------------------   00824200
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00824300
&ZTLC              SETC 'YES'                                           00824400
                   AIF   ('&FBFE(1)' NE '&ZTLC').ZE137A                 00824500
&XFBFE             SETC  'YES'       SET KEYWORD                        00824600
                   AIF   (N'&FBFE LE 1).ZE137A  CK NUM                  00824700
&ZMS               SETC  '"FBFE='                                       00824800
&ZMS               SETC  '&ZMS.&FBFE"'                                  00824900
&ZMS               SETC  '&ZMS "FBFE"'                                  00825000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00825100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00825200
.ZE137A            ANOP  ,                                              00825300
.*------------------------------------------------------------------    00825400
.***AE.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00825500
.ZE138             AIF   (K'&XFBFE GT 0).ZE138A                         00825600
                   AIF   (K'&FBFE(1) LE 0).ZE138B                       00825700
&ZMS               SETC  '"FBFE='                                       00825800
&ZMS               SETC  '&ZMS.&FBFE"'                                  00825900
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00826000
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00826100
&ZMS               SETC  '&ZMS "NO"'                                    00826200
&ZMS               SETC  '&ZMS OR "YES".'                               00826300
                   MNOTE 8,' &ZMS '                                     00826400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00826500
                   AGO   .ZE138B                                        00826600
.*                                                                      00826700
.ZE138A            ANOP  ,                                              00826800
&ZXFBFE            SETC  'INPUT'     SET IN/OUTPUT                      00826900
.ZE138B            ANOP  ,                                              00827000
.*----------------------------------------------------------------***   00827100
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         00827200
                   AIF   (N'&RETCODE LE 1).ZE140A  CK NUM               00827300
&ZMS               SETC  '"RETCODE='                                    00827400
&ZMS               SETC  '&ZMS.&RETCODE"'                               00827500
&ZMS               SETC  '&ZMS "RETCODE"'                               00827600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00827700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00827800
.ZE140A            ANOP  ,                                              00827900
.*-------------------------------------------------------------------   00828000
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    00828100
                   AIF   (K'&RETCODE(1) LE 0).ZE140B NO PRM             00828200
&ZXRETCODE         SETC  'OUTPUT'    SET IN/OUTPUT                      00828300
&XRETCODE          SETC  '&RETCODE(1)'          SET XVARIABLE           00828400
                   AIF   (N'&RETCODE GT 1).ZE140B                       00828500
.*                 ANOP                                                 00828600
&XRETCODE          SETC  '&RETCODE'  SET XVARIABLE                      00828700
.ZE140B            ANOP  ,                                              00828800
.*-------------------------------------------------------------------   00828900
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00829000
                   AIF   (K'&ZXRETCODE LE 0).ZE140R  NOT I/O            00829100
                   AIF   ('&XRETCODE'(1,1) NE '(').ZE140R               00829200
&ZCGPR             SETC  '&XRETCODE'(2,K'&XRETCODE-2)                   00829300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE140P                  00829400
                   AIF   (K'&ZCGPR GT 2).ZE140Q                         00829500
                   AIF   ('&ZCGPR' EQ '0').ZE140Q                       00829600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00829700
                   AIF   (T'&ZCGPR NE 'N').ZE140Q  INVALID REG NAME     00829800
.ZE140P            ANOP  ,                                              00829900
                   AIF   (T'&ZCGPR NE 'N').ZE140R  NON NUMERIC          00830000
                   AIF   ('&ZCGPR' LT '2').ZE140Q                       00830100
                   AIF   ('&ZCGPR' LE '12').ZE140R                      00830200
.ZE140Q            ANOP  ,                                              00830300
&ZMS               SETC  '"RETCODE='                                    00830400
&ZMS               SETC  '&ZMS.&RETCODE"'                               00830500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00830600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00830700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00830800
.ZE140R            ANOP  ,                                              00830900
.******************************************************************     00831000
.***AF.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00831100
.******************************************************************     00831200
                   ACTR  10000                                          00831300
.*----------------------------------------------------------------***   00831400
.***AF.P02 EXTRA POSITIONALS                                            00831500
                   AIF   (N'&SYSLIST LE 0).ZELISTX  NO EXTRAS           00831600
&ZCVAL             SETC  ''          ERROR FIELD                        00831700
&ZAWRK             SETA  0           POSITIONAL NUMBER                  00831800
.ZELIST2           ANOP  ,                                              00831900
&ZAWRK             SETA  &ZAWRK+1    NEXT POSITIONAL                    00832000
                   AIF   (&ZAWRK GT N'&SYSLIST).ZELIST3  DONE           00832100
&ZCVAL             SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                00832200
                   AGO   .ZELIST2                                       00832300
.*                                                                      00832400
.ZELIST3           ANOP  ,                                              00832500
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA             00832600
&ZMS               SETC  'POSITIONAL ARGUMENT(S),'                      00832700
&ZMS               SETC  '&ZMS "&ZCVAL"'                                00832800
&ZMS               SETC  '&ZMS CANNOT BE USED.'                         00832900
&ZMS               SETC  '&ZMS NO POSITIONAL ARGUMENTS'                 00833000
                   MNOTE 8,' &ZMS ARE ALLOWED.'                         00833100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00833200
.ZELISTX           ANOP  ,                                              00833300
&ZASYSLNDX         SETA  0                                              00833400
.*-------------------------------------------------------------------   00833500
.***AE.MF02 MF=(SLME)                                                   00833600
.ZEMFX             ANOP  ,           END OF PARTIAL SYNTAX CHECK        00833700
.*******************************************************************    00833800
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00833900
.*******************************************************************    00834000
                   AIF   (&ZMACRET NE 0).ZLX2   ERROR DETECTED          00834100
.*******************************************************************    00834200
.***AE.01  START OF IFAUSAGE MACRO CODE                                 00834300
.*******************************************************************    00834400
                   LCLC  &M0M0001                 NAME                  00834500
&M0M0001           SETC  '&XLABEL'                SET NAME              00834600
                   AIF   (K'&XLABEL NE 0).XLAB2                         00834700
&M0M0001           SETC  'M00M&SYSNDX'            DEFAULT NAME          00834800
.*                                                                      00834900
.XLAB2             ANOP  ,                                              00835000
                   AIF   ('&XMF' EQ 'L').XLAB3                          00835100
&M0M0001 DS    0H                             IFAUSAGE-2                00835200
.XLAB3             ANOP  ,                                              00835300
.*******************************************************************    00835400
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00835500
.*******************************************************************    00835600
              PUSH  PRINT                                               00835700
                   AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON     00835800
                   PRINT OFF         ++ PR01                            00835900
                   AGO   .ZPRNTXX                                       00836000
.ZPRINTX           PRINT ON                                             00836100
.ZPRNTXX           ANOP  ,                                              00836200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00836300
.* Insert ASM validation code here........                              00836400
*                                                                       00836500
         AIF   ('&MF(1)' EQ 'L').ValExit                           @P4C 00836600
&A       SETA  &SYSNDX               - Get Index - Label Suffix    @01A 00836700
         AIF   ('&SYSAM64' EQ 'YES').ValAm64 Valid AMODE 64 caller @03A 00836800
                                                                        00836900
.* Begin AMODE 31 checks                                           @P4C 00837000
                                                                        00837100
         AIF   ('&XPRTOKEN64' EQ '').NoErr01 Valid keyword for ENV @03A 00837200
.* Error messsage                                                  @03A 00837300
&ZMS     SETC  'Use PRTOKEN with AMODE 31'                         @P4C 00837400
         MNOTE 8,'&ZMS'                                            @03A 00837500
&ZMACRET SETA  8                     - SET MACRO ERROR RETURN CODE @03A 00837600
         AGO   .ValExit                                            @03A 00837700
.NoErr01 ANOP                                                      @03A 00837800
                                                                        00837900
         AIF   ('&XBEGTIME64' EQ '').NoErr0A Valid keyword for ENV @03A 00838000
.* Error messsage                                                  @03A 00838100
&ZMS     SETC  'Use BEGTIME with AMODE 31'                         @P4C 00838200
         MNOTE 8,'&ZMS'                                            @03A 00838300
&ZMACRET SETA  8                     - SET MACRO ERROR RETURN CODE @03A 00838400
         AGO   .ValExit                                            @03A 00838500
.NoErr0A ANOP                                                      @03A 00838600
                                                                        00838700
         AIF   ('&XDATA64' EQ '').NoErr03 Valid keyword for ENV    @03A 00838800
.* Error messsage                                                  @03A 00838900
&ZMS     SETC  'Use DATA with AMODE 31          '                  @P4C 00839000
         MNOTE 8,'&ZMS'                                            @03A 00839100
&ZMACRET SETA  8                     - SET MACRO ERROR RETURN CODE @03A 00839200
         AGO   .ValExit                                            @03A 00839300
.NoErr03 ANOP                                                      @03A 00839400
                                                                        00839500
         AIF   ('&XCURRENTDATA64' EQ '').NoErr04 Val kyWrd for ENV @03A 00839600
.* Error messsage                                                  @03A 00839700
&ZMS     SETC  'Use CURRENTDATA with AMODE 31          '           @P4C 00839800
         MNOTE 8,'&ZMS'                                            @03A 00839900
&ZMACRET SETA  8                     - SET MACRO ERROR RETURN CODE @03A 00840000
         AGO   .ValExit                                            @03A 00840100
.NoErr04 ANOP                                                      @03A 00840200
                                                                        00840300
         AIF   ('&XENDTIME64' EQ '').NoErr05 Valid keyword for ENV @03A 00840400
.* Error messsage                                                  @03A 00840500
&ZMS     SETC  'Use ENDTIME with AMODE 31'                         @P4C 00840600
         MNOTE 8,'&ZMS'                                            @03A 00840700
&ZMACRET SETA  8                     - SET MACRO ERROR RETURN CODE @03A 00840800
         AGO   .ValExit                                            @03A 00840900
.NoErr05 ANOP                                                      @03A 00841000
                                                                        00841100
         AIF   ('&XENDDATA64' EQ '').NoErr06 Valid keyword for ENV @03A 00841200
.* Error messsage                                                  @03A 00841300
&ZMS     SETC  'Use ENDDATA with AMODE 31'                         @P4C 00841400
         MNOTE 8,'&ZMS'                                            @03A 00841500
&ZMACRET SETA  8                     - SET MACRO ERROR RETURN CODE @03A 00841600
         AGO   .ValExit                                            @03A 00841700
.NoErr06 ANOP                                                      @03A 00841800
                                                                        00841900
         AGO   .ValExit              - AMODE 64 checks complete    @P4A 00842000
                                                                        00842100
.ValAm64 ANOP                        - Valid AMODE 64 guy, cont.   @03A 00842200
                                                                        00842300
.* Begin AMODE 64 checks                                           @P4A 00842400
                                                                        00842500
         AIF   ('&XPRTOKEN' EQ '').NoErr07 Valid keyword for ENV @03A   00842600
.* Error messsage                                                  @03A 00842700
&ZMS     SETC  'Use PRTOKEN64 with AMODE 64'                       @03A 00842800
         MNOTE 8,'&ZMS'                                            @03A 00842900
&ZMACRET SETA  8                     - SET MACRO ERROR RETURN CODE @03A 00843000
         AGO   .ValExit                                            @03A 00843100
.NoErr07 ANOP                                                      @03A 00843200
                                                                        00843300
         AIF   ('&XBEGTIME' EQ '').NoErr08 Valid keyword for ENV @03A   00843400
.* Error messsage                                                  @03A 00843500
&ZMS     SETC  'Use BEGTIME64 with AMODE 64'                       @03A 00843600
         MNOTE 8,'&ZMS'                                            @03A 00843700
&ZMACRET SETA  8                     - SET MACRO ERROR RETURN CODE @03A 00843800
         AGO   .ValExit                                            @03A 00843900
.NoErr08 ANOP                                                      @03A 00844000
                                                                        00844100
         AIF   ('&XDATA' EQ '').NoErr09  Valid keyword for ENV     @03A 00844200
.* Error messsage                                                  @03A 00844300
&ZMS     SETC  'Use DATA64 with AMODE 64'                          @03A 00844400
         MNOTE 8,'&ZMS'                                            @03A 00844500
&ZMACRET SETA  8                     - SET MACRO ERROR RETURN CODE @03A 00844600
         AGO   .ValExit                                            @03A 00844700
.NoErr09 ANOP                                                      @03A 00844800
                                                                        00844900
         AIF   ('&XCURRENTDATA' EQ '').NoErr10 Valid KYWD  for ENV @03A 00845000
.* Error messsage                                                  @03A 00845100
&ZMS     SETC  'Use CURRENTDATA64 with AMODE 64'                   @03A 00845200
         MNOTE 8,'&ZMS'                                            @03A 00845300
&ZMACRET SETA  8                     - SET MACRO ERROR RETURN CODE @03A 00845400
         AGO   .ValExit                                            @03A 00845500
.NoErr10 ANOP                                                      @03A 00845600
                                                                        00845700
         AIF   ('&XENDTIME' EQ '').NoErr11 Valid keyword for ENV   @03A 00845800
.* Error messsage                                                  @03A 00845900
&ZMS     SETC  'Use ENDTIME64 with AMODE 64'                       @03A 00846000
         MNOTE 8,'&ZMS'                                            @03A 00846100
&ZMACRET SETA  8                     - SET MACRO ERROR RETURN CODE @03A 00846200
         AGO   .ValExit                                            @03A 00846300
.NoErr11 ANOP                                                      @03A 00846400
                                                                        00846500
         AIF   ('&XENDDATA' EQ '').NoErr12 Valid keyword for ENV @03A   00846600
.* Error messsage                                                  @03A 00846700
&ZMS     SETC  'Use ENDDATA64 with AMODE 64'                       @03A 00846800
         MNOTE 8,'&ZMS'                                            @03A 00846900
&ZMACRET SETA  8                     - SET MACRO ERROR RETURN CODE @03A 00847000
         AGO   .ValExit                                            @03A 00847100
.NoErr12 ANOP                                                      @03A 00847200
.ValExit ANOP                        - Exit Validation             @03A 00847300
*                                                                       00847400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00847500
.********************************************************************   00847600
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00847700
.********************************************************************   00847800
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00847900
                      LCLA  &ZOPN1         INVOCATION INDEX             00848000
                      LCLC  &ZOPL(4095)    LABEL                        00848100
                      LCLC  &ZOPO(4095)    OPERATION                    00848200
                      LCLC  &ZOPV(4095)    VALUE                        00848300
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00848400
.*                                                                      00848500
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00848600
.******************************************************************     00848700
.***AL.L10 IFAUSAGE FMT=LIST MF=S!L PARAMETERS                          00848800
.******************************************************************     00848900
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00849000
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00849100
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00849200
&XMFATTR              SETC  '0D'                                        00849300
.*                                                                      00849400
&ZOPN                 SETA  &ZOPN+1                                     00849500
&ZOPL(&ZOPN)          SETC  ' '                                         00849600
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00849700
&ZOPV(&ZOPN)          SETC  '4,8'                                       00849800
&ZOPN                 SETA  &ZOPN+1                                     00849900
&ZOPL(&ZOPN)          SETC  ' '                                         00850000
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00850100
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00850200
&ZOPD(&ZOPN)          SETC  '++ IFAUSAGE ARG PARMS'                     00850300
.*                                                                      00850400
&ZOPN                 SETA  &ZOPN+1                                     00850500
&ZOPL(&ZOPN)          SETC  ' '                                         00850600
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00850700
&ZOPV(&ZOPN)          SETC  '1'                                         00850800
&ZOPD(&ZOPN)          SETC  ' '                                         00850900
.*                                                                      00851000
.ZLMFSL2              ANOP  ,                                           00851100
.*-------------------------------------------------------------------   00851200
.***AM.L00  IFAUSAGE FMT=LIST name                                      00851300
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00851400
&ZOPN                 SETA &ZOPN+1                                      00851500
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00851600
&ZOPO(&ZOPN)          SETC 'EQU'                                        00851700
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00851800
&ZOPD(&ZOPN)          SETC '++ IFAUSAGE NAME'                           00851900
.ZLMFSL2M             ANOP  ,                                           00852000
.*-------------------------------------------------------------------   00852100
.***AM.L01  IFAUSAGE FMT=LIST PARAMETERS                                00852200
&ZOPN                 SETA &ZOPN+1                                      00852300
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00852400
&ZOPO(&ZOPN)          SETC 'DS'                                         00852500
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00852600
&ZOPD(&ZOPN)          SETC '++ IFAUSAGE PARM LIST'                      00852700
.*-------------------------------------------------------------------   00852800
.***AM.L09  XPREFIX F                                                   00852900
&ZOPN                 SETA &ZOPN+1                                      00853000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPREFIX'                          00853100
&ZOPO(&ZOPN)          SETC 'DS'                                         00853200
&ZOPV(&ZOPN)          SETC 'F'                                          00853300
&ZOPD(&ZOPN)          SETC '++ CONSTANT '                               00853400
.*-------------------------------------------------------------------   00853500
.***AM.L09  XID CL8                                                     00853600
&ZOPN                 SETA &ZOPN+1                                      00853700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XID'                              00853800
&ZOPO(&ZOPN)          SETC 'DS'                                         00853900
&ZOPV(&ZOPN)          SETC 'CL8'                                        00854000
&ZOPD(&ZOPN)          SETC '++ CONSTANT '                               00854100
.*-------------------------------------------------------------------   00854200
.***AM.L09  XPLISTLEN XL2                                               00854300
&ZOPN                 SETA &ZOPN+1                                      00854400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        00854500
&ZOPO(&ZOPN)          SETC 'DS'                                         00854600
&ZOPV(&ZOPN)          SETC 'XL2'                                        00854700
&ZOPD(&ZOPN)          SETC '++ INPUT '                                  00854800
.*-------------------------------------------------------------------   00854900
.***AM.L02 XVERSION XL1                                                 00855000
&ZOPN                 SETA &ZOPN+1                                      00855100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00855200
&ZOPO(&ZOPN)          SETC 'DS'                                         00855300
&ZOPV(&ZOPN)          SETC 'XL1'                                        00855400
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00855500
.*-------------------------------------------------------------------   00855600
.***AM.L05 XREQUEST XL1                                                 00855700
&ZOPN                 SETA &ZOPN+1                                      00855800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQUEST'                         00855900
&ZOPO(&ZOPN)          SETC 'DS'                                         00856000
&ZOPV(&ZOPN)          SETC 'XL1'                                        00856100
&ZOPD(&ZOPN)          SETC '++ &ZXREQUEST XREQUEST'                     00856200
.*                                                                      00856300
&ZOPN                 SETA  &ZOPN+1                                     00856400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_REGISTER'               00856500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00856600
&ZOPV(&ZOPN)          SETC  '1'                                         00856700
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              00856800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).REGISTER'                     00856900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00857000
.*                                                                      00857100
&ZOPN                 SETA  &ZOPN+1                                     00857200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_DEREGISTER'             00857300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00857400
&ZOPV(&ZOPN)          SETC  '2'                                         00857500
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              00857600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DEREGISTER'                   00857700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00857800
.*                                                                      00857900
&ZOPN                 SETA  &ZOPN+1                                     00858000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_FUNCTIONBEGIN'          00858100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00858200
&ZOPV(&ZOPN)          SETC  '3'                                         00858300
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              00858400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).FUNCTIONBEGIN'                00858500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00858600
.*                                                                      00858700
&ZOPN                 SETA  &ZOPN+1                                     00858800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_FUNCTIONDATA'           00858900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00859000
&ZOPV(&ZOPN)          SETC  '4'                                         00859100
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              00859200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).FUNCTIONDATA'                 00859300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00859400
.*                                                                      00859500
&ZOPN                 SETA  &ZOPN+1                                     00859600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_FUNCTIONEND'            00859700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00859800
&ZOPV(&ZOPN)          SETC  '5'                                         00859900
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              00860000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).FUNCTIONEND'                  00860100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00860200
.*                                                                      00860300
&ZOPN                 SETA  &ZOPN+1                                     00860400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_STATUS'                 00860500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00860600
&ZOPV(&ZOPN)          SETC  '6'                                         00860700
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              00860800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).STATUS'                       00860900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00861000
.*-------------------------------------------------------------------   00861100
.***AM.L09  XPRODOWNER CL16                                             00861200
&ZOPN                 SETA &ZOPN+1                                      00861300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPRODOWNER'                       00861400
&ZOPO(&ZOPN)          SETC 'DS'                                         00861500
&ZOPV(&ZOPN)          SETC 'CL16'                                       00861600
&ZOPD(&ZOPN)          SETC '++ &ZXPRODOWNER '                           00861700
.*-------------------------------------------------------------------   00861800
.***AM.L09  XPRODNAME CL16                                              00861900
&ZOPN                 SETA &ZOPN+1                                      00862000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPRODNAME'                        00862100
&ZOPO(&ZOPN)          SETC 'DS'                                         00862200
&ZOPV(&ZOPN)          SETC 'CL16'                                       00862300
&ZOPD(&ZOPN)          SETC '++ &ZXPRODNAME '                            00862400
.*-------------------------------------------------------------------   00862500
.***AM.L09  XPRODVERS CL8                                               00862600
&ZOPN                 SETA &ZOPN+1                                      00862700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPRODVERS'                        00862800
&ZOPO(&ZOPN)          SETC 'DS'                                         00862900
&ZOPV(&ZOPN)          SETC 'CL8'                                        00863000
&ZOPD(&ZOPN)          SETC '++ &ZXPRODVERS '                            00863100
.*-------------------------------------------------------------------   00863200
.***AM.L09  XPRODQUAL CL8                                               00863300
&ZOPN                 SETA &ZOPN+1                                      00863400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPRODQUAL'                        00863500
&ZOPO(&ZOPN)          SETC 'DS'                                         00863600
&ZOPV(&ZOPN)          SETC 'CL8'                                        00863700
&ZOPD(&ZOPN)          SETC '++ &ZXPRODQUAL '                            00863800
.*-------------------------------------------------------------------   00863900
.***AM.L09  XPRODID CL8                                                 00864000
&ZOPN                 SETA &ZOPN+1                                      00864100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPRODID'                          00864200
&ZOPO(&ZOPN)          SETC 'DS'                                         00864300
&ZOPV(&ZOPN)          SETC 'CL8'                                        00864400
&ZOPD(&ZOPN)          SETC '++ &ZXPRODID '                              00864500
.*-------------------------------------------------------------------   00864600
.***AM.L05 XDOMAIN XL1                                                  00864700
&ZOPN                 SETA &ZOPN+1                                      00864800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDOMAIN'                          00864900
&ZOPO(&ZOPN)          SETC 'DS'                                         00865000
&ZOPV(&ZOPN)          SETC 'XL1'                                        00865100
&ZOPD(&ZOPN)          SETC '++ &ZXDOMAIN XDOMAIN'                       00865200
.*                                                                      00865300
&ZOPN                 SETA  &ZOPN+1                                     00865400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XDOMAIN_ADDRSP'                  00865500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00865600
&ZOPV(&ZOPN)          SETC  '1'                                         00865700
&ZOPD(&ZOPN)          SETC  '++ XDOMAIN.'                               00865800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ADDRSP'                       00865900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00866000
.*                                                                      00866100
&ZOPN                 SETA  &ZOPN+1                                     00866200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XDOMAIN_TASK'                    00866300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00866400
&ZOPV(&ZOPN)          SETC  '2'                                         00866500
&ZOPD(&ZOPN)          SETC  '++ XDOMAIN.'                               00866600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).TASK'                         00866700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00866800
.*-------------------------------------------------------------------   00866900
.***AM.L05 XSCOPE XL1                                                   00867000
&ZOPN                 SETA &ZOPN+1                                      00867100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSCOPE'                           00867200
&ZOPO(&ZOPN)          SETC 'DS'                                         00867300
&ZOPV(&ZOPN)          SETC 'XL1'                                        00867400
&ZOPD(&ZOPN)          SETC '++ &ZXSCOPE XSCOPE'                         00867500
.*                                                                      00867600
&ZOPN                 SETA  &ZOPN+1                                     00867700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSCOPE_ALL'                      00867800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00867900
&ZOPV(&ZOPN)          SETC  '1'                                         00868000
&ZOPD(&ZOPN)          SETC  '++ XSCOPE.'                                00868100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ALL'                          00868200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00868300
.*                                                                      00868400
&ZOPN                 SETA  &ZOPN+1                                     00868500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSCOPE_FUNCTION'                 00868600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00868700
&ZOPV(&ZOPN)          SETC  '2'                                         00868800
&ZOPD(&ZOPN)          SETC  '++ XSCOPE.'                                00868900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).FUNCTION'                     00869000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00869100
.*-------------------------------------------------------------------   00869200
.***AM.L09  XRSV0001 CL1                                                00869300
&ZOPN                 SETA &ZOPN+1                                      00869400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0001'                         00869500
&ZOPO(&ZOPN)          SETC 'DS'                                         00869600
&ZOPV(&ZOPN)          SETC 'CL1'                                        00869700
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00869800
.*-------------------------------------------------------------------   00869900
.***AM.L03 XFLAGS BL.8                                                  00870000
&ZOPN                 SETA &ZOPN+1                                      00870100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS'                           00870200
&ZOPO(&ZOPN)          SETC 'DS'                                         00870300
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00870400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00870500
.*                                                                      00870600
&ZOPN                 SETA  &ZOPN+1                                     00870700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XVALIDATE_NO'                    00870800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00870900
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00871000
&ZOPD(&ZOPN)          SETC  '++ XVALIDATE.'                             00871100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           00871200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00871300
.*                                                                      00871400
&ZOPN                 SETA  &ZOPN+1                                     00871500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XFBFE_YES'                       00871600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00871700
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00871800
&ZOPD(&ZOPN)          SETC  '++ XFBFE.'                                 00871900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00872000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00872100
.*-------------------------------------------------------------------   00872200
.***AM.L09 ADDR XPRTOKEN A                                              00872300
&ZOPN                 SETA &ZOPN+1                                      00872400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPRTOKEN_ADDR'                    00872500
&ZOPO(&ZOPN)          SETC 'DS'                                         00872600
&ZOPV(&ZOPN)          SETC 'A'                                          00872700
&ZOPD(&ZOPN)          SETC '++ &ZXPRTOKEN ADDR'                         00872800
.*-------------------------------------------------------------------   00872900
.***AM.L09 ADDR XBEGTIME A                                              00873000
&ZOPN                 SETA &ZOPN+1                                      00873100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBEGTIME_ADDR'                    00873200
&ZOPO(&ZOPN)          SETC 'DS'                                         00873300
&ZOPV(&ZOPN)          SETC 'A'                                          00873400
&ZOPD(&ZOPN)          SETC '++ &ZXBEGTIME ADDR'                         00873500
.*-------------------------------------------------------------------   00873600
.***AM.L09 ADDR XDATA A                                                 00873700
&ZOPN                 SETA &ZOPN+1                                      00873800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATA_ADDR'                       00873900
&ZOPO(&ZOPN)          SETC 'DS'                                         00874000
&ZOPV(&ZOPN)          SETC 'A'                                          00874100
&ZOPD(&ZOPN)          SETC '++ &ZXDATA ADDR'                            00874200
.*-------------------------------------------------------------------   00874300
.***AM.L05 XFORMAT XL1                                                  00874400
&ZOPN                 SETA &ZOPN+1                                      00874500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFORMAT'                          00874600
&ZOPO(&ZOPN)          SETC 'DS'                                         00874700
&ZOPV(&ZOPN)          SETC 'XL1'                                        00874800
&ZOPD(&ZOPN)          SETC '++ &ZXFORMAT XFORMAT'                       00874900
.*                                                                      00875000
&ZOPN                 SETA  &ZOPN+1                                     00875100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XFORMAT_CPUTIME'                 00875200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00875300
&ZOPV(&ZOPN)          SETC  '1'                                         00875400
&ZOPD(&ZOPN)          SETC  '++ XFORMAT.'                               00875500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CPUTIME'                      00875600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00875700
.*                                                                      00875800
&ZOPN                 SETA  &ZOPN+1                                     00875900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XFORMAT_BINARY'                  00876000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00876100
&ZOPV(&ZOPN)          SETC  '2'                                         00876200
&ZOPD(&ZOPN)          SETC  '++ XFORMAT.'                               00876300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BINARY'                       00876400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00876500
.*                                                                      00876600
&ZOPN                 SETA  &ZOPN+1                                     00876700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XFORMAT_FLOAT'                   00876800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00876900
&ZOPV(&ZOPN)          SETC  '3'                                         00877000
&ZOPD(&ZOPN)          SETC  '++ XFORMAT.'                               00877100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).FLOAT'                        00877200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00877300
.*-------------------------------------------------------------------   00877400
.***AM.L05 XUNAUTHSERV XL1                                              00877500
&ZOPN                 SETA &ZOPN+1                                      00877600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUNAUTHSERV'                      00877700
&ZOPO(&ZOPN)          SETC 'DS'                                         00877800
&ZOPV(&ZOPN)          SETC 'XL1'                                        00877900
&ZOPD(&ZOPN)          SETC '++ &ZXUNAUTHSERV XUNAUTHSERV'               00878000
.*                                                                      00878100
&ZOPN                 SETA  &ZOPN+1                                     00878200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XUNAUTHSERV_BASE'                00878300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00878400
&ZOPV(&ZOPN)          SETC  '1'                                         00878500
&ZOPD(&ZOPN)          SETC  '++ XUNAUTHSERV.'                           00878600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BASE'                         00878700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00878800
.*                                                                      00878900
&ZOPN                 SETA  &ZOPN+1                                     00879000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XUNAUTHSERV_LEVEL1'              00879100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00879200
&ZOPV(&ZOPN)          SETC  '2'                                         00879300
&ZOPD(&ZOPN)          SETC  '++ XUNAUTHSERV.'                           00879400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LEVEL1'                       00879500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00879600
.*-------------------------------------------------------------------   00879700
.***AM.L09  XRSV0002 CL02                                               00879800
&ZOPN                 SETA &ZOPN+1                                      00879900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0002'                         00880000
&ZOPO(&ZOPN)          SETC 'DS'                                         00880100
&ZOPV(&ZOPN)          SETC 'CL02'                                       00880200
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00880300
.*-------------------------------------------------------------------   00880400
.***AM.L09 ADDR XCURRENTDATA A                                          00880500
&ZOPN                 SETA &ZOPN+1                                      00880600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCURRENTDATA_ADDR'                00880700
&ZOPO(&ZOPN)          SETC 'DS'                                         00880800
&ZOPV(&ZOPN)          SETC 'A'                                          00880900
&ZOPD(&ZOPN)          SETC '++ &ZXCURRENTDATA ADDR'                     00881000
.*-------------------------------------------------------------------   00881100
.***AM.L09 ADDR XENDDATA A                                              00881200
&ZOPN                 SETA &ZOPN+1                                      00881300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENDDATA_ADDR'                    00881400
&ZOPO(&ZOPN)          SETC 'DS'                                         00881500
&ZOPV(&ZOPN)          SETC 'A'                                          00881600
&ZOPD(&ZOPN)          SETC '++ &ZXENDDATA ADDR'                         00881700
.*-------------------------------------------------------------------   00881800
.***AM.L09 ADDR XENDTIME A                                              00881900
&ZOPN                 SETA &ZOPN+1                                      00882000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENDTIME_ADDR'                    00882100
&ZOPO(&ZOPN)          SETC 'DS'                                         00882200
&ZOPV(&ZOPN)          SETC 'A'                                          00882300
&ZOPD(&ZOPN)          SETC '++ &ZXENDTIME ADDR'                         00882400
.*-------------------------------------------------------------------   00882500
.***AM.MLM2 SAVED LOCATION COUNTER                                      00882600
                      AIF  (&XPLISTVER GE 2).ZL41LA                     00882700
                      AIF  ('&ZENDBASEPL' NE '').ZL41LA                 00882800
&ZENDBASEPL           SETC 'YES'                                        00882900
&ZOPN                 SETA &ZOPN+1                                      00883000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00883100
&ZOPO(&ZOPN)          SETC 'EQU'                                        00883200
&ZOPV(&ZOPN)          SETC '*'                                          00883300
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00883400
.ZL41LA               ANOP  ,                                           00883500
.*-------------------------------------------------------------------   00883600
.***AM.LVER1                                                            00883700
                      AIF  (&XPLISTVER LT 2).ZL41L                      00883800
.*-------------------------------------------------------------------   00883900
.*-------------------------------------------------------------------   00884000
.***AM.L09 ADDR64 XPRTOKEN64 AD                                         00884100
&ZOPN                 SETA &ZOPN+1                                      00884200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPRTOKEN64_ADDR64'                00884300
&ZOPO(&ZOPN)          SETC 'DS'                                         00884400
&ZOPV(&ZOPN)          SETC 'AD'                                         00884500
&ZOPD(&ZOPN)          SETC '++ &ZXPRTOKEN64 ADDR64'                     00884600
.*-------------------------------------------------------------------   00884700
.***AM.LVER2                                                            00884800
.ZL41L                ANOP  ,                                           00884900
.*-------------------------------------------------------------------   00885000
.*-------------------------------------------------------------------   00885100
.***AM.LVER1                                                            00885200
                      AIF  (&XPLISTVER LT 2).ZL42L                      00885300
.*-------------------------------------------------------------------   00885400
.*-------------------------------------------------------------------   00885500
.***AM.L09 ADDR64 XBEGTIME64 AD                                         00885600
&ZOPN                 SETA &ZOPN+1                                      00885700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBEGTIME64_ADDR64'                00885800
&ZOPO(&ZOPN)          SETC 'DS'                                         00885900
&ZOPV(&ZOPN)          SETC 'AD'                                         00886000
&ZOPD(&ZOPN)          SETC '++ &ZXBEGTIME64 ADDR64'                     00886100
.*-------------------------------------------------------------------   00886200
.***AM.LVER2                                                            00886300
.ZL42L                ANOP  ,                                           00886400
.*-------------------------------------------------------------------   00886500
.*-------------------------------------------------------------------   00886600
.***AM.LVER1                                                            00886700
                      AIF  (&XPLISTVER LT 2).ZL43L                      00886800
.*-------------------------------------------------------------------   00886900
.*-------------------------------------------------------------------   00887000
.***AM.L09 ADDR64 XDATA64 AD                                            00887100
&ZOPN                 SETA &ZOPN+1                                      00887200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATA64_ADDR64'                   00887300
&ZOPO(&ZOPN)          SETC 'DS'                                         00887400
&ZOPV(&ZOPN)          SETC 'AD'                                         00887500
&ZOPD(&ZOPN)          SETC '++ &ZXDATA64 ADDR64'                        00887600
.*-------------------------------------------------------------------   00887700
.***AM.LVER2                                                            00887800
.ZL43L                ANOP  ,                                           00887900
.*-------------------------------------------------------------------   00888000
.*-------------------------------------------------------------------   00888100
.***AM.LVER1                                                            00888200
                      AIF  (&XPLISTVER LT 2).ZL44L                      00888300
.*-------------------------------------------------------------------   00888400
.*-------------------------------------------------------------------   00888500
.***AM.L09 ADDR64 XCURRENTDATA64 AD                                     00888600
&ZOPN                 SETA &ZOPN+1                                      00888700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCURRENTDATA64_ADDR64'            00888800
&ZOPO(&ZOPN)          SETC 'DS'                                         00888900
&ZOPV(&ZOPN)          SETC 'AD'                                         00889000
&ZOPD(&ZOPN)          SETC '++ &ZXCURRENTDATA64 ADDR64'                 00889100
.*-------------------------------------------------------------------   00889200
.***AM.LVER2                                                            00889300
.ZL44L                ANOP  ,                                           00889400
.*-------------------------------------------------------------------   00889500
.*-------------------------------------------------------------------   00889600
.***AM.LVER1                                                            00889700
                      AIF  (&XPLISTVER LT 2).ZL45L                      00889800
.*-------------------------------------------------------------------   00889900
.*-------------------------------------------------------------------   00890000
.***AM.L09 ADDR64 XENDDATA64 AD                                         00890100
&ZOPN                 SETA &ZOPN+1                                      00890200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENDDATA64_ADDR64'                00890300
&ZOPO(&ZOPN)          SETC 'DS'                                         00890400
&ZOPV(&ZOPN)          SETC 'AD'                                         00890500
&ZOPD(&ZOPN)          SETC '++ &ZXENDDATA64 ADDR64'                     00890600
.*-------------------------------------------------------------------   00890700
.***AM.LVER2                                                            00890800
.ZL45L                ANOP  ,                                           00890900
.*-------------------------------------------------------------------   00891000
.*-------------------------------------------------------------------   00891100
.***AM.LVER1                                                            00891200
                      AIF  (&XPLISTVER LT 2).ZL46L                      00891300
.*-------------------------------------------------------------------   00891400
.*-------------------------------------------------------------------   00891500
.***AM.L09 ADDR64 XENDTIME64 AD                                         00891600
&ZOPN                 SETA &ZOPN+1                                      00891700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENDTIME64_ADDR64'                00891800
&ZOPO(&ZOPN)          SETC 'DS'                                         00891900
&ZOPV(&ZOPN)          SETC 'AD'                                         00892000
&ZOPD(&ZOPN)          SETC '++ &ZXENDTIME64 ADDR64'                     00892100
.*-------------------------------------------------------------------   00892200
.***AM.LVER2                                                            00892300
.ZL46L                ANOP  ,                                           00892400
.*-------------------------------------------------------------------   00892500
.*-------------------------------------------------------------------   00892600
.***AM.L10 END OF IFAUSAGE LIST PARAMETERS                              00892700
&ZOPN                 SETA &ZOPN+1                                      00892800
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00892900
&ZOPO(&ZOPN)          SETC 'EQU'                                        00893000
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00893100
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00893200
.*                                                                      00893300
&ZOPN                 SETA &ZOPN+1                                      00893400
&ZOPL(&ZOPN)          SETC ' '                                          00893500
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00893600
&ZOPV(&ZOPN)          SETC '1'                                          00893700
&ZOPD(&ZOPN)          SETC ' '                                          00893800
.*-------------------------------------------------------------------   00893900
.***AL.L12 IFAUSAGE FMT=LIST MF=S!L PARAMETERS                          00894000
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00894100
.*                                                                      00894200
&ZOPN                 SETA  &ZOPN+1                                     00894300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00894400
&ZOPO(&ZOPN)          SETC  'DC'                                        00894500
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00894600
&ZOPD(&ZOPN)          SETC  '++ IFAUSAGE ARG PARMS'                     00894700
.*                                                                      00894800
.ZLMFSLX              ANOP  ,                                           00894900
.*-------------------------------------------------------------------   00895000
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00895100
&ZPLLEN               SETA 104                                          00895200
.*                                                                      00895300
                      AIF  (&XPLISTVER LT 2).ZLLEN2Z                    00895400
&ZPLLEN               SETA 152                                          00895500
.ZLLEN2Z              ANOP  ,                                           00895600
.*                                                                      00895700
.******************************************************************     00895800
.***AI.L01 IFAUSAGE FMT=LIST FILL IN PARAMETER AREA                     00895900
.******************************************************************     00896000
                      ACTR  10000                                       00896100
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00896200
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00896300
&ZCVAL                SETC  'LAE'          XAX MODE                     00896400
.ZIMFXA               ANOP ,                                            00896500
.*                                                                      00896600
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00896700
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00896800
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00896900
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00897000
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00897100
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00897200
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00897300
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00897400
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00897500
&ZOPN                 SETA  &ZOPN+1                                     00897600
&ZOPL(&ZOPN)          SETC  ' '                                         00897700
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00897800
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00897900
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00898000
                      AGO   .ZIMFNX                                     00898100
.*                                                                      00898200
.ZIMFN2               ANOP ,                                            00898300
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00898400
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00898500
&ZOPN                 SETA  &ZOPN+1                                     00898600
&ZOPL(&ZOPN)          SETC  ' '                                         00898700
&ZOPO(&ZOPN)          SETC  'LAE'                                       00898800
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00898900
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00899000
                      AGO   .ZIMFNX                                     00899100
.ZIMFNX1              ANOP ,                                            00899200
&ZOPN                 SETA  &ZOPN+1                                     00899300
&ZOPL(&ZOPN)          SETC  ' '                                         00899400
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00899500
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00899600
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00899700
.ZIMFNX               ANOP ,                                            00899800
.********************************************************************   00899900
.***AI.L02 IFAUSAGE FMT=LIST INITIALIZE PARAMETER AREA                  00900000
.********************************************************************   00900100
.***AI.L03 MF=(SLME)                                                    00900200
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00900300
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZIMFLX            00900400
.*                                                                      00900500
&ZOPN                 SETA  &ZOPN+1                                     00900600
&ZOPL(&ZOPN)          SETC  ' '                                         00900700
&ZOPO(&ZOPN)          SETC  'XC'                                        00900800
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00900900
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00901000
.ZIMFLX               ANOP  ,                                           00901100
.*-------------------------------------------------------------------   00901200
.***AI.L54 XPREFIX F                                                    00901300
&ZOPN                 SETA  &ZOPN+1                                     00901400
&ZOPL(&ZOPN)          SETC  ' '                                         00901500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00901600
&ZOPV(&ZOPN)          SETC  '0(4,1),=AL4(0)'                            00901700
&ZOPD(&ZOPN)          SETC  '++ F CONSTANT'                             00901800
.*-------------------------------------------------------------------   00901900
.***AI.L60 XID CL8                                                      00902000
&ZOPN                 SETA  &ZOPN+1                                     00902100
&ZOPL(&ZOPN)          SETC  ' '                                         00902200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00902300
&ZOPV(&ZOPN)          SETC  '4(8,1),=CL8''IFAUSAGE'''                   00902400
&ZOPD(&ZOPN)          SETC  '++ CL8 CONSTANT'                           00902500
.*-------------------------------------------------------------------   00902600
.***AI.L04 XPLISTLEN XL2                                                00902700
&ZOPN                 SETA  &ZOPN+1                                     00902800
&ZOPL(&ZOPN)          SETC  ' '                                         00902900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00903000
&ZOPV(&ZOPN)          SETC  '12(2,1),=AL2(&ZPLLEN)'                     00903100
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    00903200
.*-------------------------------------------------------------------   00903300
.***AI.L04B XVERSION XL1                                                00903400
                      AIF   (&XPLISTVER EQ 0).ZIMFVX                    00903500
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZIMFVY            00903600
.ZIMFVX               ANOP  ,                                           00903700
                      AIF   ('&PLISTVER' EQ '').ZIMFVZ                  00903800
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZIMFVZ            00903900
.ZIMFVY               ANOP  ,                                           00904000
&ZOPN                 SETA  &ZOPN+1                                     00904100
&ZOPL(&ZOPN)          SETC  ' '                                         00904200
&ZOPO(&ZOPN)          SETC  'MVI'                                       00904300
&ZOPV(&ZOPN)          SETC  '14(1),&XPLISTVER'                          00904400
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00904500
.ZIMFVZ               ANOP  ,                                           00904600
.*-------------------------------------------------------------------   00904700
.***AI.L07 XREQUEST AL1                                                 00904800
&ZW                   SETC  ''                                          00904900
.*-------------------------------------------------------------------   00905000
.***AI.L15 XREQUEST "REGISTER" AL1                                      00905100
         AIF   ('&XREQUEST' NE 'REGISTER').ZI6A                         00905200
&ZW                   SETC  '1'                                         00905300
.ZI6A                 ANOP  ,                                           00905400
.*-------------------------------------------------------------------   00905500
.***AI.L15 XREQUEST "DEREGISTER" AL1                                    00905600
         AIF   ('&XREQUEST' NE 'DEREGISTER').ZI7A                       00905700
&ZW                   SETC  '2'                                         00905800
.ZI7A                 ANOP  ,                                           00905900
.*-------------------------------------------------------------------   00906000
.***AI.L15 XREQUEST "FUNCTIONBEGIN" AL1                                 00906100
         AIF   ('&XREQUEST' NE 'FUNCTIONBEGIN').ZI8A                    00906200
&ZW                   SETC  '3'                                         00906300
.ZI8A                 ANOP  ,                                           00906400
.*-------------------------------------------------------------------   00906500
.***AI.L15 XREQUEST "FUNCTIONDATA" AL1                                  00906600
         AIF   ('&XREQUEST' NE 'FUNCTIONDATA').ZI9A                     00906700
&ZW                   SETC  '4'                                         00906800
.ZI9A                 ANOP  ,                                           00906900
.*-------------------------------------------------------------------   00907000
.***AI.L15 XREQUEST "FUNCTIONEND" AL1                                   00907100
         AIF   ('&XREQUEST' NE 'FUNCTIONEND').ZI10A                     00907200
&ZW                   SETC  '5'                                         00907300
.ZI10A                ANOP  ,                                           00907400
.*-------------------------------------------------------------------   00907500
.***AI.L15 XREQUEST "STATUS" AL1                                        00907600
         AIF   ('&XREQUEST' NE 'STATUS').ZI11A                          00907700
&ZW                   SETC  '6'                                         00907800
.ZI11A                ANOP  ,                                           00907900
.*-------------------------------------------------------------------   00908000
.***AI.L17 XREQUEST AL1                                                 00908100
                      AIF   ('&ZW' NE '0').ZI11C                        00908200
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI11B             00908300
.ZI11C                ANOP  ,                                           00908400
                      AIF   ('&ZW' EQ '').ZI11B                         00908500
.*                                                                      00908600
&ZOPN                 SETA  &ZOPN+1                                     00908700
&ZOPL(&ZOPN)          SETC  ' '                                         00908800
&ZOPO(&ZOPN)          SETC  'MVI'                                       00908900
&ZOPV(&ZOPN)          SETC  '15(1),&ZW'                                 00909000
&ZOPD(&ZOPN)          SETC  '++ &ZXREQUEST XREQUEST'                    00909100
.ZI11B                ANOP  ,                                           00909200
.*-------------------------------------------------------------------   00909300
.***AI.L25  XPRODOWNER CL16                                             00909400
                      AIF   ('&ZXPRODOWNER' EQ '').ZI12E                00909500
                      AIF   ('&ZXPRODOWNER' EQ 'OUTPUT').ZI12E          00909600
&ZCGPR                SETC  '&XPRODOWNER'                               00909700
.*                                                                      00909800
                      AIF   ('&XPRODOWNER'(1,1) NE '(').ZI12B           00909900
&ZCGPR   SETC  '0('.'&XPRODOWNER'(2,K'&XPRODOWNER-2).')'                00910000
.ZI12B                ANOP  ,                                           00910100
.*                                                                      00910200
&ZOPN                 SETA  &ZOPN+1                                     00910300
&ZOPL(&ZOPN)          SETC  ' '                                         00910400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00910500
&ZOPV(&ZOPN)          SETC  '16(16,1),&ZCGPR'                           00910600
&ZOPD(&ZOPN)          SETC  '++ &ZXPRODOWNER XPRODOWNER'                00910700
.*                                                                      00910800
.ZI12E                ANOP  ,                                           00910900
.*-------------------------------------------------------------------   00911000
.***AI.L25  XPRODNAME CL16                                              00911100
                      AIF   ('&ZXPRODNAME' EQ '').ZI13E                 00911200
                      AIF   ('&ZXPRODNAME' EQ 'OUTPUT').ZI13E           00911300
&ZCGPR                SETC  '&XPRODNAME'                                00911400
.*                                                                      00911500
                      AIF   ('&XPRODNAME'(1,1) NE '(').ZI13B            00911600
&ZCGPR   SETC  '0('.'&XPRODNAME'(2,K'&XPRODNAME-2).')'                  00911700
.ZI13B                ANOP  ,                                           00911800
.*                                                                      00911900
&ZOPN                 SETA  &ZOPN+1                                     00912000
&ZOPL(&ZOPN)          SETC  ' '                                         00912100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00912200
&ZOPV(&ZOPN)          SETC  '32(16,1),&ZCGPR'                           00912300
&ZOPD(&ZOPN)          SETC  '++ &ZXPRODNAME XPRODNAME'                  00912400
.*                                                                      00912500
.ZI13E                ANOP  ,                                           00912600
.*-------------------------------------------------------------------   00912700
.***AI.L25  XPRODVERS CL8                                               00912800
                      AIF   ('&ZXPRODVERS' EQ '').ZI14E                 00912900
                      AIF   ('&ZXPRODVERS' EQ 'OUTPUT').ZI14E           00913000
&ZCGPR                SETC  '&XPRODVERS'                                00913100
.*                                                                      00913200
                      AIF   ('&XPRODVERS'(1,1) NE '(').ZI14B            00913300
&ZCGPR   SETC  '0('.'&XPRODVERS'(2,K'&XPRODVERS-2).')'                  00913400
                      AGO   .ZI14D                                      00913500
.ZI14B                ANOP  ,                                           00913600
.*                                                                      00913700
                      AIF   ('&PRODVERS(1)' EQ '').ZI14I                00913800
&ZC                   SETC  'NONE'                                      00913900
                      AIF   ('&XPRODVERS' NE '&ZC').ZI14C               00914000
.ZI14I                ANOP  ,                                           00914100
&ZCGPR                SETC  '=CL8''&XPRODVERS'''                        00914200
.ZI14C                ANOP  ,                                           00914300
.*                                                                      00914400
.ZI14D                ANOP  ,                                           00914500
.*                                                                      00914600
&ZOPN                 SETA  &ZOPN+1                                     00914700
&ZOPL(&ZOPN)          SETC  ' '                                         00914800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00914900
&ZOPV(&ZOPN)          SETC  '48(8,1),&ZCGPR'                            00915000
&ZOPD(&ZOPN)          SETC  '++ &ZXPRODVERS XPRODVERS'                  00915100
.*                                                                      00915200
.ZI14E                ANOP  ,                                           00915300
.*-------------------------------------------------------------------   00915400
.***AI.L25  XPRODQUAL CL8                                               00915500
                      AIF   ('&ZXPRODQUAL' EQ '').ZI15E                 00915600
                      AIF   ('&ZXPRODQUAL' EQ 'OUTPUT').ZI15E           00915700
&ZCGPR                SETC  '&XPRODQUAL'                                00915800
.*                                                                      00915900
                      AIF   ('&XPRODQUAL'(1,1) NE '(').ZI15B            00916000
&ZCGPR   SETC  '0('.'&XPRODQUAL'(2,K'&XPRODQUAL-2).')'                  00916100
                      AGO   .ZI15D                                      00916200
.ZI15B                ANOP  ,                                           00916300
.*                                                                      00916400
                      AIF   ('&PRODQUAL(1)' EQ '').ZI15I                00916500
&ZC                   SETC  'NONE'                                      00916600
                      AIF   ('&XPRODQUAL' NE '&ZC').ZI15C               00916700
.ZI15I                ANOP  ,                                           00916800
&ZCGPR                SETC  '=CL8''&XPRODQUAL'''                        00916900
.ZI15C                ANOP  ,                                           00917000
.*                                                                      00917100
.ZI15D                ANOP  ,                                           00917200
.*                                                                      00917300
&ZOPN                 SETA  &ZOPN+1                                     00917400
&ZOPL(&ZOPN)          SETC  ' '                                         00917500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00917600
&ZOPV(&ZOPN)          SETC  '56(8,1),&ZCGPR'                            00917700
&ZOPD(&ZOPN)          SETC  '++ &ZXPRODQUAL XPRODQUAL'                  00917800
.*                                                                      00917900
.ZI15E                ANOP  ,                                           00918000
.*-------------------------------------------------------------------   00918100
.***AI.L25  XPRODID CL8                                                 00918200
                      AIF   ('&ZXPRODID' EQ '').ZI16E                   00918300
                      AIF   ('&ZXPRODID' EQ 'OUTPUT').ZI16E             00918400
&ZCGPR                SETC  '&XPRODID'                                  00918500
.*                                                                      00918600
                      AIF   ('&XPRODID'(1,1) NE '(').ZI16B              00918700
&ZCGPR   SETC  '0('.'&XPRODID'(2,K'&XPRODID-2).')'                      00918800
                      AGO   .ZI16D                                      00918900
.ZI16B                ANOP  ,                                           00919000
.*                                                                      00919100
                      AIF   ('&PRODID(1)' EQ '').ZI16I                  00919200
&ZC                   SETC  'NONE'                                      00919300
                      AIF   ('&XPRODID' NE '&ZC').ZI16C                 00919400
.ZI16I                ANOP  ,                                           00919500
&ZCGPR                SETC  '=CL8''&XPRODID'''                          00919600
.ZI16C                ANOP  ,                                           00919700
.*                                                                      00919800
.ZI16D                ANOP  ,                                           00919900
.*                                                                      00920000
&ZOPN                 SETA  &ZOPN+1                                     00920100
&ZOPL(&ZOPN)          SETC  ' '                                         00920200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00920300
&ZOPV(&ZOPN)          SETC  '64(8,1),&ZCGPR'                            00920400
&ZOPD(&ZOPN)          SETC  '++ &ZXPRODID XPRODID'                      00920500
.*                                                                      00920600
.ZI16E                ANOP  ,                                           00920700
.*-------------------------------------------------------------------   00920800
.***AI.L07 XDOMAIN AL1                                                  00920900
&ZW                   SETC  ''                                          00921000
.*-------------------------------------------------------------------   00921100
.***AI.L15 XDOMAIN "ADDRSP" AL1                                         00921200
         AIF   ('&XDOMAIN' NE 'ADDRSP').ZI18A                           00921300
&ZW                   SETC  '1'                                         00921400
.ZI18A                ANOP  ,                                           00921500
.*-------------------------------------------------------------------   00921600
.***AI.L15 XDOMAIN "TASK" AL1                                           00921700
         AIF   ('&XDOMAIN' NE 'TASK').ZI19A                             00921800
&ZW                   SETC  '2'                                         00921900
.ZI19A                ANOP  ,                                           00922000
.*-------------------------------------------------------------------   00922100
.***AI.L17 XDOMAIN AL1                                                  00922200
                      AIF   ('&ZW' NE '0').ZI19C                        00922300
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI19B             00922400
.ZI19C                ANOP  ,                                           00922500
                      AIF   ('&ZW' EQ '').ZI19B                         00922600
.*                                                                      00922700
&ZOPN                 SETA  &ZOPN+1                                     00922800
&ZOPL(&ZOPN)          SETC  ' '                                         00922900
&ZOPO(&ZOPN)          SETC  'MVI'                                       00923000
&ZOPV(&ZOPN)          SETC  '72(1),&ZW'                                 00923100
&ZOPD(&ZOPN)          SETC  '++ &ZXDOMAIN XDOMAIN'                      00923200
.ZI19B                ANOP  ,                                           00923300
.*-------------------------------------------------------------------   00923400
.***AI.L07 XSCOPE AL1                                                   00923500
&ZW                   SETC  ''                                          00923600
.*-------------------------------------------------------------------   00923700
.***AI.L15 XSCOPE "ALL" AL1                                             00923800
         AIF   ('&XSCOPE' NE 'ALL').ZI21A                               00923900
&ZW                   SETC  '1'                                         00924000
.ZI21A                ANOP  ,                                           00924100
.*-------------------------------------------------------------------   00924200
.***AI.L15 XSCOPE "FUNCTION" AL1                                        00924300
         AIF   ('&XSCOPE' NE 'FUNCTION').ZI22A                          00924400
&ZW                   SETC  '2'                                         00924500
.ZI22A                ANOP  ,                                           00924600
.*-------------------------------------------------------------------   00924700
.***AI.L17 XSCOPE AL1                                                   00924800
                      AIF   ('&ZW' NE '0').ZI22C                        00924900
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI22B             00925000
.ZI22C                ANOP  ,                                           00925100
                      AIF   ('&ZW' EQ '').ZI22B                         00925200
.*                                                                      00925300
&ZOPN                 SETA  &ZOPN+1                                     00925400
&ZOPL(&ZOPN)          SETC  ' '                                         00925500
&ZOPO(&ZOPN)          SETC  'MVI'                                       00925600
&ZOPV(&ZOPN)          SETC  '73(1),&ZW'                                 00925700
&ZOPD(&ZOPN)          SETC  '++ &ZXSCOPE XSCOPE'                        00925800
.ZI22B                ANOP  ,                                           00925900
.*-------------------------------------------------------------------   00926000
.***AI.L05 XFLAGS BL1                                                   00926100
&ZW                   SETC  ''                                          00926200
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00926300
&ZMS                  SETC  ''                                          00926400
&ZC                   SETC  ''                                          00926500
.*-------------------------------------------------------------------   00926600
.***AI.L08 XFLAGS "NO"                                                  00926700
.***      BL1'1XXXXXXX'                                                 00926800
         AIF   ('&XVALIDATE' NE 'NO').ZI25A                             00926900
&ZW                   SETC  '&ZW.1'                                     00927000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00927100
&ZMS                  SETC  '&ZMS.1'                                    00927200
                      AGO   .ZI25C                                      00927300
.*                                                                      00927400
.ZI25A                ANOP  ,                                           00927500
&ZW                   SETC  '&ZW.0'                                     00927600
         AIF   ('&ZXVALIDATE' EQ '').ZI25B                              00927700
&ZMS                  SETC  '&ZMS.0'                                    00927800
&ZC                   SETC  'YES'          SET BIT OFF FLAG             00927900
                      AGO   .ZI25C                                      00928000
.*                                                                      00928100
.ZI25B                ANOP  ,                                           00928200
&ZMS                  SETC  '&ZMS.1'                                    00928300
.ZI25C                ANOP  ,                                           00928400
.*-------------------------------------------------------------------   00928500
.***AI.L08 XFLAGS "YES"                                                 00928600
.***      BL1'X1XXXXXX'                                                 00928700
         AIF   ('&XFBFE' NE 'YES').ZI26A                                00928800
&ZW                   SETC  '&ZW.1000000'                               00928900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00929000
&ZMS                  SETC  '&ZMS.1111111'                              00929100
                      AGO   .ZI26C                                      00929200
.*                                                                      00929300
.ZI26A                ANOP  ,                                           00929400
&ZW                   SETC  '&ZW.0000000'                               00929500
         AIF   ('&ZXFBFE' EQ '').ZI26B                                  00929600
&ZMS                  SETC  '&ZMS.0111111'                              00929700
&ZC                   SETC  'YES'          SET BIT OFF FLAG             00929800
                      AGO   .ZI26C                                      00929900
.*                                                                      00930000
.ZI26B                ANOP  ,                                           00930100
&ZMS                  SETC  '&ZMS.1111111'                              00930200
.ZI26C                ANOP  ,                                           00930300
.*-------------------------------------------------------------------   00930400
.***AI.L11 XFLAGS BL1                                                   00930500
                      AIF   ('&XMFSCK' NE 'NOCHECK').ZI26D              00930600
                      AIF   ('&ZC' NE 'YES').ZI26D                      00930700
&ZOPN                 SETA  &ZOPN+1                                     00930800
&ZOPL(&ZOPN)          SETC  ' '                                         00930900
&ZOPO(&ZOPN)          SETC  'NI'                                        00931000
&ZOPV(&ZOPN)          SETC  '75(1),B''&ZMS'''                           00931100
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00931200
.ZI26D                ANOP  ,                                           00931300
                      AIF   ('&ZCLNG' NE 'YES').ZI26E  ALL ZERO BITS    00931400
&ZOPN                 SETA  &ZOPN+1                                     00931500
&ZOPL(&ZOPN)          SETC  ' '                                         00931600
&ZOPO(&ZOPN)          SETC  'OI'                                        00931700
&ZOPV(&ZOPN)          SETC  '75(1),B''&ZW'''                            00931800
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00931900
.ZI26E                ANOP  ,                                           00932000
.*-------------------------------------------------------------------   00932100
.***AI.L19 ADDR XPRTOKEN A                                              00932200
                      AIF   ('&ZXPRTOKEN' EQ '').ZI27H                  00932300
&ZCLNG                SETC  '&XPRTOKEN'                                 00932400
&ZCGPR                SETC  '14'                                        00932500
         AIF   ('&XPRTOKEN'(1,1) EQ '(').ZI27F  IN GPR                  00932600
.*                                                                      00932700
&ZOPN                 SETA  &ZOPN+1                                     00932800
&ZOPL(&ZOPN)          SETC  ' '                                         00932900
&ZOPO(&ZOPN)          SETC  'LA'                                        00933000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00933100
&ZOPD(&ZOPN)          SETC  '++ &ZXPRTOKEN XPRTOKEN'                    00933200
.*                                                                      00933300
                      AGO   .ZI27G                                      00933400
.*                                                                      00933500
.ZI27F                ANOP  ,                                           00933600
&ZCGPR   SETC  '&XPRTOKEN'(2,K'&XPRTOKEN-2)                             00933700
.*                                                                      00933800
.ZI27G                ANOP  ,                                           00933900
.*                                                                      00934000
&ZOPN                 SETA  &ZOPN+1                                     00934100
&ZOPL(&ZOPN)          SETC  ' '                                         00934200
&ZOPO(&ZOPN)          SETC  'ST'                                        00934300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,76(,1)'                             00934400
&ZOPD(&ZOPN)          SETC  '++ &ZXPRTOKEN XPRTOKEN'                    00934500
.*                                                                      00934600
.ZI27H                ANOP  ,                                           00934700
.*-------------------------------------------------------------------   00934800
.***AI.L19 ADDR XBEGTIME A                                              00934900
                      AIF   ('&ZXBEGTIME' EQ '').ZI28H                  00935000
&ZCLNG                SETC  '&XBEGTIME'                                 00935100
&ZCGPR                SETC  '14'                                        00935200
         AIF   ('&XBEGTIME'(1,1) EQ '(').ZI28F  IN GPR                  00935300
.*                                                                      00935400
&ZOPN                 SETA  &ZOPN+1                                     00935500
&ZOPL(&ZOPN)          SETC  ' '                                         00935600
&ZOPO(&ZOPN)          SETC  'LA'                                        00935700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00935800
&ZOPD(&ZOPN)          SETC  '++ &ZXBEGTIME XBEGTIME'                    00935900
.*                                                                      00936000
                      AGO   .ZI28G                                      00936100
.*                                                                      00936200
.ZI28F                ANOP  ,                                           00936300
&ZCGPR   SETC  '&XBEGTIME'(2,K'&XBEGTIME-2)                             00936400
.*                                                                      00936500
.ZI28G                ANOP  ,                                           00936600
.*                                                                      00936700
&ZOPN                 SETA  &ZOPN+1                                     00936800
&ZOPL(&ZOPN)          SETC  ' '                                         00936900
&ZOPO(&ZOPN)          SETC  'ST'                                        00937000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,80(,1)'                             00937100
&ZOPD(&ZOPN)          SETC  '++ &ZXBEGTIME XBEGTIME'                    00937200
.*                                                                      00937300
.ZI28H                ANOP  ,                                           00937400
.*-------------------------------------------------------------------   00937500
.***AI.L19 ADDR XDATA A                                                 00937600
                      AIF   ('&ZXDATA' EQ '').ZI29H                     00937700
&ZCLNG                SETC  '&XDATA'                                    00937800
&ZCGPR                SETC  '14'                                        00937900
         AIF   ('&XDATA'(1,1) EQ '(').ZI29F  IN GPR                     00938000
.*                                                                      00938100
&ZOPN                 SETA  &ZOPN+1                                     00938200
&ZOPL(&ZOPN)          SETC  ' '                                         00938300
&ZOPO(&ZOPN)          SETC  'LA'                                        00938400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00938500
&ZOPD(&ZOPN)          SETC  '++ &ZXDATA XDATA'                          00938600
.*                                                                      00938700
                      AGO   .ZI29G                                      00938800
.*                                                                      00938900
.ZI29F                ANOP  ,                                           00939000
&ZCGPR   SETC  '&XDATA'(2,K'&XDATA-2)                                   00939100
.*                                                                      00939200
.ZI29G                ANOP  ,                                           00939300
.*                                                                      00939400
&ZOPN                 SETA  &ZOPN+1                                     00939500
&ZOPL(&ZOPN)          SETC  ' '                                         00939600
&ZOPO(&ZOPN)          SETC  'ST'                                        00939700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,84(,1)'                             00939800
&ZOPD(&ZOPN)          SETC  '++ &ZXDATA XDATA'                          00939900
.*                                                                      00940000
.ZI29H                ANOP  ,                                           00940100
.*-------------------------------------------------------------------   00940200
.***AI.L07 XFORMAT AL1                                                  00940300
&ZW                   SETC  ''                                          00940400
.*-------------------------------------------------------------------   00940500
.***AI.L15 XFORMAT "CPUTIME" AL1                                        00940600
         AIF   ('&XFORMAT' NE 'CPUTIME').ZI31A                          00940700
&ZW                   SETC  '1'                                         00940800
.ZI31A                ANOP  ,                                           00940900
.*-------------------------------------------------------------------   00941000
.***AI.L15 XFORMAT "BINARY" AL1                                         00941100
         AIF   ('&XFORMAT' NE 'BINARY').ZI32A                           00941200
&ZW                   SETC  '2'                                         00941300
.ZI32A                ANOP  ,                                           00941400
.*-------------------------------------------------------------------   00941500
.***AI.L15 XFORMAT "FLOAT" AL1                                          00941600
         AIF   ('&XFORMAT' NE 'FLOAT').ZI33A                            00941700
&ZW                   SETC  '3'                                         00941800
.ZI33A                ANOP  ,                                           00941900
.*-------------------------------------------------------------------   00942000
.***AI.L17 XFORMAT AL1                                                  00942100
                      AIF   ('&ZW' NE '0').ZI33C                        00942200
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI33B             00942300
.ZI33C                ANOP  ,                                           00942400
                      AIF   ('&ZW' EQ '').ZI33B                         00942500
.*                                                                      00942600
&ZOPN                 SETA  &ZOPN+1                                     00942700
&ZOPL(&ZOPN)          SETC  ' '                                         00942800
&ZOPO(&ZOPN)          SETC  'MVI'                                       00942900
&ZOPV(&ZOPN)          SETC  '88(1),&ZW'                                 00943000
&ZOPD(&ZOPN)          SETC  '++ &ZXFORMAT XFORMAT'                      00943100
.ZI33B                ANOP  ,                                           00943200
.*-------------------------------------------------------------------   00943300
.***AI.L07 XUNAUTHSERV AL1                                              00943400
&ZW                   SETC  ''                                          00943500
.*-------------------------------------------------------------------   00943600
.***AI.L15 XUNAUTHSERV "BASE" AL1                                       00943700
         AIF   ('&XUNAUTHSERV' NE 'BASE').ZI35A                         00943800
&ZW                   SETC  '1'                                         00943900
.ZI35A                ANOP  ,                                           00944000
.*-------------------------------------------------------------------   00944100
.***AI.L15 XUNAUTHSERV "LEVEL1" AL1                                     00944200
         AIF   ('&XUNAUTHSERV' NE 'LEVEL1').ZI36A                       00944300
&ZW                   SETC  '2'                                         00944400
.ZI36A                ANOP  ,                                           00944500
.*-------------------------------------------------------------------   00944600
.***AI.L17 XUNAUTHSERV AL1                                              00944700
                      AIF   ('&ZW' NE '0').ZI36C                        00944800
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI36B             00944900
.ZI36C                ANOP  ,                                           00945000
                      AIF   ('&ZW' EQ '').ZI36B                         00945100
.*                                                                      00945200
&ZOPN                 SETA  &ZOPN+1                                     00945300
&ZOPL(&ZOPN)          SETC  ' '                                         00945400
&ZOPO(&ZOPN)          SETC  'MVI'                                       00945500
&ZOPV(&ZOPN)          SETC  '89(1),&ZW'                                 00945600
&ZOPD(&ZOPN)          SETC  '++ &ZXUNAUTHSERV XUNAUTHSERV'              00945700
.ZI36B                ANOP  ,                                           00945800
.*-------------------------------------------------------------------   00945900
.***AI.L19 ADDR XCURRENTDATA A                                          00946000
                      AIF   ('&ZXCURRENTDATA' EQ '').ZI38H              00946100
&ZCLNG                SETC  '&XCURRENTDATA'                             00946200
&ZCGPR                SETC  '14'                                        00946300
         AIF   ('&XCURRENTDATA'(1,1) EQ '(').ZI38F  IN GPR              00946400
.*                                                                      00946500
&ZOPN                 SETA  &ZOPN+1                                     00946600
&ZOPL(&ZOPN)          SETC  ' '                                         00946700
&ZOPO(&ZOPN)          SETC  'LA'                                        00946800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00946900
&ZOPD(&ZOPN)          SETC  '++ &ZXCURRENTDATA XCURRENTDATA'            00947000
.*                                                                      00947100
                      AGO   .ZI38G                                      00947200
.*                                                                      00947300
.ZI38F                ANOP  ,                                           00947400
&ZCGPR   SETC  '&XCURRENTDATA'(2,K'&XCURRENTDATA-2)                     00947500
.*                                                                      00947600
.ZI38G                ANOP  ,                                           00947700
.*                                                                      00947800
&ZOPN                 SETA  &ZOPN+1                                     00947900
&ZOPL(&ZOPN)          SETC  ' '                                         00948000
&ZOPO(&ZOPN)          SETC  'ST'                                        00948100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,92(,1)'                             00948200
&ZOPD(&ZOPN)          SETC  '++ &ZXCURRENTDATA XCURRENTDATA'            00948300
.*                                                                      00948400
.ZI38H                ANOP  ,                                           00948500
.*-------------------------------------------------------------------   00948600
.***AI.L19 ADDR XENDDATA A                                              00948700
                      AIF   ('&ZXENDDATA' EQ '').ZI39H                  00948800
&ZCLNG                SETC  '&XENDDATA'                                 00948900
&ZCGPR                SETC  '14'                                        00949000
         AIF   ('&XENDDATA'(1,1) EQ '(').ZI39F  IN GPR                  00949100
.*                                                                      00949200
&ZOPN                 SETA  &ZOPN+1                                     00949300
&ZOPL(&ZOPN)          SETC  ' '                                         00949400
&ZOPO(&ZOPN)          SETC  'LA'                                        00949500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00949600
&ZOPD(&ZOPN)          SETC  '++ &ZXENDDATA XENDDATA'                    00949700
.*                                                                      00949800
                      AGO   .ZI39G                                      00949900
.*                                                                      00950000
.ZI39F                ANOP  ,                                           00950100
&ZCGPR   SETC  '&XENDDATA'(2,K'&XENDDATA-2)                             00950200
.*                                                                      00950300
.ZI39G                ANOP  ,                                           00950400
.*                                                                      00950500
&ZOPN                 SETA  &ZOPN+1                                     00950600
&ZOPL(&ZOPN)          SETC  ' '                                         00950700
&ZOPO(&ZOPN)          SETC  'ST'                                        00950800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,96(,1)'                             00950900
&ZOPD(&ZOPN)          SETC  '++ &ZXENDDATA XENDDATA'                    00951000
.*                                                                      00951100
.ZI39H                ANOP  ,                                           00951200
.*-------------------------------------------------------------------   00951300
.***AI.L19 ADDR XENDTIME A                                              00951400
                      AIF   ('&ZXENDTIME' EQ '').ZI40H                  00951500
&ZCLNG                SETC  '&XENDTIME'                                 00951600
&ZCGPR                SETC  '14'                                        00951700
         AIF   ('&XENDTIME'(1,1) EQ '(').ZI40F  IN GPR                  00951800
.*                                                                      00951900
&ZOPN                 SETA  &ZOPN+1                                     00952000
&ZOPL(&ZOPN)          SETC  ' '                                         00952100
&ZOPO(&ZOPN)          SETC  'LA'                                        00952200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00952300
&ZOPD(&ZOPN)          SETC  '++ &ZXENDTIME XENDTIME'                    00952400
.*                                                                      00952500
                      AGO   .ZI40G                                      00952600
.*                                                                      00952700
.ZI40F                ANOP  ,                                           00952800
&ZCGPR   SETC  '&XENDTIME'(2,K'&XENDTIME-2)                             00952900
.*                                                                      00953000
.ZI40G                ANOP  ,                                           00953100
.*                                                                      00953200
&ZOPN                 SETA  &ZOPN+1                                     00953300
&ZOPL(&ZOPN)          SETC  ' '                                         00953400
&ZOPO(&ZOPN)          SETC  'ST'                                        00953500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,100(,1)'                            00953600
&ZOPD(&ZOPN)          SETC  '++ &ZXENDTIME XENDTIME'                    00953700
.*                                                                      00953800
.ZI40H                ANOP  ,                                           00953900
.*-------------------------------------------------------------------   00954000
.***AI.LVER01                                                           00954100
                      AIF  (&XPLISTVER LT 2).ZI41Z                      00954200
.*-------------------------------------------------------------------   00954300
.***AI.L19 ADDR64 XPRTOKEN64 AD                                         00954400
                      AIF   ('&ZXPRTOKEN64' EQ '').ZI41H                00954500
&ZCLNG                SETC  '&XPRTOKEN64'                               00954600
&ZCGPR                SETC  '14'                                        00954700
         AIF   ('&XPRTOKEN64'(1,1) EQ '(').ZI41F  IN GPR                00954800
.*                                                                      00954900
&ZOPN                 SETA  &ZOPN+1                                     00955000
&ZOPL(&ZOPN)          SETC  ' '                                         00955100
&ZOPO(&ZOPN)          SETC  'LA'                                        00955200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00955300
&ZOPD(&ZOPN)          SETC  '++ &ZXPRTOKEN64 XPRTOKEN64'                00955400
.*                                                                      00955500
                      AGO   .ZI41G                                      00955600
.*                                                                      00955700
.ZI41F                ANOP  ,                                           00955800
&ZCGPR   SETC  '&XPRTOKEN64'(2,K'&XPRTOKEN64-2)                         00955900
.*                                                                      00956000
.ZI41G                ANOP  ,                                           00956100
                      AIF   ('&SYSAM64' EQ 'YES').ZI41H1A               00956200
                      AIF   ('&XMFSCK' NE 'NOCHECK').ZI41C2             00956300
.*                                                                      00956400
&ZOPN                 SETA  &ZOPN+1                                     00956500
&ZOPL(&ZOPN)          SETC  ' '                                         00956600
&ZOPO(&ZOPN)          SETC  'XC'                                        00956700
&ZOPV(&ZOPN)          SETC  '104(4,1),104(1)'                           00956800
.ZI41C2               ANOP  ,                                           00956900
.*                                                                      00957000
&ZOPN                 SETA  &ZOPN+1                                     00957100
&ZOPL(&ZOPN)          SETC  ' '                                         00957200
&ZOPO(&ZOPN)          SETC  'ST'                                        00957300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+104(,1)'                          00957400
&ZOPD(&ZOPN)          SETC  '++ &ZXPRTOKEN64 XPRTOKEN64'                00957500
.*                                                                      00957600
                      AGO   .ZI41H                                      00957700
.ZI41H1A              ANOP  ,                                           00957800
.*                                                                      00957900
&ZOPN                 SETA  &ZOPN+1                                     00958000
&ZOPL(&ZOPN)          SETC  ' '                                         00958100
&ZOPO(&ZOPN)          SETC  'STG'                                       00958200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,104(,1)'                            00958300
&ZOPD(&ZOPN)          SETC  '++ &ZXPRTOKEN64 XPRTOKEN64'                00958400
.*                                                                      00958500
.ZI41H                ANOP  ,                                           00958600
.*-------------------------------------------------------------------   00958700
.***AI.LVER02                                                           00958800
.ZI41Z                ANOP  ,                                           00958900
.*-------------------------------------------------------------------   00959000
.***AI.LVER01                                                           00959100
                      AIF  (&XPLISTVER LT 2).ZI42Z                      00959200
.*-------------------------------------------------------------------   00959300
.***AI.L19 ADDR64 XBEGTIME64 AD                                         00959400
                      AIF   ('&ZXBEGTIME64' EQ '').ZI42H                00959500
&ZCLNG                SETC  '&XBEGTIME64'                               00959600
&ZCGPR                SETC  '14'                                        00959700
         AIF   ('&XBEGTIME64'(1,1) EQ '(').ZI42F  IN GPR                00959800
.*                                                                      00959900
&ZOPN                 SETA  &ZOPN+1                                     00960000
&ZOPL(&ZOPN)          SETC  ' '                                         00960100
&ZOPO(&ZOPN)          SETC  'LA'                                        00960200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00960300
&ZOPD(&ZOPN)          SETC  '++ &ZXBEGTIME64 XBEGTIME64'                00960400
.*                                                                      00960500
                      AGO   .ZI42G                                      00960600
.*                                                                      00960700
.ZI42F                ANOP  ,                                           00960800
&ZCGPR   SETC  '&XBEGTIME64'(2,K'&XBEGTIME64-2)                         00960900
.*                                                                      00961000
.ZI42G                ANOP  ,                                           00961100
                      AIF   ('&SYSAM64' EQ 'YES').ZI42H1A               00961200
                      AIF   ('&XMFSCK' NE 'NOCHECK').ZI42C2             00961300
.*                                                                      00961400
&ZOPN                 SETA  &ZOPN+1                                     00961500
&ZOPL(&ZOPN)          SETC  ' '                                         00961600
&ZOPO(&ZOPN)          SETC  'XC'                                        00961700
&ZOPV(&ZOPN)          SETC  '112(4,1),112(1)'                           00961800
.ZI42C2               ANOP  ,                                           00961900
.*                                                                      00962000
&ZOPN                 SETA  &ZOPN+1                                     00962100
&ZOPL(&ZOPN)          SETC  ' '                                         00962200
&ZOPO(&ZOPN)          SETC  'ST'                                        00962300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+112(,1)'                          00962400
&ZOPD(&ZOPN)          SETC  '++ &ZXBEGTIME64 XBEGTIME64'                00962500
.*                                                                      00962600
                      AGO   .ZI42H                                      00962700
.ZI42H1A              ANOP  ,                                           00962800
.*                                                                      00962900
&ZOPN                 SETA  &ZOPN+1                                     00963000
&ZOPL(&ZOPN)          SETC  ' '                                         00963100
&ZOPO(&ZOPN)          SETC  'STG'                                       00963200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,112(,1)'                            00963300
&ZOPD(&ZOPN)          SETC  '++ &ZXBEGTIME64 XBEGTIME64'                00963400
.*                                                                      00963500
.ZI42H                ANOP  ,                                           00963600
.*-------------------------------------------------------------------   00963700
.***AI.LVER02                                                           00963800
.ZI42Z                ANOP  ,                                           00963900
.*-------------------------------------------------------------------   00964000
.***AI.LVER01                                                           00964100
                      AIF  (&XPLISTVER LT 2).ZI43Z                      00964200
.*-------------------------------------------------------------------   00964300
.***AI.L19 ADDR64 XDATA64 AD                                            00964400
                      AIF   ('&ZXDATA64' EQ '').ZI43H                   00964500
&ZCLNG                SETC  '&XDATA64'                                  00964600
&ZCGPR                SETC  '14'                                        00964700
         AIF   ('&XDATA64'(1,1) EQ '(').ZI43F  IN GPR                   00964800
.*                                                                      00964900
&ZOPN                 SETA  &ZOPN+1                                     00965000
&ZOPL(&ZOPN)          SETC  ' '                                         00965100
&ZOPO(&ZOPN)          SETC  'LA'                                        00965200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00965300
&ZOPD(&ZOPN)          SETC  '++ &ZXDATA64 XDATA64'                      00965400
.*                                                                      00965500
                      AGO   .ZI43G                                      00965600
.*                                                                      00965700
.ZI43F                ANOP  ,                                           00965800
&ZCGPR   SETC  '&XDATA64'(2,K'&XDATA64-2)                               00965900
.*                                                                      00966000
.ZI43G                ANOP  ,                                           00966100
                      AIF   ('&SYSAM64' EQ 'YES').ZI43H1A               00966200
                      AIF   ('&XMFSCK' NE 'NOCHECK').ZI43C2             00966300
.*                                                                      00966400
&ZOPN                 SETA  &ZOPN+1                                     00966500
&ZOPL(&ZOPN)          SETC  ' '                                         00966600
&ZOPO(&ZOPN)          SETC  'XC'                                        00966700
&ZOPV(&ZOPN)          SETC  '120(4,1),120(1)'                           00966800
.ZI43C2               ANOP  ,                                           00966900
.*                                                                      00967000
&ZOPN                 SETA  &ZOPN+1                                     00967100
&ZOPL(&ZOPN)          SETC  ' '                                         00967200
&ZOPO(&ZOPN)          SETC  'ST'                                        00967300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+120(,1)'                          00967400
&ZOPD(&ZOPN)          SETC  '++ &ZXDATA64 XDATA64'                      00967500
.*                                                                      00967600
                      AGO   .ZI43H                                      00967700
.ZI43H1A              ANOP  ,                                           00967800
.*                                                                      00967900
&ZOPN                 SETA  &ZOPN+1                                     00968000
&ZOPL(&ZOPN)          SETC  ' '                                         00968100
&ZOPO(&ZOPN)          SETC  'STG'                                       00968200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,120(,1)'                            00968300
&ZOPD(&ZOPN)          SETC  '++ &ZXDATA64 XDATA64'                      00968400
.*                                                                      00968500
.ZI43H                ANOP  ,                                           00968600
.*-------------------------------------------------------------------   00968700
.***AI.LVER02                                                           00968800
.ZI43Z                ANOP  ,                                           00968900
.*-------------------------------------------------------------------   00969000
.***AI.LVER01                                                           00969100
                      AIF  (&XPLISTVER LT 2).ZI44Z                      00969200
.*-------------------------------------------------------------------   00969300
.***AI.L19 ADDR64 XCURRENTDATA64 AD                                     00969400
                      AIF   ('&ZXCURRENTDATA64' EQ '').ZI44H            00969500
&ZCLNG                SETC  '&XCURRENTDATA64'                           00969600
&ZCGPR                SETC  '14'                                        00969700
         AIF   ('&XCURRENTDATA64'(1,1) EQ '(').ZI44F  IN GPR            00969800
.*                                                                      00969900
&ZOPN                 SETA  &ZOPN+1                                     00970000
&ZOPL(&ZOPN)          SETC  ' '                                         00970100
&ZOPO(&ZOPN)          SETC  'LA'                                        00970200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00970300
&ZOPD(&ZOPN)          SETC  '++ &ZXCURRENTDATA64 XCURRENTDATA64'        00970400
.*                                                                      00970500
                      AGO   .ZI44G                                      00970600
.*                                                                      00970700
.ZI44F                ANOP  ,                                           00970800
&ZCGPR   SETC  '&XCURRENTDATA64'(2,K'&XCURRENTDATA64-2)                 00970900
.*                                                                      00971000
.ZI44G                ANOP  ,                                           00971100
                      AIF   ('&SYSAM64' EQ 'YES').ZI44H1A               00971200
                      AIF   ('&XMFSCK' NE 'NOCHECK').ZI44C2             00971300
.*                                                                      00971400
&ZOPN                 SETA  &ZOPN+1                                     00971500
&ZOPL(&ZOPN)          SETC  ' '                                         00971600
&ZOPO(&ZOPN)          SETC  'XC'                                        00971700
&ZOPV(&ZOPN)          SETC  '128(4,1),128(1)'                           00971800
.ZI44C2               ANOP  ,                                           00971900
.*                                                                      00972000
&ZOPN                 SETA  &ZOPN+1                                     00972100
&ZOPL(&ZOPN)          SETC  ' '                                         00972200
&ZOPO(&ZOPN)          SETC  'ST'                                        00972300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+128(,1)'                          00972400
&ZOPD(&ZOPN)          SETC  '++ &ZXCURRENTDATA64 XCURRENTDATA64'        00972500
.*                                                                      00972600
                      AGO   .ZI44H                                      00972700
.ZI44H1A              ANOP  ,                                           00972800
.*                                                                      00972900
&ZOPN                 SETA  &ZOPN+1                                     00973000
&ZOPL(&ZOPN)          SETC  ' '                                         00973100
&ZOPO(&ZOPN)          SETC  'STG'                                       00973200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,128(,1)'                            00973300
&ZOPD(&ZOPN)          SETC  '++ &ZXCURRENTDATA64 XCURRENTDATA64'        00973400
.*                                                                      00973500
.ZI44H                ANOP  ,                                           00973600
.*-------------------------------------------------------------------   00973700
.***AI.LVER02                                                           00973800
.ZI44Z                ANOP  ,                                           00973900
.*-------------------------------------------------------------------   00974000
.***AI.LVER01                                                           00974100
                      AIF  (&XPLISTVER LT 2).ZI45Z                      00974200
.*-------------------------------------------------------------------   00974300
.***AI.L19 ADDR64 XENDDATA64 AD                                         00974400
                      AIF   ('&ZXENDDATA64' EQ '').ZI45H                00974500
&ZCLNG                SETC  '&XENDDATA64'                               00974600
&ZCGPR                SETC  '14'                                        00974700
         AIF   ('&XENDDATA64'(1,1) EQ '(').ZI45F  IN GPR                00974800
.*                                                                      00974900
&ZOPN                 SETA  &ZOPN+1                                     00975000
&ZOPL(&ZOPN)          SETC  ' '                                         00975100
&ZOPO(&ZOPN)          SETC  'LA'                                        00975200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00975300
&ZOPD(&ZOPN)          SETC  '++ &ZXENDDATA64 XENDDATA64'                00975400
.*                                                                      00975500
                      AGO   .ZI45G                                      00975600
.*                                                                      00975700
.ZI45F                ANOP  ,                                           00975800
&ZCGPR   SETC  '&XENDDATA64'(2,K'&XENDDATA64-2)                         00975900
.*                                                                      00976000
.ZI45G                ANOP  ,                                           00976100
                      AIF   ('&SYSAM64' EQ 'YES').ZI45H1A               00976200
                      AIF   ('&XMFSCK' NE 'NOCHECK').ZI45C2             00976300
.*                                                                      00976400
&ZOPN                 SETA  &ZOPN+1                                     00976500
&ZOPL(&ZOPN)          SETC  ' '                                         00976600
&ZOPO(&ZOPN)          SETC  'XC'                                        00976700
&ZOPV(&ZOPN)          SETC  '136(4,1),136(1)'                           00976800
.ZI45C2               ANOP  ,                                           00976900
.*                                                                      00977000
&ZOPN                 SETA  &ZOPN+1                                     00977100
&ZOPL(&ZOPN)          SETC  ' '                                         00977200
&ZOPO(&ZOPN)          SETC  'ST'                                        00977300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+136(,1)'                          00977400
&ZOPD(&ZOPN)          SETC  '++ &ZXENDDATA64 XENDDATA64'                00977500
.*                                                                      00977600
                      AGO   .ZI45H                                      00977700
.ZI45H1A              ANOP  ,                                           00977800
.*                                                                      00977900
&ZOPN                 SETA  &ZOPN+1                                     00978000
&ZOPL(&ZOPN)          SETC  ' '                                         00978100
&ZOPO(&ZOPN)          SETC  'STG'                                       00978200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,136(,1)'                            00978300
&ZOPD(&ZOPN)          SETC  '++ &ZXENDDATA64 XENDDATA64'                00978400
.*                                                                      00978500
.ZI45H                ANOP  ,                                           00978600
.*-------------------------------------------------------------------   00978700
.***AI.LVER02                                                           00978800
.ZI45Z                ANOP  ,                                           00978900
.*-------------------------------------------------------------------   00979000
.***AI.LVER01                                                           00979100
                      AIF  (&XPLISTVER LT 2).ZI46Z                      00979200
.*-------------------------------------------------------------------   00979300
.***AI.L19 ADDR64 XENDTIME64 AD                                         00979400
                      AIF   ('&ZXENDTIME64' EQ '').ZI46H                00979500
&ZCLNG                SETC  '&XENDTIME64'                               00979600
&ZCGPR                SETC  '14'                                        00979700
         AIF   ('&XENDTIME64'(1,1) EQ '(').ZI46F  IN GPR                00979800
.*                                                                      00979900
&ZOPN                 SETA  &ZOPN+1                                     00980000
&ZOPL(&ZOPN)          SETC  ' '                                         00980100
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00980200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00980300
&ZOPD(&ZOPN)          SETC  '++ &ZXENDTIME64 XENDTIME64'                00980400
.*                                                                      00980500
                      AGO   .ZI46G                                      00980600
.*                                                                      00980700
.ZI46F                ANOP  ,                                           00980800
&ZCGPR   SETC  '&XENDTIME64'(2,K'&XENDTIME64-2)                         00980900
.*                                                                      00981000
.ZI46G                ANOP  ,                                           00981100
                      AIF   ('&SYSAM64' EQ 'YES').ZI46H1A               00981200
                      AIF   ('&XMFSCK' NE 'NOCHECK').ZI46C2             00981300
.*                                                                      00981400
&ZOPN                 SETA  &ZOPN+1                                     00981500
&ZOPL(&ZOPN)          SETC  ' '                                         00981600
&ZOPO(&ZOPN)          SETC  'XC'                                        00981700
&ZOPV(&ZOPN)          SETC  '144(4,1),144(1)'                           00981800
.ZI46C2               ANOP  ,                                           00981900
.*                                                                      00982000
&ZOPN                 SETA  &ZOPN+1                                     00982100
&ZOPL(&ZOPN)          SETC  ' '                                         00982200
&ZOPO(&ZOPN)          SETC  'ST'                                        00982300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+144(,1)'                          00982400
&ZOPD(&ZOPN)          SETC  '++ &ZXENDTIME64 XENDTIME64'                00982500
.*                                                                      00982600
                      AGO   .ZI46H                                      00982700
.ZI46H1A              ANOP  ,                                           00982800
.*                                                                      00982900
&ZOPN                 SETA  &ZOPN+1                                     00983000
&ZOPL(&ZOPN)          SETC  ' '                                         00983100
&ZOPO(&ZOPN)          SETC  'STG'                                       00983200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,144(,1)'                            00983300
&ZOPD(&ZOPN)          SETC  '++ &ZXENDTIME64 XENDTIME64'                00983400
.*                                                                      00983500
.ZI46H                ANOP  ,                                           00983600
.*-------------------------------------------------------------------   00983700
.***AI.LVER02                                                           00983800
.ZI46Z                ANOP  ,                                           00983900
.*-------------------------------------------------------------------   00984000
&ZOPN1                SETA &ZOPN                                        00984100
.*-------------------------------------------------------------------   00984200
.***AI.C00 MF=M CHECK TO BYPASS INVOCATION                              00984300
                      AIF   ('&XMF' EQ 'M').ZMFLX  DONE IF MF=M         00984400
.*******************************************************************    00984500
.***  PROCESS IFAUSAGE OUTPUT PARAMETERS                                00984600
.*******************************************************************    00984700
                      ACTR  10000                                       00984800
.*******************************************************************    00984900
.***AO.X02  RETURN CODE PROCESSING                                      00985000
.*******************************************************************    00985100
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00985200
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00985300
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00985400
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00985500
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00985600
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00985700
&ZOPN                 SETA  &ZOPN+1                                     00985800
&ZOPL(&ZOPN)          SETC  ' '                                         00985900
&ZOPO(&ZOPN)          SETC  'ST'                                        00986000
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00986100
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00986200
                      AGO   .ZMRETX                                     00986300
.*                                                                      00986400
.ZMRET2               ANOP  ,                                           00986500
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00986600
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00986700
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00986800
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00986900
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00987000
&ZOPN                 SETA  &ZOPN+1                                     00987100
&ZOPL(&ZOPN)          SETC  ' '                                         00987200
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00987300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00987400
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00987500
.ZMRETX               ANOP  ,                                           00987600
.*******************************************************************    00987700
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00987800
.*******************************************************************    00987900
.ZMFLX                ANOP  ,              MF=L PROCESSING              00988000
.*******************************************************************    00988100
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00988200
.*******************************************************************    00988300
                      ACTR  10000                                       00988400
.*                                                                      00988500
                      LCLA  &ZLC           COLUMN POSITION              00988600
                      LCLA  &ZOPX          LIST TABLE INDEX             00988700
                      LCLC  &ZLL           LABEL                        00988800
                      LCLC  &ZLOP          OPERATION                    00988900
                      LCLC  &ZLV           VALUE                        00989000
                      LCLC  &ZLD           DESCRIPTION                  00989100
.*                                                                      00989200
&ZOPX                 SETA  1                                           00989300
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00989400
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00989500
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00989600
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00989700
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00989800
                      AIF   (K'&ZLD LE 0).ZL5                           00989900
&ZLC                  SETA  35             COMMENT COLUMN               00990000
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00990100
&ZLC                  SETA  33             COMMMENT COLUMN              00990200
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00990300
&ZLV                  SETC  '&ZLV'.' '                                  00990400
                      AGO   .ZL3                                        00990500
.*                                                                      00990600
.ZL4                  ANOP  ,                                           00990700
&ZLV                  SETC  '&ZLV'.' '                                  00990800
.ZL5                  ANOP  ,                                           00990900
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00991000
.*                                                                      00991100
&ZLL     &ZLOP &ZLV                                                     00991200
.*                                                                      00991300
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00991400
                      AGO   .ZL2           CONTINUE LOOPING             00991500
.*                                                                      00991600
.ZLX                  ANOP  ,                                           00991700
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00991800
                      AIF   ('&XMF' EQ 'M').ZLINKX  MF=M                00991900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00992000
.* Insert ASM Linkage Code Here........                                 00992100
*                                                                       00992200
         AIF   (&ZMACRET NE 0).NOLINK - skip link if earlier fail  @03A 00992300
&A       SETA  &SYSNDX               - Get Index - Label Suffix    @01A 00992400
&ESVC    SETA  25                    - Deflt: 31bit ext SVC #      @03A 00992500
&RtnOff  SETA  404                   - Deflt: 31bit EP smca offset @03A 00992600
&ZMAC_LTGR SETC 'LTR'                - Deflt: 31bit LTR            @03A 00992700
         AIF   ('&SYSAM64' NE 'YES').NoError Skip AM64 stuff @03A       00992800
&ESVC    SETA  55                    - 64bit ext SVC #             @03A 00992900
&RtnOff  SETA  500                   - 64bit EP smca offset        @03A 00993000
&ZMAC_LTGR SETC 'LTGR'               - 64bit LTR instr             @03A 00993100
.NoError ANOP                        - Valid AMODE 64 guy, cont.   @03A 00993200
         &ZMAC_LLGT 15,16(0,0)       - GET CVT Address             @03A 00993300
         &ZMAC_LLGT 15,196(15,0)     - GET SMCA ADDRESS            @03A 00993400
         &ZMAC_LTGR 15,15            - SMCA Pointer 0 ??           @03A 00993500
         JZ    SMF1&A                - Yes - Signal Error          @P2C 00993600
         TM    0(15),X'04'           - Data Collection Active ??   @03A 00993700
         JNO   SMF1&A                - No - Signal Error           @03A 00993800
         AIF   ('&XLINKAGE' NE 'BRANCH').SVCCL64  - Linkage BR?    @03A 00993900
.BRCAL64 ANOP                        - Yes - Generate BASR         @03A 00994000
         &ZMAC_LLGT 15,&RtnOff.(15)  - Get Routine Address         @03A 00994100
         BASR  14,15                 - Branch to Routine           @03A 00994200
         AGO   .CONT                                                    00994300
.SVCCL64 ANOP                        - Generate SVC Linkage        @03A 00994400
         LA    15,&ESVC              - Set AM64 Usage Ext SVC #    @03A 00994500
         SVC   109                   - Issue SVC                   @03A 00994600
.CONT    ANOP                        - Continue After macro call   @01A 00994700
         B     SMF2&A                - Return to invoker           @01A 00994800
SMF1&A   EQU   *                     - Macro-detected Error        @01A 00994900
         LA    15,16                 - SMF or Usage Not Active     @01A 00995000
SMF2&A   EQU   *                     - Service Return Point        @01A 00995100
.NOLINK  ANOP  ,                                                   @03A 00995200
*                                                                       00995300
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00995400
.ZLINKX               ANOP  ,                                           00995500
.*******************************************************************    00995600
.***AP.X01  FORMAT GENERATED CODE                                       00995700
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00995800
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00995900
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00996000
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00996100
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00996200
                      AIF   (K'&ZLD LE 0).ZL51                          00996300
&ZLC                  SETA  35             COMMENT COLUMN               00996400
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00996500
&ZLC                  SETA  33             COMMENT COLUMN               00996600
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00996700
&ZLV                  SETC  '&ZLV'.' '                                  00996800
                      AGO   .ZL31                                       00996900
.*                                                                      00997000
.ZL41                 ANOP  ,                                           00997100
&ZLV                  SETC  '&ZLV'.' '                                  00997200
.ZL51                 ANOP  ,                                           00997300
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00997400
.*                                                                      00997500
&ZLL     &ZLOP &ZLV                                                     00997600
.*                                                                      00997700
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00997800
                      AGO   .ZL21          CONTINUE LOOPING             00997900
.*                                                                      00998000
.ZLX1                 ANOP  ,                                           00998100
.*******************************************************************    00998200
.***AP.X02  END OF IFAUSAGE MACRO                                       00998300
&ZIFAUSAGE            SETC  'YES'          SET IFAUSAGE USED            00998400
         POP   PRINT                                                    00998500
*                                            IFAUSAGE-2                 00998600
         SPACE 1                                                        00998700
.ZLX2                 ANOP  ,                                           00998800
         MEND                                                           00998900
**********************************************************************/ 00999000
*/**** START OF SPECIFICATIONS **************************************** 00999100
*                                                                     * 00999200
*                                                                     * 00999300
*01* MACRO NAME:  IFAUSAGE                              -08/06/19-<2> * 00999400
*                                                                     * 00999500
*                                                                     * 00999600
*01* DESCRIPTIVE NAME:  SMF Usage Data Collection Service             * 00999700
*                                                                     * 00999800
*01* PROPRIETARY STATEMENT:                                           * 00999900
*                                                                     * 01000000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 01000100
*     5650-ZOS COPYRIGHT IBM CORP. 1989, 2019                         * 01000200
*                                                                     * 01000300
* STATUS= HBB77C0                                                     * 01000400
*                                                                     * 01000500
*                                                                     * 01000600
*                                                                     * 01000700
*01* FUNCTION:                                                        * 01000800
*       See the IFAUSAGE macro prologue for details.                  * 01000900
*                                                                     * 01001000
*01* INPUT:                                                           * 01001100
*                                                                     * 01001200
*            ?IFAUSAGE   Ð REQUEST(REGISTER)                          * 01001300
*                        !     PRODOWNER(xprodowner)                  * 01001400
*                        !     PRODNAME(xprodname)                    * 01001500
*                        !    ÝPRODVERS(»xprodvers!Noneº)¨            * 01001600
*                        !    ÝPRODQUAL(»xprodqual!Noneº)¨            * 01001700
*                        !    ÝPRODID(»xprodid!Noneº)¨                * 01001800
*                        !   ÐÝDOMAIN(ADDRSP)¨                        * 01001900
*                        !   ¿ÝDOMAIN(TASK)                           * 01002000
*                        !        ÝSCOPE(»ALL!FUNCTIONº)¨¨            * 01002100
*                        !   ÐÝPRTOKEN(Ýxprtoken¨)                    * 01002200
*                        !   ¿ PRTOKEN64(Ýxprtoken64¨)¨               * 01002300
*                        !   ÐÝUNAUTHSERV(BASE)¨                      * 01002400
*                        !   ¿ÝUNAUTHSERV(LEVEL1)¨                    * 01002500
*                        Ô REQUEST(DEREGISTER)                        * 01002600
*                        !   Ð PRODOWNER(xprodowner)                  * 01002700
*                        !   !     PRODNAME(xprodname)                * 01002800
*                        !   !    ÝPRODVERS(»xprodvers!Noneº)¨        * 01002900
*                        !   !    ÝPRODQUAL(»xprodqual!Noneº)¨        * 01003000
*                        !   !    ÝPRODID(»xprodid!Noneº)¨            * 01003100
*                        !   Ô PRTOKEN(xprtoken)                      * 01003200
*                        !   ¿ PRTOKEN64(xprtoken64)                  * 01003300
*                        !   ÐÝENDTIME(Ýxendtime¨)                    * 01003400
*                        !   ¿ ENDTIME64(Ýxendtime64¨)¨               * 01003500
*                        !   ÐÝENDDATA(Ýxenddata¨)                    * 01003600
*                        !   ¿ ENDDATA64(Ýxenddata64¨)¨               * 01003700
*                        Ô REQUEST(FUNCTIONBEGIN)                     * 01003800
*                        !   Ð PRODOWNER(xprodowner)                  * 01003900
*                        !   !     PRODNAME(xprodname)                * 01004000
*                        !   !    ÝPRODVERS(»xprodvers!Noneº)¨        * 01004100
*                        !   !    ÝPRODQUAL(»xprodqual!Noneº)¨        * 01004200
*                        !   !    ÝPRODID(»xprodid!Noneº)¨            * 01004300
*                        !   Ô PRTOKEN(xprtoken)                      * 01004400
*                        !   ¿ PRTOKEN64(xprtoken64)                  * 01004500
*                        !   ÐÝBEGTIME(Ýxbegtime¨)                    * 01004600
*                        !   ¿ BEGTIME64(Ýxbegtime64¨)¨               * 01004700
*                        Ô REQUEST(FUNCTIONDATA)                      * 01004800
*                        !   Ð PRODOWNER(xprodowner)                  * 01004900
*                        !   !     PRODNAME(xprodname)                * 01005000
*                        !   !    ÝPRODVERS(»xprodvers!Noneº)¨        * 01005100
*                        !   !    ÝPRODQUAL(»xprodqual!Noneº)¨        * 01005200
*                        !   !    ÝPRODID(»xprodid!Noneº)¨            * 01005300
*                        !   Ô PRTOKEN(xprtoken)                      * 01005400
*                        !   ¿ PRTOKEN64(xprtoken64)                  * 01005500
*                        !   Ð DATA(xdata)                            * 01005600
*                        !   ¿ DATA64(xdata64)                        * 01005700
*                        !    ÝFORMAT(»CPUTIME!BINARY!FLOATº)¨        * 01005800
*                        !   ÐÝCURRENTDATA(Ýxcurrentdata¨)            * 01005900
*                        !   ¿ CURRENTDATA64(Ýxcurrentdata64¨)¨       * 01006000
*                        Ô REQUEST(FUNCTIONEND)                       * 01006100
*                        !   Ð PRODOWNER(xprodowner)                  * 01006200
*                        !   !     PRODNAME(xprodname)                * 01006300
*                        !   !    ÝPRODVERS(»xprodvers!Noneº)¨        * 01006400
*                        !   !    ÝPRODQUAL(»xprodqual!Noneº)¨        * 01006500
*                        !   !    ÝPRODID(»xprodid!Noneº)¨            * 01006600
*                        !   Ô PRTOKEN(xprtoken)                      * 01006700
*                        !   ¿ PRTOKEN64(xprtoken64)                  * 01006800
*                        !   ÐÝENDTIME(Ýxendtime¨)                    * 01006900
*                        !   ¿ ENDTIME64(Ýxendtime64¨)¨               * 01007000
*                        !   ÐÝENDDATA(Ýxenddata¨)                    * 01007100
*                        !   ¿ ENDDATA64(Ýxenddata64¨)¨               * 01007200
*                        ¿ REQUEST(STATUS)                            * 01007300
*                        ÐÝLINKAGE(SVC)¨                              * 01007400
*                        ¿ÝLINKAGE(BRANCH)                            * 01007500
*                            ÐÝVALIDATE(YES)¨                         * 01007600
*                            ¿ÝVALIDATE(NO)¨¨                         * 01007700
*                        ÐÝFBFE(NO)¨                                  * 01007800
*                        ¿ÝFBFE(YES)¨                                 * 01007900
*                         ÝRETCODE(xretcode)¨                         * 01008000
*                         ÝPLISTVER(»xplistver!IMPLIED_VERSIONº)¨     * 01008100
*                        ÐÝMF(S)¨                                     * 01008200
*                        ÔÝMF(L,xmfctrl»,xmfattr!BDY(DWORD)º)¨        * 01008300
*                        ÔÝMF(M,xmfctrl»,COMPLETE!NOCHECKº)¨          * 01008400
*                        ¿ÝMF(E,xmfctrl»,COMPLETE!NOCHECKº)¨          * 01008500
*                                                                     * 01008600
****** END OF SPECIFICATIONS *****************************************/ 01008700
*/*PB.ECHO01 MACRO INVOCATION ECHO-----------------------------------*/ 01008800
*  ANS('@SPACE;') NORESCAN COL(MACLMAR);                                01008900
*  ANS('/* ? IFAUSAGE '!!MACLIST!!' ')                                  01009000
*      NORESCAN COL(MACLMAR+5);    /* START ECHO */                     01009100
*                                                                       01009200
*  DCL ZELO  FIXED;                                                     01009300
*  DCL ZECOL FIXED;                                                     01009400
*                                                                       01009500
*  ZELO=1;     /* STARTING COLUMN */                                    01009600
*  DO WHILE ZELO<=LENGTH(MACKEYS);  /* PARENTHSIS SCAN */               01009700
*    ZECOL=INDEX(MACKEYS(ZELO:LENGTH(MACKEYS)),')');                    01009800
*    IF ZECOL>0                                                         01009900
*      THEN                                                             01010000
*        DO;   /* PARENTHESIS FOUND */                                  01010100
*          ANS(MACKEYS(ZELO:ZELO+ZECOL-1)!!' ')                         01010200
*             NORESCAN COL(MACLMAR+5);                                  01010300
*          ZELO=ZELO+ZECOL;        /* NEXT PORTION */                   01010400
*        END;                                                           01010500
*      ELSE                                                             01010600
*        DO;   /* REMAINING KEYS */                                     01010700
*          ANS(MACKEYS(ZELO:LENGTH(MACKEYS)))                           01010800
*             NORESCAN COL(MACLMAR+5);                                  01010900
*          ZELO=LENGTH(MACKEYS)+1;                                      01011000
*        END;                                                           01011100
*  END;                                                                 01011200
*  ANS(' -08/06/19-2- */')                                              01011300
*      NORESCAN COL(MACLMAR+5);    /* END ECHO */                       01011400
*/********************************************************************/ 01011500
*/*PV.DCL01 MACRO DECLARES AND CODE GENERATION CONTROLS              */ 01011600
*/********************************************************************/ 01011700
*  DCL ZPRINT  EXTERNAL; DEACT ZPRINT; /* YES=PRINT, NO=NO PRINT     */ 01011800
*  DCL ZTEST   EXTERNAL; DEACT ZTEST;  /* YES=TEST, NO=NO TEST       */ 01011900
*  DCL ZSYSTEM EXTERNAL; DEACT ZSYSTEM;/* PCCODE10, MVS, SAK, VM     */ 01012000
*                                                                       01012100
*  DCL   ZIFAUSAGE CHAR EXTERNAL; /* YES=USED AT LEAST ONCE          */ 01012200
*  DEACT ZIFAUSAGE;                                                     01012300
*                                                                       01012400
*  DCL ZMACRET FIXED; DEACT ZMACRET;                                    01012500
*  ZMACRET=0;                   /* MACRO COMPILE RETURN CODE         */ 01012600
*                                                                       01012700
*  DCL ZMS CHAR;   DEACT ZMS;   /* ERROR MESSAGE                     */ 01012800
*  DCL ZCVAL CHAR; DEACT ZCVAL; /* ERROR MESSAGE WORK AREA           */ 01012900
*                                                                       01013000
*  DCL ZI FIXED;  DEACT ZI;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 01013100
*  DCL ZJ FIXED;  DEACT ZJ;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 01013200
*  DCL ZK FIXED;  DEACT ZK;     /* INDEX FOR RANGE COLON (:)         */ 01013300
*  DCL ZL FIXED;  DEACT ZL;     /* INDEX FOR RANGE VALUE CHECKING    */ 01013400
*  DCL ZLO FIXED; DEACT ZLO;    /* LOW RANGE VALUE                   */ 01013500
*  DCL ZHI FIXED; DEACT ZHI;    /* HIGH RANGE VALUE                  */ 01013600
*  DCL ZW CHAR;   DEACT ZW;     /* WORK AREA FOR RANGE VALUE SUBLIST */ 01013700
*  DCL ZN FIXED;  DEACT ZN;     /* NUMERIC WORK VARIABLE             */ 01013800
*  DCL ZC CHAR;   DEACT ZC;     /* CHARACTER WORK VARIABLE           */ 01013900
*  DCL ZMAXINVOCLEN FIXED; DEACT ZMAXINVOCLEN;  /* INVOCATION LENGTH */ 01014000
*  DCL ZPLLEN FIXED; DEACT ZPLLEN;        /* PARAMETER LIST LENGTH   */ 01014100
*                                                                       01014200
*  DCL ZPRMMAX FIXED;           /* MAXIMUM PARM LIST SIZE            */ 01014300
*  DCL ZPRMNUM FIXED;           /* PARAMETER ARRAY INDEX             */ 01014400
*  DCL ZPRM(100);               /* PARAMETER ENTRY                   */ 01014500
*  DCL EHAMAXLEN FIXED EXTERNAL;   /* MAX ILIST SIZE FOR PARM LISTS  */ 01014600
*  DCL EHAREGS CHARACTER EXTERNAL; /* REG DCLS                       */ 01014700
*  DCL EHAREGS64 CHARACTER EXTERNAL; /* REG DCLS                     */ 01014800
*  DCL EHALIST CHARACTER EXTERNAL; /* STANDARD PARM LIST GENERATION  */ 01014900
*/*******************************************************************/  01015000
*/*PV.XVAR01 DECLARE ALL MACRO PARAMETER VARIABLES                  */  01015100
*/*******************************************************************/  01015200
*  DCL XREQUEST;  DEACT XREQUEST;  /***PV.XVAR02 INPUT VALUE */         01015300
*  DCL ZXREQUEST; DEACT ZXREQUEST;  /***INPUT/OUTPUT CONTROL */         01015400
*  DCL   XPRODOWNER;               /***PV.XVAR03 INPUT NAME */          01015500
*  DEACT XPRODOWNER;               /***PV.XVAR03 INPUT NAME */          01015600
*  DCL   ZXPRODOWNER;              /***INPUT/OUTPUT CONTROL */          01015700
*  DEACT ZXPRODOWNER;              /***INPUT/OUTPUT CONTROL */          01015800
*  DCL XPRODNAME;  DEACT XPRODNAME;  /***PV.XVAR02 INPUT NAME */        01015900
*  DCL ZXPRODNAME; DEACT ZXPRODNAME;  /***INPUT/OUTPUT CONTROL */       01016000
*  DCL XPRODVERS;  DEACT XPRODVERS;  /***PV.XVAR02 INPUT NAME */        01016100
*  DCL ZXPRODVERS; DEACT ZXPRODVERS;  /***INPUT/OUTPUT CONTROL */       01016200
*  DCL XPRODQUAL;  DEACT XPRODQUAL;  /***PV.XVAR02 INPUT NAME */        01016300
*  DCL ZXPRODQUAL; DEACT ZXPRODQUAL;  /***INPUT/OUTPUT CONTROL */       01016400
*  DCL XPRODID;  DEACT XPRODID;    /***PV.XVAR02 INPUT NAME */          01016500
*  DCL ZXPRODID; DEACT ZXPRODID;   /***INPUT/OUTPUT CONTROL */          01016600
*  DCL XDOMAIN;  DEACT XDOMAIN;    /***PV.XVAR02 INPUT VALUE */         01016700
*  DCL ZXDOMAIN; DEACT ZXDOMAIN;   /***INPUT/OUTPUT CONTROL */          01016800
*  DCL XSCOPE;  DEACT XSCOPE;      /***PV.XVAR02 INPUT VALUE */         01016900
*  DCL ZXSCOPE; DEACT ZXSCOPE;     /***INPUT/OUTPUT CONTROL */          01017000
*  DCL XDUMMY1;  DEACT XDUMMY1;    /***PV.XVAR02 OUTPUT NAME */         01017100
*  DCL ZXDUMMY1; DEACT ZXDUMMY1;   /***INPUT/OUTPUT CONTROL */          01017200
*  DCL XPRTOKEN;  DEACT XPRTOKEN;  /***PV.XVAR02 OUTPUT NAME */         01017300
*  DCL ZXPRTOKEN; DEACT ZXPRTOKEN;  /***INPUT/OUTPUT CONTROL */         01017400
*  DCL   XPRTOKEN64;               /***PV.XVAR03 OUTPUT NAME */         01017500
*  DEACT XPRTOKEN64;               /***PV.XVAR03 OUTPUT NAME */         01017600
*  DCL   ZXPRTOKEN64;              /***INPUT/OUTPUT CONTROL */          01017700
*  DEACT ZXPRTOKEN64;              /***INPUT/OUTPUT CONTROL */          01017800
*  DCL   XUNAUTHSERV;              /***PV.XVAR03 INPUT VALUE */         01017900
*  DEACT XUNAUTHSERV;              /***PV.XVAR03 INPUT VALUE */         01018000
*  DCL   ZXUNAUTHSERV;             /***INPUT/OUTPUT CONTROL */          01018100
*  DEACT ZXUNAUTHSERV;             /***INPUT/OUTPUT CONTROL */          01018200
*  DCL   XDEREGPRODNAME;           /***PV.XVAR03 INPUT NAME */          01018300
*  DEACT XDEREGPRODNAME;           /***PV.XVAR03 INPUT NAME */          01018400
*  DCL   ZXDEREGPRODNAME;          /***INPUT/OUTPUT CONTROL */          01018500
*  DEACT ZXDEREGPRODNAME;          /***INPUT/OUTPUT CONTROL */          01018600
*  DCL   XDEREGENDTIME;            /***PV.XVAR03 OUTPUT NAME */         01018700
*  DEACT XDEREGENDTIME;            /***PV.XVAR03 OUTPUT NAME */         01018800
*  DCL   ZXDEREGENDTIME;           /***INPUT/OUTPUT CONTROL */          01018900
*  DEACT ZXDEREGENDTIME;           /***INPUT/OUTPUT CONTROL */          01019000
*  DCL XENDTIME;  DEACT XENDTIME;  /***PV.XVAR02 OUTPUT NAME */         01019100
*  DCL ZXENDTIME; DEACT ZXENDTIME;  /***INPUT/OUTPUT CONTROL */         01019200
*  DCL   XENDTIME64;               /***PV.XVAR03 OUTPUT NAME */         01019300
*  DEACT XENDTIME64;               /***PV.XVAR03 OUTPUT NAME */         01019400
*  DCL   ZXENDTIME64;              /***INPUT/OUTPUT CONTROL */          01019500
*  DEACT ZXENDTIME64;              /***INPUT/OUTPUT CONTROL */          01019600
*  DCL   XDEREGENDDATA;            /***PV.XVAR03 OUTPUT NAME */         01019700
*  DEACT XDEREGENDDATA;            /***PV.XVAR03 OUTPUT NAME */         01019800
*  DCL   ZXDEREGENDDATA;           /***INPUT/OUTPUT CONTROL */          01019900
*  DEACT ZXDEREGENDDATA;           /***INPUT/OUTPUT CONTROL */          01020000
*  DCL XENDDATA;  DEACT XENDDATA;  /***PV.XVAR02 OUTPUT NAME */         01020100
*  DCL ZXENDDATA; DEACT ZXENDDATA;  /***INPUT/OUTPUT CONTROL */         01020200
*  DCL   XENDDATA64;               /***PV.XVAR03 OUTPUT NAME */         01020300
*  DEACT XENDDATA64;               /***PV.XVAR03 OUTPUT NAME */         01020400
*  DCL   ZXENDDATA64;              /***INPUT/OUTPUT CONTROL */          01020500
*  DEACT ZXENDDATA64;              /***INPUT/OUTPUT CONTROL */          01020600
*  DCL   XBEGINPRODNAME;           /***PV.XVAR03 INPUT NAME */          01020700
*  DEACT XBEGINPRODNAME;           /***PV.XVAR03 INPUT NAME */          01020800
*  DCL   ZXBEGINPRODNAME;          /***INPUT/OUTPUT CONTROL */          01020900
*  DEACT ZXBEGINPRODNAME;          /***INPUT/OUTPUT CONTROL */          01021000
*  DCL XDUMMY2;  DEACT XDUMMY2;    /***PV.XVAR02 OUTPUT NAME */         01021100
*  DCL ZXDUMMY2; DEACT ZXDUMMY2;   /***INPUT/OUTPUT CONTROL */          01021200
*  DCL XBEGTIME;  DEACT XBEGTIME;  /***PV.XVAR02 OUTPUT NAME */         01021300
*  DCL ZXBEGTIME; DEACT ZXBEGTIME;  /***INPUT/OUTPUT CONTROL */         01021400
*  DCL   XBEGTIME64;               /***PV.XVAR03 OUTPUT NAME */         01021500
*  DEACT XBEGTIME64;               /***PV.XVAR03 OUTPUT NAME */         01021600
*  DCL   ZXBEGTIME64;              /***INPUT/OUTPUT CONTROL */          01021700
*  DEACT ZXBEGTIME64;              /***INPUT/OUTPUT CONTROL */          01021800
*  DCL   XDATAPRODNAME;            /***PV.XVAR03 INPUT NAME */          01021900
*  DEACT XDATAPRODNAME;            /***PV.XVAR03 INPUT NAME */          01022000
*  DCL   ZXDATAPRODNAME;           /***INPUT/OUTPUT CONTROL */          01022100
*  DEACT ZXDATAPRODNAME;           /***INPUT/OUTPUT CONTROL */          01022200
*  DCL XDUMMY3;  DEACT XDUMMY3;    /***PV.XVAR02 INPUT NAME */          01022300
*  DCL ZXDUMMY3; DEACT ZXDUMMY3;   /***INPUT/OUTPUT CONTROL */          01022400
*  DCL XDATA;  DEACT XDATA;        /***PV.XVAR02 INPUT NAME */          01022500
*  DCL ZXDATA; DEACT ZXDATA;       /***INPUT/OUTPUT CONTROL */          01022600
*  DCL XDATA64;  DEACT XDATA64;    /***PV.XVAR02 INPUT NAME */          01022700
*  DCL ZXDATA64; DEACT ZXDATA64;   /***INPUT/OUTPUT CONTROL */          01022800
*  DCL XFORMAT;  DEACT XFORMAT;    /***PV.XVAR02 INPUT VALUE */         01022900
*  DCL ZXFORMAT; DEACT ZXFORMAT;   /***INPUT/OUTPUT CONTROL */          01023000
*  DCL XDUMMY4;  DEACT XDUMMY4;    /***PV.XVAR02 OUTPUT NAME */         01023100
*  DCL ZXDUMMY4; DEACT ZXDUMMY4;   /***INPUT/OUTPUT CONTROL */          01023200
*  DCL   XCURRENTDATA;             /***PV.XVAR03 OUTPUT NAME */         01023300
*  DEACT XCURRENTDATA;             /***PV.XVAR03 OUTPUT NAME */         01023400
*  DCL   ZXCURRENTDATA;            /***INPUT/OUTPUT CONTROL */          01023500
*  DEACT ZXCURRENTDATA;            /***INPUT/OUTPUT CONTROL */          01023600
*  DCL   XCURRENTDATA64;           /***PV.XVAR03 OUTPUT NAME */         01023700
*  DEACT XCURRENTDATA64;           /***PV.XVAR03 OUTPUT NAME */         01023800
*  DCL   ZXCURRENTDATA64;          /***INPUT/OUTPUT CONTROL */          01023900
*  DEACT ZXCURRENTDATA64;          /***INPUT/OUTPUT CONTROL */          01024000
*  DCL   XENDPRODNAME;             /***PV.XVAR03 INPUT NAME */          01024100
*  DEACT XENDPRODNAME;             /***PV.XVAR03 INPUT NAME */          01024200
*  DCL   ZXENDPRODNAME;            /***INPUT/OUTPUT CONTROL */          01024300
*  DEACT ZXENDPRODNAME;            /***INPUT/OUTPUT CONTROL */          01024400
*  DCL XDUMMY5;  DEACT XDUMMY5;    /***PV.XVAR02 OUTPUT NAME */         01024500
*  DCL ZXDUMMY5; DEACT ZXDUMMY5;   /***INPUT/OUTPUT CONTROL */          01024600
*  DCL XDUMMY6;  DEACT XDUMMY6;    /***PV.XVAR02 OUTPUT NAME */         01024700
*  DCL ZXDUMMY6; DEACT ZXDUMMY6;   /***INPUT/OUTPUT CONTROL */          01024800
*  DCL XLINKAGE;  DEACT XLINKAGE;  /***PV.XVAR02 INPUT VALUE */         01024900
*  DCL ZXLINKAGE; DEACT ZXLINKAGE;  /***INPUT/OUTPUT CONTROL */         01025000
*  DCL XVALIDATE;  DEACT XVALIDATE;  /***PV.XVAR02 INPUT VALUE */       01025100
*  DCL ZXVALIDATE; DEACT ZXVALIDATE;  /***INPUT/OUTPUT CONTROL */       01025200
*  DCL XFBFE;  DEACT XFBFE;        /***PV.XVAR02 INPUT VALUE */         01025300
*  DCL ZXFBFE; DEACT ZXFBFE;       /***INPUT/OUTPUT CONTROL */          01025400
*  DCL XRETCODE;  DEACT XRETCODE;  /***PV.XVAR02 OUTPUT NAME */         01025500
*  DCL ZXRETCODE; DEACT ZXRETCODE;  /***INPUT/OUTPUT CONTROL */         01025600
*  DCL XPLISTVER FIXED;  DEACT XPLISTVER;  /***PV.XVAR02 INPUT VALUE */ 01025700
*  DCL ZXPLISTVER; DEACT ZXPLISTVER;  /***INPUT/OUTPUT CONTROL */       01025800
*  DCL XMF;  DEACT XMF;            /***PV.XVAR02 INPUT VALUE */         01025900
*  DCL ZXMF; DEACT ZXMF;           /***INPUT/OUTPUT CONTROL */          01026000
*  DCL XMFCTRL;  DEACT XMFCTRL;    /***PV.XVAR02 INPUT NAME */          01026100
*  DCL ZXMFCTRL; DEACT ZXMFCTRL;   /***INPUT/OUTPUT CONTROL */          01026200
*  DCL XMFATTR;  DEACT XMFATTR;    /***PV.XVAR02 INPUT VALUE */         01026300
*  DCL ZXMFATTR; DEACT ZXMFATTR;   /***INPUT/OUTPUT CONTROL */          01026400
*  DCL XMFSCK;  DEACT XMFSCK;      /***PV.XVAR02 INPUT VALUE */         01026500
*  DCL ZXMFSCK; DEACT ZXMFSCK;     /***INPUT/OUTPUT CONTROL */          01026600
*/********************************************************************/ 01026700
*/***PC.PLV01  PROCESS PLISTVER                                      */ 01026800
*/********************************************************************/ 01026900
*  IF PLISTVER(1) = 'MAX' THEN                                          01027000
*    XPLISTVER=2;                                                       01027100
*  ELSE                                                                 01027200
*    XPLISTVER=1;                                                       01027300
*  IF PRTOKEN64^='' & XPLISTVER<2                                       01027400
*    THEN                                                               01027500
*      XPLISTVER=2;                                                     01027600
*  IF UNAUTHSERV^='' & XPLISTVER<2                                      01027700
*    THEN                                                               01027800
*      XPLISTVER=2;                                                     01027900
*  IF PRTOKEN64^='' & XPLISTVER<2                                       01028000
*    THEN                                                               01028100
*      XPLISTVER=2;                                                     01028200
*  IF ENDTIME64^='' & XPLISTVER<2                                       01028300
*    THEN                                                               01028400
*      XPLISTVER=2;                                                     01028500
*  IF ENDDATA64^='' & XPLISTVER<2                                       01028600
*    THEN                                                               01028700
*      XPLISTVER=2;                                                     01028800
*  IF PRTOKEN64^='' & XPLISTVER<2                                       01028900
*    THEN                                                               01029000
*      XPLISTVER=2;                                                     01029100
*  IF BEGTIME64^='' & XPLISTVER<2                                       01029200
*    THEN                                                               01029300
*      XPLISTVER=2;                                                     01029400
*  IF PRTOKEN64^='' & XPLISTVER<2                                       01029500
*    THEN                                                               01029600
*      XPLISTVER=2;                                                     01029700
*  IF DATA64^='' & XPLISTVER<2                                          01029800
*    THEN                                                               01029900
*      XPLISTVER=2;                                                     01030000
*  IF CURRENTDATA64^='' & XPLISTVER<2                                   01030100
*    THEN                                                               01030200
*      XPLISTVER=2;                                                     01030300
*  IF PRTOKEN64^='' & XPLISTVER<2                                       01030400
*    THEN                                                               01030500
*      XPLISTVER=2;                                                     01030600
*  IF ENDTIME64^='' & XPLISTVER<2                                       01030700
*    THEN                                                               01030800
*      XPLISTVER=2;                                                     01030900
*  IF ENDDATA64^='' & XPLISTVER<2                                       01031000
*    THEN                                                               01031100
*      XPLISTVER=2;                                                     01031200
*  IF PLISTVER^=''                                                      01031300
*     & PLISTVER(1)^='IMPLIED_VERSION'                                  01031400
*     & PLISTVER(1)^='MAX'                                              01031500
*    THEN                                                               01031600
*      DO;                                                              01031700
*                                                                       01031800
*        ZCVAL='';                           /* ERROR FLAG */           01031900
*        IF PLISTVER='PLISTVER' ! PLISTVER='()'  /*CHECK ENTRY*/        01032000
*          THEN                                                         01032100
*            DO;                                                        01032200
*              ZMS=' 8, THE "PLISTVER" KEY'!!                           01032300
*                  ' MUST CONTAIN ONE'!!                                01032400
*                  ' (OR MORE) ARGUMENT(S).';                           01032500
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01032600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01032700
*              ZMACRET=8;                    /* MACRO ERROR */          01032800
*              ZCVAL='NO_ARGUMENT';                                     01032900
*            END;                                                       01033000
*        IF NUMBER(PLISTVER)>1               /* CHECK POSITIONALS */    01033100
*          THEN                                                         01033200
*            DO;                                                        01033300
*              ZMS=' 8, "PLISTVER'!!         /**KPOSP* MSG*/            01033400
*                  PLISTVER!!                                           01033500
*                  '" "PLISTVER"'!!                                     01033600
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01033700
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01033800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01033900
*              ZMACRET=8;                    /* MACRO ERROR */          01034000
*            END;                                                       01034100
*                                                                       01034200
*        ZC=PLISTVER(1);                                                01034300
*        DO ZL=1 TO LENGTH(ZC);              /* MUST BE NUMBER */       01034400
*          IF ZC(ZL:ZL)<'0' !                /* MUST BE NUMERIC */      01034500
*             ZC(ZL:ZL)>'9'                  /* MUST BE NUMERIC */      01034600
*            THEN                                                       01034700
*              ZCVAL='NUMERIC';              /* NUMERIC ERROR */        01034800
*        END;                                                           01034900
*        IF ZCVAL=''                                                    01035000
*          THEN                                                         01035100
*            DO;                             /* CHECK RANGE LIMITS */   01035200
*            IF FIXED(PLISTVER(1))>=XPLISTVER                           01035300
*              THEN                                                     01035400
*                XPLISTVER=FIXED(PLISTVER(1));                          01035500
*              ELSE                                                     01035600
*                DO;                                                    01035700
*              ZMS=' 8, PLISTVER='!!         /**KVALP* MSG*/            01035800
*                    PLISTVER(1)!!                                      01035900
*                  ', BUT PLISTVER OF '!!                               01036000
*                    CHAR(XPLISTVER)!!                                  01036100
*                  ' IS REQUIRED.';                                     01036200
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01036300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01036400
*              ZMACRET=8;                    /* MACRO ERROR */          01036500
*                END;                                                   01036600
*              IF XPLISTVER<1 !              /* LOW LIMIT */            01036700
*                 XPLISTVER>2                /* HIGH LIMIT */           01036800
*                THEN                                                   01036900
*                  ZCVAL='RANGE';            /* RANGE ERROR */          01037000
*            END;                                                       01037100
*        IF ZCVAL^=''                                                   01037200
*          THEN                                                         01037300
*            DO;                             /* RANGE ERROR */          01037400
*              ZXPLISTVER='';                /* RESET IN/OUTPUT */      01037500
*              ZMS=' 8, "PLISTVER '!!        /**KRNGP* MSG*/            01037600
*                  PLISTVER!!                                           01037700
*                  '" THE RANGE IS "1-2"'!!                             01037800
*                  ' FOR ARGUMENT 1.';                                  01037900
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01038000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01038100
*              ZMACRET=8;                    /* MACRO ERROR */          01038200
*            END;                                                       01038300
*      END;                                                             01038400
*                                                                       01038500
*/********************************************************************/ 01038600
*/***PG.MF01  PROCESS MF MACRO FORMS                                 */ 01038700
*/********************************************************************/ 01038800
*/*PG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01038900
*  XMF='';                                                              01039000
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01039100
*  IF MF(1)='S'                              /* CHECK FOR KEYWORD */    01039200
*    THEN                                                               01039300
*      DO;                                                              01039400
*        XMFSCK='COMPLETE';                                             01039500
*        XMF='S';                            /* SET XVARIABLE */        01039600
*        IF NUMBER(MF)>1                     /* CHECK POSITIONALS */    01039700
*          THEN                                                         01039800
*            DO;                                                        01039900
*              ZMS=' 8, "MF'!!               /**KPOSP* MSG*/            01040000
*                  MF!!                                                 01040100
*                  '" "MF"'!!                                           01040200
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01040300
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01040400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01040500
*              ZMACRET=8;                    /* MACRO ERROR */          01040600
*            END;                                                       01040700
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01040800
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     01040900
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01041000
*  IF MF(1)='L'                              /* CHECK FOR KEYWORD */    01041100
*    THEN                                                               01041200
*      DO;                                                              01041300
*        XMF='L';                            /* SET XVARIABLE */        01041400
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    01041500
*          THEN                                                         01041600
*            DO;                                                        01041700
*              ZMS=' 8, "MF'!!               /**KPOSP* MSG*/            01041800
*                  MF!!                                                 01041900
*                  '" "MF"'!!                                           01042000
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       01042100
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01042200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01042300
*              ZMACRET=8;                    /* MACRO ERROR */          01042400
*            END;                                                       01042500
*/*PG.KKCTL10 -MF(L) SPECIAL CHECK-----------------------------------*/ 01042600
*        ZMAXINVOCLEN = LENGTH(MF) + 2;                                 01042700
*        IF PLISTVER ^= ''                                              01042800
*          THEN                                                         01042900
*            ZMAXINVOCLEN=ZMAXINVOCLEN + LENGTH(PLISTVER) + 8;          01043000
*        IF LENGTH(MACKEYS) > ZMAXINVOCLEN !                            01043100
*           MACLIST ^= ''                    /* CHECK FOR OTHER PARMS*/ 01043200
*          THEN                                                         01043300
*            DO;                                                        01043400
*              ZMS=' 8, THE "L" FORM OF "MF"'!! /**MFLP* MSG*/          01043500
*                  ' CAN ONLY HAVE'!!                                   01043600
*                  ' THE "PLISTVER" KEY'!!                              01043700
*                  ' SPECIFIED ON THE INVOCATION.';                     01043800
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01043900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01044000
*              ZMACRET=8;                    /* MACRO ERROR */          01044100
*            END;                                                       01044200
*/*PG.KXVAR03 NAME, OPT RQD INPUT, POS(2) -XVARIABLE-----------------*/ 01044300
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        01044400
*  IF MF(2)=''                               /* CHECK FOR NULL */       01044500
*   THEN                                                                01044600
*    DO;                                     /* KEY IS REQUIRED */      01044700
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      01044800
*        ZMS=' 8, WHEN "L" IS SPECIFIED'!!                              01044900
*            ' FOR THE "MF" KEY, POSITIONAL'!!                          01045000
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            01045100
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01045200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01045300
*        ZMACRET=8;                          /* MACRO ERROR */          01045400
*    END;                                                               01045500
*  ELSE                                                                 01045600
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        01045700
*/*PG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE--------------------*/ 01045800
*  ZXMFATTR='INPUT';                         /* SET IN/OUTPUT */        01045900
*  XMFATTR='BDY(DWORD)';                     /* SET DEFAULT */          01046000
*  IF MF(3)^=''                              /* CHECK FOR NULL */       01046100
*    THEN                                                               01046200
*      XMFATTR=MF(3);                        /* SET XVARIABLE */        01046300
*/*PG.KCK01 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH---------------*/ 01046400
*  IF ZXMFATTR^='' &                         /* NOT IN/OUTPUT */        01046500
*     LENGTH(XMFATTR)>60                                                01046600
*    THEN                                                               01046700
*      DO;                                                              01046800
*        ZXMFATTR='';                        /* RESET IN/OUTPUT */      01046900
*        ZMS=' 8, "MF'!!                     /**KLNGP* MSG*/            01047000
*            MF!!                                                       01047100
*            '" ARGUMENT 3 EXCEEDS THE MAXIMUM'!!                       01047200
*            ' LENGTH OF 60 CHARACTERS. ';                              01047300
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01047400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01047500
*        ZMACRET=8;                          /* MACRO ERROR */          01047600
*      END;                                                             01047700
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01047800
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     01047900
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01048000
*  IF MF(1)='M'                              /* CHECK FOR KEYWORD */    01048100
*    THEN                                                               01048200
*      DO;                                                              01048300
*        XMF='M';                            /* SET XVARIABLE */        01048400
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    01048500
*          THEN                                                         01048600
*            DO;                                                        01048700
*              ZMS=' 8, "MF'!!               /**KPOSP* MSG*/            01048800
*                  MF!!                                                 01048900
*                  '" "MF"'!!                                           01049000
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       01049100
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01049200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01049300
*              ZMACRET=8;                    /* MACRO ERROR */          01049400
*            END;                                                       01049500
*/*PG.KXVAR03 NAME, OPT RQD INPUT, POS(2) -XVARIABLE-----------------*/ 01049600
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        01049700
*  IF MF(2)=''                               /* CHECK FOR NULL */       01049800
*   THEN                                                                01049900
*    DO;                                     /* KEY IS REQUIRED */      01050000
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      01050100
*        ZMS=' 8, WHEN "M" IS SPECIFIED'!!                              01050200
*            ' FOR THE "MF" KEY, POSITIONAL'!!                          01050300
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            01050400
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01050500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01050600
*        ZMACRET=8;                          /* MACRO ERROR */          01050700
*    END;                                                               01050800
*  ELSE                                                                 01050900
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        01051000
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 01051100
*  XMFSCK='';                                /* RESET XVARIABLE */      01051200
*  IF MF(3) = 'COMPLETE'                                                01051300
*    THEN                                                               01051400
*      XMFSCK = 'COMPLETE';                  /* SET XVARIABLE */        01051500
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 01051600
*  IF MF(3) = 'NOCHECK'                                                 01051700
*    THEN                                                               01051800
*      XMFSCK = 'NOCHECK';                   /* SET XVARIABLE */        01051900
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 01052000
*  ZXMFSCK='INPUT';                          /* SET IN/OUTPUT */        01052100
*  IF XMFSCK=''                              /* CHECK FOR KEYWORD */    01052200
*    THEN                                                               01052300
*      DO;                                   /* KEYWORD NOT ENTERED */  01052400
*        XMFSCK='COMPLETE';                  /* SET DEFAULT */          01052500
*        IF MF(3)^=''                                                   01052600
*          THEN                                                         01052700
*            DO;                                                        01052800
*              ZXMFSCK='';                   /* RESET IN/OUTPUT */      01052900
*              ZMS=' 8, "MF'!!               /**KUKWP* MSG*/            01053000
*                  MF!!'"'!!                                            01053100
*                  ' ARGUMENT 3 IS AN UNKNOWN KEYWORD. '!!              01053200
*                  ' VALID KEYWORD CHOICE(S) ARE:'!!                    01053300
*                  ' "COMPLETE"'!!           /* VALID KEYWORD */        01053400
*                  ' OR "NOCHECK".';         /* VALID KEYWORD */        01053500
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01053600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01053700
*              ZMACRET=8;                    /* MACRO ERROR */          01053800
*            END;                                                       01053900
*      END;                                                             01054000
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01054100
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     01054200
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01054300
*  IF MF(1)='E'                              /* CHECK FOR KEYWORD */    01054400
*    THEN                                                               01054500
*      DO;                                                              01054600
*        XMF='E';                            /* SET XVARIABLE */        01054700
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    01054800
*          THEN                                                         01054900
*            DO;                                                        01055000
*              ZMS=' 8, "MF'!!               /**KPOSP* MSG*/            01055100
*                  MF!!                                                 01055200
*                  '" "MF"'!!                                           01055300
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       01055400
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01055500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01055600
*              ZMACRET=8;                    /* MACRO ERROR */          01055700
*            END;                                                       01055800
*/*PG.KXVAR03 NAME, OPT RQD INPUT, POS(2) -XVARIABLE-----------------*/ 01055900
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        01056000
*  IF MF(2)=''                               /* CHECK FOR NULL */       01056100
*   THEN                                                                01056200
*    DO;                                     /* KEY IS REQUIRED */      01056300
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      01056400
*        ZMS=' 8, WHEN "E" IS SPECIFIED'!!                              01056500
*            ' FOR THE "MF" KEY, POSITIONAL'!!                          01056600
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            01056700
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01056800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01056900
*        ZMACRET=8;                          /* MACRO ERROR */          01057000
*    END;                                                               01057100
*  ELSE                                                                 01057200
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        01057300
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 01057400
*  XMFSCK='';                                /* RESET XVARIABLE */      01057500
*  IF MF(3) = 'COMPLETE'                                                01057600
*    THEN                                                               01057700
*      XMFSCK = 'COMPLETE';                  /* SET XVARIABLE */        01057800
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 01057900
*  IF MF(3) = 'NOCHECK'                                                 01058000
*    THEN                                                               01058100
*      XMFSCK = 'NOCHECK';                   /* SET XVARIABLE */        01058200
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 01058300
*  ZXMFSCK='INPUT';                          /* SET IN/OUTPUT */        01058400
*  IF XMFSCK=''                              /* CHECK FOR KEYWORD */    01058500
*    THEN                                                               01058600
*      DO;                                   /* KEYWORD NOT ENTERED */  01058700
*        XMFSCK='COMPLETE';                  /* SET DEFAULT */          01058800
*        IF MF(3)^=''                                                   01058900
*          THEN                                                         01059000
*            DO;                                                        01059100
*              ZXMFSCK='';                   /* RESET IN/OUTPUT */      01059200
*              ZMS=' 8, "MF'!!               /**KUKWP* MSG*/            01059300
*                  MF!!'"'!!                                            01059400
*                  ' ARGUMENT 3 IS AN UNKNOWN KEYWORD. '!!              01059500
*                  ' VALID KEYWORD CHOICE(S) ARE:'!!                    01059600
*                  ' "COMPLETE"'!!           /* VALID KEYWORD */        01059700
*                  ' OR "NOCHECK".';         /* VALID KEYWORD */        01059800
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01059900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01060000
*              ZMACRET=8;                    /* MACRO ERROR */          01060100
*            END;                                                       01060200
*      END;                                                             01060300
*/*PG.KKCTL05 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01060400
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     01060500
*/*PG.KKCTL06 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01060600
*  IF MF='MF'                                                           01060700
*    ! MF='()'                               /*CHECK ENTRY*/            01060800
*     THEN                                                              01060900
*       DO;                                                             01061000
*              ZMS=' 8, THE "MF" KEY'!!                                 01061100
*                  ' MUST CONTAIN ONE'!!                                01061200
*                  ' (OR MORE) ARGUMENT(S).';                           01061300
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01061400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01061500
*              ZMACRET=8;                    /* MACRO ERROR */          01061600
*       END;                                                            01061700
*  ELSE                                                                 01061800
*    DO;                                                                01061900
*      ZXMF='INPUT';                         /* SET IN/OUTPUT */        01062000
*      IF XMF=''                             /* CHECK FOR KEYWORD */    01062100
*        THEN                                                           01062200
*          DO;                               /* KEYWORD NOT ENTERED */  01062300
*            XMF='S';                        /* SET DEFAULT */          01062400
*            XMFSCK='COMPLETE';              /* COMPLETE CHECKING */    01062500
*            IF MF(1)^=''                    /* CHECK FOR KEYWORD */    01062600
*              THEN                                                     01062700
*                DO;                                                    01062800
*                  ZXMF='';                  /* RESET IN/OUTPUT */      01062900
*              ZMS=' 8, "MF'!!               /**KUKWP* MSG*/            01063000
*                  MF!!'"'!!                                            01063100
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '!!              01063200
*                  ' VALID KEYWORD CHOICE(S) ARE:'!!                    01063300
*                  ' "S",'!!                 /* VALID KEYWORD */        01063400
*                  ' "L",'!!                 /* VALID KEYWORD */        01063500
*                  ' "M",'!!                 /* VALID KEYWORD */        01063600
*                  ' OR "E".';               /* VALID KEYWORD */        01063700
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01063800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01063900
*              ZMACRET=8;                    /* MACRO ERROR */          01064000
*                END;                                                   01064100
*          END;                                                         01064200
*    END;                                                               01064300
*/********************************************************************/ 01064400
*/***PD.P01 FULL DEFAULT CHECKING                                    */ 01064500
*/********************************************************************/ 01064600
*  IF PLISTVER=''                                                       01064700
*     ! PLISTVER(1)='IMPLIED_VERSION'                                   01064800
*    THEN                                                               01064900
*      ZC='ON';                              /* DEFAULT FLAG ON */      01065000
*    ELSE                                                               01065100
*      ZC='OFF';                             /* DEFAULT FLAG OFF */     01065200
*/********************************************************************/ 01065300
*/***PD.P02 DEFAULT ECHO                                             */ 01065400
*/********************************************************************/ 01065500
*/*PD.P02 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 01065600
*  IF XMF^='L'                                                          01065700
*     & XMFSCK='COMPLETE'                                               01065800
*    THEN                                                               01065900
*      DO;                                   /* FULL SYNTAX CHECK */    01066000
*        ANS('/*DEFAULT(S): */')                                        01066100
*           NORESCAN COL(MACLMAR+5);                                    01066200
*/*PD.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01066300
*  IF REQUEST(1)='REGISTER' !                /* CHECK FOR KEYWORD */    01066400
*     REQUEST(1)=''                          /* CHECK FOR NULL */       01066500
*    THEN                                                               01066600
*      DO;                                                              01066700
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01066800
*  XPRODVERS='';                                                        01066900
*  IF PRODVERS(1)=''                                                    01067000
*    THEN                                                               01067100
*      DO;                                                              01067200
*        XPRODVERS='NONE';                   /* SET DEFAULT */          01067300
*        ZC='ON';                            /* DEFAULT FLAG ON */      01067400
*      END;                                                             01067500
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 01067600
*  IF XPRODVERS^=''                                                     01067700
*    THEN DO;                                                           01067800
*      ANS('/* PRODVERS('!!                                             01067900
*          XPRODVERS!!                                                  01068000
*          ')*/')                                                       01068100
*          NORESCAN COL(MACLMAR+5);                                     01068200
*      XPRODVERS = '';                                                  01068300
*    END;                                                               01068400
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01068500
*  XPRODQUAL='';                                                        01068600
*  IF PRODQUAL(1)=''                                                    01068700
*    THEN                                                               01068800
*      DO;                                                              01068900
*        XPRODQUAL='NONE';                   /* SET DEFAULT */          01069000
*        ZC='ON';                            /* DEFAULT FLAG ON */      01069100
*      END;                                                             01069200
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 01069300
*  IF XPRODQUAL^=''                                                     01069400
*    THEN DO;                                                           01069500
*      ANS('/* PRODQUAL('!!                                             01069600
*          XPRODQUAL!!                                                  01069700
*          ')*/')                                                       01069800
*          NORESCAN COL(MACLMAR+5);                                     01069900
*      XPRODQUAL = '';                                                  01070000
*    END;                                                               01070100
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01070200
*  XPRODID='';                                                          01070300
*  IF PRODID(1)=''                                                      01070400
*    THEN                                                               01070500
*      DO;                                                              01070600
*        XPRODID='NONE';                     /* SET DEFAULT */          01070700
*        ZC='ON';                            /* DEFAULT FLAG ON */      01070800
*      END;                                                             01070900
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 01071000
*  IF XPRODID^=''                                                       01071100
*    THEN DO;                                                           01071200
*      ANS('/* PRODID('!!                                               01071300
*          XPRODID!!                                                    01071400
*          ')*/')                                                       01071500
*          NORESCAN COL(MACLMAR+5);                                     01071600
*      XPRODID = '';                                                    01071700
*    END;                                                               01071800
*/*PD.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01071900
*  IF DOMAIN(1)=''                                                      01072000
*    THEN                                                               01072100
*      DO;                                                              01072200
*        ANS('/*DOMAIN(ADDRSP)*/')                                      01072300
*            NORESCAN COL(MACLMAR+5);                                   01072400
*        ZC='ON';                            /* DEFAULT FLAG ON */      01072500
*      END;                                                             01072600
*/*PD.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01072700
*  IF DOMAIN(1)='TASK'                       /* CHECK FOR KEYWORD */    01072800
*    THEN                                                               01072900
*      DO;                                                              01073000
*/*PD.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 01073100
*  XSCOPE='ALL';                             /* RESET XVARIABLE */      01073200
*  IF SCOPE(1)=''                                                       01073300
*    THEN                                                               01073400
*        ZC='ON';                            /* DEFAULT FLAG ON */      01073500
*  IF SCOPE(1)='ALL'                                                    01073600
*    THEN                                                               01073700
*        XSCOPE='';                          /* SET XVARIABLE */        01073800
*  IF SCOPE(1)='FUNCTION'                                               01073900
*    THEN                                                               01074000
*        XSCOPE='';                          /* SET XVARIABLE */        01074100
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 01074200
*  IF XSCOPE^=''                                                        01074300
*    THEN DO;                                                           01074400
*      ANS('/* SCOPE('!!                                                01074500
*          XSCOPE!!                                                     01074600
*          ')*/')                                                       01074700
*          NORESCAN COL(MACLMAR+5);                                     01074800
*      XSCOPE = '';                                                     01074900
*    END;                                                               01075000
*/*PD.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01075100
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     01075200
*/*PD.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01075300
*  XDUMMY1='';                               /* RESET XVARIABLE */      01075400
*  IF PRTOKEN^=''                            /* CHECK ME KEY */         01075500
*    THEN                                                               01075600
*      DO;                                   /* VALID ME KEY */         01075700
*        XDUMMY1='PRTOKEN';                  /* SET XVARIABLE */        01075800
*      END;                                                             01075900
*/*PD.KMEKY02 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01076000
*  IF PRTOKEN64^=''                          /* CHECK ME KEY */         01076100
*    THEN                                                               01076200
*      DO;                                                              01076300
*        IF XDUMMY1=''                       /* CHECK XVARIABLE */      01076400
*          THEN                                                         01076500
*            DO;                             /* VALID ME KEY */         01076600
*              XDUMMY1='PRTOKEN64';          /* SET XVAR1 */            01076700
*            END;                                                       01076800
*      END;                                                             01076900
*/*PD.KMEKY06 NAME, OPT OUTPUT, ME KEYS -ME KEY DEFAULT--------------*/ 01077000
*  IF XDUMMY1=''                             /* CHECK XVARIABLE */      01077100
*    THEN                                                               01077200
*      DO;                                                              01077300
*        XDUMMY1='PRTOKEN';                                             01077400
*        ZC='ON';                            /* DEFAULT FLAG ON */      01077500
*      END;                                                             01077600
*/*PD.KMEKY10 NAME, OPT OUTPUT, ME KEYS -START-----------------------*/ 01077700
*  IF XDUMMY1='PRTOKEN'                      /* CHECK FOR ME KEY */     01077800
*    THEN                                                               01077900
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01078000
*/*PD.KMEKY09 NAME, OPT OUTPUT, ME KEYS -END-------------------------*/ 01078100
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01078200
*/*PD.KMEKY10 NAME, OPT OUTPUT, ME KEYS -START-----------------------*/ 01078300
*  IF XDUMMY1='PRTOKEN64'                    /* CHECK FOR ME KEY */     01078400
*    THEN                                                               01078500
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01078600
*/*PD.KMEKY11 NAME, OPT OUTPUT, ME KEYS -END-------------------------*/ 01078700
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01078800
*/*PD.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01078900
*  IF XPLISTVER>=2                                                      01079000
*    THEN                                                               01079100
*      DO;                                                              01079200
*  IF UNAUTHSERV(1)=''                                                  01079300
*    THEN                                                               01079400
*      DO;                                                              01079500
*        ANS('/*UNAUTHSERV(BASE)*/')                                    01079600
*            NORESCAN COL(MACLMAR+5);                                   01079700
*        ZC='ON';                            /* DEFAULT FLAG ON */      01079800
*      END;                                                             01079900
*      END;                                                             01080000
*/*PD.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01080100
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     01080200
*/*PD.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01080300
*  XDEREGPRODNAME='';                        /* RESET XVARIABLE */      01080400
*  IF PRODOWNER^=''                          /* CHECK ME KEY */         01080500
*    THEN                                                               01080600
*      DO;                                   /* VALID ME KEY */         01080700
*        XDEREGPRODNAME='PRODOWNER';         /* SET XVARIABLE */        01080800
*      END;                                                             01080900
*/*PD.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01081000
*  IF PRTOKEN^=''                            /* CHECK ME KEY */         01081100
*    THEN                                                               01081200
*      DO;                                                              01081300
*        IF XDEREGPRODNAME=''                /* CHECK XVARIABLE */      01081400
*          THEN                                                         01081500
*            DO;                             /* VALID ME KEY */         01081600
*              XDEREGPRODNAME='PRTOKEN';     /* SET XVAR1 */            01081700
*            END;                                                       01081800
*      END;                                                             01081900
*/*PD.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01082000
*  IF PRTOKEN64^=''                          /* CHECK ME KEY */         01082100
*    THEN                                                               01082200
*      DO;                                                              01082300
*        IF XDEREGPRODNAME=''                /* CHECK XVARIABLE */      01082400
*          THEN                                                         01082500
*            DO;                             /* VALID ME KEY */         01082600
*              XDEREGPRODNAME='PRTOKEN64';   /* SET XVAR1 */            01082700
*            END;                                                       01082800
*      END;                                                             01082900
*/*PD.KMEKY07 NAME, RQD INPUT, ME KEYS -ME KEY DEFAULT---------------*/ 01083000
*  IF XDEREGPRODNAME=''                      /* CHECK XVARIABLE */      01083100
*    THEN                                                               01083200
*      DO;                                                              01083300
*        XDEREGPRODNAME='PRODOWNER';                                    01083400
*        ZC='ON';                            /* DEFAULT FLAG ON */      01083500
*      END;                                                             01083600
*/*PD.KMEKY10 NAME, RQD INPUT, ME KEYS -START------------------------*/ 01083700
*  IF XDEREGPRODNAME='PRODOWNER'             /* CHECK FOR ME KEY */     01083800
*    THEN                                                               01083900
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01084000
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01084100
*  XPRODVERS='';                                                        01084200
*  IF PRODVERS(1)=''                                                    01084300
*    THEN                                                               01084400
*      DO;                                                              01084500
*        XPRODVERS='NONE';                   /* SET DEFAULT */          01084600
*        ZC='ON';                            /* DEFAULT FLAG ON */      01084700
*      END;                                                             01084800
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 01084900
*  IF XPRODVERS^=''                                                     01085000
*    THEN DO;                                                           01085100
*      ANS('/* PRODVERS('!!                                             01085200
*          XPRODVERS!!                                                  01085300
*          ')*/')                                                       01085400
*          NORESCAN COL(MACLMAR+5);                                     01085500
*      XPRODVERS = '';                                                  01085600
*    END;                                                               01085700
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01085800
*  XPRODQUAL='';                                                        01085900
*  IF PRODQUAL(1)=''                                                    01086000
*    THEN                                                               01086100
*      DO;                                                              01086200
*        XPRODQUAL='NONE';                   /* SET DEFAULT */          01086300
*        ZC='ON';                            /* DEFAULT FLAG ON */      01086400
*      END;                                                             01086500
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 01086600
*  IF XPRODQUAL^=''                                                     01086700
*    THEN DO;                                                           01086800
*      ANS('/* PRODQUAL('!!                                             01086900
*          XPRODQUAL!!                                                  01087000
*          ')*/')                                                       01087100
*          NORESCAN COL(MACLMAR+5);                                     01087200
*      XPRODQUAL = '';                                                  01087300
*    END;                                                               01087400
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01087500
*  XPRODID='';                                                          01087600
*  IF PRODID(1)=''                                                      01087700
*    THEN                                                               01087800
*      DO;                                                              01087900
*        XPRODID='NONE';                     /* SET DEFAULT */          01088000
*        ZC='ON';                            /* DEFAULT FLAG ON */      01088100
*      END;                                                             01088200
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 01088300
*  IF XPRODID^=''                                                       01088400
*    THEN DO;                                                           01088500
*      ANS('/* PRODID('!!                                               01088600
*          XPRODID!!                                                    01088700
*          ')*/')                                                       01088800
*          NORESCAN COL(MACLMAR+5);                                     01088900
*      XPRODID = '';                                                    01089000
*    END;                                                               01089100
*/*PD.KMEKY09 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 01089200
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01089300
*/*PD.KMEKY10 NAME, RQD INPUT, ME KEYS -START------------------------*/ 01089400
*  IF XDEREGPRODNAME='PRTOKEN'               /* CHECK FOR ME KEY */     01089500
*    THEN                                                               01089600
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01089700
*/*PD.KMEKY09 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 01089800
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01089900
*/*PD.KMEKY10 NAME, RQD INPUT, ME KEYS -START------------------------*/ 01090000
*  IF XDEREGPRODNAME='PRTOKEN64'             /* CHECK FOR ME KEY */     01090100
*    THEN                                                               01090200
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01090300
*/*PD.KMEKY11 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 01090400
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01090500
*/*PD.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01090600
*  XDEREGENDTIME='';                         /* RESET XVARIABLE */      01090700
*  IF ENDTIME^=''                            /* CHECK ME KEY */         01090800
*    THEN                                                               01090900
*      DO;                                   /* VALID ME KEY */         01091000
*        XDEREGENDTIME='ENDTIME';            /* SET XVARIABLE */        01091100
*      END;                                                             01091200
*/*PD.KMEKY02 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01091300
*  IF ENDTIME64^=''                          /* CHECK ME KEY */         01091400
*    THEN                                                               01091500
*      DO;                                                              01091600
*        IF XDEREGENDTIME=''                 /* CHECK XVARIABLE */      01091700
*          THEN                                                         01091800
*            DO;                             /* VALID ME KEY */         01091900
*              XDEREGENDTIME='ENDTIME64';    /* SET XVAR1 */            01092000
*            END;                                                       01092100
*      END;                                                             01092200
*/*PD.KMEKY06 NAME, OPT OUTPUT, ME KEYS -ME KEY DEFAULT--------------*/ 01092300
*  IF XDEREGENDTIME=''                       /* CHECK XVARIABLE */      01092400
*    THEN                                                               01092500
*      DO;                                                              01092600
*        XDEREGENDTIME='ENDTIME';                                       01092700
*        ZC='ON';                            /* DEFAULT FLAG ON */      01092800
*      END;                                                             01092900
*/*PD.KMEKY10 NAME, OPT OUTPUT, ME KEYS -START-----------------------*/ 01093000
*  IF XDEREGENDTIME='ENDTIME'                /* CHECK FOR ME KEY */     01093100
*    THEN                                                               01093200
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01093300
*/*PD.KMEKY09 NAME, OPT OUTPUT, ME KEYS -END-------------------------*/ 01093400
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01093500
*/*PD.KMEKY10 NAME, OPT OUTPUT, ME KEYS -START-----------------------*/ 01093600
*  IF XDEREGENDTIME='ENDTIME64'              /* CHECK FOR ME KEY */     01093700
*    THEN                                                               01093800
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01093900
*/*PD.KMEKY11 NAME, OPT OUTPUT, ME KEYS -END-------------------------*/ 01094000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01094100
*/*PD.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01094200
*  XDEREGENDDATA='';                         /* RESET XVARIABLE */      01094300
*  IF ENDDATA^=''                            /* CHECK ME KEY */         01094400
*    THEN                                                               01094500
*      DO;                                   /* VALID ME KEY */         01094600
*        XDEREGENDDATA='ENDDATA';            /* SET XVARIABLE */        01094700
*      END;                                                             01094800
*/*PD.KMEKY02 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01094900
*  IF ENDDATA64^=''                          /* CHECK ME KEY */         01095000
*    THEN                                                               01095100
*      DO;                                                              01095200
*        IF XDEREGENDDATA=''                 /* CHECK XVARIABLE */      01095300
*          THEN                                                         01095400
*            DO;                             /* VALID ME KEY */         01095500
*              XDEREGENDDATA='ENDDATA64';    /* SET XVAR1 */            01095600
*            END;                                                       01095700
*      END;                                                             01095800
*/*PD.KMEKY06 NAME, OPT OUTPUT, ME KEYS -ME KEY DEFAULT--------------*/ 01095900
*  IF XDEREGENDDATA=''                       /* CHECK XVARIABLE */      01096000
*    THEN                                                               01096100
*      DO;                                                              01096200
*        XDEREGENDDATA='ENDDATA';                                       01096300
*        ZC='ON';                            /* DEFAULT FLAG ON */      01096400
*      END;                                                             01096500
*/*PD.KMEKY10 NAME, OPT OUTPUT, ME KEYS -START-----------------------*/ 01096600
*  IF XDEREGENDDATA='ENDDATA'                /* CHECK FOR ME KEY */     01096700
*    THEN                                                               01096800
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01096900
*/*PD.KMEKY09 NAME, OPT OUTPUT, ME KEYS -END-------------------------*/ 01097000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01097100
*/*PD.KMEKY10 NAME, OPT OUTPUT, ME KEYS -START-----------------------*/ 01097200
*  IF XDEREGENDDATA='ENDDATA64'              /* CHECK FOR ME KEY */     01097300
*    THEN                                                               01097400
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01097500
*/*PD.KMEKY11 NAME, OPT OUTPUT, ME KEYS -END-------------------------*/ 01097600
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01097700
*/*PD.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01097800
*  XBEGINPRODNAME='';                        /* RESET XVARIABLE */      01097900
*  IF PRODOWNER^=''                          /* CHECK ME KEY */         01098000
*    THEN                                                               01098100
*      DO;                                   /* VALID ME KEY */         01098200
*        XBEGINPRODNAME='PRODOWNER';         /* SET XVARIABLE */        01098300
*      END;                                                             01098400
*/*PD.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01098500
*  IF PRTOKEN^=''                            /* CHECK ME KEY */         01098600
*    THEN                                                               01098700
*      DO;                                                              01098800
*        IF XBEGINPRODNAME=''                /* CHECK XVARIABLE */      01098900
*          THEN                                                         01099000
*            DO;                             /* VALID ME KEY */         01099100
*              XBEGINPRODNAME='PRTOKEN';     /* SET XVAR1 */            01099200
*            END;                                                       01099300
*      END;                                                             01099400
*/*PD.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01099500
*  IF PRTOKEN64^=''                          /* CHECK ME KEY */         01099600
*    THEN                                                               01099700
*      DO;                                                              01099800
*        IF XBEGINPRODNAME=''                /* CHECK XVARIABLE */      01099900
*          THEN                                                         01100000
*            DO;                             /* VALID ME KEY */         01100100
*              XBEGINPRODNAME='PRTOKEN64';   /* SET XVAR1 */            01100200
*            END;                                                       01100300
*      END;                                                             01100400
*/*PD.KMEKY07 NAME, RQD INPUT, ME KEYS -ME KEY DEFAULT---------------*/ 01100500
*  IF XBEGINPRODNAME=''                      /* CHECK XVARIABLE */      01100600
*    THEN                                                               01100700
*      DO;                                                              01100800
*        XBEGINPRODNAME='PRODOWNER';                                    01100900
*        ZC='ON';                            /* DEFAULT FLAG ON */      01101000
*      END;                                                             01101100
*/*PD.KMEKY10 NAME, RQD INPUT, ME KEYS -START------------------------*/ 01101200
*  IF XBEGINPRODNAME='PRODOWNER'             /* CHECK FOR ME KEY */     01101300
*    THEN                                                               01101400
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01101500
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01101600
*  XPRODVERS='';                                                        01101700
*  IF PRODVERS(1)=''                                                    01101800
*    THEN                                                               01101900
*      DO;                                                              01102000
*        XPRODVERS='NONE';                   /* SET DEFAULT */          01102100
*        ZC='ON';                            /* DEFAULT FLAG ON */      01102200
*      END;                                                             01102300
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 01102400
*  IF XPRODVERS^=''                                                     01102500
*    THEN DO;                                                           01102600
*      ANS('/* PRODVERS('!!                                             01102700
*          XPRODVERS!!                                                  01102800
*          ')*/')                                                       01102900
*          NORESCAN COL(MACLMAR+5);                                     01103000
*      XPRODVERS = '';                                                  01103100
*    END;                                                               01103200
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01103300
*  XPRODQUAL='';                                                        01103400
*  IF PRODQUAL(1)=''                                                    01103500
*    THEN                                                               01103600
*      DO;                                                              01103700
*        XPRODQUAL='NONE';                   /* SET DEFAULT */          01103800
*        ZC='ON';                            /* DEFAULT FLAG ON */      01103900
*      END;                                                             01104000
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 01104100
*  IF XPRODQUAL^=''                                                     01104200
*    THEN DO;                                                           01104300
*      ANS('/* PRODQUAL('!!                                             01104400
*          XPRODQUAL!!                                                  01104500
*          ')*/')                                                       01104600
*          NORESCAN COL(MACLMAR+5);                                     01104700
*      XPRODQUAL = '';                                                  01104800
*    END;                                                               01104900
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01105000
*  XPRODID='';                                                          01105100
*  IF PRODID(1)=''                                                      01105200
*    THEN                                                               01105300
*      DO;                                                              01105400
*        XPRODID='NONE';                     /* SET DEFAULT */          01105500
*        ZC='ON';                            /* DEFAULT FLAG ON */      01105600
*      END;                                                             01105700
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 01105800
*  IF XPRODID^=''                                                       01105900
*    THEN DO;                                                           01106000
*      ANS('/* PRODID('!!                                               01106100
*          XPRODID!!                                                    01106200
*          ')*/')                                                       01106300
*          NORESCAN COL(MACLMAR+5);                                     01106400
*      XPRODID = '';                                                    01106500
*    END;                                                               01106600
*/*PD.KMEKY09 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 01106700
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01106800
*/*PD.KMEKY10 NAME, RQD INPUT, ME KEYS -START------------------------*/ 01106900
*  IF XBEGINPRODNAME='PRTOKEN'               /* CHECK FOR ME KEY */     01107000
*    THEN                                                               01107100
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01107200
*/*PD.KMEKY09 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 01107300
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01107400
*/*PD.KMEKY10 NAME, RQD INPUT, ME KEYS -START------------------------*/ 01107500
*  IF XBEGINPRODNAME='PRTOKEN64'             /* CHECK FOR ME KEY */     01107600
*    THEN                                                               01107700
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01107800
*/*PD.KMEKY11 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 01107900
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01108000
*/*PD.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01108100
*  XDUMMY2='';                               /* RESET XVARIABLE */      01108200
*  IF BEGTIME^=''                            /* CHECK ME KEY */         01108300
*    THEN                                                               01108400
*      DO;                                   /* VALID ME KEY */         01108500
*        XDUMMY2='BEGTIME';                  /* SET XVARIABLE */        01108600
*      END;                                                             01108700
*/*PD.KMEKY02 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01108800
*  IF BEGTIME64^=''                          /* CHECK ME KEY */         01108900
*    THEN                                                               01109000
*      DO;                                                              01109100
*        IF XDUMMY2=''                       /* CHECK XVARIABLE */      01109200
*          THEN                                                         01109300
*            DO;                             /* VALID ME KEY */         01109400
*              XDUMMY2='BEGTIME64';          /* SET XVAR1 */            01109500
*            END;                                                       01109600
*      END;                                                             01109700
*/*PD.KMEKY06 NAME, OPT OUTPUT, ME KEYS -ME KEY DEFAULT--------------*/ 01109800
*  IF XDUMMY2=''                             /* CHECK XVARIABLE */      01109900
*    THEN                                                               01110000
*      DO;                                                              01110100
*        XDUMMY2='BEGTIME';                                             01110200
*        ZC='ON';                            /* DEFAULT FLAG ON */      01110300
*      END;                                                             01110400
*/*PD.KMEKY10 NAME, OPT OUTPUT, ME KEYS -START-----------------------*/ 01110500
*  IF XDUMMY2='BEGTIME'                      /* CHECK FOR ME KEY */     01110600
*    THEN                                                               01110700
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01110800
*/*PD.KMEKY09 NAME, OPT OUTPUT, ME KEYS -END-------------------------*/ 01110900
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01111000
*/*PD.KMEKY10 NAME, OPT OUTPUT, ME KEYS -START-----------------------*/ 01111100
*  IF XDUMMY2='BEGTIME64'                    /* CHECK FOR ME KEY */     01111200
*    THEN                                                               01111300
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01111400
*/*PD.KMEKY11 NAME, OPT OUTPUT, ME KEYS -END-------------------------*/ 01111500
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01111600
*/*PD.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01111700
*  IF REQUEST(1)='FUNCTIONDATA'              /* CHECK FOR KEYWORD */    01111800
*    THEN                                                               01111900
*      DO;                                                              01112000
*/*PD.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01112100
*  XDATAPRODNAME='';                         /* RESET XVARIABLE */      01112200
*  IF PRODOWNER^=''                          /* CHECK ME KEY */         01112300
*    THEN                                                               01112400
*      DO;                                   /* VALID ME KEY */         01112500
*        XDATAPRODNAME='PRODOWNER';          /* SET XVARIABLE */        01112600
*      END;                                                             01112700
*/*PD.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01112800
*  IF PRTOKEN^=''                            /* CHECK ME KEY */         01112900
*    THEN                                                               01113000
*      DO;                                                              01113100
*        IF XDATAPRODNAME=''                 /* CHECK XVARIABLE */      01113200
*          THEN                                                         01113300
*            DO;                             /* VALID ME KEY */         01113400
*              XDATAPRODNAME='PRTOKEN';      /* SET XVAR1 */            01113500
*            END;                                                       01113600
*      END;                                                             01113700
*/*PD.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01113800
*  IF PRTOKEN64^=''                          /* CHECK ME KEY */         01113900
*    THEN                                                               01114000
*      DO;                                                              01114100
*        IF XDATAPRODNAME=''                 /* CHECK XVARIABLE */      01114200
*          THEN                                                         01114300
*            DO;                             /* VALID ME KEY */         01114400
*              XDATAPRODNAME='PRTOKEN64';    /* SET XVAR1 */            01114500
*            END;                                                       01114600
*      END;                                                             01114700
*/*PD.KMEKY07 NAME, RQD INPUT, ME KEYS -ME KEY DEFAULT---------------*/ 01114800
*  IF XDATAPRODNAME=''                       /* CHECK XVARIABLE */      01114900
*    THEN                                                               01115000
*      DO;                                                              01115100
*        XDATAPRODNAME='PRODOWNER';                                     01115200
*        ZC='ON';                            /* DEFAULT FLAG ON */      01115300
*      END;                                                             01115400
*/*PD.KMEKY10 NAME, RQD INPUT, ME KEYS -START------------------------*/ 01115500
*  IF XDATAPRODNAME='PRODOWNER'              /* CHECK FOR ME KEY */     01115600
*    THEN                                                               01115700
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01115800
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01115900
*  XPRODVERS='';                                                        01116000
*  IF PRODVERS(1)=''                                                    01116100
*    THEN                                                               01116200
*      DO;                                                              01116300
*        XPRODVERS='NONE';                   /* SET DEFAULT */          01116400
*        ZC='ON';                            /* DEFAULT FLAG ON */      01116500
*      END;                                                             01116600
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 01116700
*  IF XPRODVERS^=''                                                     01116800
*    THEN DO;                                                           01116900
*      ANS('/* PRODVERS('!!                                             01117000
*          XPRODVERS!!                                                  01117100
*          ')*/')                                                       01117200
*          NORESCAN COL(MACLMAR+5);                                     01117300
*      XPRODVERS = '';                                                  01117400
*    END;                                                               01117500
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01117600
*  XPRODQUAL='';                                                        01117700
*  IF PRODQUAL(1)=''                                                    01117800
*    THEN                                                               01117900
*      DO;                                                              01118000
*        XPRODQUAL='NONE';                   /* SET DEFAULT */          01118100
*        ZC='ON';                            /* DEFAULT FLAG ON */      01118200
*      END;                                                             01118300
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 01118400
*  IF XPRODQUAL^=''                                                     01118500
*    THEN DO;                                                           01118600
*      ANS('/* PRODQUAL('!!                                             01118700
*          XPRODQUAL!!                                                  01118800
*          ')*/')                                                       01118900
*          NORESCAN COL(MACLMAR+5);                                     01119000
*      XPRODQUAL = '';                                                  01119100
*    END;                                                               01119200
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01119300
*  XPRODID='';                                                          01119400
*  IF PRODID(1)=''                                                      01119500
*    THEN                                                               01119600
*      DO;                                                              01119700
*        XPRODID='NONE';                     /* SET DEFAULT */          01119800
*        ZC='ON';                            /* DEFAULT FLAG ON */      01119900
*      END;                                                             01120000
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 01120100
*  IF XPRODID^=''                                                       01120200
*    THEN DO;                                                           01120300
*      ANS('/* PRODID('!!                                               01120400
*          XPRODID!!                                                    01120500
*          ')*/')                                                       01120600
*          NORESCAN COL(MACLMAR+5);                                     01120700
*      XPRODID = '';                                                    01120800
*    END;                                                               01120900
*/*PD.KMEKY09 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 01121000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01121100
*/*PD.KMEKY10 NAME, RQD INPUT, ME KEYS -START------------------------*/ 01121200
*  IF XDATAPRODNAME='PRTOKEN'                /* CHECK FOR ME KEY */     01121300
*    THEN                                                               01121400
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01121500
*/*PD.KMEKY09 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 01121600
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01121700
*/*PD.KMEKY10 NAME, RQD INPUT, ME KEYS -START------------------------*/ 01121800
*  IF XDATAPRODNAME='PRTOKEN64'              /* CHECK FOR ME KEY */     01121900
*    THEN                                                               01122000
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01122100
*/*PD.KMEKY11 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 01122200
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01122300
*/*PD.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01122400
*  XDUMMY3='';                               /* RESET XVARIABLE */      01122500
*  IF DATA^=''                               /* CHECK ME KEY */         01122600
*    THEN                                                               01122700
*      DO;                                   /* VALID ME KEY */         01122800
*        XDUMMY3='DATA';                     /* SET XVARIABLE */        01122900
*      END;                                                             01123000
*/*PD.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01123100
*  IF DATA64^=''                             /* CHECK ME KEY */         01123200
*    THEN                                                               01123300
*      DO;                                                              01123400
*        IF XDUMMY3=''                       /* CHECK XVARIABLE */      01123500
*          THEN                                                         01123600
*            DO;                             /* VALID ME KEY */         01123700
*              XDUMMY3='DATA64';             /* SET XVAR1 */            01123800
*            END;                                                       01123900
*      END;                                                             01124000
*/*PD.KMEKY07 NAME, RQD INPUT, ME KEYS -ME KEY DEFAULT---------------*/ 01124100
*  IF XDUMMY3=''                             /* CHECK XVARIABLE */      01124200
*    THEN                                                               01124300
*      DO;                                                              01124400
*        XDUMMY3='DATA';                                                01124500
*        ZC='ON';                            /* DEFAULT FLAG ON */      01124600
*      END;                                                             01124700
*/*PD.KMEKY10 NAME, RQD INPUT, ME KEYS -START------------------------*/ 01124800
*  IF XDUMMY3='DATA'                         /* CHECK FOR ME KEY */     01124900
*    THEN                                                               01125000
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01125100
*/*PD.KMEKY09 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 01125200
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01125300
*/*PD.KMEKY10 NAME, RQD INPUT, ME KEYS -START------------------------*/ 01125400
*  IF XDUMMY3='DATA64'                       /* CHECK FOR ME KEY */     01125500
*    THEN                                                               01125600
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01125700
*/*PD.KMEKY11 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 01125800
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01125900
*/*PD.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 01126000
*  XFORMAT='CPUTIME';                        /* RESET XVARIABLE */      01126100
*  IF FORMAT(1)=''                                                      01126200
*    THEN                                                               01126300
*        ZC='ON';                            /* DEFAULT FLAG ON */      01126400
*  IF FORMAT(1)='CPUTIME'                                               01126500
*    THEN                                                               01126600
*        XFORMAT='';                         /* SET XVARIABLE */        01126700
*  IF FORMAT(1)='BINARY'                                                01126800
*    THEN                                                               01126900
*        XFORMAT='';                         /* SET XVARIABLE */        01127000
*  IF FORMAT(1)='FLOAT'                                                 01127100
*    THEN                                                               01127200
*        XFORMAT='';                         /* SET XVARIABLE */        01127300
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 01127400
*  IF XFORMAT^=''                                                       01127500
*    THEN DO;                                                           01127600
*      ANS('/* FORMAT('!!                                               01127700
*          XFORMAT!!                                                    01127800
*          ')*/')                                                       01127900
*          NORESCAN COL(MACLMAR+5);                                     01128000
*      XFORMAT = '';                                                    01128100
*    END;                                                               01128200
*/*PD.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01128300
*  XDUMMY4='';                               /* RESET XVARIABLE */      01128400
*  IF CURRENTDATA^=''                        /* CHECK ME KEY */         01128500
*    THEN                                                               01128600
*      DO;                                   /* VALID ME KEY */         01128700
*        XDUMMY4='CURRENTDATA';              /* SET XVARIABLE */        01128800
*      END;                                                             01128900
*/*PD.KMEKY02 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01129000
*  IF CURRENTDATA64^=''                      /* CHECK ME KEY */         01129100
*    THEN                                                               01129200
*      DO;                                                              01129300
*        IF XDUMMY4=''                       /* CHECK XVARIABLE */      01129400
*          THEN                                                         01129500
*            DO;                             /* VALID ME KEY */         01129600
*              XDUMMY4='CURRENTDATA64';      /* SET XVAR1 */            01129700
*            END;                                                       01129800
*      END;                                                             01129900
*/*PD.KMEKY06 NAME, OPT OUTPUT, ME KEYS -ME KEY DEFAULT--------------*/ 01130000
*  IF XDUMMY4=''                             /* CHECK XVARIABLE */      01130100
*    THEN                                                               01130200
*      DO;                                                              01130300
*        XDUMMY4='CURRENTDATA';                                         01130400
*        ZC='ON';                            /* DEFAULT FLAG ON */      01130500
*      END;                                                             01130600
*/*PD.KMEKY10 NAME, OPT OUTPUT, ME KEYS -START-----------------------*/ 01130700
*  IF XDUMMY4='CURRENTDATA'                  /* CHECK FOR ME KEY */     01130800
*    THEN                                                               01130900
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01131000
*/*PD.KMEKY09 NAME, OPT OUTPUT, ME KEYS -END-------------------------*/ 01131100
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01131200
*/*PD.KMEKY10 NAME, OPT OUTPUT, ME KEYS -START-----------------------*/ 01131300
*  IF XDUMMY4='CURRENTDATA64'                /* CHECK FOR ME KEY */     01131400
*    THEN                                                               01131500
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01131600
*/*PD.KMEKY11 NAME, OPT OUTPUT, ME KEYS -END-------------------------*/ 01131700
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01131800
*/*PD.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01131900
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     01132000
*/*PD.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01132100
*  XENDPRODNAME='';                          /* RESET XVARIABLE */      01132200
*  IF PRODOWNER^=''                          /* CHECK ME KEY */         01132300
*    THEN                                                               01132400
*      DO;                                   /* VALID ME KEY */         01132500
*        XENDPRODNAME='PRODOWNER';           /* SET XVARIABLE */        01132600
*      END;                                                             01132700
*/*PD.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01132800
*  IF PRTOKEN^=''                            /* CHECK ME KEY */         01132900
*    THEN                                                               01133000
*      DO;                                                              01133100
*        IF XENDPRODNAME=''                  /* CHECK XVARIABLE */      01133200
*          THEN                                                         01133300
*            DO;                             /* VALID ME KEY */         01133400
*              XENDPRODNAME='PRTOKEN';       /* SET XVAR1 */            01133500
*            END;                                                       01133600
*      END;                                                             01133700
*/*PD.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01133800
*  IF PRTOKEN64^=''                          /* CHECK ME KEY */         01133900
*    THEN                                                               01134000
*      DO;                                                              01134100
*        IF XENDPRODNAME=''                  /* CHECK XVARIABLE */      01134200
*          THEN                                                         01134300
*            DO;                             /* VALID ME KEY */         01134400
*              XENDPRODNAME='PRTOKEN64';     /* SET XVAR1 */            01134500
*            END;                                                       01134600
*      END;                                                             01134700
*/*PD.KMEKY07 NAME, RQD INPUT, ME KEYS -ME KEY DEFAULT---------------*/ 01134800
*  IF XENDPRODNAME=''                        /* CHECK XVARIABLE */      01134900
*    THEN                                                               01135000
*      DO;                                                              01135100
*        XENDPRODNAME='PRODOWNER';                                      01135200
*        ZC='ON';                            /* DEFAULT FLAG ON */      01135300
*      END;                                                             01135400
*/*PD.KMEKY10 NAME, RQD INPUT, ME KEYS -START------------------------*/ 01135500
*  IF XENDPRODNAME='PRODOWNER'               /* CHECK FOR ME KEY */     01135600
*    THEN                                                               01135700
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01135800
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01135900
*  XPRODVERS='';                                                        01136000
*  IF PRODVERS(1)=''                                                    01136100
*    THEN                                                               01136200
*      DO;                                                              01136300
*        XPRODVERS='NONE';                   /* SET DEFAULT */          01136400
*        ZC='ON';                            /* DEFAULT FLAG ON */      01136500
*      END;                                                             01136600
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 01136700
*  IF XPRODVERS^=''                                                     01136800
*    THEN DO;                                                           01136900
*      ANS('/* PRODVERS('!!                                             01137000
*          XPRODVERS!!                                                  01137100
*          ')*/')                                                       01137200
*          NORESCAN COL(MACLMAR+5);                                     01137300
*      XPRODVERS = '';                                                  01137400
*    END;                                                               01137500
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01137600
*  XPRODQUAL='';                                                        01137700
*  IF PRODQUAL(1)=''                                                    01137800
*    THEN                                                               01137900
*      DO;                                                              01138000
*        XPRODQUAL='NONE';                   /* SET DEFAULT */          01138100
*        ZC='ON';                            /* DEFAULT FLAG ON */      01138200
*      END;                                                             01138300
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 01138400
*  IF XPRODQUAL^=''                                                     01138500
*    THEN DO;                                                           01138600
*      ANS('/* PRODQUAL('!!                                             01138700
*          XPRODQUAL!!                                                  01138800
*          ')*/')                                                       01138900
*          NORESCAN COL(MACLMAR+5);                                     01139000
*      XPRODQUAL = '';                                                  01139100
*    END;                                                               01139200
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01139300
*  XPRODID='';                                                          01139400
*  IF PRODID(1)=''                                                      01139500
*    THEN                                                               01139600
*      DO;                                                              01139700
*        XPRODID='NONE';                     /* SET DEFAULT */          01139800
*        ZC='ON';                            /* DEFAULT FLAG ON */      01139900
*      END;                                                             01140000
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 01140100
*  IF XPRODID^=''                                                       01140200
*    THEN DO;                                                           01140300
*      ANS('/* PRODID('!!                                               01140400
*          XPRODID!!                                                    01140500
*          ')*/')                                                       01140600
*          NORESCAN COL(MACLMAR+5);                                     01140700
*      XPRODID = '';                                                    01140800
*    END;                                                               01140900
*/*PD.KMEKY09 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 01141000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01141100
*/*PD.KMEKY10 NAME, RQD INPUT, ME KEYS -START------------------------*/ 01141200
*  IF XENDPRODNAME='PRTOKEN'                 /* CHECK FOR ME KEY */     01141300
*    THEN                                                               01141400
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01141500
*/*PD.KMEKY09 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 01141600
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01141700
*/*PD.KMEKY10 NAME, RQD INPUT, ME KEYS -START------------------------*/ 01141800
*  IF XENDPRODNAME='PRTOKEN64'               /* CHECK FOR ME KEY */     01141900
*    THEN                                                               01142000
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01142100
*/*PD.KMEKY11 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 01142200
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01142300
*/*PD.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01142400
*  XDUMMY5='';                               /* RESET XVARIABLE */      01142500
*  IF ENDTIME^=''                            /* CHECK ME KEY */         01142600
*    THEN                                                               01142700
*      DO;                                   /* VALID ME KEY */         01142800
*        XDUMMY5='ENDTIME';                  /* SET XVARIABLE */        01142900
*      END;                                                             01143000
*/*PD.KMEKY02 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01143100
*  IF ENDTIME64^=''                          /* CHECK ME KEY */         01143200
*    THEN                                                               01143300
*      DO;                                                              01143400
*        IF XDUMMY5=''                       /* CHECK XVARIABLE */      01143500
*          THEN                                                         01143600
*            DO;                             /* VALID ME KEY */         01143700
*              XDUMMY5='ENDTIME64';          /* SET XVAR1 */            01143800
*            END;                                                       01143900
*      END;                                                             01144000
*/*PD.KMEKY06 NAME, OPT OUTPUT, ME KEYS -ME KEY DEFAULT--------------*/ 01144100
*  IF XDUMMY5=''                             /* CHECK XVARIABLE */      01144200
*    THEN                                                               01144300
*      DO;                                                              01144400
*        XDUMMY5='ENDTIME';                                             01144500
*        ZC='ON';                            /* DEFAULT FLAG ON */      01144600
*      END;                                                             01144700
*/*PD.KMEKY10 NAME, OPT OUTPUT, ME KEYS -START-----------------------*/ 01144800
*  IF XDUMMY5='ENDTIME'                      /* CHECK FOR ME KEY */     01144900
*    THEN                                                               01145000
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01145100
*/*PD.KMEKY09 NAME, OPT OUTPUT, ME KEYS -END-------------------------*/ 01145200
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01145300
*/*PD.KMEKY10 NAME, OPT OUTPUT, ME KEYS -START-----------------------*/ 01145400
*  IF XDUMMY5='ENDTIME64'                    /* CHECK FOR ME KEY */     01145500
*    THEN                                                               01145600
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01145700
*/*PD.KMEKY11 NAME, OPT OUTPUT, ME KEYS -END-------------------------*/ 01145800
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01145900
*/*PD.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01146000
*  XDUMMY6='';                               /* RESET XVARIABLE */      01146100
*  IF ENDDATA^=''                            /* CHECK ME KEY */         01146200
*    THEN                                                               01146300
*      DO;                                   /* VALID ME KEY */         01146400
*        XDUMMY6='ENDDATA';                  /* SET XVARIABLE */        01146500
*      END;                                                             01146600
*/*PD.KMEKY02 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01146700
*  IF ENDDATA64^=''                          /* CHECK ME KEY */         01146800
*    THEN                                                               01146900
*      DO;                                                              01147000
*        IF XDUMMY6=''                       /* CHECK XVARIABLE */      01147100
*          THEN                                                         01147200
*            DO;                             /* VALID ME KEY */         01147300
*              XDUMMY6='ENDDATA64';          /* SET XVAR1 */            01147400
*            END;                                                       01147500
*      END;                                                             01147600
*/*PD.KMEKY06 NAME, OPT OUTPUT, ME KEYS -ME KEY DEFAULT--------------*/ 01147700
*  IF XDUMMY6=''                             /* CHECK XVARIABLE */      01147800
*    THEN                                                               01147900
*      DO;                                                              01148000
*        XDUMMY6='ENDDATA';                                             01148100
*        ZC='ON';                            /* DEFAULT FLAG ON */      01148200
*      END;                                                             01148300
*/*PD.KMEKY10 NAME, OPT OUTPUT, ME KEYS -START-----------------------*/ 01148400
*  IF XDUMMY6='ENDDATA'                      /* CHECK FOR ME KEY */     01148500
*    THEN                                                               01148600
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01148700
*/*PD.KMEKY09 NAME, OPT OUTPUT, ME KEYS -END-------------------------*/ 01148800
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01148900
*/*PD.KMEKY10 NAME, OPT OUTPUT, ME KEYS -START-----------------------*/ 01149000
*  IF XDUMMY6='ENDDATA64'                    /* CHECK FOR ME KEY */     01149100
*    THEN                                                               01149200
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01149300
*/*PD.KMEKY11 NAME, OPT OUTPUT, ME KEYS -END-------------------------*/ 01149400
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01149500
*/*PD.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01149600
*  IF LINKAGE(1)=''                                                     01149700
*    THEN                                                               01149800
*      DO;                                                              01149900
*        ANS('/*LINKAGE(SVC)*/')                                        01150000
*            NORESCAN COL(MACLMAR+5);                                   01150100
*        ZC='ON';                            /* DEFAULT FLAG ON */      01150200
*      END;                                                             01150300
*/*PD.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01150400
*  IF LINKAGE(1)='BRANCH'                    /* CHECK FOR KEYWORD */    01150500
*    THEN                                                               01150600
*      DO;                                                              01150700
*/*PD.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01150800
*  IF VALIDATE(1)=''                                                    01150900
*    THEN                                                               01151000
*      DO;                                                              01151100
*        ANS('/*VALIDATE(YES)*/')                                       01151200
*            NORESCAN COL(MACLMAR+5);                                   01151300
*        ZC='ON';                            /* DEFAULT FLAG ON */      01151400
*      END;                                                             01151500
*/*PD.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01151600
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     01151700
*/*PD.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01151800
*  IF FBFE(1)=''                                                        01151900
*    THEN                                                               01152000
*      DO;                                                              01152100
*        ANS('/*FBFE(NO)*/')                                            01152200
*            NORESCAN COL(MACLMAR+5);                                   01152300
*        ZC='ON';                            /* DEFAULT FLAG ON */      01152400
*      END;                                                             01152500
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 01152600
*  IF PLISTVER=''                                                       01152700
*    THEN DO;                                                           01152800
*      ANS('/* PLISTVER('!!                                             01152900
*          CHAR(XPLISTVER)!!                                            01153000
*          ')*/')                                                       01153100
*          NORESCAN COL(MACLMAR+5);                                     01153200
*    END;                                                               01153300
*  IF ZC='OFF'                               /*NO DEFAULTS TAKEN */     01153400
*    THEN                                                               01153500
*      ANS('/* NONE. */')                                               01153600
*         NORESCAN COL(MACLMAR+5);                                      01153700
*/*PD.P04 END DEFAULT ECHO ------------------------------------------*/ 01153800
*      END;                                                             01153900
*/********************************************************************/ 01154000
*/*PB.SYSL01 INVOKE SP LEVEL AND SYSTEM STATE MACROS                 */ 01154100
*/********************************************************************/ 01154200
*  DCL SYSSPLV CHAR EXTERNAL; DEACT SYSSPLV;/* SPLEVEL 1,2,3         */ 01154300
*  DCL SYSASCE CHAR EXTERNAL; DEACT SYSASCE;/* STATE ANY P AR */        01154400
*  DCL SYSAM64 CHAR EXTERNAL; DEACT SYSAM64;                            01154500
*  DCL SYSALVL FIXED EXTERNAL; DEACT SYSALVL;                           01154600
*                                                                       01154700
*  IF SYSASCE=''                                                        01154800
*    THEN                                                               01154900
*      DO;                                                              01155000
*        IF SYSSPLV=''                                                  01155100
*          THEN                                                         01155200
*            ANS('?SPLEVEL  (TEST);') COL(MACLMAR);                     01155300
*        IF SYSSPLV^='1' & SYSSPLV^='2'                                 01155400
*          THEN                                                         01155500
*            ANS('?SYSSTATE (TEST);') COL(MACLMAR);                     01155600
*          ELSE                                                         01155700
*            SYSASCE='P';                    /* SYSSTATE DEFAULT*/      01155800
*      END;                                                             01155900
*/********************************************************************/ 01156000
*/***PG.P01 FULL MACRO SYNTAX CHECKING                               */ 01156100
*/********************************************************************/ 01156200
*/*PG.P02 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 01156300
*  IF XMF^='L'                                                          01156400
*     & XMFSCK='COMPLETE'                                               01156500
*    THEN                                                               01156600
*      DO;                                   /* FULL SYNTAX CHECK */    01156700
*/*PG.P03 EXCESSIVE POSITIONAL ARGUMENTS-----------------------------*/ 01156800
*  IF NUMBER(MACLIST)>0                      /* CHECK POSITIONALS */    01156900
*    THEN                                                               01157000
*      DO;                                                              01157100
*        ZMS=' 8, POSITIONAL ARGUMENT(S),'!! /**PPOSP* MSG*/            01157200
*            ' "'!!MACLIST!!'"'!!                                       01157300
*            ' CANNOT BE USED.'!!                                       01157400
*            ' NO POSITIONAL ARGUMENTS'!!                               01157500
*            ' ARE ALLOWED.';                                           01157600
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01157700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01157800
*        ZMACRET=8;                          /* MACRO ERROR */          01157900
*      END;                                                             01158000
*/*PG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01158100
*  XREQUEST='';                                                         01158200
*/*PG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01158300
*  IF REQUEST(1)='REGISTER'                  /* CHECK FOR KEYWORD */    01158400
*     ! REQUEST(1)=''                        /* CHECK FOR NULL */       01158500
*    THEN                                                               01158600
*      DO;                                                              01158700
*        XREQUEST='REGISTER';                /* SET XVARIABLE */        01158800
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    01158900
*          THEN                                                         01159000
*            DO;                                                        01159100
*              ZMS=' 8, "REQUEST'!!          /**KPOSP* MSG*/            01159200
*                  REQUEST!!                                            01159300
*                  '" "REQUEST"'!!                                      01159400
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01159500
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01159600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01159700
*              ZMACRET=8;                    /* MACRO ERROR */          01159800
*            END;                                                       01159900
*/*PG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01160000
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 01160100
*        IF ENDTIME^=''                      /* CHECK FOR KEY */        01160200
*          THEN                                                         01160300
*            ZCVAL=ZCVAL!!',ENDTIME';        /* INCORRECT KEY USED */   01160400
*        IF ENDTIME64^=''                    /* CHECK FOR KEY */        01160500
*          THEN                                                         01160600
*            ZCVAL=ZCVAL!!',ENDTIME64';      /* INCORRECT KEY USED */   01160700
*        IF ENDDATA^=''                      /* CHECK FOR KEY */        01160800
*          THEN                                                         01160900
*            ZCVAL=ZCVAL!!',ENDDATA';        /* INCORRECT KEY USED */   01161000
*        IF ENDDATA64^=''                    /* CHECK FOR KEY */        01161100
*          THEN                                                         01161200
*            ZCVAL=ZCVAL!!',ENDDATA64';      /* INCORRECT KEY USED */   01161300
*        IF BEGTIME^=''                      /* CHECK FOR KEY */        01161400
*          THEN                                                         01161500
*            ZCVAL=ZCVAL!!',BEGTIME';        /* INCORRECT KEY USED */   01161600
*        IF BEGTIME64^=''                    /* CHECK FOR KEY */        01161700
*          THEN                                                         01161800
*            ZCVAL=ZCVAL!!',BEGTIME64';      /* INCORRECT KEY USED */   01161900
*        IF DATA^=''                         /* CHECK FOR KEY */        01162000
*          THEN                                                         01162100
*            ZCVAL=ZCVAL!!',DATA';           /* INCORRECT KEY USED */   01162200
*        IF DATA64^=''                       /* CHECK FOR KEY */        01162300
*          THEN                                                         01162400
*            ZCVAL=ZCVAL!!',DATA64';         /* INCORRECT KEY USED */   01162500
*        IF FORMAT^=''                       /* CHECK FOR KEY */        01162600
*          THEN                                                         01162700
*            ZCVAL=ZCVAL!!',FORMAT';         /* INCORRECT KEY USED */   01162800
*        IF CURRENTDATA^=''                  /* CHECK FOR KEY */        01162900
*          THEN                                                         01163000
*            ZCVAL=ZCVAL!!',CURRENTDATA';    /* INCORRECT KEY USED */   01163100
*        IF CURRENTDATA64^=''                /* CHECK FOR KEY */        01163200
*          THEN                                                         01163300
*            ZCVAL=ZCVAL!!',CURRENTDATA64';  /* INCORRECT KEY USED */   01163400
*        IF ZCVAL^=''                                                   01163500
*          THEN                                                         01163600
*            DO;                             /* INCORRECT KEYS USED */  01163700
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            01163800
*              ZMS=' 8, "REQUEST'!!          /**KMEIP* MSG*/            01163900
*                  REQUEST!!'"'!!                                       01164000
*                  ' DOES NOT ALLOW THE USE OF THE'!!                   01164100
*                  ' FOLLOWING KEY(S) "'!!                              01164200
*                  ZCVAL!!'".';                                         01164300
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01164400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01164500
*              ZMACRET=8;                    /* MACRO ERROR */          01164600
*            END;                                                       01164700
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01164800
*  IF NUMBER(PRODOWNER)>1                    /* CHECK POSITIONALS */    01164900
*    THEN                                                               01165000
*      DO;                                                              01165100
*        ZMS=' 8, "PRODOWNER'!!              /**KPOSP* MSG*/            01165200
*            PRODOWNER!!                                                01165300
*            '" "PRODOWNER"'!!                                          01165400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01165500
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01165600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01165700
*        ZMACRET=8;                          /* MACRO ERROR */          01165800
*      END;                                                             01165900
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 01166000
*  XPRODOWNER=PRODOWNER(1);                  /* SET XVARIABLE */        01166100
*  IF PRODOWNER(1)=''                        /* CHECK FOR NULL */       01166200
*   THEN                                                                01166300
*    DO;                                     /* KEY IS REQUIRED */      01166400
*        ZXPRODOWNER='';                     /* RESET IN/OUTPUT */      01166500
*        ZMS=' 8,  '!!                                                  01166600
*            ' "PRODOWNER" KEY AND ITS'!!                               01166700
*            ' ARGUMENT ARE REQUIRED.';      /**KRQDP* MSG*/            01166800
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01166900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01167000
*        ZMACRET=8;                          /* MACRO ERROR */          01167100
*    END;                                                               01167200
*  ELSE                                                                 01167300
*    ZXPRODOWNER='INPUT';                    /* SET IN/OUTPUT */        01167400
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01167500
*  IF NUMBER(PRODNAME)>1                     /* CHECK POSITIONALS */    01167600
*    THEN                                                               01167700
*      DO;                                                              01167800
*        ZMS=' 8, "PRODNAME'!!               /**KPOSP* MSG*/            01167900
*            PRODNAME!!                                                 01168000
*            '" "PRODNAME"'!!                                           01168100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01168200
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01168300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01168400
*        ZMACRET=8;                          /* MACRO ERROR */          01168500
*      END;                                                             01168600
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 01168700
*  XPRODNAME=PRODNAME(1);                    /* SET XVARIABLE */        01168800
*  IF PRODNAME(1)=''                         /* CHECK FOR NULL */       01168900
*   THEN                                                                01169000
*    DO;                                     /* KEY IS REQUIRED */      01169100
*        ZXPRODNAME='';                      /* RESET IN/OUTPUT */      01169200
*        ZMS=' 8,  '!!                                                  01169300
*            ' "PRODNAME" KEY AND ITS'!!                                01169400
*            ' ARGUMENT ARE REQUIRED.';      /**KRQDP* MSG*/            01169500
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01169600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01169700
*        ZMACRET=8;                          /* MACRO ERROR */          01169800
*    END;                                                               01169900
*  ELSE                                                                 01170000
*    ZXPRODNAME='INPUT';                     /* SET IN/OUTPUT */        01170100
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01170200
*  IF PRODVERS='PRODVERS' ! PRODVERS='()'    /*CHECK ENTRY*/            01170300
*    THEN                                                               01170400
*      DO;                                                              01170500
*        ZMS=' 8, THE "PRODVERS" KEY'!!                                 01170600
*            ' MUST CONTAIN ONE'!!                                      01170700
*            ' (OR MORE) ARGUMENT(S).';                                 01170800
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01170900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01171000
*        ZMACRET=8;                          /* MACRO ERROR */          01171100
*      END;                                                             01171200
*  IF NUMBER(PRODVERS)>1                     /* CHECK POSITIONALS */    01171300
*    THEN                                                               01171400
*      DO;                                                              01171500
*        ZMS=' 8, "PRODVERS'!!               /**KPOSP* MSG*/            01171600
*            PRODVERS!!                                                 01171700
*            '" "PRODVERS"'!!                                           01171800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01171900
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01172000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01172100
*        ZMACRET=8;                          /* MACRO ERROR */          01172200
*      END;                                                             01172300
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01172400
*  ZXPRODVERS='INPUT';                       /* SET IN/OUTPUT */        01172500
*  XPRODVERS='NONE';                         /* SET DEFAULT */          01172600
*  IF PRODVERS(1)^=''                        /* CHECK FOR NULL */       01172700
*    THEN                                                               01172800
*      XPRODVERS=PRODVERS(1);                /* SET XVARIABLE */        01172900
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01173000
*  IF PRODQUAL='PRODQUAL' ! PRODQUAL='()'    /*CHECK ENTRY*/            01173100
*    THEN                                                               01173200
*      DO;                                                              01173300
*        ZMS=' 8, THE "PRODQUAL" KEY'!!                                 01173400
*            ' MUST CONTAIN ONE'!!                                      01173500
*            ' (OR MORE) ARGUMENT(S).';                                 01173600
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01173700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01173800
*        ZMACRET=8;                          /* MACRO ERROR */          01173900
*      END;                                                             01174000
*  IF NUMBER(PRODQUAL)>1                     /* CHECK POSITIONALS */    01174100
*    THEN                                                               01174200
*      DO;                                                              01174300
*        ZMS=' 8, "PRODQUAL'!!               /**KPOSP* MSG*/            01174400
*            PRODQUAL!!                                                 01174500
*            '" "PRODQUAL"'!!                                           01174600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01174700
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01174800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01174900
*        ZMACRET=8;                          /* MACRO ERROR */          01175000
*      END;                                                             01175100
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01175200
*  ZXPRODQUAL='INPUT';                       /* SET IN/OUTPUT */        01175300
*  XPRODQUAL='NONE';                         /* SET DEFAULT */          01175400
*  IF PRODQUAL(1)^=''                        /* CHECK FOR NULL */       01175500
*    THEN                                                               01175600
*      XPRODQUAL=PRODQUAL(1);                /* SET XVARIABLE */        01175700
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01175800
*  IF PRODID='PRODID' ! PRODID='()'          /*CHECK ENTRY*/            01175900
*    THEN                                                               01176000
*      DO;                                                              01176100
*        ZMS=' 8, THE "PRODID" KEY'!!                                   01176200
*            ' MUST CONTAIN ONE'!!                                      01176300
*            ' (OR MORE) ARGUMENT(S).';                                 01176400
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01176500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01176600
*        ZMACRET=8;                          /* MACRO ERROR */          01176700
*      END;                                                             01176800
*  IF NUMBER(PRODID)>1                       /* CHECK POSITIONALS */    01176900
*    THEN                                                               01177000
*      DO;                                                              01177100
*        ZMS=' 8, "PRODID'!!                 /**KPOSP* MSG*/            01177200
*            PRODID!!                                                   01177300
*            '" "PRODID"'!!                                             01177400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01177500
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01177600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01177700
*        ZMACRET=8;                          /* MACRO ERROR */          01177800
*      END;                                                             01177900
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01178000
*  ZXPRODID='INPUT';                         /* SET IN/OUTPUT */        01178100
*  XPRODID='NONE';                           /* SET DEFAULT */          01178200
*  IF PRODID(1)^=''                          /* CHECK FOR NULL */       01178300
*    THEN                                                               01178400
*      XPRODID=PRODID(1);                    /* SET XVARIABLE */        01178500
*/*PG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01178600
*  XDOMAIN='';                                                          01178700
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01178800
*  IF DOMAIN(1)='ADDRSP'                     /* CHECK FOR KEYWORD */    01178900
*     ! DOMAIN(1)=''                         /* CHECK FOR NULL */       01179000
*    THEN                                                               01179100
*      DO;                                                              01179200
*        XDOMAIN='ADDRSP';                   /* SET XVARIABLE */        01179300
*        IF NUMBER(DOMAIN)>1                 /* CHECK POSITIONALS */    01179400
*          THEN                                                         01179500
*            DO;                                                        01179600
*              ZMS=' 8, "DOMAIN'!!           /**KPOSP* MSG*/            01179700
*                  DOMAIN!!                                             01179800
*                  '" "DOMAIN"'!!                                       01179900
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01180000
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01180100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01180200
*              ZMACRET=8;                    /* MACRO ERROR */          01180300
*            END;                                                       01180400
*/*PG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01180500
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 01180600
*        IF SCOPE^=''                        /* CHECK FOR KEY */        01180700
*          THEN                                                         01180800
*            ZCVAL=ZCVAL!!',SCOPE';          /* INCORRECT KEY USED */   01180900
*        IF ZCVAL^=''                                                   01181000
*          THEN                                                         01181100
*            DO;                             /* INCORRECT KEYS USED */  01181200
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            01181300
*              ZMS=' 8, "DOMAIN'!!           /**KMEIP* MSG*/            01181400
*                  DOMAIN!!'"'!!                                        01181500
*                  ' DOES NOT ALLOW THE USE OF THE'!!                   01181600
*                  ' FOLLOWING KEY(S) "'!!                              01181700
*                  ZCVAL!!'".';                                         01181800
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01181900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01182000
*              ZMACRET=8;                    /* MACRO ERROR */          01182100
*            END;                                                       01182200
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01182300
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     01182400
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01182500
*  IF DOMAIN(1)='TASK'                       /* CHECK FOR KEYWORD */    01182600
*    THEN                                                               01182700
*      DO;                                                              01182800
*        XDOMAIN='TASK';                     /* SET XVARIABLE */        01182900
*        IF NUMBER(DOMAIN)>1                 /* CHECK POSITIONALS */    01183000
*          THEN                                                         01183100
*            DO;                                                        01183200
*              ZMS=' 8, "DOMAIN'!!           /**KPOSP* MSG*/            01183300
*                  DOMAIN!!                                             01183400
*                  '" "DOMAIN"'!!                                       01183500
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01183600
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01183700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01183800
*              ZMACRET=8;                    /* MACRO ERROR */          01183900
*            END;                                                       01184000
*/*PG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 01184100
*  IF SCOPE='SCOPE'                          /* CHECK ENTRY */          01184200
*    THEN                                                               01184300
*      DO;                                                              01184400
*        ZMS=' 8, THE "SCOPE" KEY'!!                                    01184500
*            ' MUST CONTAIN ONE'!!                                      01184600
*            ' (OR MORE) ARGUMENT(S).';                                 01184700
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01184800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01184900
*        ZMACRET=8;                          /* MACRO ERROR */          01185000
*      END;                                                             01185100
*  IF NUMBER(SCOPE)>1                        /* CHECK POSITIONALS */    01185200
*    THEN                                                               01185300
*      DO;                                                              01185400
*        ZMS=' 8, "SCOPE'!!                  /**KPOSP* MSG*/            01185500
*            SCOPE!!                                                    01185600
*            '" "SCOPE"'!!                                              01185700
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01185800
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01185900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01186000
*        ZMACRET=8;                          /* MACRO ERROR */          01186100
*      END;                                                             01186200
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 01186300
*  XSCOPE='';                                /* RESET XVARIABLE */      01186400
*  IF SCOPE(1) = 'ALL'                                                  01186500
*    THEN                                                               01186600
*      XSCOPE = 'ALL';                       /* SET XVARIABLE */        01186700
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 01186800
*  IF SCOPE(1) = 'FUNCTION'                                             01186900
*    THEN                                                               01187000
*      XSCOPE = 'FUNCTION';                  /* SET XVARIABLE */        01187100
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 01187200
*  ZXSCOPE='INPUT';                          /* SET IN/OUTPUT */        01187300
*  IF XSCOPE=''                              /* CHECK FOR KEYWORD */    01187400
*    THEN                                                               01187500
*      DO;                                   /* KEYWORD NOT ENTERED */  01187600
*        XSCOPE='ALL';                       /* SET DEFAULT */          01187700
*        IF SCOPE(1)^=''                                                01187800
*          THEN                                                         01187900
*            DO;                                                        01188000
*              ZXSCOPE='';                   /* RESET IN/OUTPUT */      01188100
*              ZMS=' 8, "SCOPE'!!            /**KUKWP* MSG*/            01188200
*                  SCOPE!!'"'!!                                         01188300
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '!!              01188400
*                  ' VALID KEYWORD CHOICE(S) ARE:'!!                    01188500
*                  ' "ALL"'!!                /* VALID KEYWORD */        01188600
*                  ' OR "FUNCTION".';        /* VALID KEYWORD */        01188700
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01188800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01188900
*              ZMACRET=8;                    /* MACRO ERROR */          01189000
*            END;                                                       01189100
*      END;                                                             01189200
*/*PG.KKCTL05 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01189300
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     01189400
*/*PG.KKCTL06 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01189500
*  IF DOMAIN='DOMAIN'                                                   01189600
*    ! DOMAIN='()'                           /*CHECK ENTRY*/            01189700
*     THEN                                                              01189800
*       DO;                                                             01189900
*              ZMS=' 8, THE "DOMAIN" KEY'!!                             01190000
*                  ' MUST CONTAIN ONE'!!                                01190100
*                  ' (OR MORE) ARGUMENT(S).';                           01190200
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01190300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01190400
*              ZMACRET=8;                    /* MACRO ERROR */          01190500
*       END;                                                            01190600
*  ELSE                                                                 01190700
*    DO;                                                                01190800
*      ZXDOMAIN='INPUT';                     /* SET IN/OUTPUT */        01190900
*      IF XDOMAIN=''                         /* CHECK FOR KEYWORD */    01191000
*        THEN                                                           01191100
*          DO;                               /* KEYWORD NOT ENTERED */  01191200
*            XDOMAIN='ADDRSP';               /* SET DEFAULT */          01191300
*            IF DOMAIN(1)^=''                /* CHECK FOR KEYWORD */    01191400
*              THEN                                                     01191500
*                DO;                                                    01191600
*                  ZXDOMAIN='';              /* RESET IN/OUTPUT */      01191700
*              ZMS=' 8, "DOMAIN'!!           /**KUKWP* MSG*/            01191800
*                  DOMAIN!!'"'!!                                        01191900
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '!!              01192000
*                  ' VALID KEYWORD CHOICE(S) ARE:'!!                    01192100
*                  ' "ADDRSP"'!!             /* VALID KEYWORD */        01192200
*                  ' OR "TASK".';            /* VALID KEYWORD */        01192300
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01192400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01192500
*              ZMACRET=8;                    /* MACRO ERROR */          01192600
*                END;                                                   01192700
*          END;                                                         01192800
*    END;                                                               01192900
*/*PG.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01193000
*  XDUMMY1='';                               /* RESET XVARIABLE */      01193100
*  IF PRTOKEN^=''                            /* CHECK ME KEY */         01193200
*    THEN                                                               01193300
*      DO;                                   /* VALID ME KEY */         01193400
*        IF NUMBER(PRTOKEN)>1                /* CHECK SUBLISTS */       01193500
*          THEN                                                         01193600
*            DO;                                                        01193700
*              ZMS=' 8, "PRTOKEN'!!          /**KPOSP* MSG*/            01193800
*                  PRTOKEN!!                                            01193900
*                  '" "PRTOKEN"'!!                                      01194000
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01194100
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01194200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01194300
*              ZMACRET=8;                    /* MACRO ERROR */          01194400
*            END;                                                       01194500
*        XDUMMY1='PRTOKEN';                  /* SET XVARIABLE */        01194600
*        XPRTOKEN=PRTOKEN(1);                /* SET XVARIABLE */        01194700
*        ZXDUMMY1='OUTPUT';                  /* SET IN/OUTPUT */        01194800
*        ZXPRTOKEN='OUTPUT';                 /* SET IN/OUTPUT */        01194900
*        IF PRTOKEN(1)=''                    /* CHECK ME KEY */         01195000
*          THEN                                                         01195100
*            DO;                                                        01195200
*              ZXDUMMY1='';                  /* RESET IN/OUTPUT */      01195300
*              ZXPRTOKEN='';                 /* RESET IN/OUTPUT */      01195400
*              ZMS=' 8, THE "PRTOKEN" KEY'!!                            01195500
*                  ' MUST CONTAIN ONE'!!                                01195600
*                  ' (OR MORE) ARGUMENT(S).';                           01195700
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01195800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01195900
*              ZMACRET=8;                    /* MACRO ERROR */          01196000
*           END;                                                        01196100
*      END;                                                             01196200
*/*PG.KMEKY02 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01196300
*  IF PRTOKEN64^=''                          /* CHECK ME KEY */         01196400
*    THEN                                                               01196500
*      DO;                                                              01196600
*        IF NUMBER(PRTOKEN64)>1              /* CHECK SUBLISTS */       01196700
*          THEN                                                         01196800
*            DO;                                                        01196900
*              ZMS=' 8, "PRTOKEN64'!!        /**KPOSP* MSG*/            01197000
*                  PRTOKEN64!!                                          01197100
*                  '" "PRTOKEN64"'!!                                    01197200
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01197300
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01197400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01197500
*              ZMACRET=8;                    /* MACRO ERROR */          01197600
*            END;                                                       01197700
*        IF XDUMMY1=''                       /* CHECK XVARIABLE */      01197800
*          THEN                                                         01197900
*            DO;                             /* VALID ME KEY */         01198000
*              XDUMMY1='PRTOKEN64';          /* SET XVAR1 */            01198100
*              XPRTOKEN64=PRTOKEN64(1);      /* SET XVAR2 */            01198200
*              ZXDUMMY1='OUTPUT';            /* SET IN/OUTPUT */        01198300
*              ZXPRTOKEN64='OUTPUT';         /* SET IN/OUTPUT */        01198400
*              IF PRTOKEN64(1)=''            /* CHECK ME KEY */         01198500
*                THEN                                                   01198600
*                  DO;                                                  01198700
*                    ZXDUMMY1='';            /* RESET IN/OUTPUT */      01198800
*                    ZXPRTOKEN64='';         /* RESET IN/OUTPUT */      01198900
*                    ZMS=' 8, THE "PRTOKEN64" KEY'!!                    01199000
*                        ' MUST CONTAIN ONE'!!                          01199100
*                        ' (OR MORE) ARGUMENT(S).';                     01199200
*                    ANS MSG('?IFAUSAGE ---> '!!ZMS);                   01199300
*                    ANS(COMMENT(ZMS)) COL(MACLMAR);                    01199400
*                    ZMACRET=8;              /* MACRO ERROR */          01199500
*                  END;                                                 01199600
*            END;                                                       01199700
*          ELSE                                                         01199800
*            DO;                                                        01199900
*              ZMS=' 8, "PRTOKEN64'!!        /**KMEKP* MSG*/            01200000
*                  PRTOKEN64!!'"'!!                                     01200100
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'!!                01200200
*                  XDUMMY1!!                                            01200300
*                  '" KEY.';                                            01200400
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01200500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01200600
*              ZMACRET=8;                    /* MACRO ERROR */          01200700
*            END;                                                       01200800
*      END;                                                             01200900
*/*PG.KMEKY07 NAME, OPT OUTPUT, ME KEYS -ME KEY DEFAULT--------------*/ 01201000
*  IF XDUMMY1=''                             /* CHECK XVARIABLE */      01201100
*    THEN                                                               01201200
*      DO;                                                              01201300
*        XDUMMY1='PRTOKEN';                  /* SET DEFAULT */          01201400
*        XPRTOKEN='0';                       /* SET DEFAULT */          01201500
*      END;                                                             01201600
*/*PG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01201700
*  XUNAUTHSERV='';                                                      01201800
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01201900
*  IF UNAUTHSERV(1)='BASE'                   /* CHECK FOR KEYWORD */    01202000
*     ! UNAUTHSERV(1)=''                     /* CHECK FOR NULL */       01202100
*    THEN                                                               01202200
*      DO;                                                              01202300
*        XUNAUTHSERV='BASE';                 /* SET XVARIABLE */        01202400
*        IF NUMBER(UNAUTHSERV)>1             /* CHECK POSITIONALS */    01202500
*          THEN                                                         01202600
*            DO;                                                        01202700
*              ZMS=' 8, "UNAUTHSERV'!!       /**KPOSP* MSG*/            01202800
*                  UNAUTHSERV!!                                         01202900
*                  '" "UNAUTHSERV"'!!                                   01203000
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01203100
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01203200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01203300
*              ZMACRET=8;                    /* MACRO ERROR */          01203400
*            END;                                                       01203500
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01203600
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     01203700
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01203800
*  IF UNAUTHSERV(1)='LEVEL1'                 /* CHECK FOR KEYWORD */    01203900
*    THEN                                                               01204000
*      DO;                                                              01204100
*        XUNAUTHSERV='LEVEL1';               /* SET XVARIABLE */        01204200
*        IF NUMBER(UNAUTHSERV)>1             /* CHECK POSITIONALS */    01204300
*          THEN                                                         01204400
*            DO;                                                        01204500
*              ZMS=' 8, "UNAUTHSERV'!!       /**KPOSP* MSG*/            01204600
*                  UNAUTHSERV!!                                         01204700
*                  '" "UNAUTHSERV"'!!                                   01204800
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01204900
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01205000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01205100
*              ZMACRET=8;                    /* MACRO ERROR */          01205200
*            END;                                                       01205300
*/*PG.KKCTL05 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01205400
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     01205500
*/*PG.KKCTL06 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01205600
*  IF UNAUTHSERV='UNAUTHSERV'                                           01205700
*    ! UNAUTHSERV='()'                       /*CHECK ENTRY*/            01205800
*     THEN                                                              01205900
*       DO;                                                             01206000
*              ZMS=' 8, THE "UNAUTHSERV" KEY'!!                         01206100
*                  ' MUST CONTAIN ONE'!!                                01206200
*                  ' (OR MORE) ARGUMENT(S).';                           01206300
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01206400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01206500
*              ZMACRET=8;                    /* MACRO ERROR */          01206600
*       END;                                                            01206700
*  ELSE                                                                 01206800
*    DO;                                                                01206900
*      ZXUNAUTHSERV='INPUT';                 /* SET IN/OUTPUT */        01207000
*      IF XUNAUTHSERV=''                     /* CHECK FOR KEYWORD */    01207100
*        THEN                                                           01207200
*          DO;                               /* KEYWORD NOT ENTERED */  01207300
*            XUNAUTHSERV='BASE';             /* SET DEFAULT */          01207400
*            IF UNAUTHSERV(1)^=''            /* CHECK FOR KEYWORD */    01207500
*              THEN                                                     01207600
*                DO;                                                    01207700
*                  ZXUNAUTHSERV='';          /* RESET IN/OUTPUT */      01207800
*              ZMS=' 8, "UNAUTHSERV'!!       /**KUKWP* MSG*/            01207900
*                  UNAUTHSERV!!'"'!!                                    01208000
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '!!              01208100
*                  ' VALID KEYWORD CHOICE(S) ARE:'!!                    01208200
*                  ' "BASE"'!!               /* VALID KEYWORD */        01208300
*                  ' OR "LEVEL1".';          /* VALID KEYWORD */        01208400
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01208500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01208600
*              ZMACRET=8;                    /* MACRO ERROR */          01208700
*                END;                                                   01208800
*          END;                                                         01208900
*    END;                                                               01209000
*/*PG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01209100
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     01209200
*/*PG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01209300
*  IF REQUEST(1)='DEREGISTER'                /* CHECK FOR KEYWORD */    01209400
*    THEN                                                               01209500
*      DO;                                                              01209600
*        XREQUEST='DEREGISTER';              /* SET XVARIABLE */        01209700
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    01209800
*          THEN                                                         01209900
*            DO;                                                        01210000
*              ZMS=' 8, "REQUEST'!!          /**KPOSP* MSG*/            01210100
*                  REQUEST!!                                            01210200
*                  '" "REQUEST"'!!                                      01210300
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01210400
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01210500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01210600
*              ZMACRET=8;                    /* MACRO ERROR */          01210700
*            END;                                                       01210800
*/*PG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01210900
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 01211000
*        IF DOMAIN^=''                       /* CHECK FOR KEY */        01211100
*          THEN                                                         01211200
*            ZCVAL=ZCVAL!!',DOMAIN';         /* INCORRECT KEY USED */   01211300
*        IF SCOPE^=''                        /* CHECK FOR KEY */        01211400
*          THEN                                                         01211500
*            ZCVAL=ZCVAL!!',SCOPE';          /* INCORRECT KEY USED */   01211600
*        IF UNAUTHSERV^=''                   /* CHECK FOR KEY */        01211700
*          THEN                                                         01211800
*            ZCVAL=ZCVAL!!',UNAUTHSERV';     /* INCORRECT KEY USED */   01211900
*        IF BEGTIME^=''                      /* CHECK FOR KEY */        01212000
*          THEN                                                         01212100
*            ZCVAL=ZCVAL!!',BEGTIME';        /* INCORRECT KEY USED */   01212200
*        IF BEGTIME64^=''                    /* CHECK FOR KEY */        01212300
*          THEN                                                         01212400
*            ZCVAL=ZCVAL!!',BEGTIME64';      /* INCORRECT KEY USED */   01212500
*        IF DATA^=''                         /* CHECK FOR KEY */        01212600
*          THEN                                                         01212700
*            ZCVAL=ZCVAL!!',DATA';           /* INCORRECT KEY USED */   01212800
*        IF DATA64^=''                       /* CHECK FOR KEY */        01212900
*          THEN                                                         01213000
*            ZCVAL=ZCVAL!!',DATA64';         /* INCORRECT KEY USED */   01213100
*        IF FORMAT^=''                       /* CHECK FOR KEY */        01213200
*          THEN                                                         01213300
*            ZCVAL=ZCVAL!!',FORMAT';         /* INCORRECT KEY USED */   01213400
*        IF CURRENTDATA^=''                  /* CHECK FOR KEY */        01213500
*          THEN                                                         01213600
*            ZCVAL=ZCVAL!!',CURRENTDATA';    /* INCORRECT KEY USED */   01213700
*        IF CURRENTDATA64^=''                /* CHECK FOR KEY */        01213800
*          THEN                                                         01213900
*            ZCVAL=ZCVAL!!',CURRENTDATA64';  /* INCORRECT KEY USED */   01214000
*        IF ZCVAL^=''                                                   01214100
*          THEN                                                         01214200
*            DO;                             /* INCORRECT KEYS USED */  01214300
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            01214400
*              ZMS=' 8, "REQUEST'!!          /**KMEIP* MSG*/            01214500
*                  REQUEST!!'"'!!                                       01214600
*                  ' DOES NOT ALLOW THE USE OF THE'!!                   01214700
*                  ' FOLLOWING KEY(S) "'!!                              01214800
*                  ZCVAL!!'".';                                         01214900
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01215000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01215100
*              ZMACRET=8;                    /* MACRO ERROR */          01215200
*            END;                                                       01215300
*/*PG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01215400
*  XDEREGPRODNAME='';                        /* RESET XVARIABLE */      01215500
*  IF PRODOWNER^=''                          /* CHECK ME KEY */         01215600
*    THEN                                                               01215700
*      DO;                                   /* VALID ME KEY */         01215800
*        IF NUMBER(PRODOWNER)>1              /* CHECK SUBLISTS */       01215900
*          THEN                                                         01216000
*            DO;                                                        01216100
*              ZMS=' 8, "PRODOWNER'!!        /**KPOSP* MSG*/            01216200
*                  PRODOWNER!!                                          01216300
*                  '" "PRODOWNER"'!!                                    01216400
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01216500
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01216600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01216700
*              ZMACRET=8;                    /* MACRO ERROR */          01216800
*            END;                                                       01216900
*        XDEREGPRODNAME='PRODOWNER';         /* SET XVARIABLE */        01217000
*        XPRODOWNER=PRODOWNER(1);            /* SET XVARIABLE */        01217100
*        ZXDEREGPRODNAME='INPUT';            /* SET IN/OUTPUT */        01217200
*        ZXPRODOWNER='INPUT';                /* SET IN/OUTPUT */        01217300
*        IF PRODOWNER(1)=''                  /* CHECK ME KEY */         01217400
*          THEN                                                         01217500
*            DO;                                                        01217600
*              ZXDEREGPRODNAME='';           /* RESET IN/OUTPUT */      01217700
*              ZXPRODOWNER='';               /* RESET IN/OUTPUT */      01217800
*              ZMS=' 8,  '!!                                            01217900
*                  ' "PRODOWNER" KEY AND ITS'!!                         01218000
*                  ' ARGUMENT ARE REQUIRED.'; /**KRQDP* MSG*/           01218100
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01218200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01218300
*              ZMACRET=8;                    /* MACRO ERROR */          01218400
*           END;                                                        01218500
*      END;                                                             01218600
*/*PG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01218700
*  IF PRTOKEN^=''                            /* CHECK ME KEY */         01218800
*    THEN                                                               01218900
*      DO;                                                              01219000
*        IF NUMBER(PRTOKEN)>1                /* CHECK SUBLISTS */       01219100
*          THEN                                                         01219200
*            DO;                                                        01219300
*              ZMS=' 8, "PRTOKEN'!!          /**KPOSP* MSG*/            01219400
*                  PRTOKEN!!                                            01219500
*                  '" "PRTOKEN"'!!                                      01219600
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01219700
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01219800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01219900
*              ZMACRET=8;                    /* MACRO ERROR */          01220000
*            END;                                                       01220100
*        IF XDEREGPRODNAME=''                /* CHECK XVARIABLE */      01220200
*          THEN                                                         01220300
*            DO;                             /* VALID ME KEY */         01220400
*              XDEREGPRODNAME='PRTOKEN';     /* SET XVAR1 */            01220500
*              XPRTOKEN=PRTOKEN(1);          /* SET XVAR2 */            01220600
*              ZXDEREGPRODNAME='INPUT';      /* SET IN/OUTPUT */        01220700
*              ZXPRTOKEN='INPUT';            /* SET IN/OUTPUT */        01220800
*              IF PRTOKEN(1)=''              /* CHECK ME KEY */         01220900
*                THEN                                                   01221000
*                  DO;                                                  01221100
*                    ZXDEREGPRODNAME='';     /* RESET IN/OUTPUT */      01221200
*                    ZXPRTOKEN='';           /* RESET IN/OUTPUT */      01221300
*                    ZMS=' 8,  '!!                                      01221400
*                        ' "PRTOKEN" KEY AND ITS'!!                     01221500
*                        ' ARGUMENT ARE REQUIRED.'; /**KRQDP* MSG*/     01221600
*                    ANS MSG('?IFAUSAGE ---> '!!ZMS);                   01221700
*                    ANS(COMMENT(ZMS)) COL(MACLMAR);                    01221800
*                    ZMACRET=8;              /* MACRO ERROR */          01221900
*                  END;                                                 01222000
*            END;                                                       01222100
*          ELSE                                                         01222200
*            DO;                                                        01222300
*              ZMS=' 8, "PRTOKEN'!!          /**KMEKP* MSG*/            01222400
*                  PRTOKEN!!'"'!!                                       01222500
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'!!                01222600
*                  XDEREGPRODNAME!!                                     01222700
*                  '" KEY.';                                            01222800
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01222900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01223000
*              ZMACRET=8;                    /* MACRO ERROR */          01223100
*            END;                                                       01223200
*      END;                                                             01223300
*/*PG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01223400
*  IF PRTOKEN64^=''                          /* CHECK ME KEY */         01223500
*    THEN                                                               01223600
*      DO;                                                              01223700
*        IF NUMBER(PRTOKEN64)>1              /* CHECK SUBLISTS */       01223800
*          THEN                                                         01223900
*            DO;                                                        01224000
*              ZMS=' 8, "PRTOKEN64'!!        /**KPOSP* MSG*/            01224100
*                  PRTOKEN64!!                                          01224200
*                  '" "PRTOKEN64"'!!                                    01224300
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01224400
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01224500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01224600
*              ZMACRET=8;                    /* MACRO ERROR */          01224700
*            END;                                                       01224800
*        IF XDEREGPRODNAME=''                /* CHECK XVARIABLE */      01224900
*          THEN                                                         01225000
*            DO;                             /* VALID ME KEY */         01225100
*              XDEREGPRODNAME='PRTOKEN64';   /* SET XVAR1 */            01225200
*              XPRTOKEN64=PRTOKEN64(1);      /* SET XVAR2 */            01225300
*              ZXDEREGPRODNAME='INPUT';      /* SET IN/OUTPUT */        01225400
*              ZXPRTOKEN64='INPUT';          /* SET IN/OUTPUT */        01225500
*              IF PRTOKEN64(1)=''            /* CHECK ME KEY */         01225600
*                THEN                                                   01225700
*                  DO;                                                  01225800
*                    ZXDEREGPRODNAME='';     /* RESET IN/OUTPUT */      01225900
*                    ZXPRTOKEN64='';         /* RESET IN/OUTPUT */      01226000
*                    ZMS=' 8,  '!!                                      01226100
*                        ' "PRTOKEN64" KEY AND ITS'!!                   01226200
*                        ' ARGUMENT ARE REQUIRED.'; /**KRQDP* MSG*/     01226300
*                    ANS MSG('?IFAUSAGE ---> '!!ZMS);                   01226400
*                    ANS(COMMENT(ZMS)) COL(MACLMAR);                    01226500
*                    ZMACRET=8;              /* MACRO ERROR */          01226600
*                  END;                                                 01226700
*            END;                                                       01226800
*          ELSE                                                         01226900
*            DO;                                                        01227000
*              ZMS=' 8, "PRTOKEN64'!!        /**KMEKP* MSG*/            01227100
*                  PRTOKEN64!!'"'!!                                     01227200
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'!!                01227300
*                  XDEREGPRODNAME!!                                     01227400
*                  '" KEY.';                                            01227500
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01227600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01227700
*              ZMACRET=8;                    /* MACRO ERROR */          01227800
*            END;                                                       01227900
*      END;                                                             01228000
*/*PG.KMEKY08 NAME, RQD INPUT, ME KEYS -ME KEY DEFAULT---------------*/ 01228100
*  IF XDEREGPRODNAME=''                      /* CHECK XVARIABLE */      01228200
*    THEN                                                               01228300
*      DO;                                                              01228400
*        XDEREGPRODNAME='PRODOWNER';         /* SET DEFAULT */          01228500
*        XPRODOWNER='0';                     /* SET DEFAULT */          01228600
*        ZXDEREGPRODNAME='';                 /* RESET IN/OUTPUT */      01228700
*        ZXPRODOWNER='';                     /* RESET IN/OUTPUT */      01228800
*        ZMS=' 8, ONE OF THE FOLLOWING'!!    /**KMERP* MSG*/            01228900
*            ' MUTUALLY EXCLUSIVE KEY(S) IS'!!                          01229000
*            ' REQUIRED:'!!                                             01229100
*            ' "PRODOWNER",'!!               /* VALID ME KEY */         01229200
*            ' "PRTOKEN",'!!                 /* VALID ME KEY */         01229300
*            ' OR "PRTOKEN64".';             /* VALID ME KEY */         01229400
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01229500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01229600
*        ZMACRET=8;                          /* MACRO ERROR */          01229700
*      END;                                                             01229800
*/*PG.KMEKY11 NAME, RQD INPUT, ME KEYS -START------------------------*/ 01229900
*  IF XDEREGPRODNAME='PRODOWNER'             /* CHECK FOR ME KEY */     01230000
*    THEN                                                               01230100
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01230200
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01230300
*  IF NUMBER(PRODNAME)>1                     /* CHECK POSITIONALS */    01230400
*    THEN                                                               01230500
*      DO;                                                              01230600
*        ZMS=' 8, "PRODNAME'!!               /**KPOSP* MSG*/            01230700
*            PRODNAME!!                                                 01230800
*            '" "PRODNAME"'!!                                           01230900
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01231000
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01231100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01231200
*        ZMACRET=8;                          /* MACRO ERROR */          01231300
*      END;                                                             01231400
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 01231500
*  XPRODNAME=PRODNAME(1);                    /* SET XVARIABLE */        01231600
*  IF PRODNAME(1)=''                         /* CHECK FOR NULL */       01231700
*   THEN                                                                01231800
*    DO;                                     /* KEY IS REQUIRED */      01231900
*        ZXPRODNAME='';                      /* RESET IN/OUTPUT */      01232000
*        ZMS=' 8,  '!!                                                  01232100
*            ' "PRODNAME" KEY AND ITS'!!                                01232200
*            ' ARGUMENT ARE REQUIRED.';      /**KRQDP* MSG*/            01232300
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01232400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01232500
*        ZMACRET=8;                          /* MACRO ERROR */          01232600
*    END;                                                               01232700
*  ELSE                                                                 01232800
*    ZXPRODNAME='INPUT';                     /* SET IN/OUTPUT */        01232900
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01233000
*  IF PRODVERS='PRODVERS' ! PRODVERS='()'    /*CHECK ENTRY*/            01233100
*    THEN                                                               01233200
*      DO;                                                              01233300
*        ZMS=' 8, THE "PRODVERS" KEY'!!                                 01233400
*            ' MUST CONTAIN ONE'!!                                      01233500
*            ' (OR MORE) ARGUMENT(S).';                                 01233600
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01233700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01233800
*        ZMACRET=8;                          /* MACRO ERROR */          01233900
*      END;                                                             01234000
*  IF NUMBER(PRODVERS)>1                     /* CHECK POSITIONALS */    01234100
*    THEN                                                               01234200
*      DO;                                                              01234300
*        ZMS=' 8, "PRODVERS'!!               /**KPOSP* MSG*/            01234400
*            PRODVERS!!                                                 01234500
*            '" "PRODVERS"'!!                                           01234600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01234700
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01234800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01234900
*        ZMACRET=8;                          /* MACRO ERROR */          01235000
*      END;                                                             01235100
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01235200
*  ZXPRODVERS='INPUT';                       /* SET IN/OUTPUT */        01235300
*  XPRODVERS='NONE';                         /* SET DEFAULT */          01235400
*  IF PRODVERS(1)^=''                        /* CHECK FOR NULL */       01235500
*    THEN                                                               01235600
*      XPRODVERS=PRODVERS(1);                /* SET XVARIABLE */        01235700
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01235800
*  IF PRODQUAL='PRODQUAL' ! PRODQUAL='()'    /*CHECK ENTRY*/            01235900
*    THEN                                                               01236000
*      DO;                                                              01236100
*        ZMS=' 8, THE "PRODQUAL" KEY'!!                                 01236200
*            ' MUST CONTAIN ONE'!!                                      01236300
*            ' (OR MORE) ARGUMENT(S).';                                 01236400
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01236500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01236600
*        ZMACRET=8;                          /* MACRO ERROR */          01236700
*      END;                                                             01236800
*  IF NUMBER(PRODQUAL)>1                     /* CHECK POSITIONALS */    01236900
*    THEN                                                               01237000
*      DO;                                                              01237100
*        ZMS=' 8, "PRODQUAL'!!               /**KPOSP* MSG*/            01237200
*            PRODQUAL!!                                                 01237300
*            '" "PRODQUAL"'!!                                           01237400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01237500
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01237600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01237700
*        ZMACRET=8;                          /* MACRO ERROR */          01237800
*      END;                                                             01237900
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01238000
*  ZXPRODQUAL='INPUT';                       /* SET IN/OUTPUT */        01238100
*  XPRODQUAL='NONE';                         /* SET DEFAULT */          01238200
*  IF PRODQUAL(1)^=''                        /* CHECK FOR NULL */       01238300
*    THEN                                                               01238400
*      XPRODQUAL=PRODQUAL(1);                /* SET XVARIABLE */        01238500
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01238600
*  IF PRODID='PRODID' ! PRODID='()'          /*CHECK ENTRY*/            01238700
*    THEN                                                               01238800
*      DO;                                                              01238900
*        ZMS=' 8, THE "PRODID" KEY'!!                                   01239000
*            ' MUST CONTAIN ONE'!!                                      01239100
*            ' (OR MORE) ARGUMENT(S).';                                 01239200
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01239300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01239400
*        ZMACRET=8;                          /* MACRO ERROR */          01239500
*      END;                                                             01239600
*  IF NUMBER(PRODID)>1                       /* CHECK POSITIONALS */    01239700
*    THEN                                                               01239800
*      DO;                                                              01239900
*        ZMS=' 8, "PRODID'!!                 /**KPOSP* MSG*/            01240000
*            PRODID!!                                                   01240100
*            '" "PRODID"'!!                                             01240200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01240300
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01240400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01240500
*        ZMACRET=8;                          /* MACRO ERROR */          01240600
*      END;                                                             01240700
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01240800
*  ZXPRODID='INPUT';                         /* SET IN/OUTPUT */        01240900
*  XPRODID='NONE';                           /* SET DEFAULT */          01241000
*  IF PRODID(1)^=''                          /* CHECK FOR NULL */       01241100
*    THEN                                                               01241200
*      XPRODID=PRODID(1);                    /* SET XVARIABLE */        01241300
*/*PG.KMEKY10 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 01241400
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01241500
*/*PG.KMEKY12 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS--------------*/ 01241600
*  IF XDEREGPRODNAME='PRTOKEN'               /* CHECK FOR ME KEY */     01241700
*    THEN                                                               01241800
*      DO;                                   /*DISALLOWED KEYS CHECK */ 01241900
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 01242000
*        IF PRODNAME^=''                     /* CHECK KEY */            01242100
*          THEN                                                         01242200
*            ZCVAL=ZCVAL!!',PRODNAME';                                  01242300
*        IF PRODVERS^=''                     /* CHECK KEY */            01242400
*          THEN                                                         01242500
*            ZCVAL=ZCVAL!!',PRODVERS';                                  01242600
*        IF PRODQUAL^=''                     /* CHECK KEY */            01242700
*          THEN                                                         01242800
*            ZCVAL=ZCVAL!!',PRODQUAL';                                  01242900
*        IF PRODID^=''                       /* CHECK KEY */            01243000
*          THEN                                                         01243100
*            ZCVAL=ZCVAL!!',PRODID';                                    01243200
*        IF ZCVAL^=''                                                   01243300
*          THEN                                                         01243400
*            DO;                             /* INCORRECT KEYS USED */  01243500
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            01243600
*              ZMS=' 8, "PRTOKEN'!!          /**KMEIP* MSG*/            01243700
*                  '"'!!                                                01243800
*                  ' DOES NOT ALLOW THE USE OF THE'!!                   01243900
*                  ' FOLLOWING KEY(S) "'!!                              01244000
*                  ZCVAL!!'".';                                         01244100
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01244200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01244300
*              ZMACRET=8;                    /* MACRO ERROR */          01244400
*            END;                                                       01244500
*      END;                                                             01244600
*/*PG.KMEKY12 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS--------------*/ 01244700
*  IF XDEREGPRODNAME='PRTOKEN64'             /* CHECK FOR ME KEY */     01244800
*    THEN                                                               01244900
*      DO;                                   /*DISALLOWED KEYS CHECK */ 01245000
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 01245100
*        IF PRODNAME^=''                     /* CHECK KEY */            01245200
*          THEN                                                         01245300
*            ZCVAL=ZCVAL!!',PRODNAME';                                  01245400
*        IF PRODVERS^=''                     /* CHECK KEY */            01245500
*          THEN                                                         01245600
*            ZCVAL=ZCVAL!!',PRODVERS';                                  01245700
*        IF PRODQUAL^=''                     /* CHECK KEY */            01245800
*          THEN                                                         01245900
*            ZCVAL=ZCVAL!!',PRODQUAL';                                  01246000
*        IF PRODID^=''                       /* CHECK KEY */            01246100
*          THEN                                                         01246200
*            ZCVAL=ZCVAL!!',PRODID';                                    01246300
*        IF ZCVAL^=''                                                   01246400
*          THEN                                                         01246500
*            DO;                             /* INCORRECT KEYS USED */  01246600
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            01246700
*              ZMS=' 8, "PRTOKEN64'!!        /**KMEIP* MSG*/            01246800
*                  '"'!!                                                01246900
*                  ' DOES NOT ALLOW THE USE OF THE'!!                   01247000
*                  ' FOLLOWING KEY(S) "'!!                              01247100
*                  ZCVAL!!'".';                                         01247200
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01247300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01247400
*              ZMACRET=8;                    /* MACRO ERROR */          01247500
*            END;                                                       01247600
*      END;                                                             01247700
*/*PG.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01247800
*  XDEREGENDTIME='';                         /* RESET XVARIABLE */      01247900
*  IF ENDTIME^=''                            /* CHECK ME KEY */         01248000
*    THEN                                                               01248100
*      DO;                                   /* VALID ME KEY */         01248200
*        IF NUMBER(ENDTIME)>1                /* CHECK SUBLISTS */       01248300
*          THEN                                                         01248400
*            DO;                                                        01248500
*              ZMS=' 8, "ENDTIME'!!          /**KPOSP* MSG*/            01248600
*                  ENDTIME!!                                            01248700
*                  '" "ENDTIME"'!!                                      01248800
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01248900
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01249000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01249100
*              ZMACRET=8;                    /* MACRO ERROR */          01249200
*            END;                                                       01249300
*        XDEREGENDTIME='ENDTIME';            /* SET XVARIABLE */        01249400
*        XENDTIME=ENDTIME(1);                /* SET XVARIABLE */        01249500
*        ZXDEREGENDTIME='OUTPUT';            /* SET IN/OUTPUT */        01249600
*        ZXENDTIME='OUTPUT';                 /* SET IN/OUTPUT */        01249700
*        IF ENDTIME(1)=''                    /* CHECK ME KEY */         01249800
*          THEN                                                         01249900
*            DO;                                                        01250000
*              ZXDEREGENDTIME='';            /* RESET IN/OUTPUT */      01250100
*              ZXENDTIME='';                 /* RESET IN/OUTPUT */      01250200
*              ZMS=' 8, THE "ENDTIME" KEY'!!                            01250300
*                  ' MUST CONTAIN ONE'!!                                01250400
*                  ' (OR MORE) ARGUMENT(S).';                           01250500
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01250600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01250700
*              ZMACRET=8;                    /* MACRO ERROR */          01250800
*           END;                                                        01250900
*      END;                                                             01251000
*/*PG.KMEKY02 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01251100
*  IF ENDTIME64^=''                          /* CHECK ME KEY */         01251200
*    THEN                                                               01251300
*      DO;                                                              01251400
*        IF NUMBER(ENDTIME64)>1              /* CHECK SUBLISTS */       01251500
*          THEN                                                         01251600
*            DO;                                                        01251700
*              ZMS=' 8, "ENDTIME64'!!        /**KPOSP* MSG*/            01251800
*                  ENDTIME64!!                                          01251900
*                  '" "ENDTIME64"'!!                                    01252000
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01252100
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01252200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01252300
*              ZMACRET=8;                    /* MACRO ERROR */          01252400
*            END;                                                       01252500
*        IF XDEREGENDTIME=''                 /* CHECK XVARIABLE */      01252600
*          THEN                                                         01252700
*            DO;                             /* VALID ME KEY */         01252800
*              XDEREGENDTIME='ENDTIME64';    /* SET XVAR1 */            01252900
*              XENDTIME64=ENDTIME64(1);      /* SET XVAR2 */            01253000
*              ZXDEREGENDTIME='OUTPUT';      /* SET IN/OUTPUT */        01253100
*              ZXENDTIME64='OUTPUT';         /* SET IN/OUTPUT */        01253200
*              IF ENDTIME64(1)=''            /* CHECK ME KEY */         01253300
*                THEN                                                   01253400
*                  DO;                                                  01253500
*                    ZXDEREGENDTIME='';      /* RESET IN/OUTPUT */      01253600
*                    ZXENDTIME64='';         /* RESET IN/OUTPUT */      01253700
*                    ZMS=' 8, THE "ENDTIME64" KEY'!!                    01253800
*                        ' MUST CONTAIN ONE'!!                          01253900
*                        ' (OR MORE) ARGUMENT(S).';                     01254000
*                    ANS MSG('?IFAUSAGE ---> '!!ZMS);                   01254100
*                    ANS(COMMENT(ZMS)) COL(MACLMAR);                    01254200
*                    ZMACRET=8;              /* MACRO ERROR */          01254300
*                  END;                                                 01254400
*            END;                                                       01254500
*          ELSE                                                         01254600
*            DO;                                                        01254700
*              ZMS=' 8, "ENDTIME64'!!        /**KMEKP* MSG*/            01254800
*                  ENDTIME64!!'"'!!                                     01254900
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'!!                01255000
*                  XDEREGENDTIME!!                                      01255100
*                  '" KEY.';                                            01255200
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01255300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01255400
*              ZMACRET=8;                    /* MACRO ERROR */          01255500
*            END;                                                       01255600
*      END;                                                             01255700
*/*PG.KMEKY07 NAME, OPT OUTPUT, ME KEYS -ME KEY DEFAULT--------------*/ 01255800
*  IF XDEREGENDTIME=''                       /* CHECK XVARIABLE */      01255900
*    THEN                                                               01256000
*      DO;                                                              01256100
*        XDEREGENDTIME='ENDTIME';            /* SET DEFAULT */          01256200
*        XENDTIME='0';                       /* SET DEFAULT */          01256300
*      END;                                                             01256400
*/*PG.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01256500
*  XDEREGENDDATA='';                         /* RESET XVARIABLE */      01256600
*  IF ENDDATA^=''                            /* CHECK ME KEY */         01256700
*    THEN                                                               01256800
*      DO;                                   /* VALID ME KEY */         01256900
*        IF NUMBER(ENDDATA)>1                /* CHECK SUBLISTS */       01257000
*          THEN                                                         01257100
*            DO;                                                        01257200
*              ZMS=' 8, "ENDDATA'!!          /**KPOSP* MSG*/            01257300
*                  ENDDATA!!                                            01257400
*                  '" "ENDDATA"'!!                                      01257500
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01257600
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01257700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01257800
*              ZMACRET=8;                    /* MACRO ERROR */          01257900
*            END;                                                       01258000
*        XDEREGENDDATA='ENDDATA';            /* SET XVARIABLE */        01258100
*        XENDDATA=ENDDATA(1);                /* SET XVARIABLE */        01258200
*        ZXDEREGENDDATA='OUTPUT';            /* SET IN/OUTPUT */        01258300
*        ZXENDDATA='OUTPUT';                 /* SET IN/OUTPUT */        01258400
*        IF ENDDATA(1)=''                    /* CHECK ME KEY */         01258500
*          THEN                                                         01258600
*            DO;                                                        01258700
*              ZXDEREGENDDATA='';            /* RESET IN/OUTPUT */      01258800
*              ZXENDDATA='';                 /* RESET IN/OUTPUT */      01258900
*              ZMS=' 8, THE "ENDDATA" KEY'!!                            01259000
*                  ' MUST CONTAIN ONE'!!                                01259100
*                  ' (OR MORE) ARGUMENT(S).';                           01259200
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01259300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01259400
*              ZMACRET=8;                    /* MACRO ERROR */          01259500
*           END;                                                        01259600
*      END;                                                             01259700
*/*PG.KMEKY02 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01259800
*  IF ENDDATA64^=''                          /* CHECK ME KEY */         01259900
*    THEN                                                               01260000
*      DO;                                                              01260100
*        IF NUMBER(ENDDATA64)>1              /* CHECK SUBLISTS */       01260200
*          THEN                                                         01260300
*            DO;                                                        01260400
*              ZMS=' 8, "ENDDATA64'!!        /**KPOSP* MSG*/            01260500
*                  ENDDATA64!!                                          01260600
*                  '" "ENDDATA64"'!!                                    01260700
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01260800
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01260900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01261000
*              ZMACRET=8;                    /* MACRO ERROR */          01261100
*            END;                                                       01261200
*        IF XDEREGENDDATA=''                 /* CHECK XVARIABLE */      01261300
*          THEN                                                         01261400
*            DO;                             /* VALID ME KEY */         01261500
*              XDEREGENDDATA='ENDDATA64';    /* SET XVAR1 */            01261600
*              XENDDATA64=ENDDATA64(1);      /* SET XVAR2 */            01261700
*              ZXDEREGENDDATA='OUTPUT';      /* SET IN/OUTPUT */        01261800
*              ZXENDDATA64='OUTPUT';         /* SET IN/OUTPUT */        01261900
*              IF ENDDATA64(1)=''            /* CHECK ME KEY */         01262000
*                THEN                                                   01262100
*                  DO;                                                  01262200
*                    ZXDEREGENDDATA='';      /* RESET IN/OUTPUT */      01262300
*                    ZXENDDATA64='';         /* RESET IN/OUTPUT */      01262400
*                    ZMS=' 8, THE "ENDDATA64" KEY'!!                    01262500
*                        ' MUST CONTAIN ONE'!!                          01262600
*                        ' (OR MORE) ARGUMENT(S).';                     01262700
*                    ANS MSG('?IFAUSAGE ---> '!!ZMS);                   01262800
*                    ANS(COMMENT(ZMS)) COL(MACLMAR);                    01262900
*                    ZMACRET=8;              /* MACRO ERROR */          01263000
*                  END;                                                 01263100
*            END;                                                       01263200
*          ELSE                                                         01263300
*            DO;                                                        01263400
*              ZMS=' 8, "ENDDATA64'!!        /**KMEKP* MSG*/            01263500
*                  ENDDATA64!!'"'!!                                     01263600
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'!!                01263700
*                  XDEREGENDDATA!!                                      01263800
*                  '" KEY.';                                            01263900
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01264000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01264100
*              ZMACRET=8;                    /* MACRO ERROR */          01264200
*            END;                                                       01264300
*      END;                                                             01264400
*/*PG.KMEKY07 NAME, OPT OUTPUT, ME KEYS -ME KEY DEFAULT--------------*/ 01264500
*  IF XDEREGENDDATA=''                       /* CHECK XVARIABLE */      01264600
*    THEN                                                               01264700
*      DO;                                                              01264800
*        XDEREGENDDATA='ENDDATA';            /* SET DEFAULT */          01264900
*        XENDDATA='0';                       /* SET DEFAULT */          01265000
*      END;                                                             01265100
*/*PG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01265200
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     01265300
*/*PG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01265400
*  IF REQUEST(1)='FUNCTIONBEGIN'             /* CHECK FOR KEYWORD */    01265500
*    THEN                                                               01265600
*      DO;                                                              01265700
*        XREQUEST='FUNCTIONBEGIN';           /* SET XVARIABLE */        01265800
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    01265900
*          THEN                                                         01266000
*            DO;                                                        01266100
*              ZMS=' 8, "REQUEST'!!          /**KPOSP* MSG*/            01266200
*                  REQUEST!!                                            01266300
*                  '" "REQUEST"'!!                                      01266400
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01266500
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01266600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01266700
*              ZMACRET=8;                    /* MACRO ERROR */          01266800
*            END;                                                       01266900
*/*PG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01267000
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 01267100
*        IF DOMAIN^=''                       /* CHECK FOR KEY */        01267200
*          THEN                                                         01267300
*            ZCVAL=ZCVAL!!',DOMAIN';         /* INCORRECT KEY USED */   01267400
*        IF SCOPE^=''                        /* CHECK FOR KEY */        01267500
*          THEN                                                         01267600
*            ZCVAL=ZCVAL!!',SCOPE';          /* INCORRECT KEY USED */   01267700
*        IF UNAUTHSERV^=''                   /* CHECK FOR KEY */        01267800
*          THEN                                                         01267900
*            ZCVAL=ZCVAL!!',UNAUTHSERV';     /* INCORRECT KEY USED */   01268000
*        IF ENDTIME^=''                      /* CHECK FOR KEY */        01268100
*          THEN                                                         01268200
*            ZCVAL=ZCVAL!!',ENDTIME';        /* INCORRECT KEY USED */   01268300
*        IF ENDTIME64^=''                    /* CHECK FOR KEY */        01268400
*          THEN                                                         01268500
*            ZCVAL=ZCVAL!!',ENDTIME64';      /* INCORRECT KEY USED */   01268600
*        IF ENDDATA^=''                      /* CHECK FOR KEY */        01268700
*          THEN                                                         01268800
*            ZCVAL=ZCVAL!!',ENDDATA';        /* INCORRECT KEY USED */   01268900
*        IF ENDDATA64^=''                    /* CHECK FOR KEY */        01269000
*          THEN                                                         01269100
*            ZCVAL=ZCVAL!!',ENDDATA64';      /* INCORRECT KEY USED */   01269200
*        IF DATA^=''                         /* CHECK FOR KEY */        01269300
*          THEN                                                         01269400
*            ZCVAL=ZCVAL!!',DATA';           /* INCORRECT KEY USED */   01269500
*        IF DATA64^=''                       /* CHECK FOR KEY */        01269600
*          THEN                                                         01269700
*            ZCVAL=ZCVAL!!',DATA64';         /* INCORRECT KEY USED */   01269800
*        IF FORMAT^=''                       /* CHECK FOR KEY */        01269900
*          THEN                                                         01270000
*            ZCVAL=ZCVAL!!',FORMAT';         /* INCORRECT KEY USED */   01270100
*        IF CURRENTDATA^=''                  /* CHECK FOR KEY */        01270200
*          THEN                                                         01270300
*            ZCVAL=ZCVAL!!',CURRENTDATA';    /* INCORRECT KEY USED */   01270400
*        IF CURRENTDATA64^=''                /* CHECK FOR KEY */        01270500
*          THEN                                                         01270600
*            ZCVAL=ZCVAL!!',CURRENTDATA64';  /* INCORRECT KEY USED */   01270700
*        IF ZCVAL^=''                                                   01270800
*          THEN                                                         01270900
*            DO;                             /* INCORRECT KEYS USED */  01271000
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            01271100
*              ZMS=' 8, "REQUEST'!!          /**KMEIP* MSG*/            01271200
*                  REQUEST!!'"'!!                                       01271300
*                  ' DOES NOT ALLOW THE USE OF THE'!!                   01271400
*                  ' FOLLOWING KEY(S) "'!!                              01271500
*                  ZCVAL!!'".';                                         01271600
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01271700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01271800
*              ZMACRET=8;                    /* MACRO ERROR */          01271900
*            END;                                                       01272000
*/*PG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01272100
*  XBEGINPRODNAME='';                        /* RESET XVARIABLE */      01272200
*  IF PRODOWNER^=''                          /* CHECK ME KEY */         01272300
*    THEN                                                               01272400
*      DO;                                   /* VALID ME KEY */         01272500
*        IF NUMBER(PRODOWNER)>1              /* CHECK SUBLISTS */       01272600
*          THEN                                                         01272700
*            DO;                                                        01272800
*              ZMS=' 8, "PRODOWNER'!!        /**KPOSP* MSG*/            01272900
*                  PRODOWNER!!                                          01273000
*                  '" "PRODOWNER"'!!                                    01273100
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01273200
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01273300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01273400
*              ZMACRET=8;                    /* MACRO ERROR */          01273500
*            END;                                                       01273600
*        XBEGINPRODNAME='PRODOWNER';         /* SET XVARIABLE */        01273700
*        XPRODOWNER=PRODOWNER(1);            /* SET XVARIABLE */        01273800
*        ZXBEGINPRODNAME='INPUT';            /* SET IN/OUTPUT */        01273900
*        ZXPRODOWNER='INPUT';                /* SET IN/OUTPUT */        01274000
*        IF PRODOWNER(1)=''                  /* CHECK ME KEY */         01274100
*          THEN                                                         01274200
*            DO;                                                        01274300
*              ZXBEGINPRODNAME='';           /* RESET IN/OUTPUT */      01274400
*              ZXPRODOWNER='';               /* RESET IN/OUTPUT */      01274500
*              ZMS=' 8,  '!!                                            01274600
*                  ' "PRODOWNER" KEY AND ITS'!!                         01274700
*                  ' ARGUMENT ARE REQUIRED.'; /**KRQDP* MSG*/           01274800
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01274900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01275000
*              ZMACRET=8;                    /* MACRO ERROR */          01275100
*           END;                                                        01275200
*      END;                                                             01275300
*/*PG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01275400
*  IF PRTOKEN^=''                            /* CHECK ME KEY */         01275500
*    THEN                                                               01275600
*      DO;                                                              01275700
*        IF NUMBER(PRTOKEN)>1                /* CHECK SUBLISTS */       01275800
*          THEN                                                         01275900
*            DO;                                                        01276000
*              ZMS=' 8, "PRTOKEN'!!          /**KPOSP* MSG*/            01276100
*                  PRTOKEN!!                                            01276200
*                  '" "PRTOKEN"'!!                                      01276300
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01276400
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01276500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01276600
*              ZMACRET=8;                    /* MACRO ERROR */          01276700
*            END;                                                       01276800
*        IF XBEGINPRODNAME=''                /* CHECK XVARIABLE */      01276900
*          THEN                                                         01277000
*            DO;                             /* VALID ME KEY */         01277100
*              XBEGINPRODNAME='PRTOKEN';     /* SET XVAR1 */            01277200
*              XPRTOKEN=PRTOKEN(1);          /* SET XVAR2 */            01277300
*              ZXBEGINPRODNAME='INPUT';      /* SET IN/OUTPUT */        01277400
*              ZXPRTOKEN='INPUT';            /* SET IN/OUTPUT */        01277500
*              IF PRTOKEN(1)=''              /* CHECK ME KEY */         01277600
*                THEN                                                   01277700
*                  DO;                                                  01277800
*                    ZXBEGINPRODNAME='';     /* RESET IN/OUTPUT */      01277900
*                    ZXPRTOKEN='';           /* RESET IN/OUTPUT */      01278000
*                    ZMS=' 8,  '!!                                      01278100
*                        ' "PRTOKEN" KEY AND ITS'!!                     01278200
*                        ' ARGUMENT ARE REQUIRED.'; /**KRQDP* MSG*/     01278300
*                    ANS MSG('?IFAUSAGE ---> '!!ZMS);                   01278400
*                    ANS(COMMENT(ZMS)) COL(MACLMAR);                    01278500
*                    ZMACRET=8;              /* MACRO ERROR */          01278600
*                  END;                                                 01278700
*            END;                                                       01278800
*          ELSE                                                         01278900
*            DO;                                                        01279000
*              ZMS=' 8, "PRTOKEN'!!          /**KMEKP* MSG*/            01279100
*                  PRTOKEN!!'"'!!                                       01279200
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'!!                01279300
*                  XBEGINPRODNAME!!                                     01279400
*                  '" KEY.';                                            01279500
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01279600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01279700
*              ZMACRET=8;                    /* MACRO ERROR */          01279800
*            END;                                                       01279900
*      END;                                                             01280000
*/*PG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01280100
*  IF PRTOKEN64^=''                          /* CHECK ME KEY */         01280200
*    THEN                                                               01280300
*      DO;                                                              01280400
*        IF NUMBER(PRTOKEN64)>1              /* CHECK SUBLISTS */       01280500
*          THEN                                                         01280600
*            DO;                                                        01280700
*              ZMS=' 8, "PRTOKEN64'!!        /**KPOSP* MSG*/            01280800
*                  PRTOKEN64!!                                          01280900
*                  '" "PRTOKEN64"'!!                                    01281000
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01281100
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01281200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01281300
*              ZMACRET=8;                    /* MACRO ERROR */          01281400
*            END;                                                       01281500
*        IF XBEGINPRODNAME=''                /* CHECK XVARIABLE */      01281600
*          THEN                                                         01281700
*            DO;                             /* VALID ME KEY */         01281800
*              XBEGINPRODNAME='PRTOKEN64';   /* SET XVAR1 */            01281900
*              XPRTOKEN64=PRTOKEN64(1);      /* SET XVAR2 */            01282000
*              ZXBEGINPRODNAME='INPUT';      /* SET IN/OUTPUT */        01282100
*              ZXPRTOKEN64='INPUT';          /* SET IN/OUTPUT */        01282200
*              IF PRTOKEN64(1)=''            /* CHECK ME KEY */         01282300
*                THEN                                                   01282400
*                  DO;                                                  01282500
*                    ZXBEGINPRODNAME='';     /* RESET IN/OUTPUT */      01282600
*                    ZXPRTOKEN64='';         /* RESET IN/OUTPUT */      01282700
*                    ZMS=' 8,  '!!                                      01282800
*                        ' "PRTOKEN64" KEY AND ITS'!!                   01282900
*                        ' ARGUMENT ARE REQUIRED.'; /**KRQDP* MSG*/     01283000
*                    ANS MSG('?IFAUSAGE ---> '!!ZMS);                   01283100
*                    ANS(COMMENT(ZMS)) COL(MACLMAR);                    01283200
*                    ZMACRET=8;              /* MACRO ERROR */          01283300
*                  END;                                                 01283400
*            END;                                                       01283500
*          ELSE                                                         01283600
*            DO;                                                        01283700
*              ZMS=' 8, "PRTOKEN64'!!        /**KMEKP* MSG*/            01283800
*                  PRTOKEN64!!'"'!!                                     01283900
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'!!                01284000
*                  XBEGINPRODNAME!!                                     01284100
*                  '" KEY.';                                            01284200
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01284300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01284400
*              ZMACRET=8;                    /* MACRO ERROR */          01284500
*            END;                                                       01284600
*      END;                                                             01284700
*/*PG.KMEKY08 NAME, RQD INPUT, ME KEYS -ME KEY DEFAULT---------------*/ 01284800
*  IF XBEGINPRODNAME=''                      /* CHECK XVARIABLE */      01284900
*    THEN                                                               01285000
*      DO;                                                              01285100
*        XBEGINPRODNAME='PRODOWNER';         /* SET DEFAULT */          01285200
*        XPRODOWNER='0';                     /* SET DEFAULT */          01285300
*        ZXBEGINPRODNAME='';                 /* RESET IN/OUTPUT */      01285400
*        ZXPRODOWNER='';                     /* RESET IN/OUTPUT */      01285500
*        ZMS=' 8, ONE OF THE FOLLOWING'!!    /**KMERP* MSG*/            01285600
*            ' MUTUALLY EXCLUSIVE KEY(S) IS'!!                          01285700
*            ' REQUIRED:'!!                                             01285800
*            ' "PRODOWNER",'!!               /* VALID ME KEY */         01285900
*            ' "PRTOKEN",'!!                 /* VALID ME KEY */         01286000
*            ' OR "PRTOKEN64".';             /* VALID ME KEY */         01286100
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01286200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01286300
*        ZMACRET=8;                          /* MACRO ERROR */          01286400
*      END;                                                             01286500
*/*PG.KMEKY11 NAME, RQD INPUT, ME KEYS -START------------------------*/ 01286600
*  IF XBEGINPRODNAME='PRODOWNER'             /* CHECK FOR ME KEY */     01286700
*    THEN                                                               01286800
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01286900
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01287000
*  IF NUMBER(PRODNAME)>1                     /* CHECK POSITIONALS */    01287100
*    THEN                                                               01287200
*      DO;                                                              01287300
*        ZMS=' 8, "PRODNAME'!!               /**KPOSP* MSG*/            01287400
*            PRODNAME!!                                                 01287500
*            '" "PRODNAME"'!!                                           01287600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01287700
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01287800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01287900
*        ZMACRET=8;                          /* MACRO ERROR */          01288000
*      END;                                                             01288100
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 01288200
*  XPRODNAME=PRODNAME(1);                    /* SET XVARIABLE */        01288300
*  IF PRODNAME(1)=''                         /* CHECK FOR NULL */       01288400
*   THEN                                                                01288500
*    DO;                                     /* KEY IS REQUIRED */      01288600
*        ZXPRODNAME='';                      /* RESET IN/OUTPUT */      01288700
*        ZMS=' 8,  '!!                                                  01288800
*            ' "PRODNAME" KEY AND ITS'!!                                01288900
*            ' ARGUMENT ARE REQUIRED.';      /**KRQDP* MSG*/            01289000
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01289100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01289200
*        ZMACRET=8;                          /* MACRO ERROR */          01289300
*    END;                                                               01289400
*  ELSE                                                                 01289500
*    ZXPRODNAME='INPUT';                     /* SET IN/OUTPUT */        01289600
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01289700
*  IF PRODVERS='PRODVERS' ! PRODVERS='()'    /*CHECK ENTRY*/            01289800
*    THEN                                                               01289900
*      DO;                                                              01290000
*        ZMS=' 8, THE "PRODVERS" KEY'!!                                 01290100
*            ' MUST CONTAIN ONE'!!                                      01290200
*            ' (OR MORE) ARGUMENT(S).';                                 01290300
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01290400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01290500
*        ZMACRET=8;                          /* MACRO ERROR */          01290600
*      END;                                                             01290700
*  IF NUMBER(PRODVERS)>1                     /* CHECK POSITIONALS */    01290800
*    THEN                                                               01290900
*      DO;                                                              01291000
*        ZMS=' 8, "PRODVERS'!!               /**KPOSP* MSG*/            01291100
*            PRODVERS!!                                                 01291200
*            '" "PRODVERS"'!!                                           01291300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01291400
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01291500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01291600
*        ZMACRET=8;                          /* MACRO ERROR */          01291700
*      END;                                                             01291800
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01291900
*  ZXPRODVERS='INPUT';                       /* SET IN/OUTPUT */        01292000
*  XPRODVERS='NONE';                         /* SET DEFAULT */          01292100
*  IF PRODVERS(1)^=''                        /* CHECK FOR NULL */       01292200
*    THEN                                                               01292300
*      XPRODVERS=PRODVERS(1);                /* SET XVARIABLE */        01292400
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01292500
*  IF PRODQUAL='PRODQUAL' ! PRODQUAL='()'    /*CHECK ENTRY*/            01292600
*    THEN                                                               01292700
*      DO;                                                              01292800
*        ZMS=' 8, THE "PRODQUAL" KEY'!!                                 01292900
*            ' MUST CONTAIN ONE'!!                                      01293000
*            ' (OR MORE) ARGUMENT(S).';                                 01293100
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01293200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01293300
*        ZMACRET=8;                          /* MACRO ERROR */          01293400
*      END;                                                             01293500
*  IF NUMBER(PRODQUAL)>1                     /* CHECK POSITIONALS */    01293600
*    THEN                                                               01293700
*      DO;                                                              01293800
*        ZMS=' 8, "PRODQUAL'!!               /**KPOSP* MSG*/            01293900
*            PRODQUAL!!                                                 01294000
*            '" "PRODQUAL"'!!                                           01294100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01294200
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01294300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01294400
*        ZMACRET=8;                          /* MACRO ERROR */          01294500
*      END;                                                             01294600
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01294700
*  ZXPRODQUAL='INPUT';                       /* SET IN/OUTPUT */        01294800
*  XPRODQUAL='NONE';                         /* SET DEFAULT */          01294900
*  IF PRODQUAL(1)^=''                        /* CHECK FOR NULL */       01295000
*    THEN                                                               01295100
*      XPRODQUAL=PRODQUAL(1);                /* SET XVARIABLE */        01295200
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01295300
*  IF PRODID='PRODID' ! PRODID='()'          /*CHECK ENTRY*/            01295400
*    THEN                                                               01295500
*      DO;                                                              01295600
*        ZMS=' 8, THE "PRODID" KEY'!!                                   01295700
*            ' MUST CONTAIN ONE'!!                                      01295800
*            ' (OR MORE) ARGUMENT(S).';                                 01295900
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01296000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01296100
*        ZMACRET=8;                          /* MACRO ERROR */          01296200
*      END;                                                             01296300
*  IF NUMBER(PRODID)>1                       /* CHECK POSITIONALS */    01296400
*    THEN                                                               01296500
*      DO;                                                              01296600
*        ZMS=' 8, "PRODID'!!                 /**KPOSP* MSG*/            01296700
*            PRODID!!                                                   01296800
*            '" "PRODID"'!!                                             01296900
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01297000
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01297100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01297200
*        ZMACRET=8;                          /* MACRO ERROR */          01297300
*      END;                                                             01297400
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01297500
*  ZXPRODID='INPUT';                         /* SET IN/OUTPUT */        01297600
*  XPRODID='NONE';                           /* SET DEFAULT */          01297700
*  IF PRODID(1)^=''                          /* CHECK FOR NULL */       01297800
*    THEN                                                               01297900
*      XPRODID=PRODID(1);                    /* SET XVARIABLE */        01298000
*/*PG.KMEKY10 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 01298100
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01298200
*/*PG.KMEKY12 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS--------------*/ 01298300
*  IF XBEGINPRODNAME='PRTOKEN'               /* CHECK FOR ME KEY */     01298400
*    THEN                                                               01298500
*      DO;                                   /*DISALLOWED KEYS CHECK */ 01298600
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 01298700
*        IF PRODNAME^=''                     /* CHECK KEY */            01298800
*          THEN                                                         01298900
*            ZCVAL=ZCVAL!!',PRODNAME';                                  01299000
*        IF PRODVERS^=''                     /* CHECK KEY */            01299100
*          THEN                                                         01299200
*            ZCVAL=ZCVAL!!',PRODVERS';                                  01299300
*        IF PRODQUAL^=''                     /* CHECK KEY */            01299400
*          THEN                                                         01299500
*            ZCVAL=ZCVAL!!',PRODQUAL';                                  01299600
*        IF PRODID^=''                       /* CHECK KEY */            01299700
*          THEN                                                         01299800
*            ZCVAL=ZCVAL!!',PRODID';                                    01299900
*        IF ZCVAL^=''                                                   01300000
*          THEN                                                         01300100
*            DO;                             /* INCORRECT KEYS USED */  01300200
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            01300300
*              ZMS=' 8, "PRTOKEN'!!          /**KMEIP* MSG*/            01300400
*                  '"'!!                                                01300500
*                  ' DOES NOT ALLOW THE USE OF THE'!!                   01300600
*                  ' FOLLOWING KEY(S) "'!!                              01300700
*                  ZCVAL!!'".';                                         01300800
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01300900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01301000
*              ZMACRET=8;                    /* MACRO ERROR */          01301100
*            END;                                                       01301200
*      END;                                                             01301300
*/*PG.KMEKY12 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS--------------*/ 01301400
*  IF XBEGINPRODNAME='PRTOKEN64'             /* CHECK FOR ME KEY */     01301500
*    THEN                                                               01301600
*      DO;                                   /*DISALLOWED KEYS CHECK */ 01301700
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 01301800
*        IF PRODNAME^=''                     /* CHECK KEY */            01301900
*          THEN                                                         01302000
*            ZCVAL=ZCVAL!!',PRODNAME';                                  01302100
*        IF PRODVERS^=''                     /* CHECK KEY */            01302200
*          THEN                                                         01302300
*            ZCVAL=ZCVAL!!',PRODVERS';                                  01302400
*        IF PRODQUAL^=''                     /* CHECK KEY */            01302500
*          THEN                                                         01302600
*            ZCVAL=ZCVAL!!',PRODQUAL';                                  01302700
*        IF PRODID^=''                       /* CHECK KEY */            01302800
*          THEN                                                         01302900
*            ZCVAL=ZCVAL!!',PRODID';                                    01303000
*        IF ZCVAL^=''                                                   01303100
*          THEN                                                         01303200
*            DO;                             /* INCORRECT KEYS USED */  01303300
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            01303400
*              ZMS=' 8, "PRTOKEN64'!!        /**KMEIP* MSG*/            01303500
*                  '"'!!                                                01303600
*                  ' DOES NOT ALLOW THE USE OF THE'!!                   01303700
*                  ' FOLLOWING KEY(S) "'!!                              01303800
*                  ZCVAL!!'".';                                         01303900
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01304000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01304100
*              ZMACRET=8;                    /* MACRO ERROR */          01304200
*            END;                                                       01304300
*      END;                                                             01304400
*/*PG.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01304500
*  XDUMMY2='';                               /* RESET XVARIABLE */      01304600
*  IF BEGTIME^=''                            /* CHECK ME KEY */         01304700
*    THEN                                                               01304800
*      DO;                                   /* VALID ME KEY */         01304900
*        IF NUMBER(BEGTIME)>1                /* CHECK SUBLISTS */       01305000
*          THEN                                                         01305100
*            DO;                                                        01305200
*              ZMS=' 8, "BEGTIME'!!          /**KPOSP* MSG*/            01305300
*                  BEGTIME!!                                            01305400
*                  '" "BEGTIME"'!!                                      01305500
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01305600
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01305700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01305800
*              ZMACRET=8;                    /* MACRO ERROR */          01305900
*            END;                                                       01306000
*        XDUMMY2='BEGTIME';                  /* SET XVARIABLE */        01306100
*        XBEGTIME=BEGTIME(1);                /* SET XVARIABLE */        01306200
*        ZXDUMMY2='OUTPUT';                  /* SET IN/OUTPUT */        01306300
*        ZXBEGTIME='OUTPUT';                 /* SET IN/OUTPUT */        01306400
*        IF BEGTIME(1)=''                    /* CHECK ME KEY */         01306500
*          THEN                                                         01306600
*            DO;                                                        01306700
*              ZXDUMMY2='';                  /* RESET IN/OUTPUT */      01306800
*              ZXBEGTIME='';                 /* RESET IN/OUTPUT */      01306900
*              ZMS=' 8, THE "BEGTIME" KEY'!!                            01307000
*                  ' MUST CONTAIN ONE'!!                                01307100
*                  ' (OR MORE) ARGUMENT(S).';                           01307200
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01307300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01307400
*              ZMACRET=8;                    /* MACRO ERROR */          01307500
*           END;                                                        01307600
*      END;                                                             01307700
*/*PG.KMEKY02 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01307800
*  IF BEGTIME64^=''                          /* CHECK ME KEY */         01307900
*    THEN                                                               01308000
*      DO;                                                              01308100
*        IF NUMBER(BEGTIME64)>1              /* CHECK SUBLISTS */       01308200
*          THEN                                                         01308300
*            DO;                                                        01308400
*              ZMS=' 8, "BEGTIME64'!!        /**KPOSP* MSG*/            01308500
*                  BEGTIME64!!                                          01308600
*                  '" "BEGTIME64"'!!                                    01308700
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01308800
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01308900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01309000
*              ZMACRET=8;                    /* MACRO ERROR */          01309100
*            END;                                                       01309200
*        IF XDUMMY2=''                       /* CHECK XVARIABLE */      01309300
*          THEN                                                         01309400
*            DO;                             /* VALID ME KEY */         01309500
*              XDUMMY2='BEGTIME64';          /* SET XVAR1 */            01309600
*              XBEGTIME64=BEGTIME64(1);      /* SET XVAR2 */            01309700
*              ZXDUMMY2='OUTPUT';            /* SET IN/OUTPUT */        01309800
*              ZXBEGTIME64='OUTPUT';         /* SET IN/OUTPUT */        01309900
*              IF BEGTIME64(1)=''            /* CHECK ME KEY */         01310000
*                THEN                                                   01310100
*                  DO;                                                  01310200
*                    ZXDUMMY2='';            /* RESET IN/OUTPUT */      01310300
*                    ZXBEGTIME64='';         /* RESET IN/OUTPUT */      01310400
*                    ZMS=' 8, THE "BEGTIME64" KEY'!!                    01310500
*                        ' MUST CONTAIN ONE'!!                          01310600
*                        ' (OR MORE) ARGUMENT(S).';                     01310700
*                    ANS MSG('?IFAUSAGE ---> '!!ZMS);                   01310800
*                    ANS(COMMENT(ZMS)) COL(MACLMAR);                    01310900
*                    ZMACRET=8;              /* MACRO ERROR */          01311000
*                  END;                                                 01311100
*            END;                                                       01311200
*          ELSE                                                         01311300
*            DO;                                                        01311400
*              ZMS=' 8, "BEGTIME64'!!        /**KMEKP* MSG*/            01311500
*                  BEGTIME64!!'"'!!                                     01311600
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'!!                01311700
*                  XDUMMY2!!                                            01311800
*                  '" KEY.';                                            01311900
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01312000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01312100
*              ZMACRET=8;                    /* MACRO ERROR */          01312200
*            END;                                                       01312300
*      END;                                                             01312400
*/*PG.KMEKY07 NAME, OPT OUTPUT, ME KEYS -ME KEY DEFAULT--------------*/ 01312500
*  IF XDUMMY2=''                             /* CHECK XVARIABLE */      01312600
*    THEN                                                               01312700
*      DO;                                                              01312800
*        XDUMMY2='BEGTIME';                  /* SET DEFAULT */          01312900
*        XBEGTIME='0';                       /* SET DEFAULT */          01313000
*      END;                                                             01313100
*/*PG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01313200
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     01313300
*/*PG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01313400
*  IF REQUEST(1)='FUNCTIONDATA'              /* CHECK FOR KEYWORD */    01313500
*    THEN                                                               01313600
*      DO;                                                              01313700
*        XREQUEST='FUNCTIONDATA';            /* SET XVARIABLE */        01313800
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    01313900
*          THEN                                                         01314000
*            DO;                                                        01314100
*              ZMS=' 8, "REQUEST'!!          /**KPOSP* MSG*/            01314200
*                  REQUEST!!                                            01314300
*                  '" "REQUEST"'!!                                      01314400
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01314500
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01314600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01314700
*              ZMACRET=8;                    /* MACRO ERROR */          01314800
*            END;                                                       01314900
*/*PG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01315000
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 01315100
*        IF DOMAIN^=''                       /* CHECK FOR KEY */        01315200
*          THEN                                                         01315300
*            ZCVAL=ZCVAL!!',DOMAIN';         /* INCORRECT KEY USED */   01315400
*        IF SCOPE^=''                        /* CHECK FOR KEY */        01315500
*          THEN                                                         01315600
*            ZCVAL=ZCVAL!!',SCOPE';          /* INCORRECT KEY USED */   01315700
*        IF UNAUTHSERV^=''                   /* CHECK FOR KEY */        01315800
*          THEN                                                         01315900
*            ZCVAL=ZCVAL!!',UNAUTHSERV';     /* INCORRECT KEY USED */   01316000
*        IF ENDTIME^=''                      /* CHECK FOR KEY */        01316100
*          THEN                                                         01316200
*            ZCVAL=ZCVAL!!',ENDTIME';        /* INCORRECT KEY USED */   01316300
*        IF ENDTIME64^=''                    /* CHECK FOR KEY */        01316400
*          THEN                                                         01316500
*            ZCVAL=ZCVAL!!',ENDTIME64';      /* INCORRECT KEY USED */   01316600
*        IF ENDDATA^=''                      /* CHECK FOR KEY */        01316700
*          THEN                                                         01316800
*            ZCVAL=ZCVAL!!',ENDDATA';        /* INCORRECT KEY USED */   01316900
*        IF ENDDATA64^=''                    /* CHECK FOR KEY */        01317000
*          THEN                                                         01317100
*            ZCVAL=ZCVAL!!',ENDDATA64';      /* INCORRECT KEY USED */   01317200
*        IF BEGTIME^=''                      /* CHECK FOR KEY */        01317300
*          THEN                                                         01317400
*            ZCVAL=ZCVAL!!',BEGTIME';        /* INCORRECT KEY USED */   01317500
*        IF BEGTIME64^=''                    /* CHECK FOR KEY */        01317600
*          THEN                                                         01317700
*            ZCVAL=ZCVAL!!',BEGTIME64';      /* INCORRECT KEY USED */   01317800
*        IF ZCVAL^=''                                                   01317900
*          THEN                                                         01318000
*            DO;                             /* INCORRECT KEYS USED */  01318100
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            01318200
*              ZMS=' 8, "REQUEST'!!          /**KMEIP* MSG*/            01318300
*                  REQUEST!!'"'!!                                       01318400
*                  ' DOES NOT ALLOW THE USE OF THE'!!                   01318500
*                  ' FOLLOWING KEY(S) "'!!                              01318600
*                  ZCVAL!!'".';                                         01318700
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01318800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01318900
*              ZMACRET=8;                    /* MACRO ERROR */          01319000
*            END;                                                       01319100
*/*PG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01319200
*  XDATAPRODNAME='';                         /* RESET XVARIABLE */      01319300
*  IF PRODOWNER^=''                          /* CHECK ME KEY */         01319400
*    THEN                                                               01319500
*      DO;                                   /* VALID ME KEY */         01319600
*        IF NUMBER(PRODOWNER)>1              /* CHECK SUBLISTS */       01319700
*          THEN                                                         01319800
*            DO;                                                        01319900
*              ZMS=' 8, "PRODOWNER'!!        /**KPOSP* MSG*/            01320000
*                  PRODOWNER!!                                          01320100
*                  '" "PRODOWNER"'!!                                    01320200
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01320300
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01320400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01320500
*              ZMACRET=8;                    /* MACRO ERROR */          01320600
*            END;                                                       01320700
*        XDATAPRODNAME='PRODOWNER';          /* SET XVARIABLE */        01320800
*        XPRODOWNER=PRODOWNER(1);            /* SET XVARIABLE */        01320900
*        ZXDATAPRODNAME='INPUT';             /* SET IN/OUTPUT */        01321000
*        ZXPRODOWNER='INPUT';                /* SET IN/OUTPUT */        01321100
*        IF PRODOWNER(1)=''                  /* CHECK ME KEY */         01321200
*          THEN                                                         01321300
*            DO;                                                        01321400
*              ZXDATAPRODNAME='';            /* RESET IN/OUTPUT */      01321500
*              ZXPRODOWNER='';               /* RESET IN/OUTPUT */      01321600
*              ZMS=' 8,  '!!                                            01321700
*                  ' "PRODOWNER" KEY AND ITS'!!                         01321800
*                  ' ARGUMENT ARE REQUIRED.'; /**KRQDP* MSG*/           01321900
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01322000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01322100
*              ZMACRET=8;                    /* MACRO ERROR */          01322200
*           END;                                                        01322300
*      END;                                                             01322400
*/*PG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01322500
*  IF PRTOKEN^=''                            /* CHECK ME KEY */         01322600
*    THEN                                                               01322700
*      DO;                                                              01322800
*        IF NUMBER(PRTOKEN)>1                /* CHECK SUBLISTS */       01322900
*          THEN                                                         01323000
*            DO;                                                        01323100
*              ZMS=' 8, "PRTOKEN'!!          /**KPOSP* MSG*/            01323200
*                  PRTOKEN!!                                            01323300
*                  '" "PRTOKEN"'!!                                      01323400
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01323500
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01323600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01323700
*              ZMACRET=8;                    /* MACRO ERROR */          01323800
*            END;                                                       01323900
*        IF XDATAPRODNAME=''                 /* CHECK XVARIABLE */      01324000
*          THEN                                                         01324100
*            DO;                             /* VALID ME KEY */         01324200
*              XDATAPRODNAME='PRTOKEN';      /* SET XVAR1 */            01324300
*              XPRTOKEN=PRTOKEN(1);          /* SET XVAR2 */            01324400
*              ZXDATAPRODNAME='INPUT';       /* SET IN/OUTPUT */        01324500
*              ZXPRTOKEN='INPUT';            /* SET IN/OUTPUT */        01324600
*              IF PRTOKEN(1)=''              /* CHECK ME KEY */         01324700
*                THEN                                                   01324800
*                  DO;                                                  01324900
*                    ZXDATAPRODNAME='';      /* RESET IN/OUTPUT */      01325000
*                    ZXPRTOKEN='';           /* RESET IN/OUTPUT */      01325100
*                    ZMS=' 8,  '!!                                      01325200
*                        ' "PRTOKEN" KEY AND ITS'!!                     01325300
*                        ' ARGUMENT ARE REQUIRED.'; /**KRQDP* MSG*/     01325400
*                    ANS MSG('?IFAUSAGE ---> '!!ZMS);                   01325500
*                    ANS(COMMENT(ZMS)) COL(MACLMAR);                    01325600
*                    ZMACRET=8;              /* MACRO ERROR */          01325700
*                  END;                                                 01325800
*            END;                                                       01325900
*          ELSE                                                         01326000
*            DO;                                                        01326100
*              ZMS=' 8, "PRTOKEN'!!          /**KMEKP* MSG*/            01326200
*                  PRTOKEN!!'"'!!                                       01326300
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'!!                01326400
*                  XDATAPRODNAME!!                                      01326500
*                  '" KEY.';                                            01326600
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01326700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01326800
*              ZMACRET=8;                    /* MACRO ERROR */          01326900
*            END;                                                       01327000
*      END;                                                             01327100
*/*PG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01327200
*  IF PRTOKEN64^=''                          /* CHECK ME KEY */         01327300
*    THEN                                                               01327400
*      DO;                                                              01327500
*        IF NUMBER(PRTOKEN64)>1              /* CHECK SUBLISTS */       01327600
*          THEN                                                         01327700
*            DO;                                                        01327800
*              ZMS=' 8, "PRTOKEN64'!!        /**KPOSP* MSG*/            01327900
*                  PRTOKEN64!!                                          01328000
*                  '" "PRTOKEN64"'!!                                    01328100
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01328200
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01328300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01328400
*              ZMACRET=8;                    /* MACRO ERROR */          01328500
*            END;                                                       01328600
*        IF XDATAPRODNAME=''                 /* CHECK XVARIABLE */      01328700
*          THEN                                                         01328800
*            DO;                             /* VALID ME KEY */         01328900
*              XDATAPRODNAME='PRTOKEN64';    /* SET XVAR1 */            01329000
*              XPRTOKEN64=PRTOKEN64(1);      /* SET XVAR2 */            01329100
*              ZXDATAPRODNAME='INPUT';       /* SET IN/OUTPUT */        01329200
*              ZXPRTOKEN64='INPUT';          /* SET IN/OUTPUT */        01329300
*              IF PRTOKEN64(1)=''            /* CHECK ME KEY */         01329400
*                THEN                                                   01329500
*                  DO;                                                  01329600
*                    ZXDATAPRODNAME='';      /* RESET IN/OUTPUT */      01329700
*                    ZXPRTOKEN64='';         /* RESET IN/OUTPUT */      01329800
*                    ZMS=' 8,  '!!                                      01329900
*                        ' "PRTOKEN64" KEY AND ITS'!!                   01330000
*                        ' ARGUMENT ARE REQUIRED.'; /**KRQDP* MSG*/     01330100
*                    ANS MSG('?IFAUSAGE ---> '!!ZMS);                   01330200
*                    ANS(COMMENT(ZMS)) COL(MACLMAR);                    01330300
*                    ZMACRET=8;              /* MACRO ERROR */          01330400
*                  END;                                                 01330500
*            END;                                                       01330600
*          ELSE                                                         01330700
*            DO;                                                        01330800
*              ZMS=' 8, "PRTOKEN64'!!        /**KMEKP* MSG*/            01330900
*                  PRTOKEN64!!'"'!!                                     01331000
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'!!                01331100
*                  XDATAPRODNAME!!                                      01331200
*                  '" KEY.';                                            01331300
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01331400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01331500
*              ZMACRET=8;                    /* MACRO ERROR */          01331600
*            END;                                                       01331700
*      END;                                                             01331800
*/*PG.KMEKY08 NAME, RQD INPUT, ME KEYS -ME KEY DEFAULT---------------*/ 01331900
*  IF XDATAPRODNAME=''                       /* CHECK XVARIABLE */      01332000
*    THEN                                                               01332100
*      DO;                                                              01332200
*        XDATAPRODNAME='PRODOWNER';          /* SET DEFAULT */          01332300
*        XPRODOWNER='0';                     /* SET DEFAULT */          01332400
*        ZXDATAPRODNAME='';                  /* RESET IN/OUTPUT */      01332500
*        ZXPRODOWNER='';                     /* RESET IN/OUTPUT */      01332600
*        ZMS=' 8, ONE OF THE FOLLOWING'!!    /**KMERP* MSG*/            01332700
*            ' MUTUALLY EXCLUSIVE KEY(S) IS'!!                          01332800
*            ' REQUIRED:'!!                                             01332900
*            ' "PRODOWNER",'!!               /* VALID ME KEY */         01333000
*            ' "PRTOKEN",'!!                 /* VALID ME KEY */         01333100
*            ' OR "PRTOKEN64".';             /* VALID ME KEY */         01333200
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01333300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01333400
*        ZMACRET=8;                          /* MACRO ERROR */          01333500
*      END;                                                             01333600
*/*PG.KMEKY11 NAME, RQD INPUT, ME KEYS -START------------------------*/ 01333700
*  IF XDATAPRODNAME='PRODOWNER'              /* CHECK FOR ME KEY */     01333800
*    THEN                                                               01333900
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01334000
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01334100
*  IF NUMBER(PRODNAME)>1                     /* CHECK POSITIONALS */    01334200
*    THEN                                                               01334300
*      DO;                                                              01334400
*        ZMS=' 8, "PRODNAME'!!               /**KPOSP* MSG*/            01334500
*            PRODNAME!!                                                 01334600
*            '" "PRODNAME"'!!                                           01334700
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01334800
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01334900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01335000
*        ZMACRET=8;                          /* MACRO ERROR */          01335100
*      END;                                                             01335200
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 01335300
*  XPRODNAME=PRODNAME(1);                    /* SET XVARIABLE */        01335400
*  IF PRODNAME(1)=''                         /* CHECK FOR NULL */       01335500
*   THEN                                                                01335600
*    DO;                                     /* KEY IS REQUIRED */      01335700
*        ZXPRODNAME='';                      /* RESET IN/OUTPUT */      01335800
*        ZMS=' 8,  '!!                                                  01335900
*            ' "PRODNAME" KEY AND ITS'!!                                01336000
*            ' ARGUMENT ARE REQUIRED.';      /**KRQDP* MSG*/            01336100
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01336200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01336300
*        ZMACRET=8;                          /* MACRO ERROR */          01336400
*    END;                                                               01336500
*  ELSE                                                                 01336600
*    ZXPRODNAME='INPUT';                     /* SET IN/OUTPUT */        01336700
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01336800
*  IF PRODVERS='PRODVERS' ! PRODVERS='()'    /*CHECK ENTRY*/            01336900
*    THEN                                                               01337000
*      DO;                                                              01337100
*        ZMS=' 8, THE "PRODVERS" KEY'!!                                 01337200
*            ' MUST CONTAIN ONE'!!                                      01337300
*            ' (OR MORE) ARGUMENT(S).';                                 01337400
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01337500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01337600
*        ZMACRET=8;                          /* MACRO ERROR */          01337700
*      END;                                                             01337800
*  IF NUMBER(PRODVERS)>1                     /* CHECK POSITIONALS */    01337900
*    THEN                                                               01338000
*      DO;                                                              01338100
*        ZMS=' 8, "PRODVERS'!!               /**KPOSP* MSG*/            01338200
*            PRODVERS!!                                                 01338300
*            '" "PRODVERS"'!!                                           01338400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01338500
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01338600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01338700
*        ZMACRET=8;                          /* MACRO ERROR */          01338800
*      END;                                                             01338900
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01339000
*  ZXPRODVERS='INPUT';                       /* SET IN/OUTPUT */        01339100
*  XPRODVERS='NONE';                         /* SET DEFAULT */          01339200
*  IF PRODVERS(1)^=''                        /* CHECK FOR NULL */       01339300
*    THEN                                                               01339400
*      XPRODVERS=PRODVERS(1);                /* SET XVARIABLE */        01339500
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01339600
*  IF PRODQUAL='PRODQUAL' ! PRODQUAL='()'    /*CHECK ENTRY*/            01339700
*    THEN                                                               01339800
*      DO;                                                              01339900
*        ZMS=' 8, THE "PRODQUAL" KEY'!!                                 01340000
*            ' MUST CONTAIN ONE'!!                                      01340100
*            ' (OR MORE) ARGUMENT(S).';                                 01340200
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01340300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01340400
*        ZMACRET=8;                          /* MACRO ERROR */          01340500
*      END;                                                             01340600
*  IF NUMBER(PRODQUAL)>1                     /* CHECK POSITIONALS */    01340700
*    THEN                                                               01340800
*      DO;                                                              01340900
*        ZMS=' 8, "PRODQUAL'!!               /**KPOSP* MSG*/            01341000
*            PRODQUAL!!                                                 01341100
*            '" "PRODQUAL"'!!                                           01341200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01341300
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01341400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01341500
*        ZMACRET=8;                          /* MACRO ERROR */          01341600
*      END;                                                             01341700
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01341800
*  ZXPRODQUAL='INPUT';                       /* SET IN/OUTPUT */        01341900
*  XPRODQUAL='NONE';                         /* SET DEFAULT */          01342000
*  IF PRODQUAL(1)^=''                        /* CHECK FOR NULL */       01342100
*    THEN                                                               01342200
*      XPRODQUAL=PRODQUAL(1);                /* SET XVARIABLE */        01342300
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01342400
*  IF PRODID='PRODID' ! PRODID='()'          /*CHECK ENTRY*/            01342500
*    THEN                                                               01342600
*      DO;                                                              01342700
*        ZMS=' 8, THE "PRODID" KEY'!!                                   01342800
*            ' MUST CONTAIN ONE'!!                                      01342900
*            ' (OR MORE) ARGUMENT(S).';                                 01343000
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01343100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01343200
*        ZMACRET=8;                          /* MACRO ERROR */          01343300
*      END;                                                             01343400
*  IF NUMBER(PRODID)>1                       /* CHECK POSITIONALS */    01343500
*    THEN                                                               01343600
*      DO;                                                              01343700
*        ZMS=' 8, "PRODID'!!                 /**KPOSP* MSG*/            01343800
*            PRODID!!                                                   01343900
*            '" "PRODID"'!!                                             01344000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01344100
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01344200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01344300
*        ZMACRET=8;                          /* MACRO ERROR */          01344400
*      END;                                                             01344500
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01344600
*  ZXPRODID='INPUT';                         /* SET IN/OUTPUT */        01344700
*  XPRODID='NONE';                           /* SET DEFAULT */          01344800
*  IF PRODID(1)^=''                          /* CHECK FOR NULL */       01344900
*    THEN                                                               01345000
*      XPRODID=PRODID(1);                    /* SET XVARIABLE */        01345100
*/*PG.KMEKY10 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 01345200
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01345300
*/*PG.KMEKY12 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS--------------*/ 01345400
*  IF XDATAPRODNAME='PRTOKEN'                /* CHECK FOR ME KEY */     01345500
*    THEN                                                               01345600
*      DO;                                   /*DISALLOWED KEYS CHECK */ 01345700
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 01345800
*        IF PRODNAME^=''                     /* CHECK KEY */            01345900
*          THEN                                                         01346000
*            ZCVAL=ZCVAL!!',PRODNAME';                                  01346100
*        IF PRODVERS^=''                     /* CHECK KEY */            01346200
*          THEN                                                         01346300
*            ZCVAL=ZCVAL!!',PRODVERS';                                  01346400
*        IF PRODQUAL^=''                     /* CHECK KEY */            01346500
*          THEN                                                         01346600
*            ZCVAL=ZCVAL!!',PRODQUAL';                                  01346700
*        IF PRODID^=''                       /* CHECK KEY */            01346800
*          THEN                                                         01346900
*            ZCVAL=ZCVAL!!',PRODID';                                    01347000
*        IF ZCVAL^=''                                                   01347100
*          THEN                                                         01347200
*            DO;                             /* INCORRECT KEYS USED */  01347300
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            01347400
*              ZMS=' 8, "PRTOKEN'!!          /**KMEIP* MSG*/            01347500
*                  '"'!!                                                01347600
*                  ' DOES NOT ALLOW THE USE OF THE'!!                   01347700
*                  ' FOLLOWING KEY(S) "'!!                              01347800
*                  ZCVAL!!'".';                                         01347900
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01348000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01348100
*              ZMACRET=8;                    /* MACRO ERROR */          01348200
*            END;                                                       01348300
*      END;                                                             01348400
*/*PG.KMEKY12 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS--------------*/ 01348500
*  IF XDATAPRODNAME='PRTOKEN64'              /* CHECK FOR ME KEY */     01348600
*    THEN                                                               01348700
*      DO;                                   /*DISALLOWED KEYS CHECK */ 01348800
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 01348900
*        IF PRODNAME^=''                     /* CHECK KEY */            01349000
*          THEN                                                         01349100
*            ZCVAL=ZCVAL!!',PRODNAME';                                  01349200
*        IF PRODVERS^=''                     /* CHECK KEY */            01349300
*          THEN                                                         01349400
*            ZCVAL=ZCVAL!!',PRODVERS';                                  01349500
*        IF PRODQUAL^=''                     /* CHECK KEY */            01349600
*          THEN                                                         01349700
*            ZCVAL=ZCVAL!!',PRODQUAL';                                  01349800
*        IF PRODID^=''                       /* CHECK KEY */            01349900
*          THEN                                                         01350000
*            ZCVAL=ZCVAL!!',PRODID';                                    01350100
*        IF ZCVAL^=''                                                   01350200
*          THEN                                                         01350300
*            DO;                             /* INCORRECT KEYS USED */  01350400
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            01350500
*              ZMS=' 8, "PRTOKEN64'!!        /**KMEIP* MSG*/            01350600
*                  '"'!!                                                01350700
*                  ' DOES NOT ALLOW THE USE OF THE'!!                   01350800
*                  ' FOLLOWING KEY(S) "'!!                              01350900
*                  ZCVAL!!'".';                                         01351000
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01351100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01351200
*              ZMACRET=8;                    /* MACRO ERROR */          01351300
*            END;                                                       01351400
*      END;                                                             01351500
*/*PG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01351600
*  XDUMMY3='';                               /* RESET XVARIABLE */      01351700
*  IF DATA^=''                               /* CHECK ME KEY */         01351800
*    THEN                                                               01351900
*      DO;                                   /* VALID ME KEY */         01352000
*        IF NUMBER(DATA)>1                   /* CHECK SUBLISTS */       01352100
*          THEN                                                         01352200
*            DO;                                                        01352300
*              ZMS=' 8, "DATA'!!             /**KPOSP* MSG*/            01352400
*                  DATA!!                                               01352500
*                  '" "DATA"'!!                                         01352600
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01352700
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01352800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01352900
*              ZMACRET=8;                    /* MACRO ERROR */          01353000
*            END;                                                       01353100
*        XDUMMY3='DATA';                     /* SET XVARIABLE */        01353200
*        XDATA=DATA(1);                      /* SET XVARIABLE */        01353300
*        ZXDUMMY3='INPUT';                   /* SET IN/OUTPUT */        01353400
*        ZXDATA='INPUT';                     /* SET IN/OUTPUT */        01353500
*        IF DATA(1)=''                       /* CHECK ME KEY */         01353600
*          THEN                                                         01353700
*            DO;                                                        01353800
*              ZXDUMMY3='';                  /* RESET IN/OUTPUT */      01353900
*              ZXDATA='';                    /* RESET IN/OUTPUT */      01354000
*              ZMS=' 8,  '!!                                            01354100
*                  ' "DATA" KEY AND ITS'!!                              01354200
*                  ' ARGUMENT ARE REQUIRED.'; /**KRQDP* MSG*/           01354300
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01354400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01354500
*              ZMACRET=8;                    /* MACRO ERROR */          01354600
*           END;                                                        01354700
*      END;                                                             01354800
*/*PG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01354900
*  IF DATA64^=''                             /* CHECK ME KEY */         01355000
*    THEN                                                               01355100
*      DO;                                                              01355200
*        IF NUMBER(DATA64)>1                 /* CHECK SUBLISTS */       01355300
*          THEN                                                         01355400
*            DO;                                                        01355500
*              ZMS=' 8, "DATA64'!!           /**KPOSP* MSG*/            01355600
*                  DATA64!!                                             01355700
*                  '" "DATA64"'!!                                       01355800
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01355900
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01356000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01356100
*              ZMACRET=8;                    /* MACRO ERROR */          01356200
*            END;                                                       01356300
*        IF XDUMMY3=''                       /* CHECK XVARIABLE */      01356400
*          THEN                                                         01356500
*            DO;                             /* VALID ME KEY */         01356600
*              XDUMMY3='DATA64';             /* SET XVAR1 */            01356700
*              XDATA64=DATA64(1);            /* SET XVAR2 */            01356800
*              ZXDUMMY3='INPUT';             /* SET IN/OUTPUT */        01356900
*              ZXDATA64='INPUT';             /* SET IN/OUTPUT */        01357000
*              IF DATA64(1)=''               /* CHECK ME KEY */         01357100
*                THEN                                                   01357200
*                  DO;                                                  01357300
*                    ZXDUMMY3='';            /* RESET IN/OUTPUT */      01357400
*                    ZXDATA64='';            /* RESET IN/OUTPUT */      01357500
*                    ZMS=' 8,  '!!                                      01357600
*                        ' "DATA64" KEY AND ITS'!!                      01357700
*                        ' ARGUMENT ARE REQUIRED.'; /**KRQDP* MSG*/     01357800
*                    ANS MSG('?IFAUSAGE ---> '!!ZMS);                   01357900
*                    ANS(COMMENT(ZMS)) COL(MACLMAR);                    01358000
*                    ZMACRET=8;              /* MACRO ERROR */          01358100
*                  END;                                                 01358200
*            END;                                                       01358300
*          ELSE                                                         01358400
*            DO;                                                        01358500
*              ZMS=' 8, "DATA64'!!           /**KMEKP* MSG*/            01358600
*                  DATA64!!'"'!!                                        01358700
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'!!                01358800
*                  XDUMMY3!!                                            01358900
*                  '" KEY.';                                            01359000
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01359100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01359200
*              ZMACRET=8;                    /* MACRO ERROR */          01359300
*            END;                                                       01359400
*      END;                                                             01359500
*/*PG.KMEKY08 NAME, RQD INPUT, ME KEYS -ME KEY DEFAULT---------------*/ 01359600
*  IF XDUMMY3=''                             /* CHECK XVARIABLE */      01359700
*    THEN                                                               01359800
*      DO;                                                              01359900
*        XDUMMY3='DATA';                     /* SET DEFAULT */          01360000
*        XDATA='0';                          /* SET DEFAULT */          01360100
*        ZXDUMMY3='';                        /* RESET IN/OUTPUT */      01360200
*        ZXDATA='';                          /* RESET IN/OUTPUT */      01360300
*        ZMS=' 8, ONE OF THE FOLLOWING'!!    /**KMERP* MSG*/            01360400
*            ' MUTUALLY EXCLUSIVE KEY(S) IS'!!                          01360500
*            ' REQUIRED:'!!                                             01360600
*            ' "DATA"'!!                     /* VALID ME KEY */         01360700
*            ' OR "DATA64".';                /* VALID ME KEY */         01360800
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01360900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01361000
*        ZMACRET=8;                          /* MACRO ERROR */          01361100
*      END;                                                             01361200
*/*PG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 01361300
*  IF FORMAT='FORMAT'                        /* CHECK ENTRY */          01361400
*    THEN                                                               01361500
*      DO;                                                              01361600
*        ZMS=' 8, THE "FORMAT" KEY'!!                                   01361700
*            ' MUST CONTAIN ONE'!!                                      01361800
*            ' (OR MORE) ARGUMENT(S).';                                 01361900
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01362000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01362100
*        ZMACRET=8;                          /* MACRO ERROR */          01362200
*      END;                                                             01362300
*  IF NUMBER(FORMAT)>1                       /* CHECK POSITIONALS */    01362400
*    THEN                                                               01362500
*      DO;                                                              01362600
*        ZMS=' 8, "FORMAT'!!                 /**KPOSP* MSG*/            01362700
*            FORMAT!!                                                   01362800
*            '" "FORMAT"'!!                                             01362900
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01363000
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01363100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01363200
*        ZMACRET=8;                          /* MACRO ERROR */          01363300
*      END;                                                             01363400
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 01363500
*  XFORMAT='';                               /* RESET XVARIABLE */      01363600
*  IF FORMAT(1) = 'CPUTIME'                                             01363700
*    THEN                                                               01363800
*      XFORMAT = 'CPUTIME';                  /* SET XVARIABLE */        01363900
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 01364000
*  IF FORMAT(1) = 'BINARY'                                              01364100
*    THEN                                                               01364200
*      XFORMAT = 'BINARY';                   /* SET XVARIABLE */        01364300
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 01364400
*  IF FORMAT(1) = 'FLOAT'                                               01364500
*    THEN                                                               01364600
*      XFORMAT = 'FLOAT';                    /* SET XVARIABLE */        01364700
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 01364800
*  ZXFORMAT='INPUT';                         /* SET IN/OUTPUT */        01364900
*  IF XFORMAT=''                             /* CHECK FOR KEYWORD */    01365000
*    THEN                                                               01365100
*      DO;                                   /* KEYWORD NOT ENTERED */  01365200
*        XFORMAT='CPUTIME';                  /* SET DEFAULT */          01365300
*        IF FORMAT(1)^=''                                               01365400
*          THEN                                                         01365500
*            DO;                                                        01365600
*              ZXFORMAT='';                  /* RESET IN/OUTPUT */      01365700
*              ZMS=' 8, "FORMAT'!!           /**KUKWP* MSG*/            01365800
*                  FORMAT!!'"'!!                                        01365900
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '!!              01366000
*                  ' VALID KEYWORD CHOICE(S) ARE:'!!                    01366100
*                  ' "CPUTIME",'!!           /* VALID KEYWORD */        01366200
*                  ' "BINARY",'!!            /* VALID KEYWORD */        01366300
*                  ' OR "FLOAT".';           /* VALID KEYWORD */        01366400
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01366500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01366600
*              ZMACRET=8;                    /* MACRO ERROR */          01366700
*            END;                                                       01366800
*      END;                                                             01366900
*/*PG.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01367000
*  XDUMMY4='';                               /* RESET XVARIABLE */      01367100
*  IF CURRENTDATA^=''                        /* CHECK ME KEY */         01367200
*    THEN                                                               01367300
*      DO;                                   /* VALID ME KEY */         01367400
*        IF NUMBER(CURRENTDATA)>1            /* CHECK SUBLISTS */       01367500
*          THEN                                                         01367600
*            DO;                                                        01367700
*              ZMS=' 8, "CURRENTDATA'!!      /**KPOSP* MSG*/            01367800
*                  CURRENTDATA!!                                        01367900
*                  '" "CURRENTDATA"'!!                                  01368000
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01368100
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01368200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01368300
*              ZMACRET=8;                    /* MACRO ERROR */          01368400
*            END;                                                       01368500
*        XDUMMY4='CURRENTDATA';              /* SET XVARIABLE */        01368600
*        XCURRENTDATA=CURRENTDATA(1);        /* SET XVARIABLE */        01368700
*        ZXDUMMY4='OUTPUT';                  /* SET IN/OUTPUT */        01368800
*        ZXCURRENTDATA='OUTPUT';             /* SET IN/OUTPUT */        01368900
*        IF CURRENTDATA(1)=''                /* CHECK ME KEY */         01369000
*          THEN                                                         01369100
*            DO;                                                        01369200
*              ZXDUMMY4='';                  /* RESET IN/OUTPUT */      01369300
*              ZXCURRENTDATA='';             /* RESET IN/OUTPUT */      01369400
*              ZMS=' 8, THE "CURRENTDATA" KEY'!!                        01369500
*                  ' MUST CONTAIN ONE'!!                                01369600
*                  ' (OR MORE) ARGUMENT(S).';                           01369700
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01369800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01369900
*              ZMACRET=8;                    /* MACRO ERROR */          01370000
*           END;                                                        01370100
*      END;                                                             01370200
*/*PG.KMEKY02 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01370300
*  IF CURRENTDATA64^=''                      /* CHECK ME KEY */         01370400
*    THEN                                                               01370500
*      DO;                                                              01370600
*        IF NUMBER(CURRENTDATA64)>1          /* CHECK SUBLISTS */       01370700
*          THEN                                                         01370800
*            DO;                                                        01370900
*              ZMS=' 8, "CURRENTDATA64'!!    /**KPOSP* MSG*/            01371000
*                  CURRENTDATA64!!                                      01371100
*                  '" "CURRENTDATA64"'!!                                01371200
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01371300
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01371400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01371500
*              ZMACRET=8;                    /* MACRO ERROR */          01371600
*            END;                                                       01371700
*        IF XDUMMY4=''                       /* CHECK XVARIABLE */      01371800
*          THEN                                                         01371900
*            DO;                             /* VALID ME KEY */         01372000
*              XDUMMY4='CURRENTDATA64';      /* SET XVAR1 */            01372100
*              XCURRENTDATA64=CURRENTDATA64(1); /* SET XVAR2 */         01372200
*              ZXDUMMY4='OUTPUT';            /* SET IN/OUTPUT */        01372300
*              ZXCURRENTDATA64='OUTPUT';     /* SET IN/OUTPUT */        01372400
*              IF CURRENTDATA64(1)=''        /* CHECK ME KEY */         01372500
*                THEN                                                   01372600
*                  DO;                                                  01372700
*                    ZXDUMMY4='';            /* RESET IN/OUTPUT */      01372800
*                    ZXCURRENTDATA64='';     /* RESET IN/OUTPUT */      01372900
*                    ZMS=' 8, THE "CURRENTDATA64" KEY'!!                01373000
*                        ' MUST CONTAIN ONE'!!                          01373100
*                        ' (OR MORE) ARGUMENT(S).';                     01373200
*                    ANS MSG('?IFAUSAGE ---> '!!ZMS);                   01373300
*                    ANS(COMMENT(ZMS)) COL(MACLMAR);                    01373400
*                    ZMACRET=8;              /* MACRO ERROR */          01373500
*                  END;                                                 01373600
*            END;                                                       01373700
*          ELSE                                                         01373800
*            DO;                                                        01373900
*              ZMS=' 8, "CURRENTDATA64'!!    /**KMEKP* MSG*/            01374000
*                  CURRENTDATA64!!'"'!!                                 01374100
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'!!                01374200
*                  XDUMMY4!!                                            01374300
*                  '" KEY.';                                            01374400
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01374500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01374600
*              ZMACRET=8;                    /* MACRO ERROR */          01374700
*            END;                                                       01374800
*      END;                                                             01374900
*/*PG.KMEKY07 NAME, OPT OUTPUT, ME KEYS -ME KEY DEFAULT--------------*/ 01375000
*  IF XDUMMY4=''                             /* CHECK XVARIABLE */      01375100
*    THEN                                                               01375200
*      DO;                                                              01375300
*        XDUMMY4='CURRENTDATA';              /* SET DEFAULT */          01375400
*        XCURRENTDATA='0';                   /* SET DEFAULT */          01375500
*      END;                                                             01375600
*/*PG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01375700
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     01375800
*/*PG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01375900
*  IF REQUEST(1)='FUNCTIONEND'               /* CHECK FOR KEYWORD */    01376000
*    THEN                                                               01376100
*      DO;                                                              01376200
*        XREQUEST='FUNCTIONEND';             /* SET XVARIABLE */        01376300
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    01376400
*          THEN                                                         01376500
*            DO;                                                        01376600
*              ZMS=' 8, "REQUEST'!!          /**KPOSP* MSG*/            01376700
*                  REQUEST!!                                            01376800
*                  '" "REQUEST"'!!                                      01376900
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01377000
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01377100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01377200
*              ZMACRET=8;                    /* MACRO ERROR */          01377300
*            END;                                                       01377400
*/*PG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01377500
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 01377600
*        IF DOMAIN^=''                       /* CHECK FOR KEY */        01377700
*          THEN                                                         01377800
*            ZCVAL=ZCVAL!!',DOMAIN';         /* INCORRECT KEY USED */   01377900
*        IF SCOPE^=''                        /* CHECK FOR KEY */        01378000
*          THEN                                                         01378100
*            ZCVAL=ZCVAL!!',SCOPE';          /* INCORRECT KEY USED */   01378200
*        IF UNAUTHSERV^=''                   /* CHECK FOR KEY */        01378300
*          THEN                                                         01378400
*            ZCVAL=ZCVAL!!',UNAUTHSERV';     /* INCORRECT KEY USED */   01378500
*        IF BEGTIME^=''                      /* CHECK FOR KEY */        01378600
*          THEN                                                         01378700
*            ZCVAL=ZCVAL!!',BEGTIME';        /* INCORRECT KEY USED */   01378800
*        IF BEGTIME64^=''                    /* CHECK FOR KEY */        01378900
*          THEN                                                         01379000
*            ZCVAL=ZCVAL!!',BEGTIME64';      /* INCORRECT KEY USED */   01379100
*        IF DATA^=''                         /* CHECK FOR KEY */        01379200
*          THEN                                                         01379300
*            ZCVAL=ZCVAL!!',DATA';           /* INCORRECT KEY USED */   01379400
*        IF DATA64^=''                       /* CHECK FOR KEY */        01379500
*          THEN                                                         01379600
*            ZCVAL=ZCVAL!!',DATA64';         /* INCORRECT KEY USED */   01379700
*        IF FORMAT^=''                       /* CHECK FOR KEY */        01379800
*          THEN                                                         01379900
*            ZCVAL=ZCVAL!!',FORMAT';         /* INCORRECT KEY USED */   01380000
*        IF CURRENTDATA^=''                  /* CHECK FOR KEY */        01380100
*          THEN                                                         01380200
*            ZCVAL=ZCVAL!!',CURRENTDATA';    /* INCORRECT KEY USED */   01380300
*        IF CURRENTDATA64^=''                /* CHECK FOR KEY */        01380400
*          THEN                                                         01380500
*            ZCVAL=ZCVAL!!',CURRENTDATA64';  /* INCORRECT KEY USED */   01380600
*        IF ZCVAL^=''                                                   01380700
*          THEN                                                         01380800
*            DO;                             /* INCORRECT KEYS USED */  01380900
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            01381000
*              ZMS=' 8, "REQUEST'!!          /**KMEIP* MSG*/            01381100
*                  REQUEST!!'"'!!                                       01381200
*                  ' DOES NOT ALLOW THE USE OF THE'!!                   01381300
*                  ' FOLLOWING KEY(S) "'!!                              01381400
*                  ZCVAL!!'".';                                         01381500
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01381600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01381700
*              ZMACRET=8;                    /* MACRO ERROR */          01381800
*            END;                                                       01381900
*/*PG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01382000
*  XENDPRODNAME='';                          /* RESET XVARIABLE */      01382100
*  IF PRODOWNER^=''                          /* CHECK ME KEY */         01382200
*    THEN                                                               01382300
*      DO;                                   /* VALID ME KEY */         01382400
*        IF NUMBER(PRODOWNER)>1              /* CHECK SUBLISTS */       01382500
*          THEN                                                         01382600
*            DO;                                                        01382700
*              ZMS=' 8, "PRODOWNER'!!        /**KPOSP* MSG*/            01382800
*                  PRODOWNER!!                                          01382900
*                  '" "PRODOWNER"'!!                                    01383000
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01383100
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01383200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01383300
*              ZMACRET=8;                    /* MACRO ERROR */          01383400
*            END;                                                       01383500
*        XENDPRODNAME='PRODOWNER';           /* SET XVARIABLE */        01383600
*        XPRODOWNER=PRODOWNER(1);            /* SET XVARIABLE */        01383700
*        ZXENDPRODNAME='INPUT';              /* SET IN/OUTPUT */        01383800
*        ZXPRODOWNER='INPUT';                /* SET IN/OUTPUT */        01383900
*        IF PRODOWNER(1)=''                  /* CHECK ME KEY */         01384000
*          THEN                                                         01384100
*            DO;                                                        01384200
*              ZXENDPRODNAME='';             /* RESET IN/OUTPUT */      01384300
*              ZXPRODOWNER='';               /* RESET IN/OUTPUT */      01384400
*              ZMS=' 8,  '!!                                            01384500
*                  ' "PRODOWNER" KEY AND ITS'!!                         01384600
*                  ' ARGUMENT ARE REQUIRED.'; /**KRQDP* MSG*/           01384700
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01384800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01384900
*              ZMACRET=8;                    /* MACRO ERROR */          01385000
*           END;                                                        01385100
*      END;                                                             01385200
*/*PG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01385300
*  IF PRTOKEN^=''                            /* CHECK ME KEY */         01385400
*    THEN                                                               01385500
*      DO;                                                              01385600
*        IF NUMBER(PRTOKEN)>1                /* CHECK SUBLISTS */       01385700
*          THEN                                                         01385800
*            DO;                                                        01385900
*              ZMS=' 8, "PRTOKEN'!!          /**KPOSP* MSG*/            01386000
*                  PRTOKEN!!                                            01386100
*                  '" "PRTOKEN"'!!                                      01386200
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01386300
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01386400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01386500
*              ZMACRET=8;                    /* MACRO ERROR */          01386600
*            END;                                                       01386700
*        IF XENDPRODNAME=''                  /* CHECK XVARIABLE */      01386800
*          THEN                                                         01386900
*            DO;                             /* VALID ME KEY */         01387000
*              XENDPRODNAME='PRTOKEN';       /* SET XVAR1 */            01387100
*              XPRTOKEN=PRTOKEN(1);          /* SET XVAR2 */            01387200
*              ZXENDPRODNAME='INPUT';        /* SET IN/OUTPUT */        01387300
*              ZXPRTOKEN='INPUT';            /* SET IN/OUTPUT */        01387400
*              IF PRTOKEN(1)=''              /* CHECK ME KEY */         01387500
*                THEN                                                   01387600
*                  DO;                                                  01387700
*                    ZXENDPRODNAME='';       /* RESET IN/OUTPUT */      01387800
*                    ZXPRTOKEN='';           /* RESET IN/OUTPUT */      01387900
*                    ZMS=' 8,  '!!                                      01388000
*                        ' "PRTOKEN" KEY AND ITS'!!                     01388100
*                        ' ARGUMENT ARE REQUIRED.'; /**KRQDP* MSG*/     01388200
*                    ANS MSG('?IFAUSAGE ---> '!!ZMS);                   01388300
*                    ANS(COMMENT(ZMS)) COL(MACLMAR);                    01388400
*                    ZMACRET=8;              /* MACRO ERROR */          01388500
*                  END;                                                 01388600
*            END;                                                       01388700
*          ELSE                                                         01388800
*            DO;                                                        01388900
*              ZMS=' 8, "PRTOKEN'!!          /**KMEKP* MSG*/            01389000
*                  PRTOKEN!!'"'!!                                       01389100
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'!!                01389200
*                  XENDPRODNAME!!                                       01389300
*                  '" KEY.';                                            01389400
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01389500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01389600
*              ZMACRET=8;                    /* MACRO ERROR */          01389700
*            END;                                                       01389800
*      END;                                                             01389900
*/*PG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01390000
*  IF PRTOKEN64^=''                          /* CHECK ME KEY */         01390100
*    THEN                                                               01390200
*      DO;                                                              01390300
*        IF NUMBER(PRTOKEN64)>1              /* CHECK SUBLISTS */       01390400
*          THEN                                                         01390500
*            DO;                                                        01390600
*              ZMS=' 8, "PRTOKEN64'!!        /**KPOSP* MSG*/            01390700
*                  PRTOKEN64!!                                          01390800
*                  '" "PRTOKEN64"'!!                                    01390900
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01391000
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01391100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01391200
*              ZMACRET=8;                    /* MACRO ERROR */          01391300
*            END;                                                       01391400
*        IF XENDPRODNAME=''                  /* CHECK XVARIABLE */      01391500
*          THEN                                                         01391600
*            DO;                             /* VALID ME KEY */         01391700
*              XENDPRODNAME='PRTOKEN64';     /* SET XVAR1 */            01391800
*              XPRTOKEN64=PRTOKEN64(1);      /* SET XVAR2 */            01391900
*              ZXENDPRODNAME='INPUT';        /* SET IN/OUTPUT */        01392000
*              ZXPRTOKEN64='INPUT';          /* SET IN/OUTPUT */        01392100
*              IF PRTOKEN64(1)=''            /* CHECK ME KEY */         01392200
*                THEN                                                   01392300
*                  DO;                                                  01392400
*                    ZXENDPRODNAME='';       /* RESET IN/OUTPUT */      01392500
*                    ZXPRTOKEN64='';         /* RESET IN/OUTPUT */      01392600
*                    ZMS=' 8,  '!!                                      01392700
*                        ' "PRTOKEN64" KEY AND ITS'!!                   01392800
*                        ' ARGUMENT ARE REQUIRED.'; /**KRQDP* MSG*/     01392900
*                    ANS MSG('?IFAUSAGE ---> '!!ZMS);                   01393000
*                    ANS(COMMENT(ZMS)) COL(MACLMAR);                    01393100
*                    ZMACRET=8;              /* MACRO ERROR */          01393200
*                  END;                                                 01393300
*            END;                                                       01393400
*          ELSE                                                         01393500
*            DO;                                                        01393600
*              ZMS=' 8, "PRTOKEN64'!!        /**KMEKP* MSG*/            01393700
*                  PRTOKEN64!!'"'!!                                     01393800
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'!!                01393900
*                  XENDPRODNAME!!                                       01394000
*                  '" KEY.';                                            01394100
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01394200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01394300
*              ZMACRET=8;                    /* MACRO ERROR */          01394400
*            END;                                                       01394500
*      END;                                                             01394600
*/*PG.KMEKY08 NAME, RQD INPUT, ME KEYS -ME KEY DEFAULT---------------*/ 01394700
*  IF XENDPRODNAME=''                        /* CHECK XVARIABLE */      01394800
*    THEN                                                               01394900
*      DO;                                                              01395000
*        XENDPRODNAME='PRODOWNER';           /* SET DEFAULT */          01395100
*        XPRODOWNER='0';                     /* SET DEFAULT */          01395200
*        ZXENDPRODNAME='';                   /* RESET IN/OUTPUT */      01395300
*        ZXPRODOWNER='';                     /* RESET IN/OUTPUT */      01395400
*        ZMS=' 8, ONE OF THE FOLLOWING'!!    /**KMERP* MSG*/            01395500
*            ' MUTUALLY EXCLUSIVE KEY(S) IS'!!                          01395600
*            ' REQUIRED:'!!                                             01395700
*            ' "PRODOWNER",'!!               /* VALID ME KEY */         01395800
*            ' "PRTOKEN",'!!                 /* VALID ME KEY */         01395900
*            ' OR "PRTOKEN64".';             /* VALID ME KEY */         01396000
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01396100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01396200
*        ZMACRET=8;                          /* MACRO ERROR */          01396300
*      END;                                                             01396400
*/*PG.KMEKY11 NAME, RQD INPUT, ME KEYS -START------------------------*/ 01396500
*  IF XENDPRODNAME='PRODOWNER'               /* CHECK FOR ME KEY */     01396600
*    THEN                                                               01396700
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01396800
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01396900
*  IF NUMBER(PRODNAME)>1                     /* CHECK POSITIONALS */    01397000
*    THEN                                                               01397100
*      DO;                                                              01397200
*        ZMS=' 8, "PRODNAME'!!               /**KPOSP* MSG*/            01397300
*            PRODNAME!!                                                 01397400
*            '" "PRODNAME"'!!                                           01397500
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01397600
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01397700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01397800
*        ZMACRET=8;                          /* MACRO ERROR */          01397900
*      END;                                                             01398000
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 01398100
*  XPRODNAME=PRODNAME(1);                    /* SET XVARIABLE */        01398200
*  IF PRODNAME(1)=''                         /* CHECK FOR NULL */       01398300
*   THEN                                                                01398400
*    DO;                                     /* KEY IS REQUIRED */      01398500
*        ZXPRODNAME='';                      /* RESET IN/OUTPUT */      01398600
*        ZMS=' 8,  '!!                                                  01398700
*            ' "PRODNAME" KEY AND ITS'!!                                01398800
*            ' ARGUMENT ARE REQUIRED.';      /**KRQDP* MSG*/            01398900
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01399000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01399100
*        ZMACRET=8;                          /* MACRO ERROR */          01399200
*    END;                                                               01399300
*  ELSE                                                                 01399400
*    ZXPRODNAME='INPUT';                     /* SET IN/OUTPUT */        01399500
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01399600
*  IF PRODVERS='PRODVERS' ! PRODVERS='()'    /*CHECK ENTRY*/            01399700
*    THEN                                                               01399800
*      DO;                                                              01399900
*        ZMS=' 8, THE "PRODVERS" KEY'!!                                 01400000
*            ' MUST CONTAIN ONE'!!                                      01400100
*            ' (OR MORE) ARGUMENT(S).';                                 01400200
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01400300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01400400
*        ZMACRET=8;                          /* MACRO ERROR */          01400500
*      END;                                                             01400600
*  IF NUMBER(PRODVERS)>1                     /* CHECK POSITIONALS */    01400700
*    THEN                                                               01400800
*      DO;                                                              01400900
*        ZMS=' 8, "PRODVERS'!!               /**KPOSP* MSG*/            01401000
*            PRODVERS!!                                                 01401100
*            '" "PRODVERS"'!!                                           01401200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01401300
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01401400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01401500
*        ZMACRET=8;                          /* MACRO ERROR */          01401600
*      END;                                                             01401700
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01401800
*  ZXPRODVERS='INPUT';                       /* SET IN/OUTPUT */        01401900
*  XPRODVERS='NONE';                         /* SET DEFAULT */          01402000
*  IF PRODVERS(1)^=''                        /* CHECK FOR NULL */       01402100
*    THEN                                                               01402200
*      XPRODVERS=PRODVERS(1);                /* SET XVARIABLE */        01402300
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01402400
*  IF PRODQUAL='PRODQUAL' ! PRODQUAL='()'    /*CHECK ENTRY*/            01402500
*    THEN                                                               01402600
*      DO;                                                              01402700
*        ZMS=' 8, THE "PRODQUAL" KEY'!!                                 01402800
*            ' MUST CONTAIN ONE'!!                                      01402900
*            ' (OR MORE) ARGUMENT(S).';                                 01403000
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01403100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01403200
*        ZMACRET=8;                          /* MACRO ERROR */          01403300
*      END;                                                             01403400
*  IF NUMBER(PRODQUAL)>1                     /* CHECK POSITIONALS */    01403500
*    THEN                                                               01403600
*      DO;                                                              01403700
*        ZMS=' 8, "PRODQUAL'!!               /**KPOSP* MSG*/            01403800
*            PRODQUAL!!                                                 01403900
*            '" "PRODQUAL"'!!                                           01404000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01404100
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01404200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01404300
*        ZMACRET=8;                          /* MACRO ERROR */          01404400
*      END;                                                             01404500
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01404600
*  ZXPRODQUAL='INPUT';                       /* SET IN/OUTPUT */        01404700
*  XPRODQUAL='NONE';                         /* SET DEFAULT */          01404800
*  IF PRODQUAL(1)^=''                        /* CHECK FOR NULL */       01404900
*    THEN                                                               01405000
*      XPRODQUAL=PRODQUAL(1);                /* SET XVARIABLE */        01405100
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01405200
*  IF PRODID='PRODID' ! PRODID='()'          /*CHECK ENTRY*/            01405300
*    THEN                                                               01405400
*      DO;                                                              01405500
*        ZMS=' 8, THE "PRODID" KEY'!!                                   01405600
*            ' MUST CONTAIN ONE'!!                                      01405700
*            ' (OR MORE) ARGUMENT(S).';                                 01405800
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01405900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01406000
*        ZMACRET=8;                          /* MACRO ERROR */          01406100
*      END;                                                             01406200
*  IF NUMBER(PRODID)>1                       /* CHECK POSITIONALS */    01406300
*    THEN                                                               01406400
*      DO;                                                              01406500
*        ZMS=' 8, "PRODID'!!                 /**KPOSP* MSG*/            01406600
*            PRODID!!                                                   01406700
*            '" "PRODID"'!!                                             01406800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01406900
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01407000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01407100
*        ZMACRET=8;                          /* MACRO ERROR */          01407200
*      END;                                                             01407300
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01407400
*  ZXPRODID='INPUT';                         /* SET IN/OUTPUT */        01407500
*  XPRODID='NONE';                           /* SET DEFAULT */          01407600
*  IF PRODID(1)^=''                          /* CHECK FOR NULL */       01407700
*    THEN                                                               01407800
*      XPRODID=PRODID(1);                    /* SET XVARIABLE */        01407900
*/*PG.KMEKY10 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 01408000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01408100
*/*PG.KMEKY12 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS--------------*/ 01408200
*  IF XENDPRODNAME='PRTOKEN'                 /* CHECK FOR ME KEY */     01408300
*    THEN                                                               01408400
*      DO;                                   /*DISALLOWED KEYS CHECK */ 01408500
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 01408600
*        IF PRODNAME^=''                     /* CHECK KEY */            01408700
*          THEN                                                         01408800
*            ZCVAL=ZCVAL!!',PRODNAME';                                  01408900
*        IF PRODVERS^=''                     /* CHECK KEY */            01409000
*          THEN                                                         01409100
*            ZCVAL=ZCVAL!!',PRODVERS';                                  01409200
*        IF PRODQUAL^=''                     /* CHECK KEY */            01409300
*          THEN                                                         01409400
*            ZCVAL=ZCVAL!!',PRODQUAL';                                  01409500
*        IF PRODID^=''                       /* CHECK KEY */            01409600
*          THEN                                                         01409700
*            ZCVAL=ZCVAL!!',PRODID';                                    01409800
*        IF ZCVAL^=''                                                   01409900
*          THEN                                                         01410000
*            DO;                             /* INCORRECT KEYS USED */  01410100
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            01410200
*              ZMS=' 8, "PRTOKEN'!!          /**KMEIP* MSG*/            01410300
*                  '"'!!                                                01410400
*                  ' DOES NOT ALLOW THE USE OF THE'!!                   01410500
*                  ' FOLLOWING KEY(S) "'!!                              01410600
*                  ZCVAL!!'".';                                         01410700
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01410800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01410900
*              ZMACRET=8;                    /* MACRO ERROR */          01411000
*            END;                                                       01411100
*      END;                                                             01411200
*/*PG.KMEKY12 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS--------------*/ 01411300
*  IF XENDPRODNAME='PRTOKEN64'               /* CHECK FOR ME KEY */     01411400
*    THEN                                                               01411500
*      DO;                                   /*DISALLOWED KEYS CHECK */ 01411600
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 01411700
*        IF PRODNAME^=''                     /* CHECK KEY */            01411800
*          THEN                                                         01411900
*            ZCVAL=ZCVAL!!',PRODNAME';                                  01412000
*        IF PRODVERS^=''                     /* CHECK KEY */            01412100
*          THEN                                                         01412200
*            ZCVAL=ZCVAL!!',PRODVERS';                                  01412300
*        IF PRODQUAL^=''                     /* CHECK KEY */            01412400
*          THEN                                                         01412500
*            ZCVAL=ZCVAL!!',PRODQUAL';                                  01412600
*        IF PRODID^=''                       /* CHECK KEY */            01412700
*          THEN                                                         01412800
*            ZCVAL=ZCVAL!!',PRODID';                                    01412900
*        IF ZCVAL^=''                                                   01413000
*          THEN                                                         01413100
*            DO;                             /* INCORRECT KEYS USED */  01413200
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            01413300
*              ZMS=' 8, "PRTOKEN64'!!        /**KMEIP* MSG*/            01413400
*                  '"'!!                                                01413500
*                  ' DOES NOT ALLOW THE USE OF THE'!!                   01413600
*                  ' FOLLOWING KEY(S) "'!!                              01413700
*                  ZCVAL!!'".';                                         01413800
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01413900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01414000
*              ZMACRET=8;                    /* MACRO ERROR */          01414100
*            END;                                                       01414200
*      END;                                                             01414300
*/*PG.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01414400
*  XDUMMY5='';                               /* RESET XVARIABLE */      01414500
*  IF ENDTIME^=''                            /* CHECK ME KEY */         01414600
*    THEN                                                               01414700
*      DO;                                   /* VALID ME KEY */         01414800
*        IF NUMBER(ENDTIME)>1                /* CHECK SUBLISTS */       01414900
*          THEN                                                         01415000
*            DO;                                                        01415100
*              ZMS=' 8, "ENDTIME'!!          /**KPOSP* MSG*/            01415200
*                  ENDTIME!!                                            01415300
*                  '" "ENDTIME"'!!                                      01415400
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01415500
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01415600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01415700
*              ZMACRET=8;                    /* MACRO ERROR */          01415800
*            END;                                                       01415900
*        XDUMMY5='ENDTIME';                  /* SET XVARIABLE */        01416000
*        XENDTIME=ENDTIME(1);                /* SET XVARIABLE */        01416100
*        ZXDUMMY5='OUTPUT';                  /* SET IN/OUTPUT */        01416200
*        ZXENDTIME='OUTPUT';                 /* SET IN/OUTPUT */        01416300
*        IF ENDTIME(1)=''                    /* CHECK ME KEY */         01416400
*          THEN                                                         01416500
*            DO;                                                        01416600
*              ZXDUMMY5='';                  /* RESET IN/OUTPUT */      01416700
*              ZXENDTIME='';                 /* RESET IN/OUTPUT */      01416800
*              ZMS=' 8, THE "ENDTIME" KEY'!!                            01416900
*                  ' MUST CONTAIN ONE'!!                                01417000
*                  ' (OR MORE) ARGUMENT(S).';                           01417100
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01417200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01417300
*              ZMACRET=8;                    /* MACRO ERROR */          01417400
*           END;                                                        01417500
*      END;                                                             01417600
*/*PG.KMEKY02 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01417700
*  IF ENDTIME64^=''                          /* CHECK ME KEY */         01417800
*    THEN                                                               01417900
*      DO;                                                              01418000
*        IF NUMBER(ENDTIME64)>1              /* CHECK SUBLISTS */       01418100
*          THEN                                                         01418200
*            DO;                                                        01418300
*              ZMS=' 8, "ENDTIME64'!!        /**KPOSP* MSG*/            01418400
*                  ENDTIME64!!                                          01418500
*                  '" "ENDTIME64"'!!                                    01418600
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01418700
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01418800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01418900
*              ZMACRET=8;                    /* MACRO ERROR */          01419000
*            END;                                                       01419100
*        IF XDUMMY5=''                       /* CHECK XVARIABLE */      01419200
*          THEN                                                         01419300
*            DO;                             /* VALID ME KEY */         01419400
*              XDUMMY5='ENDTIME64';          /* SET XVAR1 */            01419500
*              XENDTIME64=ENDTIME64(1);      /* SET XVAR2 */            01419600
*              ZXDUMMY5='OUTPUT';            /* SET IN/OUTPUT */        01419700
*              ZXENDTIME64='OUTPUT';         /* SET IN/OUTPUT */        01419800
*              IF ENDTIME64(1)=''            /* CHECK ME KEY */         01419900
*                THEN                                                   01420000
*                  DO;                                                  01420100
*                    ZXDUMMY5='';            /* RESET IN/OUTPUT */      01420200
*                    ZXENDTIME64='';         /* RESET IN/OUTPUT */      01420300
*                    ZMS=' 8, THE "ENDTIME64" KEY'!!                    01420400
*                        ' MUST CONTAIN ONE'!!                          01420500
*                        ' (OR MORE) ARGUMENT(S).';                     01420600
*                    ANS MSG('?IFAUSAGE ---> '!!ZMS);                   01420700
*                    ANS(COMMENT(ZMS)) COL(MACLMAR);                    01420800
*                    ZMACRET=8;              /* MACRO ERROR */          01420900
*                  END;                                                 01421000
*            END;                                                       01421100
*          ELSE                                                         01421200
*            DO;                                                        01421300
*              ZMS=' 8, "ENDTIME64'!!        /**KMEKP* MSG*/            01421400
*                  ENDTIME64!!'"'!!                                     01421500
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'!!                01421600
*                  XDUMMY5!!                                            01421700
*                  '" KEY.';                                            01421800
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01421900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01422000
*              ZMACRET=8;                    /* MACRO ERROR */          01422100
*            END;                                                       01422200
*      END;                                                             01422300
*/*PG.KMEKY07 NAME, OPT OUTPUT, ME KEYS -ME KEY DEFAULT--------------*/ 01422400
*  IF XDUMMY5=''                             /* CHECK XVARIABLE */      01422500
*    THEN                                                               01422600
*      DO;                                                              01422700
*        XDUMMY5='ENDTIME';                  /* SET DEFAULT */          01422800
*        XENDTIME='0';                       /* SET DEFAULT */          01422900
*      END;                                                             01423000
*/*PG.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01423100
*  XDUMMY6='';                               /* RESET XVARIABLE */      01423200
*  IF ENDDATA^=''                            /* CHECK ME KEY */         01423300
*    THEN                                                               01423400
*      DO;                                   /* VALID ME KEY */         01423500
*        IF NUMBER(ENDDATA)>1                /* CHECK SUBLISTS */       01423600
*          THEN                                                         01423700
*            DO;                                                        01423800
*              ZMS=' 8, "ENDDATA'!!          /**KPOSP* MSG*/            01423900
*                  ENDDATA!!                                            01424000
*                  '" "ENDDATA"'!!                                      01424100
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01424200
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01424300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01424400
*              ZMACRET=8;                    /* MACRO ERROR */          01424500
*            END;                                                       01424600
*        XDUMMY6='ENDDATA';                  /* SET XVARIABLE */        01424700
*        XENDDATA=ENDDATA(1);                /* SET XVARIABLE */        01424800
*        ZXDUMMY6='OUTPUT';                  /* SET IN/OUTPUT */        01424900
*        ZXENDDATA='OUTPUT';                 /* SET IN/OUTPUT */        01425000
*        IF ENDDATA(1)=''                    /* CHECK ME KEY */         01425100
*          THEN                                                         01425200
*            DO;                                                        01425300
*              ZXDUMMY6='';                  /* RESET IN/OUTPUT */      01425400
*              ZXENDDATA='';                 /* RESET IN/OUTPUT */      01425500
*              ZMS=' 8, THE "ENDDATA" KEY'!!                            01425600
*                  ' MUST CONTAIN ONE'!!                                01425700
*                  ' (OR MORE) ARGUMENT(S).';                           01425800
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01425900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01426000
*              ZMACRET=8;                    /* MACRO ERROR */          01426100
*           END;                                                        01426200
*      END;                                                             01426300
*/*PG.KMEKY02 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01426400
*  IF ENDDATA64^=''                          /* CHECK ME KEY */         01426500
*    THEN                                                               01426600
*      DO;                                                              01426700
*        IF NUMBER(ENDDATA64)>1              /* CHECK SUBLISTS */       01426800
*          THEN                                                         01426900
*            DO;                                                        01427000
*              ZMS=' 8, "ENDDATA64'!!        /**KPOSP* MSG*/            01427100
*                  ENDDATA64!!                                          01427200
*                  '" "ENDDATA64"'!!                                    01427300
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01427400
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01427500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01427600
*              ZMACRET=8;                    /* MACRO ERROR */          01427700
*            END;                                                       01427800
*        IF XDUMMY6=''                       /* CHECK XVARIABLE */      01427900
*          THEN                                                         01428000
*            DO;                             /* VALID ME KEY */         01428100
*              XDUMMY6='ENDDATA64';          /* SET XVAR1 */            01428200
*              XENDDATA64=ENDDATA64(1);      /* SET XVAR2 */            01428300
*              ZXDUMMY6='OUTPUT';            /* SET IN/OUTPUT */        01428400
*              ZXENDDATA64='OUTPUT';         /* SET IN/OUTPUT */        01428500
*              IF ENDDATA64(1)=''            /* CHECK ME KEY */         01428600
*                THEN                                                   01428700
*                  DO;                                                  01428800
*                    ZXDUMMY6='';            /* RESET IN/OUTPUT */      01428900
*                    ZXENDDATA64='';         /* RESET IN/OUTPUT */      01429000
*                    ZMS=' 8, THE "ENDDATA64" KEY'!!                    01429100
*                        ' MUST CONTAIN ONE'!!                          01429200
*                        ' (OR MORE) ARGUMENT(S).';                     01429300
*                    ANS MSG('?IFAUSAGE ---> '!!ZMS);                   01429400
*                    ANS(COMMENT(ZMS)) COL(MACLMAR);                    01429500
*                    ZMACRET=8;              /* MACRO ERROR */          01429600
*                  END;                                                 01429700
*            END;                                                       01429800
*          ELSE                                                         01429900
*            DO;                                                        01430000
*              ZMS=' 8, "ENDDATA64'!!        /**KMEKP* MSG*/            01430100
*                  ENDDATA64!!'"'!!                                     01430200
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'!!                01430300
*                  XDUMMY6!!                                            01430400
*                  '" KEY.';                                            01430500
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01430600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01430700
*              ZMACRET=8;                    /* MACRO ERROR */          01430800
*            END;                                                       01430900
*      END;                                                             01431000
*/*PG.KMEKY07 NAME, OPT OUTPUT, ME KEYS -ME KEY DEFAULT--------------*/ 01431100
*  IF XDUMMY6=''                             /* CHECK XVARIABLE */      01431200
*    THEN                                                               01431300
*      DO;                                                              01431400
*        XDUMMY6='ENDDATA';                  /* SET DEFAULT */          01431500
*        XENDDATA='0';                       /* SET DEFAULT */          01431600
*      END;                                                             01431700
*/*PG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01431800
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     01431900
*/*PG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01432000
*  IF REQUEST(1)='STATUS'                    /* CHECK FOR KEYWORD */    01432100
*    THEN                                                               01432200
*      DO;                                                              01432300
*        XREQUEST='STATUS';                  /* SET XVARIABLE */        01432400
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    01432500
*          THEN                                                         01432600
*            DO;                                                        01432700
*              ZMS=' 8, "REQUEST'!!          /**KPOSP* MSG*/            01432800
*                  REQUEST!!                                            01432900
*                  '" "REQUEST"'!!                                      01433000
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01433100
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01433200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01433300
*              ZMACRET=8;                    /* MACRO ERROR */          01433400
*            END;                                                       01433500
*/*PG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01433600
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 01433700
*        IF PRODOWNER^=''                    /* CHECK FOR KEY */        01433800
*          THEN                                                         01433900
*            ZCVAL=ZCVAL!!',PRODOWNER';      /* INCORRECT KEY USED */   01434000
*        IF PRODNAME^=''                     /* CHECK FOR KEY */        01434100
*          THEN                                                         01434200
*            ZCVAL=ZCVAL!!',PRODNAME';       /* INCORRECT KEY USED */   01434300
*        IF PRODVERS^=''                     /* CHECK FOR KEY */        01434400
*          THEN                                                         01434500
*            ZCVAL=ZCVAL!!',PRODVERS';       /* INCORRECT KEY USED */   01434600
*        IF PRODQUAL^=''                     /* CHECK FOR KEY */        01434700
*          THEN                                                         01434800
*            ZCVAL=ZCVAL!!',PRODQUAL';       /* INCORRECT KEY USED */   01434900
*        IF PRODID^=''                       /* CHECK FOR KEY */        01435000
*          THEN                                                         01435100
*            ZCVAL=ZCVAL!!',PRODID';         /* INCORRECT KEY USED */   01435200
*        IF DOMAIN^=''                       /* CHECK FOR KEY */        01435300
*          THEN                                                         01435400
*            ZCVAL=ZCVAL!!',DOMAIN';         /* INCORRECT KEY USED */   01435500
*        IF SCOPE^=''                        /* CHECK FOR KEY */        01435600
*          THEN                                                         01435700
*            ZCVAL=ZCVAL!!',SCOPE';          /* INCORRECT KEY USED */   01435800
*        IF PRTOKEN^=''                      /* CHECK FOR KEY */        01435900
*          THEN                                                         01436000
*            ZCVAL=ZCVAL!!',PRTOKEN';        /* INCORRECT KEY USED */   01436100
*        IF PRTOKEN64^=''                    /* CHECK FOR KEY */        01436200
*          THEN                                                         01436300
*            ZCVAL=ZCVAL!!',PRTOKEN64';      /* INCORRECT KEY USED */   01436400
*        IF UNAUTHSERV^=''                   /* CHECK FOR KEY */        01436500
*          THEN                                                         01436600
*            ZCVAL=ZCVAL!!',UNAUTHSERV';     /* INCORRECT KEY USED */   01436700
*        IF ENDTIME^=''                      /* CHECK FOR KEY */        01436800
*          THEN                                                         01436900
*            ZCVAL=ZCVAL!!',ENDTIME';        /* INCORRECT KEY USED */   01437000
*        IF ENDTIME64^=''                    /* CHECK FOR KEY */        01437100
*          THEN                                                         01437200
*            ZCVAL=ZCVAL!!',ENDTIME64';      /* INCORRECT KEY USED */   01437300
*        IF ENDDATA^=''                      /* CHECK FOR KEY */        01437400
*          THEN                                                         01437500
*            ZCVAL=ZCVAL!!',ENDDATA';        /* INCORRECT KEY USED */   01437600
*        IF ENDDATA64^=''                    /* CHECK FOR KEY */        01437700
*          THEN                                                         01437800
*            ZCVAL=ZCVAL!!',ENDDATA64';      /* INCORRECT KEY USED */   01437900
*        IF BEGTIME^=''                      /* CHECK FOR KEY */        01438000
*          THEN                                                         01438100
*            ZCVAL=ZCVAL!!',BEGTIME';        /* INCORRECT KEY USED */   01438200
*        IF BEGTIME64^=''                    /* CHECK FOR KEY */        01438300
*          THEN                                                         01438400
*            ZCVAL=ZCVAL!!',BEGTIME64';      /* INCORRECT KEY USED */   01438500
*        IF DATA^=''                         /* CHECK FOR KEY */        01438600
*          THEN                                                         01438700
*            ZCVAL=ZCVAL!!',DATA';           /* INCORRECT KEY USED */   01438800
*        IF DATA64^=''                       /* CHECK FOR KEY */        01438900
*          THEN                                                         01439000
*            ZCVAL=ZCVAL!!',DATA64';         /* INCORRECT KEY USED */   01439100
*        IF FORMAT^=''                       /* CHECK FOR KEY */        01439200
*          THEN                                                         01439300
*            ZCVAL=ZCVAL!!',FORMAT';         /* INCORRECT KEY USED */   01439400
*        IF CURRENTDATA^=''                  /* CHECK FOR KEY */        01439500
*          THEN                                                         01439600
*            ZCVAL=ZCVAL!!',CURRENTDATA';    /* INCORRECT KEY USED */   01439700
*        IF CURRENTDATA64^=''                /* CHECK FOR KEY */        01439800
*          THEN                                                         01439900
*            ZCVAL=ZCVAL!!',CURRENTDATA64';  /* INCORRECT KEY USED */   01440000
*        IF ZCVAL^=''                                                   01440100
*          THEN                                                         01440200
*            DO;                             /* INCORRECT KEYS USED */  01440300
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            01440400
*              ZMS=' 8, "REQUEST'!!          /**KMEIP* MSG*/            01440500
*                  REQUEST!!'"'!!                                       01440600
*                  ' DOES NOT ALLOW THE USE OF THE'!!                   01440700
*                  ' FOLLOWING KEY(S) "'!!                              01440800
*                  ZCVAL!!'".';                                         01440900
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01441000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01441100
*              ZMACRET=8;                    /* MACRO ERROR */          01441200
*            END;                                                       01441300
*/*PG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01441400
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     01441500
*/*PG.KKCTL06 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01441600
*  IF REQUEST='REQUEST'                                                 01441700
*    ! REQUEST='()'                          /*CHECK ENTRY*/            01441800
*     THEN                                                              01441900
*       DO;                                                             01442000
*              ZMS=' 8, THE "REQUEST" KEY'!!                            01442100
*                  ' MUST CONTAIN ONE'!!                                01442200
*                  ' (OR MORE) ARGUMENT(S).';                           01442300
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01442400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01442500
*              ZMACRET=8;                    /* MACRO ERROR */          01442600
*       END;                                                            01442700
*  ELSE                                                                 01442800
*    DO;                                                                01442900
*      ZXREQUEST='INPUT';                    /* SET IN/OUTPUT */        01443000
*      IF XREQUEST=''                        /* CHECK FOR KEYWORD */    01443100
*        THEN                                                           01443200
*          DO;                               /* KEYWORD NOT ENTERED */  01443300
*            XREQUEST='REGISTER';            /* SET DEFAULT */          01443400
*            IF REQUEST(1)^=''               /* CHECK FOR KEYWORD */    01443500
*              THEN                                                     01443600
*                DO;                                                    01443700
*                  ZXREQUEST='';             /* RESET IN/OUTPUT */      01443800
*              ZMS=' 8, "REQUEST'!!          /**KUKWP* MSG*/            01443900
*                  REQUEST!!'"'!!                                       01444000
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '!!              01444100
*                  ' VALID KEYWORD CHOICE(S) ARE:'!!                    01444200
*                  ' "REGISTER",'!!          /* VALID KEYWORD */        01444300
*                  ' "DEREGISTER",'!!        /* VALID KEYWORD */        01444400
*                  ' "FUNCTIONBEGIN",'!!     /* VALID KEYWORD */        01444500
*                  ' "FUNCTIONDATA",'!!      /* VALID KEYWORD */        01444600
*                  ' "FUNCTIONEND",'!!       /* VALID KEYWORD */        01444700
*                  ' OR "STATUS".';          /* VALID KEYWORD */        01444800
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01444900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01445000
*              ZMACRET=8;                    /* MACRO ERROR */          01445100
*                END;                                                   01445200
*          END;                                                         01445300
*    END;                                                               01445400
*/*PG.KKCTL07 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01445500
*  IF REQUEST(1)=''                          /* CHECK FOR KEYWORD */    01445600
*    THEN                                                               01445700
*      DO;                                                              01445800
*        ZXREQUEST='';                       /* RESET IN/OUTPUT */      01445900
*        ZMS=' 8, THE'!!                     /**KRKWP* MSG*/            01446000
*            ' "REQUEST" KEY AND ITS'!!                                 01446100
*            ' ARGUMENT ARE REQUIRED.'!!                                01446200
*            ' VALID KEYWORD CHOICE(S) ARE:'!!                          01446300
*            ' "REGISTER",'!!                /* VALID KEYWORD */        01446400
*            ' "DEREGISTER",'!!              /* VALID KEYWORD */        01446500
*            ' "FUNCTIONBEGIN",'!!           /* VALID KEYWORD */        01446600
*            ' "FUNCTIONDATA",'!!            /* VALID KEYWORD */        01446700
*            ' "FUNCTIONEND",'!!             /* VALID KEYWORD */        01446800
*            ' OR "STATUS".';                /* VALID KEYWORD */        01446900
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01447000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01447100
*        ZMACRET=8;                          /* MACRO ERROR */          01447200
*      END;                                                             01447300
*/*PG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01447400
*  XLINKAGE='';                                                         01447500
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01447600
*  IF LINKAGE(1)='SVC'                       /* CHECK FOR KEYWORD */    01447700
*     ! LINKAGE(1)=''                        /* CHECK FOR NULL */       01447800
*    THEN                                                               01447900
*      DO;                                                              01448000
*        XLINKAGE='SVC';                     /* SET XVARIABLE */        01448100
*        IF NUMBER(LINKAGE)>1                /* CHECK POSITIONALS */    01448200
*          THEN                                                         01448300
*            DO;                                                        01448400
*              ZMS=' 8, "LINKAGE'!!          /**KPOSP* MSG*/            01448500
*                  LINKAGE!!                                            01448600
*                  '" "LINKAGE"'!!                                      01448700
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01448800
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01448900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01449000
*              ZMACRET=8;                    /* MACRO ERROR */          01449100
*            END;                                                       01449200
*/*PG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01449300
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 01449400
*        IF VALIDATE^=''                     /* CHECK FOR KEY */        01449500
*          THEN                                                         01449600
*            ZCVAL=ZCVAL!!',VALIDATE';       /* INCORRECT KEY USED */   01449700
*        IF ZCVAL^=''                                                   01449800
*          THEN                                                         01449900
*            DO;                             /* INCORRECT KEYS USED */  01450000
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            01450100
*              ZMS=' 8, "LINKAGE'!!          /**KMEIP* MSG*/            01450200
*                  LINKAGE!!'"'!!                                       01450300
*                  ' DOES NOT ALLOW THE USE OF THE'!!                   01450400
*                  ' FOLLOWING KEY(S) "'!!                              01450500
*                  ZCVAL!!'".';                                         01450600
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01450700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01450800
*              ZMACRET=8;                    /* MACRO ERROR */          01450900
*            END;                                                       01451000
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01451100
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     01451200
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01451300
*  IF LINKAGE(1)='BRANCH'                    /* CHECK FOR KEYWORD */    01451400
*    THEN                                                               01451500
*      DO;                                                              01451600
*        XLINKAGE='BRANCH';                  /* SET XVARIABLE */        01451700
*        IF NUMBER(LINKAGE)>1                /* CHECK POSITIONALS */    01451800
*          THEN                                                         01451900
*            DO;                                                        01452000
*              ZMS=' 8, "LINKAGE'!!          /**KPOSP* MSG*/            01452100
*                  LINKAGE!!                                            01452200
*                  '" "LINKAGE"'!!                                      01452300
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01452400
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01452500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01452600
*              ZMACRET=8;                    /* MACRO ERROR */          01452700
*            END;                                                       01452800
*/*PG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01452900
*  XVALIDATE='';                                                        01453000
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01453100
*  IF VALIDATE(1)='YES'                      /* CHECK FOR KEYWORD */    01453200
*     ! VALIDATE(1)=''                       /* CHECK FOR NULL */       01453300
*    THEN                                                               01453400
*      DO;                                                              01453500
*        XVALIDATE='YES';                    /* SET XVARIABLE */        01453600
*        IF NUMBER(VALIDATE)>1               /* CHECK POSITIONALS */    01453700
*          THEN                                                         01453800
*            DO;                                                        01453900
*              ZMS=' 8, "VALIDATE'!!         /**KPOSP* MSG*/            01454000
*                  VALIDATE!!                                           01454100
*                  '" "VALIDATE"'!!                                     01454200
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01454300
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01454400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01454500
*              ZMACRET=8;                    /* MACRO ERROR */          01454600
*            END;                                                       01454700
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01454800
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     01454900
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01455000
*  IF VALIDATE(1)='NO'                       /* CHECK FOR KEYWORD */    01455100
*    THEN                                                               01455200
*      DO;                                                              01455300
*        XVALIDATE='NO';                     /* SET XVARIABLE */        01455400
*        IF NUMBER(VALIDATE)>1               /* CHECK POSITIONALS */    01455500
*          THEN                                                         01455600
*            DO;                                                        01455700
*              ZMS=' 8, "VALIDATE'!!         /**KPOSP* MSG*/            01455800
*                  VALIDATE!!                                           01455900
*                  '" "VALIDATE"'!!                                     01456000
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01456100
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01456200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01456300
*              ZMACRET=8;                    /* MACRO ERROR */          01456400
*            END;                                                       01456500
*/*PG.KKCTL05 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01456600
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     01456700
*/*PG.KKCTL06 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01456800
*  IF VALIDATE='VALIDATE'                                               01456900
*    ! VALIDATE='()'                         /*CHECK ENTRY*/            01457000
*     THEN                                                              01457100
*       DO;                                                             01457200
*              ZMS=' 8, THE "VALIDATE" KEY'!!                           01457300
*                  ' MUST CONTAIN ONE'!!                                01457400
*                  ' (OR MORE) ARGUMENT(S).';                           01457500
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01457600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01457700
*              ZMACRET=8;                    /* MACRO ERROR */          01457800
*       END;                                                            01457900
*  ELSE                                                                 01458000
*    DO;                                                                01458100
*      ZXVALIDATE='INPUT';                   /* SET IN/OUTPUT */        01458200
*      IF XVALIDATE=''                       /* CHECK FOR KEYWORD */    01458300
*        THEN                                                           01458400
*          DO;                               /* KEYWORD NOT ENTERED */  01458500
*            XVALIDATE='YES';                /* SET DEFAULT */          01458600
*            IF VALIDATE(1)^=''              /* CHECK FOR KEYWORD */    01458700
*              THEN                                                     01458800
*                DO;                                                    01458900
*                  ZXVALIDATE='';            /* RESET IN/OUTPUT */      01459000
*              ZMS=' 8, "VALIDATE'!!         /**KUKWP* MSG*/            01459100
*                  VALIDATE!!'"'!!                                      01459200
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '!!              01459300
*                  ' VALID KEYWORD CHOICE(S) ARE:'!!                    01459400
*                  ' "YES"'!!                /* VALID KEYWORD */        01459500
*                  ' OR "NO".';              /* VALID KEYWORD */        01459600
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01459700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01459800
*              ZMACRET=8;                    /* MACRO ERROR */          01459900
*                END;                                                   01460000
*          END;                                                         01460100
*    END;                                                               01460200
*/*PG.KKCTL05 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01460300
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     01460400
*/*PG.KKCTL06 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01460500
*  IF LINKAGE='LINKAGE'                                                 01460600
*    ! LINKAGE='()'                          /*CHECK ENTRY*/            01460700
*     THEN                                                              01460800
*       DO;                                                             01460900
*              ZMS=' 8, THE "LINKAGE" KEY'!!                            01461000
*                  ' MUST CONTAIN ONE'!!                                01461100
*                  ' (OR MORE) ARGUMENT(S).';                           01461200
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01461300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01461400
*              ZMACRET=8;                    /* MACRO ERROR */          01461500
*       END;                                                            01461600
*  ELSE                                                                 01461700
*    DO;                                                                01461800
*      ZXLINKAGE='INPUT';                    /* SET IN/OUTPUT */        01461900
*      IF XLINKAGE=''                        /* CHECK FOR KEYWORD */    01462000
*        THEN                                                           01462100
*          DO;                               /* KEYWORD NOT ENTERED */  01462200
*            XLINKAGE='SVC';                 /* SET DEFAULT */          01462300
*            IF LINKAGE(1)^=''               /* CHECK FOR KEYWORD */    01462400
*              THEN                                                     01462500
*                DO;                                                    01462600
*                  ZXLINKAGE='';             /* RESET IN/OUTPUT */      01462700
*              ZMS=' 8, "LINKAGE'!!          /**KUKWP* MSG*/            01462800
*                  LINKAGE!!'"'!!                                       01462900
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '!!              01463000
*                  ' VALID KEYWORD CHOICE(S) ARE:'!!                    01463100
*                  ' "SVC"'!!                /* VALID KEYWORD */        01463200
*                  ' OR "BRANCH".';          /* VALID KEYWORD */        01463300
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01463400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01463500
*              ZMACRET=8;                    /* MACRO ERROR */          01463600
*                END;                                                   01463700
*          END;                                                         01463800
*    END;                                                               01463900
*/*PG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01464000
*  XFBFE='';                                                            01464100
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01464200
*  IF FBFE(1)='NO'                           /* CHECK FOR KEYWORD */    01464300
*     ! FBFE(1)=''                           /* CHECK FOR NULL */       01464400
*    THEN                                                               01464500
*      DO;                                                              01464600
*        XFBFE='NO';                         /* SET XVARIABLE */        01464700
*        IF NUMBER(FBFE)>1                   /* CHECK POSITIONALS */    01464800
*          THEN                                                         01464900
*            DO;                                                        01465000
*              ZMS=' 8, "FBFE'!!             /**KPOSP* MSG*/            01465100
*                  FBFE!!                                               01465200
*                  '" "FBFE"'!!                                         01465300
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01465400
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01465500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01465600
*              ZMACRET=8;                    /* MACRO ERROR */          01465700
*            END;                                                       01465800
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01465900
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     01466000
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01466100
*  IF FBFE(1)='YES'                          /* CHECK FOR KEYWORD */    01466200
*    THEN                                                               01466300
*      DO;                                                              01466400
*        XFBFE='YES';                        /* SET XVARIABLE */        01466500
*        IF NUMBER(FBFE)>1                   /* CHECK POSITIONALS */    01466600
*          THEN                                                         01466700
*            DO;                                                        01466800
*              ZMS=' 8, "FBFE'!!             /**KPOSP* MSG*/            01466900
*                  FBFE!!                                               01467000
*                  '" "FBFE"'!!                                         01467100
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01467200
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01467300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01467400
*              ZMACRET=8;                    /* MACRO ERROR */          01467500
*            END;                                                       01467600
*/*PG.KKCTL05 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01467700
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     01467800
*/*PG.KKCTL06 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01467900
*  IF FBFE='FBFE'                                                       01468000
*    ! FBFE='()'                             /*CHECK ENTRY*/            01468100
*     THEN                                                              01468200
*       DO;                                                             01468300
*              ZMS=' 8, THE "FBFE" KEY'!!                               01468400
*                  ' MUST CONTAIN ONE'!!                                01468500
*                  ' (OR MORE) ARGUMENT(S).';                           01468600
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01468700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01468800
*              ZMACRET=8;                    /* MACRO ERROR */          01468900
*       END;                                                            01469000
*  ELSE                                                                 01469100
*    DO;                                                                01469200
*      ZXFBFE='INPUT';                       /* SET IN/OUTPUT */        01469300
*      IF XFBFE=''                           /* CHECK FOR KEYWORD */    01469400
*        THEN                                                           01469500
*          DO;                               /* KEYWORD NOT ENTERED */  01469600
*            XFBFE='NO';                     /* SET DEFAULT */          01469700
*            IF FBFE(1)^=''                  /* CHECK FOR KEYWORD */    01469800
*              THEN                                                     01469900
*                DO;                                                    01470000
*                  ZXFBFE='';                /* RESET IN/OUTPUT */      01470100
*              ZMS=' 8, "FBFE'!!             /**KUKWP* MSG*/            01470200
*                  FBFE!!'"'!!                                          01470300
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '!!              01470400
*                  ' VALID KEYWORD CHOICE(S) ARE:'!!                    01470500
*                  ' "NO"'!!                 /* VALID KEYWORD */        01470600
*                  ' OR "YES".';             /* VALID KEYWORD */        01470700
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01470800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01470900
*              ZMACRET=8;                    /* MACRO ERROR */          01471000
*                END;                                                   01471100
*          END;                                                         01471200
*    END;                                                               01471300
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 01471400
*  IF RETCODE='RETCODE' ! RETCODE='()'       /*CHECK ENTRY*/            01471500
*    THEN                                                               01471600
*      DO;                                                              01471700
*        ZMS=' 8, THE "RETCODE" KEY'!!                                  01471800
*            ' MUST CONTAIN ONE'!!                                      01471900
*            ' (OR MORE) ARGUMENT(S).';                                 01472000
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01472100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01472200
*        ZMACRET=8;                          /* MACRO ERROR */          01472300
*      END;                                                             01472400
*  IF NUMBER(RETCODE)>1                      /* CHECK POSITIONALS */    01472500
*    THEN                                                               01472600
*      DO;                                                              01472700
*        ZMS=' 8, "RETCODE'!!                /**KPOSP* MSG*/            01472800
*            RETCODE!!                                                  01472900
*            '" "RETCODE"'!!                                            01473000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01473100
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01473200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01473300
*        ZMACRET=8;                          /* MACRO ERROR */          01473400
*      END;                                                             01473500
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 01473600
*  IF RETCODE(1)^=''                         /* CHECK FOR NULL */       01473700
*    THEN                                                               01473800
*      DO;                                                              01473900
*        XRETCODE=RETCODE(1);                /* SET XVARIABLE */        01474000
*        ZXRETCODE='OUTPUT';                 /* SET OUTPUT */           01474100
*      END;                                                             01474200
*  ELSE                                                                 01474300
*    IF ZXRETCODE^=''                                                   01474400
*      THEN                                                             01474500
*        ZXRETCODE='';                       /* RESET OUTPUT */         01474600
*/*PG.P04 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 01474700
*      END;                                  /* END COMPLETE CHECKING*/ 01474800
*/********************************************************************/ 01474900
*/***PE.MF00 PARTIAL MACRO SYNTAX CHECKING                           */ 01475000
*/********************************************************************/ 01475100
*/*PE.MF01 XMF^='L' & XMFSCK='NOCHECK' ------------------------------*/ 01475200
*  IF XMF^='L' & XMFSCK='NOCHECK'                                       01475300
*    THEN                                                               01475400
*      DO;                                   /* PARTIAL SYNTAX CHECK */ 01475500
*/*PE.KC00 INITIALIZE KEYWORD CONTROL VARIABLES----------------------*/ 01475600
*  XREQUEST='';                        /*ejb rmp93*/                    01475700
*  XDOMAIN='';                        /*ejb rmp93*/                     01475800
*  XSCOPE='';                        /*ejb rmp93*/                      01475900
*  XUNAUTHSERV='';                        /*ejb rmp93*/                 01476000
*  XFORMAT='';                        /*ejb rmp93*/                     01476100
*  XLINKAGE='';                        /*ejb rmp93*/                    01476200
*  XVALIDATE='';                        /*ejb rmp93*/                   01476300
*  XFBFE='';                        /*ejb rmp93*/                       01476400
*/*PE.P01 EXCESSIVE POSITIONALS--------------------------------------*/ 01476500
*  IF NUMBER(MACLIST)>0                      /* CHECK POSITIONALS */    01476600
*    THEN                                                               01476700
*      DO;                                                              01476800
*        ZMS=' 8, POSITIONAL ARGUMENT(S),'!! /**PPOSP* MSG*/            01476900
*            ' "'!!MACLIST!!'"'!!                                       01477000
*            ' CANNOT BE USED.'!!                                       01477100
*            ' NO POSITIONAL ARGUMENTS'!!                               01477200
*            ' ARE ALLOWED.';                                           01477300
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01477400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01477500
*        ZMACRET=8;                          /* MACRO ERROR */          01477600
*      END;                                                             01477700
*/*PE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01477800
*  IF REQUEST(1)='REGISTER'                  /* CHECK FOR KEYWORD */    01477900
*    THEN                                                               01478000
*      DO;                                                              01478100
*        XREQUEST='REGISTER';                /* SET XVARIABLE */        01478200
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    01478300
*          THEN                                                         01478400
*            DO;                                                        01478500
*              ZMS=' 8, "REQUEST'!!          /**KPOSP* MSG*/            01478600
*                  REQUEST!!                                            01478700
*                  '" "REQUEST"'!!                                      01478800
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01478900
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01479000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01479100
*              ZMACRET=8;                    /* MACRO ERROR */          01479200
*            END;                                                       01479300
*      END;                                                             01479400
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01479500
*  IF NUMBER(PRODOWNER)>1                    /* CHECK POSITIONALS */    01479600
*    THEN                                                               01479700
*      DO;                                                              01479800
*        ZMS=' 8, "PRODOWNER'!!              /**KPOSP* MSG*/            01479900
*            PRODOWNER!!                                                01480000
*            '" "PRODOWNER"'!!                                          01480100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01480200
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01480300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01480400
*        ZMACRET=8;                          /* MACRO ERROR */          01480500
*      END;                                                             01480600
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 01480700
*  IF PRODOWNER(1)^=''                       /* CHECK FOR NULL */       01480800
*    THEN                                                               01480900
*      DO;                                                              01481000
*        XPRODOWNER=PRODOWNER(1);            /* SET XVARIABLE */        01481100
*        ZXPRODOWNER='INPUT';                /* SET IN/OUTPUT */        01481200
*      END;                                                             01481300
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01481400
*  IF NUMBER(PRODNAME)>1                     /* CHECK POSITIONALS */    01481500
*    THEN                                                               01481600
*      DO;                                                              01481700
*        ZMS=' 8, "PRODNAME'!!               /**KPOSP* MSG*/            01481800
*            PRODNAME!!                                                 01481900
*            '" "PRODNAME"'!!                                           01482000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01482100
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01482200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01482300
*        ZMACRET=8;                          /* MACRO ERROR */          01482400
*      END;                                                             01482500
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 01482600
*  IF PRODNAME(1)^=''                        /* CHECK FOR NULL */       01482700
*    THEN                                                               01482800
*      DO;                                                              01482900
*        XPRODNAME=PRODNAME(1);              /* SET XVARIABLE */        01483000
*        ZXPRODNAME='INPUT';                 /* SET IN/OUTPUT */        01483100
*      END;                                                             01483200
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01483300
*  IF PRODVERS='PRODVERS'                    /* CHECK ENTRY */          01483400
*    THEN                                                               01483500
*      DO;                                                              01483600
*        ZMS=' 8, THE "PRODVERS" KEY'!!                                 01483700
*            ' MUST CONTAIN ONE'!!                                      01483800
*            ' (OR MORE) ARGUMENT(S).';                                 01483900
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01484000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01484100
*        ZMACRET=8;                          /* MACRO ERROR */          01484200
*      END;                                                             01484300
*  IF NUMBER(PRODVERS)>1                     /* CHECK POSITIONALS */    01484400
*    THEN                                                               01484500
*      DO;                                                              01484600
*        ZMS=' 8, "PRODVERS'!!               /**KPOSP* MSG*/            01484700
*            PRODVERS!!                                                 01484800
*            '" "PRODVERS"'!!                                           01484900
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01485000
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01485100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01485200
*        ZMACRET=8;                          /* MACRO ERROR */          01485300
*      END;                                                             01485400
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01485500
*  IF PRODVERS(1)^=''                        /* CHECK FOR NULL */       01485600
*    THEN                                                               01485700
*      DO;                                                              01485800
*        XPRODVERS=PRODVERS(1);              /* SET XVARIABLE */        01485900
*        ZXPRODVERS='INPUT';                 /* SET IN/OUTPUT */        01486000
*      END;                                                             01486100
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01486200
*  IF PRODQUAL='PRODQUAL'                    /* CHECK ENTRY */          01486300
*    THEN                                                               01486400
*      DO;                                                              01486500
*        ZMS=' 8, THE "PRODQUAL" KEY'!!                                 01486600
*            ' MUST CONTAIN ONE'!!                                      01486700
*            ' (OR MORE) ARGUMENT(S).';                                 01486800
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01486900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01487000
*        ZMACRET=8;                          /* MACRO ERROR */          01487100
*      END;                                                             01487200
*  IF NUMBER(PRODQUAL)>1                     /* CHECK POSITIONALS */    01487300
*    THEN                                                               01487400
*      DO;                                                              01487500
*        ZMS=' 8, "PRODQUAL'!!               /**KPOSP* MSG*/            01487600
*            PRODQUAL!!                                                 01487700
*            '" "PRODQUAL"'!!                                           01487800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01487900
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01488000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01488100
*        ZMACRET=8;                          /* MACRO ERROR */          01488200
*      END;                                                             01488300
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01488400
*  IF PRODQUAL(1)^=''                        /* CHECK FOR NULL */       01488500
*    THEN                                                               01488600
*      DO;                                                              01488700
*        XPRODQUAL=PRODQUAL(1);              /* SET XVARIABLE */        01488800
*        ZXPRODQUAL='INPUT';                 /* SET IN/OUTPUT */        01488900
*      END;                                                             01489000
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01489100
*  IF PRODID='PRODID'                        /* CHECK ENTRY */          01489200
*    THEN                                                               01489300
*      DO;                                                              01489400
*        ZMS=' 8, THE "PRODID" KEY'!!                                   01489500
*            ' MUST CONTAIN ONE'!!                                      01489600
*            ' (OR MORE) ARGUMENT(S).';                                 01489700
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01489800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01489900
*        ZMACRET=8;                          /* MACRO ERROR */          01490000
*      END;                                                             01490100
*  IF NUMBER(PRODID)>1                       /* CHECK POSITIONALS */    01490200
*    THEN                                                               01490300
*      DO;                                                              01490400
*        ZMS=' 8, "PRODID'!!                 /**KPOSP* MSG*/            01490500
*            PRODID!!                                                   01490600
*            '" "PRODID"'!!                                             01490700
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01490800
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01490900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01491000
*        ZMACRET=8;                          /* MACRO ERROR */          01491100
*      END;                                                             01491200
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01491300
*  IF PRODID(1)^=''                          /* CHECK FOR NULL */       01491400
*    THEN                                                               01491500
*      DO;                                                              01491600
*        XPRODID=PRODID(1);                  /* SET XVARIABLE */        01491700
*        ZXPRODID='INPUT';                   /* SET IN/OUTPUT */        01491800
*      END;                                                             01491900
*/*PE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01492000
*  IF DOMAIN(1)='ADDRSP'                     /* CHECK FOR KEYWORD */    01492100
*    THEN                                                               01492200
*      DO;                                                              01492300
*        XDOMAIN='ADDRSP';                   /* SET XVARIABLE */        01492400
*        IF NUMBER(DOMAIN)>1                 /* CHECK POSITIONALS */    01492500
*          THEN                                                         01492600
*            DO;                                                        01492700
*              ZMS=' 8, "DOMAIN'!!           /**KPOSP* MSG*/            01492800
*                  DOMAIN!!                                             01492900
*                  '" "DOMAIN"'!!                                       01493000
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01493100
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01493200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01493300
*              ZMACRET=8;                    /* MACRO ERROR */          01493400
*            END;                                                       01493500
*      END;                                                             01493600
*/*PE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01493700
*  IF DOMAIN(1)='TASK'                       /* CHECK FOR KEYWORD */    01493800
*    THEN                                                               01493900
*      DO;                                                              01494000
*        XDOMAIN='TASK';                     /* SET XVARIABLE */        01494100
*        IF NUMBER(DOMAIN)>1                 /* CHECK POSITIONALS */    01494200
*          THEN                                                         01494300
*            DO;                                                        01494400
*              ZMS=' 8, "DOMAIN'!!           /**KPOSP* MSG*/            01494500
*                  DOMAIN!!                                             01494600
*                  '" "DOMAIN"'!!                                       01494700
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01494800
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01494900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01495000
*              ZMACRET=8;                    /* MACRO ERROR */          01495100
*            END;                                                       01495200
*      END;                                                             01495300
*/*PE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 01495400
*  IF SCOPE='SCOPE'                          /* CHECK ENTRY */          01495500
*    THEN                                                               01495600
*      DO;                                                              01495700
*        ZMS=' 8, THE "SCOPE" KEY'!!                                    01495800
*            ' MUST CONTAIN ONE'!!                                      01495900
*            ' (OR MORE) ARGUMENT(S).';                                 01496000
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01496100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01496200
*        ZMACRET=8;                          /* MACRO ERROR */          01496300
*      END;                                                             01496400
*  IF NUMBER(SCOPE)>1                        /* CHECK POSITIONALS */    01496500
*    THEN                                                               01496600
*      DO;                                                              01496700
*        ZMS=' 8, "SCOPE'!!                  /**KPOSP* MSG*/            01496800
*            SCOPE!!                                                    01496900
*            '" "SCOPE"'!!                                              01497000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01497100
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01497200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01497300
*        ZMACRET=8;                          /* MACRO ERROR */          01497400
*      END;                                                             01497500
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 01497600
*  IF SCOPE(1) = 'ALL'                                                  01497700
*    THEN                                                               01497800
*      XSCOPE = 'ALL';                       /* SET XVARIABLE */        01497900
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 01498000
*  IF SCOPE(1) = 'FUNCTION'                                             01498100
*    THEN                                                               01498200
*      XSCOPE = 'FUNCTION';                  /* SET XVARIABLE */        01498300
*/*PE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 01498400
*  IF XSCOPE^=''                             /* CHECK FOR KEYWORD */    01498500
*    THEN                                                               01498600
*      ZXSCOPE='INPUT';                      /* SET IN/OUTPUT */        01498700
*    ELSE                                                               01498800
*      DO;                                   /* KEYWORD NOT ENTERED */  01498900
*        IF SCOPE(1)^=''                                                01499000
*          THEN                                                         01499100
*            DO;                                                        01499200
*              ZMS=' 8, "SCOPE'!!            /**KUKWP* MSG*/            01499300
*                  SCOPE!!'"'!!                                         01499400
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '!!              01499500
*                  ' VALID KEYWORD CHOICE(S) ARE:'!!                    01499600
*                  ' "ALL"'!!                /* VALID KEYWORD */        01499700
*                  ' OR "FUNCTION".';        /* VALID KEYWORD */        01499800
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01499900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01500000
*              ZMACRET=8;                    /* MACRO ERROR */          01500100
*            END;                                                       01500200
*      END;                                                             01500300
*/*PE.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01500400
*  IF XDOMAIN^=''                            /* CHECK FOR KEYWORD */    01500500
*    THEN                                                               01500600
*      ZXDOMAIN='INPUT';                     /* SET IN/OUTPUT */        01500700
*    ELSE                                                               01500800
*      DO;                                   /* KEYWORD NOT ENTERED */  01500900
*        IF DOMAIN(1)^=''                    /* CHECK FOR KEYWORD */    01501000
*          THEN                                                         01501100
*            DO;                                                        01501200
*              ZXDOMAIN='';                  /* RESET IN/OUTPUT */      01501300
*              ZMS=' 8, "DOMAIN'!!           /**KUKWP* MSG*/            01501400
*                  DOMAIN!!'"'!!                                        01501500
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '!!              01501600
*                  ' VALID KEYWORD CHOICE(S) ARE:'!!                    01501700
*                  ' "ADDRSP"'!!             /* VALID KEYWORD */        01501800
*                  ' OR "TASK".';            /* VALID KEYWORD */        01501900
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01502000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01502100
*              ZMACRET=8;                    /* MACRO ERROR */          01502200
*            END;                                                       01502300
*      END;                                                             01502400
*/*PE.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01502500
*  XDUMMY1='';                               /* RESET XVARIABLE */      01502600
*  IF PRTOKEN^=''                            /* CHECK ME KEY */         01502700
*    THEN                                                               01502800
*      DO;                                   /* VALID ME KEY */         01502900
*        IF NUMBER(PRTOKEN)>1                /* CHECK SUBLISTS */       01503000
*          THEN                                                         01503100
*            DO;                                                        01503200
*              ZMS=' 8, "PRTOKEN'!!          /**KPOSP* MSG*/            01503300
*                  PRTOKEN!!                                            01503400
*                  '" "PRTOKEN"'!!                                      01503500
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01503600
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01503700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01503800
*              ZMACRET=8;                    /* MACRO ERROR */          01503900
*            END;                                                       01504000
*        XDUMMY1='PRTOKEN';                  /* SET XVARIABLE */        01504100
*        XPRTOKEN=PRTOKEN(1);                /* SET XVARIABLE */        01504200
*        ZXDUMMY1='OUTPUT';                  /* SET IN/OUTPUT */        01504300
*        ZXPRTOKEN='OUTPUT';                 /* SET IN/OUTPUT */        01504400
*        IF PRTOKEN(1)=''                    /* CHECK ME KEY */         01504500
*          THEN                                                         01504600
*            DO;                                                        01504700
*              ZXDUMMY1='';                  /* RESET IN/OUTPUT */      01504800
*              ZXPRTOKEN='';                 /* RESET IN/OUTPUT */      01504900
*            END;                                                       01505000
*      END;                                                             01505100
*/*PE.KMEKY02 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01505200
*  IF PRTOKEN64^=''                          /* CHECK ME KEY */         01505300
*    THEN                                                               01505400
*      DO;                                                              01505500
*        IF NUMBER(PRTOKEN64)>1              /* CHECK SUBLISTS */       01505600
*          THEN                                                         01505700
*            DO;                                                        01505800
*              ZMS=' 8, "PRTOKEN64'!!        /**KPOSP* MSG*/            01505900
*                  PRTOKEN64!!                                          01506000
*                  '" "PRTOKEN64"'!!                                    01506100
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01506200
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01506300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01506400
*              ZMACRET=8;                    /* MACRO ERROR */          01506500
*            END;                                                       01506600
*        IF XDUMMY1=''                       /* CHECK XVARIABLE */      01506700
*          THEN                                                         01506800
*            DO;                             /* VALID ME KEY */         01506900
*              XDUMMY1='PRTOKEN64';          /* SET XVAR1 */            01507000
*              XPRTOKEN64=PRTOKEN64(1);      /* SET XVAR2 */            01507100
*              ZXDUMMY1='OUTPUT';            /* SET IN/OUTPUT */        01507200
*              ZXPRTOKEN64='OUTPUT';         /* SET IN/OUTPUT */        01507300
*              IF PRTOKEN64(1)=''            /* CHECK ME KEY */         01507400
*                THEN                                                   01507500
*                  DO;                                                  01507600
*                    ZXDUMMY1='';            /* RESET IN/OUTPUT */      01507700
*                    ZXPRTOKEN64='';         /* RESET IN/OUTPUT */      01507800
*                  END;                                                 01507900
*            END;                                                       01508000
*          ELSE                                                         01508100
*            DO;                                                        01508200
*              ZMS=' 8, "PRTOKEN64'!!        /**KMEKP* MSG*/            01508300
*                  PRTOKEN64!!'"'!!                                     01508400
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'!!                01508500
*                  XDUMMY1!!                                            01508600
*                  '" KEY.';                                            01508700
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01508800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01508900
*              ZMACRET=8;                    /* MACRO ERROR */          01509000
*            END;                                                       01509100
*      END;                                                             01509200
*/*PE.KMEKY05 NAME, OPT OUTPUT, ME KEYS -ME KEY DEFAULT RESETS-------*/ 01509300
*  IF XDUMMY1=''                             /* CHECK XVARIABLE */      01509400
*    THEN                                                               01509500
*      DO;                                                              01509600
*        XDUMMY1='';                         /* RESET DEFAULT */        01509700
*        ZXDUMMY1='';                        /* RESET IN/OUTPUT */      01509800
*        XPRTOKEN='';                        /* RESET DEFAULT */        01509900
*        ZXPRTOKEN='';                       /* RESET IN/OUTPUT */      01510000
*      END;                                                             01510100
*/*PE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01510200
*  IF UNAUTHSERV(1)='BASE'                   /* CHECK FOR KEYWORD */    01510300
*    THEN                                                               01510400
*      DO;                                                              01510500
*        XUNAUTHSERV='BASE';                 /* SET XVARIABLE */        01510600
*        IF NUMBER(UNAUTHSERV)>1             /* CHECK POSITIONALS */    01510700
*          THEN                                                         01510800
*            DO;                                                        01510900
*              ZMS=' 8, "UNAUTHSERV'!!       /**KPOSP* MSG*/            01511000
*                  UNAUTHSERV!!                                         01511100
*                  '" "UNAUTHSERV"'!!                                   01511200
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01511300
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01511400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01511500
*              ZMACRET=8;                    /* MACRO ERROR */          01511600
*            END;                                                       01511700
*      END;                                                             01511800
*/*PE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01511900
*  IF UNAUTHSERV(1)='LEVEL1'                 /* CHECK FOR KEYWORD */    01512000
*    THEN                                                               01512100
*      DO;                                                              01512200
*        XUNAUTHSERV='LEVEL1';               /* SET XVARIABLE */        01512300
*        IF NUMBER(UNAUTHSERV)>1             /* CHECK POSITIONALS */    01512400
*          THEN                                                         01512500
*            DO;                                                        01512600
*              ZMS=' 8, "UNAUTHSERV'!!       /**KPOSP* MSG*/            01512700
*                  UNAUTHSERV!!                                         01512800
*                  '" "UNAUTHSERV"'!!                                   01512900
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01513000
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01513100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01513200
*              ZMACRET=8;                    /* MACRO ERROR */          01513300
*            END;                                                       01513400
*      END;                                                             01513500
*/*PE.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01513600
*  IF XUNAUTHSERV^=''                        /* CHECK FOR KEYWORD */    01513700
*    THEN                                                               01513800
*      ZXUNAUTHSERV='INPUT';                 /* SET IN/OUTPUT */        01513900
*    ELSE                                                               01514000
*      DO;                                   /* KEYWORD NOT ENTERED */  01514100
*        IF UNAUTHSERV(1)^=''                /* CHECK FOR KEYWORD */    01514200
*          THEN                                                         01514300
*            DO;                                                        01514400
*              ZXUNAUTHSERV='';              /* RESET IN/OUTPUT */      01514500
*              ZMS=' 8, "UNAUTHSERV'!!       /**KUKWP* MSG*/            01514600
*                  UNAUTHSERV!!'"'!!                                    01514700
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '!!              01514800
*                  ' VALID KEYWORD CHOICE(S) ARE:'!!                    01514900
*                  ' "BASE"'!!               /* VALID KEYWORD */        01515000
*                  ' OR "LEVEL1".';          /* VALID KEYWORD */        01515100
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01515200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01515300
*              ZMACRET=8;                    /* MACRO ERROR */          01515400
*            END;                                                       01515500
*      END;                                                             01515600
*/*PE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01515700
*  IF REQUEST(1)='DEREGISTER'                /* CHECK FOR KEYWORD */    01515800
*    THEN                                                               01515900
*      DO;                                                              01516000
*        XREQUEST='DEREGISTER';              /* SET XVARIABLE */        01516100
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    01516200
*          THEN                                                         01516300
*            DO;                                                        01516400
*              ZMS=' 8, "REQUEST'!!          /**KPOSP* MSG*/            01516500
*                  REQUEST!!                                            01516600
*                  '" "REQUEST"'!!                                      01516700
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01516800
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01516900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01517000
*              ZMACRET=8;                    /* MACRO ERROR */          01517100
*            END;                                                       01517200
*      END;                                                             01517300
*/*PE.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01517400
*  XDEREGPRODNAME='';                        /* RESET XVARIABLE */      01517500
*  IF PRODOWNER^=''                          /* CHECK ME KEY */         01517600
*    THEN                                                               01517700
*      DO;                                   /* VALID ME KEY */         01517800
*        IF NUMBER(PRODOWNER)>1              /* CHECK SUBLISTS */       01517900
*          THEN                                                         01518000
*            DO;                                                        01518100
*              ZMS=' 8, "PRODOWNER'!!        /**KPOSP* MSG*/            01518200
*                  PRODOWNER!!                                          01518300
*                  '" "PRODOWNER"'!!                                    01518400
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01518500
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01518600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01518700
*              ZMACRET=8;                    /* MACRO ERROR */          01518800
*            END;                                                       01518900
*        XDEREGPRODNAME='PRODOWNER';         /* SET XVARIABLE */        01519000
*        XPRODOWNER=PRODOWNER(1);            /* SET XVARIABLE */        01519100
*        ZXDEREGPRODNAME='INPUT';            /* SET IN/OUTPUT */        01519200
*        ZXPRODOWNER='INPUT';                /* SET IN/OUTPUT */        01519300
*        IF PRODOWNER(1)=''                  /* CHECK ME KEY */         01519400
*          THEN                                                         01519500
*            DO;                                                        01519600
*              ZXDEREGPRODNAME='';           /* RESET IN/OUTPUT */      01519700
*              ZXPRODOWNER='';               /* RESET IN/OUTPUT */      01519800
*            END;                                                       01519900
*      END;                                                             01520000
*/*PE.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01520100
*  IF PRTOKEN^=''                            /* CHECK ME KEY */         01520200
*    THEN                                                               01520300
*      DO;                                                              01520400
*        IF NUMBER(PRTOKEN)>1                /* CHECK SUBLISTS */       01520500
*          THEN                                                         01520600
*            DO;                                                        01520700
*              ZMS=' 8, "PRTOKEN'!!          /**KPOSP* MSG*/            01520800
*                  PRTOKEN!!                                            01520900
*                  '" "PRTOKEN"'!!                                      01521000
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01521100
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01521200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01521300
*              ZMACRET=8;                    /* MACRO ERROR */          01521400
*            END;                                                       01521500
*        IF XDEREGPRODNAME=''                /* CHECK XVARIABLE */      01521600
*          THEN                                                         01521700
*            DO;                             /* VALID ME KEY */         01521800
*              XDEREGPRODNAME='PRTOKEN';     /* SET XVAR1 */            01521900
*              XPRTOKEN=PRTOKEN(1);          /* SET XVAR2 */            01522000
*              ZXDEREGPRODNAME='INPUT';      /* SET IN/OUTPUT */        01522100
*              ZXPRTOKEN='INPUT';            /* SET IN/OUTPUT */        01522200
*              IF PRTOKEN(1)=''              /* CHECK ME KEY */         01522300
*                THEN                                                   01522400
*                  DO;                                                  01522500
*                    ZXDEREGPRODNAME='';     /* RESET IN/OUTPUT */      01522600
*                    ZXPRTOKEN='';           /* RESET IN/OUTPUT */      01522700
*                  END;                                                 01522800
*            END;                                                       01522900
*          ELSE                                                         01523000
*            DO;                                                        01523100
*              ZMS=' 8, "PRTOKEN'!!          /**KMEKP* MSG*/            01523200
*                  PRTOKEN!!'"'!!                                       01523300
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'!!                01523400
*                  XDEREGPRODNAME!!                                     01523500
*                  '" KEY.';                                            01523600
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01523700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01523800
*              ZMACRET=8;                    /* MACRO ERROR */          01523900
*            END;                                                       01524000
*      END;                                                             01524100
*/*PE.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01524200
*  IF PRTOKEN64^=''                          /* CHECK ME KEY */         01524300
*    THEN                                                               01524400
*      DO;                                                              01524500
*        IF NUMBER(PRTOKEN64)>1              /* CHECK SUBLISTS */       01524600
*          THEN                                                         01524700
*            DO;                                                        01524800
*              ZMS=' 8, "PRTOKEN64'!!        /**KPOSP* MSG*/            01524900
*                  PRTOKEN64!!                                          01525000
*                  '" "PRTOKEN64"'!!                                    01525100
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01525200
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01525300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01525400
*              ZMACRET=8;                    /* MACRO ERROR */          01525500
*            END;                                                       01525600
*        IF XDEREGPRODNAME=''                /* CHECK XVARIABLE */      01525700
*          THEN                                                         01525800
*            DO;                             /* VALID ME KEY */         01525900
*              XDEREGPRODNAME='PRTOKEN64';   /* SET XVAR1 */            01526000
*              XPRTOKEN64=PRTOKEN64(1);      /* SET XVAR2 */            01526100
*              ZXDEREGPRODNAME='INPUT';      /* SET IN/OUTPUT */        01526200
*              ZXPRTOKEN64='INPUT';          /* SET IN/OUTPUT */        01526300
*              IF PRTOKEN64(1)=''            /* CHECK ME KEY */         01526400
*                THEN                                                   01526500
*                  DO;                                                  01526600
*                    ZXDEREGPRODNAME='';     /* RESET IN/OUTPUT */      01526700
*                    ZXPRTOKEN64='';         /* RESET IN/OUTPUT */      01526800
*                  END;                                                 01526900
*            END;                                                       01527000
*          ELSE                                                         01527100
*            DO;                                                        01527200
*              ZMS=' 8, "PRTOKEN64'!!        /**KMEKP* MSG*/            01527300
*                  PRTOKEN64!!'"'!!                                     01527400
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'!!                01527500
*                  XDEREGPRODNAME!!                                     01527600
*                  '" KEY.';                                            01527700
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01527800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01527900
*              ZMACRET=8;                    /* MACRO ERROR */          01528000
*            END;                                                       01528100
*      END;                                                             01528200
*/*PE.KMEKY05 NAME, RQD INPUT, ME KEYS -ME KEY DEFAULT RESETS--------*/ 01528300
*  IF XDEREGPRODNAME=''                      /* CHECK XVARIABLE */      01528400
*    THEN                                                               01528500
*      DO;                                                              01528600
*        XDEREGPRODNAME='';                  /* RESET DEFAULT */        01528700
*        ZXDEREGPRODNAME='';                 /* RESET IN/OUTPUT */      01528800
*        XPRODOWNER='';                      /* RESET DEFAULT */        01528900
*        ZXPRODOWNER='';                     /* RESET IN/OUTPUT */      01529000
*      END;                                                             01529100
*/*PE.KMEKY07 NAME, RQD INPUT, ME KEYS -START------------------------*/ 01529200
*  IF XDEREGPRODNAME='PRODOWNER'             /* CHECK FOR ME KEY */     01529300
*    THEN                                                               01529400
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01529500
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01529600
*  IF NUMBER(PRODNAME)>1                     /* CHECK POSITIONALS */    01529700
*    THEN                                                               01529800
*      DO;                                                              01529900
*        ZMS=' 8, "PRODNAME'!!               /**KPOSP* MSG*/            01530000
*            PRODNAME!!                                                 01530100
*            '" "PRODNAME"'!!                                           01530200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01530300
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01530400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01530500
*        ZMACRET=8;                          /* MACRO ERROR */          01530600
*      END;                                                             01530700
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 01530800
*  IF PRODNAME(1)^=''                        /* CHECK FOR NULL */       01530900
*    THEN                                                               01531000
*      DO;                                                              01531100
*        XPRODNAME=PRODNAME(1);              /* SET XVARIABLE */        01531200
*        ZXPRODNAME='INPUT';                 /* SET IN/OUTPUT */        01531300
*      END;                                                             01531400
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01531500
*  IF PRODVERS='PRODVERS'                    /* CHECK ENTRY */          01531600
*    THEN                                                               01531700
*      DO;                                                              01531800
*        ZMS=' 8, THE "PRODVERS" KEY'!!                                 01531900
*            ' MUST CONTAIN ONE'!!                                      01532000
*            ' (OR MORE) ARGUMENT(S).';                                 01532100
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01532200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01532300
*        ZMACRET=8;                          /* MACRO ERROR */          01532400
*      END;                                                             01532500
*  IF NUMBER(PRODVERS)>1                     /* CHECK POSITIONALS */    01532600
*    THEN                                                               01532700
*      DO;                                                              01532800
*        ZMS=' 8, "PRODVERS'!!               /**KPOSP* MSG*/            01532900
*            PRODVERS!!                                                 01533000
*            '" "PRODVERS"'!!                                           01533100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01533200
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01533300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01533400
*        ZMACRET=8;                          /* MACRO ERROR */          01533500
*      END;                                                             01533600
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01533700
*  IF PRODVERS(1)^=''                        /* CHECK FOR NULL */       01533800
*    THEN                                                               01533900
*      DO;                                                              01534000
*        XPRODVERS=PRODVERS(1);              /* SET XVARIABLE */        01534100
*        ZXPRODVERS='INPUT';                 /* SET IN/OUTPUT */        01534200
*      END;                                                             01534300
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01534400
*  IF PRODQUAL='PRODQUAL'                    /* CHECK ENTRY */          01534500
*    THEN                                                               01534600
*      DO;                                                              01534700
*        ZMS=' 8, THE "PRODQUAL" KEY'!!                                 01534800
*            ' MUST CONTAIN ONE'!!                                      01534900
*            ' (OR MORE) ARGUMENT(S).';                                 01535000
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01535100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01535200
*        ZMACRET=8;                          /* MACRO ERROR */          01535300
*      END;                                                             01535400
*  IF NUMBER(PRODQUAL)>1                     /* CHECK POSITIONALS */    01535500
*    THEN                                                               01535600
*      DO;                                                              01535700
*        ZMS=' 8, "PRODQUAL'!!               /**KPOSP* MSG*/            01535800
*            PRODQUAL!!                                                 01535900
*            '" "PRODQUAL"'!!                                           01536000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01536100
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01536200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01536300
*        ZMACRET=8;                          /* MACRO ERROR */          01536400
*      END;                                                             01536500
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01536600
*  IF PRODQUAL(1)^=''                        /* CHECK FOR NULL */       01536700
*    THEN                                                               01536800
*      DO;                                                              01536900
*        XPRODQUAL=PRODQUAL(1);              /* SET XVARIABLE */        01537000
*        ZXPRODQUAL='INPUT';                 /* SET IN/OUTPUT */        01537100
*      END;                                                             01537200
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01537300
*  IF PRODID='PRODID'                        /* CHECK ENTRY */          01537400
*    THEN                                                               01537500
*      DO;                                                              01537600
*        ZMS=' 8, THE "PRODID" KEY'!!                                   01537700
*            ' MUST CONTAIN ONE'!!                                      01537800
*            ' (OR MORE) ARGUMENT(S).';                                 01537900
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01538000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01538100
*        ZMACRET=8;                          /* MACRO ERROR */          01538200
*      END;                                                             01538300
*  IF NUMBER(PRODID)>1                       /* CHECK POSITIONALS */    01538400
*    THEN                                                               01538500
*      DO;                                                              01538600
*        ZMS=' 8, "PRODID'!!                 /**KPOSP* MSG*/            01538700
*            PRODID!!                                                   01538800
*            '" "PRODID"'!!                                             01538900
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01539000
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01539100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01539200
*        ZMACRET=8;                          /* MACRO ERROR */          01539300
*      END;                                                             01539400
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01539500
*  IF PRODID(1)^=''                          /* CHECK FOR NULL */       01539600
*    THEN                                                               01539700
*      DO;                                                              01539800
*        XPRODID=PRODID(1);                  /* SET XVARIABLE */        01539900
*        ZXPRODID='INPUT';                   /* SET IN/OUTPUT */        01540000
*      END;                                                             01540100
*/*PE.KMEKY06 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 01540200
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01540300
*/*PE.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01540400
*  XDEREGENDTIME='';                         /* RESET XVARIABLE */      01540500
*  IF ENDTIME^=''                            /* CHECK ME KEY */         01540600
*    THEN                                                               01540700
*      DO;                                   /* VALID ME KEY */         01540800
*        IF NUMBER(ENDTIME)>1                /* CHECK SUBLISTS */       01540900
*          THEN                                                         01541000
*            DO;                                                        01541100
*              ZMS=' 8, "ENDTIME'!!          /**KPOSP* MSG*/            01541200
*                  ENDTIME!!                                            01541300
*                  '" "ENDTIME"'!!                                      01541400
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01541500
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01541600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01541700
*              ZMACRET=8;                    /* MACRO ERROR */          01541800
*            END;                                                       01541900
*        XDEREGENDTIME='ENDTIME';            /* SET XVARIABLE */        01542000
*        XENDTIME=ENDTIME(1);                /* SET XVARIABLE */        01542100
*        ZXDEREGENDTIME='OUTPUT';            /* SET IN/OUTPUT */        01542200
*        ZXENDTIME='OUTPUT';                 /* SET IN/OUTPUT */        01542300
*        IF ENDTIME(1)=''                    /* CHECK ME KEY */         01542400
*          THEN                                                         01542500
*            DO;                                                        01542600
*              ZXDEREGENDTIME='';            /* RESET IN/OUTPUT */      01542700
*              ZXENDTIME='';                 /* RESET IN/OUTPUT */      01542800
*            END;                                                       01542900
*      END;                                                             01543000
*/*PE.KMEKY02 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01543100
*  IF ENDTIME64^=''                          /* CHECK ME KEY */         01543200
*    THEN                                                               01543300
*      DO;                                                              01543400
*        IF NUMBER(ENDTIME64)>1              /* CHECK SUBLISTS */       01543500
*          THEN                                                         01543600
*            DO;                                                        01543700
*              ZMS=' 8, "ENDTIME64'!!        /**KPOSP* MSG*/            01543800
*                  ENDTIME64!!                                          01543900
*                  '" "ENDTIME64"'!!                                    01544000
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01544100
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01544200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01544300
*              ZMACRET=8;                    /* MACRO ERROR */          01544400
*            END;                                                       01544500
*        IF XDEREGENDTIME=''                 /* CHECK XVARIABLE */      01544600
*          THEN                                                         01544700
*            DO;                             /* VALID ME KEY */         01544800
*              XDEREGENDTIME='ENDTIME64';    /* SET XVAR1 */            01544900
*              XENDTIME64=ENDTIME64(1);      /* SET XVAR2 */            01545000
*              ZXDEREGENDTIME='OUTPUT';      /* SET IN/OUTPUT */        01545100
*              ZXENDTIME64='OUTPUT';         /* SET IN/OUTPUT */        01545200
*              IF ENDTIME64(1)=''            /* CHECK ME KEY */         01545300
*                THEN                                                   01545400
*                  DO;                                                  01545500
*                    ZXDEREGENDTIME='';      /* RESET IN/OUTPUT */      01545600
*                    ZXENDTIME64='';         /* RESET IN/OUTPUT */      01545700
*                  END;                                                 01545800
*            END;                                                       01545900
*          ELSE                                                         01546000
*            DO;                                                        01546100
*              ZMS=' 8, "ENDTIME64'!!        /**KMEKP* MSG*/            01546200
*                  ENDTIME64!!'"'!!                                     01546300
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'!!                01546400
*                  XDEREGENDTIME!!                                      01546500
*                  '" KEY.';                                            01546600
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01546700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01546800
*              ZMACRET=8;                    /* MACRO ERROR */          01546900
*            END;                                                       01547000
*      END;                                                             01547100
*/*PE.KMEKY05 NAME, OPT OUTPUT, ME KEYS -ME KEY DEFAULT RESETS-------*/ 01547200
*  IF XDEREGENDTIME=''                       /* CHECK XVARIABLE */      01547300
*    THEN                                                               01547400
*      DO;                                                              01547500
*        XDEREGENDTIME='';                   /* RESET DEFAULT */        01547600
*        ZXDEREGENDTIME='';                  /* RESET IN/OUTPUT */      01547700
*        XENDTIME='';                        /* RESET DEFAULT */        01547800
*        ZXENDTIME='';                       /* RESET IN/OUTPUT */      01547900
*      END;                                                             01548000
*/*PE.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01548100
*  XDEREGENDDATA='';                         /* RESET XVARIABLE */      01548200
*  IF ENDDATA^=''                            /* CHECK ME KEY */         01548300
*    THEN                                                               01548400
*      DO;                                   /* VALID ME KEY */         01548500
*        IF NUMBER(ENDDATA)>1                /* CHECK SUBLISTS */       01548600
*          THEN                                                         01548700
*            DO;                                                        01548800
*              ZMS=' 8, "ENDDATA'!!          /**KPOSP* MSG*/            01548900
*                  ENDDATA!!                                            01549000
*                  '" "ENDDATA"'!!                                      01549100
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01549200
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01549300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01549400
*              ZMACRET=8;                    /* MACRO ERROR */          01549500
*            END;                                                       01549600
*        XDEREGENDDATA='ENDDATA';            /* SET XVARIABLE */        01549700
*        XENDDATA=ENDDATA(1);                /* SET XVARIABLE */        01549800
*        ZXDEREGENDDATA='OUTPUT';            /* SET IN/OUTPUT */        01549900
*        ZXENDDATA='OUTPUT';                 /* SET IN/OUTPUT */        01550000
*        IF ENDDATA(1)=''                    /* CHECK ME KEY */         01550100
*          THEN                                                         01550200
*            DO;                                                        01550300
*              ZXDEREGENDDATA='';            /* RESET IN/OUTPUT */      01550400
*              ZXENDDATA='';                 /* RESET IN/OUTPUT */      01550500
*            END;                                                       01550600
*      END;                                                             01550700
*/*PE.KMEKY02 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01550800
*  IF ENDDATA64^=''                          /* CHECK ME KEY */         01550900
*    THEN                                                               01551000
*      DO;                                                              01551100
*        IF NUMBER(ENDDATA64)>1              /* CHECK SUBLISTS */       01551200
*          THEN                                                         01551300
*            DO;                                                        01551400
*              ZMS=' 8, "ENDDATA64'!!        /**KPOSP* MSG*/            01551500
*                  ENDDATA64!!                                          01551600
*                  '" "ENDDATA64"'!!                                    01551700
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01551800
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01551900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01552000
*              ZMACRET=8;                    /* MACRO ERROR */          01552100
*            END;                                                       01552200
*        IF XDEREGENDDATA=''                 /* CHECK XVARIABLE */      01552300
*          THEN                                                         01552400
*            DO;                             /* VALID ME KEY */         01552500
*              XDEREGENDDATA='ENDDATA64';    /* SET XVAR1 */            01552600
*              XENDDATA64=ENDDATA64(1);      /* SET XVAR2 */            01552700
*              ZXDEREGENDDATA='OUTPUT';      /* SET IN/OUTPUT */        01552800
*              ZXENDDATA64='OUTPUT';         /* SET IN/OUTPUT */        01552900
*              IF ENDDATA64(1)=''            /* CHECK ME KEY */         01553000
*                THEN                                                   01553100
*                  DO;                                                  01553200
*                    ZXDEREGENDDATA='';      /* RESET IN/OUTPUT */      01553300
*                    ZXENDDATA64='';         /* RESET IN/OUTPUT */      01553400
*                  END;                                                 01553500
*            END;                                                       01553600
*          ELSE                                                         01553700
*            DO;                                                        01553800
*              ZMS=' 8, "ENDDATA64'!!        /**KMEKP* MSG*/            01553900
*                  ENDDATA64!!'"'!!                                     01554000
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'!!                01554100
*                  XDEREGENDDATA!!                                      01554200
*                  '" KEY.';                                            01554300
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01554400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01554500
*              ZMACRET=8;                    /* MACRO ERROR */          01554600
*            END;                                                       01554700
*      END;                                                             01554800
*/*PE.KMEKY05 NAME, OPT OUTPUT, ME KEYS -ME KEY DEFAULT RESETS-------*/ 01554900
*  IF XDEREGENDDATA=''                       /* CHECK XVARIABLE */      01555000
*    THEN                                                               01555100
*      DO;                                                              01555200
*        XDEREGENDDATA='';                   /* RESET DEFAULT */        01555300
*        ZXDEREGENDDATA='';                  /* RESET IN/OUTPUT */      01555400
*        XENDDATA='';                        /* RESET DEFAULT */        01555500
*        ZXENDDATA='';                       /* RESET IN/OUTPUT */      01555600
*      END;                                                             01555700
*/*PE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01555800
*  IF REQUEST(1)='FUNCTIONBEGIN'             /* CHECK FOR KEYWORD */    01555900
*    THEN                                                               01556000
*      DO;                                                              01556100
*        XREQUEST='FUNCTIONBEGIN';           /* SET XVARIABLE */        01556200
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    01556300
*          THEN                                                         01556400
*            DO;                                                        01556500
*              ZMS=' 8, "REQUEST'!!          /**KPOSP* MSG*/            01556600
*                  REQUEST!!                                            01556700
*                  '" "REQUEST"'!!                                      01556800
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01556900
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01557000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01557100
*              ZMACRET=8;                    /* MACRO ERROR */          01557200
*            END;                                                       01557300
*      END;                                                             01557400
*/*PE.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01557500
*  XBEGINPRODNAME='';                        /* RESET XVARIABLE */      01557600
*  IF PRODOWNER^=''                          /* CHECK ME KEY */         01557700
*    THEN                                                               01557800
*      DO;                                   /* VALID ME KEY */         01557900
*        IF NUMBER(PRODOWNER)>1              /* CHECK SUBLISTS */       01558000
*          THEN                                                         01558100
*            DO;                                                        01558200
*              ZMS=' 8, "PRODOWNER'!!        /**KPOSP* MSG*/            01558300
*                  PRODOWNER!!                                          01558400
*                  '" "PRODOWNER"'!!                                    01558500
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01558600
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01558700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01558800
*              ZMACRET=8;                    /* MACRO ERROR */          01558900
*            END;                                                       01559000
*        XBEGINPRODNAME='PRODOWNER';         /* SET XVARIABLE */        01559100
*        XPRODOWNER=PRODOWNER(1);            /* SET XVARIABLE */        01559200
*        ZXBEGINPRODNAME='INPUT';            /* SET IN/OUTPUT */        01559300
*        ZXPRODOWNER='INPUT';                /* SET IN/OUTPUT */        01559400
*        IF PRODOWNER(1)=''                  /* CHECK ME KEY */         01559500
*          THEN                                                         01559600
*            DO;                                                        01559700
*              ZXBEGINPRODNAME='';           /* RESET IN/OUTPUT */      01559800
*              ZXPRODOWNER='';               /* RESET IN/OUTPUT */      01559900
*            END;                                                       01560000
*      END;                                                             01560100
*/*PE.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01560200
*  IF PRTOKEN^=''                            /* CHECK ME KEY */         01560300
*    THEN                                                               01560400
*      DO;                                                              01560500
*        IF NUMBER(PRTOKEN)>1                /* CHECK SUBLISTS */       01560600
*          THEN                                                         01560700
*            DO;                                                        01560800
*              ZMS=' 8, "PRTOKEN'!!          /**KPOSP* MSG*/            01560900
*                  PRTOKEN!!                                            01561000
*                  '" "PRTOKEN"'!!                                      01561100
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01561200
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01561300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01561400
*              ZMACRET=8;                    /* MACRO ERROR */          01561500
*            END;                                                       01561600
*        IF XBEGINPRODNAME=''                /* CHECK XVARIABLE */      01561700
*          THEN                                                         01561800
*            DO;                             /* VALID ME KEY */         01561900
*              XBEGINPRODNAME='PRTOKEN';     /* SET XVAR1 */            01562000
*              XPRTOKEN=PRTOKEN(1);          /* SET XVAR2 */            01562100
*              ZXBEGINPRODNAME='INPUT';      /* SET IN/OUTPUT */        01562200
*              ZXPRTOKEN='INPUT';            /* SET IN/OUTPUT */        01562300
*              IF PRTOKEN(1)=''              /* CHECK ME KEY */         01562400
*                THEN                                                   01562500
*                  DO;                                                  01562600
*                    ZXBEGINPRODNAME='';     /* RESET IN/OUTPUT */      01562700
*                    ZXPRTOKEN='';           /* RESET IN/OUTPUT */      01562800
*                  END;                                                 01562900
*            END;                                                       01563000
*          ELSE                                                         01563100
*            DO;                                                        01563200
*              ZMS=' 8, "PRTOKEN'!!          /**KMEKP* MSG*/            01563300
*                  PRTOKEN!!'"'!!                                       01563400
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'!!                01563500
*                  XBEGINPRODNAME!!                                     01563600
*                  '" KEY.';                                            01563700
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01563800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01563900
*              ZMACRET=8;                    /* MACRO ERROR */          01564000
*            END;                                                       01564100
*      END;                                                             01564200
*/*PE.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01564300
*  IF PRTOKEN64^=''                          /* CHECK ME KEY */         01564400
*    THEN                                                               01564500
*      DO;                                                              01564600
*        IF NUMBER(PRTOKEN64)>1              /* CHECK SUBLISTS */       01564700
*          THEN                                                         01564800
*            DO;                                                        01564900
*              ZMS=' 8, "PRTOKEN64'!!        /**KPOSP* MSG*/            01565000
*                  PRTOKEN64!!                                          01565100
*                  '" "PRTOKEN64"'!!                                    01565200
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01565300
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01565400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01565500
*              ZMACRET=8;                    /* MACRO ERROR */          01565600
*            END;                                                       01565700
*        IF XBEGINPRODNAME=''                /* CHECK XVARIABLE */      01565800
*          THEN                                                         01565900
*            DO;                             /* VALID ME KEY */         01566000
*              XBEGINPRODNAME='PRTOKEN64';   /* SET XVAR1 */            01566100
*              XPRTOKEN64=PRTOKEN64(1);      /* SET XVAR2 */            01566200
*              ZXBEGINPRODNAME='INPUT';      /* SET IN/OUTPUT */        01566300
*              ZXPRTOKEN64='INPUT';          /* SET IN/OUTPUT */        01566400
*              IF PRTOKEN64(1)=''            /* CHECK ME KEY */         01566500
*                THEN                                                   01566600
*                  DO;                                                  01566700
*                    ZXBEGINPRODNAME='';     /* RESET IN/OUTPUT */      01566800
*                    ZXPRTOKEN64='';         /* RESET IN/OUTPUT */      01566900
*                  END;                                                 01567000
*            END;                                                       01567100
*          ELSE                                                         01567200
*            DO;                                                        01567300
*              ZMS=' 8, "PRTOKEN64'!!        /**KMEKP* MSG*/            01567400
*                  PRTOKEN64!!'"'!!                                     01567500
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'!!                01567600
*                  XBEGINPRODNAME!!                                     01567700
*                  '" KEY.';                                            01567800
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01567900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01568000
*              ZMACRET=8;                    /* MACRO ERROR */          01568100
*            END;                                                       01568200
*      END;                                                             01568300
*/*PE.KMEKY05 NAME, RQD INPUT, ME KEYS -ME KEY DEFAULT RESETS--------*/ 01568400
*  IF XBEGINPRODNAME=''                      /* CHECK XVARIABLE */      01568500
*    THEN                                                               01568600
*      DO;                                                              01568700
*        XBEGINPRODNAME='';                  /* RESET DEFAULT */        01568800
*        ZXBEGINPRODNAME='';                 /* RESET IN/OUTPUT */      01568900
*        XPRODOWNER='';                      /* RESET DEFAULT */        01569000
*        ZXPRODOWNER='';                     /* RESET IN/OUTPUT */      01569100
*      END;                                                             01569200
*/*PE.KMEKY07 NAME, RQD INPUT, ME KEYS -START------------------------*/ 01569300
*  IF XBEGINPRODNAME='PRODOWNER'             /* CHECK FOR ME KEY */     01569400
*    THEN                                                               01569500
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01569600
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01569700
*  IF NUMBER(PRODNAME)>1                     /* CHECK POSITIONALS */    01569800
*    THEN                                                               01569900
*      DO;                                                              01570000
*        ZMS=' 8, "PRODNAME'!!               /**KPOSP* MSG*/            01570100
*            PRODNAME!!                                                 01570200
*            '" "PRODNAME"'!!                                           01570300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01570400
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01570500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01570600
*        ZMACRET=8;                          /* MACRO ERROR */          01570700
*      END;                                                             01570800
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 01570900
*  IF PRODNAME(1)^=''                        /* CHECK FOR NULL */       01571000
*    THEN                                                               01571100
*      DO;                                                              01571200
*        XPRODNAME=PRODNAME(1);              /* SET XVARIABLE */        01571300
*        ZXPRODNAME='INPUT';                 /* SET IN/OUTPUT */        01571400
*      END;                                                             01571500
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01571600
*  IF PRODVERS='PRODVERS'                    /* CHECK ENTRY */          01571700
*    THEN                                                               01571800
*      DO;                                                              01571900
*        ZMS=' 8, THE "PRODVERS" KEY'!!                                 01572000
*            ' MUST CONTAIN ONE'!!                                      01572100
*            ' (OR MORE) ARGUMENT(S).';                                 01572200
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01572300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01572400
*        ZMACRET=8;                          /* MACRO ERROR */          01572500
*      END;                                                             01572600
*  IF NUMBER(PRODVERS)>1                     /* CHECK POSITIONALS */    01572700
*    THEN                                                               01572800
*      DO;                                                              01572900
*        ZMS=' 8, "PRODVERS'!!               /**KPOSP* MSG*/            01573000
*            PRODVERS!!                                                 01573100
*            '" "PRODVERS"'!!                                           01573200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01573300
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01573400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01573500
*        ZMACRET=8;                          /* MACRO ERROR */          01573600
*      END;                                                             01573700
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01573800
*  IF PRODVERS(1)^=''                        /* CHECK FOR NULL */       01573900
*    THEN                                                               01574000
*      DO;                                                              01574100
*        XPRODVERS=PRODVERS(1);              /* SET XVARIABLE */        01574200
*        ZXPRODVERS='INPUT';                 /* SET IN/OUTPUT */        01574300
*      END;                                                             01574400
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01574500
*  IF PRODQUAL='PRODQUAL'                    /* CHECK ENTRY */          01574600
*    THEN                                                               01574700
*      DO;                                                              01574800
*        ZMS=' 8, THE "PRODQUAL" KEY'!!                                 01574900
*            ' MUST CONTAIN ONE'!!                                      01575000
*            ' (OR MORE) ARGUMENT(S).';                                 01575100
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01575200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01575300
*        ZMACRET=8;                          /* MACRO ERROR */          01575400
*      END;                                                             01575500
*  IF NUMBER(PRODQUAL)>1                     /* CHECK POSITIONALS */    01575600
*    THEN                                                               01575700
*      DO;                                                              01575800
*        ZMS=' 8, "PRODQUAL'!!               /**KPOSP* MSG*/            01575900
*            PRODQUAL!!                                                 01576000
*            '" "PRODQUAL"'!!                                           01576100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01576200
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01576300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01576400
*        ZMACRET=8;                          /* MACRO ERROR */          01576500
*      END;                                                             01576600
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01576700
*  IF PRODQUAL(1)^=''                        /* CHECK FOR NULL */       01576800
*    THEN                                                               01576900
*      DO;                                                              01577000
*        XPRODQUAL=PRODQUAL(1);              /* SET XVARIABLE */        01577100
*        ZXPRODQUAL='INPUT';                 /* SET IN/OUTPUT */        01577200
*      END;                                                             01577300
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01577400
*  IF PRODID='PRODID'                        /* CHECK ENTRY */          01577500
*    THEN                                                               01577600
*      DO;                                                              01577700
*        ZMS=' 8, THE "PRODID" KEY'!!                                   01577800
*            ' MUST CONTAIN ONE'!!                                      01577900
*            ' (OR MORE) ARGUMENT(S).';                                 01578000
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01578100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01578200
*        ZMACRET=8;                          /* MACRO ERROR */          01578300
*      END;                                                             01578400
*  IF NUMBER(PRODID)>1                       /* CHECK POSITIONALS */    01578500
*    THEN                                                               01578600
*      DO;                                                              01578700
*        ZMS=' 8, "PRODID'!!                 /**KPOSP* MSG*/            01578800
*            PRODID!!                                                   01578900
*            '" "PRODID"'!!                                             01579000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01579100
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01579200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01579300
*        ZMACRET=8;                          /* MACRO ERROR */          01579400
*      END;                                                             01579500
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01579600
*  IF PRODID(1)^=''                          /* CHECK FOR NULL */       01579700
*    THEN                                                               01579800
*      DO;                                                              01579900
*        XPRODID=PRODID(1);                  /* SET XVARIABLE */        01580000
*        ZXPRODID='INPUT';                   /* SET IN/OUTPUT */        01580100
*      END;                                                             01580200
*/*PE.KMEKY06 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 01580300
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01580400
*/*PE.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01580500
*  XDUMMY2='';                               /* RESET XVARIABLE */      01580600
*  IF BEGTIME^=''                            /* CHECK ME KEY */         01580700
*    THEN                                                               01580800
*      DO;                                   /* VALID ME KEY */         01580900
*        IF NUMBER(BEGTIME)>1                /* CHECK SUBLISTS */       01581000
*          THEN                                                         01581100
*            DO;                                                        01581200
*              ZMS=' 8, "BEGTIME'!!          /**KPOSP* MSG*/            01581300
*                  BEGTIME!!                                            01581400
*                  '" "BEGTIME"'!!                                      01581500
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01581600
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01581700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01581800
*              ZMACRET=8;                    /* MACRO ERROR */          01581900
*            END;                                                       01582000
*        XDUMMY2='BEGTIME';                  /* SET XVARIABLE */        01582100
*        XBEGTIME=BEGTIME(1);                /* SET XVARIABLE */        01582200
*        ZXDUMMY2='OUTPUT';                  /* SET IN/OUTPUT */        01582300
*        ZXBEGTIME='OUTPUT';                 /* SET IN/OUTPUT */        01582400
*        IF BEGTIME(1)=''                    /* CHECK ME KEY */         01582500
*          THEN                                                         01582600
*            DO;                                                        01582700
*              ZXDUMMY2='';                  /* RESET IN/OUTPUT */      01582800
*              ZXBEGTIME='';                 /* RESET IN/OUTPUT */      01582900
*            END;                                                       01583000
*      END;                                                             01583100
*/*PE.KMEKY02 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01583200
*  IF BEGTIME64^=''                          /* CHECK ME KEY */         01583300
*    THEN                                                               01583400
*      DO;                                                              01583500
*        IF NUMBER(BEGTIME64)>1              /* CHECK SUBLISTS */       01583600
*          THEN                                                         01583700
*            DO;                                                        01583800
*              ZMS=' 8, "BEGTIME64'!!        /**KPOSP* MSG*/            01583900
*                  BEGTIME64!!                                          01584000
*                  '" "BEGTIME64"'!!                                    01584100
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01584200
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01584300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01584400
*              ZMACRET=8;                    /* MACRO ERROR */          01584500
*            END;                                                       01584600
*        IF XDUMMY2=''                       /* CHECK XVARIABLE */      01584700
*          THEN                                                         01584800
*            DO;                             /* VALID ME KEY */         01584900
*              XDUMMY2='BEGTIME64';          /* SET XVAR1 */            01585000
*              XBEGTIME64=BEGTIME64(1);      /* SET XVAR2 */            01585100
*              ZXDUMMY2='OUTPUT';            /* SET IN/OUTPUT */        01585200
*              ZXBEGTIME64='OUTPUT';         /* SET IN/OUTPUT */        01585300
*              IF BEGTIME64(1)=''            /* CHECK ME KEY */         01585400
*                THEN                                                   01585500
*                  DO;                                                  01585600
*                    ZXDUMMY2='';            /* RESET IN/OUTPUT */      01585700
*                    ZXBEGTIME64='';         /* RESET IN/OUTPUT */      01585800
*                  END;                                                 01585900
*            END;                                                       01586000
*          ELSE                                                         01586100
*            DO;                                                        01586200
*              ZMS=' 8, "BEGTIME64'!!        /**KMEKP* MSG*/            01586300
*                  BEGTIME64!!'"'!!                                     01586400
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'!!                01586500
*                  XDUMMY2!!                                            01586600
*                  '" KEY.';                                            01586700
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01586800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01586900
*              ZMACRET=8;                    /* MACRO ERROR */          01587000
*            END;                                                       01587100
*      END;                                                             01587200
*/*PE.KMEKY05 NAME, OPT OUTPUT, ME KEYS -ME KEY DEFAULT RESETS-------*/ 01587300
*  IF XDUMMY2=''                             /* CHECK XVARIABLE */      01587400
*    THEN                                                               01587500
*      DO;                                                              01587600
*        XDUMMY2='';                         /* RESET DEFAULT */        01587700
*        ZXDUMMY2='';                        /* RESET IN/OUTPUT */      01587800
*        XBEGTIME='';                        /* RESET DEFAULT */        01587900
*        ZXBEGTIME='';                       /* RESET IN/OUTPUT */      01588000
*      END;                                                             01588100
*/*PE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01588200
*  IF REQUEST(1)='FUNCTIONDATA'              /* CHECK FOR KEYWORD */    01588300
*    THEN                                                               01588400
*      DO;                                                              01588500
*        XREQUEST='FUNCTIONDATA';            /* SET XVARIABLE */        01588600
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    01588700
*          THEN                                                         01588800
*            DO;                                                        01588900
*              ZMS=' 8, "REQUEST'!!          /**KPOSP* MSG*/            01589000
*                  REQUEST!!                                            01589100
*                  '" "REQUEST"'!!                                      01589200
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01589300
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01589400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01589500
*              ZMACRET=8;                    /* MACRO ERROR */          01589600
*            END;                                                       01589700
*      END;                                                             01589800
*/*PE.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01589900
*  XDATAPRODNAME='';                         /* RESET XVARIABLE */      01590000
*  IF PRODOWNER^=''                          /* CHECK ME KEY */         01590100
*    THEN                                                               01590200
*      DO;                                   /* VALID ME KEY */         01590300
*        IF NUMBER(PRODOWNER)>1              /* CHECK SUBLISTS */       01590400
*          THEN                                                         01590500
*            DO;                                                        01590600
*              ZMS=' 8, "PRODOWNER'!!        /**KPOSP* MSG*/            01590700
*                  PRODOWNER!!                                          01590800
*                  '" "PRODOWNER"'!!                                    01590900
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01591000
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01591100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01591200
*              ZMACRET=8;                    /* MACRO ERROR */          01591300
*            END;                                                       01591400
*        XDATAPRODNAME='PRODOWNER';          /* SET XVARIABLE */        01591500
*        XPRODOWNER=PRODOWNER(1);            /* SET XVARIABLE */        01591600
*        ZXDATAPRODNAME='INPUT';             /* SET IN/OUTPUT */        01591700
*        ZXPRODOWNER='INPUT';                /* SET IN/OUTPUT */        01591800
*        IF PRODOWNER(1)=''                  /* CHECK ME KEY */         01591900
*          THEN                                                         01592000
*            DO;                                                        01592100
*              ZXDATAPRODNAME='';            /* RESET IN/OUTPUT */      01592200
*              ZXPRODOWNER='';               /* RESET IN/OUTPUT */      01592300
*            END;                                                       01592400
*      END;                                                             01592500
*/*PE.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01592600
*  IF PRTOKEN^=''                            /* CHECK ME KEY */         01592700
*    THEN                                                               01592800
*      DO;                                                              01592900
*        IF NUMBER(PRTOKEN)>1                /* CHECK SUBLISTS */       01593000
*          THEN                                                         01593100
*            DO;                                                        01593200
*              ZMS=' 8, "PRTOKEN'!!          /**KPOSP* MSG*/            01593300
*                  PRTOKEN!!                                            01593400
*                  '" "PRTOKEN"'!!                                      01593500
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01593600
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01593700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01593800
*              ZMACRET=8;                    /* MACRO ERROR */          01593900
*            END;                                                       01594000
*        IF XDATAPRODNAME=''                 /* CHECK XVARIABLE */      01594100
*          THEN                                                         01594200
*            DO;                             /* VALID ME KEY */         01594300
*              XDATAPRODNAME='PRTOKEN';      /* SET XVAR1 */            01594400
*              XPRTOKEN=PRTOKEN(1);          /* SET XVAR2 */            01594500
*              ZXDATAPRODNAME='INPUT';       /* SET IN/OUTPUT */        01594600
*              ZXPRTOKEN='INPUT';            /* SET IN/OUTPUT */        01594700
*              IF PRTOKEN(1)=''              /* CHECK ME KEY */         01594800
*                THEN                                                   01594900
*                  DO;                                                  01595000
*                    ZXDATAPRODNAME='';      /* RESET IN/OUTPUT */      01595100
*                    ZXPRTOKEN='';           /* RESET IN/OUTPUT */      01595200
*                  END;                                                 01595300
*            END;                                                       01595400
*          ELSE                                                         01595500
*            DO;                                                        01595600
*              ZMS=' 8, "PRTOKEN'!!          /**KMEKP* MSG*/            01595700
*                  PRTOKEN!!'"'!!                                       01595800
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'!!                01595900
*                  XDATAPRODNAME!!                                      01596000
*                  '" KEY.';                                            01596100
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01596200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01596300
*              ZMACRET=8;                    /* MACRO ERROR */          01596400
*            END;                                                       01596500
*      END;                                                             01596600
*/*PE.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01596700
*  IF PRTOKEN64^=''                          /* CHECK ME KEY */         01596800
*    THEN                                                               01596900
*      DO;                                                              01597000
*        IF NUMBER(PRTOKEN64)>1              /* CHECK SUBLISTS */       01597100
*          THEN                                                         01597200
*            DO;                                                        01597300
*              ZMS=' 8, "PRTOKEN64'!!        /**KPOSP* MSG*/            01597400
*                  PRTOKEN64!!                                          01597500
*                  '" "PRTOKEN64"'!!                                    01597600
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01597700
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01597800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01597900
*              ZMACRET=8;                    /* MACRO ERROR */          01598000
*            END;                                                       01598100
*        IF XDATAPRODNAME=''                 /* CHECK XVARIABLE */      01598200
*          THEN                                                         01598300
*            DO;                             /* VALID ME KEY */         01598400
*              XDATAPRODNAME='PRTOKEN64';    /* SET XVAR1 */            01598500
*              XPRTOKEN64=PRTOKEN64(1);      /* SET XVAR2 */            01598600
*              ZXDATAPRODNAME='INPUT';       /* SET IN/OUTPUT */        01598700
*              ZXPRTOKEN64='INPUT';          /* SET IN/OUTPUT */        01598800
*              IF PRTOKEN64(1)=''            /* CHECK ME KEY */         01598900
*                THEN                                                   01599000
*                  DO;                                                  01599100
*                    ZXDATAPRODNAME='';      /* RESET IN/OUTPUT */      01599200
*                    ZXPRTOKEN64='';         /* RESET IN/OUTPUT */      01599300
*                  END;                                                 01599400
*            END;                                                       01599500
*          ELSE                                                         01599600
*            DO;                                                        01599700
*              ZMS=' 8, "PRTOKEN64'!!        /**KMEKP* MSG*/            01599800
*                  PRTOKEN64!!'"'!!                                     01599900
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'!!                01600000
*                  XDATAPRODNAME!!                                      01600100
*                  '" KEY.';                                            01600200
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01600300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01600400
*              ZMACRET=8;                    /* MACRO ERROR */          01600500
*            END;                                                       01600600
*      END;                                                             01600700
*/*PE.KMEKY05 NAME, RQD INPUT, ME KEYS -ME KEY DEFAULT RESETS--------*/ 01600800
*  IF XDATAPRODNAME=''                       /* CHECK XVARIABLE */      01600900
*    THEN                                                               01601000
*      DO;                                                              01601100
*        XDATAPRODNAME='';                   /* RESET DEFAULT */        01601200
*        ZXDATAPRODNAME='';                  /* RESET IN/OUTPUT */      01601300
*        XPRODOWNER='';                      /* RESET DEFAULT */        01601400
*        ZXPRODOWNER='';                     /* RESET IN/OUTPUT */      01601500
*      END;                                                             01601600
*/*PE.KMEKY07 NAME, RQD INPUT, ME KEYS -START------------------------*/ 01601700
*  IF XDATAPRODNAME='PRODOWNER'              /* CHECK FOR ME KEY */     01601800
*    THEN                                                               01601900
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01602000
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01602100
*  IF NUMBER(PRODNAME)>1                     /* CHECK POSITIONALS */    01602200
*    THEN                                                               01602300
*      DO;                                                              01602400
*        ZMS=' 8, "PRODNAME'!!               /**KPOSP* MSG*/            01602500
*            PRODNAME!!                                                 01602600
*            '" "PRODNAME"'!!                                           01602700
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01602800
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01602900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01603000
*        ZMACRET=8;                          /* MACRO ERROR */          01603100
*      END;                                                             01603200
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 01603300
*  IF PRODNAME(1)^=''                        /* CHECK FOR NULL */       01603400
*    THEN                                                               01603500
*      DO;                                                              01603600
*        XPRODNAME=PRODNAME(1);              /* SET XVARIABLE */        01603700
*        ZXPRODNAME='INPUT';                 /* SET IN/OUTPUT */        01603800
*      END;                                                             01603900
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01604000
*  IF PRODVERS='PRODVERS'                    /* CHECK ENTRY */          01604100
*    THEN                                                               01604200
*      DO;                                                              01604300
*        ZMS=' 8, THE "PRODVERS" KEY'!!                                 01604400
*            ' MUST CONTAIN ONE'!!                                      01604500
*            ' (OR MORE) ARGUMENT(S).';                                 01604600
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01604700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01604800
*        ZMACRET=8;                          /* MACRO ERROR */          01604900
*      END;                                                             01605000
*  IF NUMBER(PRODVERS)>1                     /* CHECK POSITIONALS */    01605100
*    THEN                                                               01605200
*      DO;                                                              01605300
*        ZMS=' 8, "PRODVERS'!!               /**KPOSP* MSG*/            01605400
*            PRODVERS!!                                                 01605500
*            '" "PRODVERS"'!!                                           01605600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01605700
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01605800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01605900
*        ZMACRET=8;                          /* MACRO ERROR */          01606000
*      END;                                                             01606100
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01606200
*  IF PRODVERS(1)^=''                        /* CHECK FOR NULL */       01606300
*    THEN                                                               01606400
*      DO;                                                              01606500
*        XPRODVERS=PRODVERS(1);              /* SET XVARIABLE */        01606600
*        ZXPRODVERS='INPUT';                 /* SET IN/OUTPUT */        01606700
*      END;                                                             01606800
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01606900
*  IF PRODQUAL='PRODQUAL'                    /* CHECK ENTRY */          01607000
*    THEN                                                               01607100
*      DO;                                                              01607200
*        ZMS=' 8, THE "PRODQUAL" KEY'!!                                 01607300
*            ' MUST CONTAIN ONE'!!                                      01607400
*            ' (OR MORE) ARGUMENT(S).';                                 01607500
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01607600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01607700
*        ZMACRET=8;                          /* MACRO ERROR */          01607800
*      END;                                                             01607900
*  IF NUMBER(PRODQUAL)>1                     /* CHECK POSITIONALS */    01608000
*    THEN                                                               01608100
*      DO;                                                              01608200
*        ZMS=' 8, "PRODQUAL'!!               /**KPOSP* MSG*/            01608300
*            PRODQUAL!!                                                 01608400
*            '" "PRODQUAL"'!!                                           01608500
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01608600
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01608700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01608800
*        ZMACRET=8;                          /* MACRO ERROR */          01608900
*      END;                                                             01609000
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01609100
*  IF PRODQUAL(1)^=''                        /* CHECK FOR NULL */       01609200
*    THEN                                                               01609300
*      DO;                                                              01609400
*        XPRODQUAL=PRODQUAL(1);              /* SET XVARIABLE */        01609500
*        ZXPRODQUAL='INPUT';                 /* SET IN/OUTPUT */        01609600
*      END;                                                             01609700
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01609800
*  IF PRODID='PRODID'                        /* CHECK ENTRY */          01609900
*    THEN                                                               01610000
*      DO;                                                              01610100
*        ZMS=' 8, THE "PRODID" KEY'!!                                   01610200
*            ' MUST CONTAIN ONE'!!                                      01610300
*            ' (OR MORE) ARGUMENT(S).';                                 01610400
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01610500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01610600
*        ZMACRET=8;                          /* MACRO ERROR */          01610700
*      END;                                                             01610800
*  IF NUMBER(PRODID)>1                       /* CHECK POSITIONALS */    01610900
*    THEN                                                               01611000
*      DO;                                                              01611100
*        ZMS=' 8, "PRODID'!!                 /**KPOSP* MSG*/            01611200
*            PRODID!!                                                   01611300
*            '" "PRODID"'!!                                             01611400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01611500
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01611600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01611700
*        ZMACRET=8;                          /* MACRO ERROR */          01611800
*      END;                                                             01611900
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01612000
*  IF PRODID(1)^=''                          /* CHECK FOR NULL */       01612100
*    THEN                                                               01612200
*      DO;                                                              01612300
*        XPRODID=PRODID(1);                  /* SET XVARIABLE */        01612400
*        ZXPRODID='INPUT';                   /* SET IN/OUTPUT */        01612500
*      END;                                                             01612600
*/*PE.KMEKY06 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 01612700
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01612800
*/*PE.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01612900
*  XDUMMY3='';                               /* RESET XVARIABLE */      01613000
*  IF DATA^=''                               /* CHECK ME KEY */         01613100
*    THEN                                                               01613200
*      DO;                                   /* VALID ME KEY */         01613300
*        IF NUMBER(DATA)>1                   /* CHECK SUBLISTS */       01613400
*          THEN                                                         01613500
*            DO;                                                        01613600
*              ZMS=' 8, "DATA'!!             /**KPOSP* MSG*/            01613700
*                  DATA!!                                               01613800
*                  '" "DATA"'!!                                         01613900
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01614000
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01614100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01614200
*              ZMACRET=8;                    /* MACRO ERROR */          01614300
*            END;                                                       01614400
*        XDUMMY3='DATA';                     /* SET XVARIABLE */        01614500
*        XDATA=DATA(1);                      /* SET XVARIABLE */        01614600
*        ZXDUMMY3='INPUT';                   /* SET IN/OUTPUT */        01614700
*        ZXDATA='INPUT';                     /* SET IN/OUTPUT */        01614800
*        IF DATA(1)=''                       /* CHECK ME KEY */         01614900
*          THEN                                                         01615000
*            DO;                                                        01615100
*              ZXDUMMY3='';                  /* RESET IN/OUTPUT */      01615200
*              ZXDATA='';                    /* RESET IN/OUTPUT */      01615300
*            END;                                                       01615400
*      END;                                                             01615500
*/*PE.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01615600
*  IF DATA64^=''                             /* CHECK ME KEY */         01615700
*    THEN                                                               01615800
*      DO;                                                              01615900
*        IF NUMBER(DATA64)>1                 /* CHECK SUBLISTS */       01616000
*          THEN                                                         01616100
*            DO;                                                        01616200
*              ZMS=' 8, "DATA64'!!           /**KPOSP* MSG*/            01616300
*                  DATA64!!                                             01616400
*                  '" "DATA64"'!!                                       01616500
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01616600
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01616700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01616800
*              ZMACRET=8;                    /* MACRO ERROR */          01616900
*            END;                                                       01617000
*        IF XDUMMY3=''                       /* CHECK XVARIABLE */      01617100
*          THEN                                                         01617200
*            DO;                             /* VALID ME KEY */         01617300
*              XDUMMY3='DATA64';             /* SET XVAR1 */            01617400
*              XDATA64=DATA64(1);            /* SET XVAR2 */            01617500
*              ZXDUMMY3='INPUT';             /* SET IN/OUTPUT */        01617600
*              ZXDATA64='INPUT';             /* SET IN/OUTPUT */        01617700
*              IF DATA64(1)=''               /* CHECK ME KEY */         01617800
*                THEN                                                   01617900
*                  DO;                                                  01618000
*                    ZXDUMMY3='';            /* RESET IN/OUTPUT */      01618100
*                    ZXDATA64='';            /* RESET IN/OUTPUT */      01618200
*                  END;                                                 01618300
*            END;                                                       01618400
*          ELSE                                                         01618500
*            DO;                                                        01618600
*              ZMS=' 8, "DATA64'!!           /**KMEKP* MSG*/            01618700
*                  DATA64!!'"'!!                                        01618800
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'!!                01618900
*                  XDUMMY3!!                                            01619000
*                  '" KEY.';                                            01619100
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01619200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01619300
*              ZMACRET=8;                    /* MACRO ERROR */          01619400
*            END;                                                       01619500
*      END;                                                             01619600
*/*PE.KMEKY05 NAME, RQD INPUT, ME KEYS -ME KEY DEFAULT RESETS--------*/ 01619700
*  IF XDUMMY3=''                             /* CHECK XVARIABLE */      01619800
*    THEN                                                               01619900
*      DO;                                                              01620000
*        XDUMMY3='';                         /* RESET DEFAULT */        01620100
*        ZXDUMMY3='';                        /* RESET IN/OUTPUT */      01620200
*        XDATA='';                           /* RESET DEFAULT */        01620300
*        ZXDATA='';                          /* RESET IN/OUTPUT */      01620400
*      END;                                                             01620500
*/*PE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 01620600
*  IF FORMAT='FORMAT'                        /* CHECK ENTRY */          01620700
*    THEN                                                               01620800
*      DO;                                                              01620900
*        ZMS=' 8, THE "FORMAT" KEY'!!                                   01621000
*            ' MUST CONTAIN ONE'!!                                      01621100
*            ' (OR MORE) ARGUMENT(S).';                                 01621200
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01621300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01621400
*        ZMACRET=8;                          /* MACRO ERROR */          01621500
*      END;                                                             01621600
*  IF NUMBER(FORMAT)>1                       /* CHECK POSITIONALS */    01621700
*    THEN                                                               01621800
*      DO;                                                              01621900
*        ZMS=' 8, "FORMAT'!!                 /**KPOSP* MSG*/            01622000
*            FORMAT!!                                                   01622100
*            '" "FORMAT"'!!                                             01622200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01622300
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01622400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01622500
*        ZMACRET=8;                          /* MACRO ERROR */          01622600
*      END;                                                             01622700
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 01622800
*  IF FORMAT(1) = 'CPUTIME'                                             01622900
*    THEN                                                               01623000
*      XFORMAT = 'CPUTIME';                  /* SET XVARIABLE */        01623100
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 01623200
*  IF FORMAT(1) = 'BINARY'                                              01623300
*    THEN                                                               01623400
*      XFORMAT = 'BINARY';                   /* SET XVARIABLE */        01623500
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 01623600
*  IF FORMAT(1) = 'FLOAT'                                               01623700
*    THEN                                                               01623800
*      XFORMAT = 'FLOAT';                    /* SET XVARIABLE */        01623900
*/*PE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 01624000
*  IF XFORMAT^=''                            /* CHECK FOR KEYWORD */    01624100
*    THEN                                                               01624200
*      ZXFORMAT='INPUT';                     /* SET IN/OUTPUT */        01624300
*    ELSE                                                               01624400
*      DO;                                   /* KEYWORD NOT ENTERED */  01624500
*        IF FORMAT(1)^=''                                               01624600
*          THEN                                                         01624700
*            DO;                                                        01624800
*              ZMS=' 8, "FORMAT'!!           /**KUKWP* MSG*/            01624900
*                  FORMAT!!'"'!!                                        01625000
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '!!              01625100
*                  ' VALID KEYWORD CHOICE(S) ARE:'!!                    01625200
*                  ' "CPUTIME",'!!           /* VALID KEYWORD */        01625300
*                  ' "BINARY",'!!            /* VALID KEYWORD */        01625400
*                  ' OR "FLOAT".';           /* VALID KEYWORD */        01625500
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01625600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01625700
*              ZMACRET=8;                    /* MACRO ERROR */          01625800
*            END;                                                       01625900
*      END;                                                             01626000
*/*PE.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01626100
*  XDUMMY4='';                               /* RESET XVARIABLE */      01626200
*  IF CURRENTDATA^=''                        /* CHECK ME KEY */         01626300
*    THEN                                                               01626400
*      DO;                                   /* VALID ME KEY */         01626500
*        IF NUMBER(CURRENTDATA)>1            /* CHECK SUBLISTS */       01626600
*          THEN                                                         01626700
*            DO;                                                        01626800
*              ZMS=' 8, "CURRENTDATA'!!      /**KPOSP* MSG*/            01626900
*                  CURRENTDATA!!                                        01627000
*                  '" "CURRENTDATA"'!!                                  01627100
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01627200
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01627300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01627400
*              ZMACRET=8;                    /* MACRO ERROR */          01627500
*            END;                                                       01627600
*        XDUMMY4='CURRENTDATA';              /* SET XVARIABLE */        01627700
*        XCURRENTDATA=CURRENTDATA(1);        /* SET XVARIABLE */        01627800
*        ZXDUMMY4='OUTPUT';                  /* SET IN/OUTPUT */        01627900
*        ZXCURRENTDATA='OUTPUT';             /* SET IN/OUTPUT */        01628000
*        IF CURRENTDATA(1)=''                /* CHECK ME KEY */         01628100
*          THEN                                                         01628200
*            DO;                                                        01628300
*              ZXDUMMY4='';                  /* RESET IN/OUTPUT */      01628400
*              ZXCURRENTDATA='';             /* RESET IN/OUTPUT */      01628500
*            END;                                                       01628600
*      END;                                                             01628700
*/*PE.KMEKY02 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01628800
*  IF CURRENTDATA64^=''                      /* CHECK ME KEY */         01628900
*    THEN                                                               01629000
*      DO;                                                              01629100
*        IF NUMBER(CURRENTDATA64)>1          /* CHECK SUBLISTS */       01629200
*          THEN                                                         01629300
*            DO;                                                        01629400
*              ZMS=' 8, "CURRENTDATA64'!!    /**KPOSP* MSG*/            01629500
*                  CURRENTDATA64!!                                      01629600
*                  '" "CURRENTDATA64"'!!                                01629700
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01629800
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01629900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01630000
*              ZMACRET=8;                    /* MACRO ERROR */          01630100
*            END;                                                       01630200
*        IF XDUMMY4=''                       /* CHECK XVARIABLE */      01630300
*          THEN                                                         01630400
*            DO;                             /* VALID ME KEY */         01630500
*              XDUMMY4='CURRENTDATA64';      /* SET XVAR1 */            01630600
*              XCURRENTDATA64=CURRENTDATA64(1); /* SET XVAR2 */         01630700
*              ZXDUMMY4='OUTPUT';            /* SET IN/OUTPUT */        01630800
*              ZXCURRENTDATA64='OUTPUT';     /* SET IN/OUTPUT */        01630900
*              IF CURRENTDATA64(1)=''        /* CHECK ME KEY */         01631000
*                THEN                                                   01631100
*                  DO;                                                  01631200
*                    ZXDUMMY4='';            /* RESET IN/OUTPUT */      01631300
*                    ZXCURRENTDATA64='';     /* RESET IN/OUTPUT */      01631400
*                  END;                                                 01631500
*            END;                                                       01631600
*          ELSE                                                         01631700
*            DO;                                                        01631800
*              ZMS=' 8, "CURRENTDATA64'!!    /**KMEKP* MSG*/            01631900
*                  CURRENTDATA64!!'"'!!                                 01632000
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'!!                01632100
*                  XDUMMY4!!                                            01632200
*                  '" KEY.';                                            01632300
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01632400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01632500
*              ZMACRET=8;                    /* MACRO ERROR */          01632600
*            END;                                                       01632700
*      END;                                                             01632800
*/*PE.KMEKY05 NAME, OPT OUTPUT, ME KEYS -ME KEY DEFAULT RESETS-------*/ 01632900
*  IF XDUMMY4=''                             /* CHECK XVARIABLE */      01633000
*    THEN                                                               01633100
*      DO;                                                              01633200
*        XDUMMY4='';                         /* RESET DEFAULT */        01633300
*        ZXDUMMY4='';                        /* RESET IN/OUTPUT */      01633400
*        XCURRENTDATA='';                    /* RESET DEFAULT */        01633500
*        ZXCURRENTDATA='';                   /* RESET IN/OUTPUT */      01633600
*      END;                                                             01633700
*/*PE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01633800
*  IF REQUEST(1)='FUNCTIONEND'               /* CHECK FOR KEYWORD */    01633900
*    THEN                                                               01634000
*      DO;                                                              01634100
*        XREQUEST='FUNCTIONEND';             /* SET XVARIABLE */        01634200
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    01634300
*          THEN                                                         01634400
*            DO;                                                        01634500
*              ZMS=' 8, "REQUEST'!!          /**KPOSP* MSG*/            01634600
*                  REQUEST!!                                            01634700
*                  '" "REQUEST"'!!                                      01634800
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01634900
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01635000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01635100
*              ZMACRET=8;                    /* MACRO ERROR */          01635200
*            END;                                                       01635300
*      END;                                                             01635400
*/*PE.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01635500
*  XENDPRODNAME='';                          /* RESET XVARIABLE */      01635600
*  IF PRODOWNER^=''                          /* CHECK ME KEY */         01635700
*    THEN                                                               01635800
*      DO;                                   /* VALID ME KEY */         01635900
*        IF NUMBER(PRODOWNER)>1              /* CHECK SUBLISTS */       01636000
*          THEN                                                         01636100
*            DO;                                                        01636200
*              ZMS=' 8, "PRODOWNER'!!        /**KPOSP* MSG*/            01636300
*                  PRODOWNER!!                                          01636400
*                  '" "PRODOWNER"'!!                                    01636500
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01636600
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01636700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01636800
*              ZMACRET=8;                    /* MACRO ERROR */          01636900
*            END;                                                       01637000
*        XENDPRODNAME='PRODOWNER';           /* SET XVARIABLE */        01637100
*        XPRODOWNER=PRODOWNER(1);            /* SET XVARIABLE */        01637200
*        ZXENDPRODNAME='INPUT';              /* SET IN/OUTPUT */        01637300
*        ZXPRODOWNER='INPUT';                /* SET IN/OUTPUT */        01637400
*        IF PRODOWNER(1)=''                  /* CHECK ME KEY */         01637500
*          THEN                                                         01637600
*            DO;                                                        01637700
*              ZXENDPRODNAME='';             /* RESET IN/OUTPUT */      01637800
*              ZXPRODOWNER='';               /* RESET IN/OUTPUT */      01637900
*            END;                                                       01638000
*      END;                                                             01638100
*/*PE.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01638200
*  IF PRTOKEN^=''                            /* CHECK ME KEY */         01638300
*    THEN                                                               01638400
*      DO;                                                              01638500
*        IF NUMBER(PRTOKEN)>1                /* CHECK SUBLISTS */       01638600
*          THEN                                                         01638700
*            DO;                                                        01638800
*              ZMS=' 8, "PRTOKEN'!!          /**KPOSP* MSG*/            01638900
*                  PRTOKEN!!                                            01639000
*                  '" "PRTOKEN"'!!                                      01639100
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01639200
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01639300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01639400
*              ZMACRET=8;                    /* MACRO ERROR */          01639500
*            END;                                                       01639600
*        IF XENDPRODNAME=''                  /* CHECK XVARIABLE */      01639700
*          THEN                                                         01639800
*            DO;                             /* VALID ME KEY */         01639900
*              XENDPRODNAME='PRTOKEN';       /* SET XVAR1 */            01640000
*              XPRTOKEN=PRTOKEN(1);          /* SET XVAR2 */            01640100
*              ZXENDPRODNAME='INPUT';        /* SET IN/OUTPUT */        01640200
*              ZXPRTOKEN='INPUT';            /* SET IN/OUTPUT */        01640300
*              IF PRTOKEN(1)=''              /* CHECK ME KEY */         01640400
*                THEN                                                   01640500
*                  DO;                                                  01640600
*                    ZXENDPRODNAME='';       /* RESET IN/OUTPUT */      01640700
*                    ZXPRTOKEN='';           /* RESET IN/OUTPUT */      01640800
*                  END;                                                 01640900
*            END;                                                       01641000
*          ELSE                                                         01641100
*            DO;                                                        01641200
*              ZMS=' 8, "PRTOKEN'!!          /**KMEKP* MSG*/            01641300
*                  PRTOKEN!!'"'!!                                       01641400
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'!!                01641500
*                  XENDPRODNAME!!                                       01641600
*                  '" KEY.';                                            01641700
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01641800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01641900
*              ZMACRET=8;                    /* MACRO ERROR */          01642000
*            END;                                                       01642100
*      END;                                                             01642200
*/*PE.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 01642300
*  IF PRTOKEN64^=''                          /* CHECK ME KEY */         01642400
*    THEN                                                               01642500
*      DO;                                                              01642600
*        IF NUMBER(PRTOKEN64)>1              /* CHECK SUBLISTS */       01642700
*          THEN                                                         01642800
*            DO;                                                        01642900
*              ZMS=' 8, "PRTOKEN64'!!        /**KPOSP* MSG*/            01643000
*                  PRTOKEN64!!                                          01643100
*                  '" "PRTOKEN64"'!!                                    01643200
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01643300
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01643400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01643500
*              ZMACRET=8;                    /* MACRO ERROR */          01643600
*            END;                                                       01643700
*        IF XENDPRODNAME=''                  /* CHECK XVARIABLE */      01643800
*          THEN                                                         01643900
*            DO;                             /* VALID ME KEY */         01644000
*              XENDPRODNAME='PRTOKEN64';     /* SET XVAR1 */            01644100
*              XPRTOKEN64=PRTOKEN64(1);      /* SET XVAR2 */            01644200
*              ZXENDPRODNAME='INPUT';        /* SET IN/OUTPUT */        01644300
*              ZXPRTOKEN64='INPUT';          /* SET IN/OUTPUT */        01644400
*              IF PRTOKEN64(1)=''            /* CHECK ME KEY */         01644500
*                THEN                                                   01644600
*                  DO;                                                  01644700
*                    ZXENDPRODNAME='';       /* RESET IN/OUTPUT */      01644800
*                    ZXPRTOKEN64='';         /* RESET IN/OUTPUT */      01644900
*                  END;                                                 01645000
*            END;                                                       01645100
*          ELSE                                                         01645200
*            DO;                                                        01645300
*              ZMS=' 8, "PRTOKEN64'!!        /**KMEKP* MSG*/            01645400
*                  PRTOKEN64!!'"'!!                                     01645500
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'!!                01645600
*                  XENDPRODNAME!!                                       01645700
*                  '" KEY.';                                            01645800
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01645900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01646000
*              ZMACRET=8;                    /* MACRO ERROR */          01646100
*            END;                                                       01646200
*      END;                                                             01646300
*/*PE.KMEKY05 NAME, RQD INPUT, ME KEYS -ME KEY DEFAULT RESETS--------*/ 01646400
*  IF XENDPRODNAME=''                        /* CHECK XVARIABLE */      01646500
*    THEN                                                               01646600
*      DO;                                                              01646700
*        XENDPRODNAME='';                    /* RESET DEFAULT */        01646800
*        ZXENDPRODNAME='';                   /* RESET IN/OUTPUT */      01646900
*        XPRODOWNER='';                      /* RESET DEFAULT */        01647000
*        ZXPRODOWNER='';                     /* RESET IN/OUTPUT */      01647100
*      END;                                                             01647200
*/*PE.KMEKY07 NAME, RQD INPUT, ME KEYS -START------------------------*/ 01647300
*  IF XENDPRODNAME='PRODOWNER'               /* CHECK FOR ME KEY */     01647400
*    THEN                                                               01647500
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        01647600
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01647700
*  IF NUMBER(PRODNAME)>1                     /* CHECK POSITIONALS */    01647800
*    THEN                                                               01647900
*      DO;                                                              01648000
*        ZMS=' 8, "PRODNAME'!!               /**KPOSP* MSG*/            01648100
*            PRODNAME!!                                                 01648200
*            '" "PRODNAME"'!!                                           01648300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01648400
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01648500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01648600
*        ZMACRET=8;                          /* MACRO ERROR */          01648700
*      END;                                                             01648800
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 01648900
*  IF PRODNAME(1)^=''                        /* CHECK FOR NULL */       01649000
*    THEN                                                               01649100
*      DO;                                                              01649200
*        XPRODNAME=PRODNAME(1);              /* SET XVARIABLE */        01649300
*        ZXPRODNAME='INPUT';                 /* SET IN/OUTPUT */        01649400
*      END;                                                             01649500
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01649600
*  IF PRODVERS='PRODVERS'                    /* CHECK ENTRY */          01649700
*    THEN                                                               01649800
*      DO;                                                              01649900
*        ZMS=' 8, THE "PRODVERS" KEY'!!                                 01650000
*            ' MUST CONTAIN ONE'!!                                      01650100
*            ' (OR MORE) ARGUMENT(S).';                                 01650200
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01650300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01650400
*        ZMACRET=8;                          /* MACRO ERROR */          01650500
*      END;                                                             01650600
*  IF NUMBER(PRODVERS)>1                     /* CHECK POSITIONALS */    01650700
*    THEN                                                               01650800
*      DO;                                                              01650900
*        ZMS=' 8, "PRODVERS'!!               /**KPOSP* MSG*/            01651000
*            PRODVERS!!                                                 01651100
*            '" "PRODVERS"'!!                                           01651200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01651300
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01651400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01651500
*        ZMACRET=8;                          /* MACRO ERROR */          01651600
*      END;                                                             01651700
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01651800
*  IF PRODVERS(1)^=''                        /* CHECK FOR NULL */       01651900
*    THEN                                                               01652000
*      DO;                                                              01652100
*        XPRODVERS=PRODVERS(1);              /* SET XVARIABLE */        01652200
*        ZXPRODVERS='INPUT';                 /* SET IN/OUTPUT */        01652300
*      END;                                                             01652400
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01652500
*  IF PRODQUAL='PRODQUAL'                    /* CHECK ENTRY */          01652600
*    THEN                                                               01652700
*      DO;                                                              01652800
*        ZMS=' 8, THE "PRODQUAL" KEY'!!                                 01652900
*            ' MUST CONTAIN ONE'!!                                      01653000
*            ' (OR MORE) ARGUMENT(S).';                                 01653100
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01653200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01653300
*        ZMACRET=8;                          /* MACRO ERROR */          01653400
*      END;                                                             01653500
*  IF NUMBER(PRODQUAL)>1                     /* CHECK POSITIONALS */    01653600
*    THEN                                                               01653700
*      DO;                                                              01653800
*        ZMS=' 8, "PRODQUAL'!!               /**KPOSP* MSG*/            01653900
*            PRODQUAL!!                                                 01654000
*            '" "PRODQUAL"'!!                                           01654100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01654200
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01654300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01654400
*        ZMACRET=8;                          /* MACRO ERROR */          01654500
*      END;                                                             01654600
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01654700
*  IF PRODQUAL(1)^=''                        /* CHECK FOR NULL */       01654800
*    THEN                                                               01654900
*      DO;                                                              01655000
*        XPRODQUAL=PRODQUAL(1);              /* SET XVARIABLE */        01655100
*        ZXPRODQUAL='INPUT';                 /* SET IN/OUTPUT */        01655200
*      END;                                                             01655300
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 01655400
*  IF PRODID='PRODID'                        /* CHECK ENTRY */          01655500
*    THEN                                                               01655600
*      DO;                                                              01655700
*        ZMS=' 8, THE "PRODID" KEY'!!                                   01655800
*            ' MUST CONTAIN ONE'!!                                      01655900
*            ' (OR MORE) ARGUMENT(S).';                                 01656000
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01656100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01656200
*        ZMACRET=8;                          /* MACRO ERROR */          01656300
*      END;                                                             01656400
*  IF NUMBER(PRODID)>1                       /* CHECK POSITIONALS */    01656500
*    THEN                                                               01656600
*      DO;                                                              01656700
*        ZMS=' 8, "PRODID'!!                 /**KPOSP* MSG*/            01656800
*            PRODID!!                                                   01656900
*            '" "PRODID"'!!                                             01657000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01657100
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01657200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01657300
*        ZMACRET=8;                          /* MACRO ERROR */          01657400
*      END;                                                             01657500
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 01657600
*  IF PRODID(1)^=''                          /* CHECK FOR NULL */       01657700
*    THEN                                                               01657800
*      DO;                                                              01657900
*        XPRODID=PRODID(1);                  /* SET XVARIABLE */        01658000
*        ZXPRODID='INPUT';                   /* SET IN/OUTPUT */        01658100
*      END;                                                             01658200
*/*PE.KMEKY06 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 01658300
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          01658400
*/*PE.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01658500
*  XDUMMY5='';                               /* RESET XVARIABLE */      01658600
*  IF ENDTIME^=''                            /* CHECK ME KEY */         01658700
*    THEN                                                               01658800
*      DO;                                   /* VALID ME KEY */         01658900
*        IF NUMBER(ENDTIME)>1                /* CHECK SUBLISTS */       01659000
*          THEN                                                         01659100
*            DO;                                                        01659200
*              ZMS=' 8, "ENDTIME'!!          /**KPOSP* MSG*/            01659300
*                  ENDTIME!!                                            01659400
*                  '" "ENDTIME"'!!                                      01659500
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01659600
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01659700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01659800
*              ZMACRET=8;                    /* MACRO ERROR */          01659900
*            END;                                                       01660000
*        XDUMMY5='ENDTIME';                  /* SET XVARIABLE */        01660100
*        XENDTIME=ENDTIME(1);                /* SET XVARIABLE */        01660200
*        ZXDUMMY5='OUTPUT';                  /* SET IN/OUTPUT */        01660300
*        ZXENDTIME='OUTPUT';                 /* SET IN/OUTPUT */        01660400
*        IF ENDTIME(1)=''                    /* CHECK ME KEY */         01660500
*          THEN                                                         01660600
*            DO;                                                        01660700
*              ZXDUMMY5='';                  /* RESET IN/OUTPUT */      01660800
*              ZXENDTIME='';                 /* RESET IN/OUTPUT */      01660900
*            END;                                                       01661000
*      END;                                                             01661100
*/*PE.KMEKY02 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01661200
*  IF ENDTIME64^=''                          /* CHECK ME KEY */         01661300
*    THEN                                                               01661400
*      DO;                                                              01661500
*        IF NUMBER(ENDTIME64)>1              /* CHECK SUBLISTS */       01661600
*          THEN                                                         01661700
*            DO;                                                        01661800
*              ZMS=' 8, "ENDTIME64'!!        /**KPOSP* MSG*/            01661900
*                  ENDTIME64!!                                          01662000
*                  '" "ENDTIME64"'!!                                    01662100
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01662200
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01662300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01662400
*              ZMACRET=8;                    /* MACRO ERROR */          01662500
*            END;                                                       01662600
*        IF XDUMMY5=''                       /* CHECK XVARIABLE */      01662700
*          THEN                                                         01662800
*            DO;                             /* VALID ME KEY */         01662900
*              XDUMMY5='ENDTIME64';          /* SET XVAR1 */            01663000
*              XENDTIME64=ENDTIME64(1);      /* SET XVAR2 */            01663100
*              ZXDUMMY5='OUTPUT';            /* SET IN/OUTPUT */        01663200
*              ZXENDTIME64='OUTPUT';         /* SET IN/OUTPUT */        01663300
*              IF ENDTIME64(1)=''            /* CHECK ME KEY */         01663400
*                THEN                                                   01663500
*                  DO;                                                  01663600
*                    ZXDUMMY5='';            /* RESET IN/OUTPUT */      01663700
*                    ZXENDTIME64='';         /* RESET IN/OUTPUT */      01663800
*                  END;                                                 01663900
*            END;                                                       01664000
*          ELSE                                                         01664100
*            DO;                                                        01664200
*              ZMS=' 8, "ENDTIME64'!!        /**KMEKP* MSG*/            01664300
*                  ENDTIME64!!'"'!!                                     01664400
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'!!                01664500
*                  XDUMMY5!!                                            01664600
*                  '" KEY.';                                            01664700
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01664800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01664900
*              ZMACRET=8;                    /* MACRO ERROR */          01665000
*            END;                                                       01665100
*      END;                                                             01665200
*/*PE.KMEKY05 NAME, OPT OUTPUT, ME KEYS -ME KEY DEFAULT RESETS-------*/ 01665300
*  IF XDUMMY5=''                             /* CHECK XVARIABLE */      01665400
*    THEN                                                               01665500
*      DO;                                                              01665600
*        XDUMMY5='';                         /* RESET DEFAULT */        01665700
*        ZXDUMMY5='';                        /* RESET IN/OUTPUT */      01665800
*        XENDTIME='';                        /* RESET DEFAULT */        01665900
*        ZXENDTIME='';                       /* RESET IN/OUTPUT */      01666000
*      END;                                                             01666100
*/*PE.KMEKY01 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01666200
*  XDUMMY6='';                               /* RESET XVARIABLE */      01666300
*  IF ENDDATA^=''                            /* CHECK ME KEY */         01666400
*    THEN                                                               01666500
*      DO;                                   /* VALID ME KEY */         01666600
*        IF NUMBER(ENDDATA)>1                /* CHECK SUBLISTS */       01666700
*          THEN                                                         01666800
*            DO;                                                        01666900
*              ZMS=' 8, "ENDDATA'!!          /**KPOSP* MSG*/            01667000
*                  ENDDATA!!                                            01667100
*                  '" "ENDDATA"'!!                                      01667200
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01667300
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01667400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01667500
*              ZMACRET=8;                    /* MACRO ERROR */          01667600
*            END;                                                       01667700
*        XDUMMY6='ENDDATA';                  /* SET XVARIABLE */        01667800
*        XENDDATA=ENDDATA(1);                /* SET XVARIABLE */        01667900
*        ZXDUMMY6='OUTPUT';                  /* SET IN/OUTPUT */        01668000
*        ZXENDDATA='OUTPUT';                 /* SET IN/OUTPUT */        01668100
*        IF ENDDATA(1)=''                    /* CHECK ME KEY */         01668200
*          THEN                                                         01668300
*            DO;                                                        01668400
*              ZXDUMMY6='';                  /* RESET IN/OUTPUT */      01668500
*              ZXENDDATA='';                 /* RESET IN/OUTPUT */      01668600
*            END;                                                       01668700
*      END;                                                             01668800
*/*PE.KMEKY02 NAME, OPT OUTPUT, ME KEYS -XVARIABLE KEY---------------*/ 01668900
*  IF ENDDATA64^=''                          /* CHECK ME KEY */         01669000
*    THEN                                                               01669100
*      DO;                                                              01669200
*        IF NUMBER(ENDDATA64)>1              /* CHECK SUBLISTS */       01669300
*          THEN                                                         01669400
*            DO;                                                        01669500
*              ZMS=' 8, "ENDDATA64'!!        /**KPOSP* MSG*/            01669600
*                  ENDDATA64!!                                          01669700
*                  '" "ENDDATA64"'!!                                    01669800
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01669900
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01670000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01670100
*              ZMACRET=8;                    /* MACRO ERROR */          01670200
*            END;                                                       01670300
*        IF XDUMMY6=''                       /* CHECK XVARIABLE */      01670400
*          THEN                                                         01670500
*            DO;                             /* VALID ME KEY */         01670600
*              XDUMMY6='ENDDATA64';          /* SET XVAR1 */            01670700
*              XENDDATA64=ENDDATA64(1);      /* SET XVAR2 */            01670800
*              ZXDUMMY6='OUTPUT';            /* SET IN/OUTPUT */        01670900
*              ZXENDDATA64='OUTPUT';         /* SET IN/OUTPUT */        01671000
*              IF ENDDATA64(1)=''            /* CHECK ME KEY */         01671100
*                THEN                                                   01671200
*                  DO;                                                  01671300
*                    ZXDUMMY6='';            /* RESET IN/OUTPUT */      01671400
*                    ZXENDDATA64='';         /* RESET IN/OUTPUT */      01671500
*                  END;                                                 01671600
*            END;                                                       01671700
*          ELSE                                                         01671800
*            DO;                                                        01671900
*              ZMS=' 8, "ENDDATA64'!!        /**KMEKP* MSG*/            01672000
*                  ENDDATA64!!'"'!!                                     01672100
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'!!                01672200
*                  XDUMMY6!!                                            01672300
*                  '" KEY.';                                            01672400
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01672500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01672600
*              ZMACRET=8;                    /* MACRO ERROR */          01672700
*            END;                                                       01672800
*      END;                                                             01672900
*/*PE.KMEKY05 NAME, OPT OUTPUT, ME KEYS -ME KEY DEFAULT RESETS-------*/ 01673000
*  IF XDUMMY6=''                             /* CHECK XVARIABLE */      01673100
*    THEN                                                               01673200
*      DO;                                                              01673300
*        XDUMMY6='';                         /* RESET DEFAULT */        01673400
*        ZXDUMMY6='';                        /* RESET IN/OUTPUT */      01673500
*        XENDDATA='';                        /* RESET DEFAULT */        01673600
*        ZXENDDATA='';                       /* RESET IN/OUTPUT */      01673700
*      END;                                                             01673800
*/*PE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01673900
*  IF REQUEST(1)='STATUS'                    /* CHECK FOR KEYWORD */    01674000
*    THEN                                                               01674100
*      DO;                                                              01674200
*        XREQUEST='STATUS';                  /* SET XVARIABLE */        01674300
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    01674400
*          THEN                                                         01674500
*            DO;                                                        01674600
*              ZMS=' 8, "REQUEST'!!          /**KPOSP* MSG*/            01674700
*                  REQUEST!!                                            01674800
*                  '" "REQUEST"'!!                                      01674900
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01675000
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01675100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01675200
*              ZMACRET=8;                    /* MACRO ERROR */          01675300
*            END;                                                       01675400
*      END;                                                             01675500
*/*PE.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01675600
*  IF XREQUEST^=''                           /* CHECK FOR KEYWORD */    01675700
*    THEN                                                               01675800
*      ZXREQUEST='INPUT';                    /* SET IN/OUTPUT */        01675900
*    ELSE                                                               01676000
*      DO;                                   /* KEYWORD NOT ENTERED */  01676100
*        IF REQUEST(1)^=''                   /* CHECK FOR KEYWORD */    01676200
*          THEN                                                         01676300
*            DO;                                                        01676400
*              ZXREQUEST='';                 /* RESET IN/OUTPUT */      01676500
*              ZMS=' 8, "REQUEST'!!          /**KUKWP* MSG*/            01676600
*                  REQUEST!!'"'!!                                       01676700
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '!!              01676800
*                  ' VALID KEYWORD CHOICE(S) ARE:'!!                    01676900
*                  ' "REGISTER",'!!          /* VALID KEYWORD */        01677000
*                  ' "DEREGISTER",'!!        /* VALID KEYWORD */        01677100
*                  ' "FUNCTIONBEGIN",'!!     /* VALID KEYWORD */        01677200
*                  ' "FUNCTIONDATA",'!!      /* VALID KEYWORD */        01677300
*                  ' "FUNCTIONEND",'!!       /* VALID KEYWORD */        01677400
*                  ' OR "STATUS".';          /* VALID KEYWORD */        01677500
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01677600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01677700
*              ZMACRET=8;                    /* MACRO ERROR */          01677800
*            END;                                                       01677900
*      END;                                                             01678000
*/*PE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01678100
*  IF LINKAGE(1)='SVC'                       /* CHECK FOR KEYWORD */    01678200
*    THEN                                                               01678300
*      DO;                                                              01678400
*        XLINKAGE='SVC';                     /* SET XVARIABLE */        01678500
*        IF NUMBER(LINKAGE)>1                /* CHECK POSITIONALS */    01678600
*          THEN                                                         01678700
*            DO;                                                        01678800
*              ZMS=' 8, "LINKAGE'!!          /**KPOSP* MSG*/            01678900
*                  LINKAGE!!                                            01679000
*                  '" "LINKAGE"'!!                                      01679100
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01679200
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01679300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01679400
*              ZMACRET=8;                    /* MACRO ERROR */          01679500
*            END;                                                       01679600
*      END;                                                             01679700
*/*PE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01679800
*  IF LINKAGE(1)='BRANCH'                    /* CHECK FOR KEYWORD */    01679900
*    THEN                                                               01680000
*      DO;                                                              01680100
*        XLINKAGE='BRANCH';                  /* SET XVARIABLE */        01680200
*        IF NUMBER(LINKAGE)>1                /* CHECK POSITIONALS */    01680300
*          THEN                                                         01680400
*            DO;                                                        01680500
*              ZMS=' 8, "LINKAGE'!!          /**KPOSP* MSG*/            01680600
*                  LINKAGE!!                                            01680700
*                  '" "LINKAGE"'!!                                      01680800
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01680900
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01681000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01681100
*              ZMACRET=8;                    /* MACRO ERROR */          01681200
*            END;                                                       01681300
*      END;                                                             01681400
*/*PE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01681500
*  IF VALIDATE(1)='YES'                      /* CHECK FOR KEYWORD */    01681600
*    THEN                                                               01681700
*      DO;                                                              01681800
*        XVALIDATE='YES';                    /* SET XVARIABLE */        01681900
*        IF NUMBER(VALIDATE)>1               /* CHECK POSITIONALS */    01682000
*          THEN                                                         01682100
*            DO;                                                        01682200
*              ZMS=' 8, "VALIDATE'!!         /**KPOSP* MSG*/            01682300
*                  VALIDATE!!                                           01682400
*                  '" "VALIDATE"'!!                                     01682500
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01682600
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01682700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01682800
*              ZMACRET=8;                    /* MACRO ERROR */          01682900
*            END;                                                       01683000
*      END;                                                             01683100
*/*PE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01683200
*  IF VALIDATE(1)='NO'                       /* CHECK FOR KEYWORD */    01683300
*    THEN                                                               01683400
*      DO;                                                              01683500
*        XVALIDATE='NO';                     /* SET XVARIABLE */        01683600
*        IF NUMBER(VALIDATE)>1               /* CHECK POSITIONALS */    01683700
*          THEN                                                         01683800
*            DO;                                                        01683900
*              ZMS=' 8, "VALIDATE'!!         /**KPOSP* MSG*/            01684000
*                  VALIDATE!!                                           01684100
*                  '" "VALIDATE"'!!                                     01684200
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01684300
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01684400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01684500
*              ZMACRET=8;                    /* MACRO ERROR */          01684600
*            END;                                                       01684700
*      END;                                                             01684800
*/*PE.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01684900
*  IF XVALIDATE^=''                          /* CHECK FOR KEYWORD */    01685000
*    THEN                                                               01685100
*      ZXVALIDATE='INPUT';                   /* SET IN/OUTPUT */        01685200
*    ELSE                                                               01685300
*      DO;                                   /* KEYWORD NOT ENTERED */  01685400
*        IF VALIDATE(1)^=''                  /* CHECK FOR KEYWORD */    01685500
*          THEN                                                         01685600
*            DO;                                                        01685700
*              ZXVALIDATE='';                /* RESET IN/OUTPUT */      01685800
*              ZMS=' 8, "VALIDATE'!!         /**KUKWP* MSG*/            01685900
*                  VALIDATE!!'"'!!                                      01686000
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '!!              01686100
*                  ' VALID KEYWORD CHOICE(S) ARE:'!!                    01686200
*                  ' "YES"'!!                /* VALID KEYWORD */        01686300
*                  ' OR "NO".';              /* VALID KEYWORD */        01686400
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01686500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01686600
*              ZMACRET=8;                    /* MACRO ERROR */          01686700
*            END;                                                       01686800
*      END;                                                             01686900
*/*PE.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01687000
*  IF XLINKAGE^=''                           /* CHECK FOR KEYWORD */    01687100
*    THEN                                                               01687200
*      ZXLINKAGE='INPUT';                    /* SET IN/OUTPUT */        01687300
*    ELSE                                                               01687400
*      DO;                                   /* KEYWORD NOT ENTERED */  01687500
*        IF LINKAGE(1)^=''                   /* CHECK FOR KEYWORD */    01687600
*          THEN                                                         01687700
*            DO;                                                        01687800
*              ZXLINKAGE='';                 /* RESET IN/OUTPUT */      01687900
*              ZMS=' 8, "LINKAGE'!!          /**KUKWP* MSG*/            01688000
*                  LINKAGE!!'"'!!                                       01688100
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '!!              01688200
*                  ' VALID KEYWORD CHOICE(S) ARE:'!!                    01688300
*                  ' "SVC"'!!                /* VALID KEYWORD */        01688400
*                  ' OR "BRANCH".';          /* VALID KEYWORD */        01688500
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01688600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01688700
*              ZMACRET=8;                    /* MACRO ERROR */          01688800
*            END;                                                       01688900
*      END;                                                             01689000
*/*PE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01689100
*  IF FBFE(1)='NO'                           /* CHECK FOR KEYWORD */    01689200
*    THEN                                                               01689300
*      DO;                                                              01689400
*        XFBFE='NO';                         /* SET XVARIABLE */        01689500
*        IF NUMBER(FBFE)>1                   /* CHECK POSITIONALS */    01689600
*          THEN                                                         01689700
*            DO;                                                        01689800
*              ZMS=' 8, "FBFE'!!             /**KPOSP* MSG*/            01689900
*                  FBFE!!                                               01690000
*                  '" "FBFE"'!!                                         01690100
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01690200
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01690300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01690400
*              ZMACRET=8;                    /* MACRO ERROR */          01690500
*            END;                                                       01690600
*      END;                                                             01690700
*/*PE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01690800
*  IF FBFE(1)='YES'                          /* CHECK FOR KEYWORD */    01690900
*    THEN                                                               01691000
*      DO;                                                              01691100
*        XFBFE='YES';                        /* SET XVARIABLE */        01691200
*        IF NUMBER(FBFE)>1                   /* CHECK POSITIONALS */    01691300
*          THEN                                                         01691400
*            DO;                                                        01691500
*              ZMS=' 8, "FBFE'!!             /**KPOSP* MSG*/            01691600
*                  FBFE!!                                               01691700
*                  '" "FBFE"'!!                                         01691800
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        01691900
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01692000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01692100
*              ZMACRET=8;                    /* MACRO ERROR */          01692200
*            END;                                                       01692300
*      END;                                                             01692400
*/*PE.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 01692500
*  IF XFBFE^=''                              /* CHECK FOR KEYWORD */    01692600
*    THEN                                                               01692700
*      ZXFBFE='INPUT';                       /* SET IN/OUTPUT */        01692800
*    ELSE                                                               01692900
*      DO;                                   /* KEYWORD NOT ENTERED */  01693000
*        IF FBFE(1)^=''                      /* CHECK FOR KEYWORD */    01693100
*          THEN                                                         01693200
*            DO;                                                        01693300
*              ZXFBFE='';                    /* RESET IN/OUTPUT */      01693400
*              ZMS=' 8, "FBFE'!!             /**KUKWP* MSG*/            01693500
*                  FBFE!!'"'!!                                          01693600
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '!!              01693700
*                  ' VALID KEYWORD CHOICE(S) ARE:'!!                    01693800
*                  ' "NO"'!!                 /* VALID KEYWORD */        01693900
*                  ' OR "YES".';             /* VALID KEYWORD */        01694000
*              ANS MSG('?IFAUSAGE ---> '!!ZMS);                         01694100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          01694200
*              ZMACRET=8;                    /* MACRO ERROR */          01694300
*            END;                                                       01694400
*      END;                                                             01694500
*/*PE.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 01694600
*  IF RETCODE='RETCODE'                      /* CHECK ENTRY */          01694700
*    THEN                                                               01694800
*      DO;                                                              01694900
*        ZMS=' 8, THE "RETCODE" KEY'!!                                  01695000
*            ' MUST CONTAIN ONE'!!                                      01695100
*            ' (OR MORE) ARGUMENT(S).';                                 01695200
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01695300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01695400
*        ZMACRET=8;                          /* MACRO ERROR */          01695500
*      END;                                                             01695600
*  IF NUMBER(RETCODE)>1                      /* CHECK POSITIONALS */    01695700
*    THEN                                                               01695800
*      DO;                                                              01695900
*        ZMS=' 8, "RETCODE'!!                /**KPOSP* MSG*/            01696000
*            RETCODE!!                                                  01696100
*            '" "RETCODE"'!!                                            01696200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              01696300
*        ANS MSG('?IFAUSAGE ---> '!!ZMS);                               01696400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                01696500
*        ZMACRET=8;                          /* MACRO ERROR */          01696600
*      END;                                                             01696700
*/*PE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 01696800
*  IF RETCODE(1)^=''                         /* CHECK FOR NULL */       01696900
*    THEN                                                               01697000
*      DO;                                                              01697100
*        XRETCODE=RETCODE(1);                /* SET XVARIABLE */        01697200
*        ZXRETCODE='OUTPUT';                 /* SET IN/OUTPUT */        01697300
*      END;                                                             01697400
*/*PE.MF02 XMF^='L' & XMFSCK='NOCHECK' ------------------------------*/ 01697500
*      END;                                  /* END PARTIAL CHECK */    01697600
*/********************************************************************/ 01697700
*/***PE.MR01 GENERATE CODE IF ZMACRET=0                              */ 01697800
*/********************************************************************/ 01697900
*  IF ZMACRET = 0                                                       01698000
*    THEN                                                               01698100
*      DO;                                                              01698200
*/********************************************************************/ 01698300
*/***PE.PR01 PRINT CONTROLS, DEFAULT IS YES                          */ 01698400
*/********************************************************************/ 01698500
*  ANS(MACCONC!!'LIST PUSH;') NORESCAN COL(MACLMAR);                    01698600
*  IF ZPRINT='NO'                            /* PRINT IS OFF */         01698700
*    THEN                                                               01698800
*      ANS(MACCONC!!'LIST OFF;') NORESCAN COL(MACLMAR);                 01698900
*    ELSE                                                               01699000
*      ANS(MACCONC!!'LIST ON;')  NORESCAN COL(MACLMAR);                 01699100
*/********************************************************************/ 01699200
*/*PE.DO02 OUTER MACRO DO STATEMENT----------------------------------*/ 01699300
*  IF XMF^='L'                                                          01699400
*    THEN                                                               01699500
*      ANS('DO; /* IFAUSAGE-PLISTVER */')                               01699600
*          NORESCAN COL(MACLMAR);                                       01699700
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  01699800
* Dcl R15F     Char;                                                    01699900
*                                                                       01700000
* IF INDEX(EHAREGS,'15F')=0 THEN                                        01700100
*   EHAREGS = EHAREGS !! '15F';                                         01700200
* R15F = 'GPR15F';                                                      01700300
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  01700400
*/*PL.LL01 ?IFAUSAGE MF=L PARAMETER LIST-----------------------------*/ 01700500
*  IF XMF='L'                                                           01700600
*    THEN                                                               01700700
*      DO;                                                              01700800
*        ANS('DCL 1 '!!XMFCTRL!!' '!!XMFATTR!!', '!!                    01700900
*            '/* ?IFAUSAGE PARM LIST*/')                                01701000
*            NORESCAN COL(MACLMAR);                                     01701100
*/*PL.LL13  XPREFIX FIXED(31) CONSTANT-------------------------------*/ 01701200
*        ANS('2 '!!XMFCTRL                                              01701300
*         !! '_XPREFIX FIXED(31), '                                     01701400
*         !! '/* '!!ZXPREFIX                                            01701500
*         !! ' XPREFIX */'                                              01701600
*            ) NORESCAN COL(MACLMAR+2);                                 01701700
*/*PL.LL13  XID CHAR(8) CONSTANT-------------------------------------*/ 01701800
*        ANS('2 '!!XMFCTRL                                              01701900
*         !! '_XID CHAR(8), '                                           01702000
*         !! '/* '!!ZXID                                                01702100
*         !! ' XID */'                                                  01702200
*            ) NORESCAN COL(MACLMAR+2);                                 01702300
*/*PL.LL02  XPLISTLEN FIXED(16) BDY(BYTE) INPUT----------------------*/ 01702400
*        ANS('2 '!!XMFCTRL!!                                            01702500
*            '_XPLISTLEN FIXED(16) BDY(BYTE), '!!                       01702600
*            '/* INPUT XPLISTLEN*/')                                    01702700
*            NORESCAN COL(MACLMAR+2);                                   01702800
*/*PL.LL02  XVERSION FIXED(8) INPUT----------------------------------*/ 01702900
*        ANS('2 '!!XMFCTRL!!                                            01703000
*            '_XVERSION FIXED(8), '!!                                   01703100
*            '/* INPUT XVERSION*/')                                     01703200
*            NORESCAN COL(MACLMAR+2);                                   01703300
*/*PL.LL04  XREQUEST FIXED(8) INPUT----------------------------------*/ 01703400
*        ANS('2 '!!XMFCTRL!!                                            01703500
*            '_XREQUEST FIXED(8), '!!                                   01703600
*            '/* '!!ZXREQUEST!!                                         01703700
*            ' XREQUEST */')                                            01703800
*            NORESCAN COL(MACLMAR+2);                                   01703900
*/*PL.LL13  XPRODOWNER CHAR(16) INPUT--------------------------------*/ 01704000
*        ANS('2 '!!XMFCTRL                                              01704100
*         !! '_XPRODOWNER CHAR(16), '                                   01704200
*         !! '/* '!!ZXPRODOWNER                                         01704300
*         !! ' XPRODOWNER */'                                           01704400
*            ) NORESCAN COL(MACLMAR+2);                                 01704500
*/*PL.LL13  XPRODNAME CHAR(16) INPUT---------------------------------*/ 01704600
*        ANS('2 '!!XMFCTRL                                              01704700
*         !! '_XPRODNAME CHAR(16), '                                    01704800
*         !! '/* '!!ZXPRODNAME                                          01704900
*         !! ' XPRODNAME */'                                            01705000
*            ) NORESCAN COL(MACLMAR+2);                                 01705100
*/*PL.LL13  XPRODVERS CHAR(8) INPUT----------------------------------*/ 01705200
*        ANS('2 '!!XMFCTRL                                              01705300
*         !! '_XPRODVERS CHAR(8), '                                     01705400
*         !! '/* '!!ZXPRODVERS                                          01705500
*         !! ' XPRODVERS */'                                            01705600
*            ) NORESCAN COL(MACLMAR+2);                                 01705700
*/*PL.LL13  XPRODQUAL CHAR(8) INPUT----------------------------------*/ 01705800
*        ANS('2 '!!XMFCTRL                                              01705900
*         !! '_XPRODQUAL CHAR(8), '                                     01706000
*         !! '/* '!!ZXPRODQUAL                                          01706100
*         !! ' XPRODQUAL */'                                            01706200
*            ) NORESCAN COL(MACLMAR+2);                                 01706300
*/*PL.LL13  XPRODID CHAR(8) INPUT------------------------------------*/ 01706400
*        ANS('2 '!!XMFCTRL                                              01706500
*         !! '_XPRODID CHAR(8), '                                       01706600
*         !! '/* '!!ZXPRODID                                            01706700
*         !! ' XPRODID */'                                              01706800
*            ) NORESCAN COL(MACLMAR+2);                                 01706900
*/*PL.LL04  XDOMAIN FIXED(8) INPUT-----------------------------------*/ 01707000
*        ANS('2 '!!XMFCTRL!!                                            01707100
*            '_XDOMAIN FIXED(8), '!!                                    01707200
*            '/* '!!ZXDOMAIN!!                                          01707300
*            ' XDOMAIN */')                                             01707400
*            NORESCAN COL(MACLMAR+2);                                   01707500
*/*PL.LL04  XSCOPE FIXED(8) INPUT------------------------------------*/ 01707600
*        ANS('2 '!!XMFCTRL!!                                            01707700
*            '_XSCOPE FIXED(8), '!!                                     01707800
*            '/* '!!ZXSCOPE!!                                           01707900
*            ' XSCOPE */')                                              01708000
*            NORESCAN COL(MACLMAR+2);                                   01708100
*/*PL.LL13  XRSV0001 CHAR(1) RESERVED--------------------------------*/ 01708200
*        ANS('2 '!!XMFCTRL                                              01708300
*         !! '_XRSV0001 CHAR(1), '                                      01708400
*         !! '/* RESERVED */'                                           01708500
*            ) NORESCAN COL(MACLMAR+2);                                 01708600
*/*PL.LL04  XFLAGS BIT(8) FIELD_LABEL--------------------------------*/ 01708700
*        ANS('2 '!!XMFCTRL!!                                            01708800
*            '_XFLAGS BIT(8), '!!                                       01708900
*            '/* FIELD_LABEL */')                                       01709000
*            NORESCAN COL(MACLMAR+2);                                   01709100
*/*PL.LL09 BIT 1XXXXXXX----------------------------------------------*/ 01709200
*          ANS('3 '!!XMFCTRL!!                                          01709300
*              '_XVALIDATE_NO BIT(1), '!!                               01709400
*              '/* BIT */')                                             01709500
*              NORESCAN COL(MACLMAR+2);                                 01709600
*/*PL.LL09 BIT X1XXXXXX----------------------------------------------*/ 01709700
*          ANS('3 '!!XMFCTRL!!                                          01709800
*              '_XFBFE_YES BIT(1), '!!                                  01709900
*              '/* BIT */')                                             01710000
*              NORESCAN COL(MACLMAR+2);                                 01710100
*/*PL.LL10 RESERVED BIT----------------------------------------------*/ 01710200
*          ANS('3 '!!XMFCTRL!!                                          01710300
*              '_XFLAGS_RSVD1 BIT(6), '!!                               01710400
*              '/* BIT */')                                             01710500
*              NORESCAN COL(MACLMAR+2);                                 01710600
*/*PL.LL13 ADDR XPRTOKEN PTR(31) OUTPUT ADDR-------------------------*/ 01710700
*        ANS('2 '!!XMFCTRL                                              01710800
*         !! '_XPRTOKEN_ADDR PTR(31), '                                 01710900
*         !! '/* '!!ZXPRTOKEN_ADDR                                      01711000
*         !! ' XPRTOKEN_ADDR */'                                        01711100
*            ) NORESCAN COL(MACLMAR+2);                                 01711200
*/*PL.LL13 ADDR XBEGTIME PTR(31) OUTPUT ADDR-------------------------*/ 01711300
*        ANS('2 '!!XMFCTRL                                              01711400
*         !! '_XBEGTIME_ADDR PTR(31), '                                 01711500
*         !! '/* '!!ZXBEGTIME_ADDR                                      01711600
*         !! ' XBEGTIME_ADDR */'                                        01711700
*            ) NORESCAN COL(MACLMAR+2);                                 01711800
*/*PL.LL13 ADDR XDATA PTR(31) INPUT ADDR-----------------------------*/ 01711900
*        ANS('2 '!!XMFCTRL                                              01712000
*         !! '_XDATA_ADDR PTR(31), '                                    01712100
*         !! '/* '!!ZXDATA_ADDR                                         01712200
*         !! ' XDATA_ADDR */'                                           01712300
*            ) NORESCAN COL(MACLMAR+2);                                 01712400
*/*PL.LL04  XFORMAT FIXED(8) INPUT-----------------------------------*/ 01712500
*        ANS('2 '!!XMFCTRL!!                                            01712600
*            '_XFORMAT FIXED(8), '!!                                    01712700
*            '/* '!!ZXFORMAT!!                                          01712800
*            ' XFORMAT */')                                             01712900
*            NORESCAN COL(MACLMAR+2);                                   01713000
*/*PL.LL04  XUNAUTHSERV FIXED(8) INPUT-------------------------------*/ 01713100
*        ANS('2 '!!XMFCTRL!!                                            01713200
*            '_XUNAUTHSERV FIXED(8), '!!                                01713300
*            '/* '!!ZXUNAUTHSERV!!                                      01713400
*            ' XUNAUTHSERV */')                                         01713500
*            NORESCAN COL(MACLMAR+2);                                   01713600
*/*PL.LL13  XRSV0002 CHAR(02) RESERVED-------------------------------*/ 01713700
*        ANS('2 '!!XMFCTRL                                              01713800
*         !! '_XRSV0002 CHAR(02), '                                     01713900
*         !! '/* RESERVED */'                                           01714000
*            ) NORESCAN COL(MACLMAR+2);                                 01714100
*/*PL.LL13 ADDR XCURRENTDATA PTR(31) OUTPUT ADDR---------------------*/ 01714200
*        ANS('2 '!!XMFCTRL                                              01714300
*         !! '_XCURRENTDATA_ADDR PTR(31), '                             01714400
*         !! '/* '!!ZXCURRENTDATA_ADDR                                  01714500
*         !! ' XCURRENTDATA_ADDR */'                                    01714600
*            ) NORESCAN COL(MACLMAR+2);                                 01714700
*/*PL.LL13 ADDR XENDDATA PTR(31) OUTPUT ADDR-------------------------*/ 01714800
*        ANS('2 '!!XMFCTRL                                              01714900
*         !! '_XENDDATA_ADDR PTR(31), '                                 01715000
*         !! '/* '!!ZXENDDATA_ADDR                                      01715100
*         !! ' XENDDATA_ADDR */'                                        01715200
*            ) NORESCAN COL(MACLMAR+2);                                 01715300
*/*PL.LL13 ADDR XENDTIME PTR(31) OUTPUT ADDR-------------------------*/ 01715400
*        ANS('2 '!!XMFCTRL                                              01715500
*         !! '_XENDTIME_ADDR PTR(31), '                                 01715600
*         !! '/* '!!ZXENDTIME_ADDR                                      01715700
*         !! ' XENDTIME_ADDR */'                                        01715800
*            ) NORESCAN COL(MACLMAR+2);                                 01715900
*/*PL.LPVER01 -------------------------------------------------------*/ 01716000
*  IF XPLISTVER>=2                                                      01716100
*    THEN                                                               01716200
*      DO;                                                              01716300
*/*PL.LL13 ADDR64 XPRTOKEN64 PTR(64) OUTPUT ADDR64-------------------*/ 01716400
*        ANS('2 '!!XMFCTRL                                              01716500
*         !! '_XPRTOKEN64_ADDR64 PTR(64), '                             01716600
*         !! '/* '!!ZXPRTOKEN64_ADDR64                                  01716700
*         !! ' XPRTOKEN64_ADDR64 */'                                    01716800
*            ) NORESCAN COL(MACLMAR+2);                                 01716900
*/*PL.LPVER02 -------------------------------------------------------*/ 01717000
*      END;                                                             01717100
*/*PL.LPVER01 -------------------------------------------------------*/ 01717200
*  IF XPLISTVER>=2                                                      01717300
*    THEN                                                               01717400
*      DO;                                                              01717500
*/*PL.LL13 ADDR64 XBEGTIME64 PTR(64) OUTPUT ADDR64-------------------*/ 01717600
*        ANS('2 '!!XMFCTRL                                              01717700
*         !! '_XBEGTIME64_ADDR64 PTR(64), '                             01717800
*         !! '/* '!!ZXBEGTIME64_ADDR64                                  01717900
*         !! ' XBEGTIME64_ADDR64 */'                                    01718000
*            ) NORESCAN COL(MACLMAR+2);                                 01718100
*/*PL.LPVER02 -------------------------------------------------------*/ 01718200
*      END;                                                             01718300
*/*PL.LPVER01 -------------------------------------------------------*/ 01718400
*  IF XPLISTVER>=2                                                      01718500
*    THEN                                                               01718600
*      DO;                                                              01718700
*/*PL.LL13 ADDR64 XDATA64 PTR(64) INPUT ADDR64-----------------------*/ 01718800
*        ANS('2 '!!XMFCTRL                                              01718900
*         !! '_XDATA64_ADDR64 PTR(64), '                                01719000
*         !! '/* '!!ZXDATA64_ADDR64                                     01719100
*         !! ' XDATA64_ADDR64 */'                                       01719200
*            ) NORESCAN COL(MACLMAR+2);                                 01719300
*/*PL.LPVER02 -------------------------------------------------------*/ 01719400
*      END;                                                             01719500
*/*PL.LPVER01 -------------------------------------------------------*/ 01719600
*  IF XPLISTVER>=2                                                      01719700
*    THEN                                                               01719800
*      DO;                                                              01719900
*/*PL.LL13 ADDR64 XCURRENTDATA64 PTR(64) OUTPUT ADDR64---------------*/ 01720000
*        ANS('2 '!!XMFCTRL                                              01720100
*         !! '_XCURRENTDATA64_ADDR64 PTR(64), '                         01720200
*         !! '/* '!!ZXCURRENTDATA64_ADDR64                              01720300
*         !! ' XCURRENTDATA64_ADDR64 */'                                01720400
*            ) NORESCAN COL(MACLMAR+2);                                 01720500
*/*PL.LPVER02 -------------------------------------------------------*/ 01720600
*      END;                                                             01720700
*/*PL.LPVER01 -------------------------------------------------------*/ 01720800
*  IF XPLISTVER>=2                                                      01720900
*    THEN                                                               01721000
*      DO;                                                              01721100
*/*PL.LL13 ADDR64 XENDDATA64 PTR(64) OUTPUT ADDR64-------------------*/ 01721200
*        ANS('2 '!!XMFCTRL                                              01721300
*         !! '_XENDDATA64_ADDR64 PTR(64), '                             01721400
*         !! '/* '!!ZXENDDATA64_ADDR64                                  01721500
*         !! ' XENDDATA64_ADDR64 */'                                    01721600
*            ) NORESCAN COL(MACLMAR+2);                                 01721700
*/*PL.LPVER02 -------------------------------------------------------*/ 01721800
*      END;                                                             01721900
*/*PL.LPVER01 -------------------------------------------------------*/ 01722000
*  IF XPLISTVER>=2                                                      01722100
*    THEN                                                               01722200
*      DO;                                                              01722300
*/*PL.LL13 ADDR64 XENDTIME64 PTR(64) OUTPUT ADDR64-------------------*/ 01722400
*        ANS('2 '!!XMFCTRL                                              01722500
*         !! '_XENDTIME64_ADDR64 PTR(64), '                             01722600
*         !! '/* '!!ZXENDTIME64_ADDR64                                  01722700
*         !! ' XENDTIME64_ADDR64 */'                                    01722800
*            ) NORESCAN COL(MACLMAR+2);                                 01722900
*/*PL.LPVER02 -------------------------------------------------------*/ 01723000
*      END;                                                             01723100
*/*PL.LL18 ----------------------------------------------------------*/ 01723200
*        ANS('2 * CHAR(0);')                                            01723300
*            NORESCAN COL(MACLMAR+2);                                   01723400
*/*PL.LL15 XREQUEST.REGISTER-----------------------------------------*/ 01723500
*        ANS('DCL '!!XMFCTRL!!                                          01723600
*            '_XREQUEST_REGISTER FIXED(8) '!!                           01723700
*            'CONSTANT(1); '!!                                          01723800
*            '/* XREQUEST */')                                          01723900
*            NORESCAN COL(MACLMAR+2);                                   01724000
*/*PL.LL15 XREQUEST.DEREGISTER---------------------------------------*/ 01724100
*        ANS('DCL '!!XMFCTRL!!                                          01724200
*            '_XREQUEST_DEREGISTER FIXED(8) '!!                         01724300
*            'CONSTANT(2); '!!                                          01724400
*            '/* XREQUEST */')                                          01724500
*            NORESCAN COL(MACLMAR+2);                                   01724600
*/*PL.LL15 XREQUEST.FUNCTIONBEGIN------------------------------------*/ 01724700
*        ANS('DCL '!!XMFCTRL!!                                          01724800
*            '_XREQUEST_FUNCTIONBEGIN FIXED(8) '!!                      01724900
*            'CONSTANT(3); '!!                                          01725000
*            '/* XREQUEST */')                                          01725100
*            NORESCAN COL(MACLMAR+2);                                   01725200
*/*PL.LL15 XREQUEST.FUNCTIONDATA-------------------------------------*/ 01725300
*        ANS('DCL '!!XMFCTRL!!                                          01725400
*            '_XREQUEST_FUNCTIONDATA FIXED(8) '!!                       01725500
*            'CONSTANT(4); '!!                                          01725600
*            '/* XREQUEST */')                                          01725700
*            NORESCAN COL(MACLMAR+2);                                   01725800
*/*PL.LL15 XREQUEST.FUNCTIONEND--------------------------------------*/ 01725900
*        ANS('DCL '!!XMFCTRL!!                                          01726000
*            '_XREQUEST_FUNCTIONEND FIXED(8) '!!                        01726100
*            'CONSTANT(5); '!!                                          01726200
*            '/* XREQUEST */')                                          01726300
*            NORESCAN COL(MACLMAR+2);                                   01726400
*/*PL.LL15 XREQUEST.STATUS-------------------------------------------*/ 01726500
*        ANS('DCL '!!XMFCTRL!!                                          01726600
*            '_XREQUEST_STATUS FIXED(8) '!!                             01726700
*            'CONSTANT(6); '!!                                          01726800
*            '/* XREQUEST */')                                          01726900
*            NORESCAN COL(MACLMAR+2);                                   01727000
*/*PL.LL15 XDOMAIN.ADDRSP--------------------------------------------*/ 01727100
*        ANS('DCL '!!XMFCTRL!!                                          01727200
*            '_XDOMAIN_ADDRSP FIXED(8) '!!                              01727300
*            'CONSTANT(1); '!!                                          01727400
*            '/* XDOMAIN */')                                           01727500
*            NORESCAN COL(MACLMAR+2);                                   01727600
*/*PL.LL15 XDOMAIN.TASK----------------------------------------------*/ 01727700
*        ANS('DCL '!!XMFCTRL!!                                          01727800
*            '_XDOMAIN_TASK FIXED(8) '!!                                01727900
*            'CONSTANT(2); '!!                                          01728000
*            '/* XDOMAIN */')                                           01728100
*            NORESCAN COL(MACLMAR+2);                                   01728200
*/*PL.LL15 XSCOPE.ALL------------------------------------------------*/ 01728300
*        ANS('DCL '!!XMFCTRL!!                                          01728400
*            '_XSCOPE_ALL FIXED(8) '!!                                  01728500
*            'CONSTANT(1); '!!                                          01728600
*            '/* XSCOPE */')                                            01728700
*            NORESCAN COL(MACLMAR+2);                                   01728800
*/*PL.LL15 XSCOPE.FUNCTION-------------------------------------------*/ 01728900
*        ANS('DCL '!!XMFCTRL!!                                          01729000
*            '_XSCOPE_FUNCTION FIXED(8) '!!                             01729100
*            'CONSTANT(2); '!!                                          01729200
*            '/* XSCOPE */')                                            01729300
*            NORESCAN COL(MACLMAR+2);                                   01729400
*/*PL.LL15 XFORMAT.CPUTIME-------------------------------------------*/ 01729500
*        ANS('DCL '!!XMFCTRL!!                                          01729600
*            '_XFORMAT_CPUTIME FIXED(8) '!!                             01729700
*            'CONSTANT(1); '!!                                          01729800
*            '/* XFORMAT */')                                           01729900
*            NORESCAN COL(MACLMAR+2);                                   01730000
*/*PL.LL15 XFORMAT.BINARY--------------------------------------------*/ 01730100
*        ANS('DCL '!!XMFCTRL!!                                          01730200
*            '_XFORMAT_BINARY FIXED(8) '!!                              01730300
*            'CONSTANT(2); '!!                                          01730400
*            '/* XFORMAT */')                                           01730500
*            NORESCAN COL(MACLMAR+2);                                   01730600
*/*PL.LL15 XFORMAT.FLOAT---------------------------------------------*/ 01730700
*        ANS('DCL '!!XMFCTRL!!                                          01730800
*            '_XFORMAT_FLOAT FIXED(8) '!!                               01730900
*            'CONSTANT(3); '!!                                          01731000
*            '/* XFORMAT */')                                           01731100
*            NORESCAN COL(MACLMAR+2);                                   01731200
*/*PL.LL15 XUNAUTHSERV.BASE------------------------------------------*/ 01731300
*        ANS('DCL '!!XMFCTRL!!                                          01731400
*            '_XUNAUTHSERV_BASE FIXED(8) '!!                            01731500
*            'CONSTANT(1); '!!                                          01731600
*            '/* XUNAUTHSERV */')                                       01731700
*            NORESCAN COL(MACLMAR+2);                                   01731800
*/*PL.LL15 XUNAUTHSERV.LEVEL1----------------------------------------*/ 01731900
*        ANS('DCL '!!XMFCTRL!!                                          01732000
*            '_XUNAUTHSERV_LEVEL1 FIXED(8) '!!                          01732100
*            'CONSTANT(2); '!!                                          01732200
*            '/* XUNAUTHSERV */')                                       01732300
*            NORESCAN COL(MACLMAR+2);                                   01732400
*/*PL.LL17 END OF MF=L PARAMETER LIST--------------------------------*/ 01732500
*      END;                                                             01732600
*/*PL.L01 MACRO WORK VARIABLES---------------------------------------*/ 01732700
*  DCL ZPRMLINE CHAR;          /* ZPRM ARRAY ENTRY ACCUMULATOR      */  01732800
*  DEACT ZPRMLINE;                                                      01732900
*  DCL ZNDX CHAR;              /* UNIQUE LIST STRUCTURE NAME        */  01733000
*  DEACT ZNDX;                                                          01733100
*  ZNDX=MACINDEX;              /* MACINDEX                          */  01733200
*  DCL XVERSION CHAR;                                                   01733300
*  DEACT XVERSION;                                                      01733400
*/*PL.L02 ?IFAUSAGE PARAMETER LIST-----------------------------------*/ 01733500
*  IF XMF^='L'                                                          01733600
*    THEN                                                               01733700
*      DO;                                                              01733800
*/*PL.L03 ?IFAUSAGE PARAMETER LIST-----------------------------------*/ 01733900
*        IF XMF='S'                                                     01734000
*          THEN                                                         01734100
*            XMFCTRL='#ZPLIST';                                         01734200
*/*PL.L04 ?IFAUSAGE PARAMETER LIST-----------------------------------*/ 01734300
*        ZPRMLINE='DCL 1 #Z'!!ZNDX!!' DEF('!!                           01734400
*                 XMFCTRL!!'),'!!                                       01734500
*                 ' /* ?IFAUSAGE PARM LIST*/';                          01734600
*/*PL.L08  XPREFIX FIXED(31) CONSTANT--------------------------------*/ 01734700
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             01734800
*                 '_XPREFIX FIXED(31), '!!                              01734900
*                 '/* '!!ZXPREFIX!!                                     01735000
*                 ' XPREFIX */';                                        01735100
*/*PL.L08  XID CHAR(8) CONSTANT--------------------------------------*/ 01735200
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             01735300
*                 '_XID CHAR(8), '!!                                    01735400
*                 '/* '!!ZXID!!                                         01735500
*                 ' XID */';                                            01735600
*/*PL.L05  XPLISTLEN FIXED(16) BDY(BYTE) INPUT-----------------------*/ 01735700
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             01735800
*                 '_XPLISTLEN FIXED(16) BDY(BYTE), '!!                  01735900
*                 '/* INPUT XPLISTLEN*/';                               01736000
*/*PL.L05  XVERSION FIXED(8) INPUT-----------------------------------*/ 01736100
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             01736200
*                 '_XVERSION FIXED(8), '!!                              01736300
*                 '/* INPUT XVERSION*/';                                01736400
*/*PL.L08  XREQUEST FIXED(8) INPUT-----------------------------------*/ 01736500
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             01736600
*                 '_XREQUEST FIXED(8), '!!                              01736700
*                 '/* '!!ZXREQUEST!!                                    01736800
*                 ' XREQUEST */';                                       01736900
*/*PL.L08  XPRODOWNER CHAR(16) INPUT---------------------------------*/ 01737000
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             01737100
*                 '_XPRODOWNER CHAR(16), '!!                            01737200
*                 '/* '!!ZXPRODOWNER!!                                  01737300
*                 ' XPRODOWNER */';                                     01737400
*/*PL.L08  XPRODNAME CHAR(16) INPUT----------------------------------*/ 01737500
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             01737600
*                 '_XPRODNAME CHAR(16), '!!                             01737700
*                 '/* '!!ZXPRODNAME!!                                   01737800
*                 ' XPRODNAME */';                                      01737900
*/*PL.L08  XPRODVERS CHAR(8) INPUT-----------------------------------*/ 01738000
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             01738100
*                 '_XPRODVERS CHAR(8), '!!                              01738200
*                 '/* '!!ZXPRODVERS!!                                   01738300
*                 ' XPRODVERS */';                                      01738400
*/*PL.L08  XPRODQUAL CHAR(8) INPUT-----------------------------------*/ 01738500
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             01738600
*                 '_XPRODQUAL CHAR(8), '!!                              01738700
*                 '/* '!!ZXPRODQUAL!!                                   01738800
*                 ' XPRODQUAL */';                                      01738900
*/*PL.L08  XPRODID CHAR(8) INPUT-------------------------------------*/ 01739000
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             01739100
*                 '_XPRODID CHAR(8), '!!                                01739200
*                 '/* '!!ZXPRODID!!                                     01739300
*                 ' XPRODID */';                                        01739400
*/*PL.L08  XDOMAIN FIXED(8) INPUT------------------------------------*/ 01739500
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             01739600
*                 '_XDOMAIN FIXED(8), '!!                               01739700
*                 '/* '!!ZXDOMAIN!!                                     01739800
*                 ' XDOMAIN */';                                        01739900
*/*PL.L08  XSCOPE FIXED(8) INPUT-------------------------------------*/ 01740000
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             01740100
*                 '_XSCOPE FIXED(8), '!!                                01740200
*                 '/* '!!ZXSCOPE!!                                      01740300
*                 ' XSCOPE */';                                         01740400
*/*PL.L08  XRSV0001 CHAR(1) RESERVED---------------------------------*/ 01740500
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             01740600
*                 '_XRSV0001 CHAR(1), '!!                               01740700
*                 '/* RESERVED */';                                     01740800
*/*PL.L08  XFLAGS BIT(8) FIELD_LABEL---------------------------------*/ 01740900
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             01741000
*                 '_XFLAGS BIT(8), '!!                                  01741100
*                 '/* FIELD_LABEL */';                                  01741200
*/*PL.L08 ADDR XPRTOKEN PTR(31) OUTPUT ADDR--------------------------*/ 01741300
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             01741400
*                 '_XPRTOKEN_ADDR PTR(31), '!!                          01741500
*                 '/* '!!ZXPRTOKEN_ADDR!!                               01741600
*                 ' XPRTOKEN_ADDR */';                                  01741700
*/*PL.L08 ADDR XBEGTIME PTR(31) OUTPUT ADDR--------------------------*/ 01741800
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             01741900
*                 '_XBEGTIME_ADDR PTR(31), '!!                          01742000
*                 '/* '!!ZXBEGTIME_ADDR!!                               01742100
*                 ' XBEGTIME_ADDR */';                                  01742200
*/*PL.L08 ADDR XDATA PTR(31) INPUT ADDR------------------------------*/ 01742300
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             01742400
*                 '_XDATA_ADDR PTR(31), '!!                             01742500
*                 '/* '!!ZXDATA_ADDR!!                                  01742600
*                 ' XDATA_ADDR */';                                     01742700
*/*PL.L08  XFORMAT FIXED(8) INPUT------------------------------------*/ 01742800
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             01742900
*                 '_XFORMAT FIXED(8), '!!                               01743000
*                 '/* '!!ZXFORMAT!!                                     01743100
*                 ' XFORMAT */';                                        01743200
*/*PL.L08  XUNAUTHSERV FIXED(8) INPUT--------------------------------*/ 01743300
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             01743400
*                 '_XUNAUTHSERV FIXED(8), '!!                           01743500
*                 '/* '!!ZXUNAUTHSERV!!                                 01743600
*                 ' XUNAUTHSERV */';                                    01743700
*/*PL.L08  XRSV0002 CHAR(02) RESERVED--------------------------------*/ 01743800
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             01743900
*                 '_XRSV0002 CHAR(02), '!!                              01744000
*                 '/* RESERVED */';                                     01744100
*/*PL.L09 ADDR XCURRENTDATA PTR(31) OUTPUT ADDR----------------------*/ 01744200
*        ZPRMNUM=ZPRMNUM+1;                                             01744300
*        ZPRM(ZPRMNUM)=ZPRMLINE!!' 2 #Z'!!ZNDX!!                        01744400
*            '_XCURRENTDATA_ADDR PTR(31), '!!                           01744500
*            '/* '!!ZXCURRENTDATA_ADDR!!                                01744600
*            ' XCURRENTDATA_ADDR */';                                   01744700
*        ZPRMLINE='';                                                   01744800
*/*PL.L08 ADDR XENDDATA PTR(31) OUTPUT ADDR--------------------------*/ 01744900
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             01745000
*                 '_XENDDATA_ADDR PTR(31), '!!                          01745100
*                 '/* '!!ZXENDDATA_ADDR!!                               01745200
*                 ' XENDDATA_ADDR */';                                  01745300
*/*PL.L08 ADDR XENDTIME PTR(31) OUTPUT ADDR--------------------------*/ 01745400
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             01745500
*                 '_XENDTIME_ADDR PTR(31), '!!                          01745600
*                 '/* '!!ZXENDTIME_ADDR!!                               01745700
*                 ' XENDTIME_ADDR */';                                  01745800
*/*PL.LPVER03 -------------------------------------------------------*/ 01745900
*  IF XPLISTVER>=2                                                      01746000
*    THEN                                                               01746100
*      DO;                                                              01746200
*/*PL.L08 ADDR64 XPRTOKEN64 PTR(64) OUTPUT ADDR64--------------------*/ 01746300
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             01746400
*                 '_XPRTOKEN64_ADDR64 PTR(64), '!!                      01746500
*                 '/* '!!ZXPRTOKEN64_ADDR64!!                           01746600
*                 ' XPRTOKEN64_ADDR64 */';                              01746700
*/*PL.LPVER04 -------------------------------------------------------*/ 01746800
*      END;                                                             01746900
*/*PL.LPVER03 -------------------------------------------------------*/ 01747000
*  IF XPLISTVER>=2                                                      01747100
*    THEN                                                               01747200
*      DO;                                                              01747300
*/*PL.L08 ADDR64 XBEGTIME64 PTR(64) OUTPUT ADDR64--------------------*/ 01747400
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             01747500
*                 '_XBEGTIME64_ADDR64 PTR(64), '!!                      01747600
*                 '/* '!!ZXBEGTIME64_ADDR64!!                           01747700
*                 ' XBEGTIME64_ADDR64 */';                              01747800
*/*PL.LPVER04 -------------------------------------------------------*/ 01747900
*      END;                                                             01748000
*/*PL.LPVER03 -------------------------------------------------------*/ 01748100
*  IF XPLISTVER>=2                                                      01748200
*    THEN                                                               01748300
*      DO;                                                              01748400
*/*PL.L08 ADDR64 XDATA64 PTR(64) INPUT ADDR64------------------------*/ 01748500
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             01748600
*                 '_XDATA64_ADDR64 PTR(64), '!!                         01748700
*                 '/* '!!ZXDATA64_ADDR64!!                              01748800
*                 ' XDATA64_ADDR64 */';                                 01748900
*/*PL.LPVER04 -------------------------------------------------------*/ 01749000
*      END;                                                             01749100
*/*PL.LPVER03 -------------------------------------------------------*/ 01749200
*  IF XPLISTVER>=2                                                      01749300
*    THEN                                                               01749400
*      DO;                                                              01749500
*/*PL.L08 ADDR64 XCURRENTDATA64 PTR(64) OUTPUT ADDR64----------------*/ 01749600
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             01749700
*                 '_XCURRENTDATA64_ADDR64 PTR(64), '!!                  01749800
*                 '/* '!!ZXCURRENTDATA64_ADDR64!!                       01749900
*                 ' XCURRENTDATA64_ADDR64 */';                          01750000
*/*PL.LPVER04 -------------------------------------------------------*/ 01750100
*      END;                                                             01750200
*/*PL.LPVER03 -------------------------------------------------------*/ 01750300
*  IF XPLISTVER>=2                                                      01750400
*    THEN                                                               01750500
*      DO;                                                              01750600
*/*PL.L08 ADDR64 XENDDATA64 PTR(64) OUTPUT ADDR64--------------------*/ 01750700
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             01750800
*                 '_XENDDATA64_ADDR64 PTR(64), '!!                      01750900
*                 '/* '!!ZXENDDATA64_ADDR64!!                           01751000
*                 ' XENDDATA64_ADDR64 */';                              01751100
*/*PL.LPVER04 -------------------------------------------------------*/ 01751200
*      END;                                                             01751300
*/*PL.LPVER03 -------------------------------------------------------*/ 01751400
*  IF XPLISTVER>=2                                                      01751500
*    THEN                                                               01751600
*      DO;                                                              01751700
*/*PL.L08 ADDR64 XENDTIME64 PTR(64) OUTPUT ADDR64--------------------*/ 01751800
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             01751900
*                 '_XENDTIME64_ADDR64 PTR(64), '!!                      01752000
*                 '/* '!!ZXENDTIME64_ADDR64!!                           01752100
*                 ' XENDTIME64_ADDR64 */';                              01752200
*/*PL.LPVER04 -------------------------------------------------------*/ 01752300
*      END;                                                             01752400
*/*PL.L11 CONSTANT TO ENSURE THAT LIST FORM IS LONG ENOUGH ----------*/ 01752500
*        ZPRMNUM=ZPRMNUM+1;                                             01752600
*        ZPRM(ZPRMNUM)=ZPRMLINE!!' 2 * CHAR(0);';                       01752700
*        IF XPLISTVER^=1                                                01752800
*           & XMF^='S'                                                  01752900
*          THEN                                                         01753000
*            DO;                                                        01753100
*              ZPRMNUM=ZPRMNUM+1;                                       01753200
*              ZPRM(ZPRMNUM)=                                           01753300
*               'DCL #Z'!!ZNDX!!'_LENCHECK FIXED(32) CONSTANT('!!       01753400
*               'LENGTH('!!XMFCTRL!!')-LENGTH(#Z'!!ZNDX!!'));'!!        01753500
*               '/* CONSTANT TO ENSURE THAT THE LIST FORM'!!            01753600
*               ' IS LONG ENOUGH */';                                   01753700
*            END;                                                       01753800
*/*PL.L12 PARAMETER LIST SIZE----------------------------------------*/ 01753900
*        ZPLLEN=104;                                                    01754000
*        IF XPLISTVER>=2                                                01754100
*          THEN                                                         01754200
*            ZPLLEN=152;                                                01754300
*        IF ZPRMMAX<ZPLLEN                                              01754400
*           & XMF^='E'                                                  01754500
*           & XMF^='M'                                                  01754600
*          THEN                                                         01754700
*            ZPRMMAX=ZPLLEN;                                            01754800
*/*PL.L13 -----------------------------------------------------------*/ 01754900
*      END;                                                             01755000
*/*PI.L01 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 01755100
*  IF XMF^='L'                                                          01755200
*    THEN                                                               01755300
*      DO;                                                              01755400
*/*PI.L03 CLEAR PARAMETER LIST --------------------------------------*/ 01755500
*  IF XMFSCK='COMPLETE'                                                 01755600
*    THEN                                                               01755700
*            ANS('#Z'!!ZNDX!!'=''''B;'!!                                01755800
*                '/* CLEAR PARAMETER AREA */')                          01755900
*                NORESCAN COL(MACLMAR);                                 01756000
*/*PI.L25 XPREFIX FIXED(31)------------------------------------------*/ 01756100
*        ANS('#Z'!!ZNDX!!'_XPREFIX=0;'!!                                01756200
*            '/* XPREFIX FIXED(31) CONSTANT */')                        01756300
*            NORESCAN COL(MACLMAR);                                     01756400
*/*PI.L28 XID  CHAR(8)-----------------------------------------------*/ 01756500
*        ANS('#Z'!!ZNDX!!'_XID=''IFAUSAGE'';'!!                         01756600
*            '/* XID CHAR(8) CONSTANT */')                              01756700
*            NORESCAN COL(MACLMAR);                                     01756800
*/*PI.L05C XPLISTLEN FIXED(16)---------------------------------------*/ 01756900
*        ANS('#Z'!!ZNDX!!'_XPLISTLEN=LENGTH(#Z'!!ZNDX!!');'!!           01757000
*            '/* XPLISTLEN FIXED(16) */')                               01757100
*            NORESCAN COL(MACLMAR);                                     01757200
*/*PI.L05B XVERSION FIXED(8)-----------------------------------------*/ 01757300
*        IF (XPLISTVER^=0 &                                             01757400
*            XMFSCK='COMPLETE')!                                        01757500
*           (PLISTVER^='' &                                             01757600
*            XMFSCK^='COMPLETE')                                        01757700
*          THEN                                                         01757800
*            ANS('#Z'!!ZNDX!!'_XVERSION='!!CHAR(XPLISTVER)!!'; '!!      01757900
*                '/* XVERSION FIXED(8) */')                             01758000
*                NORESCAN COL(MACLMAR);                                 01758100
*/*PI.L06 XREQUEST FIXED(8)------------------------------------------*/ 01758200
*        ZW='';                                                         01758300
*        ZMS='';                                                        01758400
*/*PI.L12 XREQUEST FIXED(8)------------------------------------------*/ 01758500
*        IF XREQUEST='REGISTER'                                         01758600
*          THEN                                                         01758700
*            ZW='1';                                                    01758800
*/*PI.L12 XREQUEST FIXED(8)------------------------------------------*/ 01758900
*        IF XREQUEST='DEREGISTER'                                       01759000
*          THEN                                                         01759100
*            ZW='2';                                                    01759200
*/*PI.L12 XREQUEST FIXED(8)------------------------------------------*/ 01759300
*        IF XREQUEST='FUNCTIONBEGIN'                                    01759400
*          THEN                                                         01759500
*            ZW='3';                                                    01759600
*/*PI.L12 XREQUEST FIXED(8)------------------------------------------*/ 01759700
*        IF XREQUEST='FUNCTIONDATA'                                     01759800
*          THEN                                                         01759900
*            ZW='4';                                                    01760000
*/*PI.L12 XREQUEST FIXED(8)------------------------------------------*/ 01760100
*        IF XREQUEST='FUNCTIONEND'                                      01760200
*          THEN                                                         01760300
*            ZW='5';                                                    01760400
*/*PI.L12 XREQUEST FIXED(8)------------------------------------------*/ 01760500
*        IF XREQUEST='STATUS'                                           01760600
*          THEN                                                         01760700
*            ZW='6';                                                    01760800
*/*PI.L13 XREQUEST FIXED(8)------------------------------------------*/ 01760900
*        IF ZW^=''                                                      01761000
*          & (ZW^='0' ! XMFSCK^='COMPLETE')                             01761100
*          THEN                                                         01761200
*            ANS('#Z'!!ZNDX!!'_XREQUEST='!!                             01761300
*                ZW!!'; '!!                                             01761400
*                '/* XREQUEST FIXED(8) */')                             01761500
*                NORESCAN COL(MACLMAR);                                 01761600
*/*PI.L21 XPRODOWNER NAME CHAR(16)-----------------------------------*/ 01761700
*        IF ZXPRODOWNER='INPUT' !                                       01761800
*           ZXPRODOWNER='INOUT'                                         01761900
*          THEN                                                         01762000
*            ANS('#Z'!!ZNDX!!'_XPRODOWNER='!!                           01762100
*                XPRODOWNER!!';'!!                                      01762200
*                '/* XPRODOWNER CHAR(16) */')                           01762300
*                NORESCAN COL(MACLMAR);                                 01762400
*/*PI.L21 XPRODNAME NAME CHAR(16)------------------------------------*/ 01762500
*        IF ZXPRODNAME='INPUT' !                                        01762600
*           ZXPRODNAME='INOUT'                                          01762700
*          THEN                                                         01762800
*            ANS('#Z'!!ZNDX!!'_XPRODNAME='!!                            01762900
*                XPRODNAME!!';'!!                                       01763000
*                '/* XPRODNAME CHAR(16) */')                            01763100
*                NORESCAN COL(MACLMAR);                                 01763200
*/*PI.L21 XPRODVERS NAME CHAR(8)-------------------------------------*/ 01763300
*        IF ZXPRODVERS='INPUT' !                                        01763400
*           ZXPRODVERS='INOUT'                                          01763500
*          THEN                                                         01763600
*            IF PRODVERS(1)=''                                          01763700
*             ! PRODVERS(1)='NONE'                                      01763800
*              THEN                                                     01763900
*                ANS('#Z'!!ZNDX!!'_XPRODVERS='!!                        01764000
*                    ''''!!XPRODVERS!!''';'!!                           01764100
*                    '/* XPRODVERS CHAR(8) */')                         01764200
*                    NORESCAN COL(MACLMAR);                             01764300
*              ELSE                                                     01764400
*                ANS('#Z'!!ZNDX!!'_XPRODVERS='!!                        01764500
*                    XPRODVERS!!';'!!                                   01764600
*                    '/* XPRODVERS CHAR(8) */')                         01764700
*                    NORESCAN COL(MACLMAR);                             01764800
*/*PI.L21 XPRODQUAL NAME CHAR(8)-------------------------------------*/ 01764900
*        IF ZXPRODQUAL='INPUT' !                                        01765000
*           ZXPRODQUAL='INOUT'                                          01765100
*          THEN                                                         01765200
*            IF PRODQUAL(1)=''                                          01765300
*             ! PRODQUAL(1)='NONE'                                      01765400
*              THEN                                                     01765500
*                ANS('#Z'!!ZNDX!!'_XPRODQUAL='!!                        01765600
*                    ''''!!XPRODQUAL!!''';'!!                           01765700
*                    '/* XPRODQUAL CHAR(8) */')                         01765800
*                    NORESCAN COL(MACLMAR);                             01765900
*              ELSE                                                     01766000
*                ANS('#Z'!!ZNDX!!'_XPRODQUAL='!!                        01766100
*                    XPRODQUAL!!';'!!                                   01766200
*                    '/* XPRODQUAL CHAR(8) */')                         01766300
*                    NORESCAN COL(MACLMAR);                             01766400
*/*PI.L21 XPRODID NAME CHAR(8)---------------------------------------*/ 01766500
*        IF ZXPRODID='INPUT' !                                          01766600
*           ZXPRODID='INOUT'                                            01766700
*          THEN                                                         01766800
*            IF PRODID(1)=''                                            01766900
*             ! PRODID(1)='NONE'                                        01767000
*              THEN                                                     01767100
*                ANS('#Z'!!ZNDX!!'_XPRODID='!!                          01767200
*                    ''''!!XPRODID!!''';'!!                             01767300
*                    '/* XPRODID CHAR(8) */')                           01767400
*                    NORESCAN COL(MACLMAR);                             01767500
*              ELSE                                                     01767600
*                ANS('#Z'!!ZNDX!!'_XPRODID='!!                          01767700
*                    XPRODID!!';'!!                                     01767800
*                    '/* XPRODID CHAR(8) */')                           01767900
*                    NORESCAN COL(MACLMAR);                             01768000
*/*PI.L06 XDOMAIN FIXED(8)-------------------------------------------*/ 01768100
*        ZW='';                                                         01768200
*        ZMS='';                                                        01768300
*/*PI.L12 XDOMAIN FIXED(8)-------------------------------------------*/ 01768400
*        IF XDOMAIN='ADDRSP'                                            01768500
*          THEN                                                         01768600
*            ZW='1';                                                    01768700
*/*PI.L12 XDOMAIN FIXED(8)-------------------------------------------*/ 01768800
*        IF XDOMAIN='TASK'                                              01768900
*          THEN                                                         01769000
*            ZW='2';                                                    01769100
*/*PI.L13 XDOMAIN FIXED(8)-------------------------------------------*/ 01769200
*        IF ZW^=''                                                      01769300
*          & (ZW^='0' ! XMFSCK^='COMPLETE')                             01769400
*          THEN                                                         01769500
*            ANS('#Z'!!ZNDX!!'_XDOMAIN='!!                              01769600
*                ZW!!'; '!!                                             01769700
*                '/* XDOMAIN FIXED(8) */')                              01769800
*                NORESCAN COL(MACLMAR);                                 01769900
*/*PI.L06 XSCOPE FIXED(8)--------------------------------------------*/ 01770000
*        ZW='';                                                         01770100
*        ZMS='';                                                        01770200
*/*PI.L12 XSCOPE FIXED(8)--------------------------------------------*/ 01770300
*        IF XSCOPE='ALL'                                                01770400
*          THEN                                                         01770500
*            ZW='1';                                                    01770600
*/*PI.L12 XSCOPE FIXED(8)--------------------------------------------*/ 01770700
*        IF XSCOPE='FUNCTION'                                           01770800
*          THEN                                                         01770900
*            ZW='2';                                                    01771000
*/*PI.L13 XSCOPE FIXED(8)--------------------------------------------*/ 01771100
*        IF ZW^=''                                                      01771200
*          & (ZW^='0' ! XMFSCK^='COMPLETE')                             01771300
*          THEN                                                         01771400
*            ANS('#Z'!!ZNDX!!'_XSCOPE='!!                               01771500
*                ZW!!'; '!!                                             01771600
*                '/* XSCOPE FIXED(8) */')                               01771700
*                NORESCAN COL(MACLMAR);                                 01771800
*/*PI.L06 XFLAGS BIT(8)----------------------------------------------*/ 01771900
*        ZW='';                                                         01772000
*        ZMS='';                                                        01772100
*/*PI.L07 XFLAGS BIT(8) 1XXXXXXX-------------------------------------*/ 01772200
*        IF XVALIDATE='NO'                                              01772300
*          THEN                                                         01772400
*            DO;                                                        01772500
*              ZW=ZW!!'1';                                              01772600
*              ZMS=ZMS!!'1';                                            01772700
*            END;                                                       01772800
*          ELSE                                                         01772900
*            DO;                                                        01773000
*              ZW=ZW!!'0';                                              01773100
*              IF ZXVALIDATE^=''                                        01773200
*                THEN                                                   01773300
*                  ZMS=ZMS!!'0';                                        01773400
*                ELSE                                                   01773500
*                  ZMS=ZMS!!'1';                                        01773600
*            END;                                                       01773700
*/*PI.L07 XFLAGS BIT(8) X1XXXXXX-------------------------------------*/ 01773800
*        IF XFBFE='YES'                                                 01773900
*          THEN                                                         01774000
*            DO;                                                        01774100
*              ZW=ZW!!'1000000';                                        01774200
*              ZMS=ZMS!!'1111111';                                      01774300
*            END;                                                       01774400
*          ELSE                                                         01774500
*            DO;                                                        01774600
*              ZW=ZW!!'0000000';                                        01774700
*              IF ZXFBFE^=''                                            01774800
*                THEN                                                   01774900
*                  ZMS=ZMS!!'0111111';                                  01775000
*                ELSE                                                   01775100
*                  ZMS=ZMS!!'1111111';                                  01775200
*            END;                                                       01775300
*/*PI.L09 XFLAGS BIT(8)----------------------------------------------*/ 01775400
*        IF XMFSCK='NOCHECK'                                            01775500
*          THEN                                                         01775600
*            IF INDEX(ZMS,'0')^=0                                       01775700
*              THEN                                                     01775800
*                ANS('#Z'!!ZNDX!!'_XFLAGS='!!                           01775900
*                    '#Z'!!ZNDX!!'_XFLAGS & '!!                         01776000
*                    ''''!!ZMS!!'''B; '!!                               01776100
*                    '/* BIT(8) */')                                    01776200
*                    NORESCAN COL(MACLMAR);                             01776300
*        IF INDEX(ZW,'1')^=0                                            01776400
*          THEN                                                         01776500
*            ANS('#Z'!!ZNDX!!'_XFLAGS='!!                               01776600
*                '#Z'!!ZNDX!!'_XFLAGS ! '!!                             01776700
*                ''''!!ZW!!'''B; '!!                                    01776800
*                '/* BIT(8) */')                                        01776900
*                NORESCAN COL(MACLMAR);                                 01777000
*/*PI.L15 ADDR(XPRTOKEN) CHAR(8)-------------------------------------*/ 01777100
*        IF ZXPRTOKEN^=''                                               01777200
*          THEN                                                         01777300
*            ANS('#Z'!!ZNDX!!'_XPRTOKEN_ADDR='!!                        01777400
*                'ADDR('!!XPRTOKEN!!');'!!                              01777500
*                '/* ADDR XPRTOKEN CHAR(8) */')                         01777600
*                NORESCAN COL(MACLMAR);                                 01777700
*/*PI.L15 ADDR(XBEGTIME) CHAR(8)-------------------------------------*/ 01777800
*        IF ZXBEGTIME^=''                                               01777900
*          THEN                                                         01778000
*            ANS('#Z'!!ZNDX!!'_XBEGTIME_ADDR='!!                        01778100
*                'ADDR('!!XBEGTIME!!');'!!                              01778200
*                '/* ADDR XBEGTIME CHAR(8) */')                         01778300
*                NORESCAN COL(MACLMAR);                                 01778400
*/*PI.L15 ADDR(XDATA) CHAR(8)----------------------------------------*/ 01778500
*        IF ZXDATA^=''                                                  01778600
*          THEN                                                         01778700
*            ANS('#Z'!!ZNDX!!'_XDATA_ADDR='!!                           01778800
*                'ADDR('!!XDATA!!');'!!                                 01778900
*                '/* ADDR XDATA CHAR(8) */')                            01779000
*                NORESCAN COL(MACLMAR);                                 01779100
*/*PI.L06 XFORMAT FIXED(8)-------------------------------------------*/ 01779200
*        ZW='';                                                         01779300
*        ZMS='';                                                        01779400
*/*PI.L12 XFORMAT FIXED(8)-------------------------------------------*/ 01779500
*        IF XFORMAT='CPUTIME'                                           01779600
*          THEN                                                         01779700
*            ZW='1';                                                    01779800
*/*PI.L12 XFORMAT FIXED(8)-------------------------------------------*/ 01779900
*        IF XFORMAT='BINARY'                                            01780000
*          THEN                                                         01780100
*            ZW='2';                                                    01780200
*/*PI.L12 XFORMAT FIXED(8)-------------------------------------------*/ 01780300
*        IF XFORMAT='FLOAT'                                             01780400
*          THEN                                                         01780500
*            ZW='3';                                                    01780600
*/*PI.L13 XFORMAT FIXED(8)-------------------------------------------*/ 01780700
*        IF ZW^=''                                                      01780800
*          & (ZW^='0' ! XMFSCK^='COMPLETE')                             01780900
*          THEN                                                         01781000
*            ANS('#Z'!!ZNDX!!'_XFORMAT='!!                              01781100
*                ZW!!'; '!!                                             01781200
*                '/* XFORMAT FIXED(8) */')                              01781300
*                NORESCAN COL(MACLMAR);                                 01781400
*/*PI.L06 XUNAUTHSERV FIXED(8)---------------------------------------*/ 01781500
*        ZW='';                                                         01781600
*        ZMS='';                                                        01781700
*/*PI.L12 XUNAUTHSERV FIXED(8)---------------------------------------*/ 01781800
*        IF XUNAUTHSERV='BASE'                                          01781900
*          THEN                                                         01782000
*            ZW='1';                                                    01782100
*/*PI.L12 XUNAUTHSERV FIXED(8)---------------------------------------*/ 01782200
*        IF XUNAUTHSERV='LEVEL1'                                        01782300
*          THEN                                                         01782400
*            ZW='2';                                                    01782500
*/*PI.L13 XUNAUTHSERV FIXED(8)---------------------------------------*/ 01782600
*        IF ZW^=''                                                      01782700
*          & (ZW^='0' ! XMFSCK^='COMPLETE')                             01782800
*          THEN                                                         01782900
*            ANS('#Z'!!ZNDX!!'_XUNAUTHSERV='!!                          01783000
*                ZW!!'; '!!                                             01783100
*                '/* XUNAUTHSERV FIXED(8) */')                          01783200
*                NORESCAN COL(MACLMAR);                                 01783300
*/*PI.L15 ADDR(XCURRENTDATA) CHAR(8)---------------------------------*/ 01783400
*        IF ZXCURRENTDATA^=''                                           01783500
*          THEN                                                         01783600
*            ANS('#Z'!!ZNDX!!'_XCURRENTDATA_ADDR='!!                    01783700
*                'ADDR('!!XCURRENTDATA!!');'!!                          01783800
*                '/* ADDR XCURRENTDATA CHAR(8) */')                     01783900
*                NORESCAN COL(MACLMAR);                                 01784000
*/*PI.L15 ADDR(XENDDATA) CHAR(8)-------------------------------------*/ 01784100
*        IF ZXENDDATA^=''                                               01784200
*          THEN                                                         01784300
*            ANS('#Z'!!ZNDX!!'_XENDDATA_ADDR='!!                        01784400
*                'ADDR('!!XENDDATA!!');'!!                              01784500
*                '/* ADDR XENDDATA CHAR(8) */')                         01784600
*                NORESCAN COL(MACLMAR);                                 01784700
*/*PI.L15 ADDR(XENDTIME) CHAR(8)-------------------------------------*/ 01784800
*        IF ZXENDTIME^=''                                               01784900
*          THEN                                                         01785000
*            ANS('#Z'!!ZNDX!!'_XENDTIME_ADDR='!!                        01785100
*                'ADDR('!!XENDTIME!!');'!!                              01785200
*                '/* ADDR XENDTIME CHAR(8) */')                         01785300
*                NORESCAN COL(MACLMAR);                                 01785400
*/*PI.LPVER01 -------------------------------------------------------*/ 01785500
*  IF XPLISTVER>=2                                                      01785600
*    THEN                                                               01785700
*      DO;                                                              01785800
*/*PI.L15 ADDR64(XPRTOKEN64) CHAR(8)---------------------------------*/ 01785900
*        IF ZXPRTOKEN64^=''                                             01786000
*          THEN                                                         01786100
*            ANS('#Z'!!ZNDX!!'_XPRTOKEN64_ADDR64='!!                    01786200
*                'ADDR('!!XPRTOKEN64!!');'!!                            01786300
*                '/* ADDR64 XPRTOKEN64 CHAR(8) */')                     01786400
*                NORESCAN COL(MACLMAR);                                 01786500
*/*PI.LPVER02 -------------------------------------------------------*/ 01786600
*      END;                                                             01786700
*/*PI.LPVER01 -------------------------------------------------------*/ 01786800
*  IF XPLISTVER>=2                                                      01786900
*    THEN                                                               01787000
*      DO;                                                              01787100
*/*PI.L15 ADDR64(XBEGTIME64) CHAR(8)---------------------------------*/ 01787200
*        IF ZXBEGTIME64^=''                                             01787300
*          THEN                                                         01787400
*            ANS('#Z'!!ZNDX!!'_XBEGTIME64_ADDR64='!!                    01787500
*                'ADDR('!!XBEGTIME64!!');'!!                            01787600
*                '/* ADDR64 XBEGTIME64 CHAR(8) */')                     01787700
*                NORESCAN COL(MACLMAR);                                 01787800
*/*PI.LPVER02 -------------------------------------------------------*/ 01787900
*      END;                                                             01788000
*/*PI.LPVER01 -------------------------------------------------------*/ 01788100
*  IF XPLISTVER>=2                                                      01788200
*    THEN                                                               01788300
*      DO;                                                              01788400
*/*PI.L15 ADDR64(XDATA64) CHAR(8)------------------------------------*/ 01788500
*        IF ZXDATA64^=''                                                01788600
*          THEN                                                         01788700
*            ANS('#Z'!!ZNDX!!'_XDATA64_ADDR64='!!                       01788800
*                'ADDR('!!XDATA64!!');'!!                               01788900
*                '/* ADDR64 XDATA64 CHAR(8) */')                        01789000
*                NORESCAN COL(MACLMAR);                                 01789100
*/*PI.LPVER02 -------------------------------------------------------*/ 01789200
*      END;                                                             01789300
*/*PI.LPVER01 -------------------------------------------------------*/ 01789400
*  IF XPLISTVER>=2                                                      01789500
*    THEN                                                               01789600
*      DO;                                                              01789700
*/*PI.L15 ADDR64(XCURRENTDATA64) CHAR(8)-----------------------------*/ 01789800
*        IF ZXCURRENTDATA64^=''                                         01789900
*          THEN                                                         01790000
*            ANS('#Z'!!ZNDX!!'_XCURRENTDATA64_ADDR64='!!                01790100
*                'ADDR('!!XCURRENTDATA64!!');'!!                        01790200
*                '/* ADDR64 XCURRENTDATA64 CHAR(8) */')                 01790300
*                NORESCAN COL(MACLMAR);                                 01790400
*/*PI.LPVER02 -------------------------------------------------------*/ 01790500
*      END;                                                             01790600
*/*PI.LPVER01 -------------------------------------------------------*/ 01790700
*  IF XPLISTVER>=2                                                      01790800
*    THEN                                                               01790900
*      DO;                                                              01791000
*/*PI.L15 ADDR64(XENDDATA64) CHAR(8)---------------------------------*/ 01791100
*        IF ZXENDDATA64^=''                                             01791200
*          THEN                                                         01791300
*            ANS('#Z'!!ZNDX!!'_XENDDATA64_ADDR64='!!                    01791400
*                'ADDR('!!XENDDATA64!!');'!!                            01791500
*                '/* ADDR64 XENDDATA64 CHAR(8) */')                     01791600
*                NORESCAN COL(MACLMAR);                                 01791700
*/*PI.LPVER02 -------------------------------------------------------*/ 01791800
*      END;                                                             01791900
*/*PI.LPVER01 -------------------------------------------------------*/ 01792000
*  IF XPLISTVER>=2                                                      01792100
*    THEN                                                               01792200
*      DO;                                                              01792300
*/*PI.L15 ADDR64(XENDTIME64) CHAR(8)---------------------------------*/ 01792400
*        IF ZXENDTIME64^=''                                             01792500
*          THEN                                                         01792600
*            ANS('#Z'!!ZNDX!!'_XENDTIME64_ADDR64='!!                    01792700
*                'ADDR('!!XENDTIME64!!');'!!                            01792800
*                '/* ADDR64 XENDTIME64 CHAR(8) */')                     01792900
*                NORESCAN COL(MACLMAR);                                 01793000
*/*PI.LPVER02 -------------------------------------------------------*/ 01793100
*      END;                                                             01793200
*/*PI.L29 NOT MF=M MACRO FORM----------------------------------------*/ 01793300
*        IF XMF^='M'                                                    01793400
*          THEN                                                         01793500
*            DO;                                                        01793600
*/*PI.L31 INVOKE FUNCTION--------------------------------------------*/ 01793700
*              ANS('RFY GPR01P RSTD;') NORESCAN COL(MACLMAR);           01793800
*                    IF SYSAM64 = 'YES' THEN                            01793900
*              ANS('G64R01P=ADDR(#Z'!!ZNDX!!');'!!                      01794000
*                  '/* PARAMETER LIST */')                              01794100
*                  NORESCAN COL(MACLMAR);                               01794200
*                    ELSE                                               01794300
*              ANS('GPR01P=ADDR(#Z'!!ZNDX!!');'!!                       01794400
*                  '/* PARAMETER LIST */')                              01794500
*                  NORESCAN COL(MACLMAR);                               01794600
*              IF SYSASCE^='P'                                          01794700
*                THEN                                                   01794800
*                  ANS('SAR(GPR01P,ALET(#Z'!!ZNDX!!'));'!!              01794900
*                      '/* PARAMETER LIST AR */')                       01795000
*                      NORESCAN COL(MACLMAR);                           01795100
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  01795200
*/* Insert PL/AS Linkage Code Here........                           */ 01795300
*ANS ('IF CVTSMCA ^= 0'                                                 01795400
*     !! COMMENT('SMCA Available ??')                                   01795500
*     )                                                                 01795600
*    NORESCAN COL(MACLMAR+2);                                 /* @01A*/ 01795700
*ANS ('& SMCAUDCS = ''1''B'                                             01795800
*     !! COMMENT('Services Available ??')                               01795900
*     )                                                                 01796000
*    NORESCAN COL(MACLMAR+2);                                 /* @01A*/ 01796100
*ANS ('THEN'                                                            01796200
*     !! COMMENT('Yes - Invoke Service')                                01796300
*     )                                                                 01796400
*    NORESCAN COL(MACLMAR+2);                                 /* @01A*/ 01796500
*IF (XLINKAGE = 'BRANCH')           /* "BRANCH" Specified ??     @01A*/ 01796600
*THEN                               /* Yes - Generate CALL       @01A*/ 01796700
* IF (SYSAM64 = 'YES')              /* AMODE 64 Caller           @03A*/ 01796800
* THEN                               /* Yes - Generate CALL       @01A*/01796900
*  ANS ('CALL SMCAUD64->I64ANY;'                                        01797000
*       !! COMMENT('Call Requested Function')                           01797100
*       )                                                               01797200
*      NORESCAN COL(MACLMAR+4);                               /* @01A*/ 01797300
* Else                               /* Yes - Generate CALL       @01A*/01797400
*  ANS ('CALL SMCAUDCA->IANY;'                                          01797500
*       !! COMMENT('Call Requested Function')                           01797600
*       )                                                               01797700
*      NORESCAN COL(MACLMAR+4);                               /* @01A*/ 01797800
*ELSE                               /* No - Generate SVC         @01A*/ 01797900
*  DO;                              /*                           @01A*/ 01798000
*    ANS ('DO;'                                                         01798100
*         )                                                             01798200
*        NORESCAN COL(MACLMAR+4);                             /* @01A*/ 01798300
*    ANS ('Rfy ('!!R15F!!') Rstd;'                                      01798400
*         !! COMMENT('Rfy Reg for SVC')                                 01798500
*         )                                                             01798600
*        NORESCAN COL(MACLMAR+6);                             /* @01A*/ 01798700
* IF (SYSAM64 = 'YES')            /*  AMODE 64 CALLER            @03A*/ 01798800
* THEN                               /* Yes - Generate CALL       @01A*/01798900
*    ANS (''!!R15F!!' = 55;'                                            01799000
*         !! COMMENT('Set Extended SVC Entry Value')                    01799100
*         )                                                             01799200
*        NORESCAN COL(MACLMAR+6);                             /* @01A*/ 01799300
* Else                                                                  01799400
*    ANS (''!!R15F!!' = 25;'                                            01799500
*         !! COMMENT('Set Extended SVC Entry Value')                    01799600
*         )                                                             01799700
*        NORESCAN COL(MACLMAR+6);                             /* @01A*/ 01799800
*    ANS ('SVC (109); '                                                 01799900
*         !! COMMENT('Issue SMF Accounting SVC')                        01800000
*         )                                                             01800100
*        NORESCAN COL(MACLMAR+6);                             /* @01A*/ 01800200
*    ANS ('Rfy ('!!R15F!!') UNRstd;'                                    01800300
*         !! COMMENT('Rfy Reg for SVC')                                 01800400
*         )                                                             01800500
*        NORESCAN COL(MACLMAR+6);                             /* @01A*/ 01800600
*    ANS ('END;'                                                        01800700
*         )                                                             01800800
*        NORESCAN COL(MACLMAR+4);                             /* @01A*/ 01800900
*  END;                             /*                           @01A*/ 01801000
*ANS ('ELSE'                                                            01801100
*     !! COMMENT('No - Signal Error')                                   01801200
*     )                                                                 01801300
*    NORESCAN COL(MACLMAR+2);                                 /* @01A*/ 01801400
*ANS ('DO;'                                                             01801500
*     )                                                                 01801600
*    NORESCAN COL(MACLMAR+4);                                 /* @01A*/ 01801700
*ANS ('Rfy ('!!R15F!!') Rstd;'                                          01801800
*     !! COMMENT('Rfy Reg for Return Code')                             01801900
*     )                                                                 01802000
*    NORESCAN COL(MACLMAR+6);                                 /* @01A*/ 01802100
*ANS (''!!R15F!!' = 16;'                                                01802200
*     !! COMMENT('Set Service Not Available')                           01802300
*     )                                                                 01802400
*    NORESCAN COL(MACLMAR+6);                                 /* @01A*/ 01802500
*ANS ('Rfy ('!!R15F!!') UNRstd;'                                        01802600
*     !! COMMENT('Rfy Reg for Return Code')                             01802700
*     )                                                                 01802800
*    NORESCAN COL(MACLMAR+6);                                 /* @01A*/ 01802900
*ANS ('END;'                                                            01803000
*     )                                                                 01803100
*    NORESCAN COL(MACLMAR+4);                                 /* @01A*/ 01803200
*IF INDEX(EHAREGS,'15F')=0          /* 15F included in EPILOG??  @01A*/ 01803300
*THEN EHAREGS=EHAREGS!!'15F';       /* No - Request it           @01A*/ 01803400
*                                                                       01803500
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  01803600
*              ANS('RFY GPR01P UNRSTD;') NORESCAN COL(MACLMAR);         01803700
*              IF NUMBER(RETCODE)>0                                     01803800
*                THEN                                                   01803900
*                  ANS('RFY GPR15F RSTD;') NORESCAN COL(MACLMAR);       01804000
*/*PO.L08 XRETCODE RETURN CODE---------------------------------------*/ 01804100
*              IF NUMBER(RETCODE)>0                                     01804200
*                THEN                                                   01804300
*                    ANS(XRETCODE!!                                     01804400
*                     '=GPR15F; /* SET RETURN CODE */')                 01804500
*                      NORESCAN COL(MACLMAR);                           01804600
*/*PO.L10 REMOVE REGISTER RESTRICTIONS-------------------------------*/ 01804700
*              IF NUMBER(RETCODE)>0                                     01804800
*                THEN                                                   01804900
*              ANS('RFY GPR15F UNRSTD;') NORESCAN COL(MACLMAR);         01805000
*/*PO.L11 END OF FUNCTION INVOCATION---------------------------------*/ 01805100
*            END;                                                       01805200
*/*PO.L12 END OF PARAMETER LIST PROCESSING---------------------------*/ 01805300
*      END;                                                             01805400
*/*PO.L13 IFAUSAGE USAGE INDICATOR-----------------------------------*/ 01805500
*  ZIFAUSAGE='YES';                          /* SET IFAUSAGE USED */    01805600
*/*PO.L15 END OF EXECUTABLE IFAUSAGE-PLISTVER MACRO------------------*/ 01805700
*  IF XMF^='L'                                                          01805800
*    THEN                                                               01805900
*      ANS('END; /* IFAUSAGE-PLISTVER */')                              01806000
*          NORESCAN COL(MACLMAR);                                       01806100
*/*PO.L16 RESTORE PRINT CONTROLS-------------------------------------*/ 01806200
*  ANS(MACCONC!!'LIST POP;') NORESCAN COL(MACLMAR);                     01806300
*/*PO.L17 END OF IFAUSAGE MACRO--------------------------------------*/ 01806400
*  ANS(MACCONC!!'SPACE;') NORESCAN COL(MACLMAR);                        01806500
*  ANS(' ') NORESCAN COL(MACLMAR);                                      01806600
*/*******************************************************************/  01806700
*/*  PO.L18 END OF CODE TO BE BYPASSED WHEN ZMACRET ^= 0            */  01806800
*/*******************************************************************/  01806900
*      END;                                                             01807000
*/*******************************************************************/  01807100
*/*  MVS ONLY     -CHECK IF AMG PARM LISTS ARE PRESENT              */  01807200
*/*               -ROUND MAX AMG PARM LIST TO DOUBLEWORD MULTIPLES  */  01807300
*/*******************************************************************/  01807400
*  IF ZPRMNUM>0                   /* NUMBER OF AMG PARM LIST ENTRIES*/  01807500
*    THEN                                                               01807600
*      DO;                                                              01807700
*        ZPRMMAX=((ZPRMMAX+7)/8)*8; /* ROUND PARM LIST SIZE UP TO       01807800
*                                      DOUBLEWORD MULTIPLES        */   01807900
*/*******************************************************************/  01808000
*/*  MVS -GENERATE PARM LIST DCL TO OVERLAY ?EPILOG'S ILIST AREA    */  01808100
*/*******************************************************************/  01808200
*        IF XMF ^= 'M' & XMF ^= 'E'                                     01808300
*          THEN                                                         01808400
*            DO;                                                        01808500
*              IF INDEX(EHALIST,',AMG,')=0 /* HAS DECLARE BEEN DONE?*/  01808600
*                THEN                                                   01808700
*                  DO;                                                  01808800
*                    ANS('?EPILOG                                       01808900
*                        STRING(''DCL #ZPLIST DEF(ILIST);'');');        01809000
*                    EHALIST=EHALIST!!',AMG,';                          01809100
*                  END;                                                 01809200
*            END;                                                       01809300
*/*******************************************************************/  01809400
*/*  MVS  -EXTRACT PARM LISTS FROM AMG GLOBAL MACRO ARRAYS          */  01809500
*/*******************************************************************/  01809600
*        IF XMF ^= 'M' & XMF ^= 'E'                                     01809700
*          THEN                                                         01809800
*            DO;                                                        01809900
*              IF ZPRMMAX>EHAMAXLEN                                     01810000
*                THEN                                                   01810100
*                  EHAMAXLEN=ZPRMMAX; /* SET MAX PARM LIST SIZE     */  01810200
*            END;                                                       01810300
*        DO ZI=1 TO ZPRMNUM; /* EXTRACT AMG PARM LISTS               */ 01810400
*          ANS('?EPILOG STRING('''!!ZPRM(ZI)!!''');')                   01810500
*              COL(MACLMAR);                                            01810600
*        END;                                                           01810700
*      END;                                                             01810800
*/*-----------------------------------------------------------------*/  01810900
*/*  MVS  -ENSURE THAT GPRS NEEDED BY AMG MACROS WILL BE PROVIDED   */  01811000
*/*        BY ?EPILOG                                               */  01811100
*/*-----------------------------------------------------------------*/  01811200
*        IF INDEX(EHAREGS,'01P')=0                                      01811300
*          THEN                                                         01811400
*            EHAREGS=EHAREGS!!'01P'; /* GPR01P                      */  01811500
*        IF INDEX(EHAREGS,'15F')=0                                      01811600
*          & NUMBER(RETCODE)>0                                          01811700
*          THEN                                                         01811800
*            EHAREGS=EHAREGS!!'15F'; /* GPR15F                      */  01811900
*          IF INDEX(EHAREGS64,'00F')=0 THEN                             01812000
*            EHAREGS64 = EHAREGS64 !! '00F';                            01812100
*          IF INDEX(EHAREGS64,'01P')=0 THEN                             01812200
*            EHAREGS64 = EHAREGS64 !! '01P';                            01812300
*          IF INDEX(EHAREGS64,'15F')=0 THEN                             01812400
*            EHAREGS64 = EHAREGS64 !! '15F';                            01812500
*  RETURN CODE(ZMACRET);                                                01812600
*%END IFAUSAGE;                                                         01812700
