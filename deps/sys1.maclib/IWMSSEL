*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWMSSEL                               -11/09/04-<2> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  WLM Server Select Service                     * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5694-A01 (C) COPYRIGHT IBM CORP. 2001                           * 00001200
*                                                                     * 00001300
* STATUS= HBB7705                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The IWMSSEL service selects the next work request from the     * 00002100
*      queue associated with the caller's application environment.    * 00002200
*      The caller must have previously connected to WLM using the     * 00002300
*      IWMCONN service specifying SERVER_MANAGER=YES.                 * 00002400
*                                                                     * 00002500
*      If there are no queued work requests waiting for selection the * 00002600
*      calling task will be suspended, pending arrival of work to do. * 00002700
*      The caller cannot rely upon asynchronous exits receiving       * 00002800
*      control while the task is suspended.                           * 00002900
*                                                                     * 00003000
*      After a work request is selected, the caller uses the IWMSTBGN * 00003100
*      and IWMSTEND services to indicate the start and end of         * 00003200
*      processing of the request.                                     * 00003300
*                                                                     * 00003400
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00003500
*                                                                     * 00003600
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00003700
*                                                                     * 00003800
*01* ENVIRONMENT:                                                     * 00003900
*                                                                     * 00004000
*                                                                     * 00004100
*      Minimum authorization: Problem or Supervisor state.  Any PSW   * 00004200
*                        key.                                         * 00004300
*                                                                     * 00004400
*      Dispatchable unit mode: Task mode.                             * 00004500
*                                                                     * 00004600
*      Cross Memory Mode: PASN=HASN=SASN.                             * 00004700
*                                                                     * 00004800
*      AMODE:            31-bit.                                      * 00004900
*                                                                     * 00005000
*      ASC mode:         Primary.                                     * 00005100
*                                                                     * 00005200
*      Interrupt status: Enabled for I/O and external interrupts.     * 00005300
*                                                                     * 00005400
*      Locks:            No locks held.                               * 00005500
*                                                                     * 00005600
*      Control parameters: Control parameters must be in the primary  * 00005700
*                        address space.                               * 00005800
*                                                                     * 00005900
*                                                                     * 00006000
*                                                                     * 00006100
*01* PROGRAMMING REQUIREMENTS:                                        * 00006200
*                                                                     * 00006300
*                                                                     * 00006400
*    1.  The macro CVT must be included to use this macro.            * 00006500
*                                                                     * 00006600
*    2.  The macro IWMYCON must be included to use this macro.        * 00006700
*                                                                     * 00006800
*    3.  The macro IWMPB must be in the library concatenation, since  * 00006900
*        it is included by IWMYCON.                                   * 00007000
*                                                                     * 00007100
*    4.  Note that the high order halfword of register 0, and the     * 00007200
*        reason code variable when specified, may be non-zero and     * 00007300
*        represents diagnostic data which is NOT part of the external * 00007400
*        interface.  The high order halfword should thus be excluded  * 00007500
*        from comparison with the reason code values described above. * 00007600
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00007700
*        be used for this purpose.                                    * 00007800
*                                                                     * 00007900
*                                                                     * 00008000
*                                                                     * 00008100
*01* RESTRICTIONS:                                                    * 00008200
*                                                                     * 00008300
*                                                                     * 00008400
*    1.  This macro may not be used prior to the completion of WLM    * 00008500
*        address space initialization.                                * 00008600
*                                                                     * 00008700
*    2.  This macro may only be used on MVS/ESA HBB6603 or higher.    * 00008800
*                                                                     * 00008900
*                                                                     * 00009000
*                                                                     * 00009100
*01* INPUT REGISTER INFORMATION:                                      * 00009200
*                                                                     * 00009300
*    Before issuing the IWMSSEL macro, the caller does not have to    * 00009400
*    place any information into any register unless using it in       * 00009500
*    register notation for a particular parameter, or using it as a   * 00009600
*    base register.                                                   * 00009700
*                                                                     * 00009800
*01* OUTPUT REGISTER INFORMATION:                                     * 00009900
*                                                                     * 00010000
*    When control returns to the caller, the GPRs contain:            * 00010100
*                                                                     * 00010200
*                                                                     * 00010300
*    REGISTER  CONTENTS                                               * 00010400
*                                                                     * 00010500
*    0         Reason code if GR15 return code is non-zero            * 00010600
*                                                                     * 00010700
*    1         Used as work registers by the system                   * 00010800
*                                                                     * 00010900
*    2-13      Unchanged                                              * 00011000
*                                                                     * 00011100
*    14        Used as work registers by the system                   * 00011200
*                                                                     * 00011300
*    15        Return code                                            * 00011400
*                                                                     * 00011500
*                                                                     * 00011600
*                                                                     * 00011700
*    When control returns to the caller, the ARs contain:             * 00011800
*                                                                     * 00011900
*                                                                     * 00012000
*    REGISTER  CONTENTS                                               * 00012100
*                                                                     * 00012200
*    0-1       Used as work registers by the system                   * 00012300
*                                                                     * 00012400
*    2-13      Unchanged                                              * 00012500
*                                                                     * 00012600
*    14-15     Used as work registers by the system                   * 00012700
*                                                                     * 00012800
*                                                                     * 00012900
*                                                                     * 00013000
*    Some callers depend on register contents remaining the same      * 00013100
*    before and after issuing a service.  If the system changes the   * 00013200
*    contents of registers on which the caller depends, the caller    * 00013300
*    must save them before issuing the service, and restore them      * 00013400
*    after the system returns control.                                * 00013500
*                                                                     * 00013600
*01* PERFORMANCE IMPLICATIONS:                                        * 00013700
*                                                                     * 00013800
*    None                                                             * 00013900
*                                                                     * 00014000
*01* SYNTAX:                                                          * 00014100
*                                                                     * 00014200
*Ýxlabel¨  IWMSSEL     USERDATA=xuserdata                             * 00014300
*                     ,WLMEUTKN=xwlmeutkn                             * 00014400
*                    Ý,SERVER_TOKEN=xserver_token¨                    * 00014500
*                    Ý,REGION_TOKEN=xregion_token¨                    * 00014600
*                    Ý,RETCODE=xretcode¨                              * 00014700
*                    Ý,RSNCODE=xrsncode¨                              * 00014800
*                    Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨          * 00014900
*                   ÐÝ,MF=S¨                                          * 00015000
*                   ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                   * 00015100
*                   ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                     * 00015200
*                                                                     * 00015300
*                                                                     * 00015400
*      Where:                                                         * 00015500
*                                                                     * 00015600
*                                                                     * 00015700
*      Ýxlabel¨                                                       * 00015800
*          is an optional symbol, starting in column 1, that is the   * 00015900
*          name on the IWMSSEL macro invocation.  The name must       * 00016000
*          conform to the rules for an ordinary assembler language    * 00016100
*          symbol.                                                    * 00016200
*          DEFAULT: No name.                                          * 00016300
*                                                                     * 00016400
*                                                                     * 00016500
*                                                                     * 00016600
*                                                                     * 00016700
*      USERDATA=xuserdata                                             * 00016800
*          is the name (RS-type), or address in register (2)-(12), of * 00016900
*          a required 16 character output which contains the user     * 00017000
*          data previously passed to WLM via IWMQINS.                 * 00017100
*                                                                     * 00017200
*                                                                     * 00017300
*                                                                     * 00017400
*                                                                     * 00017500
*      WLMEUTKN=xwlmeutkn                                             * 00017600
*          is the name (RS-type), or address in register (2)-(12), of * 00017700
*          a required 8 character output which will receive the       * 00017800
*          execution unit token.  This token must be passed on        * 00017900
*          subsequent IWMSTBGN and IWMSTEND requests.                 * 00018000
*                                                                     * 00018100
*                                                                     * 00018200
*                                                                     * 00018300
*                                                                     * 00018400
*      ÝSERVER_TOKEN=xserver_token¨                                   * 00018500
*          is the name (RS-type), or address in register (2)-(12), of * 00018600
*          an optional 32 character output which contains a server    * 00018700
*          token.  A queueing manager can use the server token to     * 00018800
*          queue secondary work requests to this server task.         * 00018900
*          Secondary work requests are considered to be extensions of * 00019000
*          the work request selected by IWMSSEL.  They are selected   * 00019100
*          using the IWMSSEM macro.  See the IWMSSEM macro for more   * 00019200
*          information.                                               * 00019300
*                                                                     * 00019400
*                                                                     * 00019500
*                                                                     * 00019600
*                                                                     * 00019700
*      ÝREGION_TOKEN=xregion_token¨                                   * 00019800
*          is the name (RS-type), or address in register (2)-(12), of * 00019900
*          an optional 16 character output which contains a region    * 00020000
*          token.  A queueing manager can use the region token to     * 00020100
*          queue work requests to a specific server region. These     * 00020200
*          work requests are considered to belong to a set of the     * 00020300
*          work request all needing access to same status information * 00020400
*          which exists only in the virtual storage of the server     * 00020500
*          region.  They are selected using the IWMSSEL macro.  It is * 00020600
*          assumed that the application uses the service IWMTAFF to   * 00020700
*          tell WLM when the temporary affinity to the defined server * 00020800
*          region begins and ends.                                    * 00020900
*                                                                     * 00021000
*                                                                     * 00021100
*                                                                     * 00021200
*                                                                     * 00021300
*      ÝRETCODE=xretcode¨                                             * 00021400
*          is the name (RS-type) of an optional fullword output       * 00021500
*          variable, or register (2)-(12), into which the return code * 00021600
*          is to be copied from GPR 15.                               * 00021700
*                                                                     * 00021800
*                                                                     * 00021900
*                                                                     * 00022000
*                                                                     * 00022100
*      ÝRSNCODE=xrsncode¨                                             * 00022200
*          is the name (RS-type) of an optional fullword output       * 00022300
*          variable, or register (2)-(12), into which the reason code * 00022400
*          is to be copied from GPR 0.                                * 00022500
*                                                                     * 00022600
*                                                                     * 00022700
*                                                                     * 00022800
*                                                                     * 00022900
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00023000
*          is an optional byte input decimal value in the "0-2" range * 00023100
*          that specifies the macro version.  PLISTVER is the only    * 00023200
*          key allowed on the list form of MF and determines which    * 00023300
*          parameter list is generated.  The macro keys associated    * 00023400
*          with each supported version of the macro are listed in     * 00023500
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 00023600
*          instead of a number, and the parameter list will be of the * 00023700
*          largest size currently supported. This size may grow from  * 00023800
*          release to release (thus possibly affecting the amount of  * 00023900
*          storage needed by your program).  If your program can      * 00024000
*          tolerate this, IBM recommends that you always specify MAX  * 00024100
*          when creating the list form parameter list as that will    * 00024200
*          ensure that the list form parameter list is always long    * 00024300
*          enough to hold whatever parameters might be specified on   * 00024400
*          the execute form.                                          * 00024500
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00024600
*          default is the lowest version which allows all of the      * 00024700
*          parameters specified on the invocation to be processed.    * 00024800
*                                                                     * 00024900
*                                                                     * 00025000
*                                                                     * 00025100
*                                                                     * 00025200
*      ÝMF=»S!L!Eº¨                                                   * 00025300
*          is an optional keyword input which specifies the macro     * 00025400
*          form.                                                      * 00025500
*          DEFAULT: S                                                 * 00025600
*                                                                     * 00025700
*                                                                     * 00025800
*          ÝMF=S¨                                                     * 00025900
*              specifies the standard form of the macro.  The "S"     * 00026000
*              form generates code to put the parameters into an      * 00026100
*              in-line parameter list and invoke the desired service. * 00026200
*              Full checking for required macro keys is done along    * 00026300
*              with supplying defaults for omitted optional           * 00026400
*              parameters.                                            * 00026500
*                                                                     * 00026600
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00026700
*              specifies the list form of the macro.  The "L" form    * 00026800
*              defines an area to be used for the parameter list.     * 00026900
*              Only the PLISTVER key may be specified on the          * 00027000
*              invocation.  All other macro parameters are flagged as * 00027100
*              errors.  If PLISTVER is not specified, the original    * 00027200
*              parameter list definition is used.                     * 00027300
*                                                                     * 00027400
*            ,xmfctrl                                                 * 00027500
*              is a required input.  It is the name of a storage area * 00027600
*              for the parameter list.                                * 00027700
*                                                                     * 00027800
*            »,xmfattr!0Dº                                            * 00027900
*              is an optional 60 character input string that varies   * 00028000
*              from 1 to 60 characters. Use it to force boundary      * 00028100
*              alignment of the parameter list. Use only 0F or 0D.    * 00028200
*              DEFAULT: 0D which forces the parameter list to a       * 00028300
*              doubleword boundary.                                   * 00028400
*                                                                     * 00028500
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00028600
*              specifies the execute form of the macro.  The "E" form * 00028700
*              generates code to put the parameters into the          * 00028800
*              parameter list specified by xmfctrl and provides full  * 00028900
*              syntax checking with default setting.                  * 00029000
*                                                                     * 00029100
*            ,xmfctrl                                                 * 00029200
*              is a required input.  It is the name (RS-type), or     * 00029300
*              address in register (1)-(12), of a storage area for    * 00029400
*              the parameter list.                                    * 00029500
*                                                                     * 00029600
*            »,COMPLETEº                                              * 00029700
*              is an optional keyword input which specifies the       * 00029800
*              degree of macro parameter syntax checking.             * 00029900
*              DEFAULT: COMPLETE                                      * 00030000
*                                                                     * 00030100
*                                                                     * 00030200
*              COMPLETE                                               * 00030300
*                  Checking for required macro keys is done and       * 00030400
*                  defaults are supplied for omitted optional         * 00030500
*                  parameters.                                        * 00030600
*                                                                     * 00030700
*                                                                     * 00030800
*                                                                     * 00030900
*                                                                     * 00031000
*                                                                     * 00031100
*                                                                     * 00031200
*                                                                     * 00031300
*01* ABEND CODES:  None.                                              * 00031400
*                                                                     * 00031500
*01* RETURN CODES:                                                    * 00031600
*                                                                     * 00031700
*                                                                     * 00031800
*            0    Name: IwmRetCodeOk                                  * 00031900
*                                                                     * 00032000
*                 Meaning: Successful completion.                     * 00032100
*                                                                     * 00032200
*                 Action: None required.                              * 00032300
*                                                                     * 00032400
*                                                                     * 00032500
*            8    Name: IwmRetCodeInvocError                          * 00032600
*                                                                     * 00032700
*                 Meaning: Invalid invocation environment or          * 00032800
*                 parameters.                                         * 00032900
*                                                                     * 00033000
*                                                                     * 00033100
*                                                                     * 00033200
*                 HEX REASON  MEANING/ACTION                          * 00033300
*                 CODE                                                * 00033400
*                                                                     * 00033500
*                 xxxx0801    Name: IwmRsnCodeSrbMode                 * 00033600
*                                                                     * 00033700
*                             Meaning: Caller is in SRB mode.         * 00033800
*                                                                     * 00033900
*                             Action: Avoid requesting this function  * 00034000
*                             while in SRB mode.                      * 00034100
*                                                                     * 00034200
*                 xxxx0803    Name: IwmRsnCodeDisabled                * 00034300
*                                                                     * 00034400
*                             Meaning: Caller is disabled.            * 00034500
*                                                                     * 00034600
*                             Action: Avoid requesting this function  * 00034700
*                             while disabled.                         * 00034800
*                                                                     * 00034900
*                 xxxx0804    Name: IwmRsnCodeLocked                  * 00035000
*                                                                     * 00035100
*                             Meaning: Caller is locked.              * 00035200
*                                                                     * 00035300
*                             Action: Avoid requesting this function  * 00035400
*                             while locked.                           * 00035500
*                                                                     * 00035600
*                 xxxx080B    Name: IwmRsnCodeBadPl                   * 00035700
*                                                                     * 00035800
*                             Meaning: Error accessing parameter      * 00035900
*                             list.                                   * 00036000
*                                                                     * 00036100
*                             Action: Check for possible storage      * 00036200
*                             overlay.  Also check if you call this   * 00036300
*                             macro in 64 bit adressing mode (see     * 00036400
*                             explanations for xxxx089E).             * 00036500
*                                                                     * 00036600
*                 xxxx0823    Name: IwmRsnCodeDatoff                  * 00036700
*                                                                     * 00036800
*                             Meaning: Caller invoked service while   * 00036900
*                             DATOFF                                  * 00037000
*                                                                     * 00037100
*                             Action: Avoid requesting this function  * 00037200
*                             in this environment.                    * 00037300
*                                                                     * 00037400
*                 xxxx0824    Name: IwmRsnCodeAmode24                 * 00037500
*                                                                     * 00037600
*                             Meaning: Caller invoked service but was * 00037700
*                             in 24 bit addressing mode.              * 00037800
*                                                                     * 00037900
*                             Action: Request this function only when * 00038000
*                             you are in 31 bit addressing mode.      * 00038100
*                                                                     * 00038200
*                 xxxx0825    Name: IwmRsnCodeAscModeNotPrimary       * 00038300
*                                                                     * 00038400
*                             Meaning: Caller invoked service but was * 00038500
*                             not in primary ASC mode.                * 00038600
*                                                                     * 00038700
*                             Action: Avoid requesting this function  * 00038800
*                             in this environment.                    * 00038900
*                                                                     * 00039000
*                 xxxx0828    Name: IwmRsnCodeBadVersion              * 00039100
*                                                                     * 00039200
*                             Meaning: Version number in parameter    * 00039300
*                             list is not valid.                      * 00039400
*                                                                     * 00039500
*                             Action: Check for possible storage      * 00039600
*                             overlay of the parameter list.          * 00039700
*                                                                     * 00039800
*                 xxxx0840    Name: IwmRsnCodeServiceNotEnabled       * 00039900
*                                                                     * 00040000
*                             Meaning: Caller's space connection is   * 00040100
*                             not enabled for this service.           * 00040200
*                                                                     * 00040300
*                             Action: Make sure that                  * 00040400
*                             SERVER_MANAGER=YES is specified on the  * 00040500
*                             IWMCONN request to enable this service. * 00040600
*                                                                     * 00040700
*                 xxxx0841    Name: IwmRsnCodeXmemMode                * 00040800
*                                                                     * 00040900
*                             Meaning: Caller is in cross-memory      * 00041000
*                             mode.                                   * 00041100
*                                                                     * 00041200
*                             Action: Request this function only when * 00041300
*                             you are not in cross-memory mode.       * 00041400
*                                                                     * 00041500
*                 xxxx0842    Name: IwmRsnCodeNoWLMConnect            * 00041600
*                                                                     * 00041700
*                             Meaning: Caller's space is not          * 00041800
*                             connected to WLM.                       * 00041900
*                                                                     * 00042000
*                             Action:  Invoke the IWMCONN macro       * 00042100
*                             before invoking this macro.             * 00042200
*                                                                     * 00042300
*                 xxxx0854    Name: IwmRsnCodeTooManySelect           * 00042400
*                                                                     * 00042500
*                             Meaning: The caller is attempting to    * 00042600
*                             select more work units than it has      * 00042700
*                             tasks to execute the work.              * 00042800
*                                                                     * 00042900
*                             Action:  Wait until an execution task   * 00043000
*                             has issued IWMSTEND before attempting   * 00043100
*                             to select more work units.              * 00043200
*                                                                     * 00043300
*                 xxxx0864    Name: IwmRsnCodeSecondaryWorkExists     * 00043400
*                                                                     * 00043500
*                             Meaning: There are secondary work       * 00043600
*                             requests queued to this server task.    * 00043700
*                             The caller was expected to process them * 00043800
*                             using IWMSSEM before calling IWMSSEL.   * 00043900
*                                                                     * 00044000
*                             Action:  Select all secondary work      * 00044100
*                             requests before issuing IWMSSEL.        * 00044200
*                                                                     * 00044300
*                 xxxx089E    Name: IwmRsnCodeServiceAModeMismatch    * 00044400
*                                                                     * 00044500
*                             Meaning:  The caller works in 64-bit    * 00044600
*                             address mode and tried to invoke a      * 00044700
*                             service macro that is only enabled for  * 00044800
*                             a 31-bit address environment.           * 00044900
*                                                                     * 00045000
*                             Action:  Use the 64-bit enabled service * 00045100
*                             macro (IWM4SSL ) or change the          * 00045200
*                             addressing mode of the caller to        * 00045300
*                             31-bit.                                 * 00045400
*                                                                     * 00045500
*                                                                     * 00045600
*                                                                     * 00045700
*                                                                     * 00045800
*            C    Name: IwmRetCodeEnvError                            * 00045900
*                                                                     * 00046000
*                 Meaning: Environmental error.                       * 00046100
*                                                                     * 00046200
*                                                                     * 00046300
*                                                                     * 00046400
*                 HEX REASON  MEANING/ACTION                          * 00046500
*                 CODE                                                * 00046600
*                                                                     * 00046700
*                 xxxx0C01    Name: IwmRsnCodeNoStg                   * 00046800
*                                                                     * 00046900
*                             Meaning: Storage is not available for   * 00047000
*                             the request.                            * 00047100
*                                                                     * 00047200
*                             Action: Caller must disconnect by       * 00047300
*                             invoking the IWMDISC macro.             * 00047400
*                                                                     * 00047500
*                 xxxx0C14    Name: IwmRsnCodeNoWorkShutDown          * 00047600
*                                                                     * 00047700
*                             Meaning: No work selected. Caller is to * 00047800
*                             shutdown.                               * 00047900
*                                                                     * 00048000
*                             Action: Caller must disconnect by       * 00048100
*                             invoking the IWMDISC macro.             * 00048200
*                                                                     * 00048300
*                 xxxx0C3B    Name: IwmRsnCodeStopTask                * 00048400
*                                                                     * 00048500
*                             Meaning: WLM decided to stop the server * 00048600
*                             instance.                               * 00048700
*                                                                     * 00048800
*                             Action: Calling task must shutdown, but * 00048900
*                             server address space must remain        * 00049000
*                             active.                                 * 00049100
*                                                                     * 00049200
*                                                                     * 00049300
*                                                                     * 00049400
*                                                                     * 00049500
*            10   Name: IwmRetCodeCompError                           * 00049600
*                                                                     * 00049700
*                 Meaning: Component error.                           * 00049800
*                                                                     * 00049900
*                 Action: Contact your system programmer.             * 00050000
*                                                                     * 00050100
*                                                                     * 00050200
*                                                                     * 00050300
*                                                                     * 00050400
*01* REASON CODES:                                                    * 00050500
*                                                                     * 00050600
*       A unique reason code will be returned whenever the return     * 00050700
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00050800
*       under their corresponding return code.  Reason code and       * 00050900
*       return code constants are defined within IWMYCON.  Note that  * 00051000
*       the high order halfword of register 0, and the reason code    * 00051100
*       variable when specified, may be non-zero and represents       * 00051200
*       diagnostic data which is NOT part of the external interface.  * 00051300
*       The high order halfword should thus be excluded from          * 00051400
*       comparison with the reason code values described above.  The  * 00051500
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00051600
*       used for this purpose.                                        * 00051700
*                                                                     * 00051800
*01* MODULE TYPE:  ASSEM MACRO                                        * 00051900
*                                                                     * 00052000
*02*   PROCESSOR:  ASSEM                                              * 00052100
*                                                                     * 00052200
*01* COMPONENT:  SCWLM                                                * 00052300
*                                                                     * 00052400
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00052500
*                                                                     * 00052600
*01* EXAMPLES:                                                        * 00052700
*                                                                     * 00052800
*    To select a work request from the WLM queue manager queues:      * 00052900
*                                                                     * 00053000
*               IWMSSEL USERDATA=USERDATA,                          X * 00053100
*                     WLMEUTKN=WLMEUTKN,RETCODE=RC,RSNCODE=RSN        * 00053200
*      *                                                              * 00053300
*      * Storage areas                                                * 00053400
*      *                                                              * 00053500
*      USERDATA DS    CL16            Contains the user-defined data  * 00053600
*      *                              that was passed to IWMQINS      * 00053700
*      WLMEUTKN DS    CL8             Work unit token that must be    * 00053800
*      *                              passed to IWMSTBGN and IWMSTEND * 00053900
*      RC       DS    F               Return code                     * 00054000
*      RSN      DS    F               Reason code                     * 00054100
*                                                                     * 00054200
*                                                                     * 00054300
*01* MACRO USAGE NOTES:                                               * 00054400
*                                                                     * 00054500
*                                                                     * 00054600
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00054700
*        global macro variable.  Any value other than 'NO' will       * 00054800
*        result in the macro expansion being printed.  The default is * 00054900
*        'YES'.  The following examples illustrate how the ZPRINT     * 00055000
*        variable should be set.                                      * 00055100
*                                                                     * 00055200
*                    GBLC &ZPRINT                                     * 00055300
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00055400
*                                                                     * 00055500
*                                                                     * 00055600
*    2.  The  IWMSSEL macro supports multiple versions. The macro key * 00055700
*        list  below  contains the version level in which the key was * 00055800
*        first  introduced.  Positionals  are  identified by the word * 00055900
*        'Positional'  followed by the numeric value of its position. * 00056000
*        Nested  positionals  are  preceded  by their outer key.  The * 00056100
*        lowest value represents the original version and the highest * 00056200
*        value  represents  the  most  recent  version of the IWMSSEL * 00056300
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00056400
*        least  as high as the highest version number of all the keys * 00056500
*        being used.                                                  * 00056600
*                                                                     * 00056700
*        VERSION   KEY                                                * 00056800
*                                                                     * 00056900
*              0      USERDATA                                        * 00057000
*                     WLMEUTKN                                        * 00057100
*              1      SERVER_TOKEN                                    * 00057200
*              2      REGION_TOKEN                                    * 00057300
*                                                                     * 00057400
*                                                                     * 00057500
*                                                                     * 00057600
*01* CHANGE ACTIVITY:                                                 * 00057700
*                                                                     * 00057800
*   Flag LineItem  FMID    Date   ID    Comment                       * 00057900
*                                                                     * 00058000
*    $L0=WLMP     HBB6603 950216 PD88RK:  DB2 Stored SQL Procedure    * 00058100
*    $L1=WLMP     HBB6603 950331 PD88GD:  DB2 Stored SQL Procedure    * 00058200
*    $L2=WLMP     HBB6603 950426 PD88GD:  DB2 Stored SQL Procedure    * 00058300
*    $L3=WLMP     HBB6603 951207 PD88DB:  PQC0461                     * 00058400
*    $L4=WLMP     HBB6603 960703 PD88DB:  PQC1624                     * 00058500
*    $L5=WLMP     HBB6605 970528 B9HAGD:  Business object server      * 00058600
*    $L6=OW45238  HBB6608 000615 B9HARV:  Temporal Affinity Support   * 00058700
*    $L7=WLMP     HBB7705 000713 B9HARV:  Server Task/Thread          * 00058800
*                                         Management                  * 00058900
*    $L8=WLMP64W  HBB7709 030315 3241NN:  IWM4SSL  created. Please do * 00059000
*                                         not change this macro any   * 00059100
*                                         longer.                     * 00059200
*    $P1=ME02076  HBB7720 041015 3241NN:  Added reason code for       * 00059300
*                                         callers in AMODE 64.        * 00059400
*                                         Specific to 31-bit version. * 00059500
****** END OF SPECIFICATIONS *****************************************/ 00059600
*/********************************************************************* 00059700
         MACRO                                                          00059800
&XLABEL  IWMSSEL &USERDATA=,&WLMEUTKN=,&SERVER_TOKEN=,&REGION_TOKEN=,  *00059900
               &RETCODE=,&RSNCODE=,&PLISTVER=,&MF=                      00060000
.*                                                                      00060100
*                  MACDATE -11/09/04-<2>                                00060200
.*                                                                      00060300
.*******************************************************************    00060400
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00060500
.*******************************************************************    00060600
                  GBLC  &ZPRINT     YES=PRINT NO=NO PRINT               00060700
                  GBLC  &ZTEST      YES=TEST NO=NO TEST                 00060800
                  GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX         00060900
.*                                                                      00061000
                  GBLC  &ZIWMSSEL   YES=MACRO USED AT LEAST ONCE        00061100
.*******************************************************************    00061200
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00061300
.*******************************************************************    00061400
                  LCLC  &ZMS        ERROR MESSAGE WORK AREA             00061500
                  LCLC  &ZCNDX      SYSNDX CHARACTERS                   00061600
                  LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED          00061700
                  LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR         00061800
                  LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE         00061900
                  LCLA  &ZAWRK      USED AS A WORK AREA                 00062000
                  LCLA  &ZASIZ      USED FOR SIZE OF VALUE              00062100
                  LCLA  &ZN         NUMERIC WORK VARIABLE               00062200
                  LCLC  &ZC         CHARACTER WORK VARIABLE             00062300
                  LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE         00062400
                  LCLA  &ZTLA       VALUE TOO LONG VARIABLE             00062500
                  LCLC  &ZMAC_G     "G" or null                         00062600
&ZMAC_G           SETC  ''                                              00062700
                  LCLC  &ZMAC_LR                                        00062800
&ZMAC_LR          SETC  'LR'                                            00062900
                  LCLC  &ZMAC_L                                         00063000
&ZMAC_L           SETC  'L'                                             00063100
                  LCLC  &ZMAC_ST                                        00063200
&ZMAC_ST          SETC  'ST'                                            00063300
                  LCLA  &ZMACRET    MACRO RETURN CODE                   00063400
&ZMACRET          SETA  0           ASSUME NO ERRORS                    00063500
.*                                                                      00063600
                  LCLC  &ZCSYSLIST(255)         NONXKEY, POS ARRAY      00063700
                  LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()          00063800
                  LCLA  &ZPLLEN     PARAMETER LIST LENGTH               00063900
                  LCLC  &ZENDBASEPL             End of base PL          00064000
                  LCLA  &ZPLWORKA   PARAMETER LIST LENGTH               00064100
.*******************************************************************    00064200
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00064300
.*******************************************************************    00064400
                  LCLA  &ZI         INDEX FOR ARRAY                     00064500
                  LCLA  &ZJ         INDEX FOR PARMS                     00064600
                  LCLA  &ZK         INDEX FOR PARSE                     00064700
                  LCLA  &ZLO        LOW RANGE VALUE                     00064800
                  LCLA  &ZHI        HIGH RANGE VALUE                    00064900
                  LCLC  &ZW         WORK AREA FOR PARM                  00065000
.********************************************************************   00065100
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00065200
.********************************************************************   00065300
                  GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL             00065400
                  GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE      00065500
                  GBLA  &SYSALVL    SYSSTATE ARCHLVL                    00065600
                  GBLC  &SYSAM64    SYSSTATE AMODE64                    00065700
.*                                                                      00065800
                  AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED      00065900
                  AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED       00066000
                  SPLEVEL  TEST                                         00066100
.ZSYS2            ANOP  ,                                               00066200
                  AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1           00066300
                  AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1           00066400
                  SYSSTATE TEST                                         00066500
                  AGO   .ZSYS4                                          00066600
.ZSYS3            ANOP  ,                                               00066700
&SYSASCE          SETC  'P'         ASSUME SYSSTATE PRIMARY             00066800
.ZSYS4            ANOP  ,                                               00066900
.*******************************************************************    00067000
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00067100
.*******************************************************************    00067200
                  LCLC  &XUSERDATA  ++ NAME                             00067300
                  LCLC  &XWLMEUTKN  ++ NAME                             00067400
                  LCLC  &XSERVER_TOKEN          ++ NAME                 00067500
                  LCLC  &XREGION_TOKEN          ++ NAME                 00067600
                  LCLC  &XRETCODE   ++ NAME                             00067700
                  LCLC  &XRSNCODE   ++ NAME                             00067800
                  LCLA  &XPLISTVER  ++ VALUE                            00067900
                  LCLC  &XMF        ++ VALUE                            00068000
                  LCLC  &XMFCTRL    ++ NAME                             00068100
                  LCLC  &XMFATTR    ++ VALUE                            00068200
                  LCLC  &XMFSCK     ++ VALUE                            00068300
.*******************************************************************    00068400
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00068500
.*******************************************************************    00068600
                  LCLC  &ZXUSERDATA             ++ OUTPUT NAME          00068700
                  LCLC  &ZXWLMEUTKN             ++ OUTPUT NAME          00068800
                  LCLC  &ZXSERVER_TOKEN         ++ OUTPUT NAME          00068900
                  LCLC  &ZXREGION_TOKEN         ++ OUTPUT NAME          00069000
                  LCLC  &ZXRETCODE  ++ OUTPUT NAME                      00069100
                  LCLC  &ZXRSNCODE  ++ OUTPUT NAME                      00069200
                  LCLC  &ZXPLISTVER             ++ INPUT VALUE          00069300
                  LCLC  &ZXMF       ++ INPUT VALUE                      00069400
                  LCLC  &ZXMFCTRL   ++ INPUT NAME                       00069500
                  LCLC  &ZXMFATTR   ++ INPUT VALUE                      00069600
                  LCLC  &ZXMFSCK    ++ INPUT VALUE                      00069700
.********************************************************************   00069800
.***AC.PLV01  PROCESS PLISTVER                                      *   00069900
.********************************************************************   00070000
&XPLISTVER      SETA  0                                                 00070100
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00070200
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00070300
&XPLISTVER      SETA  2                                                 00070400
.ZPLV0          ANOP  ,                                                 00070500
.*                                                                      00070600
                AIF   ('&SERVER_TOKEN' EQ '').ZPLV1E                    00070700
                AIF   (&XPLISTVER GE 1).ZPLV1E                          00070800
&XPLISTVER      SETA  1                                                 00070900
.ZPLV1E         ANOP  ,                                                 00071000
.*                                                                      00071100
                AIF   ('&REGION_TOKEN' EQ '').ZPLV2E                    00071200
                AIF   (&XPLISTVER GE 2).ZPLV2E                          00071300
&XPLISTVER      SETA  2                                                 00071400
.ZPLV2E         ANOP  ,                                                 00071500
.*                                                                      00071600
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00071700
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00071800
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00071900
.*-------------------------------------------------------------------   00072000
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00072100
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00072200
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00072300
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00072400
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00072500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00072600
                AGO   .ZPVCK2                                           00072700
.ZPVCK3         ANOP  ,                                                 00072800
.*-------------------------------------------------------------------   00072900
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00073000
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00073100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00073200
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00073300
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00073400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00073500
                AGO   .ZPVCKE                                           00073600
.ZPVCK2         ANOP  ,                                                 00073700
.*-------------------------------------------------------------------   00073800
&ZCVAL          SETC  '&PLISTVER(1)'                                    00073900
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00074000
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00074100
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00074200
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00074300
                AIF   (&ZN LE 2).ZPVCK4A   NOT HIGH                     00074400
.ZPVCK6         ANOP  ,                                                 00074500
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00074600
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00074700
&ZMS            SETC  '&ZMS THE RANGE IS "0-2"'                         00074800
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00074900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00075000
&XPLISTVER      SETA  2                                                 00075100
                AGO   .ZPVCKE                                           00075200
.*-------------------------------------------------------------------   00075300
.ZPVCK4A        ANOP  ,                                                 00075400
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00075500
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00075600
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00075700
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00075800
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00075900
                MNOTE 8,' &ZMS IS REQUIRED.'                            00076000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00076100
                AGO   .ZPVCK5                                           00076200
.ZPVCK4         ANOP  ,                                                 00076300
&XPLISTVER      SETA  &PLISTVER(1)                                      00076400
.ZPVCK5         ANOP  ,                                                 00076500
.ZPVCKE         ANOP  ,                                                 00076600
.********************************************************************   00076700
.***AG.MF01 PROCESS MF MACRO FORMS                                      00076800
.********************************************************************   00076900
                  ACTR  10000                                           00077000
.*------------------------------------------------------------------    00077100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00077200
&XMF              SETC  ''          INITIALIZE XVARIABLE                00077300
.*-------------------------------------------------------------------   00077400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00077500
.ZG24             ANOP  ,                                               00077600
&ZTLC             SETC 'S'                                              00077700
                  AIF   ('&MF(1)' NE '&ZTLC').ZG25                      00077800
&XMF              SETC  'S'         SET KEYWORD                         00077900
                  AIF   (N'&MF LE 1).ZG24A      CK NUM                  00078000
&ZMS              SETC  '"MF='      *KPOSA* MNOTE                       00078100
&ZMS              SETC  '&ZMS.&MF"'                                     00078200
&ZMS              SETC  '&ZMS "MF"'                                     00078300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00078400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00078500
.ZG24A            ANOP  ,                                               00078600
.*-------------------------------------------------------------------   00078700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00078800
.ZG25             ANOP  ,                                               00078900
&ZTLC             SETC 'L'                                              00079000
                  AIF   ('&MF(1)' NE '&ZTLC').ZG32                      00079100
&XMF              SETC  'L'         SET KEYWORD                         00079200
                  AIF   (N'&MF LE 3).ZG25A      CK NUM                  00079300
&ZMS              SETC  '"MF='      *KPOSA* MNOTE                       00079400
&ZMS              SETC  '&ZMS.&MF"'                                     00079500
&ZMS              SETC  '&ZMS "MF"'                                     00079600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'            00079700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00079800
.ZG25A            ANOP  ,                                               00079900
.*-------------------------------------------------------------------   00080000
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00080100
                  AIF   (N'&SYSLIST NE 0).ZG25B  POSITIONALS?           00080200
                  AIF   ('&USERDATA' NE '').ZG25B  KEYS?                00080300
                  AIF   ('&WLMEUTKN' NE '').ZG25B  KEYS?                00080400
                  AIF   ('&SERVER_TOKEN' NE '').ZG25B  KEYS?            00080500
                  AIF   ('&REGION_TOKEN' NE '').ZG25B  KEYS?            00080600
                  AIF   ('&RETCODE' NE '').ZG25B  KEYS?                 00080700
                  AIF   ('&RSNCODE' NE '').ZG25B  KEYS?                 00080800
                  AGO    .ZG25C     INVOCATION OKAY                     00080900
.ZG25B            ANOP  ,                                               00081000
&ZMS              SETC  'THE "L" FORM OF "MF"'  *MFLA* MNOTE            00081100
&ZMS              SETC  '&ZMS CAN ONLY HAVE'                            00081200
&ZMS              SETC  '&ZMS THE "PLISTVER" KEY'                       00081300
                  MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'          00081400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00081500
.ZG25C            ANOP  ,                                               00081600
.*-------------------------------------------------------------------   00081700
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00081800
&ZXMFCTRL         SETC  'INPUT'     SET IN/OUTPUT                       00081900
&XMFCTRL          SETC  '&MF(2,1)'  SET XVARIABLE                       00082000
                  AIF   (N'&MF(2) GT 1).ZG27B   MULTI PARMS             00082100
&XMFCTRL          SETC  '&MF(2)'    SET XVARIABLE                       00082200
.ZG27B            AIF   (K'&MF(2) GT 0).ZG27C                           00082300
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00082400
&ZMS              SETC  'WHEN "L" IS SPECIFIED'  *KRQDA*                00082500
&ZMS              SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'             00082600
                  MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                    00082700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00082800
.ZG27C            ANOP  ,                                               00082900
.*-------------------------------------------------------------------   00083000
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00083100
                  AIF   (K'&ZXMFCTRL LE 0).ZG27P  NOT I/O               00083200
                  AIF   ('&XMFCTRL'(1,1) NE '(').ZG27P                  00083300
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00083400
&ZMS              SETC  '"MF='      *KGPRA* MNOTE                       00083500
&ZMS              SETC  '&ZMS.&MF"'                                     00083600
&ZMS              SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'       00083700
                  MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'               00083800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00083900
.ZG27P            ANOP  ,                                               00084000
.*-------------------------------------------------------------------   00084100
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00084200
&ZXMFATTR         SETC  'INPUT'     SET IN/OUTPUT                       00084300
&XMFATTR          SETC  '0D'                                            00084400
                  AIF   (K'&MF(3) LE 0).ZG30B   PARM                    00084500
&XMFATTR          SETC  '&MF(3,1)'  SET XVARIABLE                       00084600
                  AIF   (N'&MF(3) GT 1).ZG30B   MULTI PARMS             00084700
&XMFATTR          SETC  '&MF(3)'    SET XVARIABLE                       00084800
.ZG30B            ANOP  ,                                               00084900
.*-------------------------------------------------------------------   00085000
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00085100
                  AIF   (K'&ZXMFATTR LE 0).ZG30P  NOT I/O               00085200
                  AIF   ('&XMFATTR'(1,1) NE '(').ZG30P                  00085300
&ZXMFATTR         SETC  ''          RESET IN/OUTPUT                     00085400
&ZMS              SETC  '"MF='      *KGPRA* MNOTE                       00085500
&ZMS              SETC  '&ZMS.&MF"'                                     00085600
&ZMS              SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'       00085700
                  MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'               00085800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00085900
.ZG30P            ANOP  ,                                               00086000
.*-------------------------------------------------------------------   00086100
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00086200
                  AIF   (K'&ZXMFATTR LE 0).ZG30S  NOT I/O               00086300
                  AIF   (K'&XMFATTR LE 60).ZG30S  LNG OK                00086400
&ZXMFATTR         SETC  ''          RESET IN/OUTPUT                     00086500
&ZMS              SETC  '"MF='      *KLNGA* MNOTE                       00086600
&ZMS              SETC  '&ZMS.&MF"'                                     00086700
&ZMS              SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'           00086800
                  MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'              00086900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00087000
.ZG30S            ANOP  ,                                               00087100
.*-------------------------------------------------------------------   00087200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00087300
.ZG32             ANOP  ,                                               00087400
&ZTLC             SETC 'E'                                              00087500
                  AIF   ('&MF(1)' NE '&ZTLC').ZG40                      00087600
&XMF              SETC  'E'         SET KEYWORD                         00087700
                  AIF   (N'&MF LE 3).ZG32A      CK NUM                  00087800
&ZMS              SETC  '"MF='      *KPOSA* MNOTE                       00087900
&ZMS              SETC  '&ZMS.&MF"'                                     00088000
&ZMS              SETC  '&ZMS "MF"'                                     00088100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'            00088200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00088300
.ZG32A            ANOP  ,                                               00088400
.*-------------------------------------------------------------------   00088500
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00088600
&ZXMFCTRL         SETC  'INPUT'     SET IN/OUTPUT                       00088700
&XMFCTRL          SETC  '&MF(2,1)'  SET XVARIABLE                       00088800
                  AIF   (N'&MF(2) GT 1).ZG34B   MULTI PARMS             00088900
&XMFCTRL          SETC  '&MF(2)'    SET XVARIABLE                       00089000
.ZG34B            AIF   (K'&MF(2) GT 0).ZG34C                           00089100
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00089200
&ZMS              SETC  'WHEN "E" IS SPECIFIED'  *KRQDA*                00089300
&ZMS              SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'             00089400
                  MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                    00089500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00089600
.ZG34C            ANOP  ,                                               00089700
.*-------------------------------------------------------------------   00089800
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00089900
                  AIF   (K'&ZXMFCTRL LE 0).ZG34R  NOT I/O               00090000
                  AIF   ('&XMFCTRL'(1,1) NE '(').ZG34R                  00090100
&ZCGPR            SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                      00090200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG34P                    00090300
                  AIF   (K'&ZCGPR GT 2).ZG34Q                           00090400
                  AIF   ('&ZCGPR' EQ '0').ZG34Q                         00090500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00090600
                  AIF   (T'&ZCGPR NE 'N').ZG34Q  INVALID REG NAME       00090700
.ZG34P            ANOP  ,                                               00090800
                  AIF   (T'&ZCGPR NE 'N').ZG34R  NON NUMERIC            00090900
                  AIF   ('&ZCGPR' LT '1').ZG34Q                         00091000
                  AIF   ('&ZCGPR' LE '12').ZG34R                        00091100
.ZG34Q            ANOP  ,                                               00091200
&ZMS              SETC  '"MF='      *KGPRA* MNOTE                       00091300
&ZMS              SETC  '&ZMS.&MF"'                                     00091400
&ZMS              SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'       00091500
                  MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                00091600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00091700
.ZG34R            ANOP  ,                                               00091800
.*-------------------------------------------------------------------   00091900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00092000
&XMFSCK           SETC  ''          INITIALIZE XVARIABLE                00092100
.ZG38A   AIF   ('&MF(3)' NE 'COMPLETE').ZG39A                           00092200
&XMFSCK           SETC  'COMPLETE'  SET KEYWORD                         00092300
.*-------------------------------------------------------------------   00092400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00092500
.ZG39A            AIF   (K'&XMFSCK GT 0).ZG39C  KEYWORD                 00092600
                  AIF   (K'&MF(3) LE 0).ZG39B                           00092700
&ZMS              SETC  '"MF='      *KUKWA* MNOTE                       00092800
&ZMS              SETC  '&ZMS.&MF"'                                     00092900
&ZMS              SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '       00093000
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00093100
&ZMS              SETC  '&ZMS "COMPLETE".'                              00093200
                  MNOTE 8,' &ZMS '                                      00093300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00093400
.ZG39B            ANOP  ,                                               00093500
&XMFSCK           SETC  'COMPLETE'  SET DEFAULT KEYWORD                 00093600
.ZG39C            ANOP  ,                                               00093700
&ZXMFSCK          SETC  'INPUT'     SET IN/OUTPUT                       00093800
.*------------------------------------------------------------------    00093900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00094000
.ZG40             ANOP  ,                                               00094100
&ZXMF             SETC  'INPUT'     SET IN/OUTPUT                       00094200
                  AIF   (K'&XMF GT 0).ZG40E     VALID ARG               00094300
                  AIF   (T'&MF EQ 'O').ZG40D    OMITTED                 00094400
&ZASYSLNDX        SETA  0                                               00094500
.ZG40A            ANOP  ,           POSITIONAL MACRO KEY                00094600
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00094700
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG40C                00094800
&ZTLC             SETC 'MF'                                             00094900
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG40A       00095000
.ZG40B            ANOP  ,                                               00095100
&ZXMF             SETC  ''          RESET IN/OUTPUT                     00095200
&ZMS              SETC  'THE "MF" KEY'          *KOPTA* MNOTE           00095300
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00095400
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00095500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00095600
                  AGO   .ZG40E                                          00095700
.ZG40C            ANOP  ,                                               00095800
&ZXMF             SETC  ''          RESET IN/OUTPUT                     00095900
&ZMS              SETC  '"MF='      *KUKWA* MNOTE                       00096000
&ZMS              SETC  '&ZMS.&MF"'                                     00096100
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00096200
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00096300
&ZMS              SETC  '&ZMS "S",'                                     00096400
&ZMS              SETC  '&ZMS "L",'                                     00096500
&ZMS              SETC  '&ZMS OR "E".'                                  00096600
                  MNOTE 8,' &ZMS '                                      00096700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00096800
                  AGO   .ZG40E                                          00096900
.ZG40D            ANOP  ,                                               00097000
&XMF              SETC  'S'         SET DEFAULT KEYWORD                 00097100
&XMFSCK           SETC  'COMPLETE'  COMPLETE CHECKING                   00097200
.ZG40E            ANOP  ,                                               00097300
.********************************************************************   00097400
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00097500
.********************************************************************   00097600
                  ACTR  10000                                           00097700
.*-------------------------------------------------------------------   00097800
.***AG.MF03 MF=(SLE)                                                    00097900
                  AIF   ('&XMF' EQ 'L').ZGMFX                           00098000
.*----------------------------------------------------------------***   00098100
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00098200
                  AIF   (N'&USERDATA LE 1).ZG2A  CK NUM                 00098300
&ZMS              SETC  '"USERDATA='            *KPOSA* MNOTE           00098400
&ZMS              SETC  '&ZMS.&USERDATA"'                               00098500
&ZMS              SETC  '&ZMS "USERDATA"'                               00098600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00098700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00098800
.ZG2A             ANOP  ,                                               00098900
.*-------------------------------------------------------------------   00099000
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00099100
&ZXUSERDATA       SETC  'OUTPUT'    SET IN/OUTPUT                       00099200
&XUSERDATA        SETC  '&USERDATA(1)'          SET XVARIABLE           00099300
                  AIF   (N'&USERDATA GT 1).ZG2B  MULTI PARMS            00099400
&XUSERDATA        SETC  '&USERDATA'             SET XVARIABLE           00099500
.ZG2B             AIF   (K'&USERDATA(1) GT 0).ZG2C                      00099600
&ZXUSERDATA       SETC  ''          RESET IN/OUTPUT                     00099700
&ZMS              SETC  ' '         *KRQDA*                             00099800
&ZMS              SETC  '&ZMS "USERDATA" KEY AND ITS'                   00099900
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00100000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00100100
.ZG2C             ANOP  ,                                               00100200
.*-------------------------------------------------------------------   00100300
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00100400
                  AIF   (K'&ZXUSERDATA LE 0).ZG2R  NOT I/O              00100500
                  AIF   ('&XUSERDATA'(1,1) NE '(').ZG2R                 00100600
&ZCGPR            SETC  '&XUSERDATA'(2,K'&XUSERDATA-2)                  00100700
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                     00100800
                  AIF   (K'&ZCGPR GT 2).ZG2Q                            00100900
                  AIF   ('&ZCGPR' EQ '0').ZG2Q                          00101000
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00101100
                  AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME        00101200
.ZG2P             ANOP  ,                                               00101300
                  AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC             00101400
                  AIF   ('&ZCGPR' LT '2').ZG2Q                          00101500
                  AIF   ('&ZCGPR' LE '12').ZG2R                         00101600
.ZG2Q             ANOP  ,                                               00101700
&ZMS              SETC  '"USERDATA='            *KGPRA* MNOTE           00101800
&ZMS              SETC  '&ZMS.&USERDATA"'                               00101900
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00102000
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00102100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00102200
.ZG2R             ANOP  ,                                               00102300
.*----------------------------------------------------------------***   00102400
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00102500
                  AIF   (N'&WLMEUTKN LE 1).ZG5A  CK NUM                 00102600
&ZMS              SETC  '"WLMEUTKN='            *KPOSA* MNOTE           00102700
&ZMS              SETC  '&ZMS.&WLMEUTKN"'                               00102800
&ZMS              SETC  '&ZMS "WLMEUTKN"'                               00102900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00103000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00103100
.ZG5A             ANOP  ,                                               00103200
.*-------------------------------------------------------------------   00103300
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00103400
&ZXWLMEUTKN       SETC  'OUTPUT'    SET IN/OUTPUT                       00103500
&XWLMEUTKN        SETC  '&WLMEUTKN(1)'          SET XVARIABLE           00103600
                  AIF   (N'&WLMEUTKN GT 1).ZG5B  MULTI PARMS            00103700
&XWLMEUTKN        SETC  '&WLMEUTKN'             SET XVARIABLE           00103800
.ZG5B             AIF   (K'&WLMEUTKN(1) GT 0).ZG5C                      00103900
&ZXWLMEUTKN       SETC  ''          RESET IN/OUTPUT                     00104000
&ZMS              SETC  ' '         *KRQDA*                             00104100
&ZMS              SETC  '&ZMS "WLMEUTKN" KEY AND ITS'                   00104200
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00104300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00104400
.ZG5C             ANOP  ,                                               00104500
.*-------------------------------------------------------------------   00104600
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00104700
                  AIF   (K'&ZXWLMEUTKN LE 0).ZG5R  NOT I/O              00104800
                  AIF   ('&XWLMEUTKN'(1,1) NE '(').ZG5R                 00104900
&ZCGPR            SETC  '&XWLMEUTKN'(2,K'&XWLMEUTKN-2)                  00105000
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                     00105100
                  AIF   (K'&ZCGPR GT 2).ZG5Q                            00105200
                  AIF   ('&ZCGPR' EQ '0').ZG5Q                          00105300
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00105400
                  AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME        00105500
.ZG5P             ANOP  ,                                               00105600
                  AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC             00105700
                  AIF   ('&ZCGPR' LT '2').ZG5Q                          00105800
                  AIF   ('&ZCGPR' LE '12').ZG5R                         00105900
.ZG5Q             ANOP  ,                                               00106000
&ZMS              SETC  '"WLMEUTKN='            *KGPRA* MNOTE           00106100
&ZMS              SETC  '&ZMS.&WLMEUTKN"'                               00106200
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00106300
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00106400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00106500
.ZG5R             ANOP  ,                                               00106600
.*----------------------------------------------------------------***   00106700
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00106800
                  AIF   (N'&SERVER_TOKEN LE 1).ZG8A  CK NUM             00106900
&ZMS              SETC  '"SERVER_TOKEN='        *KPOSA* MNOTE           00107000
&ZMS              SETC  '&ZMS.&SERVER_TOKEN"'                           00107100
&ZMS              SETC  '&ZMS "SERVER_TOKEN"'                           00107200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00107300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00107400
.ZG8A             ANOP  ,                                               00107500
.*-------------------------------------------------------------------   00107600
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00107700
                  AIF   (K'&SERVER_TOKEN(1) LE 0).ZG8C  NO PARM         00107800
&ZXSERVER_TOKEN   SETC  'OUTPUT'    SET OUTPUT                          00107900
&XSERVER_TOKEN    SETC  '&SERVER_TOKEN(1)'      SET XVARIABLE           00108000
                  AIF   (N'&SERVER_TOKEN GT 1).ZG8C                     00108100
&XSERVER_TOKEN    SETC  '&SERVER_TOKEN'         SET XVARIABLE           00108200
.ZG8C             ANOP  ,                                               00108300
.*-------------------------------------------------------------------   00108400
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00108500
                  AIF   (K'&ZXSERVER_TOKEN LE 0).ZG8R  NOT I/O          00108600
                  AIF   ('&XSERVER_TOKEN'(1,1) NE '(').ZG8R             00108700
&ZCGPR            SETC  '&XSERVER_TOKEN'(2,K'&XSERVER_TOKEN-2)          00108800
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                     00108900
                  AIF   (K'&ZCGPR GT 2).ZG8Q                            00109000
                  AIF   ('&ZCGPR' EQ '0').ZG8Q                          00109100
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00109200
                  AIF   (T'&ZCGPR NE 'N').ZG8Q  INVALID REG NAME        00109300
.ZG8P             ANOP  ,                                               00109400
                  AIF   (T'&ZCGPR NE 'N').ZG8R  NON NUMERIC             00109500
                  AIF   ('&ZCGPR' LT '2').ZG8Q                          00109600
                  AIF   ('&ZCGPR' LE '12').ZG8R                         00109700
.ZG8Q             ANOP  ,                                               00109800
&ZMS              SETC  '"SERVER_TOKEN='        *KGPRA* MNOTE           00109900
&ZMS              SETC  '&ZMS.&SERVER_TOKEN"'                           00110000
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00110100
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00110200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00110300
.ZG8R             ANOP  ,                                               00110400
.*----------------------------------------------------------------***   00110500
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00110600
                  AIF   (N'&REGION_TOKEN LE 1).ZG11A  CK NUM            00110700
&ZMS              SETC  '"REGION_TOKEN='        *KPOSA* MNOTE           00110800
&ZMS              SETC  '&ZMS.&REGION_TOKEN"'                           00110900
&ZMS              SETC  '&ZMS "REGION_TOKEN"'                           00111000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00111100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00111200
.ZG11A            ANOP  ,                                               00111300
.*-------------------------------------------------------------------   00111400
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00111500
                  AIF   (K'&REGION_TOKEN(1) LE 0).ZG11C  NO PARM        00111600
&ZXREGION_TOKEN   SETC  'OUTPUT'    SET OUTPUT                          00111700
&XREGION_TOKEN    SETC  '&REGION_TOKEN(1)'      SET XVARIABLE           00111800
                  AIF   (N'&REGION_TOKEN GT 1).ZG11C                    00111900
&XREGION_TOKEN    SETC  '&REGION_TOKEN'         SET XVARIABLE           00112000
.ZG11C            ANOP  ,                                               00112100
.*-------------------------------------------------------------------   00112200
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00112300
                  AIF   (K'&ZXREGION_TOKEN LE 0).ZG11R  NOT I/O         00112400
                  AIF   ('&XREGION_TOKEN'(1,1) NE '(').ZG11R            00112500
&ZCGPR            SETC  '&XREGION_TOKEN'(2,K'&XREGION_TOKEN-2)          00112600
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                    00112700
                  AIF   (K'&ZCGPR GT 2).ZG11Q                           00112800
                  AIF   ('&ZCGPR' EQ '0').ZG11Q                         00112900
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00113000
                  AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME       00113100
.ZG11P            ANOP  ,                                               00113200
                  AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC            00113300
                  AIF   ('&ZCGPR' LT '2').ZG11Q                         00113400
                  AIF   ('&ZCGPR' LE '12').ZG11R                        00113500
.ZG11Q            ANOP  ,                                               00113600
&ZMS              SETC  '"REGION_TOKEN='        *KGPRA* MNOTE           00113700
&ZMS              SETC  '&ZMS.&REGION_TOKEN"'                           00113800
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00113900
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00114000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00114100
.ZG11R            ANOP  ,                                               00114200
.*----------------------------------------------------------------***   00114300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00114400
                  AIF   (N'&RETCODE LE 1).ZG14A  CK NUM                 00114500
&ZMS              SETC  '"RETCODE='             *KPOSA* MNOTE           00114600
&ZMS              SETC  '&ZMS.&RETCODE"'                                00114700
&ZMS              SETC  '&ZMS "RETCODE"'                                00114800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00114900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00115000
.ZG14A            ANOP  ,                                               00115100
.*-------------------------------------------------------------------   00115200
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00115300
                  AIF   (K'&RETCODE(1) LE 0).ZG14C  NO PARM             00115400
&ZXRETCODE        SETC  'OUTPUT'    SET OUTPUT                          00115500
&XRETCODE         SETC  '&RETCODE(1)'           SET XVARIABLE           00115600
                  AIF   (N'&RETCODE GT 1).ZG14C                         00115700
&XRETCODE         SETC  '&RETCODE'  SET XVARIABLE                       00115800
.ZG14C            ANOP  ,                                               00115900
.*-------------------------------------------------------------------   00116000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00116100
                  AIF   (K'&ZXRETCODE LE 0).ZG14R  NOT I/O              00116200
                  AIF   ('&XRETCODE'(1,1) NE '(').ZG14R                 00116300
&ZCGPR            SETC  '&XRETCODE'(2,K'&XRETCODE-2)                    00116400
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                    00116500
                  AIF   (K'&ZCGPR GT 2).ZG14Q                           00116600
                  AIF   ('&ZCGPR' EQ '0').ZG14Q                         00116700
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00116800
                  AIF   (T'&ZCGPR NE 'N').ZG14Q  INVALID REG NAME       00116900
.ZG14P            ANOP  ,                                               00117000
                  AIF   (T'&ZCGPR NE 'N').ZG14R  NON NUMERIC            00117100
                  AIF   ('&ZCGPR' LT '2').ZG14Q                         00117200
                  AIF   ('&ZCGPR' LE '12').ZG14R                        00117300
.ZG14Q            ANOP  ,                                               00117400
&ZMS              SETC  '"RETCODE='             *KGPRA* MNOTE           00117500
&ZMS              SETC  '&ZMS.&RETCODE"'                                00117600
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00117700
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00117800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00117900
.ZG14R            ANOP  ,                                               00118000
.*----------------------------------------------------------------***   00118100
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00118200
                  AIF   (N'&RSNCODE LE 1).ZG17A  CK NUM                 00118300
&ZMS              SETC  '"RSNCODE='             *KPOSA* MNOTE           00118400
&ZMS              SETC  '&ZMS.&RSNCODE"'                                00118500
&ZMS              SETC  '&ZMS "RSNCODE"'                                00118600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00118700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00118800
.ZG17A            ANOP  ,                                               00118900
.*-------------------------------------------------------------------   00119000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00119100
                  AIF   (K'&RSNCODE(1) LE 0).ZG17C  NO PARM             00119200
&ZXRSNCODE        SETC  'OUTPUT'    SET OUTPUT                          00119300
&XRSNCODE         SETC  '&RSNCODE(1)'           SET XVARIABLE           00119400
                  AIF   (N'&RSNCODE GT 1).ZG17C                         00119500
&XRSNCODE         SETC  '&RSNCODE'  SET XVARIABLE                       00119600
.ZG17C            ANOP  ,                                               00119700
.*-------------------------------------------------------------------   00119800
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00119900
                  AIF   (K'&ZXRSNCODE LE 0).ZG17R  NOT I/O              00120000
                  AIF   ('&XRSNCODE'(1,1) NE '(').ZG17R                 00120100
&ZCGPR            SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                    00120200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG17P                    00120300
                  AIF   (K'&ZCGPR GT 2).ZG17Q                           00120400
                  AIF   ('&ZCGPR' EQ '0').ZG17Q                         00120500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00120600
                  AIF   (T'&ZCGPR NE 'N').ZG17Q  INVALID REG NAME       00120700
.ZG17P            ANOP  ,                                               00120800
                  AIF   (T'&ZCGPR NE 'N').ZG17R  NON NUMERIC            00120900
                  AIF   ('&ZCGPR' LT '2').ZG17Q                         00121000
                  AIF   ('&ZCGPR' LE '12').ZG17R                        00121100
.ZG17Q            ANOP  ,                                               00121200
&ZMS              SETC  '"RSNCODE='             *KGPRA* MNOTE           00121300
&ZMS              SETC  '&ZMS.&RSNCODE"'                                00121400
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00121500
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00121600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00121700
.ZG17R            ANOP  ,                                               00121800
.******************************************************************     00121900
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00122000
.******************************************************************     00122100
                  ACTR  10000                                           00122200
.*----------------------------------------------------------------***   00122300
.***AH.P02 EXTRA POSITIONALS                                            00122400
                  AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS            00122500
                  AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL            00122600
                  AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL        00122700
                  AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL         00122800
.ZGLISTX1         ANOP  ,                                               00122900
&ZCVAL            SETC  ''          ERROR FIELD                         00123000
&ZAWRK            SETA  0           POSITIONAL NUMBER                   00123100
.ZGLIST2          ANOP  ,                                               00123200
&ZAWRK            SETA  &ZAWRK+1    NEXT POSITIONAL                     00123300
                  AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE            00123400
&ZCVAL            SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                 00123500
                  AGO   .ZGLIST2                                        00123600
.*                                                                      00123700
.ZGLIST3          ANOP  ,                                               00123800
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)   STRIP COMMA             00123900
&ZMS              SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE        00124000
&ZMS              SETC  '&ZMS "&ZCVAL"'                                 00124100
&ZMS              SETC  '&ZMS CANNOT BE USED.'                          00124200
&ZMS              SETC  '&ZMS NO POSITIONAL ARGUMENTS'                  00124300
                  MNOTE 8,' &ZMS ARE ALLOWED.'                          00124400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00124500
.ZGLISTX          ANOP  ,                                               00124600
&ZASYSLNDX        SETA  0                                               00124700
.*-------------------------------------------------------------------   00124800
.***AG.MF04 MF=(SLE)                                                    00124900
.ZGMFX            ANOP  ,           END OF FULL SYNTAX CHECK            00125000
.*******************************************************************    00125100
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00125200
.*******************************************************************    00125300
                  AIF   (&ZMACRET NE 0).ZLX2    ERROR DETECTED          00125400
.*******************************************************************    00125500
.***AE.01  START OF IWMSSEL MACRO CODE                                  00125600
.*******************************************************************    00125700
                  LCLC  &M0M0001                 NAME                   00125800
&M0M0001          SETC  '&XLABEL'                SET NAME               00125900
                  AIF   (K'&XLABEL NE 0).XLAB2                          00126000
&M0M0001          SETC  'M00M&SYSNDX'            DEFAULT NAME           00126100
.*                                                                      00126200
.XLAB2            ANOP  ,                                               00126300
                  AIF   ('&XMF' EQ 'L').XLAB3                           00126400
&M0M0001 DS    0H                             IWMSSEL-2                 00126500
.XLAB3            ANOP  ,                                               00126600
.*******************************************************************    00126700
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00126800
.*******************************************************************    00126900
              PUSH  PRINT                                               00127000
                  AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON      00127100
                  PRINT OFF         ++ PR01                             00127200
                  AGO   .ZPRNTXX                                        00127300
.ZPRINTX          PRINT ON                                              00127400
.ZPRNTXX          ANOP  ,                                               00127500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00127600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00127700
.********************************************************************   00127800
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00127900
.********************************************************************   00128000
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00128100
                      LCLA  &ZOPN1         INVOCATION INDEX             00128200
                      LCLC  &ZOPL(4095)    LABEL                        00128300
                      LCLC  &ZOPO(4095)    OPERATION                    00128400
                      LCLC  &ZOPV(4095)    VALUE                        00128500
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00128600
.*                                                                      00128700
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00128800
.******************************************************************     00128900
.***AL.L10 IWMSSEL FMT=LIST MF=S!L PARAMETERS                           00129000
.******************************************************************     00129100
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00129200
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00129300
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00129400
&XMFATTR              SETC  '0D'                                        00129500
.*                                                                      00129600
&ZOPN                 SETA  &ZOPN+1                                     00129700
&ZOPL(&ZOPN)          SETC  ' '                                         00129800
                      AIF   (&SYSALVL NE 0).ZALVL6A                     00129900
&ZOPO(&ZOPN)          SETC  'B'                                         00130000
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00130100
                      AGO   .ZALVL6B                                    00130200
.ZALVL6A              ANOP                                              00130300
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00130400
&ZOPV(&ZOPN)          SETC  '4,8'                                       00130500
&ZOPN                 SETA  &ZOPN+1                                     00130600
&ZOPL(&ZOPN)          SETC  ' '                                         00130700
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00130800
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00130900
.ZALVL6B              ANOP                                              00131000
&ZOPD(&ZOPN)          SETC  '++ IWMSSEL ARG PARMS'                      00131100
.*                                                                      00131200
&ZOPN                 SETA  &ZOPN+1                                     00131300
&ZOPL(&ZOPN)          SETC  ' '                                         00131400
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00131500
&ZOPV(&ZOPN)          SETC  '1'                                         00131600
&ZOPD(&ZOPN)          SETC  ' '                                         00131700
.*                                                                      00131800
.ZLMFSL2              ANOP  ,                                           00131900
.*-------------------------------------------------------------------   00132000
.***AM.L00  IWMSSEL FMT=LIST name                                       00132100
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00132200
&ZOPN                 SETA &ZOPN+1                                      00132300
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00132400
&ZOPO(&ZOPN)          SETC 'EQU'                                        00132500
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00132600
&ZOPD(&ZOPN)          SETC '++ IWMSSEL NAME'                            00132700
.ZLMFSL2M             ANOP  ,                                           00132800
.*-------------------------------------------------------------------   00132900
.***AM.L01  IWMSSEL FMT=LIST PARAMETERS                                 00133000
&ZOPN                 SETA &ZOPN+1                                      00133100
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00133200
&ZOPO(&ZOPN)          SETC 'DS'                                         00133300
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00133400
&ZOPD(&ZOPN)          SETC '++ IWMSSEL PARM LIST'                       00133500
.*-------------------------------------------------------------------   00133600
.***AM.L02 XVERSION XL1                                                 00133700
&ZOPN                 SETA &ZOPN+1                                      00133800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00133900
&ZOPO(&ZOPN)          SETC 'DS'                                         00134000
&ZOPV(&ZOPN)          SETC 'XL1'                                        00134100
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00134200
.*-------------------------------------------------------------------   00134300
.***AM.L09  XOPTIONS BL.8                                               00134400
&ZOPN                 SETA &ZOPN+1                                      00134500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOPTIONS'                         00134600
&ZOPO(&ZOPN)          SETC 'DS'                                         00134700
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00134800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XOPTIONS'                   00134900
.*-------------------------------------------------------------------   00135000
.***AM.L09  XPLISTLEN XL2                                               00135100
&ZOPN                 SETA &ZOPN+1                                      00135200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        00135300
&ZOPO(&ZOPN)          SETC 'DS'                                         00135400
&ZOPV(&ZOPN)          SETC 'XL2'                                        00135500
&ZOPD(&ZOPN)          SETC '++ INPUT  XPLISTLEN'                        00135600
.*-------------------------------------------------------------------   00135700
.***AM.L09  XUSERDATA CL16                                              00135800
&ZOPN                 SETA &ZOPN+1                                      00135900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUSERDATA'                        00136000
&ZOPO(&ZOPN)          SETC 'DS'                                         00136100
&ZOPV(&ZOPN)          SETC 'CL16'                                       00136200
&ZOPD(&ZOPN)          SETC '++ &ZXUSERDATA  XUSERDATA'                  00136300
.*-------------------------------------------------------------------   00136400
.***AM.L09  XWLMEUTKN CL8                                               00136500
&ZOPN                 SETA &ZOPN+1                                      00136600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XWLMEUTKN'                        00136700
&ZOPO(&ZOPN)          SETC 'DS'                                         00136800
&ZOPV(&ZOPN)          SETC 'CL8'                                        00136900
&ZOPD(&ZOPN)          SETC '++ &ZXWLMEUTKN  XWLMEUTKN'                  00137000
.*-------------------------------------------------------------------   00137100
.***AM.L09  XRSV001C CL8                                                00137200
&ZOPN                 SETA &ZOPN+1                                      00137300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV001C'                         00137400
&ZOPO(&ZOPN)          SETC 'DS'                                         00137500
&ZOPV(&ZOPN)          SETC 'CL8'                                        00137600
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV001C'                      00137700
.*-------------------------------------------------------------------   00137800
.***AM.L09  XRSV0024 CL4                                                00137900
&ZOPN                 SETA &ZOPN+1                                      00138000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0024'                         00138100
&ZOPO(&ZOPN)          SETC 'DS'                                         00138200
&ZOPV(&ZOPN)          SETC 'CL4'                                        00138300
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0024'                      00138400
.*-------------------------------------------------------------------   00138500
.***AM.MLM2 SAVED LOCATION COUNTER                                      00138600
                      AIF  (&XPLISTVER GE 1).ZL8LA                      00138700
                      AIF  ('&ZENDBASEPL' NE '').ZL8LA                  00138800
&ZENDBASEPL           SETC 'YES'                                        00138900
&ZOPN                 SETA &ZOPN+1                                      00139000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00139100
&ZOPO(&ZOPN)          SETC 'EQU'                                        00139200
&ZOPV(&ZOPN)          SETC '*'                                          00139300
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00139400
.ZL8LA                ANOP  ,                                           00139500
.*-------------------------------------------------------------------   00139600
.***AM.LVER1                                                            00139700
                      AIF  (&XPLISTVER LT 1).ZL8L                       00139800
.*-------------------------------------------------------------------   00139900
.*-------------------------------------------------------------------   00140000
.***AM.L09  XSERVER_TOKEN CL32                                          00140100
&ZOPN                 SETA &ZOPN+1                                      00140200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSERVER_TOKEN'                    00140300
&ZOPO(&ZOPN)          SETC 'DS'                                         00140400
&ZOPV(&ZOPN)          SETC 'CL32'                                       00140500
&ZOPD(&ZOPN)          SETC '++ &ZXSERVER_TOKEN  XSERVER_TOKEN'          00140600
.*-------------------------------------------------------------------   00140700
.***AM.LVER2                                                            00140800
.ZL8L                 ANOP  ,                                           00140900
.*-------------------------------------------------------------------   00141000
.*-------------------------------------------------------------------   00141100
.***AM.MLM2 SAVED LOCATION COUNTER                                      00141200
                      AIF  (&XPLISTVER GE 2).ZL9LA                      00141300
                      AIF  ('&ZENDBASEPL' NE '').ZL9LA                  00141400
&ZENDBASEPL           SETC 'YES'                                        00141500
&ZOPN                 SETA &ZOPN+1                                      00141600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00141700
&ZOPO(&ZOPN)          SETC 'EQU'                                        00141800
&ZOPV(&ZOPN)          SETC '*'                                          00141900
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00142000
.ZL9LA                ANOP  ,                                           00142100
.*-------------------------------------------------------------------   00142200
.***AM.LVER1                                                            00142300
                      AIF  (&XPLISTVER LT 2).ZL9L                       00142400
.*-------------------------------------------------------------------   00142500
.*-------------------------------------------------------------------   00142600
.***AM.L09  XREGION_TOKEN CL16                                          00142700
&ZOPN                 SETA &ZOPN+1                                      00142800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREGION_TOKEN'                    00142900
&ZOPO(&ZOPN)          SETC 'DS'                                         00143000
&ZOPV(&ZOPN)          SETC 'CL16'                                       00143100
&ZOPD(&ZOPN)          SETC '++ &ZXREGION_TOKEN  XREGION_TOKEN'          00143200
.*-------------------------------------------------------------------   00143300
.***AM.LVER2                                                            00143400
.ZL9L                 ANOP  ,                                           00143500
.*-------------------------------------------------------------------   00143600
.*-------------------------------------------------------------------   00143700
.***AM.L10 END OF IWMSSEL LIST PARAMETERS                               00143800
&ZOPN                 SETA &ZOPN+1                                      00143900
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00144000
&ZOPO(&ZOPN)          SETC 'EQU'                                        00144100
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00144200
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00144300
.*                                                                      00144400
&ZOPN                 SETA &ZOPN+1                                      00144500
&ZOPL(&ZOPN)          SETC ' '                                          00144600
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00144700
&ZOPV(&ZOPN)          SETC '1'                                          00144800
&ZOPD(&ZOPN)          SETC ' '                                          00144900
.*-------------------------------------------------------------------   00145000
.***AL.L12 IWMSSEL FMT=LIST MF=S!L PARAMETERS                           00145100
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00145200
.*                                                                      00145300
&ZOPN                 SETA  &ZOPN+1                                     00145400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00145500
&ZOPO(&ZOPN)          SETC  'DC'                                        00145600
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00145700
&ZOPD(&ZOPN)          SETC  '++ IWMSSEL ARG PARMS'                      00145800
.*                                                                      00145900
.ZLMFSLX              ANOP  ,                                           00146000
.*-------------------------------------------------------------------   00146100
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00146200
&ZPLLEN               SETA 40                                           00146300
.*                                                                      00146400
                      AIF  (&XPLISTVER LT 1).ZLLEN2Z                    00146500
&ZPLLEN               SETA 72                                           00146600
.ZLLEN2Z              ANOP  ,                                           00146700
.*                                                                      00146800
                      AIF  (&XPLISTVER LT 2).ZLLEN3Z                    00146900
&ZPLLEN               SETA 88                                           00147000
.ZLLEN3Z              ANOP  ,                                           00147100
.*                                                                      00147200
.******************************************************************     00147300
.***AI.L01 IWMSSEL FMT=LIST FILL IN PARAMETER AREA                      00147400
.******************************************************************     00147500
                      ACTR  10000                                       00147600
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00147700
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00147800
&ZCVAL                SETC  'LAE'          XAX MODE                     00147900
.ZIMFXA               ANOP ,                                            00148000
.*                                                                      00148100
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00148200
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00148300
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00148400
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00148500
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00148600
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00148700
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00148800
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00148900
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00149000
&ZOPN                 SETA  &ZOPN+1                                     00149100
&ZOPL(&ZOPN)          SETC  ' '                                         00149200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00149300
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00149400
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00149500
                      AGO   .ZIMFNX                                     00149600
.*                                                                      00149700
.ZIMFN2               ANOP ,                                            00149800
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     00149900
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00150000
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00150100
&ZOPN                 SETA  &ZOPN+1                                     00150200
&ZOPL(&ZOPN)          SETC  ' '                                         00150300
&ZOPO(&ZOPN)          SETC  'LAE'                                       00150400
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00150500
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00150600
                      AGO   .ZIMFNX                                     00150700
.ZIMFNX1              ANOP ,                                            00150800
&ZOPN                 SETA  &ZOPN+1                                     00150900
&ZOPL(&ZOPN)          SETC  ' '                                         00151000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00151100
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00151200
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00151300
.ZIMFNX               ANOP ,                                            00151400
.********************************************************************   00151500
.***AI.L02 IWMSSEL FMT=LIST INITIALIZE PARAMETER AREA                   00151600
.********************************************************************   00151700
.***AI.L03 MF=(SLE)                                                     00151800
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00151900
.*                                                                      00152000
&ZOPN                 SETA  &ZOPN+1                                     00152100
&ZOPL(&ZOPN)          SETC  ' '                                         00152200
&ZOPO(&ZOPN)          SETC  'XC'                                        00152300
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00152400
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00152500
.ZIMFLX               ANOP  ,                                           00152600
.*-------------------------------------------------------------------   00152700
.***AI.L04B XVERSION XL1                                                00152800
                      AIF   (&XPLISTVER EQ 0).ZIMFVZ                    00152900
&ZOPN                 SETA  &ZOPN+1                                     00153000
&ZOPL(&ZOPN)          SETC  ' '                                         00153100
&ZOPO(&ZOPN)          SETC  'MVI'                                       00153200
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00153300
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00153400
.ZIMFVZ               ANOP  ,                                           00153500
.*-------------------------------------------------------------------   00153600
.***AI.L04 XPLISTLEN XL2                                                00153700
&ZOPN                 SETA  &ZOPN+1                                     00153800
&ZOPL(&ZOPN)          SETC  ' '                                         00153900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00154000
&ZOPV(&ZOPN)          SETC  '2(2,1),=AL2(&ZPLLEN)'                      00154100
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    00154200
.*-------------------------------------------------------------------   00154300
&ZOPN1                SETA &ZOPN                                        00154400
.*******************************************************************    00154500
.***  PROCESS IWMSSEL OUTPUT PARAMETERS                                 00154600
.*******************************************************************    00154700
                      ACTR  10000                                       00154800
.*------------------------------------------------------------------    00154900
.***AO.L02 XUSERDATA CL16                                               00155000
         AIF   ('&ZXUSERDATA' EQ 'OUTPUT').ZO4A  OUTPUT                 00155100
         AIF   ('&ZXUSERDATA' NE 'INOUT').ZO4C  INOUT                   00155200
.ZO4A    AIF   ('&XUSERDATA'(1,1) NE '(').ZO4B  ADDR IN GPR             00155300
&ZCGPR   SETC  '&XUSERDATA'(2,K'&XUSERDATA-2)                           00155400
&ZOPN                 SETA  &ZOPN+1                                     00155500
&ZOPL(&ZOPN)          SETC  ' '                                         00155600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00155700
&ZOPV(&ZOPN)          SETC  '0(16,&ZCGPR),4(1)'                         00155800
&ZOPD(&ZOPN)          SETC  '++ XUSERDATA CL16'                         00155900
                      AGO   .ZO4C                                       00156000
.*                                                                      00156100
.ZO4B                 ANOP  ,                                           00156200
&ZAWRK   SETA  K'&XUSERDATA                                             00156300
         AIF   ('&XUSERDATA'(&ZAWRK,1) NE ')').ZO4G                     00156400
&ZN      SETA  2                                                        00156500
.ZO4H    ANOP                                                           00156600
         AIF   (&ZN GE &ZAWRK).ZO4G                                     00156700
         AIF   ('&XUSERDATA'(&ZN,1) NE '(').ZO4I                        00156800
&ZC      SETC  '&XUSERDATA'(1,&ZN).'16'.','                             00156900
&ZC      SETC  '&ZC'.'&XUSERDATA'(&ZN+1,&ZAWRK-&ZN).',4(1)'             00157000
         AGO   .ZO4J                                                    00157100
.ZO4I    ANOP                                                           00157200
&ZN      SETA  &ZN+1                                                    00157300
         AGO   .ZO4H                                                    00157400
.ZO4G    ANOP                                                           00157500
&ZC      SETC  '&XUSERDATA.(16),4(1)'                                   00157600
.ZO4J    ANOP                                                           00157700
&ZOPN                 SETA  &ZOPN+1                                     00157800
&ZOPL(&ZOPN)          SETC  ' '                                         00157900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00158000
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00158100
&ZOPD(&ZOPN)          SETC  '++ XUSERDATA CL16'                         00158200
.ZO4C                 ANOP  ,                                           00158300
.*------------------------------------------------------------------    00158400
.***AO.L02 XWLMEUTKN CL8                                                00158500
         AIF   ('&ZXWLMEUTKN' EQ 'OUTPUT').ZO5A  OUTPUT                 00158600
         AIF   ('&ZXWLMEUTKN' NE 'INOUT').ZO5C  INOUT                   00158700
.ZO5A    AIF   ('&XWLMEUTKN'(1,1) NE '(').ZO5B  ADDR IN GPR             00158800
&ZCGPR   SETC  '&XWLMEUTKN'(2,K'&XWLMEUTKN-2)                           00158900
&ZOPN                 SETA  &ZOPN+1                                     00159000
&ZOPL(&ZOPN)          SETC  ' '                                         00159100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00159200
&ZOPV(&ZOPN)          SETC  '0(8,&ZCGPR),20(1)'                         00159300
&ZOPD(&ZOPN)          SETC  '++ XWLMEUTKN CL8'                          00159400
                      AGO   .ZO5C                                       00159500
.*                                                                      00159600
.ZO5B                 ANOP  ,                                           00159700
&ZAWRK   SETA  K'&XWLMEUTKN                                             00159800
         AIF   ('&XWLMEUTKN'(&ZAWRK,1) NE ')').ZO5G                     00159900
&ZN      SETA  2                                                        00160000
.ZO5H    ANOP                                                           00160100
         AIF   (&ZN GE &ZAWRK).ZO5G                                     00160200
         AIF   ('&XWLMEUTKN'(&ZN,1) NE '(').ZO5I                        00160300
&ZC      SETC  '&XWLMEUTKN'(1,&ZN).'8'.','                              00160400
&ZC      SETC  '&ZC'.'&XWLMEUTKN'(&ZN+1,&ZAWRK-&ZN).',20(1)'            00160500
         AGO   .ZO5J                                                    00160600
.ZO5I    ANOP                                                           00160700
&ZN      SETA  &ZN+1                                                    00160800
         AGO   .ZO5H                                                    00160900
.ZO5G    ANOP                                                           00161000
&ZC      SETC  '&XWLMEUTKN.(8),20(1)'                                   00161100
.ZO5J    ANOP                                                           00161200
&ZOPN                 SETA  &ZOPN+1                                     00161300
&ZOPL(&ZOPN)          SETC  ' '                                         00161400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00161500
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00161600
&ZOPD(&ZOPN)          SETC  '++ XWLMEUTKN CL8'                          00161700
.ZO5C                 ANOP  ,                                           00161800
.*------------------------------------------------------------------    00161900
.***AO.LVER01                                                           00162000
                      AIF  (&XPLISTVER LT 1).ZO8Z  PLVER                00162100
.*------------------------------------------------------------------    00162200
.***AO.L02 XSERVER_TOKEN CL32                                           00162300
         AIF   ('&ZXSERVER_TOKEN' EQ 'OUTPUT').ZO8A  OUTPUT             00162400
         AIF   ('&ZXSERVER_TOKEN' NE 'INOUT').ZO8C  INOUT               00162500
.ZO8A    AIF   ('&XSERVER_TOKEN'(1,1) NE '(').ZO8B  ADDR IN GPR         00162600
&ZCGPR   SETC  '&XSERVER_TOKEN'(2,K'&XSERVER_TOKEN-2)                   00162700
&ZOPN                 SETA  &ZOPN+1                                     00162800
&ZOPL(&ZOPN)          SETC  ' '                                         00162900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00163000
&ZOPV(&ZOPN)          SETC  '0(32,&ZCGPR),40(1)'                        00163100
&ZOPD(&ZOPN)          SETC  '++ XSERVER_TOKEN CL32'                     00163200
                      AGO   .ZO8C                                       00163300
.*                                                                      00163400
.ZO8B                 ANOP  ,                                           00163500
&ZAWRK   SETA  K'&XSERVER_TOKEN                                         00163600
         AIF   ('&XSERVER_TOKEN'(&ZAWRK,1) NE ')').ZO8G                 00163700
&ZN      SETA  2                                                        00163800
.ZO8H    ANOP                                                           00163900
         AIF   (&ZN GE &ZAWRK).ZO8G                                     00164000
         AIF   ('&XSERVER_TOKEN'(&ZN,1) NE '(').ZO8I                    00164100
&ZC      SETC  '&XSERVER_TOKEN'(1,&ZN).'32'.','                         00164200
&ZC      SETC  '&ZC'.'&XSERVER_TOKEN'(&ZN+1,&ZAWRK-&ZN).',40(1)'        00164300
         AGO   .ZO8J                                                    00164400
.ZO8I    ANOP                                                           00164500
&ZN      SETA  &ZN+1                                                    00164600
         AGO   .ZO8H                                                    00164700
.ZO8G    ANOP                                                           00164800
&ZC      SETC  '&XSERVER_TOKEN.(32),40(1)'                              00164900
.ZO8J    ANOP                                                           00165000
&ZOPN                 SETA  &ZOPN+1                                     00165100
&ZOPL(&ZOPN)          SETC  ' '                                         00165200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00165300
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00165400
&ZOPD(&ZOPN)          SETC  '++ XSERVER_TOKEN CL32'                     00165500
.ZO8C                 ANOP  ,                                           00165600
.*------------------------------------------------------------------    00165700
.***AO.LVER02                                                           00165800
.ZO8Z                 ANOP  ,                                           00165900
.*------------------------------------------------------------------    00166000
.***AO.LVER01                                                           00166100
                      AIF  (&XPLISTVER LT 2).ZO9Z  PLVER                00166200
.*------------------------------------------------------------------    00166300
.***AO.L02 XREGION_TOKEN CL16                                           00166400
         AIF   ('&ZXREGION_TOKEN' EQ 'OUTPUT').ZO9A  OUTPUT             00166500
         AIF   ('&ZXREGION_TOKEN' NE 'INOUT').ZO9C  INOUT               00166600
.ZO9A    AIF   ('&XREGION_TOKEN'(1,1) NE '(').ZO9B  ADDR IN GPR         00166700
&ZCGPR   SETC  '&XREGION_TOKEN'(2,K'&XREGION_TOKEN-2)                   00166800
&ZOPN                 SETA  &ZOPN+1                                     00166900
&ZOPL(&ZOPN)          SETC  ' '                                         00167000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00167100
&ZOPV(&ZOPN)          SETC  '0(16,&ZCGPR),72(1)'                        00167200
&ZOPD(&ZOPN)          SETC  '++ XREGION_TOKEN CL16'                     00167300
                      AGO   .ZO9C                                       00167400
.*                                                                      00167500
.ZO9B                 ANOP  ,                                           00167600
&ZAWRK   SETA  K'&XREGION_TOKEN                                         00167700
         AIF   ('&XREGION_TOKEN'(&ZAWRK,1) NE ')').ZO9G                 00167800
&ZN      SETA  2                                                        00167900
.ZO9H    ANOP                                                           00168000
         AIF   (&ZN GE &ZAWRK).ZO9G                                     00168100
         AIF   ('&XREGION_TOKEN'(&ZN,1) NE '(').ZO9I                    00168200
&ZC      SETC  '&XREGION_TOKEN'(1,&ZN).'16'.','                         00168300
&ZC      SETC  '&ZC'.'&XREGION_TOKEN'(&ZN+1,&ZAWRK-&ZN).',72(1)'        00168400
         AGO   .ZO9J                                                    00168500
.ZO9I    ANOP                                                           00168600
&ZN      SETA  &ZN+1                                                    00168700
         AGO   .ZO9H                                                    00168800
.ZO9G    ANOP                                                           00168900
&ZC      SETC  '&XREGION_TOKEN.(16),72(1)'                              00169000
.ZO9J    ANOP                                                           00169100
&ZOPN                 SETA  &ZOPN+1                                     00169200
&ZOPL(&ZOPN)          SETC  ' '                                         00169300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00169400
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00169500
&ZOPD(&ZOPN)          SETC  '++ XREGION_TOKEN CL16'                     00169600
.ZO9C                 ANOP  ,                                           00169700
.*------------------------------------------------------------------    00169800
.***AO.LVER02                                                           00169900
.ZO9Z                 ANOP  ,                                           00170000
.*******************************************************************    00170100
.***AO.X02  RETURN CODE PROCESSING                                      00170200
.*******************************************************************    00170300
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00170400
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00170500
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00170600
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00170700
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00170800
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00170900
&ZOPN                 SETA  &ZOPN+1                                     00171000
&ZOPL(&ZOPN)          SETC  ' '                                         00171100
&ZOPO(&ZOPN)          SETC  'ST'                                        00171200
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00171300
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00171400
                      AGO   .ZMRETX                                     00171500
.*                                                                      00171600
.ZMRET2               ANOP  ,                                           00171700
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00171800
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00171900
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00172000
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00172100
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00172200
&ZOPN                 SETA  &ZOPN+1                                     00172300
&ZOPL(&ZOPN)          SETC  ' '                                         00172400
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00172500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00172600
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00172700
.ZMRETX               ANOP  ,                                           00172800
.*******************************************************************    00172900
.***AO.X03  REASON CODE PROCESSING                                      00173000
.*******************************************************************    00173100
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00173200
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00173300
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00173400
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00173500
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00173600
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00173700
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00173800
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00173900
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00174000
&ZOPN                 SETA  &ZOPN+1                                     00174100
&ZOPL(&ZOPN)          SETC  ' '                                         00174200
&ZOPO(&ZOPN)          SETC  'ST'                                        00174300
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00174400
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00174500
                      AGO   .ZMRSNX                                     00174600
.*                                                                      00174700
.ZMRSN2               ANOP  ,                                           00174800
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00174900
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00175000
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00175100
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00175200
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00175300
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00175400
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00175500
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00175600
&ZOPN                 SETA  &ZOPN+1                                     00175700
&ZOPL(&ZOPN)          SETC  ' '                                         00175800
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00175900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00176000
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00176100
.ZMRSNX               ANOP  ,                                           00176200
.*******************************************************************    00176300
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00176400
.*******************************************************************    00176500
.ZMFLX                ANOP  ,              MF=L PROCESSING              00176600
.*******************************************************************    00176700
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00176800
.*******************************************************************    00176900
                      ACTR  10000                                       00177000
.*                                                                      00177100
                      LCLA  &ZLC           COLUMN POSITION              00177200
                      LCLA  &ZOPX          LIST TABLE INDEX             00177300
                      LCLC  &ZLL           LABEL                        00177400
                      LCLC  &ZLOP          OPERATION                    00177500
                      LCLC  &ZLV           VALUE                        00177600
                      LCLC  &ZLD           DESCRIPTION                  00177700
.*                                                                      00177800
&ZOPX                 SETA  1                                           00177900
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00178000
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00178100
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00178200
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00178300
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00178400
                      AIF   (K'&ZLD LE 0).ZL5                           00178500
&ZLC                  SETA  35             COMMENT COLUMN               00178600
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00178700
&ZLC                  SETA  33             COMMMENT COLUMN              00178800
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00178900
&ZLV                  SETC  '&ZLV'.' '                                  00179000
                      AGO   .ZL3                                        00179100
.*                                                                      00179200
.ZL4                  ANOP  ,                                           00179300
&ZLV                  SETC  '&ZLV'.' '                                  00179400
.ZL5                  ANOP  ,                                           00179500
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00179600
.*                                                                      00179700
&ZLL     &ZLOP &ZLV                                                     00179800
.*                                                                      00179900
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00180000
                      AGO   .ZL2           CONTINUE LOOPING             00180100
.*                                                                      00180200
.ZLX                  ANOP  ,                                           00180300
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00180400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00180500
         L     14,16(0,0)              GET CVT ADDRESS                  00180600
         L     14,772(14,0)            GET SFT ADDRESS                  00180700
         L     14,380(14,0)            GET LX FOR SERVICE ROUTINE       00180800
         LA    15,42                   GET EX FOR SERVICE ROUTINE       00180900
         OR    14,15                   GET PC NUMBER                    00181000
         PC    0(14)                                                    00181100
END&SYSNDX DS    0H                    END LABEL                        00181200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00181300
.ZLINKX               ANOP  ,                                           00181400
.*******************************************************************    00181500
.***AP.X01  FORMAT GENERATED CODE                                       00181600
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00181700
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00181800
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00181900
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00182000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00182100
                      AIF   (K'&ZLD LE 0).ZL51                          00182200
&ZLC                  SETA  35             COMMENT COLUMN               00182300
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00182400
&ZLC                  SETA  33             COMMENT COLUMN               00182500
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00182600
&ZLV                  SETC  '&ZLV'.' '                                  00182700
                      AGO   .ZL31                                       00182800
.*                                                                      00182900
.ZL41                 ANOP  ,                                           00183000
&ZLV                  SETC  '&ZLV'.' '                                  00183100
.ZL51                 ANOP  ,                                           00183200
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00183300
.*                                                                      00183400
&ZLL     &ZLOP &ZLV                                                     00183500
.*                                                                      00183600
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00183700
                      AGO   .ZL21          CONTINUE LOOPING             00183800
.*                                                                      00183900
.ZLX1                 ANOP  ,                                           00184000
.*******************************************************************    00184100
.***AP.X02  END OF IWMSSEL MACRO                                        00184200
&ZIWMSSEL             SETC  'YES'          SET IWMSSEL USED             00184300
         POP   PRINT                                                    00184400
*                                            IWMSSEL-2                  00184500
         SPACE 1                                                        00184600
.ZLX2                 ANOP  ,                                           00184700
         MEND                                                           00184800
**********************************************************************/ 00184900
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00185000
*%IWMSSEL: MACRO KEYS(USERDATA,WLMEUTKN,SERVER_TOKEN,REGION_TOKEN,      00185100
*                 RETCODE,RSNCODE,PLISTVER,MF);                         00185200
*  ANS('?'!!MACLABEL!!' '!!'IWMSSELP '!!MACLIST!!                       00185300
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00185400
*%END IWMSSEL;                                                          00185500
