*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXCMSGI                               -01/13/18-<3> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  XCF Message In                                * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5694-A01 COPYRIGHT IBM CORP. 1993, 2010                         * 00001200
*                                                                     * 00001300
* STATUS= HBB7770                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      Note:  IBM suggests using the IXCMSGIX macro interface for XCF * 00002100
*      Message-In service requests. IXCMSGIX contains functions that  * 00002200
*      this macro interface does not have.                            * 00002300
*                                                                     * 00002400
*      The IXCMSGI macro is the interface to the Cross System         * 00002500
*      Coupling Facility (XCF) Message-In service.  The Message-In    * 00002600
*      service copies message data from XCF managed storage into a    * 00002700
*      user specified storage area.  The Message-In service can only  * 00002800
*      be invoked from within a message exit routine or a notify exit * 00002900
*      routine that received control from XCF, and then only for the  * 00003000
*      message(s) identified in the parameter list passed to the exit * 00003100
*      routine.                                                       * 00003200
*                                                                     * 00003300
*      A message exit routine is given control to process a message   * 00003400
*      sent by another active member of the same group.  The message  * 00003500
*      exit routine defined by a member when it joined (IXCJOIN) an   * 00003600
*      XCF group is given control by XCF when a message is ready for  * 00003700
*      delivery.  This message exit routine may invoke the Message-In * 00003800
*      service to receive the message data. ,                         * 00003900
*                                                                     * 00004000
*      A notify exit routine is given control to process signalling   * 00004100
*      related events.  One such event is the completion of a         * 00004200
*      Message-Out request for which the sender requested that XCF    * 00004300
*      manage response collection for the message.  The notify exit   * 00004400
*      routine to process such a completion was identified by the     * 00004500
*      sender when the Message-Out service was invoked.  For such an  * 00004600
*      event, the notify exit routine can invoke the Message-In       * 00004700
*      service to receive the message data for each response that was * 00004800
*      gathered.                                                      * 00004900
*                                                                     * 00005000
*      The Message-In routine is given control from the IXCMSGI       * 00005100
*      macro.  The Message-In macro will complete the parameter list  * 00005200
*      with caller provided data and generate a stacking, space       * 00005300
*      switching, program call to the Message-In service.  The        * 00005400
*      Message-In macro is provided in list and execute form.  The    * 00005500
*      list form accepts no variable parameters and is used only to   * 00005600
*      reserve space for the Message-In parameter list.  The execute  * 00005700
*      form is provided for use with the list format for reentrant    * 00005800
*      routines.  The Message-In macro is provided in PL/AS and       * 00005900
*      assembler formats.                                             * 00006000
*                                                                     * 00006100
*      The parameter list must be located in the caller's primary     * 00006200
*      address space.                                                 * 00006300
*                                                                     * 00006400
*                                                                     * 00006500
*                                                                     * 00006600
*      INPUT REGISTERS:                                               * 00006700
*                                                                     * 00006800
*                                                                     * 00006900
*                          GR0-GR1     reserved                       * 00007000
*                                                                     * 00007100
*                          GR2-GR13    undefined                      * 00007200
*                                                                     * 00007300
*                          GR14-GR15   reserved                       * 00007400
*                                                                     * 00007500
*                          AR0-AR1     reserved                       * 00007600
*                                                                     * 00007700
*                          AR2-AR13    undefined                      * 00007800
*                                                                     * 00007900
*                          AR14-AR15   reserved                       * 00008000
*                                                                     * 00008100
*                                                                     * 00008200
*                                                                     * 00008300
*      OUTPUT ENVIRONMENT: Same as on entry                           * 00008400
*                                                                     * 00008500
*      OUTPUT REGISTERS:                                              * 00008600
*                                                                     * 00008700
*                                                                     * 00008800
*                          GR0         Reason code based on GR15 when * 00008900
*                                      applicable                     * 00009000
*                                                                     * 00009100
*                          GR1         used as work register by the   * 00009200
*                                      system                         * 00009300
*                                                                     * 00009400
*                          GR2-GR13    unchanged                      * 00009500
*                                                                     * 00009600
*                          GR14        used as work register by the   * 00009700
*                                      system                         * 00009800
*                                                                     * 00009900
*                          GR15        return code                    * 00010000
*                                                                     * 00010100
*                          AR0-AR1     used as work registers by the  * 00010200
*                                      system                         * 00010300
*                                                                     * 00010400
*                          AR2-AR13    unchanged                      * 00010500
*                                                                     * 00010600
*                          AR14-AR15   used as work registers by the  * 00010700
*                                      system                         * 00010800
*                                                                     * 00010900
*                                                                     * 00011000
*                                                                     * 00011100
*                                                                     * 00011200
*                                                                     * 00011300
*01* EXTERNAL CLASSIFICATION:                                         * 00011400
*                                                                     * 00011500
*02* GUPI: BASE                                                       * 00011600
*                                                                     * 00011700
*02* NONE: FIELDS                                                     * 00011800
*          LINKAGE                                                    * 00011900
*          XCFDATA                                                    * 00012000
*                                                                     * 00012100
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00012200
*                                                                     * 00012300
*01* ENVIRONMENT:                                                     * 00012400
*                                                                     * 00012500
*                                                                     * 00012600
*      Dispatchable unit mode: Task or SRB mode.                      * 00012700
*                                                                     * 00012800
*                        Note that the XCF Message-In service may     * 00012900
*                        only be invoked from a message exit routine  * 00013000
*                        or a notify exit routine.                    * 00013100
*                                                                     * 00013200
*      Minimum authorization: Supervisor state or PKM allowing keys   * 00013300
*                        0-7.                                         * 00013400
*                                                                     * 00013500
*      AMODE:            31-bit.                                      * 00013600
*                                                                     * 00013700
*      ASC mode:         Primary or Access Register.                  * 00013800
*                                                                     * 00013900
*                        If in Access Register ASC mode, specify      * 00014000
*                        SYSSTATE ASCENV=AR before invoking this      * 00014100
*                        macro.                                       * 00014200
*                                                                     * 00014300
*                        Primary equal to the requesting member's     * 00014400
*                        primary at the time the group was joined;    * 00014500
*                        any secondary address space; home address    * 00014600
*                        space equal to the requesting member's       * 00014700
*                        primary                                      * 00014800
*                                                                     * 00014900
*                        Swappable or non-swappable primary address   * 00015000
*                        space                                        * 00015100
*                                                                     * 00015200
*      Serialization:                                                 * 00015300
*                                                                     * 00015400
*                        Enabled for I/O and external interrupts      * 00015500
*                                                                     * 00015600
*                        No locks held                                * 00015700
*                                                                     * 00015800
*                                                                     * 00015900
*                                                                     * 00016000
*01* SYNTAX:                                                          * 00016100
*                                                                     * 00016200
*Ýxlabel¨  IXCMSGI  Ð  TOKEN=xtoken                                   * 00016300
*                   ¿ ,MSGTOKEN=xmsgtoken                             * 00016400
*                   ÐÝ,MULTIPART=NO                                   * 00016500
*                   !     ,MSGBUF=xmsgbuf¨                            * 00016600
*                   ¿Ý,MULTIPART=YES                                  * 00016700
*                        Ý,#MSGPARTS=»x#msgparts!AS_NEEDEDº¨          * 00016800
*                         ,ELEMENT=xelement                           * 00016900
*                       Ð ,ELEMFORM=TABLE                             * 00017000
*                       !     ,NEXTOFF=xnextoff                       * 00017100
*                       ¿ ,ELEMFORM=QUEUE                             * 00017200
*                             ,NEXTPTROFF=xnextptroff                 * 00017300
*                            Ý,ENDOFQUEUE=»xendofqueue!ZEROº¨         * 00017400
*                       Ð ,PARTOFF=xpartoff                           * 00017500
*                       ¿ ,PARTPTROFF=xpartptroff                     * 00017600
*                           ÐÝ,PARTALET=»xpartalet!ZEROº              * 00017700
*                           Ô ,PARTALETOFF=»xpartaletoffº             * 00017800
*                           ¿ ,PARTALETTBL=»xpartalettblº¨            * 00017900
*                       Ð ,PARTLEN=xpartlen                           * 00018000
*                       Ô ,PARTLENOFF=xpartlenoff                     * 00018100
*                       ¿ ,PARTLENTBL=xpartlentbl¨                    * 00018200
*                    Ý,MSGSTGKEY=»xmsgstgkey!JOINKEYº¨                * 00018300
*                   ÐÝ,LINKAGE=SYSTEM¨                                * 00018400
*                   ¿Ý,LINKAGE=INTERNAL                               * 00018500
*                         ,XCFDATA=xxcfdata¨                          * 00018600
*                    Ý,RETCODE=xretcode¨                              * 00018700
*                    Ý,RSNCODE=xrsncode¨                              * 00018800
*                    Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨          * 00018900
*                   ÐÝ,MF=S¨                                          * 00019000
*                   ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                   * 00019100
*                   ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                     * 00019200
*                                                                     * 00019300
*                                                                     * 00019400
*      Where:                                                         * 00019500
*                                                                     * 00019600
*                                                                     * 00019700
*      Ýxlabel¨                                                       * 00019800
*          is an optional symbol, starting in column 1, that is the   * 00019900
*          name on the IXCMSGI macro invocation.  The name must       * 00020000
*          conform to the rules for an ordinary assembler language    * 00020100
*          symbol.                                                    * 00020200
*          DEFAULT: No name.                                          * 00020300
*                                                                     * 00020400
*                                                                     * 00020500
*                                                                     * 00020600
*                                                                     * 00020700
*      The following is a set of mutually exclusive keys.  This set   * 00020800
*      is required; only one key must be specified.                   * 00020900
*                                                                     * 00021000
*                                                                     * 00021100
*      TOKEN=xtoken                                                   * 00021200
*          belongs to a set of mutually exclusive keys. It is the     * 00021300
*          name (RS-type), or address in register (2)-(12), of a 16   * 00021400
*          character input variable which contains a token to         * 00021500
*          identify the message whose message data is to be           * 00021600
*          delivered.                                                 * 00021700
*                                                                     * 00021800
*          The value passed as TOKEN is either the token              * 00021900
*          (MeplMsgiToken) for a message presented to a message exit  * 00022000
*          routine, or the token (MnplTrMsgiToken) for a response     * 00022100
*          message presented to a notify exit routine.  On entry to a * 00022200
*          message exit routine, R1 contains the address of the       * 00022300
*          Message Exit Parameter List (IXCYMEPL) that contains the   * 00022400
*          token.  On entry to a notify exit routine, R1 contains the * 00022500
*          address of the Message Notification Parameter List         * 00022600
*          (IXCYMNPL) that contains the token(s).  Such tokens are    * 00022700
*          valid inputs to the message-in service while the exit      * 00022800
*          routine is in control.                                     * 00022900
*                                                                     * 00023000
*      MSGTOKEN=xmsgtoken                                             * 00023100
*          belongs to a set of mutually exclusive keys. It is the     * 00023200
*          name (RS-type), or address in register (2)-(12), of a 32   * 00023300
*          bit input variable which contains the message token        * 00023400
*          (MEPLMTOK) from the Message Exit Parameter List (IXCYMEPL) * 00023500
*          that was pointed to by GR1 when the message exit was given * 00023600
*          control.  Note that this is a *message* token, not a       * 00023700
*          member token.                                              * 00023800
*                                                                     * 00023900
*          This keyword is provided for compatibility with message    * 00024000
*          exit routines that must execute on systems running         * 00024100
*          releases of MVS prior to JBB6602.  As of MVS JBB6602, the  * 00024200
*          keyword TOKEN should be used instead.                      * 00024300
*                                                                     * 00024400
*          The message token is valid only while the unit of work     * 00024500
*          that gave control to the message exit routine is running.  * 00024600
*                                                                     * 00024700
*                                                                     * 00024800
*                                                                     * 00024900
*      End of a set of mutually exclusive required keys.              * 00025000
*                                                                     * 00025100
*                                                                     * 00025200
*                                                                     * 00025300
*      ÝMULTIPART=»NO!YESº                                            * 00025400
*          is an optional keyword input indicating whether or not the * 00025500
*          message data is to be received into more than one buffer   * 00025600
*          area.                                                      * 00025700
*          DEFAULT: NO                                                * 00025800
*                                                                     * 00025900
*                                                                     * 00026000
*          ÝMULTIPART=NO                                              * 00026100
*              indicates that the message data is to be received into * 00026200
*              one contiguous buffer area.                            * 00026300
*                                                                     * 00026400
*                                                                     * 00026500
*              MSGBUF=xmsgbuf¨                                        * 00026600
*                  is the name (RS-type), or address in register      * 00026700
*                  (2)-(12), of a required character input buffer     * 00026800
*                  area which is to contain the message being         * 00026900
*                  delivered.  The buffer area must be at least as    * 00027000
*                  long as the MEPLMLEN value contained in the        * 00027100
*                  Message Exit Parameter List (IXCYMEPL) pointed to  * 00027200
*                  by GR1 when the message exit was given control.    * 00027300
*                                                                     * 00027400
*                  The buffer area must either reside in the caller's * 00027500
*                  primary address space, or in a space that is       * 00027600
*                  accessible via a public entry on the caller's      * 00027700
*                  Dispatchable Unit Access List (DU-AL), or in a     * 00027800
*                  common area data space.                            * 00027900
*                                                                     * 00028000
*                  The storage key of the buffer area must match the  * 00028100
*                  storage protect key indicated by the MSGSTGKEY     * 00028200
*                  keyword.                                           * 00028300
*                                                                     * 00028400
*                                                                     * 00028500
*                                                                     * 00028600
*          ÝMULTIPART=YES                                             * 00028700
*              indicates that the message data is to be received into * 00028800
*              one or more buffer areas.                              * 00028900
*                                                                     * 00029000
*              The message parts and the buffer areas to receive them * 00029100
*              are described by elements.  The Message-In service     * 00029200
*              scatters the message data to the indicated buffer      * 00029300
*              areas, thereby breaking the message data into one or   * 00029400
*              more parts.  Processing each element consecutively,    * 00029500
*              the Message-In service moves message data into a       * 00029600
*              buffer area until the part is complete or no message   * 00029700
*              data remains.  A part is complete when the number of   * 00029800
*              bytes of message data moved into the buffer area       * 00029900
*              equals the length of the part.  If there is not enough * 00030000
*              message data to complete a part, the remaining space   * 00030100
*              in the part as well as any remaining parts, remains    * 00030200
*              unchanged.  When a part is complete and message data   * 00030300
*              remains, the next element, if any, is used to scatter  * 00030400
*              the message data into another buffer area.             * 00030500
*                                                                     * 00030600
*              If the number of bytes of message data available       * 00030700
*              exceeds the sum of the lengths of the parts, as much   * 00030800
*              message data as will fit in the parts is returned to   * 00030900
*              the caller.  The receiving member can, from within the * 00031000
*              currently executing instance of the message exit,      * 00031100
*              reissue the Message-In service to receive the          * 00031200
*              remainder of the message.                              * 00031300
*                                                                     * 00031400
*              The scattering of message data into the indicated      * 00031500
*              parts ends when one of the following conditions is     * 00031600
*              met:                                                   * 00031700
*                                                                     * 00031800
*                                                                     * 00031900
*              o   No more message data remains                       * 00032000
*                                                                     * 00032100
*              o   Specified number of message parts processed        * 00032200
*                                                                     * 00032300
*              o   End of queue of elements reached                   * 00032400
*                                                                     * 00032500
*              o   Number of message parts was not specified and more * 00032600
*                  than 65,536 zero length parts processed            * 00032700
*                  consecutively (message data is not returned for    * 00032800
*                  this case)                                         * 00032900
*                                                                     * 00033000
*                                                                     * 00033100
*                                                                     * 00033200
*              Message parts will overlay each other if the buffer    * 00033300
*              areas that receive those parts overlap.                * 00033400
*                                                                     * 00033500
*                                                                     * 00033600
*              Ý#MSGPARTS=»x#msgparts!AS_NEEDEDº¨                     * 00033700
*                  is the name (RS-type), or address in register      * 00033800
*                  (2)-(12), of an optional fullword input containing * 00033900
*                  the number of message parts into which the message * 00034000
*                  data is to be scattered.  If specified, the number * 00034100
*                  of message parts must be greater than zero.  At    * 00034200
*                  most #MSGPARTS part elements will be processed.    * 00034300
*                  Usually specified when the invoker does not intend * 00034400
*                  to receive all the available message data.         * 00034500
*                                                                     * 00034600
*                  If #MSGPARTS is not coded and more than 65,536     * 00034700
*                  zero length parts are processed consecutively, the * 00034800
*                  Message-In service returns to the caller with a    * 00034900
*                  failure indicating that progress could not be      * 00035000
*                  made.  This lack of progress could be caused by a  * 00035100
*                  circular queue of elements.                        * 00035200
*                                                                     * 00035300
*                  DEFAULT: AS_NEEDED                                 * 00035400
*                                                                     * 00035500
*                                                                     * 00035600
*                                                                     * 00035700
*                                                                     * 00035800
*              ELEMENT=xelement                                       * 00035900
*                  is the name (RS-type), or address in register      * 00036000
*                  (2)-(12), of a required character input area which * 00036100
*                  is the first element containing the data that      * 00036200
*                  describes the parts of the message.  The           * 00036300
*                  Message-In service scatters the message into       * 00036400
*                  various parts based on information provided by     * 00036500
*                  these elements.                                    * 00036600
*                                                                     * 00036700
*                  The elements can be structured either as a table   * 00036800
*                  or as a queue.  The elements must either reside in * 00036900
*                  the caller's primary address space, or in a space  * 00037000
*                  that is accessible via a public entry on the       * 00037100
*                  caller's Dispatchable Unit Access List (DU-AL), or * 00037200
*                  in a common area data space.  All the elements     * 00037300
*                  must reside in the same space so that a single     * 00037400
*                  ALET can be used to access them.  The keyword      * 00037500
*                  ELEMENT identifies the first element to be         * 00037600
*                  processed.  The i'th element describes the i'th    * 00037700
*                  message part.  The location of the next element is * 00037800
*                  indicated by the keyword NEXTOFF (for tables) or   * 00037900
*                  NEXTPTROFF (for queues).                           * 00038000
*                                                                     * 00038100
*                  The caller is responsible for maintaining the      * 00038200
*                  integrity of the element structure until the       * 00038300
*                  Message-In service returns.  If the elements or    * 00038400
*                  their structure change while being processed by    * 00038500
*                  the Message-In service, the message data actually  * 00038600
*                  received may be corrupted (missing, replicated, or * 00038700
*                  out of order).                                     * 00038800
*                                                                     * 00038900
*                  Each element describes a buffer area that is to    * 00039000
*                  receive a part of the message.  The keyword        * 00039100
*                  PARTOFF or PARTPTROFF is used to indicate whether  * 00039200
*                  the element contains the buffer area or a pointer  * 00039300
*                  to the buffer area.                                * 00039400
*                                                                     * 00039500
*                  The length in bytes of each part is indicated by   * 00039600
*                  the keyword PARTLENTBL, PARTLEN, or PARTLENOFF.    * 00039700
*                  PARTLENTBL is used when the part lengths are       * 00039800
*                  contained in a separately addressable table.       * 00039900
*                  PARTLEN is used when each part has the same        * 00040000
*                  length.  PARTLENOFF is used when the element       * 00040100
*                  itself contains the length of the part that it     * 00040200
*                  describes.  The buffer area into which the text of * 00040300
*                  the message part is to be stored must be at least  * 00040400
*                  as long as the corresponding part length.          * 00040500
*                                                                     * 00040600
*                  The PARTALETTBL, PARTALET, or PARTALETOFF keyword  * 00040700
*                  can further qualify the address of each buffer     * 00040800
*                  area when the elements contain a pointer to the    * 00040900
*                  buffer area that is to receive the message part    * 00041000
*                  (PARTPTROFF).  PARTALETTBL is used when the ALETs  * 00041100
*                  of the buffer areas for the parts are contained in * 00041200
*                  a separately addressable table.  PARTALET is used  * 00041300
*                  when the buffer area for each part has the same    * 00041400
*                  ALET.  PARTALETOFF is used when the element itself * 00041500
*                  contains the ALET of the buffer area for the part  * 00041600
*                  that it describes.                                 * 00041700
*                                                                     * 00041800
*                  If the text of the message part is to be stored    * 00041900
*                  within the element (PARTOFF), the ALET that        * 00042000
*                  qualifies the address of the buffer area is the    * 00042100
*                  ALET that qualifies the address of the element.    * 00042200
*                                                                     * 00042300
*                  The storage key of each buffer area must match the * 00042400
*                  storage protect key indicated by the MSGSTGKEY     * 00042500
*                  keyword.                                           * 00042600
*                                                                     * 00042700
*                                                                     * 00042800
*                                                                     * 00042900
*                                                                     * 00043000
*              ELEMFORM=»TABLE!QUEUEº¨                                * 00043100
*                  is a required keyword input indicating whether the * 00043200
*                  elements describing the message parts are          * 00043300
*                  structured as a table or as a queue.               * 00043400
*                                                                     * 00043500
*                                                                     * 00043600
*                  ELEMFORM=TABLE                                     * 00043700
*                      indicates that the elements describing the     * 00043800
*                      message parts are structured as a table.       * 00043900
*                                                                     * 00044000
*                      Processing of the elements concludes when all  * 00044100
*                      available message data has been scattered or   * 00044200
*                      all the message parts have been processed      * 00044300
*                      (#MSGPARTS).                                   * 00044400
*                                                                     * 00044500
*                                                                     * 00044600
*                      NEXTOFF=xnextoff                               * 00044700
*                          is the name (RS-type), or address in       * 00044800
*                          register (2)-(12), of a required fullword  * 00044900
*                          input that indicates, in bytes, the        * 00045000
*                          relative location of the next element in   * 00045100
*                          the table.  The next element is located by * 00045200
*                          adding the indicated value to the location * 00045300
*                          of the current element.  Typically this    * 00045400
*                          value equals the number of bytes in one    * 00045500
*                          table entry.                               * 00045600
*                                                                     * 00045700
*                                                                     * 00045800
*                                                                     * 00045900
*                  ELEMFORM=QUEUE                                     * 00046000
*                      indicates that the elements describing the     * 00046100
*                      message parts are structured as a queue.       * 00046200
*                                                                     * 00046300
*                      Processing of the elements concludes when all  * 00046400
*                      available message data has been scattered, or  * 00046500
*                      all the message parts have been processed      * 00046600
*                      (ENDOFQUEUE or #MSGPARTS).                     * 00046700
*                                                                     * 00046800
*                                                                     * 00046900
*                      NEXTPTROFF=xnextptroff                         * 00047000
*                          is the name (RS-type), or address in       * 00047100
*                          register (2)-(12), of a required fullword  * 00047200
*                          input containing the number of bytes to    * 00047300
*                          offset within an element in order to       * 00047400
*                          locate a PTR(31) field that contains the   * 00047500
*                          address of the next element.  This keyword * 00047600
*                          is used when the elements are structured   * 00047700
*                          as a queue, in which case it provides the  * 00047800
*                          location of the pointer to the next        * 00047900
*                          element.  May be required if the invoker   * 00048000
*                          does not intend to receive all the         * 00048100
*                          available message data.                    * 00048200
*                                                                     * 00048300
*                                                                     * 00048400
*                                                                     * 00048500
*                                                                     * 00048600
*                      ÝENDOFQUEUE=»xendofqueue!ZEROº¨                * 00048700
*                          is the name (RS-type), or address in       * 00048800
*                          register (2)-(12), of an optional 4 byte   * 00048900
*                          input that contains the address which      * 00049000
*                          denotes the end of the queue.  When the    * 00049100
*                          next element pointer located at offset     * 00049200
*                          NEXTPTROFF equals this value, no more      * 00049300
*                          elements remain and scattering of the      * 00049400
*                          message data into parts ends.              * 00049500
*                          DEFAULT: ZERO                              * 00049600
*                                                                     * 00049700
*                                                                     * 00049800
*                                                                     * 00049900
*                                                                     * 00050000
*                                                                     * 00050100
*                                                                     * 00050200
*                                                                     * 00050300
*                                                                     * 00050400
*              The following is a set of mutually exclusive keys.     * 00050500
*              This set is required; only one key must be specified.  * 00050600
*                                                                     * 00050700
*                                                                     * 00050800
*              PARTOFF=xpartoff                                       * 00050900
*                  belongs to a set of mutually exclusive keys. It is * 00051000
*                  the name (RS-type), or address in register         * 00051100
*                  (2)-(12), of a fullword input containing the       * 00051200
*                  number of bytes to offset within an element in     * 00051300
*                  order to locate the buffer area into which the     * 00051400
*                  text of the message part is to be received.  This  * 00051500
*                  keyword is used when the message text is to be     * 00051600
*                  received directly into the element.  The ALET used * 00051700
*                  to access the element is used to access the buffer * 00051800
*                  area that receives the text of the message part.   * 00051900
*                                                                     * 00052000
*              PARTPTROFF=xpartptroff                                 * 00052100
*                  belongs to a set of mutually exclusive keys. It is * 00052200
*                  the name (RS-type), or address in register         * 00052300
*                  (2)-(12), of a fullword input containing the       * 00052400
*                  number of bytes to offset within an element in     * 00052500
*                  order to locate a PTR(31) field that contains the  * 00052600
*                  address of the buffer area into which the text of  * 00052700
*                  the message part is to be received.  This keyword  * 00052800
*                  is used when the elements contain a pointer to the * 00052900
*                  buffer area that is to receive the message part.   * 00053000
*                  One of the keywords PARTALETTBL, PARTALET, or      * 00053100
*                  PARTALETOFF is coded to indicate the ALET that     * 00053200
*                  qualifies the address of the buffer area.          * 00053300
*                                                                     * 00053400
*                                                                     * 00053500
*                  The following is a set of mutually exclusive keys. * 00053600
*                  This set is optional; only one key may be          * 00053700
*                  specified.                                         * 00053800
*                                                                     * 00053900
*                                                                     * 00054000
*                  ÝPARTALET=»xpartalet!ZEROº                         * 00054100
*                      belongs to a set of mutually exclusive keys.   * 00054200
*                      It is the name (RS-type), or address in        * 00054300
*                      register (2)-(12), of an optional fullword     * 00054400
*                      input that contains the one ALET that          * 00054500
*                      qualifies the address of every buffer area     * 00054600
*                      that is to receive the text of a message part. * 00054700
*                      The ALET must be zero or a valid public entry  * 00054800
*                      on the caller's Dispatchable Unit Access List  * 00054900
*                      (DU-AL), or a valid entry for a common area    * 00055000
*                      data space.                                    * 00055100
*                      DEFAULT: ZERO - the message buffer areas       * 00055200
*                      reside in the caller's primary address space.  * 00055300
*                                                                     * 00055400
*                  PARTALETOFF=»xpartaletoffº                         * 00055500
*                      belongs to a set of mutually exclusive keys.   * 00055600
*                      It is the name (RS-type), or address in        * 00055700
*                      register (2)-(12), of an optional fullword     * 00055800
*                      input containing the number of bytes to offset * 00055900
*                      within an element in order to locate a         * 00056000
*                      FIXED(32) field that contains the ALET that    * 00056100
*                      qualifies the address of the buffer area that  * 00056200
*                      is to receive the text of the message part.    * 00056300
*                      The ALET must be zero or a valid public entry  * 00056400
*                      on the caller's Dispatchable Unit Access List  * 00056500
*                      (DU-AL), or a valid entry for a common area    * 00056600
*                      data space.                                    * 00056700
*                                                                     * 00056800
*                  PARTALETTBL=»xpartalettblº¨                        * 00056900
*                      belongs to a set of mutually exclusive keys.   * 00057000
*                      It is the name (RS-type), or address in        * 00057100
*                      register (2)-(12), of an optional character    * 00057200
*                      input containing a table of FIXED(32) ALETs.   * 00057300
*                      The PARTALETTBL must either reside in the      * 00057400
*                      caller's primary address space, or in a space  * 00057500
*                      that is accessible via a public entry on the   * 00057600
*                      caller's Dispatchable Unit Access List         * 00057700
*                      (DU-AL), or in a common area data space.       * 00057800
*                      There must be an entry in the table for each   * 00057900
*                      element processed.  The table must be aligned  * 00058000
*                      on a word boundary.  Each entry in the table   * 00058100
*                      indicates the ALET that qualifies the address  * 00058200
*                      of a buffer area that is to receive a part of  * 00058300
*                      the message.  The i'th entry in the table      * 00058400
*                      provides the ALET of the buffer area that is   * 00058500
*                      to receive the i'th message part.  The ALET    * 00058600
*                      must be zero or a valid public entry on the    * 00058700
*                      caller's Dispatchable Unit Access List         * 00058800
*                      (DU-AL), or a valid entry for a common area    * 00058900
*                      data space.                                    * 00059000
*                                                                     * 00059100
*                                                                     * 00059200
*                                                                     * 00059300
*                  End of a set of mutually exclusive optional keys.  * 00059400
*                  DEFAULT: PARTALET                                  * 00059500
*                                                                     * 00059600
*                                                                     * 00059700
*                                                                     * 00059800
*                                                                     * 00059900
*              End of a set of mutually exclusive required keys.      * 00060000
*                                                                     * 00060100
*                                                                     * 00060200
*                                                                     * 00060300
*              The following is a set of mutually exclusive keys.     * 00060400
*              This set is required; only one key must be specified.  * 00060500
*                                                                     * 00060600
*                                                                     * 00060700
*                  The MEPLMLEN value contained in the Message Exit   * 00060800
*                  Parameter List (IXCYMEPL) pointed to by GR1 when   * 00060900
*                  the message exit was given control will provide    * 00061000
*                  the entire length of the message. The              * 00061100
*                  MNPLTRRESPMLEN value contained in the Message      * 00061200
*                  Notification Parameter List (IXCYMNPL) pointed to  * 00061300
*                  by GR1 when the notification exit was given        * 00061400
*                  control will provide the entire length of the      * 00061500
*                  response.                                          * 00061600
*                                                                     * 00061700
*              PARTLEN=xpartlen                                       * 00061800
*                  belongs to a set of mutually exclusive keys. It is * 00061900
*                  the name (RS-type), or address in register         * 00062000
*                  (2)-(12), of a fullword input containing the       * 00062100
*                  length in bytes of an individual message part.     * 00062200
*                  PARTLEN is coded when the message data is to be    * 00062300
*                  scattered into one or more equal size parts.  Each * 00062400
*                  buffer area indicated by an element must be at     * 00062500
*                  least as long as PARTLEN.  To receive the entire   * 00062600
*                  message, the number PARTLEN times the number of    * 00062700
*                  elements processed must be at least as long as the * 00062800
*                  entire length of the message or response.          * 00062900
*                                                                     * 00063000
*              PARTLENOFF=xpartlenoff                                 * 00063100
*                  belongs to a set of mutually exclusive keys. It is * 00063200
*                  the name (RS-type), or address in register         * 00063300
*                  (2)-(12), of a fullword input containing the       * 00063400
*                  number of bytes to offset within an element in     * 00063500
*                  order to locate a FIXED(32) field that contains    * 00063600
*                  the length in bytes of an individual message part. * 00063700
*                  The buffer area indicated by the i'th element must * 00063800
*                  be at least as long as the length of the i'th      * 00063900
*                  message part.  If the length of the part is zero,  * 00064000
*                  the address and ALET of the associated buffer area * 00064100
*                  are ignored and processing continues with the next * 00064200
*                  element.  To receive the entire message, the sum   * 00064300
*                  of the lengths at offset PARTLENOFF within each    * 00064400
*                  element must be at least as long as the entire     * 00064500
*                  length of the message or response.                 * 00064600
*                                                                     * 00064700
*              PARTLENTBL=xpartlentbl¨                                * 00064800
*                  belongs to a set of mutually exclusive keys. It is * 00064900
*                  the name (RS-type), or address in register         * 00065000
*                  (2)-(12), of a character input containing a table  * 00065100
*                  of FIXED(32) lengths.  The PARTLENTBL must either  * 00065200
*                  reside in the caller's primary address space, or   * 00065300
*                  in a space that is accessible via a public entry   * 00065400
*                  on the caller's Dispatchable Unit Access List      * 00065500
*                  (DU-AL), or in a common area data space.  There    * 00065600
*                  must be an entry in the table for each element     * 00065700
*                  processed.  The table must be aligned on a word    * 00065800
*                  boundary.  Each entry in the table indicates the   * 00065900
*                  length in bytes of one part of the message.  The   * 00066000
*                  i'th entry in the table provides the length of the * 00066100
*                  i'th message part.  The buffer area indicated by   * 00066200
*                  the i'th element must be at least as long as the   * 00066300
*                  length of the i'th message part.  If the i'th      * 00066400
*                  entry in PARTLENTBL is zero, the buffer area       * 00066500
*                  address and ALET indicated by the i'th element are * 00066600
*                  ignored and processing continues with the next     * 00066700
*                  element.  To receive the entire message, the sum   * 00066800
*                  of the entries in PARTLENTBL must be at least as   * 00066900
*                  long as the entire length of the message or        * 00067000
*                  response.                                          * 00067100
*                                                                     * 00067200
*                                                                     * 00067300
*                                                                     * 00067400
*              End of a set of mutually exclusive required keys.      * 00067500
*                                                                     * 00067600
*                                                                     * 00067700
*                                                                     * 00067800
*                                                                     * 00067900
*                                                                     * 00068000
*                                                                     * 00068100
*                                                                     * 00068200
*      ÝMSGSTGKEY=»xmsgstgkey!JOINKEYº¨                               * 00068300
*          is the name (RS-type), or address in register (2)-(12), of * 00068400
*          an optional 8 bit input containing the storage key to be   * 00068500
*          used when storing the message data.  The message data is   * 00068600
*          stored into either the buffer area indicated by the MSGBUF * 00068700
*          keyword, or the buffer area at offset PARTOFF within the   * 00068800
*          i'th element, or the buffer area pointed to by the pointer * 00068900
*          at offset PARTPTROFF within the i'th element.  The high    * 00069000
*          order nibble contains the storage key, the low order       * 00069100
*          nibble is ignored.  For example, set 'kkkk' in the binary  * 00069200
*          bit string 'kkkkxxxx'B to correspond to the desired        * 00069300
*          storage key.                                               * 00069400
*                                                                     * 00069500
*          If MSGSTGKEY is not specified, then the message data is    * 00069600
*          stored into the buffer area(s) using the PSW key that was  * 00069700
*          current when the receiving member JOINed the group.        * 00069800
*          DEFAULT: JOINKEY                                           * 00069900
*                                                                     * 00070000
*                                                                     * 00070100
*                                                                     * 00070200
*                                                                     * 00070300
*      ÝLINKAGE=»SYSTEM!INTERNALº¨                                    * 00070400
*          is an optional keyword input indicating linkage to use     * 00070500
*          when calling the Message-in Service routine.  This keyword * 00070600
*          is not part of the intended IXCMSGI interface.  Its use is * 00070700
*          restricted to the XCF component of z/OS.                   * 00070800
*                                                                     * 00070900
*          Do not code the LINKAGE keyword.  Coding the LINKAGE       * 00071000
*          keyword causes the assemble to fail.                       * 00071100
*          DEFAULT: SYSTEM                                            * 00071200
*                                                                     * 00071300
*                                                                     * 00071400
*          ÝLINKAGE=SYSTEM¨                                           * 00071500
*              Use linkage intended as the interface to the           * 00071600
*              message-in service.                                    * 00071700
*                                                                     * 00071800
*          ÝLINKAGE=INTERNAL                                          * 00071900
*              This keyword value is not part of the intended         * 00072000
*              interface.  Its use is restricted to the XCF component * 00072100
*              of z/OS.                                               * 00072200
*                                                                     * 00072300
*                                                                     * 00072400
*              XCFDATA=xxcfdata¨                                      * 00072500
*                  is the name (RS-type), or address in register      * 00072600
*                  (2)-(12), of a required fullword input containing  * 00072700
*                  internal XCF data for the service routine.  This   * 00072800
*                  keyword is not part of the intended IXCMSGI        * 00072900
*                  interface.  Its use is restricted to the XCF       * 00073000
*                  component of z/OS.                                 * 00073100
*                                                                     * 00073200
*                                                                     * 00073300
*                                                                     * 00073400
*                                                                     * 00073500
*                                                                     * 00073600
*                                                                     * 00073700
*                                                                     * 00073800
*                                                                     * 00073900
*      ÝRETCODE=xretcode¨                                             * 00074000
*          is the name (RS-type) of an optional fullword output       * 00074100
*          variable, or register (2)-(12) or (15), into which the     * 00074200
*          return code is to be copied from GPR 15.  If you specify   * 00074300
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00074400
*          the value will be left in GPR 15.                          * 00074500
*                                                                     * 00074600
*                                                                     * 00074700
*                                                                     * 00074800
*                                                                     * 00074900
*      ÝRSNCODE=xrsncode¨                                             * 00075000
*          is the name (RS-type) of an optional fullword output       * 00075100
*          variable into which the reason code is to be copied from   * 00075200
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00075300
*          R0 (within or without parentheses), the value will be left * 00075400
*          in GPR 0.                                                  * 00075500
*                                                                     * 00075600
*                                                                     * 00075700
*                                                                     * 00075800
*                                                                     * 00075900
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00076000
*          is an optional byte input decimal value in the "0-3" range * 00076100
*          that specifies the macro version.  PLISTVER is the only    * 00076200
*          key allowed on the list form of MF and determines which    * 00076300
*          parameter list is generated.  The macro keys associated    * 00076400
*          with each supported version of the macro are listed in     * 00076500
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 00076600
*          instead of a number, and the parameter list will be of the * 00076700
*          largest size currently supported. This size may grow from  * 00076800
*          release to release (thus possibly affecting the amount of  * 00076900
*          storage needed by your program).  If your program can      * 00077000
*          tolerate this, IBM recommends that you always specify MAX  * 00077100
*          when creating the list form parameter list as that will    * 00077200
*          ensure that the list form parameter list is always long    * 00077300
*          enough to hold whatever parameters might be specified on   * 00077400
*          the execute form.                                          * 00077500
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00077600
*          default is the lowest version which allows all of the      * 00077700
*          parameters specified on the invocation to be processed.    * 00077800
*                                                                     * 00077900
*                                                                     * 00078000
*                                                                     * 00078100
*                                                                     * 00078200
*      ÝMF=»S!L!Eº¨                                                   * 00078300
*          is an optional keyword input which specifies the macro     * 00078400
*          form.                                                      * 00078500
*          DEFAULT: S                                                 * 00078600
*                                                                     * 00078700
*                                                                     * 00078800
*          ÝMF=S¨                                                     * 00078900
*              specifies the standard form of the macro.  The "S"     * 00079000
*              form generates code to put the parameters into an      * 00079100
*              in-line parameter list and invoke the desired service. * 00079200
*              Full checking for required macro keys is done along    * 00079300
*              with supplying defaults for omitted optional           * 00079400
*              parameters.                                            * 00079500
*                                                                     * 00079600
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00079700
*              specifies the list form of the macro.  The "L" form    * 00079800
*              defines an area to be used for the parameter list.     * 00079900
*              Only the PLISTVER key may be specified on the          * 00080000
*              invocation.  All other macro parameters are flagged as * 00080100
*              errors.  If PLISTVER is not specified, the original    * 00080200
*              parameter list definition is used.                     * 00080300
*                                                                     * 00080400
*            ,xmfctrl                                                 * 00080500
*              is a required input.  It is the name of a storage area * 00080600
*              for the parameter list.                                * 00080700
*                                                                     * 00080800
*            »,xmfattr!0Dº                                            * 00080900
*              is an optional 60 character input string that varies   * 00081000
*              from 1 to 60 characters. Use it to force boundary      * 00081100
*              alignment of the parameter list. Use only 0F or 0D.    * 00081200
*              DEFAULT: 0D which forces the parameter list to a       * 00081300
*              doubleword boundary.                                   * 00081400
*                                                                     * 00081500
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00081600
*              specifies the execute form of the macro.  The "E" form * 00081700
*              generates code to put the parameters into the          * 00081800
*              parameter list specified by xmfctrl and provides full  * 00081900
*              syntax checking with default setting.                  * 00082000
*                                                                     * 00082100
*            ,xmfctrl                                                 * 00082200
*              is a required input.  It is the name (RS-type), or     * 00082300
*              address in register (1)-(12), of a storage area for    * 00082400
*              the parameter list.                                    * 00082500
*                                                                     * 00082600
*            »,COMPLETEº                                              * 00082700
*              is an optional keyword input which specifies the       * 00082800
*              degree of macro parameter syntax checking.             * 00082900
*              DEFAULT: COMPLETE                                      * 00083000
*                                                                     * 00083100
*                                                                     * 00083200
*              COMPLETE                                               * 00083300
*                  Checking for required macro keys is done and       * 00083400
*                  defaults are supplied for omitted optional         * 00083500
*                  parameters.                                        * 00083600
*                                                                     * 00083700
*                                                                     * 00083800
*                                                                     * 00083900
*                                                                     * 00084000
*                                                                     * 00084100
*                                                                     * 00084200
*                                                                     * 00084300
*01* RETURN CODES:                                                    * 00084400
*                                                                     * 00084500
*                                                                     * 00084600
*       0         Successful completion.  Message data has been       * 00084700
*                 placed in buffer area(s).                           * 00084800
*                                                                     * 00084900
*                                                                     * 00085000
*       4         Warning.  The request completed, but with           * 00085100
*                 exceptional circumstances.                          * 00085200
*                                                                     * 00085300
*                 HEX REASON       MEANING                            * 00085400
*                 CODE                                                * 00085500
*                                                                     * 00085600
*                                                                     * 00085700
*                 224         As much message data as will fit has    * 00085800
*                             been placed in buffer area(s).  More    * 00085900
*                             message data remains.  Reinvoke the     * 00086000
*                             Message-In service to receive the       * 00086100
*                             remainder of the message.               * 00086200
*                                                                     * 00086300
*                             Note that this reason code is           * 00086400
*                             applicable only when MULTIPART is YES.  * 00086500
*                             When MULTIPART is NO, the buffer area   * 00086600
*                             indicated by MSGBUF must be large       * 00086700
*                             enough to receive all the message or    * 00086800
*                             response data.                          * 00086900
*                                                                     * 00087000
*                                                                     * 00087100
*                                                                     * 00087200
*                                                                     * 00087300
*       8         Parameters are not valid.  Unless the explanation   * 00087400
*                 for a specific reason code states otherwise, the    * 00087500
*                 message data is still available and can be received * 00087600
*                 by reinvoking the Message-In service with valid     * 00087700
*                 parameters.                                         * 00087800
*                                                                     * 00087900
*                 If the error was detected while scattering message  * 00088000
*                 or response data into more than one buffer area     * 00088100
*                 (MULTIPART is YES) and the error can be associated  * 00088200
*                 with a particular part, the index of the part and   * 00088300
*                 the address of the element that describes the part  * 00088400
*                 are placed in the parameter list.                   * 00088500
*                                                                     * 00088600
*                 HEX REASON       MEANING                            * 00088700
*                 CODE                                                * 00088800
*                                                                     * 00088900
*                                                                     * 00089000
*                 4           Buffer area not accessible.  The        * 00089100
*                             storage named by MSGBUF is not          * 00089200
*                             accessible.                             * 00089300
*                                                                     * 00089400
*                 8           The message or response was previously  * 00089500
*                             delivered, saved, or discarded, and is  * 00089600
*                             no longer available.                    * 00089700
*                                                                     * 00089800
*                 9           The message is no longer available      * 00089900
*                             because the member is no longer active. * 00090000
*                                                                     * 00090100
*                 C           Buffer area ALET is not valid.  The     * 00090200
*                             ALET that qualifies the address of      * 00090300
*                             MSGBUF is neither zero nor a valid      * 00090400
*                             entry on the caller's Dispatchable Unit * 00090500
*                             Access List (DU-AL), nor a valid entry  * 00090600
*                             for a common area data space.           * 00090700
*                                                                     * 00090800
*                 40          Reserved field is not 0.  The parameter * 00090900
*                             list has been corrupted.                * 00091000
*                                                                     * 00091100
*                 44          The message token is not valid.  The    * 00091200
*                             token indicated by MSGTOKEN or TOKEN    * 00091300
*                             may have been corrupted, or it is not a * 00091400
*                             token from the parameter list presented * 00091500
*                             to the exit routine, or the invoker is  * 00091600
*                             not invoking the Message-In service     * 00091700
*                             from within an exit routine, or the     * 00091800
*                             member is no longer active.  This error * 00091900
*                             can occur if the exit routine is not    * 00092000
*                             correctly coded as a reentrant routine. * 00092100
*                                                                     * 00092200
*                 45          MSGTOKEN not valid, use TOKEN.          * 00092300
*                                                                     * 00092400
*                             The TOKEN keyword is required for a     * 00092500
*                             message exit routine that receives      * 00092600
*                             control via a notify exit routine.  In  * 00092700
*                             such cases, it is clear that the user   * 00092800
*                             is exploiting a level of the signalling * 00092900
*                             service that supports the use of TOKEN. * 00093000
*                             Use of the TOKEN keyword is therefore   * 00093100
*                             required.                               * 00093200
*                                                                     * 00093300
*                 100         The ALET that qualifies the address of  * 00093400
*                             the parameter list is not zero.         * 00093500
*                                                                     * 00093600
*                 104         Version number in parameter list is not * 00093700
*                             valid.  The release level of XCF on     * 00093800
*                             which the caller is running does not    * 00093900
*                             support this version of the Message-In  * 00094000
*                             service.                                * 00094100
*                                                                     * 00094200
*                 10C         Parameter list is not accessible.       * 00094300
*                                                                     * 00094400
*                 20C         Buffer area key mismatch.  The buffer   * 00094500
*                             area named by MSGBUF can not be stored  * 00094600
*                             into using the storage key indicated by * 00094700
*                             MSGSTGKEY.                              * 00094800
*                                                                     * 00094900
*                 20D         Buffer area not accessible.  The buffer * 00095000
*                             area named by MSGBUF is page protected. * 00095100
*                             Stores into this area are not           * 00095200
*                             permitted.                              * 00095300
*                                                                     * 00095400
*                 210         Element not accessible.  The part       * 00095500
*                             pointer at offset PARTPTROFF within an  * 00095600
*                             element (ELEMENT) is not accessible.    * 00095700
*                             The fields PART# and ELEMENTPTR in the  * 00095800
*                             parameter list identify the index of    * 00095900
*                             the part and the address of the element * 00096000
*                             that describes the erroneous part.      * 00096100
*                                                                     * 00096200
*                 212         The ALET that qualifies the address of  * 00096300
*                             an element (ELEMENT) is neither zero    * 00096400
*                             nor a valid entry on the caller's       * 00096500
*                             Dispatchable Unit Access List (DU-AL),  * 00096600
*                             nor a valid entry for a common area     * 00096700
*                             data space.                             * 00096800
*                                                                     * 00096900
*                 213         Element not accessible.  The next       * 00097000
*                             element pointer at offset NEXTPTROFF    * 00097100
*                             within an element (ELEMENT) is not      * 00097200
*                             accessible.  The fields PART# and       * 00097300
*                             ELEMENTPTR in the parameter list        * 00097400
*                             identify the index of the part and the  * 00097500
*                             address of the element that describes   * 00097600
*                             the erroneous part.                     * 00097700
*                                                                     * 00097800
*                 214         Number of message parts (#MSGPARTS) is  * 00097900
*                             zero.                                   * 00098000
*                                                                     * 00098100
*                 215         Not making progress.  The number of     * 00098200
*                             message parts (#MSGPARTS) was not       * 00098300
*                             specified and more than 65,536          * 00098400
*                             consecutive zero length parts were      * 00098500
*                             processed.  The elements are assumed to * 00098600
*                             be damaged.                             * 00098700
*                                                                     * 00098800
*                 218         Buffer area not accessible.  The        * 00098900
*                             storage area pointed to by the pointer  * 00099000
*                             field at offset PARTPTROFF within an    * 00099100
*                             element (ELEMENT) is not accessible.    * 00099200
*                             The fields PART# and ELEMENTPTR in the  * 00099300
*                             parameter list identify the index of    * 00099400
*                             the part and the address of the element * 00099500
*                             that describes the erroneous part.      * 00099600
*                                                                     * 00099700
*                 219         Buffer area not accessible.  The        * 00099800
*                             storage area at offset PARTOFF within   * 00099900
*                             an element (ELEMENT) is not accessible. * 00100000
*                             The fields PART# and ELEMENTPTR in the  * 00100100
*                             parameter list identify the index of    * 00100200
*                             the part and the address of the element * 00100300
*                             that describes the erroneous part.      * 00100400
*                                                                     * 00100500
*                 21A         Buffer area not accessible.  The        * 00100600
*                             storage area pointed to by the pointer  * 00100700
*                             field at offset PARTPTROFF within an    * 00100800
*                             element (ELEMENT) is page protected.    * 00100900
*                             Stores into this area are not           * 00101000
*                             permitted.  The fields PART# and        * 00101100
*                             ELEMENTPTR in the parameter list        * 00101200
*                             identify the index of the part and the  * 00101300
*                             address of the element that describes   * 00101400
*                             the erroneous part.                     * 00101500
*                                                                     * 00101600
*                 21B         Buffer area not accessible.  The        * 00101700
*                             storage area at offset PARTOFF within   * 00101800
*                             an element (ELEMENT) is page protected. * 00101900
*                             Stores into this area are not           * 00102000
*                             permitted.  The fields PART# and        * 00102100
*                             ELEMENTPTR in the parameter list        * 00102200
*                             identify the index of the part and the  * 00102300
*                             address of the element that describes   * 00102400
*                             the erroneous part.                     * 00102500
*                                                                     * 00102600
*                 21C         Buffer area key mismatch.  The storage  * 00102700
*                             area pointed to by the pointer field at * 00102800
*                             offset PARTPTROFF within an element     * 00102900
*                             (ELEMENT) can not be stored into using  * 00103000
*                             the storage key indicated by MSGSTGKEY. * 00103100
*                             The fields PART# and ELEMENTPTR in the  * 00103200
*                             parameter list identify the index of    * 00103300
*                             the part and the address of the element * 00103400
*                             that describes the erroneous part.      * 00103500
*                                                                     * 00103600
*                 21D         Buffer area key mismatch.  The storage  * 00103700
*                             area at offset PARTOFF within an        * 00103800
*                             element (ELEMENT) can not be stored     * 00103900
*                             into using the storage key indicated by * 00104000
*                             MSGSTGKEY.  The fields PART# and        * 00104100
*                             ELEMENTPTR in the parameter list        * 00104200
*                             identify the index of the part and the  * 00104300
*                             address of the element that describes   * 00104400
*                             the erroneous part.                     * 00104500
*                                                                     * 00104600
*                 220         Table of message or response part       * 00104700
*                             lengths (PARTLENTBL) is not accessible. * 00104800
*                                                                     * 00104900
*                 221         Table of message or response part       * 00105000
*                             lengths (PARTLENTBL) is not aligned on  * 00105100
*                             a word boundary.                        * 00105200
*                                                                     * 00105300
*                 222         The ALET that qualifies the address of  * 00105400
*                             the message or response parts lengths   * 00105500
*                             table (PARTLENTBL) is neither zero nor  * 00105600
*                             a valid entry on the caller's           * 00105700
*                             Dispatchable Unit Access List (DU-AL),  * 00105800
*                             nor a valid entry for a common area     * 00105900
*                             data space.                             * 00106000
*                                                                     * 00106100
*                 223         The part length at offset PARTLENOFF    * 00106200
*                             within an element (ELEMENT) is not      * 00106300
*                             accessible.  The fields PART# and       * 00106400
*                             ELEMENTPTR in the parameter list        * 00106500
*                             identify the index of the part and the  * 00106600
*                             address of the element that describes   * 00106700
*                             the erroneous part.                     * 00106800
*                                                                     * 00106900
*                 230         Table of message or response part ALETs * 00107000
*                             (PARTALETTBL) is not accessible.        * 00107100
*                                                                     * 00107200
*                 231         Table of message part ALETs             * 00107300
*                             (PARTALETTBL) is not aligned on a word  * 00107400
*                             boundary.                               * 00107500
*                                                                     * 00107600
*                 232         The ALET that qualifies the address of  * 00107700
*                             the message parts ALET table            * 00107800
*                             (PARTALETTBL) is neither zero nor a     * 00107900
*                             valid entry on the caller's             * 00108000
*                             Dispatchable Unit Access List (DU-AL),  * 00108100
*                             nor a valid entry for a common area     * 00108200
*                             data space.                             * 00108300
*                                                                     * 00108400
*                 233         Element not accessible.  The part ALET  * 00108500
*                             at offset PARTALETOFF within an element * 00108600
*                             (ELEMENT) is not accessible.  The       * 00108700
*                             fields PART# and ELEMENTPTR in the      * 00108800
*                             parameter list identify the index of    * 00108900
*                             the part and the address of the element * 00109000
*                             that describes the erroneous part.      * 00109100
*                                                                     * 00109200
*                 234         Buffer area ALET is not valid.  The     * 00109300
*                             ALET indicated by PARTALET is neither   * 00109400
*                             zero nor a valid entry on the caller's  * 00109500
*                             Dispatchable Unit Access List (DU-AL),  * 00109600
*                             nor a valid entry for a common area     * 00109700
*                             data space.                             * 00109800
*                                                                     * 00109900
*                 235         Buffer area ALET is not valid.  The     * 00110000
*                             ALET indicated by an entry in           * 00110100
*                             PARTALETTBL is neither zero nor a valid * 00110200
*                             entry on the caller's Dispatchable Unit * 00110300
*                             Access List (DU-AL), nor a valid entry  * 00110400
*                             for a common area data space.  The      * 00110500
*                             fields PART# and ELEMENTPTR in the      * 00110600
*                             parameter list identify the index of    * 00110700
*                             the part and the address of the element * 00110800
*                             that describes the erroneous part.      * 00110900
*                                                                     * 00111000
*                 236         Buffer area ALET is not valid.  The     * 00111100
*                             ALET at offset PARTALETOFF within an    * 00111200
*                             element (ELEMENT) is neither zero nor a * 00111300
*                             valid entry on the caller's             * 00111400
*                             Dispatchable Unit Access List (DU-AL),  * 00111500
*                             nor a valid entry for a common area     * 00111600
*                             data space.  The fields PART# and       * 00111700
*                             ELEMENTPTR in the parameter list        * 00111800
*                             identify the index of the part and the  * 00111900
*                             address of the element that describes   * 00112000
*                             the erroneous part.                     * 00112100
*                                                                     * 00112200
*                 010Cxxxx    Parameter list not accessible.  A       * 00112300
*                             parameter associated with one of the    * 00112400
*                             parts of a multipart message is not     * 00112500
*                             valid, but the Message-In service was   * 00112600
*                             not able to store the index of the part * 00112700
*                             and the address of the element that     * 00112800
*                             describes the part in the parameter     * 00112900
*                             list.  The low order halfword of the    * 00113000
*                             reason code (xxxx) indicates the reason * 00113100
*                             code that would have been returned if   * 00113200
*                             the part information could have been    * 00113300
*                             placed in the parameter list.           * 00113400
*                                                                     * 00113500
*                                                                     * 00113600
*                                                                     * 00113700
*                                                                     * 00113800
*       10        Failure in XCF processing                           * 00113900
*                                                                     * 00114000
*                                                                     * 00114100
*                                                                     * 00114200
*01* REASON CODES:                                                    * 00114300
*                                                                     * 00114400
*       A unique reason code will be returned whenever the return     * 00114500
*       code is non-zero.                                             * 00114600
*                                                                     * 00114700
*01* MODULE TYPE:  ASSEM MACRO                                        * 00114800
*                                                                     * 00114900
*02*   PROCESSOR:  ASSEM                                              * 00115000
*                                                                     * 00115100
*01* COMPONENT:  SCXCF                                                * 00115200
*                                                                     * 00115300
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00115400
*                                                                     * 00115500
*01* MACRO USAGE NOTES:                                               * 00115600
*                                                                     * 00115700
*                                                                     * 00115800
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00115900
*        global macro variable.  Any value other than 'NO' will       * 00116000
*        result in the macro expansion being printed.  The default is * 00116100
*        'YES'.  The following examples illustrate how the ZPRINT     * 00116200
*        variable should be set.                                      * 00116300
*                                                                     * 00116400
*                    GBLC &ZPRINT                                     * 00116500
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00116600
*                                                                     * 00116700
*                                                                     * 00116800
*    2.  The  IXCMSGI macro supports multiple versions. The macro key * 00116900
*        list  below  contains the version level in which the key was * 00117000
*        first  introduced.  Positionals  are  identified by the word * 00117100
*        'Positional'  followed by the numeric value of its position. * 00117200
*        Nested  positionals  are  preceded  by their outer key.  The * 00117300
*        lowest value represents the original version and the highest * 00117400
*        value  represents  the  most  recent  version of the IXCMSGI * 00117500
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00117600
*        least  as high as the highest version number of all the keys * 00117700
*        being used.                                                  * 00117800
*                                                                     * 00117900
*        VERSION   KEY                                                * 00118000
*                                                                     * 00118100
*              0      MSGBUF                                          * 00118200
*                     MSGTOKEN                                        * 00118300
*                     MULTIPART                                       * 00118400
*              1      #MSGPARTS                                       * 00118500
*                     ELEMENT                                         * 00118600
*                     ELEMFORM                                        * 00118700
*                     ENDOFQUEUE                                      * 00118800
*                     MSGSTGKEY                                       * 00118900
*                     NEXTOFF                                         * 00119000
*                     NEXTPTROFF                                      * 00119100
*                     PARTALET                                        * 00119200
*                     PARTALETOFF                                     * 00119300
*                     PARTALETTBL                                     * 00119400
*                     PARTLEN                                         * 00119500
*                     PARTLENOFF                                      * 00119600
*                     PARTLENTBL                                      * 00119700
*                     PARTOFF                                         * 00119800
*                     PARTPTROFF                                      * 00119900
*              2      TOKEN                                           * 00120000
*              3      LINKAGE                                         * 00120100
*                     XCFDATA                                         * 00120200
*                                                                     * 00120300
*                                                                     * 00120400
*                                                                     * 00120500
*01* CHANGE ACTIVITY:                                                 * 00120600
*                                                                     * 00120700
*   Flag LineItem  FMID    Date   ID    Comment                       * 00120800
*                                                                     * 00120900
*    $L0=SYSLKXMG HBB4410 860901 PDXB:  Coupling Support COUPLXSI     * 00121000
*                                         line item                   * 00121100
*    $L1=SYSLKTSG HBB5510 910923 PD00CJ:  Scatter message table       * 00121200
*                                         support                     * 00121300
*    $P1=PKB2941  HBB4430 920617 PD00T8:  Update prolog to state only * 00121400
*                                         31 bit addressing mode is   * 00121500
*                                         supported                   * 00121600
*    $L2=SYSLKTSG HBB5510 920812 PD00BJ:  Scatter message queue       * 00121700
*                                         support                     * 00121800
*    $P2=PIG0970  HBB5510 921223 PD00BJ:  ASAP unit test fixes        * 00121900
*    $P3=PIG2739  HBB5510 930909 PD00CJ:  Remove HP3/HP2 GML tags     * 00122000
*                                         from the prologue since     * 00122100
*                                         they no longer work with    * 00122200
*                                         AMG.                        * 00122300
*    $L3=XCFBCXMG JBB6602 950501 PD00BJ:  Add TOKEN keyword           * 00122400
*    $P4=PSD0665  JBB6602 960122 PD00DT:  Add TOKEN keyword           * 00122500
*    $P5=PSD0965  JBB6602 960404 PD00DT:  Update reason code          * 00122600
*                                         documentation               * 00122700
*    $P6=PQC2435  HBB6603 960911 PD00DT:  Update reason code          * 00122800
*                                         documentation               * 00122900
*    $01=OA09194  HBB7707 050615 PD00BJ:  Add LINKAGE keyword         * 00123000
****** END OF SPECIFICATIONS *****************************************/ 00123100
*/********************************************************************* 00123200
         MACRO                                                          00123300
&XLABEL  IXCMSGI &TOKEN=,&MSGTOKEN=,&MULTIPART=,&MSGBUF=,&#MSGPARTS=,  *00123400
               &ELEMENT=,&ELEMFORM=,&NEXTOFF=,&NEXTPTROFF=,            *00123500
               &ENDOFQUEUE=,&PARTOFF=,&PARTPTROFF=,&PARTALET=,         *00123600
               &PARTALETOFF=,&PARTALETTBL=,&PARTLEN=,&PARTLENOFF=,     *00123700
               &PARTLENTBL=,&MSGSTGKEY=,&LINKAGE=,&XCFDATA=,&RETCODE=, *00123800
               &RSNCODE=,&PLISTVER=,&MF=                                00123900
.*                                                                      00124000
*                 MACDATE -01/13/18-<3>                                 00124100
.*                                                                      00124200
.*******************************************************************    00124300
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00124400
.*******************************************************************    00124500
                 GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                00124600
                 GBLC  &ZTEST      YES=TEST NO=NO TEST                  00124700
                 GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX          00124800
.*                                                                      00124900
                 GBLC  &ZIXCMSGI   YES=MACRO USED AT LEAST ONCE         00125000
.*******************************************************************    00125100
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00125200
.*******************************************************************    00125300
                 LCLC  &ZMS        ERROR MESSAGE WORK AREA              00125400
                 LCLC  &ZCNDX      SYSNDX CHARACTERS                    00125500
                 LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED           00125600
                 LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR          00125700
                 LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE          00125800
                 LCLA  &ZAWRK      USED AS A WORK AREA                  00125900
                 LCLA  &ZASIZ      USED FOR SIZE OF VALUE               00126000
                 LCLA  &ZN         NUMERIC WORK VARIABLE                00126100
                 LCLC  &ZC         CHARACTER WORK VARIABLE              00126200
                 LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE          00126300
                 LCLA  &ZTLA       VALUE TOO LONG VARIABLE              00126400
                 LCLC  &ZMAC_G     "G" or null                          00126500
&ZMAC_G          SETC  ''                                               00126600
                 LCLC  &ZMAC_LR                                         00126700
&ZMAC_LR         SETC  'LR'                                             00126800
                 LCLC  &ZMAC_L                                          00126900
&ZMAC_L          SETC  'L'                                              00127000
                 LCLC  &ZMAC_ST                                         00127100
&ZMAC_ST         SETC  'ST'                                             00127200
                 LCLC  &ZMAC_LLGT                                       00127300
&ZMAC_LLGT       SETC  'L'                                              00127400
                 LCLC  &ZMAC_LGR                                        00127500
&ZMAC_LGR        SETC  'LR'                                             00127600
                 LCLC  &ZMAC_LG                                         00127700
&ZMAC_LG         SETC  'L'                                              00127800
                 LCLC  &ZMAC_STG                                        00127900
&ZMAC_STG        SETC  'ST'                                             00128000
                 LCLA  &ZMACRET    MACRO RETURN CODE                    00128100
&ZMACRET         SETA  0           ASSUME NO ERRORS                     00128200
.*                                                                      00128300
                 LCLC  &ZCSYSLIST(255)          NONXKEY, POS ARRAY      00128400
                 LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()           00128500
                 LCLA  &ZPLLEN     PARAMETER LIST LENGTH                00128600
                 LCLC  &ZENDBASEPL              End of base PL          00128700
                 LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                00128800
.*******************************************************************    00128900
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00129000
.*******************************************************************    00129100
                 LCLA  &ZI         INDEX FOR ARRAY                      00129200
                 LCLA  &ZJ         INDEX FOR PARMS                      00129300
                 LCLA  &ZK         INDEX FOR PARSE                      00129400
                 LCLA  &ZLO        LOW RANGE VALUE                      00129500
                 LCLA  &ZHI        HIGH RANGE VALUE                     00129600
                 LCLC  &ZW         WORK AREA FOR PARM                   00129700
.********************************************************************   00129800
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00129900
.********************************************************************   00130000
                 GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL              00130100
                 GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE       00130200
                 GBLA  &SYSALVL    SYSSTATE ARCHLVL                     00130300
                 GBLC  &SYSAM64    SYSSTATE AMODE64                     00130400
.*                                                                      00130500
                 AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED       00130600
                 AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED        00130700
                 SPLEVEL  TEST                                          00130800
.ZSYS2           ANOP  ,                                                00130900
                 AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1            00131000
                 AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1            00131100
                 SYSSTATE TEST                                          00131200
                 AGO   .ZSYS4                                           00131300
.ZSYS3           ANOP  ,                                                00131400
&SYSASCE         SETC  'P'         ASSUME SYSSTATE PRIMARY              00131500
.ZSYS4           ANOP  ,                                                00131600
                 AIF   ('&SYSAM64' NE 'YES').ZSYSN64                    00131700
&ZMAC_LLGT       SETC 'LLGT'                                            00131800
&ZMAC_LGR        SETC 'LGR'                                             00131900
&ZMAC_LG         SETC 'LG'                                              00132000
&ZMAC_STG        SETC 'STG'                                             00132100
.ZSYSN64         ANOP  ,                                                00132200
.*******************************************************************    00132300
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00132400
.*******************************************************************    00132500
                 LCLC  &XFULLTOKEN              ++ NAME                 00132600
                 LCLC  &XTOKEN     ++ NAME                              00132700
                 LCLC  &XMSGTOKEN  ++ NAME                              00132800
                 LCLC  &XMULTIPART              ++ VALUE                00132900
                 LCLC  &XMSGBUF    ++ NAME                              00133000
                 LCLC  &X#MSGPARTS              ++ NAME                 00133100
                 LCLC  &XELEMENT   ++ NAME                              00133200
                 LCLC  &XELEMFORM  ++ VALUE                             00133300
                 LCLC  &XNEXTOFF   ++ NAME                              00133400
                 LCLC  &XNEXTPTROFF             ++ NAME                 00133500
                 LCLC  &XENDOFQUEUE             ++ NAME                 00133600
                 LCLC  &XPARTMODE  ++ NAME                              00133700
                 LCLC  &XPARTOFF   ++ NAME                              00133800
                 LCLC  &XPARTPTROFF             ++ NAME                 00133900
                 LCLC  &XDELLIST3  ++ NAME                              00134000
                 LCLC  &XPARTALET  ++ NAME                              00134100
                 LCLC  &XPARTALETOFF            ++ NAME                 00134200
                 LCLC  &XPARTALETTBL            ++ NAME                 00134300
                 LCLC  &XDELLIST2  ++ NAME                              00134400
                 LCLC  &XPARTLEN   ++ NAME                              00134500
                 LCLC  &XPARTLENOFF             ++ NAME                 00134600
                 LCLC  &XPARTLENTBL             ++ NAME                 00134700
                 LCLC  &XMSGSTGKEY              ++ NAME                 00134800
                 LCLC  &XLINKAGE   ++ VALUE                             00134900
                 LCLC  &XXCFDATA   ++ NAME                              00135000
                 LCLC  &XRETCODE   ++ NAME                              00135100
                 LCLC  &XRSNCODE   ++ NAME                              00135200
                 LCLA  &XPLISTVER  ++ VALUE                             00135300
                 LCLC  &XMF        ++ VALUE                             00135400
                 LCLC  &XMFCTRL    ++ NAME                              00135500
                 LCLC  &XMFATTR    ++ VALUE                             00135600
                 LCLC  &XMFSCK     ++ VALUE                             00135700
.*******************************************************************    00135800
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00135900
.*******************************************************************    00136000
                 LCLC  &ZXFULLTOKEN             ++ INPUT NAME           00136100
                 LCLC  &ZXTOKEN    ++ INPUT NAME                        00136200
                 LCLC  &ZXMSGTOKEN              ++ INPUT NAME           00136300
                 LCLC  &ZXMULTIPART             ++ INPUT VALUE          00136400
                 LCLC  &ZXMSGBUF   ++ INPUT NAME                        00136500
                 LCLC  &ZX#MSGPARTS             ++ INPUT NAME           00136600
                 LCLC  &ZXELEMENT  ++ INPUT NAME                        00136700
                 LCLC  &ZXELEMFORM              ++ INPUT VALUE          00136800
                 LCLC  &ZXNEXTOFF  ++ INPUT NAME                        00136900
                 LCLC  &ZXNEXTPTROFF            ++ INPUT NAME           00137000
                 LCLC  &ZXENDOFQUEUE            ++ INPUT NAME           00137100
                 LCLC  &ZXPARTMODE              ++ INPUT NAME           00137200
                 LCLC  &ZXPARTOFF  ++ INPUT NAME                        00137300
                 LCLC  &ZXPARTPTROFF            ++ INPUT NAME           00137400
                 LCLC  &ZXDELLIST3              ++ INPUT NAME           00137500
                 LCLC  &ZXPARTALET              ++ INPUT NAME           00137600
                 LCLC  &ZXPARTALETOFF           ++ INPUT NAME           00137700
                 LCLC  &ZXPARTALETTBL           ++ INPUT NAME           00137800
                 LCLC  &ZXDELLIST2              ++ INPUT NAME           00137900
                 LCLC  &ZXPARTLEN  ++ INPUT NAME                        00138000
                 LCLC  &ZXPARTLENOFF            ++ INPUT NAME           00138100
                 LCLC  &ZXPARTLENTBL            ++ INPUT NAME           00138200
                 LCLC  &ZXMSGSTGKEY             ++ INPUT NAME           00138300
                 LCLC  &ZXLINKAGE  ++ INPUT VALUE                       00138400
                 LCLC  &ZXXCFDATA  ++ INPUT NAME                        00138500
                 LCLC  &ZXRETCODE  ++ OUTPUT NAME                       00138600
                 LCLC  &ZXRSNCODE  ++ OUTPUT NAME                       00138700
                 LCLC  &ZXPLISTVER              ++ INPUT VALUE          00138800
                 LCLC  &ZXMF       ++ INPUT VALUE                       00138900
                 LCLC  &ZXMFCTRL   ++ INPUT NAME                        00139000
                 LCLC  &ZXMFATTR   ++ INPUT VALUE                       00139100
                 LCLC  &ZXMFSCK    ++ INPUT VALUE                       00139200
.********************************************************************   00139300
.***AC.PLV01  PROCESS PLISTVER                                      *   00139400
.********************************************************************   00139500
&XPLISTVER      SETA  0                                                 00139600
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00139700
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00139800
&XPLISTVER      SETA  3                                                 00139900
.ZPLV0          ANOP  ,                                                 00140000
.*                                                                      00140100
                AIF   ('&TOKEN' EQ '').ZPLV1E                           00140200
                AIF   (&XPLISTVER GE 2).ZPLV1E                          00140300
&XPLISTVER      SETA  2                                                 00140400
.ZPLV1E         ANOP  ,                                                 00140500
.*                                                                      00140600
                AIF   ('&#MSGPARTS' EQ '').ZPLV2E                       00140700
                AIF   (&XPLISTVER GE 1).ZPLV2E                          00140800
&XPLISTVER      SETA  1                                                 00140900
.ZPLV2E         ANOP  ,                                                 00141000
.*                                                                      00141100
                AIF   ('&ELEMENT' EQ '').ZPLV3E                         00141200
                AIF   (&XPLISTVER GE 1).ZPLV3E                          00141300
&XPLISTVER      SETA  1                                                 00141400
.ZPLV3E         ANOP  ,                                                 00141500
.*                                                                      00141600
                AIF   ('&ELEMFORM' EQ '').ZPLV4E                        00141700
                AIF   (&XPLISTVER GE 1).ZPLV4E                          00141800
&XPLISTVER      SETA  1                                                 00141900
.ZPLV4E         ANOP  ,                                                 00142000
.*                                                                      00142100
                AIF   ('&NEXTOFF' EQ '').ZPLV5E                         00142200
                AIF   (&XPLISTVER GE 1).ZPLV5E                          00142300
&XPLISTVER      SETA  1                                                 00142400
.ZPLV5E         ANOP  ,                                                 00142500
.*                                                                      00142600
                AIF   ('&NEXTPTROFF' EQ '').ZPLV6E                      00142700
                AIF   (&XPLISTVER GE 1).ZPLV6E                          00142800
&XPLISTVER      SETA  1                                                 00142900
.ZPLV6E         ANOP  ,                                                 00143000
.*                                                                      00143100
                AIF   ('&ENDOFQUEUE' EQ '').ZPLV7E                      00143200
                AIF   (&XPLISTVER GE 1).ZPLV7E                          00143300
&XPLISTVER      SETA  1                                                 00143400
.ZPLV7E         ANOP  ,                                                 00143500
.*                                                                      00143600
                AIF   ('&PARTOFF' EQ '').ZPLV8E                         00143700
                AIF   (&XPLISTVER GE 1).ZPLV8E                          00143800
&XPLISTVER      SETA  1                                                 00143900
.ZPLV8E         ANOP  ,                                                 00144000
.*                                                                      00144100
                AIF   ('&PARTPTROFF' EQ '').ZPLV9E                      00144200
                AIF   (&XPLISTVER GE 1).ZPLV9E                          00144300
&XPLISTVER      SETA  1                                                 00144400
.ZPLV9E         ANOP  ,                                                 00144500
.*                                                                      00144600
                AIF   ('&PARTALET' EQ '').ZPLV10E                       00144700
                AIF   (&XPLISTVER GE 1).ZPLV10E                         00144800
&XPLISTVER      SETA  1                                                 00144900
.ZPLV10E        ANOP  ,                                                 00145000
.*                                                                      00145100
                AIF   ('&PARTALETOFF' EQ '').ZPLV11E                    00145200
                AIF   (&XPLISTVER GE 1).ZPLV11E                         00145300
&XPLISTVER      SETA  1                                                 00145400
.ZPLV11E        ANOP  ,                                                 00145500
.*                                                                      00145600
                AIF   ('&PARTALETTBL' EQ '').ZPLV12E                    00145700
                AIF   (&XPLISTVER GE 1).ZPLV12E                         00145800
&XPLISTVER      SETA  1                                                 00145900
.ZPLV12E        ANOP  ,                                                 00146000
.*                                                                      00146100
                AIF   ('&PARTLEN' EQ '').ZPLV13E                        00146200
                AIF   (&XPLISTVER GE 1).ZPLV13E                         00146300
&XPLISTVER      SETA  1                                                 00146400
.ZPLV13E        ANOP  ,                                                 00146500
.*                                                                      00146600
                AIF   ('&PARTLENOFF' EQ '').ZPLV14E                     00146700
                AIF   (&XPLISTVER GE 1).ZPLV14E                         00146800
&XPLISTVER      SETA  1                                                 00146900
.ZPLV14E        ANOP  ,                                                 00147000
.*                                                                      00147100
                AIF   ('&PARTLENTBL' EQ '').ZPLV15E                     00147200
                AIF   (&XPLISTVER GE 1).ZPLV15E                         00147300
&XPLISTVER      SETA  1                                                 00147400
.ZPLV15E        ANOP  ,                                                 00147500
.*                                                                      00147600
                AIF   ('&MSGSTGKEY' EQ '').ZPLV16E                      00147700
                AIF   (&XPLISTVER GE 1).ZPLV16E                         00147800
&XPLISTVER      SETA  1                                                 00147900
.ZPLV16E        ANOP  ,                                                 00148000
.*                                                                      00148100
                AIF   ('&LINKAGE' EQ '').ZPLV17E                        00148200
                AIF   (&XPLISTVER GE 3).ZPLV17E                         00148300
&XPLISTVER      SETA  3                                                 00148400
.ZPLV17E        ANOP  ,                                                 00148500
.*                                                                      00148600
                AIF   ('&XCFDATA' EQ '').ZPLV18E                        00148700
                AIF   (&XPLISTVER GE 3).ZPLV18E                         00148800
&XPLISTVER      SETA  3                                                 00148900
.ZPLV18E        ANOP  ,                                                 00149000
.*                                                                      00149100
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00149200
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00149300
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00149400
.*-------------------------------------------------------------------   00149500
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00149600
&ZMS            SETC  '"PLISTVER='                                      00149700
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00149800
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00149900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00150000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00150100
                AGO   .ZPVCK2                                           00150200
.ZPVCK3         ANOP  ,                                                 00150300
.*-------------------------------------------------------------------   00150400
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00150500
&ZMS            SETC  '"PLISTVER='                                      00150600
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00150700
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00150800
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00150900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00151000
                AGO   .ZPVCKE                                           00151100
.ZPVCK2         ANOP  ,                                                 00151200
.*-------------------------------------------------------------------   00151300
&ZCVAL          SETC  '&PLISTVER(1)'                                    00151400
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00151500
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00151600
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00151700
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00151800
                AIF   (&ZN LE 3).ZPVCK4A   NOT HIGH                     00151900
.ZPVCK6         ANOP  ,                                                 00152000
&ZMS            SETC  '"PLISTVER='                                      00152100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00152200
&ZMS            SETC  '&ZMS THE RANGE IS "0-3"'                         00152300
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00152400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00152500
&XPLISTVER      SETA  3                                                 00152600
                AGO   .ZPVCKE                                           00152700
.*-------------------------------------------------------------------   00152800
.ZPVCK4A        ANOP  ,                                                 00152900
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00153000
&ZMS            SETC  'PLISTVER='                                       00153100
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00153200
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00153300
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00153400
                MNOTE 8,' &ZMS IS REQUIRED.'                            00153500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00153600
                AGO   .ZPVCK5                                           00153700
.ZPVCK4         ANOP  ,                                                 00153800
&XPLISTVER      SETA  &PLISTVER(1)                                      00153900
.ZPVCK5         ANOP  ,                                                 00154000
.ZPVCKE         ANOP  ,                                                 00154100
.********************************************************************   00154200
.***AG.MF01 PROCESS MF MACRO FORMS                                      00154300
.********************************************************************   00154400
                 ACTR  10000                                            00154500
.*------------------------------------------------------------------    00154600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00154700
&XMF             SETC  ''          INITIALIZE XVARIABLE                 00154800
.*-------------------------------------------------------------------   00154900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00155000
.ZG69            ANOP  ,                                                00155100
&ZTLC            SETC 'S'                                               00155200
                 AIF   ('&MF(1)' NE '&ZTLC').ZG70                       00155300
&XMF             SETC  'S'         SET KEYWORD                          00155400
                 AIF   (N'&MF LE 1).ZG69A       CK NUM                  00155500
&ZMS             SETC  '"MF='                                           00155600
&ZMS             SETC  '&ZMS.&MF"'                                      00155700
&ZMS             SETC  '&ZMS "MF"'                                      00155800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00155900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00156000
.ZG69A           ANOP  ,                                                00156100
.*-------------------------------------------------------------------   00156200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00156300
.ZG70            ANOP  ,                                                00156400
&ZTLC            SETC 'L'                                               00156500
                 AIF   ('&MF(1)' NE '&ZTLC').ZG77                       00156600
&XMF             SETC  'L'         SET KEYWORD                          00156700
                 AIF   (N'&MF LE 3).ZG70A       CK NUM                  00156800
&ZMS             SETC  '"MF='                                           00156900
&ZMS             SETC  '&ZMS.&MF"'                                      00157000
&ZMS             SETC  '&ZMS "MF"'                                      00157100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'             00157200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00157300
.ZG70A           ANOP  ,                                                00157400
.*-------------------------------------------------------------------   00157500
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00157600
                 AIF   (N'&SYSLIST NE 0).ZG70B  POSITIONALS?            00157700
                 AIF   ('&TOKEN' NE '').ZG70B   KEYS?                   00157800
                 AIF   ('&MSGTOKEN' NE '').ZG70B  KEYS?                 00157900
                 AIF   ('&MULTIPART' NE '').ZG70B  KEYS?                00158000
                 AIF   ('&MSGBUF' NE '').ZG70B  KEYS?                   00158100
                 AIF   ('&#MSGPARTS' NE '').ZG70B  KEYS?                00158200
                 AIF   ('&ELEMENT' NE '').ZG70B  KEYS?                  00158300
                 AIF   ('&ELEMFORM' NE '').ZG70B  KEYS?                 00158400
                 AIF   ('&NEXTOFF' NE '').ZG70B  KEYS?                  00158500
                 AIF   ('&NEXTPTROFF' NE '').ZG70B  KEYS?               00158600
                 AIF   ('&ENDOFQUEUE' NE '').ZG70B  KEYS?               00158700
                 AIF   ('&PARTOFF' NE '').ZG70B  KEYS?                  00158800
                 AIF   ('&PARTPTROFF' NE '').ZG70B  KEYS?               00158900
                 AIF   ('&PARTALET' NE '').ZG70B  KEYS?                 00159000
                 AIF   ('&PARTALETOFF' NE '').ZG70B  KEYS?              00159100
                 AIF   ('&PARTALETTBL' NE '').ZG70B  KEYS?              00159200
                 AIF   ('&PARTLEN' NE '').ZG70B  KEYS?                  00159300
                 AIF   ('&PARTLENOFF' NE '').ZG70B  KEYS?               00159400
                 AIF   ('&PARTLENTBL' NE '').ZG70B  KEYS?               00159500
                 AIF   ('&MSGSTGKEY' NE '').ZG70B  KEYS?                00159600
                 AIF   ('&LINKAGE' NE '').ZG70B  KEYS?                  00159700
                 AIF   ('&XCFDATA' NE '').ZG70B  KEYS?                  00159800
                 AIF   ('&RETCODE' NE '').ZG70B  KEYS?                  00159900
                 AIF   ('&RSNCODE' NE '').ZG70B  KEYS?                  00160000
                 AGO    .ZG70C     INVOCATION OKAY                      00160100
.ZG70B           ANOP  ,                                                00160200
&ZMS             SETC  'THE "L" FORM OF "MF"'                           00160300
&ZMS             SETC  '&ZMS CAN ONLY HAVE'                             00160400
&ZMS             SETC  '&ZMS THE "PLISTVER" KEY'                        00160500
                 MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'           00160600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00160700
.ZG70C           ANOP  ,                                                00160800
.*-------------------------------------------------------------------   00160900
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00161000
&ZXMFCTRL        SETC  'INPUT'     SET IN/OUTPUT                        00161100
&XMFCTRL         SETC  '&MF(2,1)'  SET XVARIABLE                        00161200
                 AIF   (N'&MF(2) GT 1).ZG72B    MULTI                   00161300
&XMFCTRL         SETC  '&MF(2)'    SET XVARIABLE                        00161400
.ZG72B           AIF   (K'&MF(2) GT 0).ZG72C                            00161500
&ZXMFCTRL        SETC  ''          RESET IN/OUTPUT                      00161600
&ZMS             SETC  'WHEN "L" IS SPECIFIED'                          00161700
&ZMS             SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'              00161800
                 MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                     00161900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00162000
.ZG72C           ANOP  ,                                                00162100
.*-------------------------------------------------------------------   00162200
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00162300
                 AIF   (K'&ZXMFCTRL LE 0).ZG72P  NOT I/O                00162400
                 AIF   ('&XMFCTRL'(1,1) NE '(').ZG72P                   00162500
&ZXMFCTRL        SETC  ''          RESET IN/OUTPUT                      00162600
&ZMS             SETC  '"MF='                                           00162700
&ZMS             SETC  '&ZMS.&MF"'                                      00162800
&ZMS             SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'        00162900
                 MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                00163000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00163100
.ZG72P           ANOP  ,                                                00163200
.*-------------------------------------------------------------------   00163300
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00163400
&ZXMFATTR        SETC  'INPUT'     SET IN/OUTPUT                        00163500
&XMFATTR         SETC  '0D'                                             00163600
                 AIF   (K'&MF(3) LE 0).ZG75B    PARM                    00163700
&XMFATTR         SETC  '&MF(3,1)'  SET XVARIABLE                        00163800
                 AIF   (N'&MF(3) GT 1).ZG75B    MULTI                   00163900
&XMFATTR         SETC  '&MF(3)'    SET XVARIABLE                        00164000
.ZG75B           ANOP  ,                                                00164100
.*-------------------------------------------------------------------   00164200
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00164300
                 AIF   (K'&ZXMFATTR LE 0).ZG75P  NOT I/O                00164400
                 AIF   ('&XMFATTR'(1,1) NE '(').ZG75P                   00164500
&ZXMFATTR        SETC  ''          RESET IN/OUTPUT                      00164600
&ZMS             SETC  '"MF='                                           00164700
&ZMS             SETC  '&ZMS.&MF"'                                      00164800
&ZMS             SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'        00164900
                 MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                00165000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00165100
.ZG75P           ANOP  ,                                                00165200
.*-------------------------------------------------------------------   00165300
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00165400
                 AIF   (K'&ZXMFATTR LE 0).ZG75S  NOT I/O                00165500
                 AIF   (K'&XMFATTR LE 60).ZG75S  LNG OK                 00165600
&ZXMFATTR        SETC  ''          RESET IN/OUTPUT                      00165700
&ZMS             SETC  '"MF='                                           00165800
&ZMS             SETC  '&ZMS.&MF"'                                      00165900
&ZMS             SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'            00166000
                 MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'               00166100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00166200
.ZG75S           ANOP  ,                                                00166300
.*-------------------------------------------------------------------   00166400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00166500
.ZG77            ANOP  ,                                                00166600
&ZTLC            SETC 'E'                                               00166700
                 AIF   ('&MF(1)' NE '&ZTLC').ZG85                       00166800
&XMF             SETC  'E'         SET KEYWORD                          00166900
                 AIF   (N'&MF LE 3).ZG77A       CK NUM                  00167000
&ZMS             SETC  '"MF='                                           00167100
&ZMS             SETC  '&ZMS.&MF"'                                      00167200
&ZMS             SETC  '&ZMS "MF"'                                      00167300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'             00167400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00167500
.ZG77A           ANOP  ,                                                00167600
.*-------------------------------------------------------------------   00167700
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00167800
&ZXMFCTRL        SETC  'INPUT'     SET IN/OUTPUT                        00167900
&XMFCTRL         SETC  '&MF(2,1)'  SET XVARIABLE                        00168000
                 AIF   (N'&MF(2) GT 1).ZG79B    MULTI                   00168100
&XMFCTRL         SETC  '&MF(2)'    SET XVARIABLE                        00168200
.ZG79B           AIF   (K'&MF(2) GT 0).ZG79C                            00168300
&ZXMFCTRL        SETC  ''          RESET IN/OUTPUT                      00168400
&ZMS             SETC  'WHEN "E" IS SPECIFIED'                          00168500
&ZMS             SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'              00168600
                 MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                     00168700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00168800
.ZG79C           ANOP  ,                                                00168900
.*-------------------------------------------------------------------   00169000
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00169100
                 AIF   (K'&ZXMFCTRL LE 0).ZG79R  NOT I/O                00169200
                 AIF   ('&XMFCTRL'(1,1) NE '(').ZG79R                   00169300
&ZCGPR           SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                       00169400
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG79P                     00169500
                 AIF   (K'&ZCGPR GT 2).ZG79Q                            00169600
                 AIF   ('&ZCGPR' EQ '0').ZG79Q                          00169700
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00169800
                 AIF   (T'&ZCGPR NE 'N').ZG79Q  INVALID REG NAME        00169900
.ZG79P           ANOP  ,                                                00170000
                 AIF   (T'&ZCGPR NE 'N').ZG79R  NON NUMERIC             00170100
                 AIF   ('&ZCGPR' LT '1').ZG79Q                          00170200
                 AIF   ('&ZCGPR' LE '12').ZG79R                         00170300
.ZG79Q           ANOP  ,                                                00170400
&ZMS             SETC  '"MF='                                           00170500
&ZMS             SETC  '&ZMS.&MF"'                                      00170600
&ZMS             SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'        00170700
                 MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                 00170800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00170900
.ZG79R           ANOP  ,                                                00171000
.*-------------------------------------------------------------------   00171100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00171200
&XMFSCK          SETC  ''          INITIALIZE XVARIABLE                 00171300
.ZG83A   AIF   ('&MF(3)' NE 'COMPLETE').ZG84A                           00171400
&XMFSCK          SETC  'COMPLETE'  SET KEYWORD                          00171500
.*-------------------------------------------------------------------   00171600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00171700
.ZG84A           AIF   (K'&XMFSCK GT 0).ZG84C   KEYWORD                 00171800
                 AIF   (K'&MF(3) LE 0).ZG84B                            00171900
&ZMS             SETC  '"MF='                                           00172000
&ZMS             SETC  '&ZMS.&MF"'                                      00172100
&ZMS             SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '        00172200
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00172300
&ZMS             SETC  '&ZMS "COMPLETE".'                               00172400
                 MNOTE 8,' &ZMS '                                       00172500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00172600
.ZG84B           ANOP  ,                                                00172700
&XMFSCK          SETC  'COMPLETE'  SET DEFAULT KEYWORD                  00172800
.ZG84C           ANOP  ,                                                00172900
&ZXMFSCK         SETC  'INPUT'     SET IN/OUTPUT                        00173000
.*------------------------------------------------------------------    00173100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00173200
.ZG85            ANOP  ,                                                00173300
&ZXMF            SETC  'INPUT'     SET IN/OUTPUT                        00173400
                 AIF   (K'&XMF GT 0).ZG85E      VALID ARG               00173500
                 AIF   (T'&MF EQ 'O').ZG85D     OMITTED                 00173600
&ZASYSLNDX       SETA  0                                                00173700
.ZG85A           ANOP  ,           POSITIONAL MACRO KEY                 00173800
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00173900
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG85C                 00174000
&ZTLC            SETC 'MF'                                              00174100
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG85A        00174200
.ZG85B           ANOP  ,                                                00174300
&ZXMF            SETC  ''          RESET IN/OUTPUT                      00174400
&ZMS             SETC  'THE "MF" KEY'                                   00174500
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00174600
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00174700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00174800
                 AGO   .ZG85E                                           00174900
.ZG85C           ANOP  ,                                                00175000
&ZXMF            SETC  ''          RESET IN/OUTPUT                      00175100
&ZMS             SETC  '"MF='                                           00175200
&ZMS             SETC  '&ZMS.&MF"'                                      00175300
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00175400
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00175500
&ZMS             SETC  '&ZMS "S",'                                      00175600
&ZMS             SETC  '&ZMS "L",'                                      00175700
&ZMS             SETC  '&ZMS OR "E".'                                   00175800
                 MNOTE 8,' &ZMS '                                       00175900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00176000
                 AGO   .ZG85E                                           00176100
.ZG85D           ANOP  ,                                                00176200
&XMF             SETC  'S'         SET DEFAULT KEYWORD                  00176300
&XMFSCK          SETC  'COMPLETE'  COMPLETE CHECKING                    00176400
.ZG85E           ANOP  ,                                                00176500
.********************************************************************   00176600
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00176700
.********************************************************************   00176800
                 ACTR  10000                                            00176900
.*-------------------------------------------------------------------   00177000
.***AG.MF03 MF=(SLE)                                                    00177100
                 AIF   ('&XMF' EQ 'L').ZGMFX                            00177200
.*----------------------------------------------------------------***   00177300
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00177400
&XFULLTOKEN      SETC  ''          INITIALIZE XVARIABLE                 00177500
                 AIF   (K'&TOKEN LE 0).ZG2C                             00177600
&ZXFULLTOKEN     SETC  'INPUT'     SET IN/OUTPUT                        00177700
&XFULLTOKEN      SETC  'TOKEN'     SET XVARIABLE                        00177800
&ZXTOKEN         SETC  'INPUT'     SET IN/OUTPUT                        00177900
&XTOKEN          SETC  '&TOKEN(1)'              SET XVARIABLE PARM      00178000
                 AIF   (N'&TOKEN GT 1).ZG2A                             00178100
&XTOKEN          SETC  '&TOKEN'    SET XVARIABLE PARM                   00178200
.ZG2A            AIF   (N'&TOKEN LE 1).ZG2B     CK NUM                  00178300
&ZMS             SETC  '"TOKEN='                                        00178400
&ZMS             SETC  '&ZMS.&TOKEN"'                                   00178500
&ZMS             SETC  '&ZMS "TOKEN"'                                   00178600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00178700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00178800
.ZG2B            AIF   (K'&XTOKEN GT 0).ZG2C    ONE PARM                00178900
&ZXFULLTOKEN     SETC  ''          RESET IN/OUTPUT                      00179000
&ZXTOKEN         SETC  ''          RESET IN/OUTPUT                      00179100
&ZMS             SETC  ' '                                              00179200
&ZMS             SETC  '&ZMS "TOKEN" KEY AND ITS'                       00179300
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00179400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00179500
.ZG2C            ANOP  ,                                                00179600
.*----------------------------------------------------------------***   00179700
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00179800
                 AIF   (K'&MSGTOKEN LE 0).ZG3D  NO ME KEY               00179900
                 AIF   (N'&MSGTOKEN LE 1).ZG3A  CK NUM                  00180000
&ZMS             SETC  '"MSGTOKEN='                                     00180100
&ZMS             SETC  '&ZMS.&MSGTOKEN"'                                00180200
&ZMS             SETC  '&ZMS "MSGTOKEN"'                                00180300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00180400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00180500
.ZG3A            AIF   (K'&XFULLTOKEN LE 0).ZG3B                        00180600
&ZMS             SETC  '"MSGTOKEN'                                      00180700
&ZMS             SETC  '&ZMS.=&MSGTOKEN"'                               00180800
&ZMS             SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'            00180900
&ZMS             SETC  '&ZMS "&XFULLTOKEN"'                             00181000
                 MNOTE 8,' &ZMS KEY.'                                   00181100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00181200
                 AGO   .ZG3D                                            00181300
.*                                                                      00181400
.ZG3B            ANOP  ,                                                00181500
&ZXFULLTOKEN     SETC  'INPUT'     SET IN/OUTPUT                        00181600
&XFULLTOKEN      SETC  'MSGTOKEN'  SET XVARIABLE                        00181700
&ZXMSGTOKEN      SETC  'INPUT'     SET IN/OUTPUT                        00181800
&XMSGTOKEN       SETC  '&MSGTOKEN(1)'           SET XVARIABLE PARM      00181900
                 AIF   (N'&MSGTOKEN GT 1).ZG3C                          00182000
&XMSGTOKEN       SETC  '&MSGTOKEN'              SET XVARIABLE PARM      00182100
.ZG3C            AIF   (K'&XMSGTOKEN GT 0).ZG3D  ONE PARM               00182200
&ZXFULLTOKEN     SETC  ''          RESET IN/OUTPUT                      00182300
&ZXMSGTOKEN      SETC  ''          RESET IN/OUTPUT                      00182400
&ZMS             SETC  ' '                                              00182500
&ZMS             SETC  '&ZMS "MSGTOKEN" KEY AND ITS'                    00182600
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00182700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00182800
.ZG3D            ANOP  ,                                                00182900
.*------------------------------------------------------------------    00183000
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00183100
                 AIF   (K'&XFULLTOKEN GT 0).ZG4B                        00183200
&ZXFULLTOKEN     SETC  ''          RESET IN/OUTPUT                      00183300
&ZXTOKEN         SETC  ''          RESET IN/OUTPUT                      00183400
&XFULLTOKEN      SETC  ''          ENSURE NULL                          00183500
&XTOKEN          SETC  ''          ENSURE NULL                          00183600
&ZMS             SETC  'ONE OF THE FOLLOWING'                           00183700
&ZMS             SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'              00183800
&ZMS             SETC  '&ZMS REQUIRED:'                                 00183900
&ZMS             SETC  '&ZMS "TOKEN"'           VALID ME KEY            00184000
&ZMS             SETC  '&ZMS OR "MSGTOKEN".'    VALID ME KEY            00184100
                 MNOTE 8,' &ZMS '                                       00184200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00184300
.ZG4B            ANOP  ,                                                00184400
.*-------------------------------------------------------------------   00184500
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00184600
.ZG2ZY  AIF    ('&XFULLTOKEN' NE 'TOKEN').ZG3ZY                         00184700
.*-------------------------------------------------------------------   00184800
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00184900
                 AIF   (K'&ZXTOKEN LE 0).ZG2R   NOT I/O                 00185000
                 AIF   ('&XTOKEN'(1,1) NE '(').ZG2R                     00185100
&ZCGPR           SETC  '&XTOKEN'(2,K'&XTOKEN-2)                         00185200
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                      00185300
                 AIF   (K'&ZCGPR GT 2).ZG2Q                             00185400
                 AIF   ('&ZCGPR' EQ '0').ZG2Q                           00185500
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00185600
                 AIF   (T'&ZCGPR NE 'N').ZG2Q   INVALID REG NAME        00185700
.ZG2P            ANOP  ,                                                00185800
                 AIF   (T'&ZCGPR NE 'N').ZG2R   NON NUMERIC             00185900
                 AIF   ('&ZCGPR' LT '2').ZG2Q                           00186000
                 AIF   ('&ZCGPR' LE '12').ZG2R                          00186100
.ZG2Q            ANOP  ,                                                00186200
&ZMS             SETC  '"TOKEN='                                        00186300
&ZMS             SETC  '&ZMS.&TOKEN"'                                   00186400
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00186500
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00186600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00186700
.ZG2R            ANOP  ,                                                00186800
.*-------------------------------------------------------------------   00186900
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00187000
.ZG3ZY  AIF    ('&XFULLTOKEN' NE 'MSGTOKEN').ZG4ZY                      00187100
.*-------------------------------------------------------------------   00187200
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00187300
                 AIF   (K'&ZXMSGTOKEN LE 0).ZG3R  NOT I/O               00187400
                 AIF   ('&XMSGTOKEN'(1,1) NE '(').ZG3R                  00187500
&ZCGPR           SETC  '&XMSGTOKEN'(2,K'&XMSGTOKEN-2)                   00187600
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG3P                      00187700
                 AIF   (K'&ZCGPR GT 2).ZG3Q                             00187800
                 AIF   ('&ZCGPR' EQ '0').ZG3Q                           00187900
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00188000
                 AIF   (T'&ZCGPR NE 'N').ZG3Q   INVALID REG NAME        00188100
.ZG3P            ANOP  ,                                                00188200
                 AIF   (T'&ZCGPR NE 'N').ZG3R   NON NUMERIC             00188300
                 AIF   ('&ZCGPR' LT '2').ZG3Q                           00188400
                 AIF   ('&ZCGPR' LE '12').ZG3R                          00188500
.ZG3Q            ANOP  ,                                                00188600
&ZMS             SETC  '"MSGTOKEN='                                     00188700
&ZMS             SETC  '&ZMS.&MSGTOKEN"'                                00188800
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00188900
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00189000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00189100
.ZG3R            ANOP  ,                                                00189200
.*-------------------------------------------------------------------   00189300
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00189400
.ZG4ZY           ANOP ,            END MUTUALLY EXCLUSIVE KEYS          00189500
.*------------------------------------------------------------------    00189600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00189700
&XMULTIPART      SETC  ''          INITIALIZE XVARIABLE                 00189800
.*-------------------------------------------------------------------   00189900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00190000
.ZG7             ANOP  ,                                                00190100
                 AIF   (K'&MULTIPART(1) LE 0).ZG7A                      00190200
&ZTLC            SETC 'NO'                                              00190300
                 AIF   ('&MULTIPART(1)' NE '&ZTLC').ZG11                00190400
&XMULTIPART      SETC  'NO'        SET KEYWORD                          00190500
                 AIF   (N'&MULTIPART LE 1).ZG7A  CK NUM                 00190600
&ZMS             SETC  '"MULTIPART='                                    00190700
&ZMS             SETC  '&ZMS.&MULTIPART"'                               00190800
&ZMS             SETC  '&ZMS "MULTIPART"'                               00190900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00191000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00191100
.ZG7A            ANOP  ,                                                00191200
.*------------------------------------------------------------------    00191300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00191400
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00191500
.ZG7A0           AIF   (K'&#MSGPARTS LE 0).ZG7A1  OK                    00191600
&ZCVAL           SETC '&ZCVAL #MSGPARTS'        INCORRECT KEY USED      00191700
.ZG7A1           AIF   (K'&ELEMENT LE 0).ZG7A2  OK                      00191800
&ZCVAL           SETC '&ZCVAL ELEMENT'          INCORRECT KEY USED      00191900
.ZG7A2           AIF   (K'&ELEMFORM LE 0).ZG7A3  OK                     00192000
&ZCVAL           SETC '&ZCVAL ELEMFORM'         INCORRECT KEY USED      00192100
.ZG7A3           AIF   (K'&NEXTOFF LE 0).ZG7A4  OK                      00192200
&ZCVAL           SETC '&ZCVAL NEXTOFF'          INCORRECT KEY USED      00192300
.ZG7A4           AIF   (K'&NEXTPTROFF LE 0).ZG7A5  OK                   00192400
&ZCVAL           SETC '&ZCVAL NEXTPTROFF'       INCORRECT KEY USED      00192500
.ZG7A5           AIF   (K'&ENDOFQUEUE LE 0).ZG7A6  OK                   00192600
&ZCVAL           SETC '&ZCVAL ENDOFQUEUE'       INCORRECT KEY USED      00192700
.ZG7A6           AIF   (K'&PARTOFF LE 0).ZG7A7  OK                      00192800
&ZCVAL           SETC '&ZCVAL PARTOFF'          INCORRECT KEY USED      00192900
.ZG7A7           AIF   (K'&PARTPTROFF LE 0).ZG7A8  OK                   00193000
&ZCVAL           SETC '&ZCVAL PARTPTROFF'       INCORRECT KEY USED      00193100
.ZG7A8           AIF   (K'&PARTALET LE 0).ZG7A9  OK                     00193200
&ZCVAL           SETC '&ZCVAL PARTALET'         INCORRECT KEY USED      00193300
.ZG7A9           AIF   (K'&PARTALETOFF LE 0).ZG7A10  OK                 00193400
&ZCVAL           SETC '&ZCVAL PARTALETOFF'      INCORRECT KEY USED      00193500
.ZG7A10          AIF   (K'&PARTALETTBL LE 0).ZG7A11  OK                 00193600
&ZCVAL           SETC '&ZCVAL PARTALETTBL'      INCORRECT KEY USED      00193700
.ZG7A11          AIF   (K'&PARTLEN LE 0).ZG7A12  OK                     00193800
&ZCVAL           SETC '&ZCVAL PARTLEN'          INCORRECT KEY USED      00193900
.ZG7A12          AIF   (K'&PARTLENOFF LE 0).ZG7A13  OK                  00194000
&ZCVAL           SETC '&ZCVAL PARTLENOFF'       INCORRECT KEY USED      00194100
.ZG7A13          AIF   (K'&PARTLENTBL LE 0).ZG7A14  OK                  00194200
&ZCVAL           SETC '&ZCVAL PARTLENTBL'       INCORRECT KEY USED      00194300
.ZG7A14          AIF   (K'&ZCVAL LE 0).ZG7A15   OK                      00194400
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00194500
&ZMS             SETC  '"MULTIPART'                                     00194600
&ZMS             SETC  '&ZMS.=&MULTIPART"'                              00194700
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00194800
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00194900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00195000
.ZG7A15          ANOP  ,                                                00195100
.*----------------------------------------------------------------***   00195200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00195300
                 AIF   (N'&MSGBUF LE 1).ZG9A    CK NUM                  00195400
&ZMS             SETC  '"MSGBUF='                                       00195500
&ZMS             SETC  '&ZMS.&MSGBUF"'                                  00195600
&ZMS             SETC  '&ZMS "MSGBUF"'                                  00195700
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00195800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00195900
.ZG9A            ANOP  ,                                                00196000
.*-------------------------------------------------------------------   00196100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00196200
&ZXMSGBUF        SETC  'INPUT'     SET IN/OUTPUT                        00196300
&XMSGBUF         SETC  '&MSGBUF(1)'             SET XVARIABLE           00196400
                 AIF   (N'&MSGBUF GT 1).ZG9B    MULTI                   00196500
&XMSGBUF         SETC  '&MSGBUF'   SET XVARIABLE                        00196600
.ZG9B            AIF   (K'&MSGBUF(1) GT 0).ZG9C                         00196700
&ZXMSGBUF        SETC  ''          RESET IN/OUTPUT                      00196800
&ZMS             SETC  'WHEN "NO" IS SPECIFIED'                         00196900
&ZMS             SETC  '&ZMS , "MSGBUF" KEY AND ITS'                    00197000
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00197100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00197200
.ZG9C            ANOP  ,                                                00197300
.*-------------------------------------------------------------------   00197400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00197500
                 AIF   (K'&ZXMSGBUF LE 0).ZG9R  NOT I/O                 00197600
                 AIF   ('&XMSGBUF'(1,1) NE '(').ZG9R                    00197700
&ZCGPR           SETC  '&XMSGBUF'(2,K'&XMSGBUF-2)                       00197800
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG9P                      00197900
                 AIF   (K'&ZCGPR GT 2).ZG9Q                             00198000
                 AIF   ('&ZCGPR' EQ '0').ZG9Q                           00198100
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00198200
                 AIF   (T'&ZCGPR NE 'N').ZG9Q   INVALID REG NAME        00198300
.ZG9P            ANOP  ,                                                00198400
                 AIF   (T'&ZCGPR NE 'N').ZG9R   NON NUMERIC             00198500
                 AIF   ('&ZCGPR' LT '2').ZG9Q                           00198600
                 AIF   ('&ZCGPR' LE '12').ZG9R                          00198700
.ZG9Q            ANOP  ,                                                00198800
&ZMS             SETC  '"MSGBUF='                                       00198900
&ZMS             SETC  '&ZMS.&MSGBUF"'                                  00199000
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00199100
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00199200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00199300
.ZG9R            ANOP  ,                                                00199400
.*-------------------------------------------------------------------   00199500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00199600
.ZG11            ANOP  ,                                                00199700
&ZTLC            SETC 'YES'                                             00199800
                 AIF   ('&MULTIPART(1)' NE '&ZTLC').ZG46                00199900
&XMULTIPART      SETC  'YES'       SET KEYWORD                          00200000
                 AIF   (N'&MULTIPART LE 1).ZG11A  CK NUM                00200100
&ZMS             SETC  '"MULTIPART='                                    00200200
&ZMS             SETC  '&ZMS.&MULTIPART"'                               00200300
&ZMS             SETC  '&ZMS "MULTIPART"'                               00200400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00200500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00200600
.ZG11A           ANOP  ,                                                00200700
.*------------------------------------------------------------------    00200800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00200900
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00201000
.ZG11A0          AIF   (K'&MSGBUF LE 0).ZG11A1  OK                      00201100
&ZCVAL           SETC '&ZCVAL MSGBUF'           INCORRECT KEY USED      00201200
.ZG11A1          AIF   (K'&ZCVAL LE 0).ZG11A2   OK                      00201300
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00201400
&ZMS             SETC  '"MULTIPART'                                     00201500
&ZMS             SETC  '&ZMS.=&MULTIPART"'                              00201600
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00201700
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00201800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00201900
.ZG11A2          ANOP  ,                                                00202000
.*----------------------------------------------------------------***   00202100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00202200
                 AIF   (N'&#MSGPARTS LE 1).ZG13A  CK NUM                00202300
&ZMS             SETC  '"#MSGPARTS='                                    00202400
&ZMS             SETC  '&ZMS.&#MSGPARTS"'                               00202500
&ZMS             SETC  '&ZMS "#MSGPARTS"'                               00202600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00202700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00202800
.ZG13A           ANOP  ,                                                00202900
.*-------------------------------------------------------------------   00203000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00203100
&ZX#MSGPARTS     SETC  'INPUT'     SET IN/OUTPUT                        00203200
&X#MSGPARTS      SETC  'AS_NEEDED'                                      00203300
                 AIF   (K'&#MSGPARTS(1) LE 0).ZG13B  PARM               00203400
&X#MSGPARTS      SETC  '&#MSGPARTS(1)'          SET XVARIABLE           00203500
                 AIF   (N'&#MSGPARTS GT 1).ZG13B  MULTI                 00203600
&X#MSGPARTS      SETC  '&#MSGPARTS'             SET XVARIABLE           00203700
.ZG13B           ANOP  ,                                                00203800
.*-------------------------------------------------------------------   00203900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00204000
                 AIF   (K'&ZX#MSGPARTS LE 0).ZG13R  NOT I/O             00204100
         AIF   ('&X#MSGPARTS' EQ 'AS_NEEDED').ZG13R                     00204200
                 AIF   ('&X#MSGPARTS'(1,1) NE '(').ZG13R                00204300
&ZCGPR           SETC  '&X#MSGPARTS'(2,K'&X#MSGPARTS-2)                 00204400
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG13P                     00204500
                 AIF   (K'&ZCGPR GT 2).ZG13Q                            00204600
                 AIF   ('&ZCGPR' EQ '0').ZG13Q                          00204700
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00204800
                 AIF   (T'&ZCGPR NE 'N').ZG13Q  INVALID REG NAME        00204900
.ZG13P           ANOP  ,                                                00205000
                 AIF   (T'&ZCGPR NE 'N').ZG13R  NON NUMERIC             00205100
                 AIF   ('&ZCGPR' LT '2').ZG13Q                          00205200
                 AIF   ('&ZCGPR' LE '12').ZG13R                         00205300
.ZG13Q           ANOP  ,                                                00205400
&ZMS             SETC  '"#MSGPARTS='                                    00205500
&ZMS             SETC  '&ZMS.&#MSGPARTS"'                               00205600
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00205700
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00205800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00205900
.ZG13R           ANOP  ,                                                00206000
.*----------------------------------------------------------------***   00206100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00206200
                 AIF   (N'&ELEMENT LE 1).ZG16A  CK NUM                  00206300
&ZMS             SETC  '"ELEMENT='                                      00206400
&ZMS             SETC  '&ZMS.&ELEMENT"'                                 00206500
&ZMS             SETC  '&ZMS "ELEMENT"'                                 00206600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00206700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00206800
.ZG16A           ANOP  ,                                                00206900
.*-------------------------------------------------------------------   00207000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00207100
&ZXELEMENT       SETC  'INPUT'     SET IN/OUTPUT                        00207200
&XELEMENT        SETC  '&ELEMENT(1)'            SET XVARIABLE           00207300
                 AIF   (N'&ELEMENT GT 1).ZG16B  MULTI                   00207400
&XELEMENT        SETC  '&ELEMENT'  SET XVARIABLE                        00207500
.ZG16B           AIF   (K'&ELEMENT(1) GT 0).ZG16C                       00207600
&ZXELEMENT       SETC  ''          RESET IN/OUTPUT                      00207700
&ZMS             SETC  'WHEN "YES" IS SPECIFIED'                        00207800
&ZMS             SETC  '&ZMS , "ELEMENT" KEY AND ITS'                   00207900
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00208000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00208100
.ZG16C           ANOP  ,                                                00208200
.*-------------------------------------------------------------------   00208300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00208400
                 AIF   (K'&ZXELEMENT LE 0).ZG16R  NOT I/O               00208500
                 AIF   ('&XELEMENT'(1,1) NE '(').ZG16R                  00208600
&ZCGPR           SETC  '&XELEMENT'(2,K'&XELEMENT-2)                     00208700
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG16P                     00208800
                 AIF   (K'&ZCGPR GT 2).ZG16Q                            00208900
                 AIF   ('&ZCGPR' EQ '0').ZG16Q                          00209000
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00209100
                 AIF   (T'&ZCGPR NE 'N').ZG16Q  INVALID REG NAME        00209200
.ZG16P           ANOP  ,                                                00209300
                 AIF   (T'&ZCGPR NE 'N').ZG16R  NON NUMERIC             00209400
                 AIF   ('&ZCGPR' LT '2').ZG16Q                          00209500
                 AIF   ('&ZCGPR' LE '12').ZG16R                         00209600
.ZG16Q           ANOP  ,                                                00209700
&ZMS             SETC  '"ELEMENT='                                      00209800
&ZMS             SETC  '&ZMS.&ELEMENT"'                                 00209900
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00210000
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00210100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00210200
.ZG16R           ANOP  ,                                                00210300
.*------------------------------------------------------------------    00210400
.***AG.KKCTL01 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00210500
&XELEMFORM       SETC  ''          INITIALIZE XVARIABLE                 00210600
.*-------------------------------------------------------------------   00210700
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00210800
.ZG20            ANOP  ,                                                00210900
                 AIF   (K'&ELEMFORM(1) LE 0).ZG20A                      00211000
&ZTLC            SETC 'TABLE'                                           00211100
                 AIF   ('&ELEMFORM(1)' NE '&ZTLC').ZG24                 00211200
&XELEMFORM       SETC  'TABLE'     SET KEYWORD                          00211300
                 AIF   (N'&ELEMFORM LE 1).ZG20A  CK NUM                 00211400
&ZMS             SETC  '"ELEMFORM='                                     00211500
&ZMS             SETC  '&ZMS.&ELEMFORM"'                                00211600
&ZMS             SETC  '&ZMS "ELEMFORM"'                                00211700
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00211800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00211900
.ZG20A           ANOP  ,                                                00212000
.*------------------------------------------------------------------    00212100
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00212200
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00212300
.ZG20A0          AIF   (K'&NEXTPTROFF LE 0).ZG20A1  OK                  00212400
&ZCVAL           SETC '&ZCVAL NEXTPTROFF'       INCORRECT KEY USED      00212500
.ZG20A1          AIF   (K'&ENDOFQUEUE LE 0).ZG20A2  OK                  00212600
&ZCVAL           SETC '&ZCVAL ENDOFQUEUE'       INCORRECT KEY USED      00212700
.ZG20A2          AIF   (K'&ZCVAL LE 0).ZG20A3   OK                      00212800
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00212900
&ZMS             SETC  '"ELEMFORM'                                      00213000
&ZMS             SETC  '&ZMS.=&ELEMFORM"'                               00213100
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00213200
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00213300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00213400
.ZG20A3          ANOP  ,                                                00213500
.*----------------------------------------------------------------***   00213600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00213700
                 AIF   (N'&NEXTOFF LE 1).ZG22A  CK NUM                  00213800
&ZMS             SETC  '"NEXTOFF='                                      00213900
&ZMS             SETC  '&ZMS.&NEXTOFF"'                                 00214000
&ZMS             SETC  '&ZMS "NEXTOFF"'                                 00214100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00214200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00214300
.ZG22A           ANOP  ,                                                00214400
.*-------------------------------------------------------------------   00214500
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00214600
&ZXNEXTOFF       SETC  'INPUT'     SET IN/OUTPUT                        00214700
&XNEXTOFF        SETC  '&NEXTOFF(1)'            SET XVARIABLE           00214800
                 AIF   (N'&NEXTOFF GT 1).ZG22B  MULTI                   00214900
&XNEXTOFF        SETC  '&NEXTOFF'  SET XVARIABLE                        00215000
.ZG22B           AIF   (K'&NEXTOFF(1) GT 0).ZG22C                       00215100
&ZXNEXTOFF       SETC  ''          RESET IN/OUTPUT                      00215200
&ZMS             SETC  'WHEN "TABLE" IS SPECIFIED'                      00215300
&ZMS             SETC  '&ZMS , "NEXTOFF" KEY AND ITS'                   00215400
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00215500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00215600
.ZG22C           ANOP  ,                                                00215700
.*-------------------------------------------------------------------   00215800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00215900
                 AIF   (K'&ZXNEXTOFF LE 0).ZG22R  NOT I/O               00216000
                 AIF   ('&XNEXTOFF'(1,1) NE '(').ZG22R                  00216100
&ZCGPR           SETC  '&XNEXTOFF'(2,K'&XNEXTOFF-2)                     00216200
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG22P                     00216300
                 AIF   (K'&ZCGPR GT 2).ZG22Q                            00216400
                 AIF   ('&ZCGPR' EQ '0').ZG22Q                          00216500
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00216600
                 AIF   (T'&ZCGPR NE 'N').ZG22Q  INVALID REG NAME        00216700
.ZG22P           ANOP  ,                                                00216800
                 AIF   (T'&ZCGPR NE 'N').ZG22R  NON NUMERIC             00216900
                 AIF   ('&ZCGPR' LT '2').ZG22Q                          00217000
                 AIF   ('&ZCGPR' LE '12').ZG22R                         00217100
.ZG22Q           ANOP  ,                                                00217200
&ZMS             SETC  '"NEXTOFF='                                      00217300
&ZMS             SETC  '&ZMS.&NEXTOFF"'                                 00217400
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00217500
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00217600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00217700
.ZG22R           ANOP  ,                                                00217800
.*-------------------------------------------------------------------   00217900
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00218000
.ZG24            ANOP  ,                                                00218100
&ZTLC            SETC 'QUEUE'                                           00218200
                 AIF   ('&ELEMFORM(1)' NE '&ZTLC').ZG31                 00218300
&XELEMFORM       SETC  'QUEUE'     SET KEYWORD                          00218400
                 AIF   (N'&ELEMFORM LE 1).ZG24A  CK NUM                 00218500
&ZMS             SETC  '"ELEMFORM='                                     00218600
&ZMS             SETC  '&ZMS.&ELEMFORM"'                                00218700
&ZMS             SETC  '&ZMS "ELEMFORM"'                                00218800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00218900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00219000
.ZG24A           ANOP  ,                                                00219100
.*------------------------------------------------------------------    00219200
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00219300
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00219400
.ZG24A0          AIF   (K'&NEXTOFF LE 0).ZG24A1  OK                     00219500
&ZCVAL           SETC '&ZCVAL NEXTOFF'          INCORRECT KEY USED      00219600
.ZG24A1          AIF   (K'&ZCVAL LE 0).ZG24A2   OK                      00219700
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00219800
&ZMS             SETC  '"ELEMFORM'                                      00219900
&ZMS             SETC  '&ZMS.=&ELEMFORM"'                               00220000
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00220100
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00220200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00220300
.ZG24A2          ANOP  ,                                                00220400
.*----------------------------------------------------------------***   00220500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00220600
                 AIF   (N'&NEXTPTROFF LE 1).ZG26A  CK NUM               00220700
&ZMS             SETC  '"NEXTPTROFF='                                   00220800
&ZMS             SETC  '&ZMS.&NEXTPTROFF"'                              00220900
&ZMS             SETC  '&ZMS "NEXTPTROFF"'                              00221000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00221100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00221200
.ZG26A           ANOP  ,                                                00221300
.*-------------------------------------------------------------------   00221400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00221500
&ZXNEXTPTROFF    SETC  'INPUT'     SET IN/OUTPUT                        00221600
&XNEXTPTROFF     SETC  '&NEXTPTROFF(1)'         SET XVARIABLE           00221700
                 AIF   (N'&NEXTPTROFF GT 1).ZG26B  MULTI                00221800
&XNEXTPTROFF     SETC  '&NEXTPTROFF'            SET XVARIABLE           00221900
.ZG26B           AIF   (K'&NEXTPTROFF(1) GT 0).ZG26C                    00222000
&ZXNEXTPTROFF    SETC  ''          RESET IN/OUTPUT                      00222100
&ZMS             SETC  'WHEN "QUEUE" IS SPECIFIED'                      00222200
&ZMS             SETC  '&ZMS , "NEXTPTROFF" KEY AND ITS'                00222300
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00222400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00222500
.ZG26C           ANOP  ,                                                00222600
.*-------------------------------------------------------------------   00222700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00222800
                 AIF   (K'&ZXNEXTPTROFF LE 0).ZG26R  NOT I/O            00222900
                 AIF   ('&XNEXTPTROFF'(1,1) NE '(').ZG26R               00223000
&ZCGPR           SETC  '&XNEXTPTROFF'(2,K'&XNEXTPTROFF-2)               00223100
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG26P                     00223200
                 AIF   (K'&ZCGPR GT 2).ZG26Q                            00223300
                 AIF   ('&ZCGPR' EQ '0').ZG26Q                          00223400
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00223500
                 AIF   (T'&ZCGPR NE 'N').ZG26Q  INVALID REG NAME        00223600
.ZG26P           ANOP  ,                                                00223700
                 AIF   (T'&ZCGPR NE 'N').ZG26R  NON NUMERIC             00223800
                 AIF   ('&ZCGPR' LT '2').ZG26Q                          00223900
                 AIF   ('&ZCGPR' LE '12').ZG26R                         00224000
.ZG26Q           ANOP  ,                                                00224100
&ZMS             SETC  '"NEXTPTROFF='                                   00224200
&ZMS             SETC  '&ZMS.&NEXTPTROFF"'                              00224300
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00224400
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00224500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00224600
.ZG26R           ANOP  ,                                                00224700
.*----------------------------------------------------------------***   00224800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00224900
                 AIF   (N'&ENDOFQUEUE LE 1).ZG29A  CK NUM               00225000
&ZMS             SETC  '"ENDOFQUEUE='                                   00225100
&ZMS             SETC  '&ZMS.&ENDOFQUEUE"'                              00225200
&ZMS             SETC  '&ZMS "ENDOFQUEUE"'                              00225300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00225400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00225500
.ZG29A           ANOP  ,                                                00225600
.*-------------------------------------------------------------------   00225700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00225800
&ZXENDOFQUEUE    SETC  'INPUT'     SET IN/OUTPUT                        00225900
&XENDOFQUEUE     SETC  'ZERO'                                           00226000
                 AIF   (K'&ENDOFQUEUE(1) LE 0).ZG29B  PARM              00226100
&XENDOFQUEUE     SETC  '&ENDOFQUEUE(1)'         SET XVARIABLE           00226200
                 AIF   (N'&ENDOFQUEUE GT 1).ZG29B  MULTI                00226300
&XENDOFQUEUE     SETC  '&ENDOFQUEUE'            SET XVARIABLE           00226400
.ZG29B           ANOP  ,                                                00226500
.*-------------------------------------------------------------------   00226600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00226700
                 AIF   (K'&ZXENDOFQUEUE LE 0).ZG29R  NOT I/O            00226800
         AIF   ('&XENDOFQUEUE' EQ 'ZERO').ZG29R                         00226900
                 AIF   ('&XENDOFQUEUE'(1,1) NE '(').ZG29R               00227000
&ZCGPR           SETC  '&XENDOFQUEUE'(2,K'&XENDOFQUEUE-2)               00227100
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG29P                     00227200
                 AIF   (K'&ZCGPR GT 2).ZG29Q                            00227300
                 AIF   ('&ZCGPR' EQ '0').ZG29Q                          00227400
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00227500
                 AIF   (T'&ZCGPR NE 'N').ZG29Q  INVALID REG NAME        00227600
.ZG29P           ANOP  ,                                                00227700
                 AIF   (T'&ZCGPR NE 'N').ZG29R  NON NUMERIC             00227800
                 AIF   ('&ZCGPR' LT '2').ZG29Q                          00227900
                 AIF   ('&ZCGPR' LE '12').ZG29R                         00228000
.ZG29Q           ANOP  ,                                                00228100
&ZMS             SETC  '"ENDOFQUEUE='                                   00228200
&ZMS             SETC  '&ZMS.&ENDOFQUEUE"'                              00228300
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00228400
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00228500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00228600
.ZG29R           ANOP  ,                                                00228700
.*------------------------------------------------------------------    00228800
.***AG.KKCTL04 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00228900
.ZG31            ANOP  ,                                                00229000
&ZXELEMFORM      SETC  'INPUT'     SET IN/OUTPUT                        00229100
                 AIF   (K'&XELEMFORM GT 0).ZG31E  VALID ARG             00229200
                 AIF   (T'&ELEMFORM EQ 'O').ZG31D  OMITTED              00229300
&ZASYSLNDX       SETA  0                                                00229400
.ZG31A           ANOP  ,           POSITIONAL MACRO KEY                 00229500
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00229600
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG31C                 00229700
&ZTLC            SETC 'ELEMFORM'                                        00229800
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG31A        00229900
.ZG31B           ANOP  ,                                                00230000
&ZXELEMFORM      SETC  ''          RESET IN/OUTPUT                      00230100
&ZMS             SETC  'THE "ELEMFORM" KEY'                             00230200
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00230300
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00230400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00230500
                 AGO   .ZG31E                                           00230600
.ZG31C           ANOP  ,                                                00230700
&ZXELEMFORM      SETC  ''          RESET IN/OUTPUT                      00230800
&ZMS             SETC  '"ELEMFORM='                                     00230900
&ZMS             SETC  '&ZMS.&ELEMFORM"'                                00231000
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00231100
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00231200
&ZMS             SETC  '&ZMS "TABLE"'                                   00231300
&ZMS             SETC  '&ZMS OR "QUEUE".'                               00231400
                 MNOTE 8,' &ZMS '                                       00231500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00231600
                 AGO   .ZG31E                                           00231700
.ZG31D           ANOP  ,                                                00231800
&XELEMFORM       SETC  'TABLE'     SET DEFAULT KEYWORD                  00231900
.ZG31E           ANOP  ,                                                00232000
.*------------------------------------------------------------------    00232100
.***AG.KKCTL05 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00232200
                 AIF   (K'&ELEMFORM(1) GT 0).ZG31F  PARM                00232300
&XELEMFORM       SETC  ''          ENSURE NULL KEYWORD                  00232400
&ZXELEMFORM      SETC  ''          RESET IN/OUTPUT                      00232500
&ZMS             SETC  'WHEN "YES" IS SPECIFIED, THE'                   00232600
&ZMS             SETC  '&ZMS "ELEMFORM" KEY AND ITS'                    00232700
&ZMS             SETC  '&ZMS ARGUMENT ARE REQUIRED.'                    00232800
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00232900
&ZMS             SETC  '&ZMS "TABLE"'                                   00233000
&ZMS             SETC  '&ZMS OR "QUEUE".'                               00233100
                 MNOTE 8,' &ZMS '                                       00233200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00233300
.ZG31F           ANOP  ,                                                00233400
.*----------------------------------------------------------------***   00233500
.***AG.KMEKY01 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00233600
&XPARTMODE       SETC  ''          INITIALIZE XVARIABLE                 00233700
                 AIF   (K'&PARTOFF LE 0).ZG33C                          00233800
&ZXPARTMODE      SETC  'INPUT'     SET IN/OUTPUT                        00233900
&XPARTMODE       SETC  'PARTOFF'   SET XVARIABLE                        00234000
&ZXPARTOFF       SETC  'INPUT'     SET IN/OUTPUT                        00234100
&XPARTOFF        SETC  '&PARTOFF(1)'            SET XVARIABLE PARM      00234200
                 AIF   (N'&PARTOFF GT 1).ZG33A                          00234300
&XPARTOFF        SETC  '&PARTOFF'  SET XVARIABLE PARM                   00234400
.ZG33A           AIF   (N'&PARTOFF LE 1).ZG33B  CK NUM                  00234500
&ZMS             SETC  '"PARTOFF='                                      00234600
&ZMS             SETC  '&ZMS.&PARTOFF"'                                 00234700
&ZMS             SETC  '&ZMS "PARTOFF"'                                 00234800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00234900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00235000
.ZG33B           AIF   (K'&XPARTOFF GT 0).ZG33C  ONE PARM               00235100
&ZXPARTMODE      SETC  ''          RESET IN/OUTPUT                      00235200
&ZXPARTOFF       SETC  ''          RESET IN/OUTPUT                      00235300
&ZMS             SETC  'WHEN "YES" IS SPECIFIED'                        00235400
&ZMS             SETC  '&ZMS , "PARTOFF" KEY AND ITS'                   00235500
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00235600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00235700
.ZG33C           ANOP  ,                                                00235800
.*----------------------------------------------------------------***   00235900
.***AG.KMEKY02 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00236000
                 AIF   (K'&PARTPTROFF LE 0).ZG34D  NO ME KEY            00236100
                 AIF   (N'&PARTPTROFF LE 1).ZG34A  CK NUM               00236200
&ZMS             SETC  '"PARTPTROFF='                                   00236300
&ZMS             SETC  '&ZMS.&PARTPTROFF"'                              00236400
&ZMS             SETC  '&ZMS "PARTPTROFF"'                              00236500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00236600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00236700
.ZG34A           AIF   (K'&XPARTMODE LE 0).ZG34B                        00236800
&ZMS             SETC  '"PARTPTROFF'                                    00236900
&ZMS             SETC  '&ZMS.=&PARTPTROFF"'                             00237000
&ZMS             SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'            00237100
&ZMS             SETC  '&ZMS "&XPARTMODE"'                              00237200
                 MNOTE 8,' &ZMS KEY.'                                   00237300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00237400
                 AGO   .ZG34D                                           00237500
.*                                                                      00237600
.ZG34B           ANOP  ,                                                00237700
&ZXPARTMODE      SETC  'INPUT'     SET IN/OUTPUT                        00237800
&XPARTMODE       SETC  'PARTPTROFF'             SET XVARIABLE           00237900
&ZXPARTPTROFF    SETC  'INPUT'     SET IN/OUTPUT                        00238000
&XPARTPTROFF     SETC  '&PARTPTROFF(1)'         SET XVARIABLE PARM      00238100
                 AIF   (N'&PARTPTROFF GT 1).ZG34C                       00238200
&XPARTPTROFF     SETC  '&PARTPTROFF'            SET XVARIABLE PARM      00238300
.ZG34C           AIF   (K'&XPARTPTROFF GT 0).ZG34D  ONE PARM            00238400
&ZXPARTMODE      SETC  ''          RESET IN/OUTPUT                      00238500
&ZXPARTPTROFF    SETC  ''          RESET IN/OUTPUT                      00238600
&ZMS             SETC  'WHEN "YES" IS SPECIFIED'                        00238700
&ZMS             SETC  '&ZMS , "PARTPTROFF" KEY AND ITS'                00238800
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00238900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00239000
.ZG34D           ANOP  ,                                                00239100
.*------------------------------------------------------------------    00239200
.***AG.KME4Y09 NAME, OPT RQD INPUT, ME KEYS -CHECK IF KEY ENTERED       00239300
                 AIF   (K'&XPARTMODE GT 0).ZG40B                        00239400
&ZXPARTMODE      SETC  ''          RESET IN/OUTPUT                      00239500
&ZXPARTOFF       SETC  ''          RESET IN/OUTPUT                      00239600
&XPARTMODE       SETC  ''          ENSURE NULL                          00239700
&XPARTOFF        SETC  ''          ENSURE NULL                          00239800
&ZMS             SETC  'ONE OF THE FOLLOWING'                           00239900
&ZMS             SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'              00240000
&ZMS             SETC  '&ZMS REQUIRED:'                                 00240100
&ZMS             SETC  '&ZMS "PARTOFF"'         VALID ME KEY            00240200
&ZMS             SETC  '&ZMS OR "PARTPTROFF".'  VALID ME KEY            00240300
                 MNOTE 8,' &ZMS '                                       00240400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00240500
.ZG40B           ANOP  ,                                                00240600
.*-------------------------------------------------------------------   00240700
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00240800
.ZG33ZY  AIF    ('&XPARTMODE' NE 'PARTOFF').ZG34ZY                      00240900
.*-------------------------------------------------------------------   00241000
.***AG.KMEKY14 NAME, OPT RQD INPUT, ME KEYS -DISALLOWED KEYS            00241100
&ZCVAL           SETC ''           ERROR KEY FIELD                      00241200
.ZG33I0          AIF   (K'&PARTALET LE 0).ZG33I1                        00241300
&ZCVAL           SETC '&ZCVAL PARTALET'         DISALLOWED KEY          00241400
.ZG33I1          AIF   (K'&PARTALETOFF LE 0).ZG33I2                     00241500
&ZCVAL           SETC '&ZCVAL PARTALETOFF'      DISALLOWED KEY          00241600
.ZG33I2          AIF   (K'&PARTALETTBL LE 0).ZG33I3                     00241700
&ZCVAL           SETC '&ZCVAL PARTALETTBL'      DISALLOWED KEY          00241800
.ZG33I3          AIF   (K'&ZCVAL LE 0).ZG33J    KEY                     00241900
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00242000
&ZMS             SETC  '"PARTOFF'                                       00242100
&ZMS             SETC  '&ZMS.=&PARTOFF"'                                00242200
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00242300
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00242400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00242500
.ZG33J           ANOP  ,                                                00242600
.*-------------------------------------------------------------------   00242700
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00242800
                 AIF   (K'&ZXPARTOFF LE 0).ZG33R  NOT I/O               00242900
                 AIF   ('&XPARTOFF'(1,1) NE '(').ZG33R                  00243000
&ZCGPR           SETC  '&XPARTOFF'(2,K'&XPARTOFF-2)                     00243100
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG33P                     00243200
                 AIF   (K'&ZCGPR GT 2).ZG33Q                            00243300
                 AIF   ('&ZCGPR' EQ '0').ZG33Q                          00243400
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00243500
                 AIF   (T'&ZCGPR NE 'N').ZG33Q  INVALID REG NAME        00243600
.ZG33P           ANOP  ,                                                00243700
                 AIF   (T'&ZCGPR NE 'N').ZG33R  NON NUMERIC             00243800
                 AIF   ('&ZCGPR' LT '2').ZG33Q                          00243900
                 AIF   ('&ZCGPR' LE '12').ZG33R                         00244000
.ZG33Q           ANOP  ,                                                00244100
&ZMS             SETC  '"PARTOFF='                                      00244200
&ZMS             SETC  '&ZMS.&PARTOFF"'                                 00244300
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00244400
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00244500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00244600
.ZG33R           ANOP  ,                                                00244700
.*-------------------------------------------------------------------   00244800
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00244900
.ZG34ZY  AIF    ('&XPARTMODE' NE 'PARTPTROFF').ZG40ZY                   00245000
.*-------------------------------------------------------------------   00245100
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00245200
                 AIF   (K'&ZXPARTPTROFF LE 0).ZG34R  NOT I/O            00245300
                 AIF   ('&XPARTPTROFF'(1,1) NE '(').ZG34R               00245400
&ZCGPR           SETC  '&XPARTPTROFF'(2,K'&XPARTPTROFF-2)               00245500
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG34P                     00245600
                 AIF   (K'&ZCGPR GT 2).ZG34Q                            00245700
                 AIF   ('&ZCGPR' EQ '0').ZG34Q                          00245800
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00245900
                 AIF   (T'&ZCGPR NE 'N').ZG34Q  INVALID REG NAME        00246000
.ZG34P           ANOP  ,                                                00246100
                 AIF   (T'&ZCGPR NE 'N').ZG34R  NON NUMERIC             00246200
                 AIF   ('&ZCGPR' LT '2').ZG34Q                          00246300
                 AIF   ('&ZCGPR' LE '12').ZG34R                         00246400
.ZG34Q           ANOP  ,                                                00246500
&ZMS             SETC  '"PARTPTROFF='                                   00246600
&ZMS             SETC  '&ZMS.&PARTPTROFF"'                              00246700
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00246800
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00246900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00247000
.ZG34R           ANOP  ,                                                00247100
.*----------------------------------------------------------------***   00247200
.***AG.KMEKY01 NAME, OPT INPUT, ME KEYS -XVARIABLE                      00247300
&XDELLIST3       SETC  ''          INITIALIZE XVARIABLE                 00247400
                 AIF   (K'&PARTALET LE 0).ZG36C                         00247500
&ZXDELLIST3      SETC  'INPUT'     SET IN/OUTPUT                        00247600
&XDELLIST3       SETC  'PARTALET'  SET XVARIABLE                        00247700
&ZXPARTALET      SETC  'INPUT'     SET IN/OUTPUT                        00247800
&XPARTALET       SETC  '&PARTALET(1)'           SET XVARIABLE PARM      00247900
                 AIF   (N'&PARTALET GT 1).ZG36A                         00248000
&XPARTALET       SETC  '&PARTALET'              SET XVARIABLE PARM      00248100
.ZG36A           AIF   (N'&PARTALET LE 1).ZG36B  CK NUM                 00248200
&ZMS             SETC  '"PARTALET='                                     00248300
&ZMS             SETC  '&ZMS.&PARTALET"'                                00248400
&ZMS             SETC  '&ZMS "PARTALET"'                                00248500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00248600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00248700
.ZG36B           AIF   (K'&XPARTALET GT 0).ZG36C  ONE PARM              00248800
&ZXDELLIST3      SETC  ''          RESET IN/OUTPUT                      00248900
&ZXPARTALET      SETC  ''          RESET IN/OUTPUT                      00249000
&ZMS             SETC  'WHEN "PARTPTROFF" IS SPECIFIED'                 00249100
&ZMS             SETC  '&ZMS , "PARTALET" KEY AND ITS'                  00249200
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00249300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00249400
.ZG36C           ANOP  ,                                                00249500
.*----------------------------------------------------------------***   00249600
.***AG.KMEKY02 NAME, OPT INPUT, ME KEYS -XVARIABLE                      00249700
                 AIF   (K'&PARTALETOFF LE 0).ZG37D  NO ME KEY           00249800
                 AIF   (N'&PARTALETOFF LE 1).ZG37A  CK NUM              00249900
&ZMS             SETC  '"PARTALETOFF='                                  00250000
&ZMS             SETC  '&ZMS.&PARTALETOFF"'                             00250100
&ZMS             SETC  '&ZMS "PARTALETOFF"'                             00250200
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00250300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00250400
.ZG37A           AIF   (K'&XDELLIST3 LE 0).ZG37B                        00250500
&ZMS             SETC  '"PARTALETOFF'                                   00250600
&ZMS             SETC  '&ZMS.=&PARTALETOFF"'                            00250700
&ZMS             SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'            00250800
&ZMS             SETC  '&ZMS "&XDELLIST3"'                              00250900
                 MNOTE 8,' &ZMS KEY.'                                   00251000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00251100
                 AGO   .ZG37D                                           00251200
.*                                                                      00251300
.ZG37B           ANOP  ,                                                00251400
&ZXDELLIST3      SETC  'INPUT'     SET IN/OUTPUT                        00251500
&XDELLIST3       SETC  'PARTALETOFF'            SET XVARIABLE           00251600
&ZXPARTALETOFF   SETC  'INPUT'     SET IN/OUTPUT                        00251700
&XPARTALETOFF    SETC  '&PARTALETOFF(1)'        SET XVARIABLE PARM      00251800
                 AIF   (N'&PARTALETOFF GT 1).ZG37C                      00251900
&XPARTALETOFF    SETC  '&PARTALETOFF'           SET XVARIABLE PARM      00252000
.ZG37C           AIF   (K'&XPARTALETOFF GT 0).ZG37D  ONE PARM           00252100
&ZXDELLIST3      SETC  ''          RESET IN/OUTPUT                      00252200
&ZXPARTALETOFF   SETC  ''          RESET IN/OUTPUT                      00252300
&ZMS             SETC  'WHEN "PARTPTROFF" IS SPECIFIED'                 00252400
&ZMS             SETC  '&ZMS , "PARTALETOFF" KEY AND ITS'               00252500
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00252600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00252700
.ZG37D           ANOP  ,                                                00252800
.*----------------------------------------------------------------***   00252900
.***AG.KMEKY02 NAME, OPT INPUT, ME KEYS -XVARIABLE                      00253000
                 AIF   (K'&PARTALETTBL LE 0).ZG38D  NO ME KEY           00253100
                 AIF   (N'&PARTALETTBL LE 1).ZG38A  CK NUM              00253200
&ZMS             SETC  '"PARTALETTBL='                                  00253300
&ZMS             SETC  '&ZMS.&PARTALETTBL"'                             00253400
&ZMS             SETC  '&ZMS "PARTALETTBL"'                             00253500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00253600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00253700
.ZG38A           AIF   (K'&XDELLIST3 LE 0).ZG38B                        00253800
&ZMS             SETC  '"PARTALETTBL'                                   00253900
&ZMS             SETC  '&ZMS.=&PARTALETTBL"'                            00254000
&ZMS             SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'            00254100
&ZMS             SETC  '&ZMS "&XDELLIST3"'                              00254200
                 MNOTE 8,' &ZMS KEY.'                                   00254300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00254400
                 AGO   .ZG38D                                           00254500
.*                                                                      00254600
.ZG38B           ANOP  ,                                                00254700
&ZXDELLIST3      SETC  'INPUT'     SET IN/OUTPUT                        00254800
&XDELLIST3       SETC  'PARTALETTBL'            SET XVARIABLE           00254900
&ZXPARTALETTBL   SETC  'INPUT'     SET IN/OUTPUT                        00255000
&XPARTALETTBL    SETC  '&PARTALETTBL(1)'        SET XVARIABLE PARM      00255100
                 AIF   (N'&PARTALETTBL GT 1).ZG38C                      00255200
&XPARTALETTBL    SETC  '&PARTALETTBL'           SET XVARIABLE PARM      00255300
.ZG38C           AIF   (K'&XPARTALETTBL GT 0).ZG38D  ONE PARM           00255400
&ZXDELLIST3      SETC  ''          RESET IN/OUTPUT                      00255500
&ZXPARTALETTBL   SETC  ''          RESET IN/OUTPUT                      00255600
&ZMS             SETC  'WHEN "PARTPTROFF" IS SPECIFIED'                 00255700
&ZMS             SETC  '&ZMS , "PARTALETTBL" KEY AND ITS'               00255800
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00255900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00256000
.ZG38D           ANOP  ,                                                00256100
.*------------------------------------------------------------------    00256200
.***AG.KMEKY07 NAME, OPT INPUT, ME KEYS -CHECK IF KEY ENTERED           00256300
                 AIF   (K'&XDELLIST3 GT 0).ZG39B                        00256400
&ZXDELLIST3      SETC  'INPUT'     SET IN/OUTPUT                        00256500
&XDELLIST3       SETC  'PARTALET'  SET DEFAULT                          00256600
&ZXPARTALET      SETC  'INPUT'     SET IN/OUTPUT                        00256700
&XPARTALET       SETC  'ZERO'      SET DEFAULT PARM                     00256800
.ZG39B           ANOP  ,                                                00256900
.*-------------------------------------------------------------------   00257000
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00257100
                 AIF   (K'&ZXPARTALETTBL LE 0).ZG39R  NOT I/O           00257200
         AIF   ('&XPARTALETTBL' EQ 'ZERO').ZG39R                        00257300
                 AIF   ('&XPARTALETTBL'(1,1) NE '(').ZG39R              00257400
&ZCGPR           SETC  '&XPARTALETTBL'(2,K'&XPARTALETTBL-2)             00257500
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG39P                     00257600
                 AIF   (K'&ZCGPR GT 2).ZG39Q                            00257700
                 AIF   ('&ZCGPR' EQ '0').ZG39Q                          00257800
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00257900
                 AIF   (T'&ZCGPR NE 'N').ZG39Q  INVALID REG NAME        00258000
.ZG39P           ANOP  ,                                                00258100
                 AIF   (T'&ZCGPR NE 'N').ZG39R  NON NUMERIC             00258200
                 AIF   ('&ZCGPR' LT '2').ZG39Q                          00258300
                 AIF   ('&ZCGPR' LE '12').ZG39R                         00258400
.ZG39Q           ANOP  ,                                                00258500
&ZMS             SETC  '"PARTALETTBL='                                  00258600
&ZMS             SETC  '&ZMS.&PARTALETTBL"'                             00258700
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00258800
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00258900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00259000
.ZG39R           ANOP  ,                                                00259100
.*-------------------------------------------------------------------   00259200
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           00259300
.ZG36ZY  AIF    ('&XDELLIST3' NE 'PARTALET').ZG37ZY                     00259400
.*-------------------------------------------------------------------   00259500
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00259600
                 AIF   (K'&ZXPARTALET LE 0).ZG36R  NOT I/O              00259700
         AIF   ('&XPARTALET' EQ 'ZERO').ZG36R                           00259800
                 AIF   ('&XPARTALET'(1,1) NE '(').ZG36R                 00259900
&ZCGPR           SETC  '&XPARTALET'(2,K'&XPARTALET-2)                   00260000
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG36P                     00260100
                 AIF   (K'&ZCGPR GT 2).ZG36Q                            00260200
                 AIF   ('&ZCGPR' EQ '0').ZG36Q                          00260300
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00260400
                 AIF   (T'&ZCGPR NE 'N').ZG36Q  INVALID REG NAME        00260500
.ZG36P           ANOP  ,                                                00260600
                 AIF   (T'&ZCGPR NE 'N').ZG36R  NON NUMERIC             00260700
                 AIF   ('&ZCGPR' LT '2').ZG36Q                          00260800
                 AIF   ('&ZCGPR' LE '12').ZG36R                         00260900
.ZG36Q           ANOP  ,                                                00261000
&ZMS             SETC  '"PARTALET='                                     00261100
&ZMS             SETC  '&ZMS.&PARTALET"'                                00261200
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00261300
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00261400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00261500
.ZG36R           ANOP  ,                                                00261600
.*-------------------------------------------------------------------   00261700
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           00261800
.ZG37ZY  AIF    ('&XDELLIST3' NE 'PARTALETOFF').ZG38ZY                  00261900
.*-------------------------------------------------------------------   00262000
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00262100
                 AIF   (K'&ZXPARTALETOFF LE 0).ZG37R  NOT I/O           00262200
                 AIF   ('&XPARTALETOFF'(1,1) NE '(').ZG37R              00262300
&ZCGPR           SETC  '&XPARTALETOFF'(2,K'&XPARTALETOFF-2)             00262400
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG37P                     00262500
                 AIF   (K'&ZCGPR GT 2).ZG37Q                            00262600
                 AIF   ('&ZCGPR' EQ '0').ZG37Q                          00262700
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00262800
                 AIF   (T'&ZCGPR NE 'N').ZG37Q  INVALID REG NAME        00262900
.ZG37P           ANOP  ,                                                00263000
                 AIF   (T'&ZCGPR NE 'N').ZG37R  NON NUMERIC             00263100
                 AIF   ('&ZCGPR' LT '2').ZG37Q                          00263200
                 AIF   ('&ZCGPR' LE '12').ZG37R                         00263300
.ZG37Q           ANOP  ,                                                00263400
&ZMS             SETC  '"PARTALETOFF='                                  00263500
&ZMS             SETC  '&ZMS.&PARTALETOFF"'                             00263600
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00263700
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00263800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00263900
.ZG37R           ANOP  ,                                                00264000
.*-------------------------------------------------------------------   00264100
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           00264200
.ZG38ZY  AIF    ('&XDELLIST3' NE 'PARTALETTBL').ZG39ZY                  00264300
.*-------------------------------------------------------------------   00264400
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00264500
                 AIF   (K'&ZXPARTALETTBL LE 0).ZG38R  NOT I/O           00264600
                 AIF   ('&XPARTALETTBL'(1,1) NE '(').ZG38R              00264700
&ZCGPR           SETC  '&XPARTALETTBL'(2,K'&XPARTALETTBL-2)             00264800
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG38P                     00264900
                 AIF   (K'&ZCGPR GT 2).ZG38Q                            00265000
                 AIF   ('&ZCGPR' EQ '0').ZG38Q                          00265100
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00265200
                 AIF   (T'&ZCGPR NE 'N').ZG38Q  INVALID REG NAME        00265300
.ZG38P           ANOP  ,                                                00265400
                 AIF   (T'&ZCGPR NE 'N').ZG38R  NON NUMERIC             00265500
                 AIF   ('&ZCGPR' LT '2').ZG38Q                          00265600
                 AIF   ('&ZCGPR' LE '12').ZG38R                         00265700
.ZG38Q           ANOP  ,                                                00265800
&ZMS             SETC  '"PARTALETTBL='                                  00265900
&ZMS             SETC  '&ZMS.&PARTALETTBL"'                             00266000
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00266100
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00266200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00266300
.ZG38R           ANOP  ,                                                00266400
.*-------------------------------------------------------------------   00266500
.***AG.KMEKY15 NAME, OPT INPUT, ME KEYS -END                            00266600
.ZG39ZY          ANOP ,            END MUTUALLY EXCLUSIVE KEYS          00266700
.*-------------------------------------------------------------------   00266800
.***AG.KMEKY15 NAME, OPT RQD INPUT, ME KEYS -END                        00266900
.ZG40ZY          ANOP ,            END MUTUALLY EXCLUSIVE KEYS          00267000
.*----------------------------------------------------------------***   00267100
.***AG.KMEKY01 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00267200
&XDELLIST2       SETC  ''          INITIALIZE XVARIABLE                 00267300
                 AIF   (K'&PARTLEN LE 0).ZG42C                          00267400
&ZXDELLIST2      SETC  'INPUT'     SET IN/OUTPUT                        00267500
&XDELLIST2       SETC  'PARTLEN'   SET XVARIABLE                        00267600
&ZXPARTLEN       SETC  'INPUT'     SET IN/OUTPUT                        00267700
&XPARTLEN        SETC  '&PARTLEN(1)'            SET XVARIABLE PARM      00267800
                 AIF   (N'&PARTLEN GT 1).ZG42A                          00267900
&XPARTLEN        SETC  '&PARTLEN'  SET XVARIABLE PARM                   00268000
.ZG42A           AIF   (N'&PARTLEN LE 1).ZG42B  CK NUM                  00268100
&ZMS             SETC  '"PARTLEN='                                      00268200
&ZMS             SETC  '&ZMS.&PARTLEN"'                                 00268300
&ZMS             SETC  '&ZMS "PARTLEN"'                                 00268400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00268500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00268600
.ZG42B           AIF   (K'&XPARTLEN GT 0).ZG42C  ONE PARM               00268700
&ZXDELLIST2      SETC  ''          RESET IN/OUTPUT                      00268800
&ZXPARTLEN       SETC  ''          RESET IN/OUTPUT                      00268900
&ZMS             SETC  'WHEN "YES" IS SPECIFIED'                        00269000
&ZMS             SETC  '&ZMS , "PARTLEN" KEY AND ITS'                   00269100
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00269200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00269300
.ZG42C           ANOP  ,                                                00269400
.*----------------------------------------------------------------***   00269500
.***AG.KMEKY02 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00269600
                 AIF   (K'&PARTLENOFF LE 0).ZG43D  NO ME KEY            00269700
                 AIF   (N'&PARTLENOFF LE 1).ZG43A  CK NUM               00269800
&ZMS             SETC  '"PARTLENOFF='                                   00269900
&ZMS             SETC  '&ZMS.&PARTLENOFF"'                              00270000
&ZMS             SETC  '&ZMS "PARTLENOFF"'                              00270100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00270200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00270300
.ZG43A           AIF   (K'&XDELLIST2 LE 0).ZG43B                        00270400
&ZMS             SETC  '"PARTLENOFF'                                    00270500
&ZMS             SETC  '&ZMS.=&PARTLENOFF"'                             00270600
&ZMS             SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'            00270700
&ZMS             SETC  '&ZMS "&XDELLIST2"'                              00270800
                 MNOTE 8,' &ZMS KEY.'                                   00270900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00271000
                 AGO   .ZG43D                                           00271100
.*                                                                      00271200
.ZG43B           ANOP  ,                                                00271300
&ZXDELLIST2      SETC  'INPUT'     SET IN/OUTPUT                        00271400
&XDELLIST2       SETC  'PARTLENOFF'             SET XVARIABLE           00271500
&ZXPARTLENOFF    SETC  'INPUT'     SET IN/OUTPUT                        00271600
&XPARTLENOFF     SETC  '&PARTLENOFF(1)'         SET XVARIABLE PARM      00271700
                 AIF   (N'&PARTLENOFF GT 1).ZG43C                       00271800
&XPARTLENOFF     SETC  '&PARTLENOFF'            SET XVARIABLE PARM      00271900
.ZG43C           AIF   (K'&XPARTLENOFF GT 0).ZG43D  ONE PARM            00272000
&ZXDELLIST2      SETC  ''          RESET IN/OUTPUT                      00272100
&ZXPARTLENOFF    SETC  ''          RESET IN/OUTPUT                      00272200
&ZMS             SETC  'WHEN "YES" IS SPECIFIED'                        00272300
&ZMS             SETC  '&ZMS , "PARTLENOFF" KEY AND ITS'                00272400
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00272500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00272600
.ZG43D           ANOP  ,                                                00272700
.*----------------------------------------------------------------***   00272800
.***AG.KMEKY02 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00272900
                 AIF   (K'&PARTLENTBL LE 0).ZG44D  NO ME KEY            00273000
                 AIF   (N'&PARTLENTBL LE 1).ZG44A  CK NUM               00273100
&ZMS             SETC  '"PARTLENTBL='                                   00273200
&ZMS             SETC  '&ZMS.&PARTLENTBL"'                              00273300
&ZMS             SETC  '&ZMS "PARTLENTBL"'                              00273400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00273500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00273600
.ZG44A           AIF   (K'&XDELLIST2 LE 0).ZG44B                        00273700
&ZMS             SETC  '"PARTLENTBL'                                    00273800
&ZMS             SETC  '&ZMS.=&PARTLENTBL"'                             00273900
&ZMS             SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'            00274000
&ZMS             SETC  '&ZMS "&XDELLIST2"'                              00274100
                 MNOTE 8,' &ZMS KEY.'                                   00274200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00274300
                 AGO   .ZG44D                                           00274400
.*                                                                      00274500
.ZG44B           ANOP  ,                                                00274600
&ZXDELLIST2      SETC  'INPUT'     SET IN/OUTPUT                        00274700
&XDELLIST2       SETC  'PARTLENTBL'             SET XVARIABLE           00274800
&ZXPARTLENTBL    SETC  'INPUT'     SET IN/OUTPUT                        00274900
&XPARTLENTBL     SETC  '&PARTLENTBL(1)'         SET XVARIABLE PARM      00275000
                 AIF   (N'&PARTLENTBL GT 1).ZG44C                       00275100
&XPARTLENTBL     SETC  '&PARTLENTBL'            SET XVARIABLE PARM      00275200
.ZG44C           AIF   (K'&XPARTLENTBL GT 0).ZG44D  ONE PARM            00275300
&ZXDELLIST2      SETC  ''          RESET IN/OUTPUT                      00275400
&ZXPARTLENTBL    SETC  ''          RESET IN/OUTPUT                      00275500
&ZMS             SETC  'WHEN "YES" IS SPECIFIED'                        00275600
&ZMS             SETC  '&ZMS , "PARTLENTBL" KEY AND ITS'                00275700
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00275800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00275900
.ZG44D           ANOP  ,                                                00276000
.*------------------------------------------------------------------    00276100
.***AG.KME4Y09 NAME, OPT RQD INPUT, ME KEYS -CHECK IF KEY ENTERED       00276200
                 AIF   (K'&XDELLIST2 GT 0).ZG45B                        00276300
&ZXDELLIST2      SETC  ''          RESET IN/OUTPUT                      00276400
&ZXPARTLEN       SETC  ''          RESET IN/OUTPUT                      00276500
&XDELLIST2       SETC  ''          ENSURE NULL                          00276600
&XPARTLEN        SETC  ''          ENSURE NULL                          00276700
&ZMS             SETC  'ONE OF THE FOLLOWING'                           00276800
&ZMS             SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'              00276900
&ZMS             SETC  '&ZMS REQUIRED:'                                 00277000
&ZMS             SETC  '&ZMS "PARTLEN",'        VALID ME KEY            00277100
&ZMS             SETC  '&ZMS "PARTLENOFF",'     VALID ME KEY            00277200
&ZMS             SETC  '&ZMS OR "PARTLENTBL".'  VALID ME KEY            00277300
                 MNOTE 8,' &ZMS '                                       00277400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00277500
.ZG45B           ANOP  ,                                                00277600
.*-------------------------------------------------------------------   00277700
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00277800
.ZG42ZY  AIF    ('&XDELLIST2' NE 'PARTLEN').ZG43ZY                      00277900
.*-------------------------------------------------------------------   00278000
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00278100
                 AIF   (K'&ZXPARTLEN LE 0).ZG42R  NOT I/O               00278200
                 AIF   ('&XPARTLEN'(1,1) NE '(').ZG42R                  00278300
&ZCGPR           SETC  '&XPARTLEN'(2,K'&XPARTLEN-2)                     00278400
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG42P                     00278500
                 AIF   (K'&ZCGPR GT 2).ZG42Q                            00278600
                 AIF   ('&ZCGPR' EQ '0').ZG42Q                          00278700
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00278800
                 AIF   (T'&ZCGPR NE 'N').ZG42Q  INVALID REG NAME        00278900
.ZG42P           ANOP  ,                                                00279000
                 AIF   (T'&ZCGPR NE 'N').ZG42R  NON NUMERIC             00279100
                 AIF   ('&ZCGPR' LT '2').ZG42Q                          00279200
                 AIF   ('&ZCGPR' LE '12').ZG42R                         00279300
.ZG42Q           ANOP  ,                                                00279400
&ZMS             SETC  '"PARTLEN='                                      00279500
&ZMS             SETC  '&ZMS.&PARTLEN"'                                 00279600
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00279700
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00279800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00279900
.ZG42R           ANOP  ,                                                00280000
.*-------------------------------------------------------------------   00280100
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00280200
.ZG43ZY  AIF    ('&XDELLIST2' NE 'PARTLENOFF').ZG44ZY                   00280300
.*-------------------------------------------------------------------   00280400
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00280500
                 AIF   (K'&ZXPARTLENOFF LE 0).ZG43R  NOT I/O            00280600
                 AIF   ('&XPARTLENOFF'(1,1) NE '(').ZG43R               00280700
&ZCGPR           SETC  '&XPARTLENOFF'(2,K'&XPARTLENOFF-2)               00280800
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG43P                     00280900
                 AIF   (K'&ZCGPR GT 2).ZG43Q                            00281000
                 AIF   ('&ZCGPR' EQ '0').ZG43Q                          00281100
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00281200
                 AIF   (T'&ZCGPR NE 'N').ZG43Q  INVALID REG NAME        00281300
.ZG43P           ANOP  ,                                                00281400
                 AIF   (T'&ZCGPR NE 'N').ZG43R  NON NUMERIC             00281500
                 AIF   ('&ZCGPR' LT '2').ZG43Q                          00281600
                 AIF   ('&ZCGPR' LE '12').ZG43R                         00281700
.ZG43Q           ANOP  ,                                                00281800
&ZMS             SETC  '"PARTLENOFF='                                   00281900
&ZMS             SETC  '&ZMS.&PARTLENOFF"'                              00282000
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00282100
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00282200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00282300
.ZG43R           ANOP  ,                                                00282400
.*-------------------------------------------------------------------   00282500
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00282600
.ZG44ZY  AIF    ('&XDELLIST2' NE 'PARTLENTBL').ZG45ZY                   00282700
.*-------------------------------------------------------------------   00282800
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00282900
                 AIF   (K'&ZXPARTLENTBL LE 0).ZG44R  NOT I/O            00283000
                 AIF   ('&XPARTLENTBL'(1,1) NE '(').ZG44R               00283100
&ZCGPR           SETC  '&XPARTLENTBL'(2,K'&XPARTLENTBL-2)               00283200
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG44P                     00283300
                 AIF   (K'&ZCGPR GT 2).ZG44Q                            00283400
                 AIF   ('&ZCGPR' EQ '0').ZG44Q                          00283500
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00283600
                 AIF   (T'&ZCGPR NE 'N').ZG44Q  INVALID REG NAME        00283700
.ZG44P           ANOP  ,                                                00283800
                 AIF   (T'&ZCGPR NE 'N').ZG44R  NON NUMERIC             00283900
                 AIF   ('&ZCGPR' LT '2').ZG44Q                          00284000
                 AIF   ('&ZCGPR' LE '12').ZG44R                         00284100
.ZG44Q           ANOP  ,                                                00284200
&ZMS             SETC  '"PARTLENTBL='                                   00284300
&ZMS             SETC  '&ZMS.&PARTLENTBL"'                              00284400
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00284500
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00284600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00284700
.ZG44R           ANOP  ,                                                00284800
.*-------------------------------------------------------------------   00284900
.***AG.KMEKY15 NAME, OPT RQD INPUT, ME KEYS -END                        00285000
.ZG45ZY          ANOP ,            END MUTUALLY EXCLUSIVE KEYS          00285100
.*------------------------------------------------------------------    00285200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00285300
.ZG46            ANOP  ,                                                00285400
&ZXMULTIPART     SETC  'INPUT'     SET IN/OUTPUT                        00285500
                 AIF   (K'&XMULTIPART GT 0).ZG46E  VALID ARG            00285600
                 AIF   (T'&MULTIPART EQ 'O').ZG46D  OMITTED             00285700
&ZASYSLNDX       SETA  0                                                00285800
.ZG46A           ANOP  ,           POSITIONAL MACRO KEY                 00285900
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00286000
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG46C                 00286100
&ZTLC            SETC 'MULTIPART'                                       00286200
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG46A        00286300
.ZG46B           ANOP  ,                                                00286400
&ZXMULTIPART     SETC  ''          RESET IN/OUTPUT                      00286500
&ZMS             SETC  'THE "MULTIPART" KEY'                            00286600
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00286700
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00286800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00286900
                 AGO   .ZG46E                                           00287000
.ZG46C           ANOP  ,                                                00287100
&ZXMULTIPART     SETC  ''          RESET IN/OUTPUT                      00287200
&ZMS             SETC  '"MULTIPART='                                    00287300
&ZMS             SETC  '&ZMS.&MULTIPART"'                               00287400
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00287500
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00287600
&ZMS             SETC  '&ZMS "NO"'                                      00287700
&ZMS             SETC  '&ZMS OR "YES".'                                 00287800
                 MNOTE 8,' &ZMS '                                       00287900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00288000
                 AGO   .ZG46E                                           00288100
.ZG46D           ANOP  ,                                                00288200
&XMULTIPART      SETC  'NO'        SET DEFAULT KEYWORD                  00288300
.ZG46E           ANOP  ,                                                00288400
.*----------------------------------------------------------------***   00288500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00288600
                 AIF   (N'&MSGSTGKEY LE 1).ZG48A  CK NUM                00288700
&ZMS             SETC  '"MSGSTGKEY='                                    00288800
&ZMS             SETC  '&ZMS.&MSGSTGKEY"'                               00288900
&ZMS             SETC  '&ZMS "MSGSTGKEY"'                               00289000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00289100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00289200
.ZG48A           ANOP  ,                                                00289300
.*-------------------------------------------------------------------   00289400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00289500
&ZXMSGSTGKEY     SETC  'INPUT'     SET IN/OUTPUT                        00289600
&XMSGSTGKEY      SETC  'JOINKEY'                                        00289700
                 AIF   (K'&MSGSTGKEY(1) LE 0).ZG48B  PARM               00289800
&XMSGSTGKEY      SETC  '&MSGSTGKEY(1)'          SET XVARIABLE           00289900
                 AIF   (N'&MSGSTGKEY GT 1).ZG48B  MULTI                 00290000
&XMSGSTGKEY      SETC  '&MSGSTGKEY'             SET XVARIABLE           00290100
.ZG48B           ANOP  ,                                                00290200
.*-------------------------------------------------------------------   00290300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00290400
                 AIF   (K'&ZXMSGSTGKEY LE 0).ZG48R  NOT I/O             00290500
         AIF   ('&XMSGSTGKEY' EQ 'JOINKEY').ZG48R                       00290600
                 AIF   ('&XMSGSTGKEY'(1,1) NE '(').ZG48R                00290700
&ZCGPR           SETC  '&XMSGSTGKEY'(2,K'&XMSGSTGKEY-2)                 00290800
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG48P                     00290900
                 AIF   (K'&ZCGPR GT 2).ZG48Q                            00291000
                 AIF   ('&ZCGPR' EQ '0').ZG48Q                          00291100
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00291200
                 AIF   (T'&ZCGPR NE 'N').ZG48Q  INVALID REG NAME        00291300
.ZG48P           ANOP  ,                                                00291400
                 AIF   (T'&ZCGPR NE 'N').ZG48R  NON NUMERIC             00291500
                 AIF   ('&ZCGPR' LT '2').ZG48Q                          00291600
                 AIF   ('&ZCGPR' LE '12').ZG48R                         00291700
.ZG48Q           ANOP  ,                                                00291800
&ZMS             SETC  '"MSGSTGKEY='                                    00291900
&ZMS             SETC  '&ZMS.&MSGSTGKEY"'                               00292000
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00292100
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00292200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00292300
.ZG48R           ANOP  ,                                                00292400
.*------------------------------------------------------------------    00292500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00292600
&XLINKAGE        SETC  ''          INITIALIZE XVARIABLE                 00292700
.*-------------------------------------------------------------------   00292800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00292900
.ZG52            ANOP  ,                                                00293000
                 AIF   (K'&LINKAGE(1) LE 0).ZG52A                       00293100
&ZTLC            SETC 'SYSTEM'                                          00293200
                 AIF   ('&LINKAGE(1)' NE '&ZTLC').ZG53                  00293300
&XLINKAGE        SETC  'SYSTEM'    SET KEYWORD                          00293400
                 AIF   (N'&LINKAGE LE 1).ZG52A  CK NUM                  00293500
&ZMS             SETC  '"LINKAGE='                                      00293600
&ZMS             SETC  '&ZMS.&LINKAGE"'                                 00293700
&ZMS             SETC  '&ZMS "LINKAGE"'                                 00293800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00293900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00294000
.ZG52A           ANOP  ,                                                00294100
.*------------------------------------------------------------------    00294200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00294300
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00294400
.ZG52A0          AIF   (K'&XCFDATA LE 0).ZG52A1  OK                     00294500
&ZCVAL           SETC '&ZCVAL XCFDATA'          INCORRECT KEY USED      00294600
.ZG52A1          AIF   (K'&ZCVAL LE 0).ZG52A2   OK                      00294700
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00294800
&ZMS             SETC  '"LINKAGE'                                       00294900
&ZMS             SETC  '&ZMS.=&LINKAGE"'                                00295000
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00295100
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00295200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00295300
.ZG52A2          ANOP  ,                                                00295400
.*-------------------------------------------------------------------   00295500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00295600
.ZG53            ANOP  ,                                                00295700
&ZTLC            SETC 'INTERNAL'                                        00295800
                 AIF   ('&LINKAGE(1)' NE '&ZTLC').ZG57                  00295900
&XLINKAGE        SETC  'INTERNAL'  SET KEYWORD                          00296000
                 AIF   (N'&LINKAGE LE 1).ZG53A  CK NUM                  00296100
&ZMS             SETC  '"LINKAGE='                                      00296200
&ZMS             SETC  '&ZMS.&LINKAGE"'                                 00296300
&ZMS             SETC  '&ZMS "LINKAGE"'                                 00296400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00296500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00296600
.ZG53A           ANOP  ,                                                00296700
.*----------------------------------------------------------------***   00296800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00296900
                 AIF   (N'&XCFDATA LE 1).ZG55A  CK NUM                  00297000
&ZMS             SETC  '"XCFDATA='                                      00297100
&ZMS             SETC  '&ZMS.&XCFDATA"'                                 00297200
&ZMS             SETC  '&ZMS "XCFDATA"'                                 00297300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00297400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00297500
.ZG55A           ANOP  ,                                                00297600
.*-------------------------------------------------------------------   00297700
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00297800
&ZXXCFDATA       SETC  'INPUT'     SET IN/OUTPUT                        00297900
&XXCFDATA        SETC  '&XCFDATA(1)'            SET XVARIABLE           00298000
                 AIF   (N'&XCFDATA GT 1).ZG55B  MULTI                   00298100
&XXCFDATA        SETC  '&XCFDATA'  SET XVARIABLE                        00298200
.ZG55B           AIF   (K'&XCFDATA(1) GT 0).ZG55C                       00298300
&ZXXCFDATA       SETC  ''          RESET IN/OUTPUT                      00298400
&ZMS             SETC  'WHEN "INTERNAL" IS SPECIFIED'                   00298500
&ZMS             SETC  '&ZMS , "XCFDATA" KEY AND ITS'                   00298600
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00298700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00298800
.ZG55C           ANOP  ,                                                00298900
.*-------------------------------------------------------------------   00299000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00299100
                 AIF   (K'&ZXXCFDATA LE 0).ZG55R  NOT I/O               00299200
                 AIF   ('&XXCFDATA'(1,1) NE '(').ZG55R                  00299300
&ZCGPR           SETC  '&XXCFDATA'(2,K'&XXCFDATA-2)                     00299400
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG55P                     00299500
                 AIF   (K'&ZCGPR GT 2).ZG55Q                            00299600
                 AIF   ('&ZCGPR' EQ '0').ZG55Q                          00299700
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00299800
                 AIF   (T'&ZCGPR NE 'N').ZG55Q  INVALID REG NAME        00299900
.ZG55P           ANOP  ,                                                00300000
                 AIF   (T'&ZCGPR NE 'N').ZG55R  NON NUMERIC             00300100
                 AIF   ('&ZCGPR' LT '2').ZG55Q                          00300200
                 AIF   ('&ZCGPR' LE '12').ZG55R                         00300300
.ZG55Q           ANOP  ,                                                00300400
&ZMS             SETC  '"XCFDATA='                                      00300500
&ZMS             SETC  '&ZMS.&XCFDATA"'                                 00300600
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00300700
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00300800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00300900
.ZG55R           ANOP  ,                                                00301000
.*------------------------------------------------------------------    00301100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00301200
.ZG57            ANOP  ,                                                00301300
&ZXLINKAGE       SETC  'INPUT'     SET IN/OUTPUT                        00301400
                 AIF   (K'&XLINKAGE GT 0).ZG57E  VALID ARG              00301500
                 AIF   (T'&LINKAGE EQ 'O').ZG57D  OMITTED               00301600
&ZASYSLNDX       SETA  0                                                00301700
.ZG57A           ANOP  ,           POSITIONAL MACRO KEY                 00301800
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00301900
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG57C                 00302000
&ZTLC            SETC 'LINKAGE'                                         00302100
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG57A        00302200
.ZG57B           ANOP  ,                                                00302300
&ZXLINKAGE       SETC  ''          RESET IN/OUTPUT                      00302400
&ZMS             SETC  'THE "LINKAGE" KEY'                              00302500
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00302600
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00302700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00302800
                 AGO   .ZG57E                                           00302900
.ZG57C           ANOP  ,                                                00303000
&ZXLINKAGE       SETC  ''          RESET IN/OUTPUT                      00303100
&ZMS             SETC  '"LINKAGE='                                      00303200
&ZMS             SETC  '&ZMS.&LINKAGE"'                                 00303300
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00303400
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00303500
&ZMS             SETC  '&ZMS "SYSTEM"'                                  00303600
&ZMS             SETC  '&ZMS OR "INTERNAL".'                            00303700
                 MNOTE 8,' &ZMS '                                       00303800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00303900
                 AGO   .ZG57E                                           00304000
.ZG57D           ANOP  ,                                                00304100
&XLINKAGE        SETC  'SYSTEM'    SET DEFAULT KEYWORD                  00304200
.ZG57E           ANOP  ,                                                00304300
.*----------------------------------------------------------------***   00304400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00304500
                 AIF   (N'&RETCODE LE 1).ZG59A  CK NUM                  00304600
&ZMS             SETC  '"RETCODE='                                      00304700
&ZMS             SETC  '&ZMS.&RETCODE"'                                 00304800
&ZMS             SETC  '&ZMS "RETCODE"'                                 00304900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00305000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00305100
.ZG59A           ANOP  ,                                                00305200
.*-------------------------------------------------------------------   00305300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00305400
                 AIF   (K'&RETCODE(1) LE 0).ZG59C  NO PARM              00305500
&ZXRETCODE       SETC  'OUTPUT'    SET OUTPUT                           00305600
&XRETCODE        SETC  '&RETCODE(1)'            SET XVARIABLE           00305700
                 AIF   (N'&RETCODE GT 1).ZG59C                          00305800
&XRETCODE        SETC  '&RETCODE'  SET XVARIABLE                        00305900
.ZG59C           ANOP  ,                                                00306000
.*-------------------------------------------------------------------   00306100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00306200
                 AIF   (K'&ZXRETCODE LE 0).ZG59R  NOT I/O               00306300
                 AIF   ('&XRETCODE'(1,1) NE '(').ZG59R                  00306400
&ZCGPR           SETC  '&XRETCODE'(2,K'&XRETCODE-2)                     00306500
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG59P                     00306600
                 AIF   (K'&ZCGPR GT 2).ZG59Q                            00306700
                 AIF   ('&ZCGPR' EQ '0').ZG59Q                          00306800
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00306900
                 AIF   (T'&ZCGPR NE 'N').ZG59Q  INVALID REG NAME        00307000
.ZG59P           ANOP  ,                                                00307100
                 AIF   (T'&ZCGPR NE 'N').ZG59R  NON NUMERIC             00307200
                 AIF   ('&ZCGPR' EQ '15').ZG59R                         00307300
                 AIF   ('&ZCGPR' LT '2').ZG59Q                          00307400
                 AIF   ('&ZCGPR' LE '12').ZG59R                         00307500
.ZG59Q           ANOP  ,                                                00307600
&ZMS             SETC  '"RETCODE='                                      00307700
&ZMS             SETC  '&ZMS.&RETCODE"'                                 00307800
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00307900
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'         00308000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00308100
.ZG59R           ANOP  ,                                                00308200
.*----------------------------------------------------------------***   00308300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00308400
                 AIF   (N'&RSNCODE LE 1).ZG62A  CK NUM                  00308500
&ZMS             SETC  '"RSNCODE='                                      00308600
&ZMS             SETC  '&ZMS.&RSNCODE"'                                 00308700
&ZMS             SETC  '&ZMS "RSNCODE"'                                 00308800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00308900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00309000
.ZG62A           ANOP  ,                                                00309100
.*-------------------------------------------------------------------   00309200
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00309300
                 AIF   (K'&RSNCODE(1) LE 0).ZG62C  NO PARM              00309400
&ZXRSNCODE       SETC  'OUTPUT'    SET OUTPUT                           00309500
&XRSNCODE        SETC  '&RSNCODE(1)'            SET XVARIABLE           00309600
                 AIF   (N'&RSNCODE GT 1).ZG62C                          00309700
&XRSNCODE        SETC  '&RSNCODE'  SET XVARIABLE                        00309800
.ZG62C           ANOP  ,                                                00309900
.*-------------------------------------------------------------------   00310000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00310100
                 AIF   (K'&ZXRSNCODE LE 0).ZG62R  NOT I/O               00310200
                 AIF   ('&XRSNCODE'(1,1) NE '(').ZG62R                  00310300
&ZCGPR           SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                     00310400
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG62P                     00310500
                 AIF   (K'&ZCGPR GT 2).ZG62Q                            00310600
                 AIF   ('&ZCGPR' EQ '0').ZG62R                          00310700
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00310800
                 AIF   (T'&ZCGPR NE 'N').ZG62Q  INVALID REG NAME        00310900
.ZG62P           ANOP  ,                                                00311000
                 AIF   (T'&ZCGPR NE 'N').ZG62R  NON NUMERIC             00311100
                 AIF   ('&ZCGPR' EQ '0').ZG62R                          00311200
                 AIF   ('&ZCGPR' LT '2').ZG62Q                          00311300
                 AIF   ('&ZCGPR' LE '12').ZG62R                         00311400
.ZG62Q           ANOP  ,                                                00311500
&ZMS             SETC  '"RSNCODE='                                      00311600
&ZMS             SETC  '&ZMS.&RSNCODE"'                                 00311700
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00311800
                 MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'          00311900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00312000
.ZG62R           ANOP  ,                                                00312100
.******************************************************************     00312200
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00312300
.******************************************************************     00312400
                 ACTR  10000                                            00312500
.*----------------------------------------------------------------***   00312600
.***AH.P02 EXTRA POSITIONALS                                            00312700
                 AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS             00312800
                 AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL             00312900
                 AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL         00313000
                 AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL          00313100
.ZGLISTX1        ANOP  ,                                                00313200
&ZCVAL           SETC  ''          ERROR FIELD                          00313300
&ZAWRK           SETA  0           POSITIONAL NUMBER                    00313400
.ZGLIST2         ANOP  ,                                                00313500
&ZAWRK           SETA  &ZAWRK+1    NEXT POSITIONAL                      00313600
                 AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE             00313700
&ZCVAL           SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                  00313800
                 AGO   .ZGLIST2                                         00313900
.*                                                                      00314000
.ZGLIST3         ANOP  ,                                                00314100
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)    STRIP COMMA             00314200
&ZMS             SETC  'POSITIONAL ARGUMENT(S),'                        00314300
&ZMS             SETC  '&ZMS "&ZCVAL"'                                  00314400
&ZMS             SETC  '&ZMS CANNOT BE USED.'                           00314500
&ZMS             SETC  '&ZMS NO POSITIONAL ARGUMENTS'                   00314600
                 MNOTE 8,' &ZMS ARE ALLOWED.'                           00314700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00314800
.ZGLISTX         ANOP  ,                                                00314900
&ZASYSLNDX       SETA  0                                                00315000
.*-------------------------------------------------------------------   00315100
.***AG.MF04 MF=(SLE)                                                    00315200
.ZGMFX           ANOP  ,           END OF FULL SYNTAX CHECK             00315300
.*******************************************************************    00315400
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00315500
.*******************************************************************    00315600
                 AIF   (&ZMACRET NE 0).ZLX2     ERROR DETECTED          00315700
.*******************************************************************    00315800
.***AE.01  START OF IXCMSGI MACRO CODE                                  00315900
.*******************************************************************    00316000
                 LCLC  &M0M0001                 NAME                    00316100
&M0M0001         SETC  '&XLABEL'                SET NAME                00316200
                 AIF   (K'&XLABEL NE 0).XLAB2                           00316300
&M0M0001         SETC  'M00M&SYSNDX'            DEFAULT NAME            00316400
.*                                                                      00316500
.XLAB2           ANOP  ,                                                00316600
                 AIF   ('&XMF' EQ 'L').XLAB3                            00316700
&M0M0001 DS    0H                             IXCMSGI-3                 00316800
.XLAB3           ANOP  ,                                                00316900
.*******************************************************************    00317000
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00317100
.*******************************************************************    00317200
              PUSH  PRINT                                               00317300
                 AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON       00317400
                 PRINT OFF         ++ PR01                              00317500
                 AGO   .ZPRNTXX                                         00317600
.ZPRINTX         PRINT ON                                               00317700
.ZPRNTXX         ANOP  ,                                                00317800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00317900
         AIF   ('&LINKAGE' EQ '').NOLINKAGE                        @01A 00318000
                                                                        00318100
&ZMS     SETC  'LINKAGE MAY NOT BE SPECIFIED'                      @01A 00318200
         MNOTE 8,'&ZMS'                                            @01A 00318300
         MEXIT                                                     @01A 00318400
.NOLINKAGE ANOP                                                    @01A 00318500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00318600
.********************************************************************   00318700
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00318800
.********************************************************************   00318900
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00319000
                      LCLA  &ZOPN1         INVOCATION INDEX             00319100
                      LCLC  &ZOPL(4095)    LABEL                        00319200
                      LCLC  &ZOPO(4095)    OPERATION                    00319300
                      LCLC  &ZOPV(4095)    VALUE                        00319400
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00319500
.*                                                                      00319600
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00319700
.******************************************************************     00319800
.***AL.L10 IXCMSGI FMT=LIST MF=S!L PARAMETERS                           00319900
.******************************************************************     00320000
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00320100
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00320200
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00320300
&XMFATTR              SETC  '0D'                                        00320400
.*                                                                      00320500
&ZOPN                 SETA  &ZOPN+1                                     00320600
&ZOPL(&ZOPN)          SETC  ' '                                         00320700
                      AIF   (&SYSALVL NE 0).ZALVL6A                     00320800
&ZOPO(&ZOPN)          SETC  'B'                                         00320900
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00321000
                      AGO   .ZALVL6B                                    00321100
.ZALVL6A              ANOP                                              00321200
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00321300
&ZOPV(&ZOPN)          SETC  '4,8'                                       00321400
&ZOPN                 SETA  &ZOPN+1                                     00321500
&ZOPL(&ZOPN)          SETC  ' '                                         00321600
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00321700
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00321800
.ZALVL6B              ANOP                                              00321900
&ZOPD(&ZOPN)          SETC  '++ IXCMSGI ARG PARMS'                      00322000
.*                                                                      00322100
&ZOPN                 SETA  &ZOPN+1                                     00322200
&ZOPL(&ZOPN)          SETC  ' '                                         00322300
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00322400
&ZOPV(&ZOPN)          SETC  '1'                                         00322500
&ZOPD(&ZOPN)          SETC  ' '                                         00322600
.*                                                                      00322700
.ZLMFSL2              ANOP  ,                                           00322800
.*-------------------------------------------------------------------   00322900
.***AM.L00  IXCMSGI FMT=LIST name                                       00323000
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00323100
&ZOPN                 SETA &ZOPN+1                                      00323200
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00323300
&ZOPO(&ZOPN)          SETC 'EQU'                                        00323400
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00323500
&ZOPD(&ZOPN)          SETC '++ IXCMSGI NAME'                            00323600
.ZLMFSL2M             ANOP  ,                                           00323700
.*-------------------------------------------------------------------   00323800
.***AM.L01  IXCMSGI FMT=LIST PARAMETERS                                 00323900
&ZOPN                 SETA &ZOPN+1                                      00324000
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00324100
&ZOPO(&ZOPN)          SETC 'DS'                                         00324200
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00324300
&ZOPD(&ZOPN)          SETC '++ IXCMSGI PARM LIST'                       00324400
.*-------------------------------------------------------------------   00324500
.***AM.L02 XVERSION XL1                                                 00324600
&ZOPN                 SETA &ZOPN+1                                      00324700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00324800
&ZOPO(&ZOPN)          SETC 'DS'                                         00324900
&ZOPV(&ZOPN)          SETC 'XL1'                                        00325000
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00325100
.*-------------------------------------------------------------------   00325200
.***AM.L03 XKEYUSED1 BL.8                                               00325300
&ZOPN                 SETA &ZOPN+1                                      00325400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKEYUSED1'                        00325500
&ZOPO(&ZOPN)          SETC 'DS'                                         00325600
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00325700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00325800
.*                                                                      00325900
&ZOPN                 SETA  &ZOPN+1                                     00326000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._MULTIPART_MSG'                   00326100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00326200
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00326300
&ZOPD(&ZOPN)          SETC  '++ XMULTIPART.'                            00326400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00326500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00326600
.*                                                                      00326700
&ZOPN                 SETA  &ZOPN+1                                     00326800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._ELEMENTS_QUEUED'                 00326900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00327000
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00327100
&ZOPD(&ZOPN)          SETC  '++ XELEMFORM.'                             00327200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).QUEUE'                        00327300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00327400
.*                                                                      00327500
&ZOPN                 SETA  &ZOPN+1                                     00327600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_MSGSTGKEY'               00327700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00327800
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00327900
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00328000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MSGSTGKEY'                    00328100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00328200
.*                                                                      00328300
&ZOPN                 SETA  &ZOPN+1                                     00328400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_PARTPTROFF'              00328500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00328600
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00328700
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00328800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).PARTPTROFF'                   00328900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00329000
.*                                                                      00329100
&ZOPN                 SETA  &ZOPN+1                                     00329200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_PARTALETTBL'             00329300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00329400
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00329500
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00329600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).PARTALETTBL'                  00329700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00329800
.*                                                                      00329900
&ZOPN                 SETA  &ZOPN+1                                     00330000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_PARTALETOFF'             00330100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00330200
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00330300
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00330400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).PARTALETOFF'                  00330500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00330600
.*                                                                      00330700
&ZOPN                 SETA  &ZOPN+1                                     00330800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_PARTLENTBL'              00330900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00331000
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00331100
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00331200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).PARTLENTBL'                   00331300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00331400
.*                                                                      00331500
&ZOPN                 SETA  &ZOPN+1                                     00331600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_PARTLENOFF'              00331700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00331800
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00331900
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00332000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).PARTLENOFF'                   00332100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00332200
.*-------------------------------------------------------------------   00332300
.***AM.L03 XKEYUSED2 BL.8                                               00332400
&ZOPN                 SETA &ZOPN+1                                      00332500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKEYUSED2'                        00332600
&ZOPO(&ZOPN)          SETC 'DS'                                         00332700
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00332800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00332900
.*                                                                      00333000
&ZOPN                 SETA  &ZOPN+1                                     00333100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_#MSGPARTS'               00333200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00333300
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00333400
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00333500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).#MSGPARTS'                    00333600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00333700
.*                                                                      00333800
&ZOPN                 SETA  &ZOPN+1                                     00333900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._FULLTOKEN'                       00334000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00334100
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00334200
&ZOPD(&ZOPN)          SETC  '++ XFULLTOKEN.'                            00334300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).TOKEN'                        00334400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00334500
.*-------------------------------------------------------------------   00334600
.***AM.L09  XMSGSTGKEY BL.8                                             00334700
&ZOPN                 SETA &ZOPN+1                                      00334800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGSTGKEY'                       00334900
&ZOPO(&ZOPN)          SETC 'DS'                                         00335000
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00335100
&ZOPD(&ZOPN)          SETC '++ &ZXMSGSTGKEY '                           00335200
.*-------------------------------------------------------------------   00335300
.***AM.L09  XMSGTOKEN BL.32                                             00335400
&ZOPN                 SETA &ZOPN+1                                      00335500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGTOKEN'                        00335600
&ZOPO(&ZOPN)          SETC 'DS'                                         00335700
&ZOPV(&ZOPN)          SETC 'BL.32'                                      00335800
&ZOPD(&ZOPN)          SETC '++ &ZXMSGTOKEN '                            00335900
.*-------------------------------------------------------------------   00336000
.***AM.L09 ADDR XMSGBUF A                                               00336100
&ZOPN                 SETA &ZOPN+1                                      00336200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGBUF_ADDR'                     00336300
&ZOPO(&ZOPN)          SETC 'DS'                                         00336400
&ZOPV(&ZOPN)          SETC 'A'                                          00336500
&ZOPD(&ZOPN)          SETC '++ &ZXMSGBUF ADDR'                          00336600
.*-------------------------------------------------------------------   00336700
.***AM.L09 ALET XMSGBUF F                                               00336800
&ZOPN                 SETA &ZOPN+1                                      00336900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGBUF_ALET'                     00337000
&ZOPO(&ZOPN)          SETC 'DS'                                         00337100
&ZOPV(&ZOPN)          SETC 'F'                                          00337200
&ZOPD(&ZOPN)          SETC '++ &ZXMSGBUF ALET'                          00337300
.*-------------------------------------------------------------------   00337400
.***AM.MLM2 SAVED LOCATION COUNTER                                      00337500
                      AIF  (&XPLISTVER GE 1).ZL18LA                     00337600
                      AIF  ('&ZENDBASEPL' NE '').ZL18LA                 00337700
&ZENDBASEPL           SETC 'YES'                                        00337800
&ZOPN                 SETA &ZOPN+1                                      00337900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00338000
&ZOPO(&ZOPN)          SETC 'EQU'                                        00338100
&ZOPV(&ZOPN)          SETC '*'                                          00338200
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00338300
.ZL18LA               ANOP  ,                                           00338400
.*-------------------------------------------------------------------   00338500
.***AM.LVER1                                                            00338600
                      AIF  (&XPLISTVER LT 1).ZL18L                      00338700
.*-------------------------------------------------------------------   00338800
.*-------------------------------------------------------------------   00338900
.***AM.L09  XPART# F                                                    00339000
&ZOPN                 SETA &ZOPN+1                                      00339100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPART#'                           00339200
&ZOPO(&ZOPN)          SETC 'DS'                                         00339300
&ZOPV(&ZOPN)          SETC 'F'                                          00339400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            00339500
.*-------------------------------------------------------------------   00339600
.***AM.LVER2                                                            00339700
.ZL18L                ANOP  ,                                           00339800
.*-------------------------------------------------------------------   00339900
.*-------------------------------------------------------------------   00340000
.***AM.LVER1                                                            00340100
                      AIF  (&XPLISTVER LT 1).ZL19L                      00340200
.*-------------------------------------------------------------------   00340300
.*-------------------------------------------------------------------   00340400
.***AM.L09  XELEMENTPTR A                                               00340500
&ZOPN                 SETA &ZOPN+1                                      00340600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XELEMENTPTR'                      00340700
&ZOPO(&ZOPN)          SETC 'DS'                                         00340800
&ZOPV(&ZOPN)          SETC 'A'                                          00340900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            00341000
.*-------------------------------------------------------------------   00341100
.***AM.LVER2                                                            00341200
.ZL19L                ANOP  ,                                           00341300
.*-------------------------------------------------------------------   00341400
.*-------------------------------------------------------------------   00341500
.***AM.LVER1                                                            00341600
                      AIF  (&XPLISTVER LT 1).ZL20L                      00341700
.*-------------------------------------------------------------------   00341800
.*-------------------------------------------------------------------   00341900
.***AM.L09 ADDR XPARTLENTBL A                                           00342000
&ZOPN                 SETA &ZOPN+1                                      00342100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTLENTBL_ADDR'                 00342200
&ZOPO(&ZOPN)          SETC 'DS'                                         00342300
&ZOPV(&ZOPN)          SETC 'A'                                          00342400
&ZOPD(&ZOPN)          SETC '++ &ZXPARTLENTBL ADDR'                      00342500
.*-------------------------------------------------------------------   00342600
.***AM.LVER2                                                            00342700
.ZL20L                ANOP  ,                                           00342800
.*-------------------------------------------------------------------   00342900
.*-------------------------------------------------------------------   00343000
.***AM.LVER1                                                            00343100
                      AIF  (&XPLISTVER LT 1).ZL21L                      00343200
.*-------------------------------------------------------------------   00343300
.*-------------------------------------------------------------------   00343400
.***AM.L09 ADDR XPARTALETTBL A                                          00343500
&ZOPN                 SETA &ZOPN+1                                      00343600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTALETTBL_ADDR'                00343700
&ZOPO(&ZOPN)          SETC 'DS'                                         00343800
&ZOPV(&ZOPN)          SETC 'A'                                          00343900
&ZOPD(&ZOPN)          SETC '++ &ZXPARTALETTBL ADDR'                     00344000
.*-------------------------------------------------------------------   00344100
.***AM.LVER2                                                            00344200
.ZL21L                ANOP  ,                                           00344300
.*-------------------------------------------------------------------   00344400
.*-------------------------------------------------------------------   00344500
.***AM.LVER1                                                            00344600
                      AIF  (&XPLISTVER LT 1).ZL22L                      00344700
.*-------------------------------------------------------------------   00344800
.*-------------------------------------------------------------------   00344900
.***AM.L09 ADDR XELEMENT A                                              00345000
&ZOPN                 SETA &ZOPN+1                                      00345100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XELEMENT_ADDR'                    00345200
&ZOPO(&ZOPN)          SETC 'DS'                                         00345300
&ZOPV(&ZOPN)          SETC 'A'                                          00345400
&ZOPD(&ZOPN)          SETC '++ &ZXELEMENT ADDR'                         00345500
.*-------------------------------------------------------------------   00345600
.***AM.LVER2                                                            00345700
.ZL22L                ANOP  ,                                           00345800
.*-------------------------------------------------------------------   00345900
.*-------------------------------------------------------------------   00346000
.***AM.LVER1                                                            00346100
                      AIF  (&XPLISTVER LT 1).ZL23L                      00346200
.*-------------------------------------------------------------------   00346300
.*-------------------------------------------------------------------   00346400
.***AM.L09 ALET XELEMENT F                                              00346500
&ZOPN                 SETA &ZOPN+1                                      00346600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XELEMENT_ALET'                    00346700
&ZOPO(&ZOPN)          SETC 'DS'                                         00346800
&ZOPV(&ZOPN)          SETC 'F'                                          00346900
&ZOPD(&ZOPN)          SETC '++ &ZXELEMENT ALET'                         00347000
.*-------------------------------------------------------------------   00347100
.***AM.LVER2                                                            00347200
.ZL23L                ANOP  ,                                           00347300
.*-------------------------------------------------------------------   00347400
.*-------------------------------------------------------------------   00347500
.***AM.LVER1                                                            00347600
                      AIF  (&XPLISTVER LT 1).ZL24L                      00347700
.*-------------------------------------------------------------------   00347800
.*-------------------------------------------------------------------   00347900
.***AM.L09 ALET XPARTLENTBL F                                           00348000
&ZOPN                 SETA &ZOPN+1                                      00348100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTLENTBL_ALET'                 00348200
&ZOPO(&ZOPN)          SETC 'DS'                                         00348300
&ZOPV(&ZOPN)          SETC 'F'                                          00348400
&ZOPD(&ZOPN)          SETC '++ &ZXPARTLENTBL ALET'                      00348500
.*-------------------------------------------------------------------   00348600
.***AM.LVER2                                                            00348700
.ZL24L                ANOP  ,                                           00348800
.*-------------------------------------------------------------------   00348900
.*-------------------------------------------------------------------   00349000
.***AM.LVER1                                                            00349100
                      AIF  (&XPLISTVER LT 1).ZL25L                      00349200
.*-------------------------------------------------------------------   00349300
.*-------------------------------------------------------------------   00349400
.***AM.L09 ALET XPARTALETTBL F                                          00349500
&ZOPN                 SETA &ZOPN+1                                      00349600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTALETTBL_ALET'                00349700
&ZOPO(&ZOPN)          SETC 'DS'                                         00349800
&ZOPV(&ZOPN)          SETC 'F'                                          00349900
&ZOPD(&ZOPN)          SETC '++ &ZXPARTALETTBL ALET'                     00350000
.*-------------------------------------------------------------------   00350100
.***AM.LVER2                                                            00350200
.ZL25L                ANOP  ,                                           00350300
.*-------------------------------------------------------------------   00350400
.*-------------------------------------------------------------------   00350500
.***AM.LVER1                                                            00350600
                      AIF  (&XPLISTVER LT 1).ZL26L                      00350700
.*-------------------------------------------------------------------   00350800
.*-------------------------------------------------------------------   00350900
.***AM.L09  XPARTALET F                                                 00351000
&ZOPN                 SETA &ZOPN+1                                      00351100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTALET'                        00351200
&ZOPO(&ZOPN)          SETC 'DS'                                         00351300
&ZOPV(&ZOPN)          SETC 'F'                                          00351400
&ZOPD(&ZOPN)          SETC '++ &ZXPARTALET '                            00351500
.*-------------------------------------------------------------------   00351600
.***AM.LVER2                                                            00351700
.ZL26L                ANOP  ,                                           00351800
.*-------------------------------------------------------------------   00351900
.*-------------------------------------------------------------------   00352000
.***AM.LVER1                                                            00352100
                      AIF  (&XPLISTVER LT 1).ZL27L                      00352200
.*-------------------------------------------------------------------   00352300
.*-------------------------------------------------------------------   00352400
.***AM.L09  XPARTALETOFF F                                              00352500
&ZOPN                 SETA &ZOPN+1                                      00352600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTALETOFF'                     00352700
&ZOPO(&ZOPN)          SETC 'DS'                                         00352800
&ZOPV(&ZOPN)          SETC 'F'                                          00352900
&ZOPD(&ZOPN)          SETC '++ &ZXPARTALETOFF '                         00353000
.*-------------------------------------------------------------------   00353100
.***AM.LVER2                                                            00353200
.ZL27L                ANOP  ,                                           00353300
.*-------------------------------------------------------------------   00353400
.*-------------------------------------------------------------------   00353500
.***AM.LVER1                                                            00353600
                      AIF  (&XPLISTVER LT 1).ZL28L                      00353700
.*-------------------------------------------------------------------   00353800
.*-------------------------------------------------------------------   00353900
.***AM.L09  XPARTOFF F                                                  00354000
&ZOPN                 SETA &ZOPN+1                                      00354100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTOFF'                         00354200
&ZOPO(&ZOPN)          SETC 'DS'                                         00354300
&ZOPV(&ZOPN)          SETC 'F'                                          00354400
&ZOPD(&ZOPN)          SETC '++ &ZXPARTOFF '                             00354500
.*-------------------------------------------------------------------   00354600
.***AM.LVER2                                                            00354700
.ZL28L                ANOP  ,                                           00354800
.*-------------------------------------------------------------------   00354900
.*-------------------------------------------------------------------   00355000
.***AM.LVER1                                                            00355100
                      AIF  (&XPLISTVER LT 1).ZL29L                      00355200
.*-------------------------------------------------------------------   00355300
.*-------------------------------------------------------------------   00355400
.***AM.L09  XPARTPTROFF F                                               00355500
&ZOPN                 SETA &ZOPN+1                                      00355600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTPTROFF'                      00355700
&ZOPO(&ZOPN)          SETC 'DS'                                         00355800
&ZOPV(&ZOPN)          SETC 'F'                                          00355900
&ZOPD(&ZOPN)          SETC '++ &ZXPARTPTROFF '                          00356000
.*-------------------------------------------------------------------   00356100
.***AM.LVER2                                                            00356200
.ZL29L                ANOP  ,                                           00356300
.*-------------------------------------------------------------------   00356400
.*-------------------------------------------------------------------   00356500
.***AM.LVER1                                                            00356600
                      AIF  (&XPLISTVER LT 1).ZL30L                      00356700
.*-------------------------------------------------------------------   00356800
.*-------------------------------------------------------------------   00356900
.***AM.L09  XPARTLEN F                                                  00357000
&ZOPN                 SETA &ZOPN+1                                      00357100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTLEN'                         00357200
&ZOPO(&ZOPN)          SETC 'DS'                                         00357300
&ZOPV(&ZOPN)          SETC 'F'                                          00357400
&ZOPD(&ZOPN)          SETC '++ &ZXPARTLEN '                             00357500
.*-------------------------------------------------------------------   00357600
.***AM.LVER2                                                            00357700
.ZL30L                ANOP  ,                                           00357800
.*-------------------------------------------------------------------   00357900
.*-------------------------------------------------------------------   00358000
.***AM.LVER1                                                            00358100
                      AIF  (&XPLISTVER LT 1).ZL31L                      00358200
.*-------------------------------------------------------------------   00358300
.*-------------------------------------------------------------------   00358400
.***AM.L09  XPARTLENOFF F                                               00358500
&ZOPN                 SETA &ZOPN+1                                      00358600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARTLENOFF'                      00358700
&ZOPO(&ZOPN)          SETC 'DS'                                         00358800
&ZOPV(&ZOPN)          SETC 'F'                                          00358900
&ZOPD(&ZOPN)          SETC '++ &ZXPARTLENOFF '                          00359000
.*-------------------------------------------------------------------   00359100
.***AM.LVER2                                                            00359200
.ZL31L                ANOP  ,                                           00359300
.*-------------------------------------------------------------------   00359400
.*-------------------------------------------------------------------   00359500
.***AM.LVER1                                                            00359600
                      AIF  (&XPLISTVER LT 1).ZL32L                      00359700
.*-------------------------------------------------------------------   00359800
.*-------------------------------------------------------------------   00359900
.***AM.L09  X#MSGPARTS F                                                00360000
&ZOPN                 SETA &ZOPN+1                                      00360100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._X#MSGPARTS'                       00360200
&ZOPO(&ZOPN)          SETC 'DS'                                         00360300
&ZOPV(&ZOPN)          SETC 'F'                                          00360400
&ZOPD(&ZOPN)          SETC '++ &ZX#MSGPARTS '                           00360500
.*-------------------------------------------------------------------   00360600
.***AM.LVER2                                                            00360700
.ZL32L                ANOP  ,                                           00360800
.*-------------------------------------------------------------------   00360900
.*-------------------------------------------------------------------   00361000
.***AM.LVER1                                                            00361100
                      AIF  (&XPLISTVER LT 1).ZL33L                      00361200
.*-------------------------------------------------------------------   00361300
.*-------------------------------------------------------------------   00361400
.***AM.L09  XNEXTOFF F                                                  00361500
&ZOPN                 SETA &ZOPN+1                                      00361600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNEXTOFF'                         00361700
&ZOPO(&ZOPN)          SETC 'DS'                                         00361800
&ZOPV(&ZOPN)          SETC 'F'                                          00361900
&ZOPD(&ZOPN)          SETC '++ &ZXNEXTOFF '                             00362000
.*-------------------------------------------------------------------   00362100
.***AM.LVER2                                                            00362200
.ZL33L                ANOP  ,                                           00362300
.*-------------------------------------------------------------------   00362400
.*-------------------------------------------------------------------   00362500
.***AM.LVER1                                                            00362600
                      AIF  (&XPLISTVER LT 1).ZL34L                      00362700
.*-------------------------------------------------------------------   00362800
.*-------------------------------------------------------------------   00362900
.***AM.L09  XNEXTPTROFF F                                               00363000
&ZOPN                 SETA &ZOPN+1                                      00363100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNEXTPTROFF'                      00363200
&ZOPO(&ZOPN)          SETC 'DS'                                         00363300
&ZOPV(&ZOPN)          SETC 'F'                                          00363400
&ZOPD(&ZOPN)          SETC '++ &ZXNEXTPTROFF '                          00363500
.*-------------------------------------------------------------------   00363600
.***AM.LVER2                                                            00363700
.ZL34L                ANOP  ,                                           00363800
.*-------------------------------------------------------------------   00363900
.*-------------------------------------------------------------------   00364000
.***AM.LVER1                                                            00364100
                      AIF  (&XPLISTVER LT 1).ZL35L                      00364200
.*-------------------------------------------------------------------   00364300
.*-------------------------------------------------------------------   00364400
.***AM.L09  XENDOFQUEUE A                                               00364500
&ZOPN                 SETA &ZOPN+1                                      00364600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENDOFQUEUE'                      00364700
&ZOPO(&ZOPN)          SETC 'DS'                                         00364800
&ZOPV(&ZOPN)          SETC 'A'                                          00364900
&ZOPD(&ZOPN)          SETC '++ &ZXENDOFQUEUE '                          00365000
.*-------------------------------------------------------------------   00365100
.***AM.LVER2                                                            00365200
.ZL35L                ANOP  ,                                           00365300
.*-------------------------------------------------------------------   00365400
.*-------------------------------------------------------------------   00365500
.***AM.MLM2 SAVED LOCATION COUNTER                                      00365600
                      AIF  (&XPLISTVER GE 2).ZL36LA                     00365700
                      AIF  ('&ZENDBASEPL' NE '').ZL36LA                 00365800
&ZENDBASEPL           SETC 'YES'                                        00365900
&ZOPN                 SETA &ZOPN+1                                      00366000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00366100
&ZOPO(&ZOPN)          SETC 'EQU'                                        00366200
&ZOPV(&ZOPN)          SETC '*'                                          00366300
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00366400
.ZL36LA               ANOP  ,                                           00366500
.*-------------------------------------------------------------------   00366600
.***AM.LVER1                                                            00366700
                      AIF  (&XPLISTVER LT 2).ZL36L                      00366800
.*-------------------------------------------------------------------   00366900
.*-------------------------------------------------------------------   00367000
.***AM.L09  XTOKEN CL16                                                 00367100
&ZOPN                 SETA &ZOPN+1                                      00367200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTOKEN'                           00367300
&ZOPO(&ZOPN)          SETC 'DS'                                         00367400
&ZOPV(&ZOPN)          SETC 'CL16'                                       00367500
&ZOPD(&ZOPN)          SETC '++ &ZXTOKEN '                               00367600
.*-------------------------------------------------------------------   00367700
.***AM.LVER2                                                            00367800
.ZL36L                ANOP  ,                                           00367900
.*-------------------------------------------------------------------   00368000
.*-------------------------------------------------------------------   00368100
.***AM.MLM2 SAVED LOCATION COUNTER                                      00368200
                      AIF  (&XPLISTVER GE 3).ZL37LA                     00368300
                      AIF  ('&ZENDBASEPL' NE '').ZL37LA                 00368400
&ZENDBASEPL           SETC 'YES'                                        00368500
&ZOPN                 SETA &ZOPN+1                                      00368600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00368700
&ZOPO(&ZOPN)          SETC 'EQU'                                        00368800
&ZOPV(&ZOPN)          SETC '*'                                          00368900
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00369000
.ZL37LA               ANOP  ,                                           00369100
.*-------------------------------------------------------------------   00369200
.***AM.LVER1                                                            00369300
                      AIF  (&XPLISTVER LT 3).ZL37L                      00369400
.*-------------------------------------------------------------------   00369500
.*-------------------------------------------------------------------   00369600
.***AM.L09  XCFDATA F                                                   00369700
&ZOPN                 SETA &ZOPN+1                                      00369800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCFDATA'                          00369900
&ZOPO(&ZOPN)          SETC 'DS'                                         00370000
&ZOPV(&ZOPN)          SETC 'F'                                          00370100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            00370200
.*-------------------------------------------------------------------   00370300
.***AM.LVER2                                                            00370400
.ZL37L                ANOP  ,                                           00370500
.*-------------------------------------------------------------------   00370600
.*-------------------------------------------------------------------   00370700
.***AM.L10 END OF IXCMSGI LIST PARAMETERS                               00370800
&ZOPN                 SETA &ZOPN+1                                      00370900
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00371000
&ZOPO(&ZOPN)          SETC 'EQU'                                        00371100
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00371200
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00371300
.*                                                                      00371400
&ZOPN                 SETA &ZOPN+1                                      00371500
&ZOPL(&ZOPN)          SETC ' '                                          00371600
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00371700
&ZOPV(&ZOPN)          SETC '1'                                          00371800
&ZOPD(&ZOPN)          SETC ' '                                          00371900
.*-------------------------------------------------------------------   00372000
.***AL.L12 IXCMSGI FMT=LIST MF=S!L PARAMETERS                           00372100
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00372200
.*                                                                      00372300
&ZOPN                 SETA  &ZOPN+1                                     00372400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00372500
&ZOPO(&ZOPN)          SETC  'DC'                                        00372600
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00372700
&ZOPD(&ZOPN)          SETC  '++ IXCMSGI ARG PARMS'                      00372800
.*                                                                      00372900
.ZLMFSLX              ANOP  ,                                           00373000
.*-------------------------------------------------------------------   00373100
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00373200
&ZPLLEN               SETA 16                                           00373300
.*                                                                      00373400
                      AIF  (&XPLISTVER LT 1).ZLLEN2Z                    00373500
&ZPLLEN               SETA 88                                           00373600
.ZLLEN2Z              ANOP  ,                                           00373700
.*                                                                      00373800
                      AIF  (&XPLISTVER LT 2).ZLLEN3Z                    00373900
&ZPLLEN               SETA 104                                          00374000
.ZLLEN3Z              ANOP  ,                                           00374100
.*                                                                      00374200
                      AIF  (&XPLISTVER LT 3).ZLLEN4Z                    00374300
&ZPLLEN               SETA 108                                          00374400
.ZLLEN4Z              ANOP  ,                                           00374500
.*                                                                      00374600
.******************************************************************     00374700
.***AI.L01 IXCMSGI FMT=LIST FILL IN PARAMETER AREA                      00374800
.******************************************************************     00374900
                      ACTR  10000                                       00375000
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00375100
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00375200
&ZCVAL                SETC  'LAE'          XAX MODE                     00375300
.ZIMFXA               ANOP ,                                            00375400
.*                                                                      00375500
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00375600
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00375700
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00375800
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00375900
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00376000
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00376100
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00376200
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00376300
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00376400
&ZOPN                 SETA  &ZOPN+1                                     00376500
&ZOPL(&ZOPN)          SETC  ' '                                         00376600
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00376700
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00376800
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00376900
                      AGO   .ZIMFNX                                     00377000
.*                                                                      00377100
.ZIMFN2               ANOP ,                                            00377200
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     00377300
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00377400
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00377500
&ZOPN                 SETA  &ZOPN+1                                     00377600
&ZOPL(&ZOPN)          SETC  ' '                                         00377700
&ZOPO(&ZOPN)          SETC  'LAE'                                       00377800
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00377900
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00378000
                      AGO   .ZIMFNX                                     00378100
.ZIMFNX1              ANOP ,                                            00378200
&ZOPN                 SETA  &ZOPN+1                                     00378300
&ZOPL(&ZOPN)          SETC  ' '                                         00378400
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00378500
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00378600
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00378700
.ZIMFNX               ANOP ,                                            00378800
.********************************************************************   00378900
.***AI.L02 IXCMSGI FMT=LIST INITIALIZE PARAMETER AREA                   00379000
.********************************************************************   00379100
.***AI.L03 MF=(SLE)                                                     00379200
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00379300
.*                                                                      00379400
&ZOPN                 SETA  &ZOPN+1                                     00379500
&ZOPL(&ZOPN)          SETC  ' '                                         00379600
&ZOPO(&ZOPN)          SETC  'XC'                                        00379700
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00379800
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00379900
.ZIMFLX               ANOP  ,                                           00380000
.*-------------------------------------------------------------------   00380100
.***AI.L04B XVERSION XL1                                                00380200
                      AIF   (&XPLISTVER EQ 0).ZIMFVZ                    00380300
&ZOPN                 SETA  &ZOPN+1                                     00380400
&ZOPL(&ZOPN)          SETC  ' '                                         00380500
&ZOPO(&ZOPN)          SETC  'MVI'                                       00380600
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00380700
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00380800
.ZIMFVZ               ANOP  ,                                           00380900
.*-------------------------------------------------------------------   00381000
.***AI.L05 XKEYUSED1 BL1                                                00381100
&ZW                   SETC  ''                                          00381200
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00381300
.*-------------------------------------------------------------------   00381400
.***AI.L08 XKEYUSED1 "YES"                                              00381500
.***      BL1'1XXXXXXX'                                                 00381600
         AIF   ('&XMULTIPART' NE 'YES').ZI3A                            00381700
&ZW                   SETC  '&ZW.1'                                     00381800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00381900
                      AGO   .ZI3C                                       00382000
.*                                                                      00382100
.ZI3A                 ANOP  ,                                           00382200
&ZW                   SETC  '&ZW.0'                                     00382300
.ZI3C                 ANOP  ,                                           00382400
.*-------------------------------------------------------------------   00382500
.***AI.L08 XKEYUSED1 "QUEUE"                                            00382600
.***      BL1'X1XXXXXX'                                                 00382700
         AIF   ('&XELEMFORM' NE 'QUEUE').ZI4A                           00382800
&ZW                   SETC  '&ZW.1'                                     00382900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00383000
                      AGO   .ZI4C                                       00383100
.*                                                                      00383200
.ZI4A                 ANOP  ,                                           00383300
&ZW                   SETC  '&ZW.0'                                     00383400
.ZI4C                 ANOP  ,                                           00383500
.*-------------------------------------------------------------------   00383600
.***AI.L08 XKEYUSED1 "MSGSTGKEY"                                        00383700
.***      BL1'XX1XXXXX'                                                 00383800
         AIF   ('&MSGSTGKEY' EQ '').ZI5A                                00383900
&ZW                   SETC  '&ZW.1'                                     00384000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00384100
                      AGO   .ZI5C                                       00384200
.*                                                                      00384300
.ZI5A                 ANOP  ,                                           00384400
&ZW                   SETC  '&ZW.0'                                     00384500
.ZI5C                 ANOP  ,                                           00384600
.*-------------------------------------------------------------------   00384700
.***AI.L08 XKEYUSED1 "PARTPTROFF"                                       00384800
.***      BL1'XXX1XXXX'                                                 00384900
         AIF   ('&PARTPTROFF' EQ '').ZI6A                               00385000
&ZW                   SETC  '&ZW.1'                                     00385100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00385200
                      AGO   .ZI6C                                       00385300
.*                                                                      00385400
.ZI6A                 ANOP  ,                                           00385500
&ZW                   SETC  '&ZW.0'                                     00385600
.ZI6C                 ANOP  ,                                           00385700
.*-------------------------------------------------------------------   00385800
.***AI.L08 XKEYUSED1 "PARTALETTBL"                                      00385900
.***      BL1'XXXX1XXX'                                                 00386000
         AIF   ('&PARTALETTBL' EQ '').ZI7A                              00386100
&ZW                   SETC  '&ZW.1'                                     00386200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00386300
                      AGO   .ZI7C                                       00386400
.*                                                                      00386500
.ZI7A                 ANOP  ,                                           00386600
&ZW                   SETC  '&ZW.0'                                     00386700
.ZI7C                 ANOP  ,                                           00386800
.*-------------------------------------------------------------------   00386900
.***AI.L08 XKEYUSED1 "PARTALETOFF"                                      00387000
.***      BL1'XXXXX1XX'                                                 00387100
         AIF   ('&PARTALETOFF' EQ '').ZI8A                              00387200
&ZW                   SETC  '&ZW.1'                                     00387300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00387400
                      AGO   .ZI8C                                       00387500
.*                                                                      00387600
.ZI8A                 ANOP  ,                                           00387700
&ZW                   SETC  '&ZW.0'                                     00387800
.ZI8C                 ANOP  ,                                           00387900
.*-------------------------------------------------------------------   00388000
.***AI.L08 XKEYUSED1 "PARTLENTBL"                                       00388100
.***      BL1'XXXXXX1X'                                                 00388200
         AIF   ('&PARTLENTBL' EQ '').ZI9A                               00388300
&ZW                   SETC  '&ZW.1'                                     00388400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00388500
                      AGO   .ZI9C                                       00388600
.*                                                                      00388700
.ZI9A                 ANOP  ,                                           00388800
&ZW                   SETC  '&ZW.0'                                     00388900
.ZI9C                 ANOP  ,                                           00389000
.*-------------------------------------------------------------------   00389100
.***AI.L08 XKEYUSED1 "PARTLENOFF"                                       00389200
.***      BL1'XXXXXXX1'                                                 00389300
         AIF   ('&PARTLENOFF' EQ '').ZI10A                              00389400
&ZW                   SETC  '&ZW.1'                                     00389500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00389600
                      AGO   .ZI10C                                      00389700
.*                                                                      00389800
.ZI10A                ANOP  ,                                           00389900
&ZW                   SETC  '&ZW.0'                                     00390000
.ZI10C                ANOP  ,                                           00390100
.*-------------------------------------------------------------------   00390200
.***AI.L11 XKEYUSED1 BL1                                                00390300
                      AIF   ('&ZCLNG' NE 'YES').ZI10E  ALL ZERO BITS    00390400
&ZOPN                 SETA  &ZOPN+1                                     00390500
&ZOPL(&ZOPN)          SETC  ' '                                         00390600
&ZOPO(&ZOPN)          SETC  'OI'                                        00390700
&ZOPV(&ZOPN)          SETC  '1(1),B''&ZW'''                             00390800
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00390900
.ZI10E                ANOP  ,                                           00391000
.*-------------------------------------------------------------------   00391100
.***AI.L05 XKEYUSED2 BL1                                                00391200
&ZW                   SETC  ''                                          00391300
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00391400
.*-------------------------------------------------------------------   00391500
.***AI.L08 XKEYUSED2 "#MSGPARTS"                                        00391600
.***      BL1'1XXXXXXX'                                                 00391700
         AIF   ('&#MSGPARTS' EQ '').ZI12A                               00391800
&ZW                   SETC  '&ZW.1'                                     00391900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00392000
                      AGO   .ZI12C                                      00392100
.*                                                                      00392200
.ZI12A                ANOP  ,                                           00392300
&ZW                   SETC  '&ZW.0'                                     00392400
.ZI12C                ANOP  ,                                           00392500
.*-------------------------------------------------------------------   00392600
.***AI.L08 XKEYUSED2 "TOKEN"                                            00392700
.***      BL1'X1XXXXXX'                                                 00392800
         AIF   ('&XFULLTOKEN' NE 'TOKEN').ZI13A                         00392900
&ZW                   SETC  '&ZW.1000000'                               00393000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00393100
                      AGO   .ZI13C                                      00393200
.*                                                                      00393300
.ZI13A                ANOP  ,                                           00393400
&ZW                   SETC  '&ZW.0000000'                               00393500
.ZI13C                ANOP  ,                                           00393600
.*-------------------------------------------------------------------   00393700
.***AI.L11 XKEYUSED2 BL1                                                00393800
                      AIF   ('&ZCLNG' NE 'YES').ZI13E  ALL ZERO BITS    00393900
&ZOPN                 SETA  &ZOPN+1                                     00394000
&ZOPL(&ZOPN)          SETC  ' '                                         00394100
&ZOPO(&ZOPN)          SETC  'OI'                                        00394200
&ZOPV(&ZOPN)          SETC  '2(1),B''&ZW'''                             00394300
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00394400
.ZI13E                ANOP  ,                                           00394500
.*-------------------------------------------------------------------   00394600
.***AI.L18  XMSGSTGKEY XL1                                              00394700
         AIF   ('&XMSGSTGKEY' NE 'JOINKEY').ZI14                        00394800
&ZXMSGSTGKEY          SETC  ''             RESET INPUT/OUTPUT           00394900
.ZI14                 ANOP  ,                                           00395000
.*-------------------------------------------------------------------   00395100
.***AI.L25  XMSGSTGKEY XL1                                              00395200
                      AIF   ('&ZXMSGSTGKEY' EQ '').ZI14E                00395300
                      AIF   ('&ZXMSGSTGKEY' EQ 'OUTPUT').ZI14E          00395400
&ZCGPR                SETC  '&XMSGSTGKEY'                               00395500
.*                                                                      00395600
                      AIF   ('&XMSGSTGKEY'(1,1) NE '(').ZI14B           00395700
&ZCGPR   SETC  '0('.'&XMSGSTGKEY'(2,K'&XMSGSTGKEY-2).')'                00395800
                      AGO   .ZI14D                                      00395900
.ZI14B                ANOP  ,                                           00396000
.*                                                                      00396100
&ZC                   SETC  '&XMSGSTGKEY'(1,1)                          00396200
                      AIF   (T'&ZC NE 'N').ZI14D                        00396300
&ZC                   SETC  '&XMSGSTGKEY'                               00396400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI14D               00396500
&ZCGPR                SETC  '=BL1''&XMSGSTGKEY'''                       00396600
.*                                                                      00396700
.ZI14D                ANOP  ,                                           00396800
.*                                                                      00396900
&ZOPN                 SETA  &ZOPN+1                                     00397000
&ZOPL(&ZOPN)          SETC  ' '                                         00397100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00397200
&ZOPV(&ZOPN)          SETC  '3(1,1),&ZCGPR'                             00397300
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGSTGKEY XMSGSTGKEY'                00397400
.*                                                                      00397500
.ZI14E                ANOP  ,                                           00397600
.*-------------------------------------------------------------------   00397700
.***AI.L25  XMSGTOKEN XL4                                               00397800
                      AIF   ('&ZXMSGTOKEN' EQ '').ZI15E                 00397900
                      AIF   ('&ZXMSGTOKEN' EQ 'OUTPUT').ZI15E           00398000
&ZCGPR                SETC  '&XMSGTOKEN'                                00398100
.*                                                                      00398200
                      AIF   ('&XMSGTOKEN'(1,1) NE '(').ZI15B            00398300
&ZCGPR   SETC  '0('.'&XMSGTOKEN'(2,K'&XMSGTOKEN-2).')'                  00398400
                      AGO   .ZI15D                                      00398500
.ZI15B                ANOP  ,                                           00398600
.*                                                                      00398700
&ZC                   SETC  '&XMSGTOKEN'(1,1)                           00398800
                      AIF   (T'&ZC NE 'N').ZI15D                        00398900
&ZC                   SETC  '&XMSGTOKEN'                                00399000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI15D               00399100
&ZCGPR                SETC  '=BL4''&XMSGTOKEN'''                        00399200
.*                                                                      00399300
.ZI15D                ANOP  ,                                           00399400
.*                                                                      00399500
&ZOPN                 SETA  &ZOPN+1                                     00399600
&ZOPL(&ZOPN)          SETC  ' '                                         00399700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00399800
&ZOPV(&ZOPN)          SETC  '4(4,1),&ZCGPR'                             00399900
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGTOKEN XMSGTOKEN'                  00400000
.*                                                                      00400100
.ZI15E                ANOP  ,                                           00400200
.*-------------------------------------------------------------------   00400300
.***AI.L19 ADDR XMSGBUF A                                               00400400
                      AIF   ('&ZXMSGBUF' EQ '').ZI16H                   00400500
&ZCLNG                SETC  '&XMSGBUF'                                  00400600
&ZCGPR                SETC  '14'                                        00400700
         AIF   ('&XMSGBUF'(1,1) EQ '(').ZI16F  IN GPR                   00400800
.*                                                                      00400900
&ZOPN                 SETA  &ZOPN+1                                     00401000
&ZOPL(&ZOPN)          SETC  ' '                                         00401100
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00401200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00401300
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGBUF XMSGBUF'                      00401400
.*                                                                      00401500
                      AGO   .ZI16G                                      00401600
.*                                                                      00401700
.ZI16F                ANOP  ,                                           00401800
&ZCGPR   SETC  '&XMSGBUF'(2,K'&XMSGBUF-2)                               00401900
.*                                                                      00402000
.ZI16G                ANOP  ,                                           00402100
.*                                                                      00402200
&ZOPN                 SETA  &ZOPN+1                                     00402300
&ZOPL(&ZOPN)          SETC  ' '                                         00402400
&ZOPO(&ZOPN)          SETC  'ST'                                        00402500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,8(,1)'                              00402600
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGBUF XMSGBUF'                      00402700
.*                                                                      00402800
.ZI16H                ANOP  ,                                           00402900
.*-------------------------------------------------------------------   00403000
.***AI.L23 ALET XMSGBUF F                                               00403100
         AIF   ('&ZXMSGBUF' EQ '').ZI17G                                00403200
         AIF   ('&SYSASCE' EQ 'P').ZI17G   SYSSTATE PRIMARY             00403300
&ZCLNG                SETC  '&XMSGBUF'                                  00403400
         AIF   ('&XMSGBUF'(1,1) EQ '(').ZI17E  IN AR                    00403500
.*                                                                      00403600
&ZCGPR                SETC  '14'                                        00403700
                      AGO   .ZI17F                                      00403800
.*                                                                      00403900
.ZI17E                ANOP  ,                                           00404000
&ZCGPR   SETC  '&XMSGBUF'(2,K'&XMSGBUF-2)                               00404100
.*                                                                      00404200
.ZI17F                ANOP  ,                                           00404300
.*                                                                      00404400
&ZOPN                 SETA  &ZOPN+1                                     00404500
&ZOPL(&ZOPN)          SETC  ' '                                         00404600
&ZOPO(&ZOPN)          SETC  'STAM'                                      00404700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,12(1)'                       00404800
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGBUF XMSGBUF'                      00404900
.*                                                                      00405000
.ZI17G                ANOP  ,                                           00405100
.*-------------------------------------------------------------------   00405200
.***AI.LVER01                                                           00405300
                      AIF  (&XPLISTVER LT 1).ZI18Z                      00405400
.*-------------------------------------------------------------------   00405500
.***AI.LVER02                                                           00405600
.ZI18Z                ANOP  ,                                           00405700
.*-------------------------------------------------------------------   00405800
.***AI.LVER01                                                           00405900
                      AIF  (&XPLISTVER LT 1).ZI19Z                      00406000
.*-------------------------------------------------------------------   00406100
.***AI.LVER02                                                           00406200
.ZI19Z                ANOP  ,                                           00406300
.*-------------------------------------------------------------------   00406400
.***AI.LVER01                                                           00406500
                      AIF  (&XPLISTVER LT 1).ZI20Z                      00406600
.*-------------------------------------------------------------------   00406700
.***AI.L19 ADDR XPARTLENTBL A                                           00406800
                      AIF   ('&ZXPARTLENTBL' EQ '').ZI20H               00406900
&ZCLNG                SETC  '&XPARTLENTBL'                              00407000
&ZCGPR                SETC  '14'                                        00407100
         AIF   ('&XPARTLENTBL'(1,1) EQ '(').ZI20F  IN GPR               00407200
.*                                                                      00407300
&ZOPN                 SETA  &ZOPN+1                                     00407400
&ZOPL(&ZOPN)          SETC  ' '                                         00407500
&ZOPO(&ZOPN)          SETC  'LA'                                        00407600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00407700
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTLENTBL XPARTLENTBL'              00407800
.*                                                                      00407900
                      AGO   .ZI20G                                      00408000
.*                                                                      00408100
.ZI20F                ANOP  ,                                           00408200
&ZCGPR   SETC  '&XPARTLENTBL'(2,K'&XPARTLENTBL-2)                       00408300
.*                                                                      00408400
.ZI20G                ANOP  ,                                           00408500
.*                                                                      00408600
&ZOPN                 SETA  &ZOPN+1                                     00408700
&ZOPL(&ZOPN)          SETC  ' '                                         00408800
&ZOPO(&ZOPN)          SETC  'ST'                                        00408900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,24(,1)'                             00409000
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTLENTBL XPARTLENTBL'              00409100
.*                                                                      00409200
.ZI20H                ANOP  ,                                           00409300
.*-------------------------------------------------------------------   00409400
.***AI.LVER02                                                           00409500
.ZI20Z                ANOP  ,                                           00409600
.*-------------------------------------------------------------------   00409700
.***AI.LVER01                                                           00409800
                      AIF  (&XPLISTVER LT 1).ZI21Z                      00409900
.*-------------------------------------------------------------------   00410000
.***AI.L19 ADDR XPARTALETTBL A                                          00410100
                      AIF   ('&ZXPARTALETTBL' EQ '').ZI21H              00410200
&ZCLNG                SETC  '&XPARTALETTBL'                             00410300
&ZCGPR                SETC  '14'                                        00410400
         AIF   ('&XPARTALETTBL'(1,1) EQ '(').ZI21F  IN GPR              00410500
.*                                                                      00410600
&ZOPN                 SETA  &ZOPN+1                                     00410700
&ZOPL(&ZOPN)          SETC  ' '                                         00410800
&ZOPO(&ZOPN)          SETC  'LA'                                        00410900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00411000
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTALETTBL XPARTALETTBL'            00411100
.*                                                                      00411200
                      AGO   .ZI21G                                      00411300
.*                                                                      00411400
.ZI21F                ANOP  ,                                           00411500
&ZCGPR   SETC  '&XPARTALETTBL'(2,K'&XPARTALETTBL-2)                     00411600
.*                                                                      00411700
.ZI21G                ANOP  ,                                           00411800
.*                                                                      00411900
&ZOPN                 SETA  &ZOPN+1                                     00412000
&ZOPL(&ZOPN)          SETC  ' '                                         00412100
&ZOPO(&ZOPN)          SETC  'ST'                                        00412200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,28(,1)'                             00412300
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTALETTBL XPARTALETTBL'            00412400
.*                                                                      00412500
.ZI21H                ANOP  ,                                           00412600
.*-------------------------------------------------------------------   00412700
.***AI.LVER02                                                           00412800
.ZI21Z                ANOP  ,                                           00412900
.*-------------------------------------------------------------------   00413000
.***AI.LVER01                                                           00413100
                      AIF  (&XPLISTVER LT 1).ZI22Z                      00413200
.*-------------------------------------------------------------------   00413300
.***AI.L19 ADDR XELEMENT A                                              00413400
                      AIF   ('&ZXELEMENT' EQ '').ZI22H                  00413500
&ZCLNG                SETC  '&XELEMENT'                                 00413600
&ZCGPR                SETC  '14'                                        00413700
         AIF   ('&XELEMENT'(1,1) EQ '(').ZI22F  IN GPR                  00413800
.*                                                                      00413900
&ZOPN                 SETA  &ZOPN+1                                     00414000
&ZOPL(&ZOPN)          SETC  ' '                                         00414100
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00414200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00414300
&ZOPD(&ZOPN)          SETC  '++ &ZXELEMENT XELEMENT'                    00414400
.*                                                                      00414500
                      AGO   .ZI22G                                      00414600
.*                                                                      00414700
.ZI22F                ANOP  ,                                           00414800
&ZCGPR   SETC  '&XELEMENT'(2,K'&XELEMENT-2)                             00414900
.*                                                                      00415000
.ZI22G                ANOP  ,                                           00415100
.*                                                                      00415200
&ZOPN                 SETA  &ZOPN+1                                     00415300
&ZOPL(&ZOPN)          SETC  ' '                                         00415400
&ZOPO(&ZOPN)          SETC  'ST'                                        00415500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,32(,1)'                             00415600
&ZOPD(&ZOPN)          SETC  '++ &ZXELEMENT XELEMENT'                    00415700
.*                                                                      00415800
.ZI22H                ANOP  ,                                           00415900
.*-------------------------------------------------------------------   00416000
.***AI.LVER02                                                           00416100
.ZI22Z                ANOP  ,                                           00416200
.*-------------------------------------------------------------------   00416300
.***AI.LVER01                                                           00416400
                      AIF  (&XPLISTVER LT 1).ZI23Z                      00416500
.*-------------------------------------------------------------------   00416600
.***AI.L23 ALET XELEMENT F                                              00416700
         AIF   ('&ZXELEMENT' EQ '').ZI23G                               00416800
         AIF   ('&SYSASCE' EQ 'P').ZI23G   SYSSTATE PRIMARY             00416900
&ZCLNG                SETC  '&XELEMENT'                                 00417000
         AIF   ('&XELEMENT'(1,1) EQ '(').ZI23E  IN AR                   00417100
.*                                                                      00417200
&ZCGPR                SETC  '14'                                        00417300
                      AGO   .ZI23F                                      00417400
.*                                                                      00417500
.ZI23E                ANOP  ,                                           00417600
&ZCGPR   SETC  '&XELEMENT'(2,K'&XELEMENT-2)                             00417700
.*                                                                      00417800
.ZI23F                ANOP  ,                                           00417900
.*                                                                      00418000
&ZOPN                 SETA  &ZOPN+1                                     00418100
&ZOPL(&ZOPN)          SETC  ' '                                         00418200
&ZOPO(&ZOPN)          SETC  'STAM'                                      00418300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,36(1)'                       00418400
&ZOPD(&ZOPN)          SETC  '++ &ZXELEMENT XELEMENT'                    00418500
.*                                                                      00418600
.ZI23G                ANOP  ,                                           00418700
.*-------------------------------------------------------------------   00418800
.***AI.LVER02                                                           00418900
.ZI23Z                ANOP  ,                                           00419000
.*-------------------------------------------------------------------   00419100
.***AI.LVER01                                                           00419200
                      AIF  (&XPLISTVER LT 1).ZI24Z                      00419300
.*-------------------------------------------------------------------   00419400
.***AI.L23 ALET XPARTLENTBL F                                           00419500
         AIF   ('&ZXPARTLENTBL' EQ '').ZI24G                            00419600
         AIF   ('&SYSASCE' EQ 'P').ZI24G   SYSSTATE PRIMARY             00419700
&ZCLNG                SETC  '&XPARTLENTBL'                              00419800
         AIF   ('&XPARTLENTBL'(1,1) EQ '(').ZI24E  IN AR                00419900
.*                                                                      00420000
&ZCGPR                SETC  '14'                                        00420100
&ZOPN                 SETA  &ZOPN+1                                     00420200
&ZOPL(&ZOPN)          SETC  ' '                                         00420300
&ZOPO(&ZOPN)          SETC  'LAE'                                       00420400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00420500
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTLENTBL XPARTLENTBL'              00420600
                      AGO   .ZI24F                                      00420700
.*                                                                      00420800
.ZI24E                ANOP  ,                                           00420900
&ZCGPR   SETC  '&XPARTLENTBL'(2,K'&XPARTLENTBL-2)                       00421000
.*                                                                      00421100
.ZI24F                ANOP  ,                                           00421200
.*                                                                      00421300
&ZOPN                 SETA  &ZOPN+1                                     00421400
&ZOPL(&ZOPN)          SETC  ' '                                         00421500
&ZOPO(&ZOPN)          SETC  'STAM'                                      00421600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,40(1)'                       00421700
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTLENTBL XPARTLENTBL'              00421800
.*                                                                      00421900
.ZI24G                ANOP  ,                                           00422000
.*-------------------------------------------------------------------   00422100
.***AI.LVER02                                                           00422200
.ZI24Z                ANOP  ,                                           00422300
.*-------------------------------------------------------------------   00422400
.***AI.LVER01                                                           00422500
                      AIF  (&XPLISTVER LT 1).ZI25Z                      00422600
.*-------------------------------------------------------------------   00422700
.***AI.L23 ALET XPARTALETTBL F                                          00422800
         AIF   ('&ZXPARTALETTBL' EQ '').ZI25G                           00422900
         AIF   ('&SYSASCE' EQ 'P').ZI25G   SYSSTATE PRIMARY             00423000
&ZCLNG                SETC  '&XPARTALETTBL'                             00423100
         AIF   ('&XPARTALETTBL'(1,1) EQ '(').ZI25E  IN AR               00423200
.*                                                                      00423300
&ZCGPR                SETC  '14'                                        00423400
&ZOPN                 SETA  &ZOPN+1                                     00423500
&ZOPL(&ZOPN)          SETC  ' '                                         00423600
&ZOPO(&ZOPN)          SETC  'LAE'                                       00423700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00423800
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTALETTBL XPARTALETTBL'            00423900
                      AGO   .ZI25F                                      00424000
.*                                                                      00424100
.ZI25E                ANOP  ,                                           00424200
&ZCGPR   SETC  '&XPARTALETTBL'(2,K'&XPARTALETTBL-2)                     00424300
.*                                                                      00424400
.ZI25F                ANOP  ,                                           00424500
.*                                                                      00424600
&ZOPN                 SETA  &ZOPN+1                                     00424700
&ZOPL(&ZOPN)          SETC  ' '                                         00424800
&ZOPO(&ZOPN)          SETC  'STAM'                                      00424900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,44(1)'                       00425000
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTALETTBL XPARTALETTBL'            00425100
.*                                                                      00425200
.ZI25G                ANOP  ,                                           00425300
.*-------------------------------------------------------------------   00425400
.***AI.LVER02                                                           00425500
.ZI25Z                ANOP  ,                                           00425600
.*-------------------------------------------------------------------   00425700
.***AI.LVER01                                                           00425800
                      AIF  (&XPLISTVER LT 1).ZI26Z                      00425900
.*-------------------------------------------------------------------   00426000
.***AI.L18  XPARTALET F                                                 00426100
         AIF   ('&XPARTALET' NE 'ZERO').ZI26                            00426200
&ZXPARTALET           SETC  ''             RESET INPUT/OUTPUT           00426300
.ZI26                 ANOP  ,                                           00426400
.*-------------------------------------------------------------------   00426500
.***AI.L25  XPARTALET F                                                 00426600
                      AIF   ('&ZXPARTALET' EQ '').ZI26E                 00426700
                      AIF   ('&ZXPARTALET' EQ 'OUTPUT').ZI26E           00426800
&ZCGPR                SETC  '&XPARTALET'                                00426900
.*                                                                      00427000
                      AIF   ('&XPARTALET'(1,1) NE '(').ZI26B            00427100
&ZCGPR   SETC  '0('.'&XPARTALET'(2,K'&XPARTALET-2).')'                  00427200
.ZI26B                ANOP  ,                                           00427300
.*                                                                      00427400
&ZC                   SETC  '&XPARTALET'(1,1)                           00427500
                      AIF   (T'&ZC NE 'N').ZI26D                        00427600
&ZC                   SETC  '&XPARTALET'                                00427700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI26D               00427800
&ZCGPR                SETC  '=AL4(&XPARTALET)'                          00427900
.*                                                                      00428000
.ZI26D                ANOP  ,                                           00428100
.*                                                                      00428200
&ZOPN                 SETA  &ZOPN+1                                     00428300
&ZOPL(&ZOPN)          SETC  ' '                                         00428400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00428500
&ZOPV(&ZOPN)          SETC  '48(4,1),&ZCGPR'                            00428600
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTALET XPARTALET'                  00428700
.*                                                                      00428800
.ZI26E                ANOP  ,                                           00428900
.*-------------------------------------------------------------------   00429000
.***AI.LVER02                                                           00429100
.ZI26Z                ANOP  ,                                           00429200
.*-------------------------------------------------------------------   00429300
.***AI.LVER01                                                           00429400
                      AIF  (&XPLISTVER LT 1).ZI27Z                      00429500
.*-------------------------------------------------------------------   00429600
.***AI.L25  XPARTALETOFF F                                              00429700
                      AIF   ('&ZXPARTALETOFF' EQ '').ZI27E              00429800
                      AIF   ('&ZXPARTALETOFF' EQ 'OUTPUT').ZI27E        00429900
&ZCGPR                SETC  '&XPARTALETOFF'                             00430000
.*                                                                      00430100
                      AIF   ('&XPARTALETOFF'(1,1) NE '(').ZI27B         00430200
&ZCGPR   SETC  '0('.'&XPARTALETOFF'(2,K'&XPARTALETOFF-2).')'            00430300
                      AGO   .ZI27D                                      00430400
.ZI27B                ANOP  ,                                           00430500
.*                                                                      00430600
&ZC                   SETC  '&XPARTALETOFF'(1,1)                        00430700
                      AIF   (T'&ZC NE 'N').ZI27D                        00430800
&ZC                   SETC  '&XPARTALETOFF'                             00430900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI27D               00431000
&ZCGPR                SETC  '=FL4''&XPARTALETOFF'''                     00431100
.*                                                                      00431200
.ZI27D                ANOP  ,                                           00431300
.*                                                                      00431400
&ZOPN                 SETA  &ZOPN+1                                     00431500
&ZOPL(&ZOPN)          SETC  ' '                                         00431600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00431700
&ZOPV(&ZOPN)          SETC  '52(4,1),&ZCGPR'                            00431800
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTALETOFF XPARTALETOFF'            00431900
.*                                                                      00432000
.ZI27E                ANOP  ,                                           00432100
.*-------------------------------------------------------------------   00432200
.***AI.LVER02                                                           00432300
.ZI27Z                ANOP  ,                                           00432400
.*-------------------------------------------------------------------   00432500
.***AI.LVER01                                                           00432600
                      AIF  (&XPLISTVER LT 1).ZI28Z                      00432700
.*-------------------------------------------------------------------   00432800
.***AI.L25  XPARTOFF F                                                  00432900
                      AIF   ('&ZXPARTOFF' EQ '').ZI28E                  00433000
                      AIF   ('&ZXPARTOFF' EQ 'OUTPUT').ZI28E            00433100
&ZCGPR                SETC  '&XPARTOFF'                                 00433200
.*                                                                      00433300
                      AIF   ('&XPARTOFF'(1,1) NE '(').ZI28B             00433400
&ZCGPR   SETC  '0('.'&XPARTOFF'(2,K'&XPARTOFF-2).')'                    00433500
                      AGO   .ZI28D                                      00433600
.ZI28B                ANOP  ,                                           00433700
.*                                                                      00433800
&ZC                   SETC  '&XPARTOFF'(1,1)                            00433900
                      AIF   (T'&ZC NE 'N').ZI28D                        00434000
&ZC                   SETC  '&XPARTOFF'                                 00434100
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI28D               00434200
&ZCGPR                SETC  '=FL4''&XPARTOFF'''                         00434300
.*                                                                      00434400
.ZI28D                ANOP  ,                                           00434500
.*                                                                      00434600
&ZOPN                 SETA  &ZOPN+1                                     00434700
&ZOPL(&ZOPN)          SETC  ' '                                         00434800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00434900
&ZOPV(&ZOPN)          SETC  '56(4,1),&ZCGPR'                            00435000
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTOFF XPARTOFF'                    00435100
.*                                                                      00435200
.ZI28E                ANOP  ,                                           00435300
.*-------------------------------------------------------------------   00435400
.***AI.LVER02                                                           00435500
.ZI28Z                ANOP  ,                                           00435600
.*-------------------------------------------------------------------   00435700
.***AI.LVER01                                                           00435800
                      AIF  (&XPLISTVER LT 1).ZI29Z                      00435900
.*-------------------------------------------------------------------   00436000
.***AI.L25  XPARTPTROFF F                                               00436100
                      AIF   ('&ZXPARTPTROFF' EQ '').ZI29E               00436200
                      AIF   ('&ZXPARTPTROFF' EQ 'OUTPUT').ZI29E         00436300
&ZCGPR                SETC  '&XPARTPTROFF'                              00436400
.*                                                                      00436500
                      AIF   ('&XPARTPTROFF'(1,1) NE '(').ZI29B          00436600
&ZCGPR   SETC  '0('.'&XPARTPTROFF'(2,K'&XPARTPTROFF-2).')'              00436700
                      AGO   .ZI29D                                      00436800
.ZI29B                ANOP  ,                                           00436900
.*                                                                      00437000
&ZC                   SETC  '&XPARTPTROFF'(1,1)                         00437100
                      AIF   (T'&ZC NE 'N').ZI29D                        00437200
&ZC                   SETC  '&XPARTPTROFF'                              00437300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI29D               00437400
&ZCGPR                SETC  '=FL4''&XPARTPTROFF'''                      00437500
.*                                                                      00437600
.ZI29D                ANOP  ,                                           00437700
.*                                                                      00437800
&ZOPN                 SETA  &ZOPN+1                                     00437900
&ZOPL(&ZOPN)          SETC  ' '                                         00438000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00438100
&ZOPV(&ZOPN)          SETC  '60(4,1),&ZCGPR'                            00438200
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTPTROFF XPARTPTROFF'              00438300
.*                                                                      00438400
.ZI29E                ANOP  ,                                           00438500
.*-------------------------------------------------------------------   00438600
.***AI.LVER02                                                           00438700
.ZI29Z                ANOP  ,                                           00438800
.*-------------------------------------------------------------------   00438900
.***AI.LVER01                                                           00439000
                      AIF  (&XPLISTVER LT 1).ZI30Z                      00439100
.*-------------------------------------------------------------------   00439200
.***AI.L25  XPARTLEN F                                                  00439300
                      AIF   ('&ZXPARTLEN' EQ '').ZI30E                  00439400
                      AIF   ('&ZXPARTLEN' EQ 'OUTPUT').ZI30E            00439500
&ZCGPR                SETC  '&XPARTLEN'                                 00439600
.*                                                                      00439700
                      AIF   ('&XPARTLEN'(1,1) NE '(').ZI30B             00439800
&ZCGPR   SETC  '0('.'&XPARTLEN'(2,K'&XPARTLEN-2).')'                    00439900
                      AGO   .ZI30D                                      00440000
.ZI30B                ANOP  ,                                           00440100
.*                                                                      00440200
&ZC                   SETC  '&XPARTLEN'(1,1)                            00440300
                      AIF   (T'&ZC NE 'N').ZI30D                        00440400
&ZC                   SETC  '&XPARTLEN'                                 00440500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI30D               00440600
&ZCGPR                SETC  '=AL4(&XPARTLEN)'                           00440700
.*                                                                      00440800
.ZI30D                ANOP  ,                                           00440900
.*                                                                      00441000
&ZOPN                 SETA  &ZOPN+1                                     00441100
&ZOPL(&ZOPN)          SETC  ' '                                         00441200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00441300
&ZOPV(&ZOPN)          SETC  '64(4,1),&ZCGPR'                            00441400
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTLEN XPARTLEN'                    00441500
.*                                                                      00441600
.ZI30E                ANOP  ,                                           00441700
.*-------------------------------------------------------------------   00441800
.***AI.LVER02                                                           00441900
.ZI30Z                ANOP  ,                                           00442000
.*-------------------------------------------------------------------   00442100
.***AI.LVER01                                                           00442200
                      AIF  (&XPLISTVER LT 1).ZI31Z                      00442300
.*-------------------------------------------------------------------   00442400
.***AI.L25  XPARTLENOFF F                                               00442500
                      AIF   ('&ZXPARTLENOFF' EQ '').ZI31E               00442600
                      AIF   ('&ZXPARTLENOFF' EQ 'OUTPUT').ZI31E         00442700
&ZCGPR                SETC  '&XPARTLENOFF'                              00442800
.*                                                                      00442900
                      AIF   ('&XPARTLENOFF'(1,1) NE '(').ZI31B          00443000
&ZCGPR   SETC  '0('.'&XPARTLENOFF'(2,K'&XPARTLENOFF-2).')'              00443100
                      AGO   .ZI31D                                      00443200
.ZI31B                ANOP  ,                                           00443300
.*                                                                      00443400
&ZC                   SETC  '&XPARTLENOFF'(1,1)                         00443500
                      AIF   (T'&ZC NE 'N').ZI31D                        00443600
&ZC                   SETC  '&XPARTLENOFF'                              00443700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI31D               00443800
&ZCGPR                SETC  '=FL4''&XPARTLENOFF'''                      00443900
.*                                                                      00444000
.ZI31D                ANOP  ,                                           00444100
.*                                                                      00444200
&ZOPN                 SETA  &ZOPN+1                                     00444300
&ZOPL(&ZOPN)          SETC  ' '                                         00444400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00444500
&ZOPV(&ZOPN)          SETC  '68(4,1),&ZCGPR'                            00444600
&ZOPD(&ZOPN)          SETC  '++ &ZXPARTLENOFF XPARTLENOFF'              00444700
.*                                                                      00444800
.ZI31E                ANOP  ,                                           00444900
.*-------------------------------------------------------------------   00445000
.***AI.LVER02                                                           00445100
.ZI31Z                ANOP  ,                                           00445200
.*-------------------------------------------------------------------   00445300
.***AI.LVER01                                                           00445400
                      AIF  (&XPLISTVER LT 1).ZI32Z                      00445500
.*-------------------------------------------------------------------   00445600
.***AI.L18  X#MSGPARTS F                                                00445700
         AIF   ('&X#MSGPARTS' NE 'AS_NEEDED').ZI32                      00445800
&ZX#MSGPARTS          SETC  ''             RESET INPUT/OUTPUT           00445900
.ZI32                 ANOP  ,                                           00446000
.*-------------------------------------------------------------------   00446100
.***AI.L25  X#MSGPARTS F                                                00446200
                      AIF   ('&ZX#MSGPARTS' EQ '').ZI32E                00446300
                      AIF   ('&ZX#MSGPARTS' EQ 'OUTPUT').ZI32E          00446400
&ZCGPR                SETC  '&X#MSGPARTS'                               00446500
.*                                                                      00446600
                      AIF   ('&X#MSGPARTS'(1,1) NE '(').ZI32B           00446700
&ZCGPR   SETC  '0('.'&X#MSGPARTS'(2,K'&X#MSGPARTS-2).')'                00446800
                      AGO   .ZI32D                                      00446900
.ZI32B                ANOP  ,                                           00447000
.*                                                                      00447100
&ZC                   SETC  '&X#MSGPARTS'(1,1)                          00447200
                      AIF   (T'&ZC NE 'N').ZI32D                        00447300
&ZC                   SETC  '&X#MSGPARTS'                               00447400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI32D               00447500
&ZCGPR                SETC  '=AL4(&X#MSGPARTS)'                         00447600
.*                                                                      00447700
.ZI32D                ANOP  ,                                           00447800
.*                                                                      00447900
&ZOPN                 SETA  &ZOPN+1                                     00448000
&ZOPL(&ZOPN)          SETC  ' '                                         00448100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00448200
&ZOPV(&ZOPN)          SETC  '72(4,1),&ZCGPR'                            00448300
&ZOPD(&ZOPN)          SETC  '++ &ZX#MSGPARTS X#MSGPARTS'                00448400
.*                                                                      00448500
.ZI32E                ANOP  ,                                           00448600
.*-------------------------------------------------------------------   00448700
.***AI.LVER02                                                           00448800
.ZI32Z                ANOP  ,                                           00448900
.*-------------------------------------------------------------------   00449000
.***AI.LVER01                                                           00449100
                      AIF  (&XPLISTVER LT 1).ZI33Z                      00449200
.*-------------------------------------------------------------------   00449300
.***AI.L25  XNEXTOFF F                                                  00449400
                      AIF   ('&ZXNEXTOFF' EQ '').ZI33E                  00449500
                      AIF   ('&ZXNEXTOFF' EQ 'OUTPUT').ZI33E            00449600
&ZCGPR                SETC  '&XNEXTOFF'                                 00449700
.*                                                                      00449800
                      AIF   ('&XNEXTOFF'(1,1) NE '(').ZI33B             00449900
&ZCGPR   SETC  '0('.'&XNEXTOFF'(2,K'&XNEXTOFF-2).')'                    00450000
                      AGO   .ZI33D                                      00450100
.ZI33B                ANOP  ,                                           00450200
.*                                                                      00450300
&ZC                   SETC  '&XNEXTOFF'(1,1)                            00450400
                      AIF   (T'&ZC NE 'N').ZI33D                        00450500
&ZC                   SETC  '&XNEXTOFF'                                 00450600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI33D               00450700
&ZCGPR                SETC  '=FL4''&XNEXTOFF'''                         00450800
.*                                                                      00450900
.ZI33D                ANOP  ,                                           00451000
.*                                                                      00451100
&ZOPN                 SETA  &ZOPN+1                                     00451200
&ZOPL(&ZOPN)          SETC  ' '                                         00451300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00451400
&ZOPV(&ZOPN)          SETC  '76(4,1),&ZCGPR'                            00451500
&ZOPD(&ZOPN)          SETC  '++ &ZXNEXTOFF XNEXTOFF'                    00451600
.*                                                                      00451700
.ZI33E                ANOP  ,                                           00451800
.*-------------------------------------------------------------------   00451900
.***AI.LVER02                                                           00452000
.ZI33Z                ANOP  ,                                           00452100
.*-------------------------------------------------------------------   00452200
.***AI.LVER01                                                           00452300
                      AIF  (&XPLISTVER LT 1).ZI34Z                      00452400
.*-------------------------------------------------------------------   00452500
.***AI.L25  XNEXTPTROFF F                                               00452600
                      AIF   ('&ZXNEXTPTROFF' EQ '').ZI34E               00452700
                      AIF   ('&ZXNEXTPTROFF' EQ 'OUTPUT').ZI34E         00452800
&ZCGPR                SETC  '&XNEXTPTROFF'                              00452900
.*                                                                      00453000
                      AIF   ('&XNEXTPTROFF'(1,1) NE '(').ZI34B          00453100
&ZCGPR   SETC  '0('.'&XNEXTPTROFF'(2,K'&XNEXTPTROFF-2).')'              00453200
                      AGO   .ZI34D                                      00453300
.ZI34B                ANOP  ,                                           00453400
.*                                                                      00453500
&ZC                   SETC  '&XNEXTPTROFF'(1,1)                         00453600
                      AIF   (T'&ZC NE 'N').ZI34D                        00453700
&ZC                   SETC  '&XNEXTPTROFF'                              00453800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI34D               00453900
&ZCGPR                SETC  '=FL4''&XNEXTPTROFF'''                      00454000
.*                                                                      00454100
.ZI34D                ANOP  ,                                           00454200
.*                                                                      00454300
&ZOPN                 SETA  &ZOPN+1                                     00454400
&ZOPL(&ZOPN)          SETC  ' '                                         00454500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00454600
&ZOPV(&ZOPN)          SETC  '80(4,1),&ZCGPR'                            00454700
&ZOPD(&ZOPN)          SETC  '++ &ZXNEXTPTROFF XNEXTPTROFF'              00454800
.*                                                                      00454900
.ZI34E                ANOP  ,                                           00455000
.*-------------------------------------------------------------------   00455100
.***AI.LVER02                                                           00455200
.ZI34Z                ANOP  ,                                           00455300
.*-------------------------------------------------------------------   00455400
.***AI.LVER01                                                           00455500
                      AIF  (&XPLISTVER LT 1).ZI35Z                      00455600
.*-------------------------------------------------------------------   00455700
.***AI.L18  XENDOFQUEUE AL4                                             00455800
         AIF   ('&XENDOFQUEUE' NE 'ZERO').ZI35                          00455900
&ZXENDOFQUEUE         SETC  ''             RESET INPUT/OUTPUT           00456000
.ZI35                 ANOP  ,                                           00456100
.*-------------------------------------------------------------------   00456200
.***AI.L25  XENDOFQUEUE AL4                                             00456300
                      AIF   ('&ZXENDOFQUEUE' EQ '').ZI35E               00456400
                      AIF   ('&ZXENDOFQUEUE' EQ 'OUTPUT').ZI35E         00456500
&ZCGPR                SETC  '&XENDOFQUEUE'                              00456600
.*                                                                      00456700
                      AIF   ('&XENDOFQUEUE'(1,1) NE '(').ZI35B          00456800
&ZCGPR   SETC  '0('.'&XENDOFQUEUE'(2,K'&XENDOFQUEUE-2).')'              00456900
                      AGO   .ZI35D                                      00457000
.ZI35B                ANOP  ,                                           00457100
.*                                                                      00457200
&ZC                   SETC  '&XENDOFQUEUE'(1,1)                         00457300
                      AIF   (T'&ZC NE 'N').ZI35D                        00457400
&ZC                   SETC  '&XENDOFQUEUE'                              00457500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI35D               00457600
&ZCGPR                SETC  '=AL4(&XENDOFQUEUE)'                        00457700
.*                                                                      00457800
.ZI35D                ANOP  ,                                           00457900
.*                                                                      00458000
&ZOPN                 SETA  &ZOPN+1                                     00458100
&ZOPL(&ZOPN)          SETC  ' '                                         00458200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00458300
&ZOPV(&ZOPN)          SETC  '84(4,1),&ZCGPR'                            00458400
&ZOPD(&ZOPN)          SETC  '++ &ZXENDOFQUEUE XENDOFQUEUE'              00458500
.*                                                                      00458600
.ZI35E                ANOP  ,                                           00458700
.*-------------------------------------------------------------------   00458800
.***AI.LVER02                                                           00458900
.ZI35Z                ANOP  ,                                           00459000
.*-------------------------------------------------------------------   00459100
.***AI.LVER01                                                           00459200
                      AIF  (&XPLISTVER LT 2).ZI36Z                      00459300
.*-------------------------------------------------------------------   00459400
.***AI.L25  XTOKEN CL16                                                 00459500
                      AIF   ('&ZXTOKEN' EQ '').ZI36E                    00459600
                      AIF   ('&ZXTOKEN' EQ 'OUTPUT').ZI36E              00459700
&ZCGPR                SETC  '&XTOKEN'                                   00459800
.*                                                                      00459900
                      AIF   ('&XTOKEN'(1,1) NE '(').ZI36B               00460000
&ZCGPR   SETC  '0('.'&XTOKEN'(2,K'&XTOKEN-2).')'                        00460100
.ZI36B                ANOP  ,                                           00460200
.*                                                                      00460300
&ZOPN                 SETA  &ZOPN+1                                     00460400
&ZOPL(&ZOPN)          SETC  ' '                                         00460500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00460600
&ZOPV(&ZOPN)          SETC  '88(16,1),&ZCGPR'                           00460700
&ZOPD(&ZOPN)          SETC  '++ &ZXTOKEN XTOKEN'                        00460800
.*                                                                      00460900
.ZI36E                ANOP  ,                                           00461000
.*-------------------------------------------------------------------   00461100
.***AI.LVER02                                                           00461200
.ZI36Z                ANOP  ,                                           00461300
.*-------------------------------------------------------------------   00461400
.***AI.LVER01                                                           00461500
                      AIF  (&XPLISTVER LT 3).ZI37Z                      00461600
.*-------------------------------------------------------------------   00461700
.***AI.LVER02                                                           00461800
.ZI37Z                ANOP  ,                                           00461900
.*-------------------------------------------------------------------   00462000
&ZOPN1                SETA &ZOPN                                        00462100
.*******************************************************************    00462200
.***  PROCESS IXCMSGI OUTPUT PARAMETERS                                 00462300
.*******************************************************************    00462400
                      ACTR  10000                                       00462500
.*******************************************************************    00462600
.***AO.X02  RETURN CODE PROCESSING                                      00462700
.*******************************************************************    00462800
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00462900
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00463000
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00463100
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00463200
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00463300
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00463400
&ZOPN                 SETA  &ZOPN+1                                     00463500
&ZOPL(&ZOPN)          SETC  ' '                                         00463600
&ZOPO(&ZOPN)          SETC  'ST'                                        00463700
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00463800
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00463900
                      AGO   .ZMRETX                                     00464000
.*                                                                      00464100
.ZMRET2               ANOP  ,                                           00464200
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00464300
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00464400
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00464500
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00464600
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00464700
&ZOPN                 SETA  &ZOPN+1                                     00464800
&ZOPL(&ZOPN)          SETC  ' '                                         00464900
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00465000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00465100
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00465200
.ZMRETX               ANOP  ,                                           00465300
.*******************************************************************    00465400
.***AO.X03  REASON CODE PROCESSING                                      00465500
.*******************************************************************    00465600
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00465700
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00465800
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00465900
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00466000
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00466100
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00466200
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00466300
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00466400
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00466500
&ZOPN                 SETA  &ZOPN+1                                     00466600
&ZOPL(&ZOPN)          SETC  ' '                                         00466700
&ZOPO(&ZOPN)          SETC  'ST'                                        00466800
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00466900
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00467000
                      AGO   .ZMRSNX                                     00467100
.*                                                                      00467200
.ZMRSN2               ANOP  ,                                           00467300
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00467400
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00467500
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00467600
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00467700
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00467800
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00467900
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00468000
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00468100
&ZOPN                 SETA  &ZOPN+1                                     00468200
&ZOPL(&ZOPN)          SETC  ' '                                         00468300
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00468400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00468500
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00468600
.ZMRSNX               ANOP  ,                                           00468700
.*******************************************************************    00468800
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00468900
.*******************************************************************    00469000
.ZMFLX                ANOP  ,              MF=L PROCESSING              00469100
.*******************************************************************    00469200
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00469300
.*******************************************************************    00469400
                      ACTR  10000                                       00469500
.*                                                                      00469600
                      LCLA  &ZLC           COLUMN POSITION              00469700
                      LCLA  &ZOPX          LIST TABLE INDEX             00469800
                      LCLC  &ZLL           LABEL                        00469900
                      LCLC  &ZLOP          OPERATION                    00470000
                      LCLC  &ZLV           VALUE                        00470100
                      LCLC  &ZLD           DESCRIPTION                  00470200
.*                                                                      00470300
&ZOPX                 SETA  1                                           00470400
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00470500
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00470600
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00470700
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00470800
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00470900
                      AIF   (K'&ZLD LE 0).ZL5                           00471000
&ZLC                  SETA  35             COMMENT COLUMN               00471100
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00471200
&ZLC                  SETA  33             COMMMENT COLUMN              00471300
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00471400
&ZLV                  SETC  '&ZLV'.' '                                  00471500
                      AGO   .ZL3                                        00471600
.*                                                                      00471700
.ZL4                  ANOP  ,                                           00471800
&ZLV                  SETC  '&ZLV'.' '                                  00471900
.ZL5                  ANOP  ,                                           00472000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00472100
.*                                                                      00472200
&ZLL     &ZLOP &ZLV                                                     00472300
.*                                                                      00472400
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00472500
                      AGO   .ZL2           CONTINUE LOOPING             00472600
.*                                                                      00472700
.ZLX                  ANOP  ,                                           00472800
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00472900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00473000
         L     14,16(0,0)              GET CVT ADDRESS                  00473100
         L     14,772(14,0)            GET SFT ADDRESS                  00473200
         L     14,220(14,0)            GET LX FOR SERVICE ROUTINE       00473300
         LA    15,1                    GET EX FOR SERVICE ROUTINE       00473400
         OR    14,15                   GET PC NUMBER                    00473500
         PC    0(14)                                                    00473600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00473700
.ZLINKX               ANOP  ,                                           00473800
.*******************************************************************    00473900
.***AP.X01  FORMAT GENERATED CODE                                       00474000
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00474100
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00474200
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00474300
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00474400
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00474500
                      AIF   (K'&ZLD LE 0).ZL51                          00474600
&ZLC                  SETA  35             COMMENT COLUMN               00474700
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00474800
&ZLC                  SETA  33             COMMENT COLUMN               00474900
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00475000
&ZLV                  SETC  '&ZLV'.' '                                  00475100
                      AGO   .ZL31                                       00475200
.*                                                                      00475300
.ZL41                 ANOP  ,                                           00475400
&ZLV                  SETC  '&ZLV'.' '                                  00475500
.ZL51                 ANOP  ,                                           00475600
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00475700
.*                                                                      00475800
&ZLL     &ZLOP &ZLV                                                     00475900
.*                                                                      00476000
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00476100
                      AGO   .ZL21          CONTINUE LOOPING             00476200
.*                                                                      00476300
.ZLX1                 ANOP  ,                                           00476400
.*******************************************************************    00476500
.***AP.X02  END OF IXCMSGI MACRO                                        00476600
&ZIXCMSGI             SETC  'YES'          SET IXCMSGI USED             00476700
         POP   PRINT                                                    00476800
*                                            IXCMSGI-3                  00476900
         SPACE 1                                                        00477000
.ZLX2                 ANOP  ,                                           00477100
         MEND                                                           00477200
**********************************************************************/ 00477300
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00477400
*%IXCMSGI: MACRO KEYS(TOKEN,MSGTOKEN,MULTIPART,MSGBUF,#MSGPARTS,        00477500
*                 ELEMENT,ELEMFORM,NEXTOFF,NEXTPTROFF,ENDOFQUEUE,       00477600
*                 PARTOFF,PARTPTROFF,PARTALET,PARTALETOFF,PARTALETTBL,  00477700
*                 PARTLEN,PARTLENOFF,PARTLENTBL,MSGSTGKEY,LINKAGE,      00477800
*                 XCFDATA,RETCODE,RSNCODE,PLISTVER,MF);                 00477900
*  ANS('?'!!MACLABEL!!' '!!'IXCMSGIP '!!MACLIST!!                       00478000
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00478100
*%END IXCMSGI;                                                          00478200
