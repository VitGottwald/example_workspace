*                                                                       00001000
* %DCL IFAWICCB_INCLUDED CHAR EXT;                                      00002000
* %DEACTIVATE IFAWICCB_INCLUDED;                                        00003000
* %IF IFAWICCB_INCLUDED = '' %THEN                                      00004000
* %DO;                                                                  00005000
*/* Macro made bi-lingual on 20083. CBGEN compile date 20027         */ 00006000
*% /*                                                                   00007000
         MACRO                                                          00008000
         IFAWICCB &DSECT=YES,&LIST=YES,&TITLE=YES,&WicParm=YES,        *00009000
               &Wic_Warning_Rsn=COND,&WicEnfQual=COND,&WicEnf=COND,    *00010000
               &WicNB_ParmList=COND,&WicCB_ParmList=COND,              *00011000
               &WicWR_ParmList=COND,&WicWR_AggBucketParmList=COND,     *00012000
               &WicWR_AggBucket=COND,&WicWR_ExcBucket=COND              00013000
                      GBLC  &IFAWICCB_INCLUDED                          00014000
                      GBLC  &ZCBPRINT                                   00015000
&IFAWICCB_INCLUDED    SETC  'YES'                                       00016000
                      AIF   ('&LIST' EQ 'NONE').P0                      00017000
                      AIF   ('&TITLE' EQ 'NO').P5                       00018000
 TITLE                'IFAWICCB  - SMF Workload Intraction Correlator (*00019000
               WIC)        '                                            00020000
.P5                   ANOP                                              00021000
**/ IFAWICCB_1:;                                                        00022000
*/* START OF SPECIFICATIONS ******************************************* 00023000
*                                                                       00024000
*01* MACRO NAME:  IFAWICCB                                              00025000
*                                                                       00026000
*01* DESCRIPTIVE NAME: SMF Workload Intraction Correlator (WIC)         00027000
*                      constants and exploiter exit control blocks      00028000
*02*  ACRONYM:  n/a                                                     00029000
*                                                                       00030000
*01* PROPRIETARY STATEMENT=                                           * 00031000
***PROPRIETARY_STATEMENT*********************************************** 00032000
*                                                                     * 00033000
*                                                                     * 00034000
*   LICENSED MATERIALS - PROPERTY OF IBM                              * 00035000
*   5650-ZOS COPYRIGHT IBM CORP. 2019                                 * 00036000
*                                                                     * 00037000
*   STATUS= HBB77B0                                                   * 00038000
*                                                                     * 00039000
***END_OF_PROPRIETARY_STATEMENT**************************************** 00040000
*                                                                       00041000
*01* EXTERNAL CLASSIFICATION: PI                                        00042000
*                                                                       00043000
*01*  END OF EXTERNAL CLASSIFICATION:                                   00044000
*                                                                       00045000
*01* DSECT NAME:                                                        00046000
*     WICPARM                                                           00047000
*                                                                       00048000
*01* COMPONENT:  System Management Facilities (SC100)                   00049000
*                                                                       00050000
*01* EYE-CATCHER:  None                                                 00051000
*01* STORAGE ATTRIBUTES:                                                00052000
*02*  SUBPOOL:    245                                                   00053000
*02*  KEY:        0                                                     00054000
*02*  RESIDENCY:  ESQA                                                  00055000
*                                                                       00056000
*01* SIZE:  Size of some DSECTs may vary from release to release.       00057000
*            WicWR_AggBucketParmList -- X'0018' bytes                   00058000
*            WicWR_AggBucket         -- X'0002' bytes                   00059000
*            WicWR_ExcBucket         -- X'000A' bytes                   00060000
*            Wic_Warning_Rsn         -- X'0004' bytes                   00061000
*            WicEnf                  -- X'0010' bytes                   00062000
*            WicEnfQual              -- X'0004' bytes                   00063000
*            WicNB_ParmList          -- X'0030' bytes                   00064000
*            WicCB_ParmList          -- X'0014' bytes                   00065000
*            WicWR_ParmList          -- X'0068' bytes                   00066000
*            WicParm                 -- X'0030' bytes                   00067000
*                                                                       00068000
*01* CREATED BY:                                                        00069000
*     SMF (IFAHFTSK)                                                    00070000
*                                                                       00071000
*01* POINTED TO BY:                                                     00072000
*     R1 passed to WIC exploiter exits                                  00073000
*                                                                       00074000
*01* SERIALIZATION: None.                                               00075000
*                                                                       00076000
*01* FUNCTION:                                                          00077000
*02* This macro defines data structures for the SMF WIC                 00078000
*    exploiter exit, parameters and constants for the WIC exit          00079000
*    services, and constants for the IFAWIC service.                    00080000
*                                                                       00081000
*01* METHOD OF ACCESS:                                                  00082000
*                                                                       00083000
*02*  PL/X:                                                             00084000
*      %INCLUDE SYSLIB(IFAWICCB)                                        00085000
*                                                                       00086000
*02*  ASM:                                                              00087000
*      IFAWICCB                                                         00088000
*    LIST=YES!NONE                   -- Request HisSmpParm mapping      00089000
*    TITLE=YES!NO                    -- Request Title                   00090000
*    DSECT=YES!NO                    -- Request DSECT definition        00091000
*    WicParm=YES!NO!COND             -- WicParm mapping                 00092000
*                                                                       00093000
*     Default: DSECT=YES,LIST=YES,TITLE=YES,WicParm=YES                 00094000
*     Notes: name=YES  => expand                                        00095000
*            name=NO   => do not expand                                 00096000
*            name=COND => expand only if DSECT=YES                      00097000
*                                                                       00098000
*01* DELETED BY:                                                        00099000
*    For WICPARM - deleted by IFAHFTSK (SMF)                            00100000
*    For WIC exit services parameters - deleted by caller               00101000
*                                                                       00102000
*01* FREQUENCY:  as needed                                              00103000
*                                                                       00104000
*01* DEPENDENCIES:                                                      00105000
*        None                                                           00106000
*                                                                       00107000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     00108000
*                                                                       00109000
*01* NOTES:                                                             00110000
*        None                                                           00111000
*                                                                       00112000
*01* CHANGE ACTIVITY:                                                   00113000
*                                                                       00114000
* $00=OA57165 HBB77B0 200106 PDNJ: IFAWIC                               00115000
*                                                                       00116000
* END OF SPECIFICATIONS *********************************************/  00117000
*% /*                                                                   00118000
.P0                   ANOP                                              00119000
                      AIF   ('&ZCBPRINT' EQ 'NO').P1                    00120000
                      AIF   ('&LIST' EQ 'YES').P2                       00121000
.P1                   ANOP                                              00122000
                      PUSH  PRINT                                       00123000
                      PRINT OFF                                         00124000
.P2                   ANOP                                              00125000
                      AIF   ('&WicParm' EQ 'NO').L0002                  00126000
                      AIF   ('&DSECT' EQ 'YES').L0003                   00127000
                      AIF   ('&WicParm' NE 'YES').L0002                 00128000
.L0003                ANOP                                              00129000
*                                                                       00130000
*   ******************************************************************  00131000
*                                                                       00132000
*    WIC exploiter exit routine parameters:                             00133000
*     The address of WicParm is in Reg(1) when the exit routine         00134000
*      gets control.                                                    00135000
*                                                                       00136000
*   ******************************************************************  00137000
*                                                                       00138000
*                                                                       00139000
                      AIF   ('&DSECT' EQ 'YES').L0004                   00140000
WicParm               DS    0D                                          00141000
                      AGO   .L0005                                      00142000
.L0004                ANOP                                              00143000
WicParm               DSECT                                             00144000
.L0005                ANOP                                              00145000
WicParm_Version       DS    H      Version of WicParm                   00146000
WicParm_Length        DS    H      Length of WicParm                    00147000
WicParm_Subtype       DS    H      Subtype number                       00148000
WicParm_Request       DS    H      Request for the WIC exploiter exit. *00149000
                                   If called with an unrecognized      *00150000
                                   request number, the exit routine    *00151000
                                   should return without any           *00152000
                                   processing.                          00153000
WicParm_DynAreaPtr    DS    AD     Dynamic area for WIC exploiter      *00154000
                                   exit. Must be accessed in amode 64   00155000
WicParm_DynAreaLen    DS    F      Length of storage pointed to by     *00156000
                                   WicParm_DynAreaPtr. At least 1M in  *00157000
                                   size.                                00158000
                      DS    CL4    Reserved for alignment               00159000
*                                                                       00160000
*   *************************************************************       00161000
*                                                                       00162000
*    Address of WIC exit services                                       00163000
*                                                                       00164000
*    Use these addresses to perform "common" WIC exit services.         00165000
*                                                                       00166000
*    AMODE: 64-bit                                                      00167000
*                                                                       00168000
*    ASC Mode: Primary                                                  00169000
*                                                                       00170000
*    Input Registers:  GR0        Irrelevant                            00171000
*                      GR1        Address of the parameter list         00172000
*                                 as shown below                        00173000
*                      GR2-GR12   Irrelevant                            00174000
*                      GR13       Address of 144 byte save area         00175000
*                      GR14       Return address                        00176000
*                      GR15       Irrelevant                            00177000
*                                                                       00178000
*    Input Parameter List: Either WicNB_Parmlist,                       00179000
*                          WicCB_Parmlist, or WicWR_Parmlist.           00180000
*                          Pointed to by GR1, each WIC exit             00181000
*                          service has three parameters as              00182000
*                          shown.                                       00183000
*                                                                       00184000
*                                                                       00185000
*     +------------------------------------------------------+          00186000
*     ! Doubleword 1 Address of WIC exit service parameter              00187000
*     ! list (see Wic*_ParmList for the given WIC exit                  00188000
*     ! service)                                                        00189000
*     +------------------------------------------------------+          00190000
*     ! Doubleword 2 Address of Return Code                             00191000
*     +------------------------------------------------------+          00192000
*     ! Doubleword 3 Address of Reason Code                             00193000
*     +------------------------------------------------------+          00194000
*                                                                       00195000
*                                                                       00196000
*    Output Registers: GR0        Used by WIC exit services             00197000
*                      GR1-GR14   Unchanged                             00198000
*                      GR15       Used by WIC exit services             00199000
*                                                                       00200000
*    Recovery Operation: Provided by the caller                         00201000
*                                                                       00202000
*   *************************************************************       00203000
*                                                                       00204000
*                                                                       00205000
WicParm_WICSrv_GetNextBufferPtr DS AD Address of the get next buffer   *00206000
                                   WIC exit service IFAWGetNextBuffer   00207000
WicParm_WICSrv_ClearBufferPtr DS AD Address of the clear buffer WIC    *00208000
                                   exit service IFAWClearBuffer         00209000
WicParm_WICSrv_WriteSMF98Ptr DS AD Address of the build and write      *00210000
                                   SMF98.x record WIC exit service     *00211000
                                   IFAWBuildAndWriteSMF98               00212000
WicParm_ReqPrime      EQU   1      Request for the WIC exploiter exit  *00213000
                                   to prime. Prepare for writing a     *00214000
                                   record on the next HFTSINTVL by     *00215000
                                   clearing the WIC instrumentation    *00216000
                                   buffer data. Do not produce a       *00217000
                                   record this interval.                00218000
WicParm_ReqWriteRecord EQU  2      Request for the WIC exploiter exit  *00219000
                                   to write an SMF 98 record for it's  *00220000
                                   subtype.                             00221000
WicParm_kVersionFirst EQU   1                                           00222000
WicParm_kVersionCurrent EQU 1                                           00223000
*                                                                       00224000
*   ******************************************************************  00225000
*                                                                       00226000
*    Miscellaneous constants                                            00227000
*                                                                       00228000
*   ******************************************************************  00229000
*                                                                       00230000
*                                                                       00231000
Wic_Rsn_CodeMask      EQU   X'0000FFFF' Mask to locate the             *00232000
                                   non-diagnostic portion of the       *00233000
                                   reason code                          00234000
Wic_kMax4kPages       EQU   16     Max allowed value for BUFFER4KPAGES  00235000
Wic_kDynamicAreaLength EQU  8192   Size of common dynamic storage (SP  *00236000
                                   245) allocated for the use of WIC   *00237000
                                   trend exploiter exit routines. This *00238000
                                   area is pointed to by R0 on entry   *00239000
                                   to the WIC exploiter exit            00240000
Wic_kFirstTestSubtype EQU   8192   First test subtype number            00241000
Wic_kLastTestSubtype  EQU   8199   Last test subtype number             00242000
*                                                                       00243000
*   IFAWIC Return and Reason Code definitions                           00244000
*                                                                       00245000
*                                                                       00246000
IFAWIC_Rc_Success     EQU   X'00000000' Meaning: IFAWIC request        *00247000
                                   successful. For REQUEST=REGISTER a  *00248000
                                   BufferPtr has been provided to the  *00249000
                                   current primary address. If an      *00250000
                                   ExitVersion has been specified, and *00251000
                                   this is the first REQUEST=REGISTER  *00252000
                                   on the system for the input         *00253000
                                   subtype, or the input ExitVersion   *00254000
                                   is larger than the current          *00255000
                                   ExitVersion the input subtype, the   00256000
*                                  ExitRoutine has been registered,    *00257000
                                   and the system will switch to       *00258000
                                   calling the new exit routine at the *00259000
                                   next WIC interval. The system       *00260000
                                   issues ENF 85 signals to inform     *00261000
                                   IFAWIC callers to start or stop     *00262000
                                   writing instrumentation data to     *00263000
                                   their instrumentation buffer. See   *00264000
                                   macro IFAWICCB for additional       *00265000
                                   information. For REQUEST=DEREGISTER  00266000
*                                  the buffer is made unavailable to   *00267000
                                   the current primary address. By     *00268000
                                   invoking REQUEST=DEREGISTER, the    *00269000
                                   program certifies that the          *00270000
                                   exploiter has stopped instrumenting *00271000
                                   into its buffer. The program does   *00272000
                                   not have to certify its WIC exit is *00273000
                                   not accessing the buffer. Once      *00274000
                                   REQUEST=DEREGISTER is invoked, the  *00275000
                                   system is responsible for            00276000
*                                  preventing the WIC exit from        *00277000
                                   accessing the the buffer If there   *00278000
                                   are no more address spaces          *00279000
                                   registered for the input subtype,   *00280000
                                   the system will stop calling the    *00281000
                                   exit routine. Action: For           *00282000
                                   REQUEST=REGISTER, the program       *00283000
                                   should begin instrumenting. For     *00284000
                                   REQUEST=DEREGISTER, none.            00285000
IFAWIC_Rc_Warning     EQU   X'00000004' Meaning: IFAWIC request        *00286000
                                   completed with a warning. The high  *00287000
                                   half word of the reason code may    *00288000
                                   contain indications of other        *00289000
                                   warnings that have occurred besides *00290000
                                   the reason code portion in the      *00291000
                                   lower half. See Wic_Warning_Rsn in  *00292000
                                   IFAWICCB for a mapping of this      *00293000
                                   area. For REQUEST=REGISTER, a       *00294000
                                   BufferPtr has been provided to the   00295000
*                                  current primary address. If an      *00296000
                                   ExitVersion has been specified, and *00297000
                                   this is the first REQUEST=REGISTER  *00298000
                                   on the system for the input         *00299000
                                   subtype, or the input ExitVersion   *00300000
                                   is larger than the current          *00301000
                                   ExitVersion the input subtype, the  *00302000
                                   ExitRoutine has been registered,    *00303000
                                   and the system will switch to       *00304000
                                   calling the new exit routine at the  00305000
*                                  next WIC interval. For              *00306000
                                   REQUEST=DEREGISTER, the buffer is   *00307000
                                   made unavailable to the current     *00308000
                                   primary address. If there are no    *00309000
                                   more address spaces registered for  *00310000
                                   the input subtype, the system will  *00311000
                                   will stop calling the exit routine. *00312000
                                   Action: Refer to the action         *00313000
                                   provided with the specific reason   *00314000
                                   code. For REQUEST=REGISTER, the      00315000
*                                  program should check the high half  *00316000
                                   of the reason code for any          *00317000
                                   conditions indicating the WIC       *00318000
                                   services are not fully available by *00319000
                                   testing for any bits being on in    *00320000
                                   the first byte using the IFAWICCB   *00321000
                                   field                               *00322000
                                   Wic_NotFullyAvail_LowHighMask. When *00323000
                                   no bits in the first byte of the    *00324000
                                   reason code are on, the program      00325000
*                                  should start writing                *00326000
                                   instrumentation data to the         *00327000
                                   instrumentation buffer because the  *00328000
                                   program's WIC exit will be called   *00329000
                                   at the next WIC interval. When any  *00330000
                                   bit in the first byte of the reason *00331000
                                   code is on, the program should not  *00332000
                                   start writing instrumentation data  *00333000
                                   to the instrumentation buffer       *00334000
                                   because the WIC exit will not be     00335000
*                                  called at the next WIC interval The *00336000
                                   system issues ENF 85 signals to     *00337000
                                   inform IFAWIC callers to start or   *00338000
                                   stop writing instrumentation data   *00339000
                                   to their instrumentation buffer.    *00340000
                                   See macro IFAWICCB for additional   *00341000
                                   information. For                    *00342000
                                   REQUEST=DEREGISTER, none.            00343000
IFAWIC_Rsn_Buffer4kPagesSmaller EQU X'00000401'                         00344000
*                                                                       00345000
*                                      Meaning: A smaller               00346000
*                                      Buffer4kPages value was          00347000
*                                      requested than the value         00348000
*                                      specified on a previous          00349000
*                                      REQUEST=REGISTER for the same    00350000
*                                      subtype. The system reserves     00351000
*                                      the requested buffer size for    00352000
*                                      this address space. Action: It   00353000
*                                      is desirable for the             00354000
*                                      Buffer4kPages to be the same     00355000
*                                      for all register requests for    00356000
*                                      the input subtype, however,      00357000
*                                      the system will allow the        00358000
*                                      value to change. When            00359000
*                                      specifying different             00360000
*                                      Buffer4kPages values, it is up   00361000
*                                      to the caller to remember how    00362000
*                                      much data in each address        00363000
*                                      space WIC instrumentation        00364000
*                                      buffer is available for the      00365000
*                                      WIC exit routine to use. Also,   00366000
*                                      keep in mind when aggregating    00367000
*                                      data that new data fields may    00368000
*                                      not be available for             00369000
*                                      aggregation from older program   00370000
*                                      versions. Record data in the     00371000
*                                      WIC instrumentation buffer to    00372000
*                                      identify to the WIC              00373000
*                                      ExitRoutine what data it         00374000
*                                      should access and what fields    00375000
*                                      it can aggregate.                00376000
*                                                                       00377000
IFAWIC_Rsn_Buffer4kPagesLarger EQU X'00000402' Meaning: A larger       *00378000
                                   Buffer4kPages value was requested   *00379000
                                   than the value specified on a       *00380000
                                   previous REQUEST=REGISTER for the   *00381000
                                   same subtype. The system reserves   *00382000
                                   the requested buffer size for this  *00383000
                                   address space. Action: It is        *00384000
                                   desirable for the Buffer4kPages to  *00385000
                                   be the same for all register        *00386000
                                   requests for the input subtype,      00387000
*                                  however, the system will allow the  *00388000
                                   value to change. When specifying    *00389000
                                   different Buffer4kPages values, it  *00390000
                                   is up to the caller to remember how *00391000
                                   much data in each address space WIC *00392000
                                   instrumentation buffer is available *00393000
                                   for the WIC exit routine to use.    *00394000
                                   Also, keep in mind when aggregating *00395000
                                   data that new data fields may not   *00396000
                                   be available for aggregation from    00397000
*                                  older program versions. Record data *00398000
                                   in the WIC instrumentation buffer   *00399000
                                   to identify to the WIC ExitRoutine  *00400000
                                   what data it should access and what *00401000
                                   fields it can aggregate.             00402000
IFAWIC_Rsn_AlreadyRegistered EQU X'00000403' Meaning: A                *00403000
                                   REQUEST=REGISTER was requested from *00404000
                                   an address space for a subtype that *00405000
                                   was already registered. Action:     *00406000
                                   none needed.                         00407000
IFAWIC_Rsn_NotRegistered EQU X'00000404' Meaning: A REQUEST=DEREGISTER *00408000
                                   was requested from an address space *00409000
                                   for a subtype that was not          *00410000
                                   currently registered. Action: none  *00411000
                                   needed.                              00412000
IFAWIC_Rsn_ExitVersionIgnored EQU X'00000405' Meaning: A               *00413000
                                   REQUEST=REGISTER specified an       *00414000
                                   ExitVersion that was less than the  *00415000
                                   current ExitVersion. The            *00416000
                                   ExitVersion and ExitRoutine         *00417000
                                   parameters are ignored and the      *00418000
                                   system continues using the current  *00419000
                                   highest versioned exit routine.     *00420000
                                   Action: none needed.                 00421000
IFAWIC_Rsn_WicFeatureNotEnabled EQU X'00000481'                         00422000
*                                                                       00423000
*                                      Meaning: The WorkloadIntCorr     00424000
*                                      feature was not enabled to       00425000
*                                      product registry. Action: Wait   00426000
*                                      for ENF 85 signal and verify     00427000
*                                      the WicEnf bit WicEnf_Instrume   00428000
*                                      ntationRequested is on before    00429000
*                                      writing to the instrumentation   00430000
*                                      buffer.                          00431000
*                                                                       00432000
IFAWIC_Rsn_SubtypeNotCollected EQU X'00000482' Meaning: SMF has not    *00433000
                                   been configured to collect the      *00434000
                                   input SMF 98 subtype record.        *00435000
                                   Action: Wait for ENF85 signal and   *00436000
                                   verify the WicEnf bit WicE          *00437000
                                   nf_InstrumentationRequested is on   *00438000
                                   before writing to the               *00439000
                                   instrumentation buffer.              00440000
IFAWIC_Rc_UserError   EQU   X'00000008' Meaning: The IFAWIC request    *00441000
                                   specified parameters that are not   *00442000
                                   valid or the request is issued in   *00443000
                                   an user-controllable environment    *00444000
                                   that is not valid. The IFAWIC       *00445000
                                   service did not complete            *00446000
                                   successfully. For REQUEST=REGISTER, *00447000
                                   no WIC instrumentation buffer was   *00448000
                                   provided to the caller. Action:     *00449000
                                   Refer to the action provided with    00450000
*                                  the specific reason code.            00451000
IFAWIC_Rsn_ParmListAlet EQU X'00000801' Meaning: Unable to use ALET of *00452000
                                   the IFAWIC parameter list. Action:  *00453000
                                   Provide a valid ALET for the        *00454000
                                   parameter list. The access register *00455000
                                   might not have been set up          *00456000
                                   correctly.                           00457000
IFAWIC_Rsn_BadVersion EQU   X'00000802' Meaning: The provided PLISTVER *00458000
                                   is not valid. This suggests the     *00459000
                                   parameter list used to call IFAWIC  *00460000
                                   was overlaid, or was not generated  *00461000
                                   by the IFAWIC macro. Action: Check  *00462000
                                   for possible storage overlay of the *00463000
                                   parameter list. Use the IFAWIC      *00464000
                                   service to produce the parameter    *00465000
                                   list.                                00466000
IFAWIC_Rsn_ReservedNot0 EQU X'00000803' Meaning: The parameter list    *00467000
                                   contains non-0 input in reserved    *00468000
                                   fields. This suggests the parameter *00469000
                                   list used to call IFAWIC was        *00470000
                                   overlaid, or was not generated by   *00471000
                                   the IFAWIC macro. Action: Check for *00472000
                                   possible storage overlay of the     *00473000
                                   parameter list. Use the IFAWIC      *00474000
                                   service to produce the parameter    *00475000
                                   list.                                00476000
IFAWIC_Rsn_BadRequestType EQU X'00000804' Meaning: The request type is *00477000
                                   not valid. This suggests the        *00478000
                                   parameter list used to call IFAWIC  *00479000
                                   was overlaid, or was not generated  *00480000
                                   by the IFAWIC macro. Action: Check  *00481000
                                   for possible storage overlay of the *00482000
                                   parameter list. Use the IFAWIC      *00483000
                                   service to produce the parameter    *00484000
                                   list.                                00485000
IFAWIC_Rsn_BadBufferKey EQU X'00000805' Meaning: The buffer key type   *00486000
                                   is not valid. This suggests the     *00487000
                                   parameter list used to call IFAWIC  *00488000
                                   was overlaid, or was not generated  *00489000
                                   by the IFAWIC macro. Action: Check  *00490000
                                   for possible storage overlay of the *00491000
                                   parameter list. Use the IFAWIC      *00492000
                                   service to produce the parameter    *00493000
                                   list.                                00494000
IFAWIC_Rsn_ParmListFetch EQU X'00000807' Meaning: An error was         *00495000
                                   encountered when fetching the       *00496000
                                   supplied parameter list. Action:    *00497000
                                   Call IFAWIC with a parameter list   *00498000
                                   properly addressable.                00499000
IFAWIC_Rsn_ParmListWrite EQU X'00000808' Meaning: An error was         *00500000
                                   encountered when writing to the     *00501000
                                   supplied parameter list. Action:    *00502000
                                   Call IFAWIC with a parameter list   *00503000
                                   properly addressable and able to be *00504000
                                   written to.                          00505000
IFAWIC_Rsn_NotEnabled EQU   X'00000810' Meaning: The IFAWIC caller was *00506000
                                   not enabled. Action: Call IFAWIC    *00507000
                                   only when enabled.                   00508000
IFAWIC_Rsn_Locked     EQU   X'00000811' Meaning: The IFAWIC caller was *00509000
                                   locked. Action: Call IFAWIC without *00510000
                                   holding locks.                       00511000
IFAWIC_Rsn_HomeNotPrimary EQU X'00000812' Meaning: The IFAWIC caller's *00512000
                                   primary home space was not equal to *00513000
                                   the caller's primary address space. *00514000
                                   Action: Call IFAWIC when home       *00515000
                                   equals primary address space.        00516000
IFAWIC_Rsn_CallerFRR  EQU   X'00000813' Meaning: The task mode IFAWIC  *00517000
                                   REQUEST=REGISTER caller had FRR     *00518000
                                   recovery established. Action: Call  *00519000
                                   IFAWIC in task mode without FRRs    *00520000
                                   established.                         00521000
IFAWIC_Rsn_NotAuthorized EQU X'00000814' Meaning: The IFAWIC caller is *00522000
                                   not authorized. Action: Call IFAWIC *00523000
                                   only when authorized.                00524000
IFAWIC_Rsn_SubtypeInput EQU X'00000820' Meaning: The provided SUBTYPE  *00525000
                                   is not supported. Action: Supply    *00526000
                                   the IBM provided program subtype.    00527000
IFAWIC_Rsn_ExitVersionZero EQU X'00000821' Meaning: The ExitVersion    *00528000
                                   input must not be 0. Action:        *00529000
                                   Specify an ExitVersion that is not  *00530000
                                   0.                                   00531000
IFAWIC_Rsn_Buffer4kPagesZero EQU X'00000822' Meaning: The              *00532000
                                   Buffer4kPages must not be 0.        *00533000
                                   Action: Specify Buffer4kPages that  *00534000
                                   is not 0.                            00535000
IFAWIC_Rsn_Buffer4kPagesTooLarge EQU X'00000823'                        00536000
*                                                                       00537000
*                                      Meaning: The Buffer4kPages       00538000
*                                      input must be less than or       00539000
*                                      equal to 16. Action: Specify     00540000
*                                      Buffer4kPages as less than or    00541000
*                                      equal to 16.                     00542000
*                                                                       00543000
IFAWIC_Rsn_BufferKeyMismatch EQU X'00000824' Meaning: A previous       *00544000
                                   REQUEST=REGISTER requested and      *00545000
                                   received a buffer for a BUFFERKEY   *00546000
                                   value that was different that the   *00547000
                                   BUFFERKEY specified on this         *00548000
                                   request. Action: Update the program *00549000
                                   to request the same BUFFERKEY for   *00550000
                                   each call to IFAWIC, even across    *00551000
                                   different program versions.          00552000
IFAWIC_Rsn_SRBMode    EQU   X'00000825' Meaning: IFAWIC was issued in  *00553000
                                   SRB mode Action: Do not issue       *00554000
                                   IFAWIC in SRB mode                   00555000
IFAWIC_Rsn_SameVerExitRoutineMismatch EQU X'00000830' Meaning: A       *00556000
                                   ExitRoutine and ExitVersion was     *00557000
                                   specified such that the ExitVersion *00558000
                                   is the same as a previous           *00559000
                                   specification, however, the         *00560000
                                   ExitRoutine is different. Action:   *00561000
                                   Specify the same ExitRoutine to     *00562000
                                   correspond with the same            *00563000
                                   ExitVersion. If the program         *00564000
                                   introduces a new exit routine, the   00565000
*                                  ExitVersion must be incremented.     00566000
IFAWIC_Rsn_ExitRtnNotFound EQU X'00000831' Meaning: The exit routine   *00567000
                                   could not be found. Action: Ensure  *00568000
                                   the exit routine is located in      *00569000
                                   either the invoking program's       *00570000
                                   joblib, steplib, tasklib, in the    *00571000
                                   system's LNKLST concatenation or in *00572000
                                   LPA.                                 00573000
IFAWIC_Rsn_ExitRtnNotInAPFLib EQU X'00000832' Meaning: IFAWIC was      *00574000
                                   unable to load the provided exit    *00575000
                                   routine because did not reside in   *00576000
                                   an APF authorized library. The      *00577000
                                   "xxxx" portion of the reason code   *00578000
                                   contains an informational code as   *00579000
                                   documented with ABEND 306 reasons.  *00580000
                                   No abend was generated. Action:     *00581000
                                   Refer to "MVS System Codes",        *00582000
                                   sections "System completion codes",  00583000
*                                  "306", with the "xxxx" portion of   *00584000
                                   the reason code to see what action  *00585000
                                   is needed to resolve the condition. *00586000
                                   Ensure the exit routine resides in  *00587000
                                   an APF authorized library and is    *00588000
                                   re-entrant.                          00589000
IFAWIC_Rsn_ExitRtnAmode24 EQU X'00000833' Meaning: The ExitRoutine     *00590000
                                   must not be in AMODE 24. Action:    *00591000
                                   Provide an exit routine with an     *00592000
                                   AMODE of 31 or 64.                   00593000
IFAWIC_Rsn_ExitRtnNotReEntrant EQU X'00000834' Meaning: The            *00594000
                                   ExitRoutine must be re-entrant.     *00595000
                                   Action: Provide an exit routine     *00596000
                                   that is linked as re-entrant.        00597000
IFAWIC_Rsn_ExitRtnNameNotUnique EQU X'00000835'                         00598000
*                                                                       00599000
*                                      Meaning: Another subtype is      00600000
*                                      using the same exit routine      00601000
*                                      name. The exit routine name      00602000
*                                      must be unique per subtype.      00603000
*                                      Action: Provide a unique exit    00604000
*                                      routine name.                    00605000
*                                                                       00606000
IFAWIC_Rc_EnvError    EQU   X'0000000C' Meaning: Environmental error   *00607000
                                   The IFAWIC service did not complete *00608000
                                   successfully. For REQUEST=REGISTER, *00609000
                                   no WIC instrumentation buffer was   *00610000
                                   provided to the caller. Action:     *00611000
                                   Refer to the action provided with   *00612000
                                   the specific reason code.            00613000
IFAWIC_Rsn_SystemNotReady EQU X'00000C01' Meaning: IFAWIC was issued   *00614000
                                   before the system is ready to start *00615000
                                   processing requests. Action: Wait   *00616000
                                   for the system to be ready to       *00617000
                                   accept IFAWIC requests and re-issue *00618000
                                   the IFAWIC request.                  00619000
IFAWIC_Rsn_UnsupportedMachine EQU X'00000C02' Meaning: IFAWIC was      *00620000
                                   issued from an unsupported machine. *00621000
                                   WIC requires an IBM z14 or later    *00622000
                                   hardware. Action: Issue IFAWIC on a *00623000
                                   supported machine.                   00624000
IFAWIC_Rsn_EnvNoExit  EQU   X'00000C03' Meaning: IFAWIC                *00625000
                                   REQUEST=REGISTER requests omitting  *00626000
                                   ExitVersion and ExitRoutine,        *00627000
                                   require a WIC exit routine to have  *00628000
                                   been already established by a       *00629000
                                   previous IFAWIC REQUEST=REGISTER    *00630000
                                   call specifying the ExitVersion and *00631000
                                   ExitRoutine parameters. Action:     *00632000
                                   Specify ExitVersion and ExitRoutine *00633000
                                   or ensure an IFAWIC                  00634000
*                                  REQUEST=REGISTER call has already   *00635000
                                   completed specifying ExitVersion    *00636000
                                   and ExitRoutine before issuing      *00637000
                                   IFAWIC REQUEST=REGISTER.             00638000
IFAWIC_Rsn_SMFNOWICSpecified EQU X'00000C04' Meaning: SMF parameters   *00639000
                                   specified NOWIC which prevents      *00640000
                                   programs from issuing IFAWIC        *00641000
                                   REQUEST=REGISTER. Action: Accept    *00642000
                                   that WIC services will be           *00643000
                                   unavailable for the program, or     *00644000
                                   choose to handle WIC registration   *00645000
                                   dynamically. If the program can     *00646000
                                   support dynamic WIC registration,   *00647000
                                   wait for ENF 85 signal and check     00648000
*                                  the WicEnf bit                      *00649000
                                   WicEnf_RegisterIsAvailable. When    *00650000
                                   WicEnf_RegisterIsAvailable is on,   *00651000
                                   The ENF listener exit can cause a   *00652000
                                   task to wake up to re-issue IFAWIC  *00653000
                                   REQUEST=REGISTER for the program.   *00654000
                                   The system issues ENF 85 signals to *00655000
                                   inform IFAWIC callers that IFAWIC   *00656000
                                   Register is available when SMF      *00657000
                                   parameter WIC is specified. See      00658000
*                                  macro IFAWICCB for additional       *00659000
                                   information.                         00660000
IFAWIC_Rsn_ExitRtnNoStorage EQU X'00000C10' Meaning: There was not     *00661000
                                   sufficient storage for IFAWIC to    *00662000
                                   process the exit routine. Action:   *00663000
                                   Contact your system programmer.     *00664000
                                   there is a shortage of common       *00665000
                                   storage.                             00666000
IFAWIC_Rsn_UnexpectedLoadError EQU X'00000C11' Meaning: IFAWIC         *00667000
                                   encountered errors trying to load   *00668000
                                   the provided exit routine. The      *00669000
                                   "xxxx" portion of the reason code   *00670000
                                   contains a code from the load       *00671000
                                   service of what would have been the *00672000
                                   ABEND code. No abend was generated. *00673000
                                   Action: Alert the system            *00674000
                                   programmer. Refer to                *00675000
                                   "MVS System Codes", sections         00676000
*                                  "System completion codes", with the *00677000
                                   "xxxx" portion as the abend code to *00678000
                                   see what action is needed to        *00679000
                                   resolve the condition. This may be  *00680000
                                   accomonied with system log messages *00681000
                                   with the CSV prefix.                 00682000
IFAWIC_Rc_CompError   EQU   X'00000010' Meaning: Unexpected failure.   *00683000
                                   Action: Refer to the action         *00684000
                                   provided with the specific reason   *00685000
                                   code.                                00686000
IFAWIC_Rsn_CompError  EQU   X'00001001' Meaning: Unexpected failure.   *00687000
                                   The state of the request is         *00688000
                                   unpredictable. Action: Contact your *00689000
                                   system programer to report the      *00690000
                                   problem to IBM service               00691000
WicParm_Len           EQU   *-WicParm                                   00692000
.L0002                ANOP                                              00693000
                      AIF   ('&Wic_Warning_Rsn' EQ 'NO').L0006          00694000
                      AIF   ('&DSECT' EQ 'YES').L0007                   00695000
                      AIF   ('&Wic_Warning_Rsn' NE 'YES').L0006         00696000
.L0007                ANOP                                              00697000
*                                                                       00698000
*   End of IFAWIC Return and Reason Code definitions                    00699000
*   ******************************************************************  00700000
*                                                                       00701000
*    IFAWIC Warning map. The high 2 bytes of the reason code            00702000
*     for the IFAWIC service when the return code is                    00703000
*     IFAWIC_Rc_Warning is mapped as such.                              00704000
*                                                                       00705000
*   ******************************************************************  00706000
*                                                                       00707000
*                                                                       00708000
                      AIF   ('&DSECT' EQ 'YES').L0008                   00709000
Wic_Warning_Rsn       DS    0F                                          00710000
                      AGO   .L0009                                      00711000
.L0008                ANOP                                              00712000
Wic_Warning_Rsn       DSECT                                             00713000
.L0009                ANOP                                              00714000
Wic_Warning_Flags     DS    BL2                                         00715000
                      ORG   Wic_Warning_Flags                           00716000
Wic_Warning_FlagsRegister DS BL2                                        00717000
                      ORG   Wic_Warning_FlagsRegister                   00718000
Wic_Warning_WicNotFullyAvail DS B  Flags indicating the WIC service is *00719000
                                   not fully available for processing. *00720000
                                   For IFAWIC REQUEST=REGISTER, when   *00721000
                                   the return code is                  *00722000
                                   IFAWIC_Rc_Warning and bits 0-7 of   *00723000
                                   the reason code contain any bit on, *00724000
                                   the WIC services are not fully      *00725000
                                   available. The program should not   *00726000
                                   write instrumentation data to its   *00727000
                                   instrumentation buffer because the   00728000
*                                  program's WIC exit routine is not   *00729000
                                   likely to be called.                 00730000
*  Bit definitions:                                                     00731000
Wic_Warning_WicFeatureNotEnabled EQU X'80' The WorkloadIntCorr product *00732000
                                   is not part of the product          *00733000
                                   enablement policy, see              *00734000
                                   IFAWIC_Rsn_WicFeat ureNotEnabled     00735000
Wic_Warning_SubtypeNotCollected EQU X'40' SMF parameters did not       *00736000
                                   specify WIC, see                    *00737000
                                   IFAWIC_Rsn_SubtypeNotCollected       00738000
Wic_Warning_FlagsRegisterGeneral DS B General flags for register       *00739000
                                   requests                             00740000
*  Bit definitions:                                                     00741000
Wic_Warning_AlreadyRegistered EQU X'80' See                            *00742000
                                   IFAWIC_Rsn_AlreadyRegistered         00743000
Wic_Warning_Buffer4kPagesDifferent EQU X'40' A buffer 4k Pages larger  *00744000
                                   or smaller than a previous register *00745000
                                   was detected, see IFA               *00746000
                                   WIC_Rsn_Buffer4kPagesSmaller or     *00747000
                                   IFAWIC_Rsn_Buffer4kPagesLarger       00748000
Wic_Warning_ExitVersionIgnored EQU X'20' Exit version was less than    *00749000
                                   current, see                        *00750000
                                   IFAWIC_Rsn_ExitVersionIgnored        00751000
                      ORG   Wic_Warning_Flags                           00752000
Wic_Warning_FlagsDeRegister DS BL2                                      00753000
                      ORG   Wic_Warning_FlagsDeRegister                 00754000
Wic_Warning_FlagsDeRegisterByte1 DS B                                   00755000
                      ORG   Wic_Warning_FlagsDeRegisterByte1            00756000
                      DS    B      Reserved for future use              00757000
Wic_Warning_FlagsDeRegisterGeneral DS B                                 00758000
*  Bit definitions:                                                     00759000
Wic_Warning_NotRegistered EQU X'80' See IFAWIC_Rsn_NotRegistered        00760000
                      ORG   Wic_Warning_Flags+2                         00761000
Wic_Warning_Code      DS    H                                           00762000
Wic_NotFullyAvail_LowHighmask EQU X'FF00' For IFAWIC REQUEST=REGISTER, *00763000
                                   when the return code is             *00764000
                                   IFAWIC_Rc_Warning and bits 0-7 of   *00765000
                                   the reason code contain any bit on, *00766000
                                   the WIC services are not fully      *00767000
                                   available. The program should not   *00768000
                                   write instrumentation data to its   *00769000
                                   instrumentation buffer because the  *00770000
                                   program's WIC exit routine is not   *00771000
                                   likely to be called. Assembler       00772000
*                                  programs can use                    *00773000
                                   'TMLH 0,Wic_NotFullyAvail_LowH      *00774000
                                   ighMask' to check for this          *00775000
                                   condition when the return code is   *00776000
                                   IFAWIC_Rc_Warning                    00777000
Wic_Warning_Rsn_Len   EQU   *-Wic_Warning_Rsn                           00778000
.L0006                ANOP                                              00779000
                      AIF   ('&WicEnfQual' EQ 'NO').L000A               00780000
                      AIF   ('&DSECT' EQ 'YES').L000B                   00781000
                      AIF   ('&WicEnfQual' NE 'YES').L000A              00782000
.L000B                ANOP                                              00783000
*                                                                       00784000
*   ******************************************************************  00785000
*    WIC ENF Qual Parameter map:                                        00786000
*     The mapping of how to set the QUAL parameter for ENFREQ when      00787000
*     setting a listener exit for ENF signal 85.                        00788000
*                                                                       00789000
*    On ENFREQ requests, Programs should set the QUAL parameter with    00790000
*     the low halfword as the program's subtype number and use a        00791000
*     QMASK=(BYTE3,BYTE4).  This will allow the program to get all      00792000
*     signals for their subtype.                                        00793000
*   ******************************************************************  00794000
*                                                                       00795000
*                                                                       00796000
                      AIF   ('&DSECT' EQ 'YES').L000C                   00797000
WicEnfQual            DS    0F                                          00798000
                      AGO   .L000D                                      00799000
.L000C                ANOP                                              00800000
WicEnfQual            DSECT                                             00801000
.L000D                ANOP                                              00802000
WicEnfQual_Code       DS    X      Code for ENF85 request               00803000
                      DS    CL1    reserved for future use              00804000
WicEnfQual_Subtype    DS    H      Subtype number                       00805000
*                                                                       00806000
*   ******************************************************************  00807000
*    WIC ENF Qual Codes                                                 00808000
*   ******************************************************************  00809000
*                                                                       00810000
*                                                                       00811000
WicEnf_Code_InstrumentationChange EQU 1 This ENF is issued when SMF    *00812000
                                   requests a change in                *00813000
                                   instrumentation status for the WIC  *00814000
                                   exploiter. The listener should      *00815000
                                   check the WicENF parameter list     *00816000
                                   field WicEnf_In                     *00817000
                                   strumentationRequested to verify if *00818000
                                   the program should start or stop    *00819000
                                   instrumenting. This condition       *00820000
                                   occurs when SMF noticed a system     00821000
*                                  change that indicates that affects  *00822000
                                   whether the WIC exit routine will   *00823000
                                   or will not be called.               00824000
WicEnf_Code_RegisterAvailable EQU 2 This ENF was issued when the SMF   *00825000
                                   WIC parameter was specified and     *00826000
                                   IFAWIC REQUEST=REGISTER may         *00827000
                                   succeed. Check WicEnf parameter     *00828000
                                   list field                          *00829000
                                   WicEnf_RegisterIsAvailable to       *00830000
                                   verify the most current status. If  *00831000
                                   possible, alert a task to issue     *00832000
                                   IFAWIC REQUEST=REGISTER to begin    *00833000
                                   using WIC services.                  00834000
WicEnfQual_Len        EQU   *-WicEnfQual                                00835000
.L000A                ANOP                                              00836000
                      AIF   ('&WicEnf' EQ 'NO').L000E                   00837000
                      AIF   ('&DSECT' EQ 'YES').L000F                   00838000
                      AIF   ('&WicEnf' NE 'YES').L000E                  00839000
.L000F                ANOP                                              00840000
*                                                                       00841000
*   ******************************************************************  00842000
*    WIC ENF listener exit parameters:                                  00843000
*     The address of WicENF is in the first word of the 6 word          00844000
*      parameter list passed to each enf listener exit in register 1.   00845000
*   ******************************************************************  00846000
*                                                                       00847000
*                                                                       00848000
                      AIF   ('&DSECT' EQ 'YES').L0010                   00849000
WicEnf                DS    0D                                          00850000
                      AGO   .L0011                                      00851000
.L0010                ANOP                                              00852000
WicEnf                DSECT                                             00853000
.L0011                ANOP                                              00854000
WicEnf_Eye            DS    CL8    'WICENF '                            00855000
WicEnf_Version        DS    H      Version of WicEnf                    00856000
WicEnf_Subtype        DS    H      Subtype number                       00857000
WicEnf_Flags          DS    B      Status Flags                         00858000
*  Bit definitions:                                                     00859000
WicEnf_InstrumentationRequested EQU X'80' When on, instrumentation is  *00860000
                                   requested for this subtype. When    *00861000
                                   off, instrumentation is not         *00862000
                                   requested for this subtype.          00863000
WicEnf_RegisterIsAvailable EQU X'40' When on, SMF parameter WIC is     *00864000
                                   specified and IFAWIC                *00865000
                                   REQUEST=REGISTER is available to be *00866000
                                   re-tried. When off, SMF parameter   *00867000
                                   NOWIC is specified and IFAWIC       *00868000
                                   REQUEST= REGISTER is likely to fail *00869000
                                   with return code IFAWIC_Rc_EnvError *00870000
                                   reason code                         *00871000
                                   IFAWIC_Rsn_SMFNOWICSpecified         00872000
WicEnf_ExitAddError   EQU   X'20'  When on, SMF encountered an error   *00873000
                                   adding the exit for the subtype.    *00874000
                                   This is likely becase an exit of    *00875000
                                   the same name was added to WIC      *00876000
                                   processing for another subtype.     *00877000
                                   Specify unique names for exit       *00878000
                                   routines for each subtype. When     *00879000
                                   this bit is on,                     *00880000
                                   WicEnf_InstrumentationRequeste d is *00881000
                                   off                                  00882000
                      DS    CL3    Reserved for future use              00883000
WicEnf_EyeConst_0TO3  EQU   C'WICE' This is the first 4-byte segment   *00884000
                                   of an 8-byte constant. Eye catcher  *00885000
                                   for WicEnf                           00886000
WicEnf_EyeConst_4TO7  EQU   C'NF  ' This is the second 4-byte segment  *00887000
                                   of an 8-byte constant. Eye catcher  *00888000
                                   for WicEnf                           00889000
WicEnf_VerConst       EQU   1      Current version for WicEnf           00890000
WicEnf_Ver1Const      EQU   1      Version 1 constant                   00891000
WicEnf_Len            EQU   *-WicEnf                                    00892000
.L000E                ANOP                                              00893000
                      AIF   ('&WicNB_ParmList' EQ 'NO').L0012           00894000
                      AIF   ('&DSECT' EQ 'YES').L0013                   00895000
                      AIF   ('&WicNB_ParmList' NE 'YES').L0012          00896000
.L0013                ANOP                                              00897000
*                                                                       00898000
* ********************************************************************  00899000
* * Parameter lists for WIC Exit Services                            *  00900000
* *                                                                  *  00901000
* * Note: Unused and/or reserved areas within the WIC exit servies   *  00902000
* *       parameter list must be initialized to binary zeros.        *  00903000
* ********************************************************************  00904000
* * ******************************************************************  00905000
*    ASM users can access the WIC Exit Services using the CALL macro    00906000
*                                                                       00907000
*    For example:                                                       00908000
*           LG 15,WicParm_WICSrv_GetNextBufferPtr                       00909000
*           CALL (15),(WicNBParms,WicSrvRet,WicSrvRsn),MF=(E,PLAREA)    00910000
*    ...                                                                00911000
*    WicNBParms DS CL(L'WicNB_ParmList)                                 00912000
*    WicSrvRet DS F                                                     00913000
*    WicSrvRsn DS F                                                     00914000
*    PLAREA DS 3D                                                       00915000
*    ...                                                                00916000
*                                                                       00917000
*   ******************************************************************  00918000
* ********************************************************************  00919000
* * Parameter list for the GetNextBuffer service                     *  00920000
* *                                                                  *  00921000
* * Note: Unused and/or reserved areas within the WIC exit services  *  00922000
* *       parameter list must be initialized to binary zeros.        *  00923000
* ********************************************************************  00924000
*                                                                       00925000
*                                                                       00926000
                      AIF   ('&DSECT' EQ 'YES').L0014                   00927000
WicNB_ParmList        DS    0D     Parameter list for the              *00928000
                                   GetNextBuffer Service                00929000
                      AGO   .L0015                                      00930000
.L0014                ANOP                                              00931000
WicNB_ParmList        DSECT        Parameter list for the              *00932000
                                   GetNextBuffer Service                00933000
.L0015                ANOP                                              00934000
WicNB_Version         DS    H      Version identification               00935000
WicNB_inoutAsid       DS    H      Address space ID. Caller must       *00936000
                                   initialize this to zero for the     *00937000
                                   initial invocation of the           *00938000
                                   GetNextBuffer service. When the     *00939000
                                   GetNextBUffer service completes     *00940000
                                   with a return code of               *00941000
                                   WicSrv_Rc_Success this will contain *00942000
                                   the address space id for the WIC    *00943000
                                   buffer returned in                  *00944000
                                   WicNB_outBuffer@. For subsequent     00945000
*                                  invocations of the GetNextBuffer    *00946000
                                   service the caller should not       *00947000
                                   change the content of               *00948000
                                   WicNB_inoutAsid in order to obtain  *00949000
                                   the next WIC buffer. When there are *00950000
                                   no remaining buffers, the service   *00951000
                                   completes with an appropriate       *00952000
                                   return and reason code.              00953000
wicNB_Reserved1       DS    CL20   Reserved                             00954000
WicNB_OutArea         DS    CL24   Output area                          00955000
                      ORG   WicNB_OutArea                               00956000
WicNB_ASInfo          DS    CL16   Address information                  00957000
                      ORG   WicNB_ASInfo                                00958000
WicNB_outJobname      DS    CL8    Jobname for Address Space Id        *00959000
                                   (WicNB_inoutAsid)                    00960000
WicNB_outJobPriorityArea DS CL8    Job priority area                    00961000
                      ORG   WicNB_outJobPriorityArea                    00962000
WicNB_outJobPriorityBucket DS H    Priority bucket - describes         *00963000
                                   relative priority of the address    *00964000
                                   space. When: 1 -                    *00965000
                                   SVT_kHiPriorityBucketIndex 2 -      *00966000
                                   SVT_kMedPriorityBucketIndex 3 -     *00967000
                                   SVT_kLowPriorityBucketIndex 4 -     *00968000
                                   SVT_kDiscPriorityBucketIndex See    *00969000
                                   IHASVT for description of the above *00970000
                                   constants                            00971000
WicNB_outJobSizeBucket DS   H      Sub buckets for each of the         *00972000
                                   priority buckets for the address    *00973000
                                   space.                               00974000
                      ORG   WicNB_ASInfo+16                             00975000
WicNB_outBufferAddr   DS    AD     Starting address of the WIC buffer  *00976000
                                   for this ASID (WicNB_inoutASID)      00977000
*                                                                       00978000
* ********************************************************************  00979000
* * Constants for GetNextBuffer Service                              *  00980000
* ********************************************************************  00981000
*                                                                       00982000
*                                                                       00983000
WicNB_#Ver            EQU   1      Current version                      00984000
WicNB_#MaxVer         EQU   1                                           00985000
WicNB_#Ver1           EQU   1                                           00986000
Wic_kProcClassIndex_CP EQU  0      Local constant for CP proc class    *00987000
                                   index to avoid having to include    *00988000
                                   IHAPSA                               00989000
Wic_kProcClassIndex_zIIP EQU 2     Local constant for zIIP proc class  *00990000
                                   index to avoid having to include    *00991000
                                   IHAPSA                               00992000
WicNB_ParmList_Len    EQU   *-WicNB_ParmList                            00993000
.L0012                ANOP                                              00994000
                      AIF   ('&WicCB_ParmList' EQ 'NO').L0016           00995000
                      AIF   ('&DSECT' EQ 'YES').L0017                   00996000
                      AIF   ('&WicCB_ParmList' NE 'YES').L0016          00997000
.L0017                ANOP                                              00998000
*                                                                       00999000
* ********************************************************************  01000000
* * Parameter list for the Clear Buffer service                      *  01001000
* *                                                                  *  01002000
* * Note: Unused and/or reserved areas within the WIC exit services  *  01003000
* *       parameter list must be initialized to binary zeros.        *  01004000
* ********************************************************************  01005000
*                                                                       01006000
*                                                                       01007000
                      AIF   ('&DSECT' EQ 'YES').L0018                   01008000
WicCB_ParmList        DS    0D     Input parameter list for the Clear  *01009000
                                   Buffer Service                       01010000
                      AGO   .L0019                                      01011000
.L0018                ANOP                                              01012000
WicCB_ParmList        DSECT        Input parameter list for the Clear  *01013000
                                   Buffer Service                       01014000
.L0019                ANOP                                              01015000
WicCB_Version         DS    H      Version identification               01016000
WicCB_inAsid          DS    H      Address space id                     01017000
WicCB_Reserved1       DS    CL4    Reserved for alignment               01018000
WicCB_inStartAddrBufToClear DS AD  Address within the WIC buffer to    *01019000
                                   clear for the subtype and the given *01020000
                                   address space id (WicCB_inAsid).    *01021000
                                   The WIC buffer address is obtained  *01022000
                                   by calling the get next buffer      *01023000
                                   service                              01024000
WicCB_inBufLenToClear DS    F      Length of the WIC buffer to be      *01025000
                                   cleared from the starting WIC       *01026000
                                   buffer address as specified by      *01027000
                                   WicCB_inStartAddrBufToClear          01028000
*                                                                       01029000
* ********************************************************************  01030000
* * Constants for ClearBuffer Service                                *  01031000
* ********************************************************************  01032000
*                                                                       01033000
*                                                                       01034000
WicCB_#Ver            EQU   1      Current version                      01035000
WicCB_#MaxVer         EQU   1                                           01036000
WicCB_#Ver1           EQU   1                                           01037000
WicCB_ParmList_Len    EQU   *-WicCB_ParmList                            01038000
.L0016                ANOP                                              01039000
                      AIF   ('&WicWR_ParmList' EQ 'NO').L001A           01040000
                      AIF   ('&DSECT' EQ 'YES').L001B                   01041000
                      AIF   ('&WicWR_ParmList' NE 'YES').L001A          01042000
.L001B                ANOP                                              01043000
*                                                                       01044000
* ********************************************************************  01045000
* * Parameter list for the Build and Write SMF 98.x Record Service   *  01046000
* *                                                                  *  01047000
* * Note: Unused and/or reserved areas within the WIC exit services  *  01048000
* *       parameter list must be initialized to binary zeros.        *  01049000
* ********************************************************************  01050000
*                                                                       01051000
*                                                                       01052000
                      AIF   ('&DSECT' EQ 'YES').L001C                   01053000
WicWR_ParmList        DS    0D     Input parameter list for the Write  *01054000
                                   SMF 98.x build and write service     01055000
                      AGO   .L001D                                      01056000
.L001C                ANOP                                              01057000
WicWR_ParmList        DSECT        Input parameter list for the Write  *01058000
                                   SMF 98.x build and write service     01059000
.L001D                ANOP                                              01060000
WicWR_Version         DS    H      Parameter list version               01061000
WicWR_Rsvd02          DS    CL6    Reserved for alignment               01062000
*                                                                       01063000
*      ***************************************************************  01064000
*      *                                                             *  01065000
*      * SMF 98 Record subtype information parameter list All SMF 98 *  01066000
*      * subtype records (SMF 98.x) MUST be compatibly changed. The  *  01067000
*      * WicWR_ReleaseIndex (RI), WicWR_WithinReleaseIndex (WRI), and*  01068000
*      * WicWR_PrototypeIndex (PI) form a macro version that is of   *  01069000
*      * the form RI.WRI.PI. Each SMF 98 subtype (SMF 98.x) has its  *  01070000
*      * own independent macro version. For products with multiple   *  01071000
*      * levels installed, the macro version ensures the latest      *  01072000
*      * mapping macro is used to analyze the SMF 98 subtype records.*  01073000
*      * IBM expects all exploiters to follow these rules for setting*  01074000
*      * RI, WRI, and PI: 1. For any shippped support, PI must be    *  01075000
*      * zero. 2. For the first delivery of an SMF 98 subtype, the   *  01076000
*      * indices MUST be set to RI=1, WRI=0, PI=0 across all levels. *  01077000
*      * 3. When adding new data to an existing SMF 98 subtype       *  01078000
*      * record: a. For a new release or version RI is updated to    *  01079000
*      * RI+1. WRVI and PI should both be set to zero. b. For an     *  01080000
*      * existing release and version, RI is unchanged, WRVI is      *  01081000
*      * updated to WRI+1, and PI is set to 0. 4. For prototype      *  01082000
*      * testing (e.g. ++APAR, developer supplied link edit) that may*  01083000
*      * or may not be delivered, RI and WRVI are to remain          *  01084000
*      * unchanged. PI is to be set to a non-zero value (e.g. PI=1). *  01085000
*      * This mapping macro can be used to analyze SMF98.x records   *  01086000
*      * with matching RI.WRI.PI and earlier compatible records where*  01087000
*      * PI=0 with the same or lower RI and/or WRI settings.         *  01088000
*      * Different PI values for the same RI and WRVI values are     *  01089000
*      * treated as incompatible test changes. Note: The             *  01090000
*      * WicWR_SubtypeInfo is a one to one mapping of                *  01091000
*      * SMF98_SubtypeInfo in IHAHR098. Changes to this              *  01092000
*      * WicWR_SubtypeInfo will require the same changes to the      *  01093000
*      * SMF98_SubtypeInfo mapping.                                  *  01094000
*      *                                                             *  01095000
*      ***************************************************************  01096000
*                                                                       01097000
*                                                                       01098000
WicWR_SubtypeInfo     DS    CL24   SMF 98.x subtype information        *01099000
                                   parameter list                       01100000
                      ORG   WicWR_SubtypeInfo                           01101000
WicWR_ReleaseIndex    DS    H      The current release version index   *01102000
                                   value                                01103000
WicWR_WithinReleaseIndex DS H      The current within release index    *01104000
                                   value                                01105000
WicWR_PrototypeIndex  DS    H      The current prototype index value - *01106000
                                   IBM use only                         01107000
WicWR_Rsvd0D          DS    CL2    Reserved - IBM use only              01108000
WicWR_ProdLevel       DS    CL16   The program product level. - Bytes  *01109000
                                   0-7 contain the product name -      *01110000
                                   Bytes 8-15 contain the FMID          01111000
*                                                                       01112000
*      ***************************************************************  01113000
*      *                                                             *  01114000
*      * Aggregate buckets parameter list (mapped by                 *  01115000
*      * WicWR_AggregateBucketParmList) Up to two aggregate buckets  *  01116000
*      * are supported. IFAWIC exit exploiters may want to utilize   *  01117000
*      * two aggregate buckets, for example, one aggregate bucket can*  01118000
*      * be used for global or non-CP related information, whereas, a*  01119000
*      * second aggregate bucket can be used for CP related          *  01120000
*      * information. Notes: 1. For additional information on the    *  01121000
*      * structure of the aggregate bucket, see the definition of    *  01122000
*      * WicWR_AggBucket in this mapping macro. For an understanding *  01123000
*      * of the output of the aggregate bucket in an SMF98.x record  *  01124000
*      * see the defintion SMF98AggBucket in IHAHR098. 2. The number *  01125000
*      * of aggregate bucket entries (instances) must be either 25 or*  01126000
*      * 50. This represents the maximum number of instances for     *  01127000
*      * either one or two processor classes, five job priority      *  01128000
*      * levels, and five job size levels. 1 processor class by 5 job*  01129000
*      * priority levels by 5 job size levels equates to 25 aggregate*  01130000
*      * bucket instances. 2 processor classes by 5 job priority     *  01131000
*      * levels by 5 job priority levels by 5 job size levels equates*  01132000
*      * to 50 aggregate bucket instances. (See WicWR_k* constants.) *  01133000
*      * 3. The aggregate bucket length defines the length of the    *  01134000
*      * exploiter's aggregate bucket for one entry (i.e. the length *  01135000
*      * includes the length of the contributors, the record area and*  01136000
*      * internal area). See WicWR_AggBucket definition. 4. The      *  01137000
*      * aggregate bucket write length defines the length of the     *  01138000
*      * aggregate bucket entry that will be written to the SMF98.x  *  01139000
*      * record. It includes the length of the contributors plus the *  01140000
*      * length of the record area. See WicWR_AggBucket definition.  *  01141000
*      * 5. The write length of one aggregate bucket cannot be       *  01142000
*      * greater than the length of one aggregate bucket entry       *  01143000
*      * (instance).                                                 *  01144000
*      *                                                             *  01145000
*      ***************************************************************  01146000
*                                                                       01147000
*                                                                       01148000
WicWR_AggBucketParmList1 DS CL24   First aggregate bucket parameter    *01149000
                                   list                                 01150000
WicWR_AggBucketParmList2 DS CL24   Second aggregate bucket parameter   *01151000
                                   list                                 01152000
*                                                                       01153000
*      ***************************************************************  01154000
*      *                                                             *  01155000
*      * Exception bucket parameter list Only one expection bucket is*  01156000
*      * supported. Note: 1. For additional information on the       *  01157000
*      * structure of the exception bucket, see the definition of    *  01158000
*      * WicWR_ExcBucket in this mapping macro. For an understanding *  01159000
*      * of the output of the exception bucket in an SMF98.x record  *  01160000
*      * see the definition SMF98JobIdx and SMF98JobList in IHAHR098.*  01161000
*      * 2. The number of exception bucket entries (instances) must  *  01162000
*      * be a multiple of 25. To calculate the number of exception   *  01163000
*      * bucket entries, multiply the number of processor classes the*  01164000
*      * exception bucket represents (1 - for just CP, or 2 - CPs and*  01165000
*      * zIIPs) by 5 job priority levels by 5 job size levels by the *  01166000
*      * number of activities defined for the exception bucket. For  *  01167000
*      * example, if both CP and zIIP processor classes and 4        *  01168000
*      * activities are represented in an exception bucket, then the *  01169000
*      * total number of entries is 2*5*5*4 or 200. (See WicWR_k*    *  01170000
*      * constants.) 3. The exception bucket entry length defines the*  01171000
*      * length of the exploiter's exception bucket for one entry    *  01172000
*      * (i.e. this includes the length of the ASID, Job Name, record*  01173000
*      * area and internal area). See WicWR_ExpBucket definition. 4. *  01174000
*      * The write length of one exception bucket cannot be greater  *  01175000
*      * than the length of one exception bucket entry (instance).   *  01176000
*      *                                                             *  01177000
*      ***************************************************************  01178000
*                                                                       01179000
*                                                                       01180000
WicWR_ExceptionBucketParmList DS CL24 Exceptional bucket parameter     *01181000
                                   list                                 01182000
                      ORG   WicWR_ExceptionBucketParmList               01183000
WicWR_ExcBucketNumOfEntries DS F   The number of entries in the        *01184000
                                   exceptional bucket, must be a       *01185000
                                   multiple of 25                       01186000
WicWR_ExcBucketNumOfActivities DS F The number of activities for the   *01187000
                                   exception bucket                     01188000
WicWR_ExcBucketEntryLength DS F    The total length of one entry       *01189000
                                   (instance) in the exception bucket  *01190000
                                   exploiter area                       01191000
WicWR_ExcBucketEntryWriteLength DS F The write length one entry in the *01192000
                                   exception bucket exploiter area      01193000
WicWR_ExcBucketStartAddr DS AD     Starting address of the exceptional *01194000
                                   bucket - see WicWR_ExcBucket         01195000
*                                                                       01196000
* ********************************************************************  01197000
* * Constants for Write SMF 98.x Record Service                      *  01198000
* ********************************************************************  01199000
*                                                                       01200000
*                                                                       01201000
WicWR_#Ver            EQU   1      Current version                      01202000
WicWR_#MaxVer         EQU   1                                           01203000
WicWR_#Ver1           EQU   1                                           01204000
WicWR_ParmList_Len    EQU   *-WicWR_ParmList                            01205000
.L001A                ANOP                                              01206000
                      AIF   ('&WicWR_AggBucketParmList' EQ 'NO').L001E  01207000
                      AIF   ('&DSECT' EQ 'YES').L001F                   01208000
                      AIF   ('&WicWR_AggBucketParmList' NE 'YES').L001E*01209000
                                                                        01210000
.L001F                ANOP                                              01211000
*                                                                       01212000
* ********************************************************************  01213000
* *                                                                  *  01214000
* * Aggregate bucket parameter list mapping.  Use this mapping for   *  01215000
* * each of the aggregate buckets in the WIC build and write SMF98.x *  01216000
* * record service.                                                  *  01217000
* *                                                                  *  01218000
* ********************************************************************  01219000
*                                                                       01220000
*                                                                       01221000
                      AIF   ('&DSECT' EQ 'YES').L0020                   01222000
WicWR_AggBucketParmList DS  0D     Aggregate bucket parameter lists     01223000
                      AGO   .L0021                                      01224000
.L0020                ANOP                                              01225000
WicWR_AggBucketParmList DSECT      Aggregate bucket parameter lists     01226000
.L0021                ANOP                                              01227000
WicWR_AggBucketNumOfEntries DS F   The number of entries for this      *01228000
                                   aggregate bucket                     01229000
WicWR_AggBucketEntryLength DS F    The total length of one entry       *01230000
                                   (instance) in the aggregate bucket  *01231000
                                   exploiter area                       01232000
WicWR_AggBucketEntryWriteLength DS F The write length of one entry in  *01233000
                                   the aggregate bucket exploiter area  01234000
WicWR_Rsvd2B          DS    CL4    Reserved for alignment               01235000
WicWR_AggBucketStartAddr DS AD     Starting address of the aggregate   *01236000
                                   bucket - see WicWR_AggBucket         01237000
WicWR_AggBucketParmList_Len EQU *-WicWR_AggBucketParmList               01238000
.L001E                ANOP                                              01239000
                      AIF   ('&WicWR_AggBucket' EQ 'NO').L0022          01240000
                      AIF   ('&DSECT' EQ 'YES').L0023                   01241000
                      AIF   ('&WicWR_AggBucket' NE 'YES').L0022         01242000
.L0023                ANOP                                              01243000
*                                                                       01244000
* ********************************************************************  01245000
* *                                                                  *  01246000
* * WIC SMF98.x Aggregate Bucket                                     *  01247000
* * ----------------------------                                     *  01248000
* *                                                                  *  01249000
* * An IFAWIC exploiter receives a job-specific buffer and           *  01250000
* * instruments simple activities into the job-specific buffer       *  01251000
* * during each five (5) second interval.                            *  01252000
* *                                                                  *  01253000
* * An IFAWIC exploiter registers a WIC exit, through the IFAWIC     *  01254000
* * REGISTER service, that is executed at the end of a five (5)      *  01255000
* * second interval.  For each job-specific buffer, the exploiter    *  01256000
* * exit routine summarizes activities across jobs.                  *  01257000
* *                                                                  *  01258000
* * Summarizing activities across jobs is accomplished by use of an  *  01259000
* * aggregate bucket.  The exploiter exit aggregates activities into *  01260000
* * the aggregate bucket with matching job attributes.               *  01261000
* *                                                                  *  01262000
* * IFAWIC exploiters must define an aggregate bucket with the first *  01263000
* * 2 bytes defining the number of contributors (as defined below)   *  01264000
* * followed by a data area.                                         *  01265000
* *                                                                  *  01266000
* * The aggregate bucket contains "simple" activities (e.g. totals)  *  01267000
* * and "compound" activities (e.g. averages) across jobs.           *  01268000
* *                                                                  *  01269000
* * A "simple" activity is a job instrument activity type that is    *  01270000
* * instrumented during a 5 second interval, examples include        *  01271000
* * number of transactions, total CPU time, total response time,     *  01272000
* * etc..                                                            *  01273000
* *                                                                  *  01274000
* * A "compound" activity is a job instrument activity type that is  *  01275000
* * a combiniation of multiple simple activities, compound           *  01276000
* * activities are calculated at the end of the 5 second             *  01277000
* * interval, examples include average CPU time per transaction,     *  01278000
* * average response time per transaction, etc..                     *  01279000
* *                                                                  *  01280000
* * The aggregate bucket is defined as follows:                      *  01281000
* * - Contributors - a required two-byte field that the number of    *  01282000
* *   contributors or address spaces that contribute the given       *  01283000
* *   bucket entry.                                                  *  01284000
* *                                                                  *  01285000
* * - Data Area - an exploiter defined area that contains            *  01286000
* *   "record" and "internal" activities                             *  01287000
* *                                                                  *  01288000
* *   - "Record" activities are activities that include simple and   *  01289000
* *     compound activities.   This information will be hardened or  *  01290000
* *     included in the SMF98.x record.  By design "Record"          *  01291000
* *     activities must be grouped together before "internal"        *  01292000
* *     activities.                                                  *  01293000
* *                                                                  *  01294000
* *   - "Internal" activities are activities that can include simple *  01295000
* *     and compound activities.   This information will NOT be      *  01296000
* *     hardened or NOT included in the SMF98.x record.  By design   *  01297000
* *     "Internal" must be grouped together and after "record"       *  01298000
* *     activities.                                                  *  01299000
* *                                                                  *  01300000
* * A minimum of one and a maximum of two aggregate buckets can be   *  01301000
* * supplied to the SMF98.x build and write service.  The aggregate  *  01302000
* * bucket can be thought of as a "table" of entries, with each      *  01303000
* * entry representing an instance of an aggregate bucket.           *  01304000
* * Instances must be defined in ascending order first by CPU type,  *  01305000
* * then by job priority, and finally by job size, as shown below:   *  01306000
* *                                                                  *  01307000
* *                           +------------------------------------+ *  01308000
* *                           !           Aggregate Bucket         ! *  01309000
* *                           !        (Supplied by Exploiter)     ! *  01310000
* *                           !                                    ! *  01311000
* *                           !            WicWR_AggBucket         ! *  01312000
* * +-------------------------+--------------+---------------------+ *  01313000
* * !                         !           Exploiter Area           ! *  01314000
* * !         Indices         !                                    ! *  01315000
* * !      (Table Entry)      +--------------+---------------------+ *  01316000
* * !                         !              !       Data          ! *  01317000
* * +-------------------------+              +---------+-----------+ *  01318000
* * ! CPU  !   Job    !  Job  ! Contributors ! Record  ! Internal  ! *  01319000
* * ! Type ! Priority !  Size !              !         !           ! *  01320000
* * ! (0-1)!  (0-4)   ! (0-4) !              !         !           ! *  01321000
* * +------+----------+-------+--------------+---------+-----------+ *  01322000
* *  CP (0)  ALL (0)   ALL(0)        5                ...            *  01323000
* *  CP (0)  ALL (0)   LG (1)        0                ...            *  01324000
* *  CP (0)  ALL (0)   MED(2)        2                ...            *  01325000
* *  CP (0)  ALL (0)   SM (3)        0                ...            *  01326000
* *  CP (0)  ALL (0)   TINY(4)       0                ...            *  01327000
* *  CP (0)  CRIT (1)  ALL(0)        3                ...            *  01328000
* *  CP (0)  CRIT (1)  LG (1)        2                ...            *  01329000
* *  CP (0)  CRIT (1)  MED(2)        1                ...            *  01330000
* *  CP (0)  CRIT (1)  SM (3)        0                ...            *  01331000
* *  CP (0)  CRIT (1)  TINY(4)       0                ...            *  01332000
* *  CP (0)  HIGH (2)  ALL(0)        2                ...            *  01333000
* *   ...                                             ...            *  01334000
* *  CP (0)  LOW (3)   LG (1)        0                ...            *  01335000
* *  CP (0)  LOW (3)   MED(2)        2                ...            *  01336000
* *  CP (0)  LOW (3)   SM (3)        0                ...            *  01337000
* *  CP (0)  LOW (3)   TINY(4)       0                ...            *  01338000
* *  CP (0)  DISC (4)  ALL(0)        0                ...            *  01339000
* *  CP (0)  DISC (4)  LG (1)        0                ...            *  01340000
* *   ...                                             ...            *  01341000
* *  zIIP(1) ALL (0)   ALL(0)        2                ...            *  01342000
* *  zIIP(1) ALL (0)   LG (1)        2                ...            *  01343000
* *  zIIP(1) ALL (0)   MED(2)        0                ...            *  01344000
* *   ...                                             ...            *  01345000
* *                                                                  *  01346000
* *                                                                  *  01347000
* * The SMF98.x build and write service will generate an aggregate   *  01348000
* * bucket SMF98.x record for each aggregate bucket instance         *  01349000
* * supplied by the exploiter providing the number of contributors   *  01350000
* * for the given instance is greater than zero.  See IHAHR098 for   *  01351000
* * a description of the SMF98.x record.                             *  01352000
* *                                                                  *  01353000
* *  Job Priority Definitions      Job Size Definitions              *  01354000
* *  ------------------------      --------------------              *  01355000
* *  ALL  = All                    ALL  = All                        *  01356000
* *  CRIT = Critical               LG   = Large                      *  01357000
* *  HIGH = High                   MED  = Medium                     *  01358000
* *  LOW  = Low                    SM   = Small                      *  01359000
* *  DISC = Discretionary          TINY = Tiny                       *  01360000
* *                                                                  *  01361000
* ********************************************************************  01362000
*                                                                       01363000
*                                                                       01364000
                      AIF   ('&DSECT' EQ 'YES').L0024                   01365000
WicWR_AggBucket       DS    0H     Aggregate bucket                     01366000
                      AGO   .L0025                                      01367000
.L0024                ANOP                                              01368000
WicWR_AggBucket       DSECT        Aggregate bucket                     01369000
.L0025                ANOP                                              01370000
*                                                                       01371000
*      ***************************************************************  01372000
*      *                                                             *  01373000
*      * Aggregate bucket exploiter area                             *  01374000
*      *                                                             *  01375000
*      ***************************************************************  01376000
*                                                                       01377000
*                                                                       01378000
WicWR_AggBucketExpArea DS   CL2    Aggregate bucket exploiter area      01379000
*                                                                       01380000
*      ***************************************************************  01381000
*      *                                                             *  01382000
*      * Contributors - the number of contributors for this bucket   *  01383000
*      * instance                                                    *  01384000
*      *                                                             *  01385000
*      ***************************************************************  01386000
*                                                                       01387000
*                                                                       01388000
                      ORG   WicWR_AggBucketExpArea                      01389000
WicWR_AggBucket_Contributors DS H  Number of address spaces            *01390000
                                   contributing to this bucket entry - *01391000
                                   supplied by the exploiter            01392000
*                                                                       01393000
*      ***************************************************************  01394000
*      *                                                             *  01395000
*      * Aggregate bucket data area                                  *  01396000
*      *                                                             *  01397000
*      ***************************************************************  01398000
*                                                                       01399000
*                                                                       01400000
WicWR_AggBucket_Data  DS    0C     Aggregate bucket data area End of   *01401000
                                   Aggregate Bucket definition          01402000
WicWR_AggBucket_Len   EQU   *-WicWR_AggBucket                           01403000
.L0022                ANOP                                              01404000
                      AIF   ('&WicWR_ExcBucket' EQ 'NO').L0026          01405000
                      AIF   ('&DSECT' EQ 'YES').L0027                   01406000
                      AIF   ('&WicWR_ExcBucket' NE 'YES').L0026         01407000
.L0027                ANOP                                              01408000
*                                                                       01409000
* ********************************************************************  01410000
* *                                                                  *  01411000
* * WIC SMF98 Exception Bucket                                       *  01412000
* * --------------------------                                       *  01413000
* *                                                                  *  01414000
* * IFAWIC exploiters must define an exception job bucket with the   *  01415000
* * first 10 bytes ('A'x) defining an exception bucket header (as    *  01416000
* * defined below) followed by an IFAWIC exploiter area.             *  01417000
* *                                                                  *  01418000
* * The SMF98 exception bucket contains the job with the maximum     *  01419000
* * activity and its job context (e.g. ASID, jobname, and other      *  01420000
* * corresponding activities) for every aggregate bucket activity.   *  01421000
* * For example, if the aggregate bucket activity contains the       *  01422000
* * number of transactions, the exception job bucket will contain    *  01423000
* * the job with the most transactions and its job context.          *  01424000
* *                                                                  *  01425000
* *                                                                  *  01426000
* * The SMF98 exception bucket is defined as follows:                *  01427000
* * - Header area - IBM defined area that contains bucket attributes *  01428000
* *   and the state of the bucket.                                   *  01429000
* *                                                                  *  01430000
* * - Exploiter Area - exploiter defined area that contains "record" *  01431000
* *   and "internal" activities.                                     *  01432000
* *                                                                  *  01433000
* * See the WIC SMF98.x Aggregate Bucket for a discussion on WIC     *  01434000
* * bucket concepts.                                                 *  01435000
* *                                                                  *  01436000
* *                                                                  *  01437000
* * Only one exception bucket must be supplied to the SMF98.x        *  01438000
* * build and write service.  The exception bucket can be thought    *  01439000
* * of as a "table" of entries, with each entry representing an      *  01440000
* * instance of an exception bucket.    Instances must be defined in *  01441000
* * ascending order first by CPU type, then by job priority, then    *  01442000
* * by job size, and finally by activity index as shown below.       *  01443000
* *                                                                  *  01444000
* * Note: This example shows an exception bucket with "N"            *  01445000
* * activities as identified by the activity index (Act Idx).  An    *  01446000
* * activity index identifies the activity (defined in the exploiter *  01447000
* * area) for the given exception bucket instance.                   *  01448000
* *                                                                  *  01449000
* *                                                                  *  01450000
* *                               +--------------------------------+ *  01451000
* *                               !        Exception Bucket        ! *  01452000
* *                               !     (Supplied by Exploiter)    ! *  01453000
* *                               !                                ! *  01454000
* *                               !         WicWR_ExcBucket        ! *  01455000
* * +-----------------------------+------------+-------------------+ *  01456000
* * !                             !         Exploiter Area         ! *  01457000
* * !         Indices             !                                ! *  01458000
* * !      (Table Entry)          +------------+-------------------+ *  01459000
* * !                             !    !       !       Data        ! *  01460000
* * +-----------------------------+    !       +---------+---------+ *  01461000
* * ! CPU  !  Job  ! Job   ! Act  !ASID!JobName!Exploiter!Exploiter! *  01462000
* * ! Type ! Prty  ! Size  ! Idx  !    !       ! Record  !Internal ! *  01463000
* * ! (0-1)! (0-4) ! (0-4) ! (1-N)!    !       !  Area   !  Area   ! *  01464000
* * +------+-------+-------+------+----+-------+---------+---------+ *  01465000
* *  CP(0)   ALL(0)  ALL(0)    1  '40'x   JOB1          ...          *  01466000
* *  CP(0)   ALL(0)  ALL(0)    2  '40'x   JOB1          ...          *  01467000
* *  CP(0)   ALL(0)  ALL(0)    3  '41'x   JOB2          ...          *  01468000
* *  ...                                                ...          *  01469000
* *  CP(0)   ALL(0)  ALL(0)    N  '41'x   JOB2          ...          *  01470000
* *  CP(0)   ALL(0)  LG (1)    1  '25'x   JOBA          ...          *  01471000
* *  CP(0)   ALL(0)  LG (1)    2  '40'x   JOB1          ...          *  01472000
* *  CP(0)   ALL(0)  LG (1)    3  '26'x   JOBB          ...          *  01473000
* *  ...                                                ...          *  01474000
* *  CP(0)   ALL(0)  LG (1)    N  '26'x   JOBB          ...          *  01475000
* *  CP(0)   ALL(0)  MED(2)    1  '27'x   JOB9          ...          *  01476000
* *  CP(0)   ALL(0)  MED(2)    2  '27'x   JOB9          ...          *  01477000
* *  ...                                                ...          *  01478000
* *  CP(0)   ALL(0)  TINY(4)   1  '30'x   JOBT          ...          *  01479000
* *  CP(0)   ALL(0)  TINY(4)   2  '31'x   JOBS          ...          *  01480000
* *  CP(0)   ALL(0)  TINY(4)   3  '32'x   JOBU          ...          *  01481000
* *  ...                                                ...          *  01482000
* *  CP(0)   ALL(0)  TINY(4)   N  '31'x   JOBS          ...          *  01483000
* *  CP(0)   CRIT(1) ALL(0)    1  '40'x   JOB1          ...          *  01484000
* *  CP(0)   CRIT(1) ALL(0)    2  '40'x   JOB1          ...          *  01485000
* *  CP(0)   CRIT(1) ALL(0)    3  '41'x   JOB2          ...          *  01486000
* *  ...                                                ...          *  01487000
* *  CP(0)   CRIT(1) ALL(0)    N  '41'x   JOB2          ...          *  01488000
* *  ...                                                ...          *  01489000
* *  CP(0)   LOW(3)  ALL(0)    1  '40'x   JOB1          ...          *  01490000
* *  CP(0)   LOW(3)  ALL(0)    2  '40'x   JOB1          ...          *  01491000
* *  CP(0)   LOW(3)  ALL(0)    3  '41'x   JOB2          ...          *  01492000
* *  ...                                                ...          *  01493000
* *  CP(0)   LOW(3)  ALL(0)    N  '41'x   JOB2          ...          *  01494000
* *  ...                                                ...          *  01495000
* *  ZIPP(1) ALL(0)  ALL(0)    1  '40'x   JOB1          ...          *  01496000
* *  ZIPP(1) ALL(0)  ALL(0)    2  '40'x   JOB1          ...          *  01497000
* *  ZIPP(1) ALL(0)  ALL(0)    3  '41'x   JOB2          ...          *  01498000
* *  ...                                                ...          *  01499000
* *  ZIPP(1) ALL(0)  ALL(0)    N  '41'x   JOB2          ...          *  01500000
* *  ZIPP(1) ALL(0)  LG (1)    1  '25'x   JOBA          ...          *  01501000
* *  ZIPP(1) ALL(0)  LG (1)    2  '40'x   JOB1          ...          *  01502000
* *  ZIPP(1) ALL(0)  LG (1)    3  '26'x   JOBB          ...          *  01503000
* *  ...                                                ...          *  01504000
* *  ZIPP(1) ALL(0)  MED(2)    N  '41'x   JOB2          ...          *  01505000
* *  ...                                                ...          *  01506000
* *                                                                  *  01507000
* *  Job Priority Definitions      Job Size Definitions              *  01508000
* *  ------------------------      --------------------              *  01509000
* *  ALL  = All                    ALL  = All                        *  01510000
* *  CRIT = Critical               LG   = Large                      *  01511000
* *  HIGH = High                   MED  = Medium                     *  01512000
* *  LOW  = Low                    SM   = Small                      *  01513000
* *  DISC = Discretionary          TINY = Tiny                       *  01514000
* *                                                                  *  01515000
* ********************************************************************  01516000
*                                                                       01517000
*                                                                       01518000
                      AIF   ('&DSECT' EQ 'YES').L0028                   01519000
WicWR_ExcBucket       DS    0H     Exception bucket                     01520000
                      AGO   .L0029                                      01521000
.L0028                ANOP                                              01522000
WicWR_ExcBucket       DSECT        Exception bucket                     01523000
.L0029                ANOP                                              01524000
*                                                                       01525000
*      ***************************************************************  01526000
*      *                                                             *  01527000
*      * Exception bucket exploiter area                             *  01528000
*      *                                                             *  01529000
*      ***************************************************************  01530000
*                                                                       01531000
*                                                                       01532000
WicWR_ExcBucketExpArea DS   CL10   Exception bucket exploiter area      01533000
*                                                                       01534000
*      ***************************************************************  01535000
*      *                                                             *  01536000
*      * ASID - the address space identifier for this bucket instance*  01537000
*      *                                                             *  01538000
*      ***************************************************************  01539000
*                                                                       01540000
*                                                                       01541000
                      ORG   WicWR_ExcBucketExpArea                      01542000
WicWR_ExcBucket_ASID  DS    H      Address space id - supplied by the  *01543000
                                   exploiter                            01544000
*                                                                       01545000
*      ***************************************************************  01546000
*      *                                                             *  01547000
*      * Jobname - the jobname for this bucket instance              *  01548000
*      *                                                             *  01549000
*      ***************************************************************  01550000
*                                                                       01551000
*                                                                       01552000
WicWR_ExcBucket_Jobname DS  CL8    Jobnamespace id - supplied by the   *01553000
                                   exploiter                            01554000
*                                                                       01555000
*      ***************************************************************  01556000
*      *                                                             *  01557000
*      * Exception bucket data area                                  *  01558000
*      *                                                             *  01559000
*      ***************************************************************  01560000
*                                                                       01561000
*                                                                       01562000
WicWR_ExcBucket_Data  DS    0C     Exception bucket data area End of   *01563000
                                   exception bucket definition          01564000
*                                                                       01565000
* ********************************************************************  01566000
* *                                                                  *  01567000
* * Aggregate bucket sizes for aggregate buckets that contain one    *  01568000
* * processor type or two processor types.                           *  01569000
* *                                                                  *  01570000
* ********************************************************************  01571000
*                                                                       01572000
*                                                                       01573000
WicWR_kNumEntsOneCPUType EQU 25                                         01574000
WicWR_kNumEntsTwoCPUType EQU 50                                         01575000
*                                                                       01576000
* ********************************************************************  01577000
* *                                                                  *  01578000
* * CPU Type constants                                               *  01579000
* *                                                                  *  01580000
* ********************************************************************  01581000
*                                                                       01582000
*                                                                       01583000
WicWR_kCPUTypeCP      EQU   0                                           01584000
WicWR_kCPUTypeZIIP    EQU   1                                           01585000
*                                                                       01586000
* ********************************************************************  01587000
* *                                                                  *  01588000
* * JobPriority constants                                            *  01589000
* *                                                                  *  01590000
* ********************************************************************  01591000
*                                                                       01592000
*                                                                       01593000
WicWR_kJobPriorityAll EQU   0                                           01594000
WicWR_kJobPriorityCritical EQU 1                                        01595000
WicWR_kJobPriorityHigh EQU  2                                           01596000
WicWR_kJobPriorityLow EQU   3                                           01597000
WicWR_kJobPriorityDisc EQU  4                                           01598000
*                                                                       01599000
* ********************************************************************  01600000
* *                                                                  *  01601000
* * JobSize constants                                                *  01602000
* *                                                                  *  01603000
* ********************************************************************  01604000
*                                                                       01605000
*                                                                       01606000
WicWR_kJobSizeAll     EQU   0                                           01607000
WicWR_kJobSizeLarge   EQU   1                                           01608000
WicWR_kJobSizeMedium  EQU   2                                           01609000
WicWR_kJobSizeSmall   EQU   3                                           01610000
WicWR_kJobSizeTiny    EQU   4                                           01611000
*                                                                       01612000
* ********************************************************************  01613000
* * Wic Exit Services Return and reason code constants               *  01614000
* ********************************************************************  01615000
* *------------------------------------------------------------------*  01616000
* * Successful return and reason codes                               *  01617000
* *------------------------------------------------------------------*  01618000
*                                                                       01619000
*                                                                       01620000
WicSrv_Rc_Success     EQU   X'00000000' Meaning: The get next buffer   *01621000
                                   service has returned the first or   *01622000
                                   next WIC buffer or the clear buffer *01623000
                                   service has cleared the WIC buffer  *01624000
                                   starting at the given offset for    *01625000
                                   the given length, or the build and  *01626000
                                   write service SMF98.x has           *01627000
                                   successfully built and written the  *01628000
                                   SMF98.x record. Action: None         01629000
*                                                                       01630000
*  ------------------------------------------------------------------   01631000
*   Warning return and reason codes                                     01632000
*  ------------------------------------------------------------------   01633000
*                                                                       01634000
*                                                                       01635000
WicSrv_Rc_Warning     EQU   X'00000004' Meaning: The get next buffer   *01636000
                                   service, the clear buffer, or the   *01637000
                                   build and write SMF98.x service     *01638000
                                   completed with a warning Action:    *01639000
                                   See the issued reason code           01640000
WicSrv_Rsn_NoMoreBuffers EQU X'00000401' Meaning: The get next buffer  *01641000
                                   service was unable to find the      *01642000
                                   first or "next" WIC buffer. Action: *01643000
                                   Callers of the WIC service should   *01644000
                                   terminate current processing and    *01645000
                                   move on to the next phase of exit   *01646000
                                   processing                           01647000
WicSrv_Rsn_ClearSTAddrBufLenOutOfRange EQU X'00000402' Meaning: The    *01648000
                                   caller of the clear buffer service  *01649000
                                   specified a buffer length to clear  *01650000
                                   that when combined with the         *01651000
                                   starting address within the WIC     *01652000
                                   buffer extended beyond the buffer   *01653000
                                   size requested when the IFAWIC      *01654000
                                   REGISTER request was issued for the *01655000
                                   subtype. The WIC buffer area        *01656000
                                   starting at the address to clear is  01657000
*                                  clear (set to binary 0s). Action:   *01658000
                                   To avoid this warning re-register   *01659000
                                   the subtype specifying a larger     *01660000
                                   buffer size.                         01661000
WicSrv_Rsn_ApproachingMaxSMF98RecLen EQU X'0000040A' Meaning: The      *01662000
                                   build and write SMF98.x service has *01663000
                                   determined that the SMF98.x record  *01664000
                                   is approaching the 32756 byte       *01665000
                                   record length limit. The SMF98.x    *01666000
                                   record is written. Action: Verify   *01667000
                                   that the number of records for the  *01668000
                                   aggregate buckets and the exception *01669000
                                   bucket and the write lengths for    *01670000
                                   the buckets are correct. If the the  01671000
*                                  number of records and write lengths *01672000
                                   are correct, consider reducing the  *01673000
                                   amount of data recorded for each    *01674000
                                   aggregate bucket record and/or      *01675000
                                   exception bucket record.             01676000
*                                                                       01677000
*  ------------------------------------------------------------------   01678000
*   User error return and reason codes                                  01679000
*  ------------------------------------------------------------------   01680000
*                                                                       01681000
*                                                                       01682000
WicSrv_Rc_UserError   EQU   X'00000008' Meaning: The called service    *01683000
                                   completed with a user error Action: *01684000
                                   See the issued reason code           01685000
WicSrv_Rsn_BadParmList EQU  X'00000801' Meaning: An invalid parameter  *01686000
                                   list was built and supplied to the  *01687000
                                   called service. Action: Verify the  *01688000
                                   parameter list for the called       *01689000
                                   service is built and initialized    *01690000
                                   properly                             01691000
WicSrv_Rsn_BadClearSTAddrBufLen EQU X'00000802'                         01692000
*                                                                       01693000
*                                      Meaning: The caller of the       01694000
*                                      clear buffer service specified   01695000
*                                      a starting WIC buffer address    01696000
*                                      and buffer length to clear       01697000
*                                      that extends beyond the          01698000
*                                      maximum size of a WIC buffer     01699000
*                                      or is not within the range for   01700000
*                                      the subtype.within The buffer    01701000
*                                      area is not cleared. Action:     01702000
*                                      Verify that either the           01703000
*                                      starting buffer address is       01704000
*                                      correct and/or the buffer        01705000
*                                      length to clear is correct.      01706000
*                                                                       01707000
WicSrv_Rsn_AggBucketsNotSpecified EQU X'00000803'                       01708000
*                                                                       01709000
*                                      Meaning: The caller of the       01710000
*                                      build and write SMF98.x          01711000
*                                      service specified a zero         01712000
*                                      address for both the aggregate   01713000
*                                      bucket addresses within the      01714000
*                                      aggregate bucket portion of      01715000
*                                      the parameter list. Action:      01716000
*                                      Verify that at least one of      01717000
*                                      the aggregate bucket addresses   01718000
*                                      specified and is not zero        01719000
*                                                                       01720000
WicSrv_Rsn_BadNumOfAggBucketEntries EQU X'00000804' Meaning: The       *01721000
                                   caller of the build and write       *01722000
                                   SMF98.x service specified the       *01723000
                                   number of entries for the aggregate *01724000
                                   bucket that is not 25 or 50.        *01725000
                                   Action: Verify that the number of   *01726000
                                   aggregate bucket entries is 25 or   *01727000
                                   50                                   01728000
WicSrv_Rsn_AggBucketWRLenGTOneBucLen EQU X'00000805' Meaning: The      *01729000
                                   caller of the build and write       *01730000
                                   SMF98.x service specified a write   *01731000
                                   length for one aggregate bucket     *01732000
                                   entry that is greater than one      *01733000
                                   aggregate bucket entry length.      *01734000
                                   Action: Verify the write length of  *01735000
                                   one aggregate bucket entry is       *01736000
                                   defined to be less than the length  *01737000
                                   of one aggregate bucket entry.       01738000
WicSrv_Rsn_ExcBucketNotSpecified EQU X'00000807'                        01739000
*                                                                       01740000
*                                      Meaning: The caller of the       01741000
*                                      build and write SMF98.x          01742000
*                                      service specified a zero         01743000
*                                      address for the exception        01744000
*                                      bucket address, or specified a   01745000
*                                      zero for the number of entries   01746000
*                                      contained in the exception       01747000
*                                      bucket, or specified a zero      01748000
*                                      for the number of activities,    01749000
*                                      within the exception bucket      01750000
*                                      portion of the parameter list.   01751000
*                                      Action: Verify that the          01752000
*                                      exception bucket address is      01753000
*                                      specified and is not zero,       01754000
*                                      and/or the number of entries     01755000
*                                      is not zero, and/or the number   01756000
*                                      of activities is not zero.       01757000
*                                                                       01758000
WicSrv_Rsn_BadNumOfExcBucketEntries EQU X'00000808' Meaning: The       *01759000
                                   caller of the build and write       *01760000
                                   SMF98.x service specified the       *01761000
                                   number of entries for the exception *01762000
                                   that is not a multiple of 25.       *01763000
                                   Action: Verify that the number of   *01764000
                                   exception bucket entries is a       *01765000
                                   multiple of 25                       01766000
WicSrv_Rsn_ExcBucketWRLenGTOneBucLen EQU X'00000809' Meaning: The      *01767000
                                   caller of the build and write       *01768000
                                   SMF98.x service specified a write   *01769000
                                   length for one exception bucket     *01770000
                                   entry that is is greater than one   *01771000
                                   exception bucket entry length.      *01772000
                                   Action: Verify the write length of  *01773000
                                   one exception bucket entry is       *01774000
                                   defined to be less than the length  *01775000
                                   of one exception bucket entry.       01776000
WicSrv_Rsn_SMF98RecordTooLong EQU X'0000080A' Meaning: The build and   *01777000
                                   write SMF98.x service has           *01778000
                                   determined that the SMF98.x record  *01779000
                                   exceeds 32756 bytes in length. The  *01780000
                                   SMF98.x record is not written.      *01781000
                                   Action: Verify that the number of   *01782000
                                   records for the aggregate buckets   *01783000
                                   and the exception bucket and the    *01784000
                                   write lengths for the buckets are   *01785000
                                   correct. If the the number of        01786000
*                                  records and write lengths are       *01787000
                                   correct, consider reducing the      *01788000
                                   amount of data recorded for each    *01789000
                                   aggregate bucket record and/or      *01790000
                                   exception bucket record.             01791000
*                                                                       01792000
*  ------------------------------------------------------------------   01793000
*   Environment error return and reason codes                           01794000
*  ------------------------------------------------------------------   01795000
*                                                                       01796000
*                                                                       01797000
WicSrv_Rc_EnvError    EQU   X'0000000C' Meaning: The WIC service did   *01798000
                                   not complete successfully due to an *01799000
                                   environmental error. Action: See    *01800000
                                   the issued reason code               01801000
WicSrv_Rsn_UnableToWriteSMF98Record EQU X'00000C01' Meaning: The       *01802000
                                   SMF98.x build and write service was *01803000
                                   unable to write the SMF98.x record. *01804000
                                   Action: This error is issued when   *01805000
                                   the return code from the SMFEWTM    *01806000
                                   macro invocation is non-zero. Refer *01807000
                                   to the high half (bits 0-15) of     *01808000
                                   this reason code for the return     *01809000
                                   code issued by the SMFEWTM macro.   *01810000
                                   Documentation and corrective         01811000
*                                  actions for the SMFEWTM return      *01812000
                                   codes can be found in the z/OS MVS  *01813000
                                   System Management Facilities (SMF)  *01814000
                                   publication                          01815000
WicWR_ExcBucket_Len   EQU   *-WicWR_ExcBucket                           01816000
.L0026                ANOP                                              01817000
                      AIF   ('&ZCBPRINT' EQ 'NO').P3                    01818000
                      AIF   ('&LIST' EQ 'YES').P4                       01819000
.P3                   ANOP                                              01820000
                      POP   PRINT                                       01821000
.P4                   ANOP                                              01822000
.P_EXIT               ANOP                                              01823000
                      MEND                                              01824000
**/ IFAWICCB_2:;                                                        01825000
* %IFAWICCB_INCLUDED = 'YES';                                           01826000
* %DCL ZCBPRINT CHAR EXT;                                               01827000
* %DEACTIVATE ZCBPRINT;                                                 01828000
* %DCL IFAWICCB_LIST CHAR EXT;                                          01829000
* %DEACTIVATE IFAWICCB_LIST;                                            01830000
* %IF IFAWICCB_LIST = 'NO' !                                            01831000
*    ZCBPRINT = 'NO' %THEN                                              01832000
* %DO;                                                                  01833000
*   @LIST PUSH NOECHO;                                                  01834000
*   @LIST NOASSEMBLE NOECHO;                                            01835000
*   @LIST OFF C NOECHO;                                                 01836000
* %END;                                                                 01837000
*/* Start of PL/X Source                                             */ 01838000
*                                                                       01839000
* /*******************************************************************/ 01840000
* /*                                                                 */ 01841000
* /* WIC exploiter exit routine parameters:                          */ 01842000
* /*  The address of WicParm is in Reg(1) when the exit routine      */ 01843000
* /*   gets control.                                                 */ 01844000
* /*                                                                 */ 01845000
* /*******************************************************************/ 01846000
* Dcl                                                                   01847000
*   1 WicParm Bdy(DWord) TYPE,                                          01848000
*     3 WicParm_Version Fixed(16),  /* Version of WicParm            */ 01849000
*     3 WicParm_Length Fixed(16),   /* Length  of WicParm            */ 01850000
*     3 WicParm_Subtype Fixed(15) unsigned, /* Subtype number        */ 01851000
*     3 WicParm_Request Fixed(15) unsigned, /* Request for the          01852000
*                                      WIC exploiter exit.          If  01853000
*                                      called with an unrecognized      01854000
*                                      request number, the exit routine 01855000
*                                      should return without any        01856000
*                                      processing.                   */ 01857000
*     3 WicParm_DynAreaPtr Ptr(64), /* Dynamic area for WIC             01858000
*                                      exploiter exit.  Must be         01859000
*                                      accessed in amode 64          */ 01860000
*     3 WicParm_DynAreaLen Fixed(31) Unsigned, /* Length of storage     01861000
*                                      pointed to by                    01862000
*                                      WicParm_DynAreaPtr. At least     01863000
*                                      1M in size.                   */ 01864000
*     3 * Char(4),                  /* Reserved for alignment        */ 01865000
*                                                                       01866000
* /***************************************************************/     01867000
* /*                                                             */     01868000
* /* Address of WIC exit services                                */     01869000
* /*                                                             */     01870000
* /* Use these addresses to perform "common" WIC exit services.  */     01871000
* /*                                                             */     01872000
* /* AMODE: 64-bit                                               */     01873000
* /*                                                             */     01874000
* /* ASC Mode: Primary                                           */     01875000
* /*                                                             */     01876000
* /* Input Registers:  GR0        Irrelevant                     */     01877000
* /*                   GR1        Address of the parameter list  */     01878000
* /*                              as shown below                 */     01879000
* /*                   GR2-GR12   Irrelevant                     */     01880000
* /*                   GR13       Address of 144 byte save area  */     01881000
* /*                   GR14       Return address                 */     01882000
* /*                   GR15       Irrelevant                     */     01883000
* /*                                                             */     01884000
* /* Input Parameter List: Either WicNB_Parmlist,                */     01885000
* /*                       WicCB_Parmlist, or WicWR_Parmlist.    */     01886000
* /*                       Pointed to by GR1, each WIC exit      */     01887000
* /*                       service has three parameters as       */     01888000
* /*                       shown.                                */     01889000
* /*                                                             */     01890000
* /*                                                             */     01891000
* /*  +------------------------------------------------------+   */     01892000
* /*  ! Doubleword 1 Address of WIC exit service parameter       */     01893000
* /*  ! list (see Wic*_ParmList for the given WIC exit           */     01894000
* /*  ! service)                                                 */     01895000
* /*  +------------------------------------------------------+   */     01896000
* /*  ! Doubleword 2 Address of Return Code                      */     01897000
* /*  +------------------------------------------------------+   */     01898000
* /*  ! Doubleword 3 Address of Reason Code                      */     01899000
* /*  +------------------------------------------------------+   */     01900000
* /*                                                             */     01901000
* /*                                                             */     01902000
* /* Output Registers: GR0        Used by WIC exit services      */     01903000
* /*                   GR1-GR14   Unchanged                      */     01904000
* /*                   GR15       Used by WIC exit services      */     01905000
* /*                                                             */     01906000
* /* Recovery Operation: Provided by the caller                  */     01907000
* /*                                                             */     01908000
* /***************************************************************/     01909000
*     3 WicParm_WICSrv_GetNextBufferPtr Ptr(64), /* Address of the      01910000
*                                      get next buffer WIC exit service 01911000
*                                      IFAWGetNextBuffer             */ 01912000
*     3 WicParm_WICSrv_ClearBufferPtr   Ptr(64), /* Address of the      01913000
*                                      clear buffer WIC exit service    01914000
*                                      IFAWClearBuffer               */ 01915000
*     3 WicParm_WICSrv_WriteSMF98Ptr    Ptr(64), /* Address of the      01916000
*                                      build and write SMF98.x record   01917000
*                                      WIC exit service                 01918000
*                                      IFAWBuildAndWriteSMF98        */ 01919000
*     3 *       Char(0) Bdy(Dword);                                     01920000
* Dcl WicParm_ReqPrime Constant(1); /* Request for the WIC              01921000
*                                      exploiter exit to prime.         01922000
*                                      Prepare for writing a record on  01923000
*                                      the next HFTSINTVL by clearing   01924000
*                                      the WIC instrumentation          01925000
*                                      buffer data. Do not produce a    01926000
*                                      record this interval.         */ 01927000
* Dcl WicParm_ReqWriteRecord Constant(2); /* Request for the            01928000
*                                      WIC exploiter exit to            01929000
*                                      write an SMF 98 record for it's  01930000
*                                      subtype.                      */ 01931000
* Dcl WicParm_kVersionFirst Constant(1);                                01932000
* Dcl WicParm_kVersionCurrent Constant(WicParm_kVersionFirst);          01933000
*                                                                       01934000
* /*******************************************************************/ 01935000
* /*                                                                 */ 01936000
* /* Miscellaneous constants                                         */ 01937000
* /*                                                                 */ 01938000
* /*******************************************************************/ 01939000
*                                                                       01940000
* Dcl Wic_Rsn_CodeMask Bit(32) Constant('0000FFFF'x); /* Mask to        01941000
*                                      locate the non-diagnostic        01942000
*                                      portion of the reason code    */ 01943000
* Dcl Wic_kMax4kPages Fixed(32) Constant(16); /* Max allowed value for  01944000
*                                      BUFFER4KPAGES                 */ 01945000
* Dcl Wic_kDynamicAreaLength Fixed(32) Constant(8K); /* Size of         01946000
*                                      common dynamic storage (SP 245)  01947000
*                                      allocated for the use of WIC     01948000
*                                      trend exploiter exit routines.   01949000
*                                      This area is pointed to by R0    01950000
*                                      on entry to the WIC              01951000
*                                      exploiter exit                */ 01952000
* Dcl Wic_kFirstTestSubtype Constant(8192); /* First test subtype       01953000
*                                      number                        */ 01954000
* Dcl Wic_kLastTestSubtype Constant(8199); /* Last test subtype         01955000
*                                      number                        */ 01956000
*/* IFAWIC Return and Reason Code definitions                        */ 01957000
*DCL IFAWIC_Rc_Success BIT(32) Constant('00000000'X) ; /*               01958000
*                        Meaning: IFAWIC request successful. For        01959000
*                        REQUEST=REGISTER a BufferPtr has been provided 01960000
*                        to the current primary address. If an          01961000
*                        ExitVersion has been specified, and this is    01962000
*                        the first REQUEST=REGISTER on the system for   01963000
*                        the input subtype, or the input ExitVersion is 01964000
*                        larger than the current ExitVersion the input  01965000
*                        subtype, the ExitRoutine has been registered,  01966000
*                        and the system will switch to calling the new  01967000
*                        exit routine at the next WIC interval. The     01968000
*                        system issues ENF 85 signals to inform IFAWIC  01969000
*                        callers to start or stop writing               01970000
*                        instrumentation data to their instrumentation  01971000
*                        buffer. See macro IFAWICCB for additional      01972000
*                        information. For REQUEST=DEREGISTER the buffer 01973000
*                        is made unavailable to the current primary     01974000
*                        address. By invoking REQUEST=DEREGISTER, the   01975000
*                        program certifies that the exploiter has       01976000
*                        stopped instrumenting into its buffer. The     01977000
*                        program does not have to certify its WIC exit  01978000
*                        is not accessing the buffer. Once              01979000
*                        REQUEST=DEREGISTER is invoked, the system is   01980000
*                        responsible for preventing the WIC exit from   01981000
*                        accessing the the buffer If there are no more  01982000
*                        address spaces registered for the input        01983000
*                        subtype, the system will stop calling the exit 01984000
*                        routine.                                       01985000
*                        Action: For REQUEST=REGISTER, the program      01986000
*                        should begin instrumenting. For                01987000
*                        REQUEST=DEREGISTER, none.                   */ 01988000
*DCL IFAWIC_Rc_Warning BIT(32) Constant('00000004'X) ; /*               01989000
*                        Meaning: IFAWIC request completed with a       01990000
*                        warning. The high half word of the reason code 01991000
*                        may contain indications of other warnings that 01992000
*                        have occurred besides the reason code portion  01993000
*                        in the lower half. See Wic_Warning_Rsn in      01994000
*                        IFAWICCB for a mapping of this area. For       01995000
*                        REQUEST=REGISTER, a BufferPtr has been         01996000
*                        provided to the current primary address. If an 01997000
*                        ExitVersion has been specified, and this is    01998000
*                        the first REQUEST=REGISTER on the system for   01999000
*                        the input subtype, or the input ExitVersion is 02000000
*                        larger than the current ExitVersion the input  02001000
*                        subtype, the ExitRoutine has been registered,  02002000
*                        and the system will switch to calling the new  02003000
*                        exit routine at the next WIC interval. For     02004000
*                        REQUEST=DEREGISTER, the buffer is made         02005000
*                        unavailable to the current primary address. If 02006000
*                        there are no more address spaces registered    02007000
*                        for the input subtype, the system will will    02008000
*                        stop calling the exit routine.                 02009000
*                        Action: Refer to the action provided with the  02010000
*                        specific reason code. For REQUEST=REGISTER,    02011000
*                        the program should check the high half of the  02012000
*                        reason code for any conditions indicating the  02013000
*                        WIC services are not fully available by        02014000
*                        testing for any bits being on in the first     02015000
*                        byte using the IFAWICCB field                  02016000
*                        Wic_NotFullyAvail_LowHighMask. When no bits in 02017000
*                        the first byte of the reason code are on, the  02018000
*                        program should start writing instrumentation   02019000
*                        data to the instrumentation buffer because the 02020000
*                        program's WIC exit will be called at the next  02021000
*                        WIC interval. When any bit in the first byte   02022000
*                        of the reason code is on, the program should   02023000
*                        not start writing instrumentation data to the  02024000
*                        instrumentation buffer because the WIC exit    02025000
*                        will not be called at the next WIC interval    02026000
*                        The system issues ENF 85 signals to inform     02027000
*                        IFAWIC callers to start or stop writing        02028000
*                        instrumentation data to their instrumentation  02029000
*                        buffer. See macro IFAWICCB for additional      02030000
*                        information. For REQUEST=DEREGISTER, none.  */ 02031000
*DCL IFAWIC_Rsn_Buffer4kPagesSmaller BIT(32) Constant('00000401'X) ; /* 02032000
*                        Meaning: A smaller Buffer4kPages value was     02033000
*                        requested than the value specified on a        02034000
*                        previous REQUEST=REGISTER for the same         02035000
*                        subtype. The system reserves the requested     02036000
*                        buffer size for this address space.            02037000
*                        Action: It is desirable for the Buffer4kPages  02038000
*                        to be the same for all register requests for   02039000
*                        the input subtype, however, the system will    02040000
*                        allow the value to change. When specifying     02041000
*                        different Buffer4kPages values, it is up to    02042000
*                        the caller to remember how much data in each   02043000
*                        address space WIC instrumentation buffer is    02044000
*                        available for the WIC exit routine to use.     02045000
*                        Also, keep in mind when aggregating data that  02046000
*                        new data fields may not be available for       02047000
*                        aggregation from older program versions.       02048000
*                        Record data in the WIC instrumentation buffer  02049000
*                        to identify to the WIC ExitRoutine what data   02050000
*                        it should access and what fields it can        02051000
*                        aggregate.                                  */ 02052000
*DCL IFAWIC_Rsn_Buffer4kPagesLarger BIT(32) Constant('00000402'X) ; /*  02053000
*                        Meaning: A larger Buffer4kPages value was      02054000
*                        requested than the value specified on a        02055000
*                        previous REQUEST=REGISTER for the same         02056000
*                        subtype. The system reserves the requested     02057000
*                        buffer size for this address space.            02058000
*                        Action: It is desirable for the Buffer4kPages  02059000
*                        to be the same for all register requests for   02060000
*                        the input subtype, however, the system will    02061000
*                        allow the value to change. When specifying     02062000
*                        different Buffer4kPages values, it is up to    02063000
*                        the caller to remember how much data in each   02064000
*                        address space WIC instrumentation buffer is    02065000
*                        available for the WIC exit routine to use.     02066000
*                        Also, keep in mind when aggregating data that  02067000
*                        new data fields may not be available for       02068000
*                        aggregation from older program versions.       02069000
*                        Record data in the WIC instrumentation buffer  02070000
*                        to identify to the WIC ExitRoutine what data   02071000
*                        it should access and what fields it can        02072000
*                        aggregate.                                  */ 02073000
*DCL IFAWIC_Rsn_AlreadyRegistered BIT(32) Constant('00000403'X) ; /*    02074000
*                        Meaning: A REQUEST=REGISTER was requested from 02075000
*                        an address space for a subtype that was        02076000
*                        already registered.                            02077000
*                        Action: none needed.                        */ 02078000
*DCL IFAWIC_Rsn_NotRegistered BIT(32) Constant('00000404'X) ; /*        02079000
*                        Meaning: A REQUEST=DEREGISTER was requested    02080000
*                        from an address space for a subtype that was   02081000
*                        not currently registered.                      02082000
*                        Action: none needed.                        */ 02083000
*DCL IFAWIC_Rsn_ExitVersionIgnored BIT(32) Constant('00000405'X) ; /*   02084000
*                        Meaning: A REQUEST=REGISTER specified an       02085000
*                        ExitVersion that was less than the current     02086000
*                        ExitVersion. The ExitVersion and ExitRoutine   02087000
*                        parameters are ignored and the system          02088000
*                        continues using the current highest versioned  02089000
*                        exit routine.                                  02090000
*                        Action: none needed.                        */ 02091000
*DCL IFAWIC_Rsn_WicFeatureNotEnabled BIT(32) Constant('00000481'X) ; /* 02092000
*                        Meaning: The WorkloadIntCorr feature was not   02093000
*                        enabled to product registry.                   02094000
*                        Action: Wait for ENF 85 signal and verify the  02095000
*                        WicEnf bit WicEnf_InstrumentationRequested is  02096000
*                        on before writing to the instrumentation       02097000
*                        buffer.                                     */ 02098000
*DCL IFAWIC_Rsn_SubtypeNotCollected BIT(32) Constant('00000482'X) ; /*  02099000
*                        Meaning: SMF has not been configured to        02100000
*                        collect the input SMF 98 subtype record.       02101000
*                        Action: Wait for ENF85 signal and verify the   02102000
*                        WicEnf bit WicEnf_InstrumentationRequested is  02103000
*                        on before writing to the instrumentation       02104000
*                        buffer.                                     */ 02105000
*DCL IFAWIC_Rc_UserError BIT(32) Constant('00000008'X) ; /*             02106000
*                        Meaning: The IFAWIC request specified          02107000
*                        parameters that are not valid or the request   02108000
*                        is issued in an user-controllable environment  02109000
*                        that is not valid. The IFAWIC service did not  02110000
*                        complete successfully. For REQUEST=REGISTER,   02111000
*                        no WIC instrumentation buffer was provided to  02112000
*                        the caller.                                    02113000
*                        Action: Refer to the action provided with the  02114000
*                        specific reason code.                       */ 02115000
*DCL IFAWIC_Rsn_ParmListAlet BIT(32) Constant('00000801'X) ; /*         02116000
*                        Meaning: Unable to use ALET of the IFAWIC      02117000
*                        parameter list.                                02118000
*                        Action: Provide a valid ALET for the parameter 02119000
*                        list. The access register might not have been  02120000
*                        set up correctly.                           */ 02121000
*DCL IFAWIC_Rsn_BadVersion BIT(32) Constant('00000802'X) ; /*           02122000
*                        Meaning: The provided PLISTVER is not valid.   02123000
*                        This suggests the parameter list used to call  02124000
*                        IFAWIC was overlaid, or was not generated by   02125000
*                        the IFAWIC macro.                              02126000
*                        Action: Check for possible storage overlay of  02127000
*                        the parameter list. Use the IFAWIC service to  02128000
*                        produce the parameter list.                 */ 02129000
*DCL IFAWIC_Rsn_ReservedNot0 BIT(32) Constant('00000803'X) ; /*         02130000
*                        Meaning: The parameter list contains non-0     02131000
*                        input in reserved fields. This suggests the    02132000
*                        parameter list used to call IFAWIC was         02133000
*                        overlaid, or was not generated by the IFAWIC   02134000
*                        macro.                                         02135000
*                        Action: Check for possible storage overlay of  02136000
*                        the parameter list. Use the IFAWIC service to  02137000
*                        produce the parameter list.                 */ 02138000
*DCL IFAWIC_Rsn_BadRequestType BIT(32) Constant('00000804'X) ; /*       02139000
*                        Meaning: The request type is not valid. This   02140000
*                        suggests the parameter list used to call       02141000
*                        IFAWIC was overlaid, or was not generated by   02142000
*                        the IFAWIC macro.                              02143000
*                        Action: Check for possible storage overlay of  02144000
*                        the parameter list. Use the IFAWIC service to  02145000
*                        produce the parameter list.                 */ 02146000
*DCL IFAWIC_Rsn_BadBufferKey BIT(32) Constant('00000805'X) ; /*         02147000
*                        Meaning: The buffer key type is not valid.     02148000
*                        This suggests the parameter list used to call  02149000
*                        IFAWIC was overlaid, or was not generated by   02150000
*                        the IFAWIC macro.                              02151000
*                        Action: Check for possible storage overlay of  02152000
*                        the parameter list. Use the IFAWIC service to  02153000
*                        produce the parameter list.                 */ 02154000
*DCL IFAWIC_Rsn_ParmListFetch BIT(32) Constant('00000807'X) ; /*        02155000
*                        Meaning: An error was encountered when         02156000
*                        fetching the supplied parameter list.          02157000
*                        Action: Call IFAWIC with a parameter list      02158000
*                        properly addressable.                       */ 02159000
*DCL IFAWIC_Rsn_ParmListWrite BIT(32) Constant('00000808'X) ; /*        02160000
*                        Meaning: An error was encountered when writing 02161000
*                        to the supplied parameter list.                02162000
*                        Action: Call IFAWIC with a parameter list      02163000
*                        properly addressable and able to be written    02164000
*                        to.                                         */ 02165000
*DCL IFAWIC_Rsn_NotEnabled BIT(32) Constant('00000810'X) ; /*           02166000
*                        Meaning: The IFAWIC caller was not enabled.    02167000
*                        Action: Call IFAWIC only when enabled.      */ 02168000
*DCL IFAWIC_Rsn_Locked BIT(32) Constant('00000811'X) ; /*               02169000
*                        Meaning: The IFAWIC caller was locked.         02170000
*                        Action: Call IFAWIC without holding locks.  */ 02171000
*DCL IFAWIC_Rsn_HomeNotPrimary BIT(32) Constant('00000812'X) ; /*       02172000
*                        Meaning: The IFAWIC caller's primary home      02173000
*                        space was not equal to the caller's primary    02174000
*                        address space.                                 02175000
*                        Action: Call IFAWIC when home equals primary   02176000
*                        address space.                              */ 02177000
*DCL IFAWIC_Rsn_CallerFRR BIT(32) Constant('00000813'X) ; /*            02178000
*                        Meaning: The task mode IFAWIC REQUEST=REGISTER 02179000
*                        caller had FRR recovery established.           02180000
*                        Action: Call IFAWIC in task mode without FRRs  02181000
*                        established.                                */ 02182000
*DCL IFAWIC_Rsn_NotAuthorized BIT(32) Constant('00000814'X) ; /*        02183000
*                        Meaning: The IFAWIC caller is not authorized.  02184000
*                        Action: Call IFAWIC only when authorized.   */ 02185000
*DCL IFAWIC_Rsn_SubtypeInput BIT(32) Constant('00000820'X) ; /*         02186000
*                        Meaning: The provided SUBTYPE is not           02187000
*                        supported.                                     02188000
*                        Action: Supply the IBM provided program        02189000
*                        subtype.                                    */ 02190000
*DCL IFAWIC_Rsn_ExitVersionZero BIT(32) Constant('00000821'X) ; /*      02191000
*                        Meaning: The ExitVersion input must not be 0.  02192000
*                        Action: Specify an ExitVersion that is not 0.  02193000
*                                                                    */ 02194000
*DCL IFAWIC_Rsn_Buffer4kPagesZero BIT(32) Constant('00000822'X) ; /*    02195000
*                        Meaning: The Buffer4kPages must not be 0.      02196000
*                        Action: Specify Buffer4kPages that is not 0.   02197000
*                                                                    */ 02198000
*DCL IFAWIC_Rsn_Buffer4kPagesTooLarge BIT(32) Constant('00000823'X)     02199000
*                        ; /*                                           02200000
*                        Meaning: The Buffer4kPages input must be less  02201000
*                        than or equal to 16.                           02202000
*                        Action: Specify Buffer4kPages as less than or  02203000
*                        equal to 16.                                */ 02204000
*DCL IFAWIC_Rsn_BufferKeyMismatch BIT(32) Constant('00000824'X) ; /*    02205000
*                        Meaning: A previous REQUEST=REGISTER requested 02206000
*                        and received a buffer for a BUFFERKEY value    02207000
*                        that was different that the BUFFERKEY          02208000
*                        specified on this request.                     02209000
*                        Action: Update the program to request the same 02210000
*                        BUFFERKEY for each call to IFAWIC, even across 02211000
*                        different program versions.                 */ 02212000
*DCL IFAWIC_Rsn_SRBMode BIT(32) Constant('00000825'X) ; /*              02213000
*                        Meaning: IFAWIC was issued in SRB mode         02214000
*                        Action: Do not issue IFAWIC in SRB mode     */ 02215000
*DCL IFAWIC_Rsn_SameVerExitRoutineMismatch BIT(32)                      02216000
*                        Constant('00000830'X) ; /*                     02217000
*                        Meaning: A ExitRoutine and ExitVersion was     02218000
*                        specified such that the ExitVersion is the     02219000
*                        same as a previous specification, however, the 02220000
*                        ExitRoutine is different.                      02221000
*                        Action: Specify the same ExitRoutine to        02222000
*                        correspond with the same ExitVersion. If the   02223000
*                        program introduces a new exit routine, the     02224000
*                        ExitVersion must be incremented.            */ 02225000
*DCL IFAWIC_Rsn_ExitRtnNotFound BIT(32) Constant('00000831'X) ; /*      02226000
*                        Meaning: The exit routine could not be found.  02227000
*                        Action: Ensure the exit routine is located in  02228000
*                        either the invoking program's joblib, steplib, 02229000
*                        tasklib, in the system's LNKLST concatenation  02230000
*                        or in LPA.                                  */ 02231000
*DCL IFAWIC_Rsn_ExitRtnNotInAPFLib BIT(32) Constant('00000832'X) ; /*   02232000
*                        Meaning: IFAWIC was unable to load the         02233000
*                        provided exit routine because did not reside   02234000
*                        in an APF authorized library. The "xxxx"       02235000
*                        portion of the reason code contains an         02236000
*                        informational code as documented with ABEND    02237000
*                        306 reasons. No abend was generated.           02238000
*                        Action: Refer to "MVS System Codes", sections  02239000
*                        "System completion codes", "306", with the     02240000
*                        "xxxx" portion of the reason code to see what  02241000
*                        action is needed to resolve the condition.     02242000
*                        Ensure the exit routine resides in an APF      02243000
*                        authorized library and is re-entrant.       */ 02244000
*DCL IFAWIC_Rsn_ExitRtnAmode24 BIT(32) Constant('00000833'X) ; /*       02245000
*                        Meaning: The ExitRoutine must not be in AMODE  02246000
*                        24.                                            02247000
*                        Action: Provide an exit routine with an AMODE  02248000
*                        of 31 or 64.                                */ 02249000
*DCL IFAWIC_Rsn_ExitRtnNotReEntrant BIT(32) Constant('00000834'X) ; /*  02250000
*                        Meaning: The ExitRoutine must be re-entrant.   02251000
*                        Action: Provide an exit routine that is linked 02252000
*                        as re-entrant.                              */ 02253000
*DCL IFAWIC_Rsn_ExitRtnNameNotUnique BIT(32) Constant('00000835'X) ; /* 02254000
*                        Meaning: Another subtype is using the same     02255000
*                        exit routine name. The exit routine name must  02256000
*                        be unique per subtype.                         02257000
*                        Action: Provide a unique exit routine name. */ 02258000
*DCL IFAWIC_Rc_EnvError BIT(32) Constant('0000000C'X) ; /*              02259000
*                        Meaning: Environmental error The IFAWIC        02260000
*                        service did not complete successfully. For     02261000
*                        REQUEST=REGISTER, no WIC instrumentation       02262000
*                        buffer was provided to the caller.             02263000
*                        Action: Refer to the action provided with the  02264000
*                        specific reason code.                       */ 02265000
*DCL IFAWIC_Rsn_SystemNotReady BIT(32) Constant('00000C01'X) ; /*       02266000
*                        Meaning: IFAWIC was issued before the system   02267000
*                        is ready to start processing requests.         02268000
*                        Action: Wait for the system to be ready to     02269000
*                        accept IFAWIC requests and re-issue the IFAWIC 02270000
*                        request.                                    */ 02271000
*DCL IFAWIC_Rsn_UnsupportedMachine BIT(32) Constant('00000C02'X) ; /*   02272000
*                        Meaning: IFAWIC was issued from an unsupported 02273000
*                        machine. WIC requires an IBM z14 or later      02274000
*                        hardware.                                      02275000
*                        Action: Issue IFAWIC on a supported machine.   02276000
*                                                                    */ 02277000
*DCL IFAWIC_Rsn_EnvNoExit BIT(32) Constant('00000C03'X) ; /*            02278000
*                        Meaning: IFAWIC REQUEST=REGISTER requests      02279000
*                        omitting ExitVersion and ExitRoutine, require  02280000
*                        a WIC exit routine to have been already        02281000
*                        established by a previous IFAWIC               02282000
*                        REQUEST=REGISTER call specifying the           02283000
*                        ExitVersion and ExitRoutine parameters.        02284000
*                        Action: Specify ExitVersion and ExitRoutine or 02285000
*                        ensure an IFAWIC REQUEST=REGISTER call has     02286000
*                        already completed specifying ExitVersion and   02287000
*                        ExitRoutine before issuing IFAWIC              02288000
*                        REQUEST=REGISTER.                           */ 02289000
*DCL IFAWIC_Rsn_SMFNOWICSpecified BIT(32) Constant('00000C04'X) ; /*    02290000
*                        Meaning: SMF parameters specified NOWIC which  02291000
*                        prevents programs from issuing IFAWIC          02292000
*                        REQUEST=REGISTER.                              02293000
*                        Action: Accept that WIC services will be       02294000
*                        unavailable for the program, or choose to      02295000
*                        handle WIC registration dynamically. If the    02296000
*                        program can support dynamic WIC registration,  02297000
*                        wait for ENF 85 signal and check the WicEnf    02298000
*                        bit WicEnf_RegisterIsAvailable. When           02299000
*                        WicEnf_RegisterIsAvailable is on, The ENF      02300000
*                        listener exit can cause a task to wake up to   02301000
*                        re-issue IFAWIC REQUEST=REGISTER for the       02302000
*                        program. The system issues ENF 85 signals to   02303000
*                        inform IFAWIC callers that IFAWIC Register is  02304000
*                        available when SMF parameter WIC is specified. 02305000
*                        See macro IFAWICCB for additional information. 02306000
*                                                                    */ 02307000
*DCL IFAWIC_Rsn_ExitRtnNoStorage BIT(32) Constant('00000C10'X) ; /*     02308000
*                        Meaning: There was not sufficient storage for  02309000
*                        IFAWIC to process the exit routine.            02310000
*                        Action: Contact your system programmer. there  02311000
*                        is a shortage of common storage.            */ 02312000
*DCL IFAWIC_Rsn_UnexpectedLoadError BIT(32) Constant('00000C11'X) ; /*  02313000
*                        Meaning: IFAWIC encountered errors trying to   02314000
*                        load the provided exit routine. The "xxxx"     02315000
*                        portion of the reason code contains a code     02316000
*                        from the load service of what would have been  02317000
*                        the ABEND code. No abend was generated.        02318000
*                        Action: Alert the system programmer. Refer to  02319000
*                        "MVS System Codes", sections "System           02320000
*                        completion codes", with the "xxxx" portion as  02321000
*                        the abend code to see what action is needed to 02322000
*                        resolve the condition. This may be accomonied  02323000
*                        with system log messages with the CSV prefix.  02324000
*                                                                    */ 02325000
*DCL IFAWIC_Rc_CompError BIT(32) Constant('00000010'X) ; /*             02326000
*                        Meaning: Unexpected failure.                   02327000
*                        Action: Refer to the action provided with the  02328000
*                        specific reason code.                       */ 02329000
*DCL IFAWIC_Rsn_CompError BIT(32) Constant('00001001'X) ; /*            02330000
*                        Meaning: Unexpected failure. The state of the  02331000
*                        request is unpredictable.                      02332000
*                        Action: Contact your system programer to       02333000
*                        report the problem to IBM service           */ 02334000
*/* End of IFAWIC Return and Reason Code definitions                 */ 02335000
*                                                                       02336000
* /*******************************************************************/ 02337000
* /*                                                                 */ 02338000
* /* IFAWIC Warning map. The high 2 bytes of the reason code         */ 02339000
* /*  for the IFAWIC service when the return code is                 */ 02340000
* /*  IFAWIC_Rc_Warning is mapped as such.                           */ 02341000
* /*                                                                 */ 02342000
* /*******************************************************************/ 02343000
* Dcl 1 Wic_Warning_Rsn Char(4) Bdy(Word) Type,                         02344000
*       3 Wic_Warning_Flags Bit(16) Union,                              02345000
*        4 Wic_Warning_FlagsRegister Bit(16),                           02346000
*         5 Wic_Warning_WicNotFullyAvail Bit(8), /* Flags               02347000
*                        indicating the WIC service is not fully        02348000
*                        available for processing.  For                 02349000
*                        IFAWIC REQUEST=REGISTER, when the return code  02350000
*                        is IFAWIC_Rc_Warning and bits 0-7 of the       02351000
*                        reason code contain any bit on, the WIC        02352000
*                        services are not fully available.  The program 02353000
*                        should not write instrumentation data to its   02354000
*                        instrumentation buffer because the program's   02355000
*                        WIC exit routine is not likely to be called.   02356000
*                                                                    */ 02357000
*%/******************************************************************/; 02358000
*%/* PLX programs can check Wic_Warning_WicNotFullyAvail = 0 to     */; 02359000
*%/* verify if they should start instrumenting on return code 4     */; 02360000
*%/******************************************************************/; 02361000
*          6 Wic_Warning_WicFeatureNotEnabled Bit(1), /* The            02362000
*                        WorkloadIntCorr product is not part of the     02363000
*                        product enablement policy, see                 02364000
*                        IFAWIC_Rsn_WicFeatureNotEnabled             */ 02365000
*          6 Wic_Warning_SubtypeNotCollected Bit(1), /* SMF             02366000
*                        parameters did not specify WIC, see            02367000
*                        IFAWIC_Rsn_SubtypeNotCollected              */ 02368000
*          6 * Bit(6), /* Reserved for future use                    */ 02369000
*         5 Wic_Warning_FlagsRegisterGeneral Bit(8), /* General flags   02370000
*                        for register requests                       */ 02371000
*          6 Wic_Warning_AlreadyRegistered Bit(1), /* See               02372000
*                        IFAWIC_Rsn_AlreadyRegistered                */ 02373000
*          6 Wic_Warning_Buffer4kPagesDifferent Bit(1), /* A buffer 4k  02374000
*                        Pages larger or smaller than a previous        02375000
*                        register was detected, see                     02376000
*                        IFAWIC_Rsn_Buffer4kPagesSmaller or             02377000
*                        IFAWIC_Rsn_Buffer4kPagesLarger              */ 02378000
*          6 Wic_Warning_ExitVersionIgnored Bit(1), /* Exit version     02379000
*                        was less than current, see                     02380000
*                        IFAWIC_Rsn_ExitVersionIgnored               */ 02381000
*          6 * Bit(5), /* Reserved for future use                    */ 02382000
*        4 Wic_Warning_FlagsDeRegister Bit(16),                         02383000
*         5 Wic_Warning_FlagsDeRegisterByte1 Bit(8),                    02384000
*          6 * Bit(8), /* Reserved for future use                    */ 02385000
*         5 Wic_Warning_FlagsDeRegisterGeneral Bit(8),                  02386000
*          6 Wic_Warning_NotRegistered Bit(1), /* See                   02387000
*                        IFAWIC_Rsn_NotRegistered                    */ 02388000
*          6 * Bit(7), /* Reserved for future use                    */ 02389000
*       3 Wic_Warning_Code Fixed(16);                                   02390000
*                                                                       02391000
* Dcl Wic_NotFullyAvail_LowHighmask Bit(16) Constant('FF00'x); /* For   02392000
*                        IFAWIC REQUEST=REGISTER, when the return code  02393000
*                        is IFAWIC_Rc_Warning and bits 0-7 of the       02394000
*                        reason code contain any bit on, the WIC        02395000
*                        services are not fully available.  The program 02396000
*                        should not write instrumentation data to its   02397000
*                        instrumentation buffer because the program's   02398000
*                        WIC exit routine is not likely to be called.   02399000
*                        Assembler programs can use 'TMLH               02400000
*                        0,Wic_NotFullyAvail_LowHighMask' to check for  02401000
*                        this condition when the return code is         02402000
*                        IFAWIC_Rc_Warning                           */ 02403000
*                                                                       02404000
* /*******************************************************************/ 02405000
* /* WIC ENF Qual Parameter map:                                     */ 02406000
* /*  The mapping of how to set the QUAL parameter for ENFREQ when   */ 02407000
* /*  setting a listener exit for ENF signal 85.                     */ 02408000
* /*                                                                 */ 02409000
* /* On ENFREQ requests, Programs should set the QUAL parameter with */ 02410000
* /*  the low halfword as the program's subtype number and use a     */ 02411000
* /*  QMASK=(BYTE3,BYTE4).  This will allow the program to get all   */ 02412000
* /*  signals for their subtype.                                     */ 02413000
* /*******************************************************************/ 02414000
* Dcl                                                                   02415000
*   1 WicEnfQual Char(4) Bdy(Word) TYPE,                                02416000
*     3 WicEnfQual_Code Fixed(8),   /* Code for ENF85 request        */ 02417000
*     3 * Char(1),                  /* reserved for future use       */ 02418000
*     3 WicEnfQual_Subtype Fixed(15) Unsigned, /* Subtype number     */ 02419000
*     3 *       Char(0) Bdy(Word);                                      02420000
*                                                                       02421000
* /*******************************************************************/ 02422000
* /* WIC ENF Qual Codes                                              */ 02423000
* /*******************************************************************/ 02424000
* Dcl WicEnf_Code_InstrumentationChange Fixed(8) Constant('01'x); /*    02425000
*                                      This ENF is issued when SMF      02426000
*                                      requests a change in             02427000
*                                      instrumentation status for the   02428000
*                                      WIC exploiter.  The listener     02429000
*                                      should check the WicENF          02430000
*                                      parameter list field             02431000
*                                      WicEnf_InstrumentationRequested  02432000
*                                      to verify if the program should  02433000
*                                      start or stop instrumenting.     02434000
*                                      This condition occurs when SMF   02435000
*                                      noticed a system change that     02436000
*                                      indicates that affects whether   02437000
*                                      the WIC exit routine will or     02438000
*                                      will not be called.          */  02439000
* Dcl WicEnf_Code_RegisterAvailable Fixed(8) Constant('02'x); /* This   02440000
*                                      ENF was issued when the SMF WIC  02441000
*                                      parameter was specified and      02442000
*                                      IFAWIC REQUEST=REGISTER may      02443000
*                                      succeed. Check WicEnf parameter  02444000
*                                      list field                       02445000
*                                      WicEnf_RegisterIsAvailable to    02446000
*                                      verify the most current status.  02447000
*                                      If possible, alert a             02448000
*                                      task to issue IFAWIC             02449000
*                                      REQUEST=REGISTER to begin using  02450000
*                                      WIC services.                 */ 02451000
*                                                                       02452000
* /*******************************************************************/ 02453000
* /* WIC ENF listener exit parameters:                               */ 02454000
* /*  The address of WicENF is in the first word of the 6 word       */ 02455000
* /*   parameter list passed to each enf listener exit in register 1.*/ 02456000
* /*******************************************************************/ 02457000
* Dcl                                                                   02458000
*   1 WicEnf Bdy(DWord) TYPE,                                           02459000
*     3 WicEnf_Eye Char(8),         /* 'WICENF  '                    */ 02460000
*     3 WicEnf_Version Fixed(16),   /* Version of WicEnf             */ 02461000
*     3 WicEnf_Subtype Fixed(15) Unsigned, /* Subtype number         */ 02462000
*     3 WicEnf_Flags Bit(8),        /* Status Flags                  */ 02463000
*       5 WicEnf_InstrumentationRequested Bit(1), /* When on,           02464000
*                                      instrumentation is requested for 02465000
*                                      this subtype.                    02466000
*                                      When off, instrumentation is not 02467000
*                                      requested for this subtype.   */ 02468000
*       5 WicEnf_RegisterIsAvailable Bit(1), /* When on, SMF            02469000
*                                      parameter WIC is specified and   02470000
*                                      IFAWIC REQUEST=REGISTER is       02471000
*                                      available to be re-tried.  When  02472000
*                                      off, SMF parameter NOWIC is      02473000
*                                      specified and IFAWIC REQUEST=    02474000
*                                      REGISTER is likely to fail with  02475000
*                                      return code IFAWIC_Rc_EnvError   02476000
*                                      reason code                      02477000
*                                      IFAWIC_Rsn_SMFNOWICSpecified  */ 02478000
*       5 WicEnf_ExitAddError Bit(1), /* When on, SMF encountered an    02479000
*                                      error adding the exit for the    02480000
*                                      subtype. This is likely becase   02481000
*                                      an exit of the same name was     02482000
*                                      added to WIC processing for      02483000
*                                      another subtype.  Specify unique 02484000
*                                      names for exit routines for each 02485000
*                                      subtype.  When this bit is on,   02486000
*                                      WicEnf_InstrumentationRequested  02487000
*                                      is off                        */ 02488000
*     3 * Char(3),                  /* Reserved for future use       */ 02489000
*     3 *       Char(0) Bdy(Word);                                      02490000
*                                                                       02491000
* Dcl WicEnf_EyeConst Char(8) Constant('WICENF  '); /* Eye catcher for  02492000
*                                      WicEnf                        */ 02493000
* Dcl WicEnf_VerConst Fixed(16) Constant(WicEnf_Ver1Const); /* Current  02494000
*                                      version for WicEnf            */ 02495000
* Dcl WicEnf_Ver1Const Fixed(16) Constant(1); /* Version 1 constant  */ 02496000
*                                                                       02497000
*/********************************************************************/ 02498000
*/* Parameter lists for WIC Exit Services                            */ 02499000
*/*                                                                  */ 02500000
*/* Note: Unused and/or reserved areas within the WIC exit servies   */ 02501000
*/*       parameter list must be initialized to binary zeros.        */ 02502000
*/********************************************************************/ 02503000
*                                                                       02504000
* /*******************************************************************/ 02505000
* /* ASM users can access the WIC Exit Services using the CALL macro */ 02506000
* /*                                                                 */ 02507000
* /* For example:                                                    */ 02508000
* /*        LG 15,WicParm_WICSrv_GetNextBufferPtr                    */ 02509000
* /*        CALL (15),(WicNBParms,WicSrvRet,WicSrvRsn),MF=(E,PLAREA) */ 02510000
* /* ...                                                             */ 02511000
* /* WicNBParms DS CL(L'WicNB_ParmList)                              */ 02512000
* /* WicSrvRet DS F                                                  */ 02513000
* /* WicSrvRsn DS F                                                  */ 02514000
* /* PLAREA DS 3D                                                    */ 02515000
* /* ...                                                             */ 02516000
* /*                                                                 */ 02517000
* /*******************************************************************/ 02518000
*                                                                       02519000
* %If IFAWICCB_CBGEN ^= 'YES' &                                         02520000
*     IFAWICCB_ServEntries ^= 'NO' %Then                                02521000
*  %Do;                                                                 02522000
*                                                                       02523000
* /* Get Next Buffer WIC Exit Service                                */ 02524000
* Dcl                                                                   02525000
*   IFAWGetNextBuffer ENTRY(                                            02526000
*      WicGetNextParms := Isa(WicNB_ParmList) Input Output              02527000
*     ,WicGetNextRetCode := Fixed(32) Output                            02528000
*     ,WicGetNextRsnCode := Fixed(32) Output                            02529000
*     ) BASED(WicParm_WICSrv_GetNextBufferPtr) VALRG(*)                 02530000
*                                 OPTIONS(AMODE(64),RMODE(ANY)); /*     02531000
*                                     Entry point to get next buffer    02532000
*                                     WIC service                    */ 02533000
*                                                                       02534000
*                                                                       02535000
* /* Get Clear Buffer WIC Exit Service                               */ 02536000
* Dcl                                                                   02537000
*   IFAWClearBuffer ENTRY(                                              02538000
*      WicClearBufferParms := Isa(WicCB_ParmList) Input                 02539000
*     ,WicClearBufferRetCode := Fixed(32) Output                        02540000
*     ,WicClearBufferRsnCode := Fixed(32) Output                        02541000
*     ) BASED(WicParm_WICSrv_ClearBufferPtr) VALRG(*)                   02542000
*                                 OPTIONS(AMODE(64),RMODE(ANY)); /*     02543000
*                                     Entry point to clear buffer       02544000
*                                     WIC service                    */ 02545000
*                                                                       02546000
* /* Get Build and Write SMF98 Record WIC Exit Service               */ 02547000
* Dcl                                                                   02548000
*   IFAWBuildAndWriteSMF98 ENTRY(                                       02549000
*      WicBuildandWriteSMF98Parms   := Isa(WicWR_ParmList) Input        02550000
*     ,WicBuildandWriteSMF98RetCode := Fixed(32) Output                 02551000
*     ,WicBuildandWriteSMF98RsnCode := Fixed(32) Output                 02552000
*     ) BASED(WicParm_WICSrv_WriteSMF98Ptr) VALRG(*)                    02553000
*                                 OPTIONS(AMODE(64),RMODE(ANY)); /*     02554000
*                                     Entry point to build and write    02555000
*                                     SMF98 WIC service              */ 02556000
*  %End;                                                                02557000
*                                                                       02558000
*/********************************************************************/ 02559000
*/* Parameter list for the GetNextBuffer service                     */ 02560000
*/*                                                                  */ 02561000
*/* Note: Unused and/or reserved areas within the WIC exit services  */ 02562000
*/*       parameter list must be initialized to binary zeros.        */ 02563000
*/********************************************************************/ 02564000
*Dcl 1 WicNB_ParmList Bdy(DWord) Type, /* Parameter list for the        02565000
*                                       GetNextBuffer Service        */ 02566000
*     3 WicNB_Version      Fixed(16), /* Version identification      */ 02567000
*     3 WicNB_inoutAsid    Fixed(15), /* Address space ID.              02568000
*                                       Caller must initialize this to  02569000
*                                       zero for the initial invocation 02570000
*                                       of the GetNextBuffer service.   02571000
*                                       When the GetNextBUffer service  02572000
*                                       completes with a return code    02573000
*                                       of WicSrv_Rc_Success this will  02574000
*                                       contain the address space id    02575000
*                                       for the WIC buffer returned in  02576000
*                                       WicNB_outBuffer@.  For          02577000
*                                       subsequent invocations of the   02578000
*                                       GetNextBuffer service the       02579000
*                                       caller should not change the    02580000
*                                       content of WicNB_inoutAsid in   02581000
*                                       order to obtain the next WIC    02582000
*                                       buffer.  When there are no      02583000
*                                       remaining buffers, the service  02584000
*                                       completes with an appropriate   02585000
*                                       return and reason code.      */ 02586000
*     3 wicNB_Reserved1    Char(20), /* Reserved                     */ 02587000
*     3 WicNB_OutArea Bdy(DWord),    /* Output area                  */ 02588000
*      5 WicNB_ASInfo Bdy(DWord),    /* Address information          */ 02589000
*       7 WicNB_outJobname  Char(8) Bdy(DWord), /* Jobname for Address  02590000
*                                       Space Id (WicNB_inoutAsid)   */ 02591000
*       7 WicNB_outJobPriorityArea Char(8) Bdy(DWord), /* Job priority  02592000
*                                       area                         */ 02593000
*        9 WicNB_outJobPriorityBucket Fixed(16), /*                     02594000
*                                      Priority bucket - describes      02595000
*                                      relative priority of the         02596000
*                                      address space. When:             02597000
*                                      1 - SVT_kHiPriorityBucketIndex   02598000
*                                      2 - SVT_kMedPriorityBucketIndex  02599000
*                                      3 - SVT_kLowPriorityBucketIndex  02600000
*                                      4 - SVT_kDiscPriorityBucketIndex 02601000
*                                      See IHASVT for description of    02602000
*                                      the above constants           */ 02603000
*        9 WicNB_outJobSizeBucket(Wic_kProcClassIndex_CP:               02604000
*                                 Wic_kProcClassIndex_zIIP) Fixed(16),  02605000
*                                   /* Sub buckets for each of the      02606000
*                                      priority buckets for the address 02607000
*                                      space.                        */ 02608000
*      5 WicNB_outBufferAddr Ptr(64); /* Starting address of the WIC    02609000
*                                      buffer for this ASID             02610000
*                                      (WicNB_inoutASID)             */ 02611000
*                                                                       02612000
*                                                                       02613000
*/********************************************************************/ 02614000
*/* Constants for GetNextBuffer Service                              */ 02615000
*/********************************************************************/ 02616000
*Dcl WicNB_#Ver Fixed(31) Constant(WicNB_#Ver1); /* Current version  */ 02617000
*Dcl WicNB_#MaxVer Fixed(31) Constant(WicNB_#Ver1);                     02618000
*Dcl WicNB_#Ver1 Fixed(31) Constant(1);                                 02619000
*                                                                       02620000
*Dcl Wic_kProcClassIndex_CP   Fixed(16) Constant(0); /* Local           02621000
*                                      constant for CP proc class index 02622000
*                                      to avoid having to include       02623000
*                                      IHAPSA                        */ 02624000
*Dcl Wic_kProcClassIndex_zIIP Fixed(16) Constant(2); /* Local           02625000
*                                      constant for zIIP proc class     02626000
*                                      index to avoid having to include 02627000
*                                      IHAPSA                        */ 02628000
*                                                                       02629000
*                                                                       02630000
*/********************************************************************/ 02631000
*/* Parameter list for the Clear Buffer service                      */ 02632000
*/*                                                                  */ 02633000
*/* Note: Unused and/or reserved areas within the WIC exit services  */ 02634000
*/*       parameter list must be initialized to binary zeros.        */ 02635000
*/********************************************************************/ 02636000
*Dcl 1 WicCB_ParmList Bdy(DWord) Type, /* Input parameter list for the  02637000
*                                       Clear Buffer Service         */ 02638000
*     3 WicCB_Version     Fixed(16), /* Version identification       */ 02639000
*     3 WicCB_inAsid      Fixed(15),          /* Address space id    */ 02640000
*     3 WicCB_Reserved1   Char(4),   /* Reserved for alignment       */ 02641000
*     3 WicCB_inStartAddrBufToClear Ptr(64), /* Address within the WIC  02642000
*                                       buffer to clear for the subtype 02643000
*                                       and the given address space id  02644000
*                                       (WicCB_inAsid).  The WIC buffer 02645000
*                                       address is obtained by calling  02646000
*                                       the get next buffer service  */ 02647000
*     3 WicCB_inBufLenToClear Fixed(32); /* Length of the WIC buffer to 02648000
*                                       be cleared from the starting    02649000
*                                       WIC buffer address as specified 02650000
*                                       by WicCB_inStartAddrBufToClear  02651000
*                                                                    */ 02652000
*                                                                       02653000
*/********************************************************************/ 02654000
*/* Constants for ClearBuffer Service                                */ 02655000
*/********************************************************************/ 02656000
*Dcl WicCB_#Ver Fixed(31) Constant(WicCB_#Ver1); /* Current version  */ 02657000
*Dcl WicCB_#MaxVer Fixed(31) Constant(WicCB_#Ver1);                     02658000
*Dcl WicCB_#Ver1 Fixed(31) Constant(1);                                 02659000
*                                                                       02660000
*                                                                       02661000
*/********************************************************************/ 02662000
*/* Parameter list for the Build and Write SMF 98.x Record Service   */ 02663000
*/*                                                                  */ 02664000
*/* Note: Unused and/or reserved areas within the WIC exit services  */ 02665000
*/*       parameter list must be initialized to binary zeros.        */ 02666000
*/********************************************************************/ 02667000
*Dcl 1 WicWR_ParmList Bdy(DWord) Type, /* Input parameter list for the  02668000
*                                      Write SMF 98.x build and write   02669000
*                                      service                       */ 02670000
*     3 WicWR_Version   Fixed(16), /* Parameter list version       */   02671000
*     3 WicWR_Rsvd02      Char(6),  /* Reserved for alignment        */ 02672000
*                                                                       02673000
*     /***************************************************************/ 02674000
*     /*                                                             */ 02675000
*     /* SMF 98 Record subtype information parameter list            */ 02676000
*     /*                                                             */ 02677000
*     /* All SMF 98 subtype records (SMF 98.x) MUST be compatibly    */ 02678000
*     /* changed.  The WicWR_ReleaseIndex (RI),                      */ 02679000
*     /* WicWR_WithinReleaseIndex (WRI), and                         */ 02680000
*     /* WicWR_PrototypeIndex (PI) form a macro version that is of   */ 02681000
*     /* the form RI.WRI.PI.  Each SMF 98 subtype (SMF 98.x) has     */ 02682000
*     /* its own independent macro version.  For products with       */ 02683000
*     /* multiple levels installed, the macro version ensures the    */ 02684000
*     /* latest mapping macro is used to analyze the SMF 98 subtype  */ 02685000
*     /* records.                                                    */ 02686000
*     /*                                                             */ 02687000
*     /* IBM expects all exploiters to follow these rules for        */ 02688000
*     /* setting RI, WRI, and PI:                                    */ 02689000
*     /*  1.  For any shippped support, PI must be zero.             */ 02690000
*     /*                                                             */ 02691000
*     /*  2.  For the first delivery of an SMF 98 subtype, the       */ 02692000
*     /*      indices MUST be set to RI=1, WRI=0, PI=0 across all    */ 02693000
*     /*      levels.                                                */ 02694000
*     /*                                                             */ 02695000
*     /*  3.  When adding new data to an existing SMF 98 subtype     */ 02696000
*     /*      record:                                                */ 02697000
*     /*   a. For a new release or version RI is updated to RI+1.    */ 02698000
*     /*      WRVI and PI should both be set to zero.                */ 02699000
*     /*   b. For an existing release and version, RI is unchanged,  */ 02700000
*     /*      WRVI is updated to WRI+1, and PI is set to 0.          */ 02701000
*     /*                                                             */ 02702000
*     /*  4.  For prototype testing (e.g. ++APAR, developer supplied */ 02703000
*     /*      link edit) that may or may not be delivered, RI and    */ 02704000
*     /*      WRVI are to remain unchanged.  PI is to be set to a    */ 02705000
*     /*      non-zero value (e.g. PI=1).  This mapping macro can be */ 02706000
*     /*      used to analyze SMF98.x records with matching          */ 02707000
*     /*      RI.WRI.PI and earlier compatible records where PI=0    */ 02708000
*     /*      with the same or lower RI and/or WRI settings.         */ 02709000
*     /*      Different PI values for the same RI and WRVI values    */ 02710000
*     /*      are treated as incompatible test changes.              */ 02711000
*     /*                                                             */ 02712000
*     /* Note: The WicWR_SubtypeInfo is a one to one mapping of      */ 02713000
*     /*       SMF98_SubtypeInfo in IHAHR098.  Changes to this       */ 02714000
*     /*       WicWR_SubtypeInfo will require the same changes to    */ 02715000
*     /*       the SMF98_SubtypeInfo mapping.                        */ 02716000
*     /*                                                             */ 02717000
*     /***************************************************************/ 02718000
*     3 WicWR_SubtypeInfo,          /* SMF 98.x subtype information     02719000
*                                      parameter list                */ 02720000
*      5 WicWR_ReleaseIndex Fixed(16), /* The current release           02721000
*                                      version index value           */ 02722000
*      5 WicWR_WithinReleaseIndex Fixed(16), /* The current             02723000
*                                      within release index value    */ 02724000
*      5 WicWR_PrototypeIndex Fixed(16), /* The current prototype       02725000
*                                      index value - IBM use only    */ 02726000
*      5 WicWR_Rsvd0D Char(2),      /* Reserved - IBM use only       */ 02727000
*      5 WicWR_ProdLevel Char(16), /* The program product level.        02728000
*                                      - Bytes 0-7 contain the product  02729000
*                                        name                           02730000
*                                      - Bytes 8-15 contain the FMID */ 02731000
*     /***************************************************************/ 02732000
*     /*                                                             */ 02733000
*     /* Aggregate buckets parameter list (mapped by                 */ 02734000
*     /* WicWR_AggregateBucketParmList)                              */ 02735000
*     /*                                                             */ 02736000
*     /* Up to two aggregate buckets are supported.  IFAWIC exit     */ 02737000
*     /* exploiters may want to utilize two aggregate buckets, for   */ 02738000
*     /* example, one aggregate bucket can be used for global or     */ 02739000
*     /* non-CP related information, whereas, a second aggregate     */ 02740000
*     /* bucket can be used for CP related information.              */ 02741000
*     /*                                                             */ 02742000
*     /*                                                             */ 02743000
*     /* Notes:                                                      */ 02744000
*     /* 1. For additional information on the structure of the       */ 02745000
*     /*    aggregate bucket, see the definition of WicWR_AggBucket  */ 02746000
*     /*    in this mapping macro.  For an understanding of the      */ 02747000
*     /*    output of the aggregate bucket in an SMF98.x record see  */ 02748000
*     /*    the defintion SMF98AggBucket in IHAHR098.                */ 02749000
*     /*                                                             */ 02750000
*     /* 2. The number of aggregate bucket entries (instances) must  */ 02751000
*     /*    be either 25 or 50.  This represents the maximum number  */ 02752000
*     /*    of instances for either one or two processor classes,    */ 02753000
*     /*    five job priority levels, and five job size levels.      */ 02754000
*     /*    1 processor class by 5 job priority levels by 5 job size */ 02755000
*     /*    levels equates to 25 aggregate bucket instances.  2      */ 02756000
*     /*    processor classes by 5 job priority levels by 5 job      */ 02757000
*     /*    priority levels by 5 job size levels equates to 50       */ 02758000
*     /*    aggregate bucket instances.  (See WicWR_k* constants.)   */ 02759000
*     /*                                                             */ 02760000
*     /* 3. The aggregate bucket length defines the length of the    */ 02761000
*     /*    exploiter's aggregate bucket for one entry (i.e. the     */ 02762000
*     /*    length includes the length of the contributors, the      */ 02763000
*     /*    record area and internal area).  See WicWR_AggBucket     */ 02764000
*     /*    definition.                                              */ 02765000
*     /*                                                             */ 02766000
*     /* 4. The aggregate bucket write length defines the length of  */ 02767000
*     /*    the aggregate bucket entry that will be written to the   */ 02768000
*     /*    SMF98.x record.  It includes the length of the           */ 02769000
*     /*    contributors plus the length of the record area.  See    */ 02770000
*     /*    WicWR_AggBucket definition.                              */ 02771000
*     /*                                                             */ 02772000
*     /* 5. The write length of one aggregate bucket cannot be       */ 02773000
*     /*    greater than the length of one aggregate bucket entry    */ 02774000
*     /*    (instance).                                              */ 02775000
*     /*                                                             */ 02776000
*     /***************************************************************/ 02777000
*     3 WicWR_AggBucketParmList1 Char(24) Bdy(DWord), /* First          02778000
*                                      aggregate bucket parameter list  02779000
*                                                                    */ 02780000
*      5 WicWR_AggBucketParmList1_IsA Isa(WicWR_AggBucketParmList), /*  02781000
*                                      First aggregate bucket           02782000
*                                      parameter list                */ 02783000
*     3 WicWR_AggBucketParmList2 Char(24) Bdy(DWord), /* Second         02784000
*                                      aggregate bucket parameter list  02785000
*                                                                    */ 02786000
*      5 WicWR_AggBucketParmList2_IsA Isa(WicWR_AggBucketParmList), /*  02787000
*                                      Second aggregate bucket          02788000
*                                      parameter list                */ 02789000
*                                                                       02790000
*                                                                       02791000
*     /***************************************************************/ 02792000
*     /*                                                             */ 02793000
*     /* Exception bucket parameter list                             */ 02794000
*     /*                                                             */ 02795000
*     /* Only one expection bucket is supported.                     */ 02796000
*     /*                                                             */ 02797000
*     /* Note:                                                       */ 02798000
*     /* 1. For additional information on the structure of the       */ 02799000
*     /*    exception bucket, see the definition of WicWR_ExcBucket  */ 02800000
*     /*    in this mapping macro.  For an understanding of the      */ 02801000
*     /*    output of the exception bucket in an SMF98.x record see  */ 02802000
*     /*    the definition SMF98JobIdx and SMF98JobList in IHAHR098. */ 02803000
*     /*                                                             */ 02804000
*     /* 2. The number of exception bucket entries (instances) must  */ 02805000
*     /*    be a multiple of 25.  To calculate the number of         */ 02806000
*     /*    exception bucket entries, multiply the number of         */ 02807000
*     /*    processor classes the exception bucket represents (1 -   */ 02808000
*     /*    for just CP, or 2 - CPs and zIIPs) by 5 job priority     */ 02809000
*     /*    levels by 5 job size levels by the number of activities  */ 02810000
*     /*    defined for the exception bucket.  For example, if both  */ 02811000
*     /*    CP and zIIP processor classes and 4 activities are       */ 02812000
*     /*    represented in an exception bucket, then the total       */ 02813000
*     /*    number of entries is 2*5*5*4 or 200.  (See WicWR_k*      */ 02814000
*     /*    constants.)                                              */ 02815000
*     /*                                                             */ 02816000
*     /* 3. The exception bucket entry length defines the length of  */ 02817000
*     /*    the exploiter's exception bucket for one entry (i.e.     */ 02818000
*     /*    this includes the length of the ASID, Job Name, record   */ 02819000
*     /*    area and internal area).  See WicWR_ExpBucket            */ 02820000
*     /*    definition.                                              */ 02821000
*     /*                                                             */ 02822000
*     /* 4. The write length of one exception bucket cannot be       */ 02823000
*     /*    greater than the length of one exception bucket entry    */ 02824000
*     /*    (instance).                                              */ 02825000
*     /*                                                             */ 02826000
*     /***************************************************************/ 02827000
*     3 WicWR_ExceptionBucketParmList Bdy(DWord), /* Exceptional        02828000
*                                       bucket parameter list        */ 02829000
*      5 WicWR_ExcBucketNumOfEntries Fixed(31),  /* The number of       02830000
*                                      entries in the exceptional       02831000
*                                      bucket, must be a multiple of 25 02832000
*                                                                    */ 02833000
*      5 WicWR_ExcBucketNumOfActivities Fixed(31),  /* The number of    02834000
*                                      activities for the exception     02835000
*                                      bucket                        */ 02836000
*      5 WicWR_ExcBucketEntryLength Fixed(31), /* The total length of   02837000
*                                      one entry (instance) in the      02838000
*                                      exception bucket exploiter area  02839000
*                                                                    */ 02840000
*      5 WicWR_ExcBucketEntryWriteLength Fixed(31), /* The write length 02841000
*                                      one entry in the exception       02842000
*                                      bucket exploiter area         */ 02843000
*      5 WicWR_ExcBucketStartAddr Ptr(64); /* Starting address of       02844000
*                                      the exceptional bucket - see     02845000
*                                      WicWR_ExcBucket               */ 02846000
*                                                                       02847000
*/********************************************************************/ 02848000
*/* Constants for Write SMF 98.x Record Service                      */ 02849000
*/********************************************************************/ 02850000
*Dcl WicWR_#Ver Fixed(31) Constant(WicWR_#Ver1); /* Current version  */ 02851000
*Dcl WicWR_#MaxVer Fixed(31) Constant(WicWR_#Ver1);                     02852000
*Dcl WicWR_#Ver1 Fixed(31) Constant(1);                                 02853000
*                                                                       02854000
*/********************************************************************/ 02855000
*/*                                                                  */ 02856000
*/* Aggregate bucket parameter list mapping.  Use this mapping for   */ 02857000
*/* each of the aggregate buckets in the WIC build and write SMF98.x */ 02858000
*/* record service.                                                  */ 02859000
*/*                                                                  */ 02860000
*/********************************************************************/ 02861000
*Dcl 1 WicWR_AggBucketParmList Type, /* Aggregate bucket                02862000
*                                      parameter lists               */ 02863000
*     3 WicWR_AggBucketNumOfEntries Fixed(31),  /* The number of        02864000
*                                      entries for this aggregate       02865000
*                                      bucket                        */ 02866000
*     3 WicWR_AggBucketEntryLength Fixed(31), /* The total length of    02867000
*                                      one entry (instance) in the      02868000
*                                      aggregate bucket exploiter area  02869000
*                                                                    */ 02870000
*     3 WicWR_AggBucketEntryWriteLength Fixed(31), /* The write length  02871000
*                                      of one entry in the aggregate    02872000
*                                      bucket exploiter area         */ 02873000
*     3 WicWR_Rsvd2B Char(4),       /* Reserved for alignment        */ 02874000
*     3 WicWR_AggBucketStartAddr Ptr(64); /* Starting address of the    02875000
*                                      aggregate bucket - see           02876000
*                                      WicWR_AggBucket               */ 02877000
*                                                                       02878000
*/********************************************************************/ 02879000
*/*                                                                  */ 02880000
*/* WIC SMF98.x Aggregate Bucket                                     */ 02881000
*/* ----------------------------                                     */ 02882000
*/*                                                                  */ 02883000
*/* An IFAWIC exploiter receives a job-specific buffer and           */ 02884000
*/* instruments simple activities into the job-specific buffer       */ 02885000
*/* during each five (5) second interval.                            */ 02886000
*/*                                                                  */ 02887000
*/* An IFAWIC exploiter registers a WIC exit, through the IFAWIC     */ 02888000
*/* REGISTER service, that is executed at the end of a five (5)      */ 02889000
*/* second interval.  For each job-specific buffer, the exploiter    */ 02890000
*/* exit routine summarizes activities across jobs.                  */ 02891000
*/*                                                                  */ 02892000
*/* Summarizing activities across jobs is accomplished by use of an  */ 02893000
*/* aggregate bucket.  The exploiter exit aggregates activities into */ 02894000
*/* the aggregate bucket with matching job attributes.               */ 02895000
*/*                                                                  */ 02896000
*/* IFAWIC exploiters must define an aggregate bucket with the first */ 02897000
*/* 2 bytes defining the number of contributors (as defined below)   */ 02898000
*/* followed by a data area.                                         */ 02899000
*/*                                                                  */ 02900000
*/* The aggregate bucket contains "simple" activities (e.g. totals)  */ 02901000
*/* and "compound" activities (e.g. averages) across jobs.           */ 02902000
*/*                                                                  */ 02903000
*/* A "simple" activity is a job instrument activity type that is    */ 02904000
*/* instrumented during a 5 second interval, examples include        */ 02905000
*/* number of transactions, total CPU time, total response time,     */ 02906000
*/* etc..                                                            */ 02907000
*/*                                                                  */ 02908000
*/* A "compound" activity is a job instrument activity type that is  */ 02909000
*/* a combiniation of multiple simple activities, compound           */ 02910000
*/* activities are calculated at the end of the 5 second             */ 02911000
*/* interval, examples include average CPU time per transaction,     */ 02912000
*/* average response time per transaction, etc..                     */ 02913000
*/*                                                                  */ 02914000
*/* The aggregate bucket is defined as follows:                      */ 02915000
*/* - Contributors - a required two-byte field that the number of    */ 02916000
*/*   contributors or address spaces that contribute the given       */ 02917000
*/*   bucket entry.                                                  */ 02918000
*/*                                                                  */ 02919000
*/* - Data Area - an exploiter defined area that contains            */ 02920000
*/*   "record" and "internal" activities                             */ 02921000
*/*                                                                  */ 02922000
*/*   - "Record" activities are activities that include simple and   */ 02923000
*/*     compound activities.   This information will be hardened or  */ 02924000
*/*     included in the SMF98.x record.  By design "Record"          */ 02925000
*/*     activities must be grouped together before "internal"        */ 02926000
*/*     activities.                                                  */ 02927000
*/*                                                                  */ 02928000
*/*   - "Internal" activities are activities that can include simple */ 02929000
*/*     and compound activities.   This information will NOT be      */ 02930000
*/*     hardened or NOT included in the SMF98.x record.  By design   */ 02931000
*/*     "Internal" must be grouped together and after "record"       */ 02932000
*/*     activities.                                                  */ 02933000
*/*                                                                  */ 02934000
*/* A minimum of one and a maximum of two aggregate buckets can be   */ 02935000
*/* supplied to the SMF98.x build and write service.  The aggregate  */ 02936000
*/* bucket can be thought of as a "table" of entries, with each      */ 02937000
*/* entry representing an instance of an aggregate bucket.           */ 02938000
*/* Instances must be defined in ascending order first by CPU type,  */ 02939000
*/* then by job priority, and finally by job size, as shown below:   */ 02940000
*/*                                                                  */ 02941000
*/*                           +------------------------------------+ */ 02942000
*/*                           !           Aggregate Bucket         ! */ 02943000
*/*                           !        (Supplied by Exploiter)     ! */ 02944000
*/*                           !                                    ! */ 02945000
*/*                           !            WicWR_AggBucket         ! */ 02946000
*/* +-------------------------+--------------+---------------------+ */ 02947000
*/* !                         !           Exploiter Area           ! */ 02948000
*/* !         Indices         !                                    ! */ 02949000
*/* !      (Table Entry)      +--------------+---------------------+ */ 02950000
*/* !                         !              !       Data          ! */ 02951000
*/* +-------------------------+              +---------+-----------+ */ 02952000
*/* ! CPU  !   Job    !  Job  ! Contributors ! Record  ! Internal  ! */ 02953000
*/* ! Type ! Priority !  Size !              !         !           ! */ 02954000
*/* ! (0-1)!  (0-4)   ! (0-4) !              !         !           ! */ 02955000
*/* +------+----------+-------+--------------+---------+-----------+ */ 02956000
*/*  CP (0)  ALL (0)   ALL(0)        5                ...            */ 02957000
*/*  CP (0)  ALL (0)   LG (1)        0                ...            */ 02958000
*/*  CP (0)  ALL (0)   MED(2)        2                ...            */ 02959000
*/*  CP (0)  ALL (0)   SM (3)        0                ...            */ 02960000
*/*  CP (0)  ALL (0)   TINY(4)       0                ...            */ 02961000
*/*  CP (0)  CRIT (1)  ALL(0)        3                ...            */ 02962000
*/*  CP (0)  CRIT (1)  LG (1)        2                ...            */ 02963000
*/*  CP (0)  CRIT (1)  MED(2)        1                ...            */ 02964000
*/*  CP (0)  CRIT (1)  SM (3)        0                ...            */ 02965000
*/*  CP (0)  CRIT (1)  TINY(4)       0                ...            */ 02966000
*/*  CP (0)  HIGH (2)  ALL(0)        2                ...            */ 02967000
*/*   ...                                             ...            */ 02968000
*/*  CP (0)  LOW (3)   LG (1)        0                ...            */ 02969000
*/*  CP (0)  LOW (3)   MED(2)        2                ...            */ 02970000
*/*  CP (0)  LOW (3)   SM (3)        0                ...            */ 02971000
*/*  CP (0)  LOW (3)   TINY(4)       0                ...            */ 02972000
*/*  CP (0)  DISC (4)  ALL(0)        0                ...            */ 02973000
*/*  CP (0)  DISC (4)  LG (1)        0                ...            */ 02974000
*/*   ...                                             ...            */ 02975000
*/*  zIIP(1) ALL (0)   ALL(0)        2                ...            */ 02976000
*/*  zIIP(1) ALL (0)   LG (1)        2                ...            */ 02977000
*/*  zIIP(1) ALL (0)   MED(2)        0                ...            */ 02978000
*/*   ...                                             ...            */ 02979000
*/*                                                                  */ 02980000
*/*                                                                  */ 02981000
*/* The SMF98.x build and write service will generate an aggregate   */ 02982000
*/* bucket SMF98.x record for each aggregate bucket instance         */ 02983000
*/* supplied by the exploiter providing the number of contributors   */ 02984000
*/* for the given instance is greater than zero.  See IHAHR098 for   */ 02985000
*/* a description of the SMF98.x record.                             */ 02986000
*/*                                                                  */ 02987000
*/*  Job Priority Definitions      Job Size Definitions              */ 02988000
*/*  ------------------------      --------------------              */ 02989000
*/*  ALL  = All                    ALL  = All                        */ 02990000
*/*  CRIT = Critical               LG   = Large                      */ 02991000
*/*  HIGH = High                   MED  = Medium                     */ 02992000
*/*  LOW  = Low                    SM   = Small                      */ 02993000
*/*  DISC = Discretionary          TINY = Tiny                       */ 02994000
*/*                                                                  */ 02995000
*/********************************************************************/ 02996000
*                                                                       02997000
*DCL                                                                    02998000
*  1 WicWR_AggBucket Type,          /* Aggregate bucket              */ 02999000
*                                                                       03000000
*   /*****************************************************************/ 03001000
*   /* Aggregate bucket exploiter area                               */ 03002000
*   /*****************************************************************/ 03003000
*   3 WicWR_AggBucketExpArea,       /* Aggregate bucket exploiter area  03004000
*                                                                    */ 03005000
*   /*****************************************************************/ 03006000
*   /* Contributors - the number of contributors for this bucket     */ 03007000
*   /* instance                                                      */ 03008000
*   /*****************************************************************/ 03009000
*    5 WicWR_AggBucket_Contributors Fixed(16), /* Number of address     03010000
*                                      spaces contributing to this      03011000
*                                      bucket entry - supplied by the   03012000
*                                      exploiter                     */ 03013000
*                                                                       03014000
*   /*****************************************************************/ 03015000
*   /* Aggregate bucket data area                                    */ 03016000
*   /*****************************************************************/ 03017000
*    5 WicWR_AggBucket_Data Char(0); /* Aggregate bucket data area   */ 03018000
*                                   /* End of Aggregate Bucket          03019000
*                                      definition                    */ 03020000
*                                                                       03021000
*                                                                       03022000
*/********************************************************************/ 03023000
*/*                                                                  */ 03024000
*/* WIC SMF98 Exception Bucket                                       */ 03025000
*/* --------------------------                                       */ 03026000
*/*                                                                  */ 03027000
*/* IFAWIC exploiters must define an exception job bucket with the   */ 03028000
*/* first 10 bytes ('A'x) defining an exception bucket header (as    */ 03029000
*/* defined below) followed by an IFAWIC exploiter area.             */ 03030000
*/*                                                                  */ 03031000
*/* The SMF98 exception bucket contains the job with the maximum     */ 03032000
*/* activity and its job context (e.g. ASID, jobname, and other      */ 03033000
*/* corresponding activities) for every aggregate bucket activity.   */ 03034000
*/* For example, if the aggregate bucket activity contains the       */ 03035000
*/* number of transactions, the exception job bucket will contain    */ 03036000
*/* the job with the most transactions and its job context.          */ 03037000
*/*                                                                  */ 03038000
*/*                                                                  */ 03039000
*/* The SMF98 exception bucket is defined as follows:                */ 03040000
*/* - Header area - IBM defined area that contains bucket attributes */ 03041000
*/*   and the state of the bucket.                                   */ 03042000
*/*                                                                  */ 03043000
*/* - Exploiter Area - exploiter defined area that contains "record" */ 03044000
*/*   and "internal" activities.                                     */ 03045000
*/*                                                                  */ 03046000
*/* See the WIC SMF98.x Aggregate Bucket for a discussion on WIC     */ 03047000
*/* bucket concepts.                                                 */ 03048000
*/*                                                                  */ 03049000
*/*                                                                  */ 03050000
*/* Only one exception bucket must be supplied to the SMF98.x        */ 03051000
*/* build and write service.  The exception bucket can be thought    */ 03052000
*/* of as a "table" of entries, with each entry representing an      */ 03053000
*/* instance of an exception bucket.    Instances must be defined in */ 03054000
*/* ascending order first by CPU type, then by job priority, then    */ 03055000
*/* by job size, and finally by activity index as shown below.       */ 03056000
*/*                                                                  */ 03057000
*/* Note: This example shows an exception bucket with "N"            */ 03058000
*/* activities as identified by the activity index (Act Idx).  An    */ 03059000
*/* activity index identifies the activity (defined in the exploiter */ 03060000
*/* area) for the given exception bucket instance.                   */ 03061000
*/*                                                                  */ 03062000
*/*                                                                  */ 03063000
*/*                               +--------------------------------+ */ 03064000
*/*                               !        Exception Bucket        ! */ 03065000
*/*                               !     (Supplied by Exploiter)    ! */ 03066000
*/*                               !                                ! */ 03067000
*/*                               !         WicWR_ExcBucket        ! */ 03068000
*/* +-----------------------------+------------+-------------------+ */ 03069000
*/* !                             !         Exploiter Area         ! */ 03070000
*/* !         Indices             !                                ! */ 03071000
*/* !      (Table Entry)          +------------+-------------------+ */ 03072000
*/* !                             !    !       !       Data        ! */ 03073000
*/* +-----------------------------+    !       +---------+---------+ */ 03074000
*/* ! CPU  !  Job  ! Job   ! Act  !ASID!JobName!Exploiter!Exploiter! */ 03075000
*/* ! Type ! Prty  ! Size  ! Idx  !    !       ! Record  !Internal ! */ 03076000
*/* ! (0-1)! (0-4) ! (0-4) ! (1-N)!    !       !  Area   !  Area   ! */ 03077000
*/* +------+-------+-------+------+----+-------+---------+---------+ */ 03078000
*/*  CP(0)   ALL(0)  ALL(0)    1  '40'x   JOB1          ...          */ 03079000
*/*  CP(0)   ALL(0)  ALL(0)    2  '40'x   JOB1          ...          */ 03080000
*/*  CP(0)   ALL(0)  ALL(0)    3  '41'x   JOB2          ...          */ 03081000
*/*  ...                                                ...          */ 03082000
*/*  CP(0)   ALL(0)  ALL(0)    N  '41'x   JOB2          ...          */ 03083000
*/*  CP(0)   ALL(0)  LG (1)    1  '25'x   JOBA          ...          */ 03084000
*/*  CP(0)   ALL(0)  LG (1)    2  '40'x   JOB1          ...          */ 03085000
*/*  CP(0)   ALL(0)  LG (1)    3  '26'x   JOBB          ...          */ 03086000
*/*  ...                                                ...          */ 03087000
*/*  CP(0)   ALL(0)  LG (1)    N  '26'x   JOBB          ...          */ 03088000
*/*  CP(0)   ALL(0)  MED(2)    1  '27'x   JOB9          ...          */ 03089000
*/*  CP(0)   ALL(0)  MED(2)    2  '27'x   JOB9          ...          */ 03090000
*/*  ...                                                ...          */ 03091000
*/*  CP(0)   ALL(0)  TINY(4)   1  '30'x   JOBT          ...          */ 03092000
*/*  CP(0)   ALL(0)  TINY(4)   2  '31'x   JOBS          ...          */ 03093000
*/*  CP(0)   ALL(0)  TINY(4)   3  '32'x   JOBU          ...          */ 03094000
*/*  ...                                                ...          */ 03095000
*/*  CP(0)   ALL(0)  TINY(4)   N  '31'x   JOBS          ...          */ 03096000
*/*  CP(0)   CRIT(1) ALL(0)    1  '40'x   JOB1          ...          */ 03097000
*/*  CP(0)   CRIT(1) ALL(0)    2  '40'x   JOB1          ...          */ 03098000
*/*  CP(0)   CRIT(1) ALL(0)    3  '41'x   JOB2          ...          */ 03099000
*/*  ...                                                ...          */ 03100000
*/*  CP(0)   CRIT(1) ALL(0)    N  '41'x   JOB2          ...          */ 03101000
*/*  ...                                                ...          */ 03102000
*/*  CP(0)   LOW(3)  ALL(0)    1  '40'x   JOB1          ...          */ 03103000
*/*  CP(0)   LOW(3)  ALL(0)    2  '40'x   JOB1          ...          */ 03104000
*/*  CP(0)   LOW(3)  ALL(0)    3  '41'x   JOB2          ...          */ 03105000
*/*  ...                                                ...          */ 03106000
*/*  CP(0)   LOW(3)  ALL(0)    N  '41'x   JOB2          ...          */ 03107000
*/*  ...                                                ...          */ 03108000
*/*  ZIPP(1) ALL(0)  ALL(0)    1  '40'x   JOB1          ...          */ 03109000
*/*  ZIPP(1) ALL(0)  ALL(0)    2  '40'x   JOB1          ...          */ 03110000
*/*  ZIPP(1) ALL(0)  ALL(0)    3  '41'x   JOB2          ...          */ 03111000
*/*  ...                                                ...          */ 03112000
*/*  ZIPP(1) ALL(0)  ALL(0)    N  '41'x   JOB2          ...          */ 03113000
*/*  ZIPP(1) ALL(0)  LG (1)    1  '25'x   JOBA          ...          */ 03114000
*/*  ZIPP(1) ALL(0)  LG (1)    2  '40'x   JOB1          ...          */ 03115000
*/*  ZIPP(1) ALL(0)  LG (1)    3  '26'x   JOBB          ...          */ 03116000
*/*  ...                                                ...          */ 03117000
*/*  ZIPP(1) ALL(0)  MED(2)    N  '41'x   JOB2          ...          */ 03118000
*/*  ...                                                ...          */ 03119000
*/*                                                                  */ 03120000
*/*  Job Priority Definitions      Job Size Definitions              */ 03121000
*/*  ------------------------      --------------------              */ 03122000
*/*  ALL  = All                    ALL  = All                        */ 03123000
*/*  CRIT = Critical               LG   = Large                      */ 03124000
*/*  HIGH = High                   MED  = Medium                     */ 03125000
*/*  LOW  = Low                    SM   = Small                      */ 03126000
*/*  DISC = Discretionary          TINY = Tiny                       */ 03127000
*/*                                                                  */ 03128000
*/********************************************************************/ 03129000
*                                                                       03130000
*DCL                                                                    03131000
*  1 WicWR_ExcBucket Type,          /* Exception bucket              */ 03132000
*                                                                       03133000
*   /*****************************************************************/ 03134000
*   /* Exception bucket exploiter area                               */ 03135000
*   /*****************************************************************/ 03136000
*   3 WicWR_ExcBucketExpArea,       /* Exception bucket exploiter area  03137000
*                                                                    */ 03138000
*                                                                       03139000
*    /****************************************************************/ 03140000
*    /* ASID - the address space identifier for this bucket instance */ 03141000
*    /****************************************************************/ 03142000
*    5 WicWR_ExcBucket_ASID Fixed(15), /* Address space id - supplied   03143000
*                                      by the exploiter              */ 03144000
*                                                                       03145000
*    /****************************************************************/ 03146000
*    /* Jobname - the jobname for this bucket instance               */ 03147000
*    /****************************************************************/ 03148000
*    5 WicWR_ExcBucket_Jobname Char(8), /* Jobnamespace id - supplied   03149000
*                                      by the exploiter              */ 03150000
*                                                                       03151000
*    /****************************************************************/ 03152000
*    /* Exception bucket data area                                   */ 03153000
*    /****************************************************************/ 03154000
*    5 WicWR_ExcBucket_Data Char(0); /* Exception bucket data area   */ 03155000
*                                   /* End of exception bucket          03156000
*                                      definition                    */ 03157000
*                                                                       03158000
*/********************************************************************/ 03159000
*/*                                                                  */ 03160000
*/* Aggregate bucket sizes for aggregate buckets that contain one    */ 03161000
*/* processor type or two processor types.                           */ 03162000
*/*                                                                  */ 03163000
*/********************************************************************/ 03164000
*Dcl WicWR_kNumEntsOneCPUType Fixed(15) Constant(25);                   03165000
*Dcl WicWR_kNumEntsTwoCPUType Fixed(15) Constant(50);                   03166000
*                                                                       03167000
*/********************************************************************/ 03168000
*/*                                                                  */ 03169000
*/* CPU Type constants                                               */ 03170000
*/*                                                                  */ 03171000
*/********************************************************************/ 03172000
*Dcl WicWR_kCPUTypeCP   Fixed(15) Constant(0);                          03173000
*Dcl WicWR_kCPUTypeZIIP Fixed(15) Constant(1);                          03174000
*                                                                       03175000
*/********************************************************************/ 03176000
*/*                                                                  */ 03177000
*/* JobPriority constants                                            */ 03178000
*/*                                                                  */ 03179000
*/********************************************************************/ 03180000
*Dcl WicWR_kJobPriorityAll      Fixed(15) Constant(0);                  03181000
*Dcl WicWR_kJobPriorityCritical Fixed(15) Constant(1);                  03182000
*Dcl WicWR_kJobPriorityHigh     Fixed(15) Constant(2);                  03183000
*Dcl WicWR_kJobPriorityLow      Fixed(15) Constant(3);                  03184000
*Dcl WicWR_kJobPriorityDisc     Fixed(15) Constant(4);                  03185000
*                                                                       03186000
*/********************************************************************/ 03187000
*/*                                                                  */ 03188000
*/* JobSize constants                                                */ 03189000
*/*                                                                  */ 03190000
*/********************************************************************/ 03191000
*Dcl WicWR_kJobSizeAll     Fixed(15) Constant(0);                       03192000
*Dcl WicWR_kJobSizeLarge   Fixed(15) Constant(1);                       03193000
*Dcl WicWR_kJobSizeMedium  Fixed(15) Constant(2);                       03194000
*Dcl WicWR_kJobSizeSmall   Fixed(15) Constant(3);                       03195000
*Dcl WicWR_kJobSizeTiny    Fixed(15) Constant(4);                       03196000
*                                                                       03197000
*                                                                       03198000
*                                                                       03199000
*                                                                       03200000
*                                                                       03201000
*/********************************************************************/ 03202000
*/* Wic Exit Services Return and reason code constants               */ 03203000
*/********************************************************************/ 03204000
*                                                                       03205000
*/*------------------------------------------------------------------*/ 03206000
*/* Successful return and reason codes                               */ 03207000
*/*------------------------------------------------------------------*/ 03208000
*Dcl WicSrv_Rc_Success Bit(32) Constant('00000000'X); /*                03209000
*                                      Meaning: The get next buffer     03210000
*                                      service has returned the first   03211000
*                                      or next WIC buffer or the clear  03212000
*                                      buffer service has cleared the   03213000
*                                      WIC buffer starting at the given 03214000
*                                      offset for the given length, or  03215000
*                                      the build and write service      03216000
*                                      SMF98.x has successfully built   03217000
*                                      and written the SMF98.x record.  03218000
*                                      Action: None                  */ 03219000
*                                                                       03220000
*/*------------------------------------------------------------------*/ 03221000
*/* Warning return and reason codes                                  */ 03222000
*/*------------------------------------------------------------------*/ 03223000
*Dcl WicSrv_Rc_Warning Bit(32) Constant('00000004'X); /*                03224000
*                                      Meaning: The get next buffer     03225000
*                                      service, the clear buffer, or    03226000
*                                      the build and write SMF98.x      03227000
*                                      service completed with a warning 03228000
*                                      Action: See the issued reason    03229000
*                                      code                          */ 03230000
*                                                                       03231000
*Dcl WicSrv_Rsn_NoMoreBuffers Bit(32) Constant('00000401'X); /*         03232000
*                                      Meaning: The get next buffer     03233000
*                                      service was unable to find the   03234000
*                                      first or "next" WIC buffer.      03235000
*                                      Action: Callers of the WIC       03236000
*                                      service should terminate current 03237000
*                                      processing and move on to the    03238000
*                                      next phase of exit processing */ 03239000
*Dcl WicSrv_Rsn_ClearSTAddrBufLenOutOfRange                             03240000
*                                   Bit(32) Constant('00000402'X); /*   03241000
*                                      Meaning: The caller of the clear 03242000
*                                      buffer service specified a       03243000
*                                      buffer length to clear that when 03244000
*                                      combined with the starting       03245000
*                                      address within the WIC buffer    03246000
*                                      extended beyond the buffer size  03247000
*                                      requested when the IFAWIC        03248000
*                                      REGISTER request was issued for  03249000
*                                      the subtype.  The WIC buffer     03250000
*                                      area starting at the address to  03251000
*                                      clear is clear (set to binary    03252000
*                                      0s).                             03253000
*                                      Action: To avoid this warning    03254000
*                                      re-register the subtype          03255000
*                                      specifying a larger buffer size. 03256000
*                                                                    */ 03257000
*Dcl WicSrv_Rsn_ApproachingMaxSMF98RecLen                               03258000
*                                   Bit(32) Constant('0000040A'X); /*   03259000
*                                      Meaning: The build and write     03260000
*                                      SMF98.x service has determined   03261000
*                                      that the SMF98.x record is       03262000
*                                      approaching the 32756 byte       03263000
*                                      record length limit.  The        03264000
*                                      SMF98.x record is written.       03265000
*                                      Action: Verify that the number   03266000
*                                      of records for the aggregate     03267000
*                                      buckets and the exception bucket 03268000
*                                      and the write lengths for the    03269000
*                                      buckets are correct.  If the     03270000
*                                      the number of records and write  03271000
*                                      lengths are correct, consider    03272000
*                                      reducing the amount of data      03273000
*                                      recorded for each aggregate      03274000
*                                      bucket record and/or exception   03275000
*                                      bucket record.                */ 03276000
*                                                                       03277000
*/*------------------------------------------------------------------*/ 03278000
*/* User error return and reason codes                               */ 03279000
*/*------------------------------------------------------------------*/ 03280000
*Dcl WicSrv_Rc_UserError Bit(32) Constant('00000008'X); /*              03281000
*                                      Meaning: The called service      03282000
*                                      completed with a user error      03283000
*                                      Action: See the issued reason    03284000
*                                      code                          */ 03285000
*                                                                       03286000
*Dcl WicSrv_Rsn_BadParmList Bit(32) Constant('00000801'X); /*           03287000
*                                      Meaning: An invalid parameter    03288000
*                                      list was built and supplied to   03289000
*                                      the called service.              03290000
*                                      Action: Verify the parameter     03291000
*                                      list for the called service is   03292000
*                                      built and initialized properly   03293000
*                                                                    */ 03294000
*Dcl WicSrv_Rsn_BadClearSTAddrBufLen                                    03295000
*                           Bit(32) Constant('00000802'X); /*           03296000
*                                      Meaning: The caller of the clear 03297000
*                                      buffer service specified a       03298000
*                                      starting WIC buffer address and  03299000
*                                      buffer length to clear that      03300000
*                                      extends beyond the maximum size  03301000
*                                      of a WIC buffer or is not within 03302000
*                                      the range for the subtype.within 03303000
*                                      The buffer area is not cleared.  03304000
*                                      Action: Verify that either the   03305000
*                                      starting buffer address is       03306000
*                                      correct and/or the buffer length 03307000
*                                      to clear is correct.          */ 03308000
*Dcl WicSrv_Rsn_AggBucketsNotSpecified                                  03309000
*                           Bit(32) Constant('00000803'X); /*           03310000
*                                      Meaning: The caller of the build 03311000
*                                      and write SMF98.x service        03312000
*                                      specified a zero address for     03313000
*                                      both the aggregate bucket        03314000
*                                      addresses within the aggregate   03315000
*                                      bucket portion of the parameter  03316000
*                                      list.                            03317000
*                                      Action: Verify that at least one 03318000
*                                      of the aggregate bucket          03319000
*                                      addresses specified and is not   03320000
*                                      zero                          */ 03321000
*Dcl WicSrv_Rsn_BadNumOfAggBucketEntries                                03322000
*                           Bit(32) Constant('00000804'X); /*           03323000
*                                      Meaning: The caller of the build 03324000
*                                      and write SMF98.x service        03325000
*                                      specified the number of entries  03326000
*                                      for the aggregate bucket that is 03327000
*                                      not 25 or 50.                    03328000
*                                      Action: Verify that the number   03329000
*                                      of aggregate bucket entries is   03330000
*                                      25 or 50                      */ 03331000
*Dcl WicSrv_Rsn_AggBucketWRLenGTOneBucLen                               03332000
*                           Bit(32) Constant('00000805'X); /*           03333000
*                                      Meaning: The caller of the build 03334000
*                                      and write SMF98.x service        03335000
*                                      specified a write length for one 03336000
*                                      aggregate bucket entry that is   03337000
*                                      greater than one aggregate       03338000
*                                      bucket entry length.             03339000
*                                      Action: Verify the write length  03340000
*                                      of one aggregate bucket entry is 03341000
*                                      defined to be less than the      03342000
*                                      length of one aggregate bucket   03343000
*                                      entry.                        */ 03344000
*Dcl WicSrv_Rsn_ExcBucketNotSpecified                                   03345000
*                           Bit(32) Constant('00000807'X); /*           03346000
*                                      Meaning: The caller of the build 03347000
*                                      and write SMF98.x service        03348000
*                                      specified a zero address for the 03349000
*                                      exception bucket address, or     03350000
*                                      specified a zero for the number  03351000
*                                      of entries contained in the      03352000
*                                      exception bucket, or specified a 03353000
*                                      zero for the number of           03354000
*                                      activities, within the           03355000
*                                      exception bucket portion of the  03356000
*                                      parameter list.                  03357000
*                                      Action: Verify that the          03358000
*                                      exception bucket address is      03359000
*                                      specified and is not zero,       03360000
*                                      and/or the number of entries is  03361000
*                                      not zero, and/or the number of   03362000
*                                      activities is not zero.       */ 03363000
*Dcl WicSrv_Rsn_BadNumOfExcBucketEntries                                03364000
*                           Bit(32) Constant('00000808'X); /*           03365000
*                                      Meaning: The caller of the build 03366000
*                                      and write SMF98.x service        03367000
*                                      specified the number of entries  03368000
*                                      for the exception that is not a  03369000
*                                      multiple of 25.                  03370000
*                                      Action: Verify that the number   03371000
*                                      of exception bucket entries is   03372000
*                                      a multiple of 25              */ 03373000
*Dcl WicSrv_Rsn_ExcBucketWRLenGTOneBucLen                               03374000
*                           Bit(32) Constant('00000809'X); /*           03375000
*                                      Meaning: The caller of the build 03376000
*                                      and write SMF98.x service        03377000
*                                      specified a write length for one 03378000
*                                      exception bucket entry that is   03379000
*                                      is greater than one exception    03380000
*                                      bucket entry length.             03381000
*                                      Action: Verify the write length  03382000
*                                      of one exception bucket entry is 03383000
*                                      defined to be less than the      03384000
*                                      length of one exception bucket   03385000
*                                      entry.                        */ 03386000
*Dcl WicSrv_Rsn_SMF98RecordTooLong                                      03387000
*                           Bit(32) Constant('0000080A'X); /*           03388000
*                                      Meaning: The build and write     03389000
*                                      SMF98.x service has determined   03390000
*                                      that the SMF98.x record exceeds  03391000
*                                      32756 bytes in length.  The      03392000
*                                      SMF98.x record is not written.   03393000
*                                      Action: Verify that the number   03394000
*                                      of records for the aggregate     03395000
*                                      buckets and the exception bucket 03396000
*                                      and the write lengths for the    03397000
*                                      buckets are correct.  If the     03398000
*                                      the number of records and write  03399000
*                                      lengths are correct, consider    03400000
*                                      reducing the amount of data      03401000
*                                      recorded for each aggregate      03402000
*                                      bucket record and/or exception   03403000
*                                      bucket record.                */ 03404000
*/*------------------------------------------------------------------*/ 03405000
*/* Environment error return and reason codes                        */ 03406000
*/*------------------------------------------------------------------*/ 03407000
*Dcl WicSrv_Rc_EnvError Bit(32) Constant('0000000C'X); /*               03408000
*                                      Meaning: The WIC service did not 03409000
*                                      complete successfully due to an  03410000
*                                      environmental error.             03411000
*                                      Action: See the issued reason    03412000
*                                      code                          */ 03413000
*Dcl WicSrv_Rsn_UnableToWriteSMF98Record                                03414000
*                           Bit(32) Constant('00000C01'X); /*           03415000
*                                      Meaning: The SMF98.x build and   03416000
*                                      write service was unable to      03417000
*                                      write the SMF98.x record.        03418000
*                                      Action: This error is issued     03419000
*                                      when the return code from the    03420000
*                                      SMFEWTM macro invocation is      03421000
*                                      non-zero.  Refer to the high     03422000
*                                      half (bits 0-15) of this reason  03423000
*                                      code for the return code issued  03424000
*                                      by the SMFEWTM macro.            03425000
*                                      Documentation and corrective     03426000
*                                      actions for the SMFEWTM return   03427000
*                                      codes can be found in the z/OS   03428000
*                                      MVS System Management Facilities 03429000
*                                      (SMF) publication             */ 03430000
*                                                                       03431000
*                                                                       03432000
*/* End of WIC services Return and Reason code definitions           */ 03433000
*                                                                       03434000
* @LOGIC;                                                               03435000
* #PRAGMA TOOL=CBGEN.                                                   03436000
* #USEORG.                                                              03437000
* #NOMAP.                                                               03438000
* #DELETE.WicWR_AggBucketParmList1_IsA                                  03439000
* #DELETE.WicWR_AggBucketParmList2_IsA                                  03440000
* #MAP.                                                                 03441000
* #LINE.%DCL IFAWICCB_CBGEN;                                            03442000
* #LINE.%IFAWICCB_CBGEN = 'YES';                                        03443000
* #LINE.%INCLUDE SYSLIB(IFAWICCB);                                      03444000
* #NOTUPPER.                                                            03445000
* #ALIGNOP.                                                             03446000
* #EPRAGMA.                                                             03447000
* @ENDLOGIC;                                                            03448000
*/* End of PL/X Source                                               */ 03449000
* %IF IFAWICCB_LIST = 'NO' !                                            03450000
*    ZCBPRINT = 'NO' %THEN                                              03451000
* %DO;                                                                  03452000
*   @LIST POP NOECHO;                                                   03453000
* %END;                                                                 03454000
* %END;                                                                 03455000
