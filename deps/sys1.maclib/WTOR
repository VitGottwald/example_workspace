*/** Start of Specifications *****************************************/ 00010000
*/*                                                                  */ 00011000
*/* MACRO NAME=       WTOR                                   @G860PSS*/ 00012000
*/*                                                                  */ 00013000
*/* DESCRIPTIVE NAME= WRITE TO OPERATOR WITH REPLY (WTOR)    @G860PSS*/ 00014000
*/*                                                                  */ 00015000
*/*01* PROPRIETARY STATEMENT=                                        */ 00016000
*/***PROPRIETARY_STATEMENT********************************************/ 00017000
*/*                                                                  */ 00018000
*/*                                                                  */ 00019000
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */ 00020000
*/* 5694-A01 COPYRIGHT IBM CORP. 1977, 2008                          */ 00021000
*/*                                                                  */ 00040000
*/* STATUS= HBB7750                                              @PLC*/ 00050000
*/*                                                                  */ 00060000
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 00070000
*/*                                                                  */ 00080000
*/*01* EXTERNAL CLASSIFICATION: PI                                   */ 00081000
*/*01* END OF EXTERNAL CLASSIFICATION:                               */ 00082000
*/*                                                                  */ 00083000
*/* METHOD OF ACCESS=                                                */ 00084000
*/*                   BAL  - SPECIFY WTOR                    @G860PSS*/ 00085000
*/*                                                                  */ 00086000
*/* INVOCATION=                                                  @L1A*/ 00087000
*/*              SPECIFY WTOR MESG,RYAD,LENGTH,ECB,              @L1A*/ 00088000
*/*                           DESC=,MSGTYP=,MCSFLAG=,MF=,        @L6C*/ 00089000
*/*                           CONSID=,JOBID=,KEY=,TOKEN=,        @L1A*/ 00090000
*/*                           SYSNAME=,JOBNAME=,ROUTCDE=,        @01C*/ 00100000
*/*                           CONSNAME=,RPLYISUR=,CART=,         @L4C*/ 00110000
*/*                           LINKAGE=,SYNCH=,                   @L5A*/ 00120000
*/*                           TEXT=(ADDRESS,RYAD,LENGTH,ECB)     @L4A*/ 00130000
*/*                                                                  */ 00140000
*/*                                    OR                        @L1A*/ 00150000
*/*                                                                  */ 00160000
*/*                      WTOR WQEBLK=                            @L1A*/ 00161000
*/*                                                                  */ 00162000
*/*             WHERE:                                           @L1A*/ 00163000
*/*               MESG     THE MESSAGE TEXT FOR A MESSAGE        @L1A*/ 00164000
*/*                        TO BE WRITTEN.                        @L1A*/ 00165000
*/*                                                                  */ 00165100
*/*               RYAD     THE MESSAGE'S REPLY ADDRESS           @L1A*/ 00165200
*/*                                                                  */ 00165300
*/*               LENGTH   THE MESSAGE'S REPLY LENGTH            @L1A*/ 00165400
*/*                                                                  */ 00165500
*/*               ECB      THE MESSAGE'S ECB ADDRESS             @L1A*/ 00165600
*/*                                                                  */ 00165700
*/*                                                                  */ 00165800
*/*               ROUTCDE= ROUTING CODES TO BE ASSIGNED TO THE   @L1A*/ 00165900
*/*                        MESSAGE.                              @L1A*/ 00166000
*/*                                                                  */ 00166100
*/*               DESC=    DESCRIPTOR CODES TO BE ASSIGNED TO    @L1A*/ 00166200
*/*                        THE MESSAGE.                          @L1A*/ 00166300
*/*                                                                  */ 00166400
*/*               MSGTYP=  SPECIFIES HOW THE MESSAGE IS TO BE    @L1A*/ 00166500
*/*                        ROUTED. VALID VALUES ARE:             @L1A*/ 00166600
*/*                          N, Y, SESS, JOBNAMES, STATUS        @L1A*/ 00166700
*/*                                                                  */ 00166800
*/*               MCSFLAG= SPECIFIES ATTRIBUTES OF THE           @L1A*/ 00166900
*/*                        MESSAGE. VALID VALUES ARE:            @L1A*/ 00167000
*/*                          RESP, REPLY, BRDCST,                @L7C*/ 00167100
*/*                          HRDCPY, NOTIME, CMD, NOCPY          @L7C*/ 00167200
*/*                                                                  */ 00167300
*/*                        Note: While REG0 and QREG0            @L7A*/ 00167400
*/*                        are checked, they are no longer       @L7A*/ 00167500
*/*                        supported. Use of REG0 and QREG0 will @L7A*/ 00167600
*/*                        cause the module assembly to fail     @L7A*/ 00167700
*/*                        since an MNOTE of severity 12 will be @L7A*/ 00167800
*/*                        generated.                            @L7A*/ 00167900
*/*                                                                  */ 00168000
*/*               MF=      SPECIFIES THE TYPE OF EXPANSION       @L1A*/ 00168100
*/*                        REQUIRED. VALID VALUES ARE:           @L1A*/ 00168200
*/*                             I  -  THIS IS THE DEFAULT        @L1A*/ 00168300
*/*                             (L,<LISTNAME>)                   @L1A*/ 00168400
*/*                             (E,<LISTNAME>)                   @L1A*/ 00168500
*/*                             (E,<LISTNAME>,EXTENDED)          @L1A*/ 00168600
*/*                        THE 'EXTENDED' PARAMETER MUST BE      @L1A*/ 00168700
*/*                        USED IN AN EXECUTE FORM INVOCATION    @L1A*/ 00168800
*/*                        WHERE A WPX EXISTS AND EITHER THE     @L1A*/ 00168900
*/*                        REPLY ADDRESS, REPLY LENGTH, ECB      @L2C*/ 00169000
*/*                        ADDRESS OR REPLY CONSOLE NAME         @L2A*/ 00169100
*/*                        ADDRESS ARE TO BE INSERTED.           @L1A*/ 00169200
*/*                                                                  */ 00169300
*/*               CONSID=  SPECIFIES THE 4-BYTE ID OF THE        @L1A*/ 00169400
*/*                        CONSOLE TO RECEIVE A MESSAGE.         @L1A*/ 00169500
*/*                        IF A REGISTER IS USED, THE REGISTER   @L1A*/ 00169600
*/*                        CONTAINS THE 4-BYTE ID.               @L1A*/ 00169700
*/*                                                                  */ 00169800
*/*              CONSNAME= SPECIFIES THE 2-8 BYTE NAME OF THE    @L2A*/ 00169900
*/*                        CONSOLE TO RECEIVE A MESSAGE.         @L2A*/ 00170000
*/*                        IF A REGISTER IS USED, THE REGISTER   @L2A*/ 00170100
*/*                        CONTAINS THE ADDRESS OF THE 2-8 BYTE  @L2A*/ 00170200
*/*                        CONSOLE NAME                          @L2A*/ 00170300
*/*                                                                  */ 00170400
*/*            RPLYISUR=   THE ADDRESS OF A 12 BYTE AREA         @L2A*/ 00170500
*/*                        WHERE THE REPLYING CONSOLE WILL       @L2A*/ 00170600
*/*                        INSERT ITS 8 BYTE NAME AND 4 BYTE ID  @L2A*/ 00170700
*/*                                                                  */ 00170800
*/*               JOBID=   SPECIFIES THE 8-BYTE ID WITH WHICH    @L1A*/ 00170900
*/*                        THE JES IDENTIFIES THE ISSUER OF      @L1A*/ 00171000
*/*                        THIS WTOR. THE KEYWORD IS FOR USE BY  @L1A*/ 00171100
*/*                        JES2 AND JES3.  IF A REGISTER IS      @L1A*/ 00171200
*/*                        USED, THE REGISTER CONTAINS THE       @L1A*/ 00171300
*/*                        ADDRESS OF THE 8-BYTE ID.             @L1A*/ 00171400
*/*                                                                  */ 00171500
*/*               JOBNAME= SPECIFIES THE 8-BYTE NAME WITH WHICH  @L1A*/ 00171600
*/*                        THE JES IDENTIFIES THE ISSUER OF      @L1A*/ 00171700
*/*                        THIS WTOR. THE KEYWORD IS FOR USE BY  @L1A*/ 00171800
*/*                        JES2 AND JES3.  IF A REGISTER IS      @L1A*/ 00171900
*/*                        USED THE REGISTER CONTAINS THE        @L1A*/ 00172000
*/*                        ADDRESS OF THE 8-BYTE NAME.           @L1A*/ 00172100
*/*                                                                  */ 00172200
*/*               KEY=     SPECIFIES AN 8-BYTE KEY TO BE         @L1A*/ 00172300
*/*                        ASSOCIATED WITH THIS MESSAGE.  IF A   @L1A*/ 00172400
*/*                        REGISTER IS USED, THE REGISTER        @L1A*/ 00172500
*/*                        SPECIFIES THE ADDRESS OF THE 8-BYTE   @L1A*/ 00172600
*/*                        KEY.                                  @L1A*/ 00172700
*/*                                                                  */ 00172800
*/*               TOKEN=   SPECIFIES A 4-BYTE TOKEN TO BE        @L1A*/ 00172900
*/*                        ASSOCIATED WITH THIS MESSAGE.  THE    @L1A*/ 00173000
*/*                        FIELD IS USED TO IDENTIFY A GROUP     @L1A*/ 00173100
*/*                        OF MESSAGES THAT CAN BE DELETED BY    @L1A*/ 00173200
*/*                        TOKEN.  THE TOKEN SHOULD BE UNIQUE    @L1A*/ 00173300
*/*                        WITHIN AN ADDRESS SPACE. IF A         @L1A*/ 00173400
*/*                        REGISTER IS USED, THE REGISTER        @L1A*/ 00173500
*/*                        CONTAINS THE 4-BYTE VALUE.            @L1A*/ 00173600
*/*                                                                  */ 00173700
*/*               SYSNAME= SPECIFIES AN 8-BYTE SYSTEM NAME TO BE @L1A*/ 00173800
*/*                        ASSIGNED TO THIS MESSAGE.  IT IS THE  @L1A*/ 00173900
*/*                        SYSTEM NAME OF WHERE THIS WTOR        @L1A*/ 00174000
*/*                        ORIGINATED.  IF A REGISTER IS         @L1A*/ 00174100
*/*                        USED, THE REGISTER CONTAINS THE       @L1A*/ 00174200
*/*                        ADDRESS OF THE 8-BYTE NAME.           @L1A*/ 00174300
*/*                                                                  */ 00174400
*/*               WQEBLK=  SPECIFIES A WQE CONTROL BLOCK TO BE   @L1A*/ 00174500
*/*                        USED AS INPUT FOR THE WTOR. IF A      @L1A*/ 00174600
*/*                        REGISTER IS USED, THE REGISTER        @L1A*/ 00174700
*/*                        SPECIFIES THE ADDRESS OF THE WQE      @L1A*/ 00174800
*/*                        CONTROL BLOCK TO BE USED AS INPUT TO  @L1A*/ 00174900
*/*                        THE WTOR. THIS KEYWORD IS MUTUALLY    @L1A*/ 00175000
*/*                        EXCLUSIVE WITH ALL OTHER KEYWORDS.    @L1A*/ 00175100
*/*                        THIS KEYWORD IS ONLY VALID ON THE     @L1A*/ 00175200
*/*                        STANDARD FORM (MF=I) OF THE MACRO.    @L1A*/ 00175300
*/*                                                                  */ 00175400
*/*               CART=    SPECIFIES THE 4-BYTE ADDRESS OF THE   @L3A*/ 00175500
*/*                        8 BYTE COMMAND AND RESPONSE TOKEN.    @L3A*/ 00175600
*/*                        THE CART IS USED TO ASSOCIATE A WTO   @L3A*/ 00175700
*/*                        RESPONSE WITH THE ORIGINATING COMMAND.@L3A*/ 00175800
*/*                        IF A REGISTER IS USED, THE REGISTER   @L3A*/ 00175900
*/*                        CONTAINS THE 4-BYTE ADDRESS VALUE.    @L3A*/ 00176000
*/*                        IF AN 8-BYTE FIELD IS USED, THE       @L3A*/ 00176100
*/*                        ADDRESS OF THE FIELD IS STORED IN THE @L3A*/ 00176200
*/*                        WPL.                                  @L3A*/ 00176300
*/*                                                                  */ 00176400
*/*               TEXT=    SPECIFIES A DATA AREA                 @P8A*/ 00176500
*/*                        CONTAINING A 2 BYTE MESSAGE LENGTH    @L4A*/ 00176600
*/*                        FIELD FOLLOWED BY THE ACTUAL MESSAGE  @L4A*/ 00176700
*/*                        TEXT. IF A REGISTER IS USED, THE      @L4A*/ 00176800
*/*                        REGISTER CONTAINS THE ADDRESS OF THE  @L4A*/ 00176900
*/*                        DATA AREA. IF A FIELD IS USED, THE    @L4A*/ 00177000
*/*                        ADDRESS OF THE FIELD IS STORED        @L4A*/ 00177100
*/*                        IN THE WPL. THE TEXT KEYWORD IS       @L4A*/ 00177200
*/*                        MUTUALLY EXCLUSIVE WITH INLINE        @L4A*/ 00177300
*/*                        MESSAGE TEXT. THE TEXT KEYWORD MAY BE @L4A*/ 00177400
*/*                        SPECIFIED ON THE LIST FORM OF THE     @L4A*/ 00177500
*/*                        MACRO WITHOUT A KEYWORD VALUE TO      @L4A*/ 00177600
*/*                        SET UP THE PROPER FORM OF THE WTO     @L4A*/ 00177700
*/*                        PARAMETER LIST.                       @L4A*/ 00177800
*/*                        IF THE TEXT KEYWORD IS USED, THE      @L4A*/ 00177900
*/*                        ADDITIONAL POSITIONAL PARAMETERS,     @L4A*/ 00178000
*/*                        RYAD, LENGTH, ECB ADDRESS, MUST BE    @L4A*/ 00178100
*/*                        SPECIFIED AS THE SECOND, THIRD AND    @L4A*/ 00178200
*/*                        FOURTH POSITIONAL PARAMETERS ON THE   @L4A*/ 00178300
*/*                        TEXT KEYWORD.                         @L4A*/ 00178400
*/*                                                              @L4A*/ 00178500
*/*              LINKAGE=  SPECIFIES HOW CONTROL IS TO PASS TO   @L5A*/ 00178600
*/*                        THE WTOR FUNCTION.  LINKAGE IS NOT    @L5A*/ 00178700
*/*                        VALID IN THE LIST (MF=L) FORM OF THE  @L5A*/ 00178800
*/*                        MACRO.                                @L5A*/ 00178900
*/*                        THE VALID VALUES ARE-                 @L5A*/ 00179000
*/*                             BRANCH                           @L5A*/ 00180000
*/*                             SVC - THIS IS THE DEFAULT        @L5A*/ 00181000
*/*                                                                  */ 00181100
*/*                SYNCH=  SPECIFIES WHETHER THE WTOR REQUEST    @L5A*/ 00181200
*/*                        IS TO BE PROCESSED SYNCHRONOUSLY      @L5A*/ 00181300
*/*                        WITH RESPECT TO THE CALLER.           @L5A*/ 00181400
*/*                        THE VALID VALUES ARE-                 @L5A*/ 00181500
*/*                             YES                              @L5A*/ 00181600
*/*                             NO  - THIS IS THE DEFAULT        @L5A*/ 00181700
*/*                                                                  */ 00181800
*/* FUNCTION =                                                   @L1A*/ 00181900
*/*     BUILDS A WTOR PARAMETER LIST (WPL) AND/OR THE CODE       @L1A*/ 00182000
*/*     WHICH WILL INVOKE SVC 35 TO ISSUE THE MESSAGE            @L1A*/ 00183000
*/*                                                                  */ 00184000
*/* OPERATION =                                                  @L1A*/ 00185000
*/*     - IF LIST OR STANDARD FORM IS SPECIFIED, WTOR INVOKES    @L1A*/ 00185100
*/*          THE WTO MACRO TO DETERMINE WHICH KEYWORDS HAVE BEEN @L1A*/ 00185200
*/*          USED.  IF AN EXTENDED FORM OF THE WPL (WPX) IS TO   @L1A*/ 00185300
*/*          BE BUILT, WTO BUILDS IT USING THE INFORMATION       @L1A*/ 00185400
*/*          PASSED BY THIS MACRO.  WTO ALSO HANDLES PARAMETER   @L1A*/ 00185500
*/*          LIST GENERATION IF THIS IS AN INVOCATION WHERE THE  @L1A*/ 00185600
*/*          WQEBLK KEYWORD IS USED. IF AN OLD-FORMAT WPL        @L1A*/ 00185700
*/*          IS TO BE BUILT, HOWEVER, THEN THIS MACRO WILL       @L1A*/ 00185800
*/*          GENERATE THE PARAMETER LIST.                        @L1A*/ 00185900
*/*     - IF EXECUTE FORM IS SPECIFIED, INSERT RUN-TIME KEYWORD  @L1A*/ 00186000
*/*          VALUES INTO THE ALREADY-EXISTING PARAMETER LIST     @L1A*/ 00187000
*/*                                                                  */ 00188000
*/* USAGE =                                                      @L1C*/ 00189000
*/*     ANY PROGRAM MAY USE THIS MACRO TO                    @G860PSS*/ 00189100
*/*     BUILD THE WTOR PARAMETER LIST.  HOWEVER                  @L1C*/ 00189200
*/*     WQEBLK, JOBID, SYSNAME, AND JOBNAME                      @01C*/ 00189300
*/*     ARE FOR CONTROL PROGRAM USE ONLY.                        @L1C*/ 00189400
*/*                                                                  */ 00189500
*/* SUBPOOL AND KEY=                                             @L1A*/ 00189600
*/*     ANY AND ANY. THE PARAMETER LIST MAY RESIDE           @G860PSS*/ 00189700
*/*     ABOVE THE 16M LINE.                                  @G860PSS*/ 00189800
*/*                                                                  */ 00189900
*/* RESTRICTIONS =                                               @PAA*/ 00190000
*/*                                                              @PAA*/ 00191000
*/*   "LINKAGE" SPECIFIED AS OR DEFAULTED TO "SVC" REQUIRES      @PAA*/ 00192000
*/*     THE CALLER TO:                                           @PAA*/ 00192100
*/*     - BE IN TASK MODE                                        @PAA*/ 00192200
*/*     - HOLD NO LOCKS                                          @PAA*/ 00192300
*/*     - BE ENABLED FOR INTERRUPTS                              @PAA*/ 00192400
*/*     - BE IN PRIMARY ASC MODE                                 @PAA*/ 00192500
*/*     - BE IN NON-CROSS-MEMORY MODE                            @PAA*/ 00192600
*/*     - "AUTHORIZED" PARAMETERS REQUIRE SUPERVISOR STATE,      @PAA*/ 00192700
*/*        PROTECT KEY 0-7.                                      @PAA*/ 00192800
*/*                                                              @PAA*/ 00192900
*/*   "LINKAGE=BRANCH" WITH "SYNCH=YES" CAN BE USED              @PAA*/ 00193000
*/*     WHEN IN SRB MODE-                                        @PAA*/ 00193100
*/*       A WTOR ISSUED FROM SRB MODE WILL NOT HAVE A JOBNAME OR @PAA*/ 00193200
*/*       JOBID ASSOCIATED WITH IT.                              @PAA*/ 00193300
*/*       IT WILL NOT BE AUTOMATICALLY DOM'D WHEN THE TASK ENDS. @PAA*/ 00193400
*/*     WHEN DISABLED FOR INTERRUPTS-                            @PAA*/ 00193500
*/*       WTOR PARAMETER LIST AND ALL STORAGE ADDRESSED BY IT    @PAA*/ 00193600
*/*       MUST BE IN FIXED OR DREF STORAGE.                      @PAA*/ 00193700
*/*     WHEN LOCKS HELD                                          @PAA*/ 00193800
*/*     WHEN THE PRIMARY ADDRESS SPACE IS NOT THE SAME AS        @PAA*/ 00193900
*/*     THE HOME ADDRESS SPACE-                                  @PAA*/ 00194000
*/*       CALLER MUST BE IN PRIMARY ASC MODE.                    @PAA*/ 00194100
*/*                                                              @PAA*/ 00194200
*/*   IF "LINKAGE=BRANCH" IS SPECIFIED-                          @PAA*/ 00194300
*/*       WQEBLK KEYWORD CANNOT BE SPECIFIED, ABEND IF ATTEMPTED @PAA*/ 00194400
*/*       MESSAGE TEXT MAY NOT CONTAIN DBCS DATA.                @PAA*/ 00194500
*/*       CALLER MUST BE IN SUPERVISOR STATE, PROTECT KEY 0-7.   @PAA*/ 00194600
*/*       CALLER MUST BE IN PRIMARY ASC MODE.                    @PAA*/ 00194700
*/*                                                              @PAA*/ 00194800
*/*                                                                  */ 00194900
*/* DEPENDENCIES =                                               @L1A*/ 00195000
*/*     - LIST AND EXECUTE FORM MUST REFERENCE THE SAME VERSION  @L1A*/ 00195100
*/*          OF THE PARAMETER LIST (WPL)                         @L1A*/ 00195200
*/*                                                                  */ 00195300
*/* MODULE TYPE = MACRO                                          @L1A*/ 00195400
*/*                                                                  */ 00195500
*/* ENTRY POINT = N/A                                            @L1A*/ 00195600
*/*                                                                  */ 00195700
*/* INPUT = SEE INVOCATION                                       @L1A*/ 00195800
*/*                                                                  */ 00195900
*/* OUTPUT =                                                     @L1A*/ 00196000
*/*     PARAMETER LIST TO ISSUE SVC 35 AND/OR THE                @L1A*/ 00196100
*/*     INSTRUCTIONS REQUIRED TO MODIFY THE PARAMETER            @L1A*/ 00196200
*/*     LIST AND ISSUE SVC 35.                                   @L1A*/ 00196300
*/*                                                                  */ 00196400
*/* EXIT, NORMAL                                                 @L1A*/ 00196500
*/*  CONDITION - NO ERRORS DETECTED BY THE WTOR (OR WTO) MACRO   @L1A*/ 00196600
*/*  OUTPUT    - NO MNOTE ISSUED. SEVERITY CODE = 0              @L1A*/ 00196700
*/*                                                                  */ 00196800
*/* EXIT, NORMAL                                                 @L1A*/ 00196900
*/*  CONDITION - INFORMATIONAL MNOTE CONDITION DETECTED BY THE   @L1A*/ 00197000
*/*                WTOR (OR WTO) MACRO                           @L1A*/ 00198000
*/*  OUTPUT    - MNOTE WITH SEVERITY CODE 0 ISSUED WHEN DATA     @L1A*/ 00198100
*/*                IS SPECIFIED FOR A RUN-TIME KEYWORD ON A      @L1A*/ 00198200
*/*                LIST FORM INVOCATION. THE DATA IS IGNORED.    @L1A*/ 00198300
*/*               .A LINE OF INLINE TEXT IS LONGER THAN THE      @PEM*/ 00198400
*/*                  DOCUMENTED ALLOWED MAXIMUM LENGTH.          @PEM*/ 00198500
*/*                                                                  */ 00198600
*/* EXIT, NORMAL                                                 @L1A*/ 00198700
*/*  CONDITION - WARNING CONDITION DETECTED BY THE WTOR          @L1A*/ 00198800
*/*              (OR WTO) MACRO                                  @L1A*/ 00198900
*/*  OUTPUT    - MNOTE WITH SEVERITY CODE 4 ISSUED WHEN:         @L1A*/ 00199000
*/*               .A RUN-TIME KEYWORD IS SPECIFIED WITHOUT DATA  @L1A*/ 00200000
*/*                  DURING A STANDARD/EXECUTE FORM INVOCATION.  @L1A*/ 00201000
*/*                  THE KEYWORD IS IGNORED.                     @L1A*/ 00201100
*/*               .AN INVALID ROUTING CODE IS SPECIFIED          @L1A*/ 00201200
*/*               .AN INVALID RANGE OF ROUTING CODES IS          @L1A*/ 00201300
*/*                  SPECIFIED                                   @L1A*/ 00201400
*/*               .RESERVED ROUTING CODES (30-40) ARE            @PIC*/ 00201500
*/*                  SPECIFIED                               @YA10057*/ 00201600
*/*               .AN INVALID DESCRIPTOR CODE IS SPECIFIED       @L1A*/ 00201700
*/*               .INVALID OR MUTUALLY EXCLUSIVE MCSFLAG         @L1A*/ 00201800
*/*                  VALUES ARE SPECIFIED                        @L1A*/ 00201900
*/*               .AN INVALID MSGTYPE VALUE IS SPECIFIED         @L1A*/ 00202000
*/*                                                                  */ 00203000
*/* EXIT, ERROR                                                  @L1A*/ 00204000
*/*  CONDITION - TERMINATING ERROR CONDITION DETECTED BY         @L1A*/ 00205000
*/*                THE WTOR (OR WTO) MACRO                       @L1A*/ 00206000
*/*  OUTPUT    - MNOTE WITH SEVERITY CODE 12 ISSUED WHEN:        @L1A*/ 00206100
*/*               .THE WQEBLK KEYWORD IS SPECIFIED ALONG WITH    @L1A*/ 00206200
*/*                  OTHER KEYWORDS                              @L1A*/ 00206300
*/*               .THE CONSID KEYWORD IS SPECIFIED WITH THE      @L2A*/ 00206400
*/*                   CONSNAME KEYWORD                           @L2A*/ 00206500
*/*               .THE NUMBER OF TEXT LINES REQUESTED IS NOT 1   @L1A*/ 00206600
*/*               .THE TEXT KEYWORD IS SPECIFIED ALONG WITH      @L4A*/ 00206700
*/*                   INLINE MESSAGE TEXT                        @L4A*/ 00206800
*/*               .MORE THAN 14 LINES OF TEXT                    @L5A*/ 00206900
*/*               ."SYNCH=YES" IS SPECIFIED WITHOUT              @L5A*/ 00207000
*/*                   "LINKAGE=BRANCH"                           @L5A*/ 00208000
*/*               ."LINKAGE=BRANCH" IS SPECIFIED WITHOUT         @L5A*/ 00209000
*/*                   "SYNCH=YES"                                @L5A*/ 00209100
*/*               ."SYNCH=YES" IS SPECIFIED WITH THE WQEBLK      @L5A*/ 00209200
*/*                   KEYWORD                                    @L5A*/ 00209300
*/*               ."SYNCH=YES" IS SPECIFIED WITH                 @L5A*/ 00209400
*/*                   "MCSFLAG=HRDCPY"                           @L5A*/ 00209500
*/*               .MCSFLAG=REG0 or MCSFLAG=QREG0 are specified   @L7A*/ 00209600
*/*                                                                  */ 00209700
*/* EXTERNAL REFERENCES = N/A                                    @L1A*/ 00209800
*/*                                                                  */ 00209900
*/* TABLES = N/A                                                 @L1A*/ 00210000
*/*                                                                  */ 00211000
*/* MACROS =                                                     @L1A*/ 00212000
*/*     THE PARAMETER LIST GENERATED BY THIS MACRO IS MAPPED     @L1A*/ 00213000
*/*     BY THE MACRO IEZWPL. HOWEVER, IEZWPL IS NOT REQUIRED     @L1A*/ 00213100
*/*     TO USE THIS MACRO.                                       @L1A*/ 00213200
*/*                                                                  */ 00213300
*/* Component:          Consoles (SC1CK)                         @L7A*/ 00213400
*/* DSECT Name:         n/a                                      @L7A*/ 00213500
*/* Eye Catcher:        n/a                                      @L7A*/ 00213600
*/*     Offset:         n/a                                      @L7A*/ 00213700
*/*     Length:         n/a                                      @L7A*/ 00213800
*/* Created By:         n/a                                      @L7A*/ 00213900
*/* Pointed to By:      n/a                                      @L7A*/ 00214000
*/* Serialization:      n/a                                      @L7A*/ 00214100
*/* Storage Attributes: n/a                                      @L7A*/ 00214200
*/*     Subpool:        n/a                                      @L7A*/ 00214300
*/* Size:               n/a                                      @L7A*/ 00214400
*/*                                                                  */ 00214500
*/* CHANGE ACTIVITY = G860PSS                                @G860PSS*/ 00214600
*/*                                                                  */ 00214700
*/* $L1=COEXWTO2, JBB2220, 841128, PDF9: JES3/MCS COEXISTENCE        */ 00214800
*/* $P1=PA21155,  JBB2220, 860910, PDF9: JES3/MCS COEXISTENCE        */ 00214900
*/* $P2=PA21240,  JBB2220, 861008, PDF9: JES3/MCS COEXISTENCE        */ 00215000
*/*                   YA10057                                        */ 00216000
*/*                   YA11509 - NO CODE CHANGES.                     */ 00216100
*/*                   YA17152 - REDEFINE COMMON GLOBAL ACRONYMS      */ 00216200
*/* $L2=CNMG2,    HBB4410, 870424, PDR3: CONSOLE MERGE STAGE II      */ 00216300
*/* $L3=TSOOP,    HBB4410, 870622, PDBU: TSO OPERATOR                */ 00216400
*/* $L4=KNWTO,    HBB4410, 870916, PDCM: KANJI/WTO                   */ 00216500
*/* $P3=PEO0021,  HBB4410, 880120, PDBU: CONSOLE MERGE STAGE II      */ 00216600
*/* $P4=PEO0158,  HBB4410, 880210, PDBU: CONSOLE MERGE STAGE II      */ 00216700
*/* $L5=CNITGDHE, HBB4410, 890313, PDHE: CONSOLE INTEGRATION         */ 00216800
*/* $P5=PH25014,  HBB4410, 890503, PDHD: CONSOLE INTEGRATION         */ 00216900
*/* $P6=PH25015,  HBB4410, 890503, PDHD: CONSOLE INTEGRATION         */ 00217000
*/* $P7=PH25024,  HBB4410, 890503, PDHE: CONSOLE INTEGRATION         */ 00218000
*/* $P8=PEO1712,  HBB4410, 890612, PDCM: TEXT PARAMETER DESCRIPTION  */ 00219000
*/* $D1=DEO0124,  HBB4410, 890612, PDCM: DCR 124                     */ 00220000
*/* $D2=DEO0184,  HBB4410, 890619, PDHE: DCR 184                     */ 00220100
*/* $P9=PEO2841,  HBB4410, 891020, PDHE: INITIALIZE &MLW GLOBAL      */ 00220200
*/* $PA=PEO2883,  HBB4410, 891127, PDHE: RESTRICTIONS IN PROLOG      */ 00220300
*/* $PB=PEO3063,  HBB4410, 900105, PDF9: UPDATE TEXT GENERATE        */ 00220400
*/* $PC=PEO3640,  HBB4410, 900305, PDCY: ALLOW NULL TEXT KEYWORD     */ 00220500
*/*                                      VALUE ON LIST FORM OF MACRO */ 00220600
*/* $PD=PEO3824,  HBB4410, 900330, PDHD: WARNING ABOUT LINE TYPES    */ 00220700
*/*                                      WITH TEXT ON EXEC FORM      */ 00220800
*/* $PE=PEO4290,  HBB4410, 900504, PDHE: CHANGE MNOTE SEVERITY       */ 00220900
*/* $01=OY37350,  HBB4410, 901019, PDHE: PEO4845 REMOVE UNSUPPORTED  */ 00221000
*/*                                      PARAMETER                   */ 00221100
*/* $02=OY52324,  HBB4410, 920327, PDHE: TEXT ADDRESS IN REGISTER    */ 00221200
*/* $PF=PIG4139,  HBB5510, 930415, PDHD: LINE TYPE MNOTE WRONG       */ 00221300
*/* $PG=PIG4141,  HBB5510, 930415, PDHD: ML TEXT IN MF=E             */ 00221400
*/* $PH=PYM0027,  HBB7706, 010119, PDKP: FIX APOSTROPHE IN MNOTE     */ 00221500
*/* $L6=CSTARWTO, JBB7727, 020816, PDSS: REMOVE QID SUPPORT          */ 00221600
*/* $PI=PZO0210,  JBB7727, 030615, PDHD: ROUTCDE 29 IS NOW LEGAL     */ 00221700
*/* $03=OA05321,  JBB7727, 031202, PDSS: Correct missing AGO         */ 00221800
*/*                                      (aka PJK1095)               */ 00221900
*/* $L7=CNZ1B,    HBB7720, 040214, PDSS: 1-Byte Console Id Removal   */ 00222000
*/*                                      Part 1                      */ 00222100
*/* $PJ=ME00837,  HBB7720, 040615, PDSW: Reversioning                */ 00222200
*/* $PK=ME01663,  HBB7720, 040901, PDSW: Reversioning Cancelled      */ 00222300
*/* $PL=OA14028,  HBB7730, 051117, PDKV: Clear RCNSPEC when done     */ 00222400
*/* $L8=ME09280,  HBB7750, 070228, PDXB: Jumpify                     */ 00222503
*/*                                                                  */ 00222600
*/* MESSAGES (MNOTES) =                                          @L1A*/ 00222700
*/*                                                                  */ 00222800
*/*  - SEVERITY 0 MNOTES:                                        @L1A*/ 00222900
*/*     - 'KKKKKKKK' DATA IGNORED ON THE LIST FORM OF WTOR.      @L1A*/ 00223000
*/*           WHERE 'KKKKKKKK' MAY BE KEY, CONSID, JOBID,        @L1A*/ 00223100
*/*           JOBNAME, TOKEN, SYSNAME, CONSNAME,                 @01C*/ 00223200
*/*           RPLYISUR, CART, TEXT, OR LINKAGE                   @L5C*/ 00223300
*/*     - INLINE TEXT EXCEEDS ALLOWED MAXIMUM. TEXT LINE         @PEM*/ 00223400
*/*            (NUMBER N) HAS BEEN TRUNCATED.                    @PEM*/ 00223500
*/*          WHERE 'NUMBER N' APPLIES TO THE LINE NUMBER ON A    @PEM*/ 00223600
*/*          MULTI LINE MESSAGE                                  @PEM*/ 00223700
*/*                                                                  */ 00223800
*/*  - SEVERITY 4 MNOTES:                                        @L1A*/ 00223900
*/*     - RESERVED ROUTING CODE(S) 30-40 IGNORED.                @PIC*/ 00224000
*/*     - INVALID RANGE OF ROUTING CODES IGNORED.                @L1A*/ 00224100
*/*     - 'KKKKKKKK' KEYWORD IGNORED. NO VALUE SPECIFIED.        @L1A*/ 00224200
*/*           WHERE 'KKKKKKKK' MAY BE WQEBLK, CONSID, JOBID,     @L1A*/ 00224300
*/*           JOBNAME, KEY, TOKEN, SYSNAME, CONSNAME,            @01C*/ 00224400
*/*           CART OR TEXT.                                      @L4A*/ 00224500
*/*     - ROUTCDE  N  IS INVALID ROUTING CODE. IT IS IGNORED.    @L1A*/ 00224600
*/*     - DESC  N  IS INVALID DESCRIPTOR CODE. IT IS IGNORED.    @L1A*/ 00224700
*/*     - MSGTYP FIELD INVALID. N IS ASSUMED                     @L1A*/ 00224800
*/*     - MCSFLAG= &MCSFLAG(&I) IS INVALID. IT IS IGNORED.       @L1A*/ 00224900
*/*     - HRDCPY AND NOCPY MUTUALLY EXCLUSIVE, MCSFLAG=HRDCPY    @L1A*/ 00225000
*/*         ASSUMED                                              @L1A*/ 00225100
*/*     - LINKAGE IS TOO LONG. ARGUMENTS ARE IGNORED AFTER XXXXX @L5A*/ 00226000
*/*     - SYNCH IS TOO LONG. ARGUMENTS ARE IGNORED AFTER XXXXXXX @L5A*/ 00227000
*/*                                                                  */ 00228000
*/*  - SEVERITY 12 MNOTES:                                       @L1A*/ 00228100
*/*     - NO TEXT GENERATED. 'WQEBLK' IS MUTUALLY EXCLUSIVE      @L1A*/ 00228200
*/*         WITH ALL OTHER KEYWORDS.                             @L1A*/ 00228300
*/*     - NO TEXT GENERATED. 'CONSID' IS MUTUALLY EXCLUSIVE      @L2A*/ 00228400
*/*         WITH CONSNAME KEYWORDS.                              @L2A*/ 00228500
*/*     - NUMBER OF LINES REQUESTED IS NOT 1 - GENERATION        @L1A*/ 00228600
*/*         TERMINATED                                           @L1A*/ 00228700
*/*     - NO TEXT GENERATED. INLINE TEXT IS MUTUALLY EXCLUSIVE   @L4A*/ 00228800
*/*         WITH 'TEXT'.                                         @L4A*/ 00228900
*/*     - NO TEXT GENERATED.  'SYNCH=YES' REQUIRES               @L5A*/ 00229000
*/*         'LINKAGE=BRANCH'                                     @L5A*/ 00230000
*/*     - NO TEXT GENERATED.  'LINKAGE=BRANCH' REQUIRES          @L5A*/ 00231000
*/*         'SYNCH=YES'                                          @L5A*/ 00232000
*/*     - NO TEXT GENERATED.  'SYNCH=YES' IS MUTUALLY EXCLUSIVE  @L5A*/ 00232100
*/*         WITH THE WQEBLK KEYWORD                              @L5A*/ 00232200
*/*     - NO TEXT GENERATED.  'SYNCH=YES' IS MUTUALLY EXCLUSIVE  @L5A*/ 00232300
*/*         WITH 'MCSFLAG=HRDCPY'                                @L5A*/ 00232400
*/*     - NO TEXT GENERATED.  SPECIFIED LINKAGE VALUE WAS NOT    @L5A*/ 00232500
*/*         SVC OR BRANCH.                                       @L5A*/ 00232600
*/*     - NO TEXT GENERATED.  SPECIFIED SYNCH VALUE WAS NOT      @L5A*/ 00232700
*/*         YES OR NO.                                           @L5A*/ 00232800
*/*     - TOO MANY LINES OF TEXT.  MAX=14 WHEN SYNCH=YES         @L5A*/ 00232900
*/*     - MCSFLAG=REG0 NOT SUPPORTED ON RELEASE HBB7720 OR       @L7A*/ 00233000
*/*         ABOVE. USE CONSID= INSTEAD.                          @L7A*/ 00234000
*/*     - MCSFLAG=QREG0 NOT SUPPORTED ON RELEASE HBB7720 OR      @L7A*/ 00235000
*/*         ABOVE. USE CONSID= INSTEAD.                          @L7A*/ 00235100
*/*                                                                  */ 00235200
*/* NOTES     = THE WPL IS GENERATED BY THIS MACRO IN DIFFERENT  @L1A*/ 00235300
*/*             FORMATS DEPENDING ON THE KEYWORDS PROVIDED.      @L1A*/ 00235400
*/*             A STANDARD WPL IS GENERATED IF ONLY THE          @L1A*/ 00235500
*/*             FOLLOWING KEYWORDS ARE SPECIFIED: ROUTCDE(1-16), @L1A*/ 00235600
*/*             DESC, MCSFLAG, MSGTYPE.                          @L6C*/ 00235700
*/*             IF ANY OTHER KEYWORDS ARE SPECIFIED, A DIFFERENT @L1A*/ 00235800
*/*             STRUCTURE (WPX - MAPPED BY IEZWPL) IS BUILT      @L1A*/ 00235900
*/*             FOLLOWING THE MESSAGE TEXT.                      @L1A*/ 00236000
*/*                                                                  */ 00237000
*/*             IN ORDER TO SUPPORT ASSEMBLER F, THIS MACRO      @P2A*/ 00238000
*/*             MUST BE STRUCTURED SUCH THAT THERE ARE NO        @P2A*/ 00238100
*/*             INSTRUCTIONS MORE THAN 3 LINES IN LENGTH.        @P2A*/ 00238200
*/*                                                                  */ 00238300
*/*             IF LINKAGE=BRANCH IS SPECIFIED THE CONTENTS OF   @L5A*/ 00238400
*/*             REGISTER 14 WILL BE DESTROYED.                   @L5A*/ 00238500
*/*                                                                  */ 00238600
*/** End of Specifications *******************************************/ 00238700
*/* C ALLOW THE ISSUER TO PROVIDE 31 BIT POINTERS            @G860PSS*/ 00238800
*/* A PROVIDE MVS/370 FORMAT PARM LIST                       @G860PSS*/ 00238900
*/* A MODIFY THE MACRO TO PROCESS WQEBLK, 128 ROUTING CODES,     @L1A*/ 00239000
*/*   CONSID, JOBID, KEY, TOKEN, SYSNAME, DOMID, JOBNAME AND THE @L1A*/ 00240000
*/*   'EXTENDED' MF PARAMETER.                                   @L1A*/ 00241000
*/* C LIMIT STATEMENT LENGTHS TO 3 LINES MAX TO SUPPORT ASM F    @P1A*/ 00242000
*/* C REFIX PA21155 SO THAT WPX IS ALWAYS CORRECTLY GENERATED    @P2A*/ 00242100
*/* C ALLOW ROUTING CODE 41 TO BE SPECIFIED                  @YA10057*/ 00242200
*/* NO CODE CHANGE. REASSEM FOR PTF PACKAGING PROBLEM ONLY.  @YA11509*/ 00242300
*/* C REDEFINE GLOBAL NAMES  @LEN ,&MCS ,&WTOLEN UNIQUELY    @YA17152*/ 00242400
*/* A MODIFY THE MACRO TO PROCESS CONSNAME AND REPLY CONSOLE     @L2A*/ 00242500
*/*   NAME/ID ADDRESS                                            @L2A*/ 00242600
*/* A MODIFY THE MACRO TO PROCESS CART                           @D1C*/ 00242700
*/* A MODIFY THE MACRO TO PROCESS TEXT KEYWORD                   @L4A*/ 00242800
*/* C FIXED REPLY ADDRESS AND ECB ADDRESS FOR WTOR STANDARD FORM @P3A*/ 00242900
*/* C PUT BACK CODE TO INITIALIZE REPLY/ECB ADDRESSES FOR WTOR   @P4A*/ 00243000
*/* C MODIFY THE MACRO TO PROCESS LINKAGE AND SYNCH KEYWORDS     @L5A*/ 00244000
*/* C ALLOW LINKAGE TO BE NULL IN THE LIST FORM                  @P5A*/ 00245000
*/* C UPDATE SYNCH=NO IN THE EXECUTE FORM                        @P6A*/ 00245100
*/* C TEXT KEYWORD MULTILINE EXECUTE FORM NOT LOADING ADDRESS OF @P7A*/ 00245200
*/*   THE FIRST LINE OF TEXT                                     @P7A*/ 00245300
*/* A INITIALIZE GLOBAL VARIABLE &MLW                            @P9A*/ 00245400
*/* A ADD RESTICTIONS TO PROLOG                                  @PAA*/ 00245500
*/* C UPDATE GENERATE FOR MESSAGE TEXT                           @PBA*/ 00245600
*/* C ALLOW NULL KEYWORD VALUE ON LIST FORM OF MACRO             @PCA*/ 00245700
*/* C WARNING MESSAGE IF LINE TYPE GIVEN ON EXEC FORM            @PDA*/ 00245800
*/* C CHANGE SEVERITY ON TEXT LENGTH MNOTE                       @PEA*/ 00245900
*/* C REMOVE UNSUPPORTED KEYWORD                                 @01A*/ 00246000
*/* C TEXT ADDRESS IN REGISTER                                   @02A*/ 00247000
*/* C CORRECT THE CHECKS FOR NON-NULL LINETYPE IN EXEC FORM      @PFA*/ 00248000
*/* C MOVE STORE OF TEXT ADDR FOR 2ND-NTH LINES                  @PGA*/ 00248100
*/* C REMOVE SUPPORT FOR QID                                     @L6A*/ 00248200
*/* C ROUTING CODE 29 NO LONGER RESERVED. 30-40 STILL RESERVED.  @PIA*/ 00248300
*/* A Add missing AGO after label ELENREG                        @03A*/ 00248400
*/* C Update prolog to reflect REG0 and QREG0 no longer          @L7A*/ 00248500
*/*   supported.                                                 @L7A*/ 00248600
*/* C Change version number from 5694-A01 to 5637-A01.           @PJA*/ 00248700
*/* C After WTOR has finished, clear RCNSPEC so subsequent WTOs      */ 00248800
*/*   will not use the residual value unexpectedly               @PLA*/ 00248900
*/********************************************************************/ 00249000
* /*                                                                    00249100
         MACRO                                                          00249200
&NAME    WTOR  &MESG,&RYAD,&LENGTH,&ECB,&MF=I,&MSGTYP=,&ROUTCDE=,      X00249300
               &DESC=,&MCSFLAG=,&WQEBLK=^,&CONSID=^,&JOBID=^,          X00249400
               &KEY=^,&TOKEN=^,&SYSNAME=^,&JOBNAME=^,                  X00249500
               &CONSNAME=^,&RPLYISUR=^,&CART=^,&TEXT=^,&LINKAGE=^,     X00249600
               &SYNCH=^                                            @L6C 00249700
.********************************************************************** 00249800
.*       DECLARE THE GLOBAL AND LOCAL VARIABLES                    @L1C 00249900
.********************************************************************** 00250000
         GBLA  &IHBLEN             MESSAGE LENGTH (SET BY WTO) @YA17152 00260000
         GBLB  &IHBWTOR            THIS IS A WTOR                  @L1C 00270000
         GBLB  &IHBMCS             MCS FLAGS (SET BY WTO)      @YA17152 00280000
         GBLB  &SWM                GENERATE MSGTYP FLAGS (WTO)     @L1C 00290000
         GBLB  &WTOERR             WTO ISSUED A TERMINATING MNOTE  @L1C 00300000
         GBLB  &IWPXBIT            A WPX HAS BEEN BUILT            @L1C 00310000
         GBLB  &IWQEBIT            A WQEBLK SETUP HAS OCCURRED     @L1A 00320000
         GBLB  &TEXTKEY            TEXT KEYWORD SPECIFIED          @L4A 00330000
         GBLB  &RAREG              REPLY ADDRESS IN REGISTER IND.  @L1C 00340000
         GBLB  &RLREG              REPLY LENGTH IN REGISTER IND.   @L1C 00350000
         GBLB  &EAREG              ECB ADDRESS IN REGISTER IND.    @L1C 00360000
         GBLB  &RCNREG             REPLY CONSOLE NAME/ID ADDRESS IN    X00361000
                                   REGISTER IND.                   @L2A 00362000
         GBLB  &RCNSPEC            REPLY CONSOLE NAME/ID ADDRESS       X00363000
                                   KEYWORD SPECIFIED               @L2A 00364000
         GBLB  &MLW                MULTI-LINE WTO/R SPECIFIED      @L5A 00365000
         GBLC  &TEXTVAL            TEXT ADDRESS, IF SPECIFIED      @L4A 00365100
         GBLC  &SYSSPLV            SYSTEM PRODUCT LEVEL            @L1C 00365200
         GBLC  &CD(16)             FLAGS SET BY WTO MACRO          @L1A 00365300
         GBLC  &WTORYA             REPLY ADDRESS FOR WTO MACRO     @L1A 00365400
         GBLC  &WTOLENR            REPLY LENGTH FOR WTOR       @YA17152 00365500
         GBLC  &WTOECB             ECB ADDRESS FOR WTO MACRO       @L1A 00365600
         GBLC  &WTORCN             REPLY CONSOLE NAME/ID ADDRESS FOR   X00365700
                                   WTO MACRO                       @L2A 00365800
         GBLC  &GNAME              LABEL AFTER PARAMETER LIST      @L1C 00365900
         GBLC  &ILMEQU             INLINE MESSAGE TEXT VALUE       @L5A 00366000
         LCLA  &K                  LENGTH FIELD                    @L5M 00366100
         LCLA  &H                  PROCESSED MAJOR INDEX           @L5A 00366200
         LCLA  &MAXLINS            MAXIMUM NUMBER OF LINES ALLOWED WHEN+00366300
                                   SYNCH = YES                     @L5A 00366400
         LCLA  &MLINDX             MULTI-LINE OFFSET INDEX         @L5A 00366500
         LCLB  &EMCS(16)           EXTENDED MCSFLAG SAVEAREA       @L4C 00366600
         LCLC  &VALH               TEXT LINE VALUE                 @L5A 00366700
         LCLC  &VALH1              TEXT ADDRESS VALUE              @L5A 00366800
         LCLC  &VALH2              TEXT LINE TYPE VALUE            @PFA 00366900
         LCLB  &LTWARN             LINE TYPE WARNING ISSUED        @PDA 00367000
         LCLC  &L,&LR                                              @MXA 00367100
         GBLC  &SYSAM64                                            @MXA 00367200
         SYSSTATE TEST                                             @MXA 00367300
         AIF   ('&SYSAM64' EQ 'YES').AM640                         @MXA 00367400
&L       SETC  'L'                                                 @MXA 00367500
&LR      SETC  'LR'                                                @MXA 00367600
         AGO   .AM31640                                            @MXA 00367700
.AM640   ANOP                                                      @MXA 00367800
&L       SETC  'LLGT'                                              @MXA 00367900
&LR      SETC  'LGR'                                               @MXA 00368000
.AM31640 ANOP                                                      @MXA 00368100
&MAXLINS SETA  14                  MAXIMUM NUMBER OF LINES ALLOWED WHEN+00368200
                                   SYNCH = YES                     @L5A 00368300
&MLW     SETB  0                   INITIALIZE MULTILINE FLAG       @P9A 00368400
.********************************************************************** 00368500
.*       INVOKE THE SPLEVEL MACRO TO DETERMINE WHICH FORMAT OF @G860PSS 00368600
.*       THE PARAMETER LIST SHOULD BE BUILT. IF THE MVS/370    @G860PSS 00368700
.*       FORMAT IS REQUIRED, INVOKE THE WTOR7 MACRO.           @G860PSS 00368800
.********************************************************************** 00368900
         SPLEVEL TEST                                          @G860PSS 00369000
         AIF   ('&SYSSPLV' NE '1').NOT370 WHICH FORMAT?        @G860PSS 00369100
&NAME    WTOR7 &MESG,&RYAD,&LENGTH,&ECB,MF=&MF,MSGTYP=&MSGTYP,         X00369200
               ROUTCDE=&ROUTCDE,DESC=&DESC,MCSFLAG=&MCSFLAG        @L6C 00369300
         MEXIT                                                 @G860PSS 00369400
.NOT370  ANOP                                                  @G860PSS 00369500
.********************************************************************** 00369600
.*       DEFINE THE LABEL TO BRANCH TO AFTER THE PARAMETER     @G860PSS 00369700
.*       LIST                                                  @G860PSS 00369800
.********************************************************************** 00369900
&GNAME   SETC  'IHB'.'&SYSNDX'                                          00370000
.********************************************************************** 00380000
.*       SYNTAX CHECK THE LINKAGE AND SYNCH KEYWORDS               @L5A 00390000
.*       ISSUE ERROR MESSAGES WHERE APPROPRIATE                    @L5A 00400000
.********************************************************************** 00410000
         AIF   ('&LINKAGE(1)' EQ '^').CHKSYNC    LINKAGE NOT NAMED @L5A 00420000
         AIF   ('&LINKAGE(1)' EQ '' AND '&MF' EQ 'L').CHKSYNC      @P5A 00430000
         AIF   ('&LINKAGE(1)' NE 'SVC' AND                             +00440000
                '&LINKAGE(1)' NE 'BRANCH').ERROR10   ISSUE MESSAGE @L5A 00450000
         AIF   ('&LINKAGE(1)' EQ 'BRANCH' AND                          +00460000
                '&SYNCH(1)' NE 'YES').ERROR16        ISSUE MESSAGE @L5A 00470000
         AIF   (N'&LINKAGE LE 1 AND                                    +00471000
                N'&LINKAGE(1) LE 1).CHKSYNC     MORE THAN ONE OPERAND  +00472000
                                                  SPECIFIED?       @L5A 00473000
         MNOTE 4,'*** ''LINKAGE=&LINKAGE'' IS TOO LONG.  ARGUMENTS ARE +00474000
               IGNORED AFTER ''&LINKAGE(1,1)''.'                   @L5A 00475000
.CHKSYNC ANOP                                                           00476000
         AIF   ('&SYNCH(1)' EQ '^').CHKTXTM        SYNCH NOT NAMED @L5A 00477000
         AIF   ('&SYNCH(1)' NE 'YES' AND                               +00478000
                '&SYNCH(1)' NE 'NO').ERROR12         ISSUE MESSAGE @L5A 00479000
         AIF   ('&SYNCH(1)' EQ 'YES' AND                               +00480000
                '&WQEBLK(1)' NE '^').ERROR13         ISSUE MESSAGE @L5A 00481000
         AIF   ('&SYNCH(1)' EQ 'YES' AND                               +00482000
               '&MF' NE 'L' AND                                        +00483000
                '&LINKAGE(1)' NE 'BRANCH').ERROR15   ISSUE MESSAGE @P5C 00483100
         AIF   (N'&SYNCH LE 1 AND                                      +00483200
                N'&SYNCH(1) LE 1).CHKTXTM       MORE THAN ONE OPERAND  +00483300
                                                  SPECIFIED?       @L5A 00483400
         MNOTE 4,'*** ''SYNCH=&SYNCH'' IS TOO LONG.  ARGUMENTS ARE IGNO+00483500
               RED AFTER ''&SYNCH(1,1)''.'                         @L5A 00483600
.********************************************************************** 00483700
.*       VERIFY THAT INLINE TEXT AND THE TEXT KEYWORD WERE NOT     @L4A 00483800
.*       BOTH SPECIFIED                                            @L4A 00483900
.********************************************************************** 00484000
.CHKTXTM ANOP                                                      @L5A 00485000
         AIF   ('&TEXT' EQ '^' OR  '&MESG' EQ '').TEXTOK  BRANCH IF    X00486000
                                           NOT BOTH                @L4A 00487000
         MNOTE 12,'NO TEXT GENERATED. ''TEXT'' AND INLINE TEXT ARE MUTUX00488000
               ALLY EXCLUSIVE.'                                    @L4A 00489000
         MEXIT                                                     @L4A 00490000
.TEXTOK  ANOP                                                      @L4A 00500000
.********************************************************************** 00501000
.*       FILL IN THE REPLY ADDRESS, REPLY LENGTH, ECB AND          @L1A 00502000
.*       REPLY CONSOLE NAME/ID ADDRESS FOR THE WTO MACRO TO USE    @L2C 00503000
.*       IN CASE IT NEEDS TO BUILD A WPX FOR THIS MACRO.           @L1A 00504000
.********************************************************************** 00504100
&RAREG   SETB  0                           INITIALIZE REPLY ADDRESS    X00504200
                                           IN REGISTER INDICATOR   @L1A 00504300
&RLREG   SETB  0                           INITIALIZE REPLY LENGTH     X00504400
                                           IN REGISTER INDICATOR   @L1A 00504500
&EAREG   SETB  0                           INITIALIZE ECB ADDRESS      X00504600
                                           IN REGISTER INDICATOR   @L1A 00504700
&RCNREG  SETB  0                           INITIALIZE REPLY CONSOLE    X00504800
                                           ADDRESS IN REGISTER IND.@L2A 00504900
&RCNSPEC SETB  0                           INITIALIZE REPLY CONSOLE    X00505000
                                           KEYWORD INDICATOR       @L2A 00505100
&TEXTKEY SETB  ('&TEXT' NE '^' AND '&TEXT' NE '')                  @L4A 00505200
&TEXTVAL SETC  '^'                         INITIALIZE TEXT ADDRESS @L4A 00505300
         AIF   (&TEXTKEY).TXTVALS          BRANCH IF TEXT KEY USED @L4A 00505400
         AIF   (N'&MESG EQ 1).SINGLIN      CHECK IF MULTI-LINE     @L5A 00505500
&K       SETA  K'&MESG                     INLINE MULTI-LINE TEXT      +00505600
                                           LENGTH INCLUDING PARENS @L5A 00505700
.SINGLIN ANOP                                                           00505800
&WTORYA  SETC  '&RYAD'                     FILL IN REPLY ADDRESS FOR   X00505900
                                           WTO MACRO               @L1A 00506000
&WTOLENR SETC  '&LENGTH'                   FILL IN REPLY LENGTH FOR    X00507000
                                           WTO MACRO           @YA17152 00508000
&WTOECB  SETC  '&ECB'                      FILL IN ECB ADDRESS FOR     X00509000
                                           WTO MACRO               @L1A 00510000
         AGO   .REGVAL                     CONTINUE                @L4A 00511000
.TXTVALS ANOP                              TEXT KEYWORD USED       @L4A 00511100
&TEXTVAL SETC  '&TEXT(1)'                  FILL IN TEXT ADDRESS FOR    X00511200
                                           WTO MACRO               @L4A 00511300
&WTORYA  SETC  '&TEXT(2)'                  FILL IN REPLY ADDRESS FOR   X00511400
                                           WTO MACRO               @L4A 00511500
&WTOLENR SETC  '&TEXT(3)'                  FILL IN REPLY LENGTH FOR    X00511600
                                           WTO MACRO           @YA17152 00511700
&WTOECB  SETC  '&TEXT(4)'                  FILL IN ECB ADDRESS FOR     X00511800
                                           WTO MACRO               @L4A 00511900
.REGVAL  ANOP                                                      @L4A 00512000
         AIF   ('&WTORYA' EQ '').RCNWTO  IF NO REPLY ADDRESS, CHECK    X00512100
                                           FOR REPLY CONS/NAME ID  @L4A 00512200
         AIF   ('&WTORYA'(1,1) NE '(').RCNWTO IF REPLY ADDRESS NOT IN  X00512300
                                           REGISTER, LEAVE AS IS   @L4A 00512400
&RAREG   SETB  1                           REPLY ADDR IN REGISTER  @L1A 00512500
         AIF   (&TEXTKEY).RATEXT           BRANCH IF TEXT KEY USED @L4A 00512600
&WTORYA  SETC  '&RYAD(1)'                  FILL IN REG VALUE OF REPLY  X00512700
                                           ADDRESS FOR WTO MACRO   @L1A 00512800
         AGO   .RCNWTO                     GO CHECK REPLY CONSNAME @L4A 00512900
.RATEXT  ANOP                              REGISTER/TEXT KEYWORD   @L4A 00513000
&K       SETA  K'&WTORYA                   SET LENGTH OF VALUE     @L4A 00513100
&WTORYA  SETC  '&WTORYA'(2,&K-2)           EXTRACT REGISTER VALUE  @L4A 00513200
.RCNWTO  ANOP                              CHECK REPLY CONSOLE NAME@L2A 00513300
&WTORCN  SETC  ''                          SET REPLY CONSOLE NAME/ID   X00513400
                                           TO NO VALUE             @L2A 00513500
         AIF   ('&RPLYISUR' EQ '^').RLWTO  IF NO REPLY CONSOLE NAME/ID X00513600
                                           CHECK FOR REPLY LENGTH  @L2A 00513700
&RCNSPEC SETB  1                           REPLY CONSOLE NAME/ID ADDR  X00513800
                                           KEYWORD SPECIFIED       @L2A 00513900
         AIF   ('&RPLYISUR' EQ '').RLWTO   IF NO REPLY CONSOLE NAME/ID X00514000
                                           DATA CHECK FOR REPLY LENGTH X00514100
                                                                   @L2A 00514200
         AIF   ('&RPLYISUR'(1,1) NE '(').NOREG  IF RPLY CNSOLE NAME/ID X00514300
                                           NOT IN REGISTER GO SET VALUEX00514400
                                           IN GLOBAL VARIABLE.     @L2A 00514500
&RCNREG  SETB  1                           REPLY CONSOLE NAME/ID ADDR  X00514600
                                           IN REGISTER INDICATOR   @L2A 00514700
&WTORCN  SETC  '&RPLYISUR(1)'              YES,IN REGISTER SET GLOBAL  X00514800
                                           VARIABLE FOR WTO        @L2A 00514900
         AGO   .RLWTO                      CHECK FOR REPLY LENGTH  @L2A 00515000
.NOREG   ANOP                                                      @L2A 00515100
&WTORCN  SETC  '&RPLYISUR'                 NOT IN REGISTER SET GLOBAL  X00515200
                                           VARIABLE FOR WTO        @L2A 00515300
.RLWTO   ANOP                              CHECK REPLY LENGTH      @L1A 00515400
         AIF   ('&WTOLENR' EQ '').EAWTO    IF NO REPLY LENGTH, CHECK   X00515500
                                           FOR ECB ADDRESS     @YA17152 00515600
         AIF   ('&WTOLENR'(1,1) NE '(').EAWTO IF REPLY LENGTH NOT IN A X00515700
                                           REG, LEAVE AS IS    @YA17152 00515800
&RLREG   SETB  1                           REPLY LEN  IN REGISTER  @L1A 00515900
         AIF   (&TEXTKEY).RLTEXT           BRANCH IF TEXT KEY USED @L4A 00516000
&WTOLENR SETC  '&LENGTH(1)'                FILL IN REG VALUE OF REPLY  X00516100
                                           LENGTH FOR WTO      @YA17152 00516200
         AGO   .EAWTO                      GO CHECK ECB ADDRESS    @L4A 00516300
.RLTEXT  ANOP                              REGISTER/TEXT KEYWORD   @L4A 00516400
&K       SETA  K'&WTOLENR                  SET LENGTH OF VALUE @YA17152 00516500
&WTOLENR SETC  '&WTOLENR'(2,&K-2)          EXTRACT REG VALUE   @YA17152 00516600
.EAWTO   ANOP                              CHECK ECB ADDRESS       @L1A 00516700
         AIF   ('&WTOECB' EQ '').DOWQE     IF NO ECB ADDRESS, CHECK    X00516800
                                           FOR WQEBLK              @L4A 00516900
         AIF   ('&WTOECB'(1,1) NE '(').DOWQE IF ECB ADDRESS NOT IN A   X00517000
                                           REGISTER, LEAVE AS IS   @L4A 00517100
&EAREG   SETB  1                           ECB ADDR IN REGISTER    @L1A 00517200
         AIF   (&TEXTKEY).EATEXT           BRANCH IF TEXT KEY USED @L4A 00517300
&WTOECB  SETC  '&ECB(1)'                   FILL IN REG VALUE OF ECB    X00517400
                                           ADDRESS FOR WTO MACRO   @L1A 00517500
         AGO   .DOWQE                      GO CHECK FOR WQEBLK     @L4A 00517600
.EATEXT  ANOP                              REGISTER/TEXT KEYWORD   @L4A 00517700
&K       SETA  K'&WTOECB                   SET LENGTH OF VALUE     @L4A 00517800
&WTOECB  SETC  '&WTOECB'(2,&K-2)           EXTRACT REGISTER VALUE  @L4A 00517900
.DOWQE   ANOP                              CHECK FOR WQEBLK        @L1A 00518000
.********************************************************************** 00518100
.*       MAKE THE FOLLOWING CHECKS:                            @G860PSS 00518200
.*           WQEBLK         - IF NOT SPECIFIED ALONE, ISSUE ERROR  @L1A 00518300
.*                            MESSAGE.  THE WTO MACRO WILL MAKE    @L1A 00518400
.*                            THE REST OF THE EXCLUSIVITY CHECKS.  @L1A 00518500
.*           CONSNAME AND CONSID HAVE NOT BOTH BEEN SPECIFIED      @L2A 00518600
.*           MLWTOR         - IF SO, ISSUE ERROR MESSAGE       @G860PSS 00518700
.*           INLINE REQUEST - IF SO, GO PROCESS                @G860PSS 00518800
.*           LIST REQUEST   - IF SO, GO PROCESS                @G860PSS 00518900
.********************************************************************** 00519000
         AIF   ('&WQEBLK' NE '^' AND ('&MESG' NE '' OR '&TEXT' NE ''   X00520000
                OR '&RYAD' NE '' OR '&LENGTH' NE '' OR '&RPLYISUR' NE  X00530000
                '^' OR '&ECB' NE '' OR '&MF' NE 'I')).ERROR8       @L2C 00540000
         AIF   ('&CONSNAME' NE '^' AND  '&CONSID' NE '^').ERROR9   @L2A 00541000
.******************************************************************@L5A 00542000
.*       CHECK IF THIS IS A LINKAGE=BRANCH,SYNCH=YES INVOCATION.   @L5A 00543000
.*       MULTI-LINE WTORS ARE ALLOWED ONLY IF SYNCH=YES            @L5A 00544000
.*       OTHERWISE SINGLE-LINE WTORS ONLY.                         @L5A 00545000
.*       IF MULTI-LINE IS ALLOWED CHECK FOR THE MAXIMUM NUMBER OF  @L5A 00546000
.*       LINES ALLOWED AS DEFINED BY VARIABLE &MAXLINS.            @L5A 00547000
.******************************************************************@L5A 00548000
         AIF   ('&SYNCH(1)' NE 'YES').NONSYNC                      @L5A 00548100
         AIF   (N'&SYSLIST(1) GT &MAXLINS).ERROR17    MULTI-LINE ONLY  +00548200
                                           ALLOWED WITH SYNCH=YES  @L5A 00548300
         AIF   (N'&TEXT(1)    GT &MAXLINS).ERROR17    MULTI-LINE ONLY  +00548400
                                           ALLOWED WITH SYNCH=YES  @L5A 00548500
&MLW     SETB  (N'&TEXT(1) GT 1 OR N'&SYSLIST(1) GT 1)  SET MULTI-LINE +00548600
                                           FLAG BIT                @L5A 00548700
         AGO   .CHK4MFI                                            @L5A 00548800
.NONSYNC ANOP                                                      @L5A 00548900
         AIF   (N'&SYSLIST(1) GT 1).ERROR7 ERROR IF MULTI-LINE WTOR     00549000
         AIF   (N'&TEXT(1) GT 1).ERROR7   ERROR IF MULTI-LINE WTOR @L4A 00550000
.CHK4MFI ANOP                                                      @L5A 00560000
         AIF   ('&MF' EQ 'I').IROUT        STANDARD FORM           @L1C 00570000
         AIF   ('&MF' EQ 'L').LROUT        LIST FORM               @L1C 00580000
.********************************************************************** 00590000
.*       CHECK FOR A PARAMETER LIST NAME AND AN EXECUTE FORM.  @G860PSS 00600000
.*       IF NOT VALID, GO ISSUE ERROR MESSAGE                  @G860PSS 00610000
.********************************************************************** 00620000
         AIF   (N'&MF LE 1).ERROR1         ERROR IF BAD MF STRUCTURE    00630000
         AIF   ('&MF(1)' NE 'E').ERROR1    ERROR IF NOT EXECUTE FORM    00640000
.********************************************************************** 00650000
.*                                                             @G860PSS 00660000
.*       EXECUTE FORM                                          @G860PSS 00670000
.*                                                             @G860PSS 00680000
.********************************************************************** 00690000
.********************************************************************** 00700000
.*       SET UP REG1 TO POINT TO THE USER PARM LIST                @L1A 00710000
.********************************************************************** 00720000
&NAME    IHBINNRR &MF(2)              ADDRESS OF PARM LIST INTO R1 @MXC 00730000
.********************************************************************** 00740000
.*       IF THE THIRD FIELD IN THE MACRO FORMAT KEYWORD IS         @L1A 00750000
.*       BLANK, IT MEANS THAT NO WPX HAS BEEN BUILT SO THE         @L1A 00760000
.*       REPLY ADDRESS, REPLY LENGTH, AND ECB ADDRESS ARE STORED   @L1A 00770000
.*       IN THE WTOR PREFIX IF SPECIFIED.                          @L1A 00780000
.*                                                                      00790000
.*       IF THE THIRD FIELD IN THE MACRO FORMAT KEYWORD IS         @L1A 00791000
.*       'EXTENDED', IT MEANS THAT A WPX HAS BEEN BUILT SO THE     @L1A 00792000
.*       REPLY ADDRESS, REPLY LENGTH, ECB ADDRESS AND OTHER VALID  @L1A 00793000
.*       KEYWORDS ARE STORED INTO THE WPX IF SPECIFIED.            @L1A 00793100
.*                                                                      00793200
.*       IF THE THIRD FIELD IN THE MACRO FORMAT KEYWORD IS         @L1A 00793300
.*       NOT EITHER OF THE ABOVE, AN ERROR MESSAGE IS ISSUED.      @L1A 00793400
.*                                                                 @L4A 00793500
.*       IF THE TEXT KEYWORD HAS BEEN SPECIFIED, ITS VALUE IS      @L4A 00793600
.*       STORED INTO THE PARAMETER LIST INSTEAD OF INLINE TEXT.    @L4A 00793700
.*       IN THIS CASE, THE TEXT KEYWORD IS ASSUMED TO HAVE BEEN    @L4A 00793800
.*       SPECIFIED ON THE LIST FORM OF THE MACRO. THE TEXT         @L4A 00793900
.*       KEYWORD RESULTS IN THE GENERATION OF A WPX.               @L4A 00794000
.********************************************************************** 00794100
         AIF   ('&JOBID'   NE '^' OR '&JOBNAME' NE '^' OR              X00794200
                '&KEY'     NE '^' OR '&TOKEN'   NE '^' OR              X00794300
                '&SYSNAME' NE '^').WPXFILL                         @01C 00794400
         AIF   ('&CONSID'  NE '^' OR '&CART'    NE '^' OR              X00794500
                '&CONSNAME' NE '^' OR '&TEXT' NE '^').WPXFILL      @L4C 00794600
         AIF   ('&RPLYISUR' NE '^').WPXFILL IF ANY RUN-TIME KEYWORDS   X00794700
                                       ARE SPECIFIED, FILL IN THE PRE  X00794800
                                       BUILT WPX                   @L2C 00794900
         AIF   ('&SYNCH'  NE '^').WPXFILL                          @P6A 00795000
         AIF   ('&MF(3)' EQ '').OLDFILL STORE IN PREFIX            @L1A 00795100
         AIF   ('&MF(3)' NE 'EXTENDED').ERROR1 INVALID MF TYPE     @L1A 00795200
.********************************************************************** 00795300
.*       THE FOLLOWING CODE WILL SET UP REG14 TO POINT TO THE      @L1A 00795400
.*       BYTE AFTER THE TEXT IN THE WPX.                           @L1A 00795500
.********************************************************************** 00795600
.WPXFILL ANOP                           WILL INSERT INTO WPX       @L1A 00795700
         &LR   14,1                     FIRST BYTE OF PARM LIST    @L1A 00795800
         SR    15,15                    CLEAR REG 15               @L1A 00795900
         AH    15,0(1,0)                ADD LENGTH OF TEXT + 4     @L1A 00796000
         AR    14,15                    ADDR OF BYTE AFTER TEXT    @L1A 00797000
.********************************************************************** 00798000
.*       IF THE TEXT KEYWORD IS SPECIFIED, COPY IT INTO THE        @L3A 00799000
.*       PARAMETER LIST                                            @L3A 00800000
.********************************************************************** 00810000
.CHKTEXT AIF   ('&TEXTVAL' EQ '^').CHEKLEN GO ISSUE SVC            @L4A 00810100
         AIF   ('&TEXTVAL' NE '').TXTDAT VERIFY DATA SPECIFIED     @L4A 00810200
         MNOTE 4,'''TEXT'' KEYWORD IGNORED. NO VALUE SPECIFIED.'   @L4A 00810300
         AGO   .CHEKLEN                 GO CHECK LENGTH            @L4A 00810400
.TXTDAT  ANOP                           DATA SPECIFIED             @L4A 00810500
&EMCS(9) SETB  1                        INDICATE IN EXT MCSFLAGS   @L4A 00810600
         AIF   ('&TEXT(1,1,2)' EQ '').ETEXTL1  LINE TYPE NOT SPEC. @PFC 00810700
         MNOTE 0,'LINE TYPE ON EXECUTE FORM IGNORED.'              @PDA 00810800
&LTWARN  SETB  1                        ISSUE WARNING ONCE ONLY    @PDA 00810900
.ETEXTL1 ANOP                                                      @PDA 00811000
         AIF   (&MLW).CHEKLEN           IF MULTI-LINE WILL MOVE TEXT   +00811100
                                        ADDRESSES LATER            @PGC 00811200
         AIF   ('&TEXTVAL'(1,1) EQ '(').TXTREG  TEXT IN REG        @02C 00811300
         LA    15,&TEXTVAL              LOAD TEXT                  @L4A 00811400
         ST    15,4(1,0)                MOVE TEXT INTO PARM LIST   @L4A 00811500
         AGO   .CHEKLEN                 GO CHECK LENGTH            @L4A 00811600
.TXTREG  ANOP                           TEXT IS IN REGISTER        @L4A 00811700
&K       SETA  K'&TEXTVAL                                               00811800
&TEXTVAL SETC  '&TEXTVAL'(2,&K-2)                                       00811900
         ST    &TEXTVAL,4(1,0)          MOVE TEXT INTO PARM LIST   @L4A 00812000
         AGO   .CHEKLEN                 GO CHECK LENGTH            @L4C 00812100
.********************************************************************** 00812200
.*       IF THE LENGTH IS SPECIFIED, COPY IT INTO THE              @L1A 00812300
.*       PARAMETER LIST                                            @L1A 00812400
.********************************************************************** 00812500
.CHEKLEN AIF   ('&WTOLENR' EQ '').CHEKRPY GO CHECK REPLY ADDR  @YA17152 00812600
         AIF   (&RLREG).LENREG          LENGTH IN REG              @L4C 00812700
         MVI   2(14),&WTOLENR           MOVE LENGTH INTO PARAMETER     X00812800
                                        LIST                   @YA17152 00812900
         AGO   .CHEKRPY                 GO CHECK REPLY ADDRESS     @L1A 00813000
.LENREG  STC   &WTOLENR,2(14,0)         MOVE LENGTH INTO PARAMETER     X00814000
                                        LIST                   @YA17152 00815000
.********************************************************************** 00816000
.*       IF THE REPLY ADDRESS IS SPECIFIED, COPY IT INTO THE       @L1A 00817000
.*       PARAMETER LIST                                            @L1A 00818000
.********************************************************************** 00818100
.CHEKRPY AIF   ('&WTORYA' EQ '').CHEKRCN GO CHECK RPLY CONS NAME   @L4C 00818200
         AIF   (&RAREG).RPYREG          REPLY ADDRESS IN REG       @L4C 00818300
         LA    15,&WTORYA               OBTAIN REPLY ADDRESS       @L4C 00818400
         ST    15,8(14,0)               MOVE REPLY ADDRESS INTO PARM   X00818500
                                        LIST                       @L1A 00818600
         AGO   .CHEKRCN                 GO CHECK REPLY CONSOLE NAME@L2C 00818700
.RPYREG  ST    &WTORYA,8(14,0)          MOVE REPLY ADDRESS INTO PARM   X00818800
                                        LIST                       @L4C 00818900
.********************************************************************** 00819000
.*       IF THE REPLY CONSOLE NAME/ID ADDRESS IS SPECIFIED, THEN   @L2A 00819100
.*       COPY IT INTO THE PARAMETER LIST                           @L2A 00819200
.********************************************************************** 00819300
.CHEKRCN AIF   ('&RPLYISUR' EQ '^').CHEKECB  GO CHECK ECB ADDRESS  @L2A 00819400
         AIF   ('&RPLYISUR' NE '').RCNDAT VERIFY DATA SPECIFIED    @L2A 00819500
         MNOTE 4,'''RPLYISUR'' KEYWORD IGNORED. NO VALUE SPECIFIED.'   X00819600
                                                                   @L2A 00819700
         AGO   .CHEKECB                 GO CHECK ECB ADDRESS       @L2A 00819800
.RCNDAT  ANOP                                                      @L2A 00819900
         AIF   ('&RPLYISUR'(1,1) EQ '(').RCNREG  REPLY CONSOLE NAME/ID X00820000
                                        ADDRESS IN REGISTER        @L2A 00820100
         LA    15,&RPLYISUR             OBTAIN REPLY CONSOLE NAME/ID   X00820200
                                        ADDRESS                    @L2A 00820300
         ST    15,92(14,0)              MOVE REPLY CONSOLE NAME/ID     X00820400
                                        ADDRESS IN PARM LIST       @L2A 00820500
         AGO   .CHEKECB                 GO CHECK ECB ADDRESS       @L2A 00820600
.RCNREG  ST    &RPLYISUR(1),92(14,0)    MOVE REPLY CONSOLE NAME/ID     X00820700
                                        ADDRESS IN PARM LIST       @L2A 00820800
.********************************************************************** 00820900
.*       IF THE ECB ADDRESS IS SPECIFIED, COPY IT INTO THE         @L1A 00821000
.*       PARAMETER LIST                                            @L1A 00821100
.********************************************************************** 00821200
.CHEKECB AIF   ('&WTOECB' EQ '').CHEKCON GO CHECK CONSID           @L4C 00821300
         AIF   (&EAREG).ECBREG          ECB ADDRESS IN REG         @L4C 00821400
         LA    15,&WTOECB               LOAD ECB ADDRESS           @L4C 00821500
         ST    15,12(14,0)              MOVE ECB ADDRESS INTO PARM     X00821600
                                        LIST                       @L1A 00821700
         AGO   .CHEKCON                 GO CHECK CONSID            @L1A 00821800
.ECBREG  ST    &WTOECB,12(14,0)         MOVE ECB ADDRESS INTO PARM     X00821900
                                        LIST                       @L4C 00822000
.********************************************************************** 00822100
.*       IF THE CONSID IS SPECIFIED, COPY IT INTO THE              @L1A 00822200
.*       PARAMETER LIST                                            @L1A 00822300
.********************************************************************** 00822400
.CHEKCON AIF   ('&CONSID' EQ '^').CHKCNNA GO CHECK CONSNAME        @L2C 00822500
         AIF   ('&CONSID' NE '').CONDAT VERIFY DATA SPECIFIED      @L1A 00822600
         MNOTE 4,'''CONSID'' KEYWORD IGNORED. NO VALUE SPECIFIED.' @L1A 00822700
         AGO   .CHKCNNA                 GO CHECK CONSNAME          @L2C 00822800
.CONDAT  ANOP                           DATA SPECIFIED             @L1A 00822900
&EMCS(2) SETB  1                        INDICATE IN EXT MCSFLAGS   @L1A 00823000
         AIF   ('&CONSID'(1,1) EQ '(').CONREG CONSID IN REG        @L1A 00823100
         L     15,&CONSID               LOAD CONSID                @L1A 00823200
         ST    15,72(14,0)              MOVE CONSID INTO PARM LIST @L1A 00823300
         AGO   .CHKCNNA                 GO CHECK CONSNAME          @L2C 00823400
.CONREG  ST    &CONSID(1),72(14,0)      MOVE CONSID INTO PARM LIST @L1A 00823500
.********************************************************************** 00823600
.*       IF THE CONSNAME IS SPECIFIED, COPY IT INTO THE            @L2A 00823700
.*       PARAMETER LIST                                            @L2A 00823800
.********************************************************************** 00823900
.CHKCNNA AIF   ('&CONSNAME' EQ '^').CHEKJOB GO CHECK JOBID         @L2A 00824000
         AIF   ('&CONSNAME' NE '').CNNADT VERIFY DATA SPECIFIED    @L2A 00824100
         MNOTE 4,'''CONSNAME'' KEYWORD IGNORED. NO VALUE SPECIFIED.'   X00824200
                                                                   @L2A 00824300
         AGO   .CHEKJOB                 GO CHECK JOBID             @L2A 00824400
.CNNADT  ANOP                           DATA SPECIFIED             @L2A 00824500
&EMCS(7) SETB  1                        INDICATE IN EXT MCSFLAGS   @L1A 00824600
         AIF   ('&CONSNAME'(1,1) EQ '(').CNNAREG CONSNAME IN REG   @L2A 00824700
         MVC   84(8,14),&CONSNAME(1)     MOVE CONSNAME INTO LIST   @L2A 00824800
         AGO   .CHEKJOB                 GO CHECK JOBID             @L2A 00824900
.CNNAREG MVC   84(8,14),0(&CONSNAME(1))  MOVE CONSNAME INTO LIST   @L2A 00825000
.********************************************************************** 00825100
.*       IF THE JOBID IS SPECIFIED, COPY IT INTO THE               @L1A 00825200
.*       PARAMETER LIST                                            @L1A 00825300
.********************************************************************** 00825400
.CHEKJOB AIF   ('&JOBID' EQ '^').CHKJOB2 GO CHECK JOBNAME          @L1A 00825500
         AIF   ('&JOBID' NE '').JOBDAT  VERIFY DATA SPECIFIED      @L1A 00825600
         MNOTE 4,'''JOBID'' KEYWORD IGNORED. NO VALUE SPECIFIED.'  @L1A 00825700
         AGO   .CHKJOB2                 GO CHECK JOBNAME           @L1A 00825800
.JOBDAT  ANOP                           DATA SPECIFIED             @L1A 00825900
         AIF   ('&JOBID'(1,1) EQ '(').JOBREG JOBID IN REG          @L1A 00826000
         MVC   44(8,14),&JOBID(1)       MOVE JOBID INTO PARM LIST  @L1A 00826100
         AGO   .CHKJOB2                 GO CHECK JOBNAME           @L1A 00826200
.JOBREG  MVC   44(8,14),0(&JOBID(1))    MOVE JOBID INTO PARM LIST  @L1A 00826300
.********************************************************************** 00826400
.*       IF THE JOBNAME IS SPECIFIED, COPY IT INTO THE             @L1A 00826500
.*       PARAMETER LIST                                            @L1A 00826600
.********************************************************************** 00826700
.CHKJOB2 AIF   ('&JOBNAME' EQ '^').CHEKKEY GO CHECK KEY            @L1A 00826800
         AIF   ('&JOBNAME' NE '').JOBDAT2 VERIFY DATA SPECIFIED    @L1A 00826900
         MNOTE 4,'''JOBNAME'' KEYWORD IGNORED. NO VALUE SPECIFIED.'    X00827000
                                                                   @L1A 00827100
         AGO   .CHEKKEY                 GO CHECK KEY               @L1A 00827200
.JOBDAT2 ANOP                           DATA SPECIFIED             @L1A 00827300
         AIF   ('&JOBNAME'(1,1) EQ '(').JOBREG2 JOBNAME IN REG     @L1A 00827400
         MVC   52(8,14),&JOBNAME(1)     MOVE JOBNAME INTO LIST     @L1A 00827500
         AGO   .CHEKKEY                 GO CHECK KEY               @L1A 00827600
.JOBREG2 MVC   52(8,14),0(&JOBNAME(1))  MOVE JOBNAME INTO LIST     @L1A 00827700
.********************************************************************** 00827800
.*       IF THE KEY IS SPECIFIED, COPY IT INTO THE                 @L1A 00827900
.*       PARAMETER LIST                                            @L1A 00828000
.********************************************************************** 00828100
.CHEKKEY AIF   ('&KEY' EQ '^').CHEKTOK  GO CHECK TOKEN             @L1A 00828200
         AIF   ('&KEY' NE '').KEYDAT    VERIFY DATA SPECIFIED      @L1A 00828300
         MNOTE 4,'''KEY'' KEYWORD IGNORED. NO VALUE SPECIFIED.'    @L1A 00828400
         AGO   .CHEKTOK                 GO CHECK TOKEN             @L1A 00828500
.KEYDAT  ANOP                           DATA SPECIFIED             @L1A 00828600
         AIF   ('&KEY'(1,1) EQ '(').KEYREG KEY IN REG              @L1A 00828700
         MVC   60(8,14),&KEY(1)         MOVE KEY INTO PARM LIST    @L1A 00828800
         AGO   .CHEKTOK                 GO ISSUE SVC               @L1A 00828900
.KEYREG  MVC   60(8,14),0(&KEY(1))      MOVE KEY INTO PARM LIST    @L1A 00829000
.********************************************************************** 00829100
.*       IF THE TOKEN IS SPECIFIED, COPY IT INTO THE               @L1A 00829200
.*       PARAMETER LIST                                            @L1A 00829300
.********************************************************************** 00829400
.CHEKTOK AIF   ('&TOKEN' EQ '^').CHEKSYS GO CHECK SYSNAME          @L1A 00829500
         AIF   ('&TOKEN' NE '').TOKDAT  VERIFY DATA SPECIFIED      @L1A 00829600
         MNOTE 4,'''TOKEN'' KEYWORD IGNORED. NO VALUE SPECIFIED.'  @L1A 00829700
         AGO   .CHEKSYS                 GO CHECK SYSNAME           @L1A 00829800
.TOKDAT  ANOP                           DATA SPECIFIED             @L1A 00829900
         AIF   ('&TOKEN'(1,1) EQ '(').TOKREG TOKEN IN REG          @L1A 00830000
         L     15,&TOKEN                LOAD TOKEN                 @L1A 00830100
         ST    15,68(14,0)              MOVE TOKEN INTO PARM LIST  @L1A 00830200
         AGO   .CHEKSYS                 GO CHECK SYSNAME           @L1A 00830300
.TOKREG  ST    &TOKEN(1),68(14,0)       MOVE TOKEN INTO PARM LIST  @L1A 00830400
.********************************************************************** 00830500
.*       IF THE SYSNAME IS SPECIFIED, COPY IT INTO THE             @L1A 00830600
.*       PARAMETER LIST                                            @L1A 00830700
.********************************************************************** 00830800
.CHEKSYS AIF   ('&SYSNAME' EQ '^').CHKCART GO CHECK CART           @01C 00830900
         AIF   ('&SYSNAME' NE '').SYSDAT VERIFY DATA SPECIFIED     @L1A 00831000
         MNOTE 4,'''SYSNAME'' KEYWORD IGNORED. NO VALUE SPECIFIED.'    X00831100
                                                                   @L1A 00831200
         AGO   .CHKCART                  GO CHECK CART             @01C 00831300
.SYSDAT  ANOP                           DATA SPECIFIED             @L1A 00831400
         AIF   ('&SYSNAME'(1,1) EQ '(').SYSREG SYSNAME IN REG      @L1A 00831500
         MVC   76(8,14),&SYSNAME(1)     MOVE SYSNAME INTO PARM LIST@L1A 00831600
         AGO   .CHKCART                 GO CHECK CART              @01C 00831700
.SYSREG  MVC   76(8,14),0(&SYSNAME(1))  MOVE SYSNAME INTO PARM LIST@L1A 00831800
.********************************************************************** 00831900
.*       IF THE CART IS SPECIFIED, COPY IT INTO THE                @L3A 00832000
.*       PARAMETER LIST                                            @L3A 00833000
.********************************************************************** 00833100
.CHKCART AIF   ('&CART' EQ '^').CHKSYN  GO CHECK SYNCH             @P6C 00833200
         AIF   ('&CART' NE '').CRTDAT VERIFY DATA SPECIFIED        @L3A 00833300
         MNOTE 4,'''CART'' KEYWORD IGNORED. NO VALUE SPECIFIED.'   @L3A 00833400
         AGO   .CHKSYN                  GO CHECK SYNCH             @P6C 00833500
.CRTDAT  ANOP                           DATA SPECIFIED             @L3A 00833600
         AIF   ('&CART'(1,1) EQ '(').CRTREG    CART IN REG         @L3A 00833700
         LA    15,&CART                 LOAD CART                  @L3A 00833800
         ST    15,96(14,0)              MOVE CART INTO PARM LIST   @L3A 00833900
         AGO   .CHKSYN                  GO CHECK SYNCH             @P6C 00834000
.CRTREG  ST    &CART(1),96(14,0)        MOVE CART INTO PARM LIST   @L3A 00834100
         AGO   .CHKSYN                  GO CHECK SYNCH             @P6C 00834200
.********************************************************************** 00834300
.*       IF SYNCH=YES IS SPECIFIED, SET THE CORRECT EMCSFLAG       @P6A 00834400
.********************************************************************** 00834500
.CHKSYN  AIF   ('&SYNCH(1)' EQ '^').EMCS GO CHECK EMCS FLAGS       @PGC 00834600
         AIF   ('&SYNCH(1)' NE '').SYNDAT VERIFY DATA SPECIFIED    @P6A 00834700
         MNOTE 4,'''SYNCH'' KEYWORD IGNORED. NO VALUE SPECIFIED.'  @P6A 00834800
         AGO   .EMCS                    GO CHECK EMCS FLAGS        @PGC 00834900
.SYNDAT  ANOP                           DATA SPECIFIED             @P6A 00835000
         AIF   ('&SYNCH(1)' NE 'YES').WPXETXT                      @PGC 00835100
&EMCS(14) SETB  1           SET SYNCH BIT ON IN EMCS               @P6A 00835200
.********************************************************************** 00835300
.*       CHECK TO SEE IF ANY OF THE EXTENDED MCSFLAGS NEEDS TO     @L1C 00835400
.*       BE SET                                                    @L1C 00835500
.********************************************************************** 00835600
.EMCS    ANOP                                                  @G860PSS 00835700
         AIF   (NOT &EMCS(2) AND NOT &EMCS(7) AND NOT &EMCS(9) AND     X00835800
                NOT &EMCS(14)).ESYNC                 IF CONSID OR NAME X00835900
                          OR SYNCH=YES SPECIFIED                   @01C 00836000
.********************************************************************** 00837000
.*       TURN ON THE EXTENDED MCSFLAGS WHICH MAY NEED TO BE        @L1A 00838000
.*       SET IF IT IS THE EXECUTE FORM OF THE MACRO                @L1A 00838100
.********************************************************************** 00838200
         OI    4(14),B'&EMCS(1)&EMCS(2)&EMCS(3)&EMCS(4)&EMCS(5)&EMCS(6)X00838300
               &EMCS(7)&EMCS(8)'        SET EXTENDED MCS FLAGS     @L1A 00838400
         OI    5(14),B'&EMCS(9)&EMCS(10)&EMCS(11)&EMCS(12)&EMCS(13)&EMCX00838500
               S(14)&EMCS(15)&EMCS(16)' SET EXTENDED MCS FLAGS2    @L4A 00838600
.ESYNC   AIF   ('&SYNCH(1)' NE 'NO').WPXETXT IF SYNCH=NO NOT SPECIFIED X00838700
                                        GO CHECK FOR TEXT MULTI         00838800
         NI    5(14),B'11111011'        TURN OFF SYNCH BIT         @P6A 00838900
.********************************************************************** 00839000
.*       IF THIS IS A MULTILINE WITH THE TEXT KEYWORD,             @PGA 00840000
.*       MOVE THE TEXT ADDRESSES INTO THE PARAMETER LIST           @PGM 00840100
.********************************************************************** 00840200
.WPXETXT ANOP                           MULTI-LINE WTOR W/TEXT?    @PGC 00840300
         AIF   (&MLW EQ 0).EXECUTE      NOT MULTILINE, ISSUE WTOR  @PGA 00840400
         AIF   (&TEXTKEY EQ 0).EXECUTE  NOT TEXT KYWD, ISSUE WTOR  @PGA 00840500
         AIF   ('&TEXT(1,1,1)'(1,1) EQ '(').TXTREG2  TEXT IN REG   @PGM 00840600
         LA    15,&TEXT(1,1,1)          LOAD TEXT                  @PGM 00840700
         ST    15,4(1,0)                MOVE TEXT INTO PARM LIST   @PGM 00840800
         AGO   .WPXTXT2                 GO DO SECOND LINE          @PGC 00840900
.TXTREG2 ANOP                           TEXT IS IN REGISTER        @PGM 00841000
&K       SETA  K'&TEXT(1,1,1)           SET LENGTH WITH PARENS     @PGM 00842000
&VALH1   SETC  '&TEXT(1,1,1)'(2,&K-2)   STRIP PARENS               @PGM 00842100
         ST    &VALH1,4(1,0)            MOVE TEXT INTO PARM LIST   @PGM 00842200
.WPXTXT2 ANOP                           SECOND LINE OF TEXT        @PGC 00842300
&MLINDX  SETA  4                        OFFSET TO TEXT ADDRESS     @PGM 00842400
&H       SETA  2                        PROCEED TO SECOND LINE     @PGM 00842500
         AIF   (&H GT N'&TEXT(1)).CHEKLEN LOOP DONE GO CHECK FOR REPLY +00842600
                                        LENGTH SPECIFICATION       @PGM 00842700
         XR    15,15                    CLEAR INDEX FOR INSERTS    @PGM 00842800
         IC    15,3(14)                 SET LENGTH OF WPX          @PGM 00842900
         LA    14,4(15,14)              POINT TO MULTILINE ENTRIES @PGM 00843000
.EMLW00  ANOP                           BEGIN LOOP FOR MINORS      @PGM 00844000
         AIF   (&H GT N'&TEXT(1)).EXECUTE LOOP DONE GO ISSUE WTOR  @PGC 00844100
&VALH    SETC  '&TEXT(1,&H)'            EXTRACT CURRENT VALUE      @PGM 00844200
&VALH1   SETC  '&TEXT(1,&H,1)'          EXTRACT TEXT ADDRESS       @PGM 00844300
&VALH2   SETC  '&TEXT(1,&H,2)'          EXTRACT LINE TYPE          @PGM 00844400
         AIF   ('&VALH2' EQ '').ETEXTL2       LINE TYPE NOT SPEC.  @PGM 00844500
         AIF   (&LTWARN).ETEXTL2        WARNING ALREADY ISSUED     @PGM 00844600
         MNOTE 0,'LINE TYPE ON EXECUTE FORM IGNORED.'              @PGM 00844700
&LTWARN  SETB  1                        ISSUE WARNING ONCE ONLY    @PGM 00844800
.ETEXTL2 ANOP                                                      @PGM 00844900
         AIF   ('&VALH1'  EQ     '').EMLW02 BRANCH IF NULL LINE    @PGM 00845000
         AIF   ('&VALH1'(1,1) EQ '(').EMLW01 BRANCH IF SPECIFIED       +00846000
                                        IN REGISTER                @PGM 00847000
         LA    15,&VALH1                LOAD ADDR OF TEXT FIELD    @PGM 00847100
         ST    15,&MLINDX.(14)          STORE TEXT ADDR INTO PLIST @PGM 00847200
         AGO   .EMLW02                  CONTINUE PROCESSING        @PGM 00847300
.EMLW01  ANOP                           TEXT IN REGISTER           @PGM 00847400
&K       SETA  K'&VALH1                 SET LENGTH OF ARGUMENT     @PGM 00847500
&VALH1   SETC  '&VALH1'(2,&K-2)         STRIP OFF PARENS FROM REG  @PGM 00847600
         ST    &VALH1,&MLINDX.(14)      STORE TEXT ADDRESS         @PGM 00847700
.EMLW02  ANOP                           UPDATE POINTERS            @PGM 00847800
&H       SETA  &H+1                     UPDATE NUMBER OF LINES     @PGM 00847900
&MLINDX  SETA  &MLINDX+8                INDEX TO NEXT PLIST ENTRY  @PGM 00848000
         AGO   .EMLW00                  CONTINUE LOOPING           @PGM 00849000
.********************************************************************** 00849100
.*       NO WPX HAS BEEN BUILT, SO STORE THE REPLY ADDRESS, REPLY  @L1A 00849200
.*       LENGTH, AND ECB ADDRESS IN THE WTOR PREFIX IF THEY ARE    @L1A 00849300
.*       SPECIFIED.                                                @L1A 00849400
.********************************************************************** 00849500
.********************************************************************** 00849600
.*       IF REPLY ADDRESS SPECIFIED, STORE VALUE IN PARAMETER  @G860PSS 00849700
.*       LIST                                                  @G860PSS 00849800
.********************************************************************** 00849900
.OLDFILL AIF   ('&RYAD' EQ '').EECBCK   BR IF NO REPLY ADDR        @L1C 00850000
         AIF   ('&RYAD'(1,1) EQ '(').ERPYREG BR IF REPLY ADDR IN A     X00860000
                                        REG                    @G860PSS 00870000
         LA    15,&RYAD                 LOAD REPLY ADDR        @G860PSS 00880000
         ST    15,0(1,0)                STORE RPLY ADDR        @G860PSS 00890000
         AGO   .EHIGHBT                 GO SET HIGH BIT        @G860PSS 00900000
.********************************************************************** 00910000
.*       REPLY ADDRESS WAS IN A REGISTER                       @G860PSS 00920000
.********************************************************************** 00930000
.ERPYREG ST    &RYAD(1),0(1,0)          STORE REPLY ADDR       @G860PSS 00940000
.********************************************************************** 00950000
.*       SET HIGH BIT IN PARAMETER LIST TO INDICATE A WTOR     @G860PSS 00960000
.********************************************************************** 00970000
.EHIGHBT OI    0(1),X'80'               INDICATE WTOR          @G860PSS 00980000
.********************************************************************** 00990000
.*       IF THE ECB ADDRESS WAS SPECIFIED, PUT IT IN THE       @G860PSS 01000000
.*       PARAMETER LIST                                        @G860PSS 01010000
.********************************************************************** 01020000
.EECBCK  AIF   ('&ECB' EQ '').ELENCK    BR IF NO ECB ADDR      @G860PSS 01030000
         AIF   ('&ECB'(1,1) EQ '(').EECBREG BR IF ECB ADDR IS IN A     X01040000
                                        REG                    @G860PSS 01050000
         LA    14,&ECB                  LOAD ADDRESS OF ECB    @G860PSS 01060000
         ST    14,4(1,0)                STORE ECB ADDRESS      @G860PSS 01070000
         AGO   .ELENCK                  GO CHECK FOR LENGTH    @G860PSS 01080000
.********************************************************************** 01090000
.*       ECB IS IN A REG SO STORE IT IN THE PARAMETER LIST     @G860PSS 01100000
.********************************************************************** 01110000
.EECBREG ST    &ECB(1),4(1,0)           STORE ECB ADDRESS      @G860PSS 01120000
.********************************************************************** 01130000
.*       IF THE LENGTH IS SPECIFIED, COPY IT INTO THE          @G860PSS 01140000
.*       PARAMETER LIST                                        @G860PSS 01150000
.********************************************************************** 01160000
.ELENCK  AIF   ('&LENGTH' EQ '').EXECUTE BR IF NO LENGTH           @L7C 01160100
         AIF   ('&LENGTH'(1,1) EQ '(').ELENREG BR IF LENGTH IN A       X01160200
                                        REGISTER               @G860PSS 01160300
         MVI   8(1),&LENGTH             STORE REPLY LENGTH     @G860PSS 01160400
         AGO   .EXECUTE                 GO ISSUE WTOR              @L7C 01160500
.********************************************************************** 01160600
.*       LENGTH SPECIFIED IN A REGISTER                        @G860PSS 01160700
.********************************************************************** 01160800
.ELENREG STC   &LENGTH(1),8(1,0)        STORE REPLY LENGTH     @G860PSS 01160900
         AGO   .EXECUTE                 GO ISSUE WTOR              @03A 01161000
.********************************************************************** 01162000
.*                                                             @G860PSS 01163000
.*       LIST FORM IS REQUESTED                                @G860PSS 01164000
.*                                                             @G860PSS 01165000
.********************************************************************** 01166000
.LROUT   ANOP                                                           01167000
         AIF   ('&MESG' EQ '' AND ('&TEXT' EQ '^' OR                   X01167100
                '&TEXT' EQ '')).ERROR2  ERROR IF                       X01167200
                                      NO MESSAGE TEXT SPECIFIED    @PCC 01167300
         AIF   (&RAREG).ERROR3                  ERROR IF REPLY ADDRESS X01167400
                                      SPECIFIED IN A REGISTER      @L4C 01167500
         AIF   (&EAREG).ERROR3                  ERROR IF REPLY ADDRESS X01167600
                                      SPECIFIED IN A REGISTER      @L4C 01167700
         AIF   (&RLREG).ERROR3                  ERROR IF REPLY ADDRESS X01167800
                                      SPECIFIED IN A REGISTER      @L4C 01167900
&NAME    DS    0F                                                       01168000
.********************************************************************** 01169000
.*                                                                      01169100
.*       INVOKE THE WTO MACRO.  IF THE WTO MACRO DETERMINES        @L1A 01169200
.*       THAT A WPX NEEDS TO BE BUILT, IT WILL GENERATE THE        @L1A 01169300
.*       ENTIRE PARAMETER LIST FOR THE WTOR MACRO AND RETURN.      @L1A 01169400
.*       IN THIS SITUATION, THIS MACRO WILL JUST RETURN SINCE      @L1A 01169500
.*       NO MORE PROCESSING NEEDS TO BE DONE.                      @L1A 01169600
.*                                                                      01169700
.*       IF THE WTO MACRO DETERMINES THAT NO WPX NEEDS TO BE       @L1A 01169800
.*       BUILT, THEN IT WILL NOT GENERATE THE PARAMETER LIST       @L1A 01169900
.*       BUT WILL SET UP THE FIELDS THAT THIS MACRO NEEDS          @L1A 01170000
.*       IN ORDER TO GENERATE THE PARAMETER LIST. IN THIS          @L1A 01170100
.*       SITUATION, WTOR GENERATES THE ENTIRE PARAMETER LIST       @L1A 01170200
.*       STARTING WITH THE WTOR PREFIX.                            @L1A 01170300
.*                                                                      01170400
.********************************************************************** 01170500
&IHBWTOR SETB  1                                                   @L1C 01170600
         WTO   &MESG,MF=&MF,MSGTYP=&MSGTYP,ROUTCDE=&ROUTCDE,DESC=&DESC,X01170700
               MCSFLAG=&MCSFLAG,WQEBLK=&WQEBLK,CONSID=&CONSID,         X01170800
               JOBID=&JOBID,KEY=&KEY,TOKEN=&TOKEN,SYSNAME=&SYSNAME,    X01170900
               JOBNAME=&JOBNAME,                                       X01171000
               CONSNAME=&CONSNAME,CART=&CART,TEXT=&TEXT(1),            +01171100
               LINKAGE=&LINKAGE,SYNCH=&SYNCH                       @L7C 01171200
&IHBWTOR SETB  0                                                   @L1C 01171300
         AIF   (&IWPXBIT OR                                            X01171400
                &WTOERR).END          JUST EXIT IF WTO EITHER BUILT A  X01171500
                                      WPX OR ISSUED A SEVERE MNOTE @L1C 01171600
.********************************************************************** 01171700
.*       IF THE REPLY ADDRESS IS NOT SPECIFIED, USE A 0. IF        @P4A 01171800
.*       THE REPLY ADDRESS IS IN A REGISTER, REJECT WITH           @P4A 01171900
.*       ERROR MESSAGE SINCE IT IS NOT ALLOWED FOR THE LIST        @P4A 01172000
.*       FORM                                                      @P4A 01172100
.********************************************************************** 01172200
         AIF   ('&RYAD' EQ '').LRPY0    BR IF NO REPLY ADDR        @P4A 01172300
         DC    A(X'80000000'+&RYAD)     REPLY ADDRESS              @P4A 01172400
         AGO   .LECBCK                  GO CHECK FOR ECB ADDR      @P4A 01172500
.LRPY0   DC    A(0)                     REPLY ADDRESS              @P4A 01172600
.********************************************************************** 01172700
.*       IF THE ECB ADDRESS IS NOT SPECIFIED, USE A 0. IF          @P4A 01172800
.*       THE ECB ADDRESS IS IN A REGISTER, REJECT WITH             @P4A 01172900
.*       ERROR MESSAGE SINCE IT IS NOT ALLOWED FOR THE LIST        @P4A 01173000
.*       FORM                                                           01173100
.********************************************************************** 01173200
.LECBCK  AIF   ('&ECB' EQ '').LECB0     BR IF NO ECB ADDR          @P4A 01173300
         DC    A(&ECB)                  ECB ADDRESS                @P4A 01173400
         AGO   .LLENCK                  GO CHECK FOR LENGTH        @P4A 01173500
.LECB0   DC    A(0)                     ECB ADDRESS                @P4A 01173600
.********************************************************************** 01173700
.*       IF THE LENGTH IS NOT SPECIFIED, USE A 0. IF THE       @G860PSS 01173800
.*       LENGTH IS IN A REGISTER, REJECT WITH ERROR MESSAGE    @G860PSS 01173900
.*       SINCE IT IS NOT ALLOWED FOR THE LIST FORM.            @G860PSS 01174000
.********************************************************************** 01174100
.LLENCK  AIF   ('&LENGTH' EQ '').LLEN0  BR IF NO LENGTH        @G860PSS 01174200
         DC    AL1(&LENGTH)             REPLY LENGTH           @G860PSS 01174300
         AGO   .BUILDIT                 BUILD REST OF PARM LIST    @L1C 01174400
.LLEN0   DC    AL1(0)                   REPLY LENGTH           @G860PSS 01174500
.********************************************************************** 01174600
.*       BUILD THE TEXT LENGTH FIELD                               @L1A 01174700
.********************************************************************** 01174800
.BUILDIT AIF   ('&SYSSPLV' NE '1').ONELEN IF 370, DC FOR 1 BYTE    @L1A 01174900
         DC    AL2(&IHBLEN)             TEXT LENGTH + 4        @YA17152 01175000
         AGO   .GENMCS                  GO BUILD MCS FLAGS         @L1A 01175100
.ONELEN  ANOP                           THIS IS MVS/370            @L1A 01175200
         DC    AL1(&IHBLEN)             TEXT LENGTH + 4        @YA17152 01175300
.********************************************************************** 01175400
.*       BUILD THE MCS FLAGS                                       @L1A 01175500
.********************************************************************** 01175600
.GENMCS  ANOP                                                      @L1A 01175700
         DC    B'&CD(7)&CD(8)'          MCSFLAGS                   @L1A 01175800
         AIF   (&IHBLEN EQ 4).SKIPDC    SKIP DC IF NO TEXT     @YA17152 01175900
.********************************************************************** 01176000
.*       BUILD THE MESSAGE TEXT                                    @L1A 01176100
.********************************************************************** 01176200
         DC    C&ILMEQU                 MESSAGE TEXT               @PBC 01176300
.SKIPDC  AIF   (NOT &IHBMCS).CHECKMF    DONT DECLARE ROUTING/DESC CODE X01176400
                                        IF NONE SPECIFIED      @YA17152 01176500
.********************************************************************** 01176600
.*       BUILD THE DESCRIPTOR CODES                                @L1A 01176700
.********************************************************************** 01176800
         DC    B'&CD(1)&CD(2)'          DESCRIPTOR CODES           @L1A 01176900
.********************************************************************** 01177000
.*       BUILD THE ROUTING CODES                                   @L1A 01178000
.********************************************************************** 01178100
         DC    B'&CD(3)&CD(4)'          ROUTING CODES              @L1A 01178200
         AIF   ('&MSGTYP(1)' NE 'Y' AND NOT &SWM).CHECKMF          @L1A 01178300
.********************************************************************** 01178400
.*       BUILD THE MESSAGE TYPE FIELD                              @L1A 01178500
.********************************************************************** 01178600
         DC    B'&CD(5)&CD(6)'          MESSAGE TYPE               @L1A 01178700
.********************************************************************** 01178800
.*       IF AN INLINE REQUEST, CONTINUE GENERATING THE CODE.   @G860PSS 01178900
.********************************************************************** 01179000
.CHECKMF AIF   ('&MF' EQ 'I').IRETURN      IF STANDARD FORM, INSERT    X01180000
                                           ANY REGISTER VALUES     @L1C 01180100
         AGO   .END                        LIST FORM. GO TO END.        01180200
.********************************************************************** 01180300
.*                                                             @G860PSS 01180400
.*       THIS IS AN INLINE REQUEST. THE CNOP AND BAL INSTRUCTIONS  @L1C 01180500
.*       OCCUR FOR ALL WTORS IN THIS MACRO BUT THE DS INSTRUCTION  @L1A 01180600
.*       (AFTER PARAMETER LIST GENERATION) IS DONE HERE ONLY FOR   @L1A 01180700
.*       WTORS WHERE A WPX DOES NOT EXIST AND WQEBLK WAS NOT       @L1A 01180800
.*       SPECIFIED.                                                @L1A 01180900
.*                                                             @G860PSS 01181000
.********************************************************************** 01181100
.IROUT   AIF   ('&WQEBLK' NE '^').WQEB  IF WQEBLK SPECIFIED, LET THE   X01181200
                                        WTO MACRO DO CNOP AND BAL  @P1C 01181300
         AIF   ('&WTORYA' EQ '').ERROR5 ERROR IF NO REPLY ADDRESS  @L4A 01181400
         AIF   ('&WTOECB' EQ '').ERROR6 ERROR IF NO ECB ADDRESS    @L4A 01181500
         AIF   ('&WTOLENR' EQ '').ERROR4 ERROR IF NO REPLY LENGTH      X01181600
                                                               @YA17152 01181700
         CNOP  0,4                                                      01181800
&NAME    BRAS  1,&GNAME.A               BRANCH AROUND LIST         @L8C 01181902
.WQEB    ANOP                           SET UP TO INVOKE WTO MACRO @L1A 01182100
.********************************************************************** 01182200
.*                                                                      01182300
.*       INVOKE THE WTO MACRO.  IF THE WTO MACRO DETERMINES        @L1A 01182400
.*       THAT A WPX NEEDS TO BE BUILT, IT WILL GENERATE THE        @L1A 01182500
.*       ENTIRE PARAMETER LIST, ISSUE THE SVC AND RETURN.          @L1A 01182600
.*       IN THIS SITUATION, THIS MACRO WILL JUST RETURN SINCE      @L1A 01182700
.*       NO MORE PROCESSING NEEDS TO BE DONE.                      @L1A 01182800
.*                                                                      01182900
.*       IF THE WTO MACRO DETERMINES THAT NO WPX NEEDS TO BE       @L1A 01183000
.*       BUILT, THEN IT WILL NOT GENERATE THE PARAMETER LIST       @L1A 01183100
.*       BUT WILL SET UP THE FIELDS THAT THIS MACRO NEEDS IN       @L1A 01183200
.*       ORDER TO GENERATE THE PARAMETER LIST AND ISSUE THE        @L1A 01183300
.*       SVC.  IN THIS SITUATION, WTOR GENERATES THE ENTIRE        @L1A 01183400
.*       PARAMETER LIST STARTING WITH THE WTOR PREFIX.             @L1A 01183500
.*                                                                      01183600
.********************************************************************** 01183700
&IHBWTOR SETB  1                                                   @L1A 01183800
         WTO   &MESG,MF=&MF,MSGTYP=&MSGTYP,ROUTCDE=&ROUTCDE,DESC=&DESC,X01183900
               MCSFLAG=&MCSFLAG,WQEBLK=&WQEBLK,CONSID=&CONSID,         X01184000
               JOBID=&JOBID,KEY=&KEY,TOKEN=&TOKEN,SYSNAME=&SYSNAME,    X01184100
               JOBNAME=&JOBNAME,CONSNAME=&CONSNAME,                    X01184200
               LINKAGE=&LINKAGE,SYNCH=&SYNCH,                          +01184300
               CART=&CART,TEXT=&TEXT(1)                            @L6C 01184400
&IHBWTOR SETB  0                                                   @L1A 01184500
         AIF   (&IWPXBIT OR &IWQEBIT OR &WTOERR).END  JUST EXIT IF     X01184600
                                        WQEBLK CALL, OR WTO WITH WPX,  X01184700
                                        OR IF SEVERE ERROR FOUND   @P2C 01184800
.********************************************************************** 01184900
.*       CHECK THE REPLY ADDRESS TO SEE IF IT IS SPECIFIED         @P4A 01185000
.*       AND IF IT IS IN A REGISTER                                @P4A 01185100
.********************************************************************** 01185200
         AIF   ('&RYAD'(1,1) EQ '(').IRPA0 BR IF REG SPECIFIED     @P4A 01185300
         DC    A(X'80000000'+&RYAD)     REPLY ADDRESS              @P4A 01185400
         AGO   .IECBCKA                 GO CHECK FOR ECB           @P4A 01185500
.IRPA0   DC    A(0)                     REPLY ADDRESS              @P4A 01185600
.********************************************************************** 01185700
.*       CHECK THE ECB ADDRESS TO SEE IF IT IS SPECIFIED           @P4A 01185800
.*       AND IF IT IS IN A REGISTER                                @P4A 01185900
.********************************************************************** 01186000
.IECBCKA AIF   ('&ECB'(1,1) EQ '(').IECB0  BR IF REG SPECIFIED     @P4A 01186100
         DC    A(&ECB)                  ECB ADDRESS                @P4A 01186200
         AGO   .ILENCKA                 GO CHECK FOR LENGTH        @P4A 01186300
.IECB0   DC    A(0)                     REPLY ADDRESS              @P4A 01186400
.********************************************************************** 01186500
.*       CHECK THE LENGTH TO SEE IF IT IS SPECIFIED AND IF     @G860PSS 01186600
.*       IT IS IN A REGISTER                                   @G860PSS 01186700
.********************************************************************** 01186800
.ILENCKA AIF   ('&LENGTH'(1,1) EQ '(').ILEN0 BR IF LEN IN REG      @P3C 01186900
         DC    AL1(&LENGTH)             REPLY LENGTH           @G860PSS 01187000
         AGO   .BUILDIT                 BUILD REST OF PARM LIST    @L1A 01187100
.ILEN0   DC    AL1(0)                   REPLY LENGTH           @G860PSS 01187200
.********************************************************************** 01187300
.*       GO BUILD THE REST OF THE PARAMETER LIST                   @L1C 01187400
.********************************************************************** 01187500
         AGO   .BUILDIT                 BUILD REST OF PARM LIST    @L1A 01187600
.********************************************************************** 01187700
.*                                                             @G860PSS 01187800
.*       CONTROL IS RETURNED HERE AFTER THE PARAMETER LIST     @G860PSS 01187900
.*       IS BUILT FOR THE INLINE EXPANSION                     @G860PSS 01188000
.*                                                             @G860PSS 01188100
.********************************************************************** 01188200
.IRETURN ANOP                                                           01188300
.*  THE FOLLOWING INSTRUCTION IS EXECUTED HERE ONLY IF A WPX       @L1A 01188400
.*  DOES NOT EXIST AND WQEBLK WAS NOT SPECIFIED. WHEN A WPX        @L1A 01188500
.*  EXISTS, THE WTO MACRO DOES THIS.                               @L1A 01188600
&GNAME.A DS    0H                                                       01188700
.********************************************************************** 01188800
.*       IF THE REPLY ADDRESS IS IN A REGISTER, STORE IT IN    @G860PSS 01188900
.*       THE PARAMETER LIST                                    @G860PSS 01189000
.********************************************************************** 01189100
         AIF   ('&RYAD'(1,1) NE '(').IECBCKB BR IF NOT IN REG      @P3C 01189200
         ST    &RYAD(1),0(1,0)          STORE REPLY ADDRESS    @G860PSS 01189300
         OI    0(1),X'80'               INDICATE WTOR              @P3C 01189400
.********************************************************************** 01189500
.*       IF ECB ADDRESS IS IN A REGISTER, SAVE ITS ADDRESS IN  @G860PSS 01189600
.*       THE PARAMETER LIST                                    @G860PSS 01189700
.********************************************************************** 01189800
.IECBCKB AIF   ('&ECB'(1,1) NE '(').ILENCKB BR IF NOT IN REG       @P3C 01189900
         ST    &ECB(1),4(1,0)           STORE ECB ADDRESS      @G860PSS 01190000
.********************************************************************** 01190100
.*       IF THE LENGTH IS IN A REGISTER, SAVE ITS ADDRESS IN   @G860PSS 01191000
.*       THE PARAMETER LIST                                    @G860PSS 01191100
.********************************************************************** 01191200
.ILENCKB AIF   ('&LENGTH'(1,1) NE '(').EXECUTE  BR IF NOT IN REG   @L5C 01191300
         STC   &LENGTH(1),8(1,0)        STORE REPLY LENGTH     @G860PSS 01191400
.EXECUTE ANOP                           ISSUE WTOR SVC             @L5C 01191500
         AIF   ('&LINKAGE(1)' EQ 'BRANCH').WTOBALR                 @L5A 01191600
         SVC   35                       ISSUE SVC 35               @L5A 01191700
         AGO   .END                                                @L5A 01191800
.WTOBALR ANOP                           LINKAGE=BRANCH INVOCATION  @L5A 01191900
         AIF    ('&SYSAM64' NE 'YES').AM641                        @MXA 01192000
        MNOTE 8,'WTOR ---> LINKAGE=BRANCH IS NOT VALID IN AMODE 64'    X01193000
                                                                   @PHC 01193100
.AM641   ANOP                                                      @MXA 01193200
         L     15,16(0,0)               ADDRESS OF CVT             @L5A 01193300
         L     15,200(0,15)             ADDRESS OF SCVT            @L5A 01193400
         L     15,20(0,15)              WTOR BRANCH ENTRY POINT    @L5A 01193500
         BASR  14,15                    BRANCH TO ENTRY POINT WTOR @L8C 01193602
         AGO   .END                                            @G860PSS 01193800
.********************************************************************** 01193900
.*                                                             @G860PSS 01194000
.*       ERROR MESSAGES                                        @G860PSS 01194100
.*                                                             @G860PSS 01195000
.********************************************************************** 01196000
.********************************************************************** 01196100
.*       ISSUE ERROR MESSAGE:                                  @G860PSS 01196200
.* 12,INVALID MF OPERAND SPECIFIED-MF                          @G860PSS 01196300
.********************************************************************** 01196400
.ERROR1  IHBERMAC 35,,&MF                                               01196500
         MEXIT                                                          01196600
.********************************************************************** 01196700
.*       ISSUE ERROR MESSAGE:                                  @G860PSS 01196800
.* 12,MESSAGE OPERAND REQ'D-NOT SPECIFIED                      @G860PSS 01196900
.********************************************************************** 01197000
.ERROR2  IHBERMAC 19                                                    01198000
         MEXIT                                                          01199000
.********************************************************************** 01200000
.*       ISSUE ERROR MESSAGE:                                  @G860PSS 01210000
.* 12,INVALID REGISTER NOTATION WITH MF=L FORM                 @G860PSS 01220000
.********************************************************************** 01230000
.ERROR3  IHBERMAC 69                                                    01240000
         MEXIT                                                          01250000
.********************************************************************** 01260000
.*       ISSUE ERROR MESSAGE:                                  @G860PSS 01270000
.* 12,LENGTH OPERAND REQ'D-NOT SPECIFIED                       @G860PSS 01280000
.********************************************************************** 01290000
.ERROR4  IHBERMAC 14                                                    01300000
         MEXIT                                                          01310000
.********************************************************************** 01320000
.*       ISSUE ERROR MESSAGE:                                  @G860PSS 01330000
.* 12,SECOND OPERAND REQ'D-NOT SPECIFIED                       @G860PSS 01340000
.********************************************************************** 01350000
.ERROR5  IHBERMAC 03                                                    01360000
         MEXIT                                                          01370000
.********************************************************************** 01380000
.*       ISSUE ERROR MESSAGE:                                  @G860PSS 01390000
.* 12,ECB OPERAND REQ'D-NOT SPECIFIED                          @G860PSS 01400000
.********************************************************************** 01410000
.ERROR6  IHBERMAC 11                                                    01420000
         MEXIT                                                          01430000
.********************************************************************** 01440000
.*       ISSUE ERROR MESSAGE:                                  @G860PSS 01450000
.* 12,MLWTO/WTOR MUTUALLY EXCLUSIVE--GENERATION TERMINATED     @G860PSS 01460000
.********************************************************************** 01470000
.ERROR7  IHBERMAC 246                                                   01480000
         MEXIT                                                          01490000
.ERROR8  ANOP                                                      @L1A 01500000
         MNOTE 12,'NO TEXT GENERATED. ''WQEBLK'' IS MUTUALLY EXCLUSIVE X01510000
               WITH ALL OTHER KEYWORDS.'                           @L1A 01520000
         MEXIT                                                     @L1A 01530000
.ERROR9  ANOP                                                      @L2A 01540000
         MNOTE 12,'NO TEXT GENERATED. ''CONSID'' IS MUTUALLY EXCLUSIVE X01550000
               WITH CONSNAME KEYWORD.'                             @L2A 01560000
         MEXIT                                                     @L2A 01570000
.ERROR10 ANOP                                                      @L5A 01580000
         MNOTE 12,'NO TEXT GENERATED. SPECIFIED LINKAGE VALUE WAS NOT  +01590000
               SVC OR BRANCH.'                                     @L5A 01600000
         MEXIT                                                     @L5A 01610000
.ERROR12 ANOP                                                      @L5A 01620000
         MNOTE 12,'NO TEXT GENERATED. SPECIFIED SYNCH VALUE WAS NOT    +01630000
               YES OR NO.'                                         @L5A 01640000
         MEXIT                                                     @L5A 01650000
.ERROR13 ANOP                                                      @L5A 01660000
         MNOTE 12,'NO TEXT GENERATED. ''SYNCH=YES'' IS MUTUALLY        +01670000
               EXCLUSIVE WITH THE WQEBLK KEYWORD.'                 @L5A 01680000
         MEXIT                                                     @L5A 01690000
.ERROR14 ANOP                                                      @L5A 01700000
         MNOTE 12,'NO TEXT GENERATED. ''SYNCH=YES'' IS MUTUALLY        +01710000
               EXCLUSIVE WITH ''MCSFLAG=HRDCPY''.'                 @L5A 01720000
         MEXIT                                                     @L5A 01730000
.ERROR15 ANOP                                                      @L5A 01740000
         MNOTE 12,'NO TEXT GENERATED. ''SYNCH=YES'' REQUIRES           +01750000
               ''LINKAGE=BRANCH''.'                                @L5A 01760000
         MEXIT                                                     @L5A 01770000
.ERROR16 ANOP                                                      @L5A 01780000
         MNOTE 12,'NO TEXT GENERATED. ''LINKAGE=BRANCH'' REQUIRES      +01790000
               ''SYNCH=YES''.'                                     @L5A 01800000
         MEXIT                                                     @L5A 01810000
.ERROR17 ANOP                                                      @L5A 01820000
         MNOTE 12,'TOO MANY LINES OF TEXT. MAX=&MAXLINS WHEN SYNCH=YES'+01830000
                                                                   @L5A 01840000
         MEXIT                                                     @L5A 01850000
.END     ANOP                                                      @PLC 01860000
&RCNSPEC SETB  0                        CLEAR REPLY CONSOLE KEYWORD    X01870000
                                        INDICATOR                  @PLA 01880000
         MEND                                                      @PLA 01890000
**/                                                                     01900000
*%WTOR: MACRO KEYS(                                                     01910000
*                   ROUTCDE,      /*ROUTING CODES FOR MESSAGE        */ 01920000
*                   DESC,         /*MESSAGE DESCRIPTOR CODES         */ 01930000
*                   MSGTYP,       /*ROUTE TO MESSAGE CONSOLES        */ 01940000
*                   MCSFLAG,      /*MESSAGE ATTRIBUTES               */ 01950000
*                   RTCD,         /*SVC RETURN CODE                  */ 01960000
*                   WQEBLK,       /*ADDRESS OF WQE               @L1C*/ 01970000
*                   CONSID,       /*4 BYTE CONSOLE ID TO GET MSG @L1C*/ 01980000
*                   CONSNAME,     /*NAME OF CONSOLE TO GET MSG   @L2A*/ 01990000
*                   RPLYISUR,     /*CONSOLE NAME/ID FOR MESSAGE  @L3A*/ 02000000
*                   JOBID,        /*JOB ID OF ISSUER FOR JES     @L1C*/ 02010000
*                   JOBNAME,      /*JOB NAME OF ISSUER FOR JES   @L1C*/ 02020000
*                   KEY,          /*KEY ASSOCIATED WITH MSG      @L1C*/ 02030000
*                   TOKEN,        /*TOKEN ASSOCIATED WITH MSG    @L1C*/ 02040000
*                   SYSNAME,      /*SYSTEM NAME OF ISSUER        @L1C*/ 02050000
*                   CART,         /*CART ADDRESS                 @L3A*/ 02060000
*                   TEXT,         /*MESSAGE TEXT ADDRESS         @L4A*/ 02070000
*                   LINKAGE,      /*HOW CONTROL IS PASSED        @L5A*/ 02080000
*                   SYNCH,        /*SYNCHRONOUSLY PROCESSED      @L5A*/ 02090000
*                   CPFLG,        /*CONTROL PROGRAM ONLY FLAGS   @D2A*/ 02100000
*                   MF            /*LIST FORMAT                      */ 02110000
*                          );                                           02120000
* DECLARE SYSSPLV CHARACTER EXTERNAL; /* LEVEL INDICATOR     @G860PSS*/ 02130000
*                                                                       02140000
*/********************************************************************/ 02150000
*/*     DETERMINE WHICH FORMAT OF THE PARAMETER LIST SHOULD  @G860PSS*/ 02160000
*/*     BE BUILT.                                            @G860PSS*/ 02170000
*/********************************************************************/ 02180000
*    ANS('? SPLEVEL (TEST);');  /* DETERMINE LEVEL           @G860PSS*/ 02190000
*    IF SYSSPLV = '1' THEN      /* BUILD MVS/370 FORMAT          @L1C*/ 02200000
*       ANS('?'!!MACLABEL!!'WTORP7 '!!MACLIST!!MACKEYS!!';');           02210000
*    ELSE                       /* BUILD MVS/XA FORMAT           @L1C*/ 02220000
*       ANS('?'!!MACLABEL!!'WTORP '!!MACLIST!!MACKEYS!!';'); /*         02230000
*                                                            @G860PSS*/ 02240000
*%END WTOR;                                                             02250000
