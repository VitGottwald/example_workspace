*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWMEBLK                               -10/10/06-<1> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Work Request Block                            * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5694-A01 (C) COPYRIGHT IBM CORP. 2003, 2006                     * 00001200
*                                                                     * 00001300
* STATUS= HBB7730                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The IWMEBLK service allows work managers that participate in   * 00002100
*      cross platform Enterprise Workload Management (EWLM) to        * 00002200
*      indicate that processing of a work request is blocked while    * 00002300
*      waiting for a work request in another application to complete. * 00002400
*                                                                     * 00002500
*      The counterpart of this service to indicate that the           * 00002600
*      processing of a work request is no longer blocked is IWMEUBLK. * 00002700
*                                                                     * 00002800
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00002900
*                                                                     * 00003000
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00003100
*                                                                     * 00003200
*01* ENVIRONMENT:                                                     * 00003300
*                                                                     * 00003400
*                                                                     * 00003500
*      Minimum authorization: Supervisor state or program key mask    * 00003600
*                        (PKM) allowing keys 0-7.                     * 00003700
*                                                                     * 00003800
*      Dispatchable unit mode: Task or SRB mode.                      * 00003900
*                                                                     * 00004000
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00004100
*                                                                     * 00004200
*      AMODE:            31- or 64-bit.  If in 64-Bit addressing      * 00004300
*                        mode, code SYSSTATE AMODE64=YES before       * 00004400
*                        invoking this macro.                         * 00004500
*                                                                     * 00004600
*      ASC mode:         Primary or Access Register.                  * 00004700
*                                                                     * 00004800
*      Interrupt status: Enabled for I/O and external interrupts.     * 00004900
*                                                                     * 00005000
*      Locks:            No locks held.                               * 00005100
*                                                                     * 00005200
*      Control parameters: Control parameters must be in the primary  * 00005300
*                        address space.                               * 00005400
*                                                                     * 00005500
*                                                                     * 00005600
*                                                                     * 00005700
*01* PROGRAMMING REQUIREMENTS:                                        * 00005800
*                                                                     * 00005900
*                                                                     * 00006000
*    1.  The macro CVT must be included to use this macro.            * 00006100
*                                                                     * 00006200
*    2.  The macro IWMYCON must be included to use this macro.        * 00006300
*                                                                     * 00006400
*    3.  The macro IWMPB must be in the library concatenation, since  * 00006500
*        it is included by IWMYCON.                                   * 00006600
*                                                                     * 00006700
*    4.  Note that the high order halfword of 31-BIT register 0, and  * 00006800
*        the reason code variable when specified, may be non-zero and * 00006900
*        represents diagnostic data which is NOT part of the external * 00007000
*        interface.  The high order halfword should thus be excluded  * 00007100
*        from comparison with the reason code values described above. * 00007200
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00007300
*        be used for this purpose.                                    * 00007400
*                                                                     * 00007500
*    5.  All character data, unless otherwise specified, is assumed   * 00007600
*        to be left justified and padded with blanks on the right, as * 00007700
*        needed, to occupy the specified number of bytes.             * 00007800
*                                                                     * 00007900
*    6.  Since this service may only be used by system-like code,     * 00008000
*        some validity checking on the parameter list is not          * 00008100
*        performed. These checks would only be needed if the macro    * 00008200
*        were not used to invoke the service routine.                 * 00008300
*                                                                     * 00008400
*    7.  If the parameter EWLMMODE=EXPLICIT_SINGLE is specfied, some  * 00008500
*        restrictions apply:                                          * 00008600
*                                                                     * 00008700
*                                                                     * 00008800
*        o   No other task or SRB is allowed to issue other enclave   * 00008900
*            services for the SAME ENCLAVE concurrently.              * 00009000
*                                                                     * 00009100
*        o   The caller must be in primary ASC mode before            * 00009200
*            invocation.                                              * 00009300
*                                                                     * 00009400
*        o   The parameter list, the classification parameters and    * 00009500
*            the savearea pointed to by GPR13 must be addressable in  * 00009600
*            AMODE 31 and primary ASC mode.                           * 00009700
*                                                                     * 00009800
*        o   No recovery environment is set up by the service. The    * 00009900
*            caller is responsible to provide an appropriate error    * 00010000
*            recovery environment to handle abnormal terminations.    * 00010100
*                                                                     * 00010200
*        o   The enclave must have been created with option           * 00010300
*            ESTRT=EXPLICIT_SINGLE on the IWM4ECRE (or IWMECREA)      * 00010400
*            invocation.                                              * 00010500
*                                                                     * 00010600
*        o   The caller must provide the ETOKEN parameter.            * 00010700
*                                                                     * 00010800
*                                                                     * 00010900
*                                                                     * 00011000
*                                                                     * 00011100
*                                                                     * 00011200
*01* RESTRICTIONS:                                                    * 00011300
*                                                                     * 00011400
*                                                                     * 00011500
*    1.  This macro may not be used prior to the completion of WLM    * 00011600
*        address space initialization.                                * 00011700
*                                                                     * 00011800
*    2.  This macro may only be used on MVS/ESA HBB7708 or higher.    * 00011900
*                                                                     * 00012000
*                                                                     * 00012100
*                                                                     * 00012200
*01* INPUT REGISTER INFORMATION:                                      * 00012300
*                                                                     * 00012400
*    If the EWLMMODE=EXPLICIT_SINGLE is specified, the caller must    * 00012500
*    provide a standard 72-Byte savearea pointed to by R13.           * 00012600
*                                                                     * 00012700
*    For all other cases the caller does not have to place any        * 00012800
*    information into any register unless using it in register        * 00012900
*    notation for a particular parameter, or using it as a base       * 00013000
*    register.                                                        * 00013100
*                                                                     * 00013200
*01* OUTPUT REGISTER INFORMATION:                                     * 00013300
*                                                                     * 00013400
*    When control returns to the caller, the GPRs contain:            * 00013500
*                                                                     * 00013600
*                                                                     * 00013700
*    REGISTER  CONTENTS                                               * 00013800
*                                                                     * 00013900
*    0         Reason code if GR15 return code is non-zero            * 00014000
*                                                                     * 00014100
*    1         Used as work registers by the system                   * 00014200
*                                                                     * 00014300
*    2-13      Unchanged                                              * 00014400
*                                                                     * 00014500
*    14        Used as work registers by the system                   * 00014600
*                                                                     * 00014700
*    15        Return code                                            * 00014800
*                                                                     * 00014900
*                                                                     * 00015000
*                                                                     * 00015100
*    When control returns to the caller, the ARs contain:             * 00015200
*                                                                     * 00015300
*                                                                     * 00015400
*    REGISTER  CONTENTS                                               * 00015500
*                                                                     * 00015600
*    0-1       Used as work registers by the system                   * 00015700
*                                                                     * 00015800
*    2-13      Unchanged                                              * 00015900
*                                                                     * 00016000
*    14-15     Used as work registers by the system                   * 00016100
*                                                                     * 00016200
*                                                                     * 00016300
*                                                                     * 00016400
*    Some callers depend on register contents remaining the same      * 00016500
*    before and after issuing a service.  If the system changes the   * 00016600
*    contents of registers on which the caller depends, the caller    * 00016700
*    must save them before issuing the service, and restore them      * 00016800
*    after the system returns control.                                * 00016900
*                                                                     * 00017000
*01* PERFORMANCE IMPLICATIONS:                                        * 00017100
*                                                                     * 00017200
*    None                                                             * 00017300
*                                                                     * 00017400
*01* SYNTAX:                                                          * 00017500
*                                                                     * 00017600
*Ýxlabel¨  IWMEBLK     WORKREQ_HDL=xworkreq_hdl                       * 00017700
*                     ,BLOCK_HDL=xblock_hdl                           * 00017800
*                    Ý,EWLMMODE=»NORMAL!EXPLICIT_SINGLEº¨             * 00017900
*                    Ý,ETOKEN=»xetoken!NO_ETOKENº¨                    * 00018000
*                    Ý,RETCODE=xretcode¨                              * 00018100
*                    Ý,RSNCODE=xrsncode¨                              * 00018200
*                    Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨          * 00018300
*                   ÐÝ,MF=S¨                                          * 00018400
*                   ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                   * 00018500
*                   ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                     * 00018600
*                                                                     * 00018700
*                                                                     * 00018800
*      Where:                                                         * 00018900
*                                                                     * 00019000
*                                                                     * 00019100
*      Ýxlabel¨                                                       * 00019200
*          is an optional symbol, starting in column 1, that is the   * 00019300
*          name on the IWMEBLK macro invocation.  The name must       * 00019400
*          conform to the rules for an ordinary assembler language    * 00019500
*          symbol.                                                    * 00019600
*          DEFAULT: No name.                                          * 00019700
*                                                                     * 00019800
*                                                                     * 00019900
*                                                                     * 00020000
*                                                                     * 00020100
*      WORKREQ_HDL=xworkreq_hdl                                       * 00020200
*          is the name (RS-type), or address in register (2)-(12), of * 00020300
*          a required 8 character input that contains the handle      * 00020400
*          which represents the work request. This handle was         * 00020500
*          returned from a previous call to IWMESTRT or IWMECREA.     * 00020600
*                                                                     * 00020700
*                                                                     * 00020800
*                                                                     * 00020900
*                                                                     * 00021000
*      BLOCK_HDL=xblock_hdl                                           * 00021100
*          is the name (RS-type), or address in register (2)-(12), of * 00021200
*          a required 8 character output that will receive the handle * 00021300
*          identifying the blocked work request.                      * 00021400
*                                                                     * 00021500
*                                                                     * 00021600
*                                                                     * 00021700
*                                                                     * 00021800
*      ÝEWLMMODE=»NORMAL!EXPLICIT_SINGLEº¨                            * 00021900
*          is an optional keyword input that indicates, if the        * 00022000
*          parameter EXPLICIT_SINGLE has been specified on the        * 00022100
*          IWM4ECRE(or IWMECREA) call. The EWLMMODE parameter has to  * 00022200
*          be omitted (or the default value NORMAL must be            * 00022300
*          specified), if the enclave was not created with the        * 00022400
*          ESTRT=EXPLICIT_SINGLE option and vice versa. Otherwise the * 00022500
*          results may be unpredictable.                              * 00022600
*          DEFAULT: NORMAL                                            * 00022700
*                                                                     * 00022800
*                                                                     * 00022900
*          EWLMMODE=NORMAL                                            * 00023000
*              indicates that the enclave was created with the        * 00023100
*              ESTRT=EXPLICIT or ESTRT=IMPLIED option.                * 00023200
*                                                                     * 00023300
*          EWLMMODE=EXPLICIT_SINGLE                                   * 00023400
*              indicates that the enclave was created with the        * 00023500
*              ESTRT=EXPLICIT_SINGLE option which can only be used    * 00023600
*              for a restricted environment.  The caller must also    * 00023700
*              provide a standard 72-Byte savearea (addressable in    * 00023800
*              AMODE 31) pointed to by GPR13. Moreover the parameter  * 00023900
*              list and the classification parameters must also be    * 00024000
*              adressable in AMODE 31.                                * 00024100
*                                                                     * 00024200
*                                                                     * 00024300
*                                                                     * 00024400
*                                                                     * 00024500
*                                                                     * 00024600
*                                                                     * 00024700
*      ÝETOKEN=»xetoken!NO_ETOKENº¨                                   * 00024800
*          is the name (RS-type), or address in register (2)-(12), of * 00024900
*          an optional 8 character input that contains the enclave    * 00025000
*          token of the enclave under which the work request is       * 00025100
*          processed.  The parameter ETOKEN is required, when option  * 00025200
*          EWLMMODE=EXPLICIT_SINGLE is specified.                     * 00025300
*          DEFAULT: NO_ETOKEN indicates that no ETOKEN is passed.     * 00025400
*                                                                     * 00025500
*                                                                     * 00025600
*                                                                     * 00025700
*                                                                     * 00025800
*      ÝRETCODE=xretcode¨                                             * 00025900
*          is the name (RS-type) of an optional fullword output       * 00026000
*          variable, or register (2)-(12), into which the return code * 00026100
*          is to be copied from GPR 15.                               * 00026200
*                                                                     * 00026300
*                                                                     * 00026400
*                                                                     * 00026500
*                                                                     * 00026600
*      ÝRSNCODE=xrsncode¨                                             * 00026700
*          is the name (RS-type) of an optional fullword output       * 00026800
*          variable, or register (2)-(12), into which the reason code * 00026900
*          is to be copied from GPR 0.                                * 00027000
*                                                                     * 00027100
*                                                                     * 00027200
*                                                                     * 00027300
*                                                                     * 00027400
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00027500
*          is an optional byte input decimal value in the "0-1" range * 00027600
*          that specifies the macro version.  PLISTVER is the only    * 00027700
*          key allowed on the list form of MF and determines which    * 00027800
*          parameter list is generated.  The macro keys associated    * 00027900
*          with each supported version of the macro are listed in     * 00028000
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 00028100
*          instead of a number, and the parameter list will be of the * 00028200
*          largest size currently supported. This size may grow from  * 00028300
*          release to release (thus possibly affecting the amount of  * 00028400
*          storage needed by your program).  If your program can      * 00028500
*          tolerate this, IBM recommends that you always specify MAX  * 00028600
*          when creating the list form parameter list as that will    * 00028700
*          ensure that the list form parameter list is always long    * 00028800
*          enough to hold whatever parameters might be specified on   * 00028900
*          the execute form.                                          * 00029000
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00029100
*          default is the lowest version which allows all of the      * 00029200
*          parameters specified on the invocation to be processed.    * 00029300
*                                                                     * 00029400
*                                                                     * 00029500
*                                                                     * 00029600
*                                                                     * 00029700
*      ÝMF=»S!L!Eº¨                                                   * 00029800
*          is an optional keyword input which specifies the macro     * 00029900
*          form.                                                      * 00030000
*          DEFAULT: S                                                 * 00030100
*                                                                     * 00030200
*                                                                     * 00030300
*          ÝMF=S¨                                                     * 00030400
*              specifies the standard form of the macro.  The "S"     * 00030500
*              form generates code to put the parameters into an      * 00030600
*              in-line parameter list and invoke the desired service. * 00030700
*              Full checking for required macro keys is done along    * 00030800
*              with supplying defaults for omitted optional           * 00030900
*              parameters.                                            * 00031000
*                                                                     * 00031100
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00031200
*              specifies the list form of the macro.  The "L" form    * 00031300
*              defines an area to be used for the parameter list.     * 00031400
*              Only the PLISTVER key may be specified on the          * 00031500
*              invocation.  All other macro parameters are flagged as * 00031600
*              errors.  If PLISTVER is not specified, the original    * 00031700
*              parameter list definition is used.                     * 00031800
*                                                                     * 00031900
*            ,xmfctrl                                                 * 00032000
*              is a required input.  It is the name of a storage area * 00032100
*              for the parameter list.                                * 00032200
*                                                                     * 00032300
*            »,xmfattr!0Dº                                            * 00032400
*              is an optional 60 character input string that varies   * 00032500
*              from 1 to 60 characters. Use it to force boundary      * 00032600
*              alignment of the parameter list. Use only 0F or 0D.    * 00032700
*              DEFAULT: 0D which forces the parameter list to a       * 00032800
*              doubleword boundary.                                   * 00032900
*                                                                     * 00033000
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00033100
*              specifies the execute form of the macro.  The "E" form * 00033200
*              generates code to put the parameters into the          * 00033300
*              parameter list specified by xmfctrl and provides full  * 00033400
*              syntax checking with default setting.                  * 00033500
*                                                                     * 00033600
*            ,xmfctrl                                                 * 00033700
*              is a required input.  It is the name (RS-type), or     * 00033800
*              address in register (1)-(12), of a storage area for    * 00033900
*              the parameter list.                                    * 00034000
*                                                                     * 00034100
*            »,COMPLETEº                                              * 00034200
*              is an optional keyword input which specifies the       * 00034300
*              degree of macro parameter syntax checking.             * 00034400
*              DEFAULT: COMPLETE                                      * 00034500
*                                                                     * 00034600
*                                                                     * 00034700
*              COMPLETE                                               * 00034800
*                  Checking for required macro keys is done and       * 00034900
*                  defaults are supplied for omitted optional         * 00035000
*                  parameters.                                        * 00035100
*                                                                     * 00035200
*                                                                     * 00035300
*                                                                     * 00035400
*                                                                     * 00035500
*                                                                     * 00035600
*                                                                     * 00035700
*                                                                     * 00035800
*01* ABEND CODES:  None.                                              * 00035900
*                                                                     * 00036000
*01* RETURN CODES:                                                    * 00036100
*                                                                     * 00036200
*                                                                     * 00036300
*            0    Name: IwmRetCodeOk                                  * 00036400
*                                                                     * 00036500
*                 Meaning: Successful completion.                     * 00036600
*                                                                     * 00036700
*                 Action: None required.                              * 00036800
*                                                                     * 00036900
*                                                                     * 00037000
*            8    Name: IwmRetCodeInvocError                          * 00037100
*                                                                     * 00037200
*                 Meaning: Invalid invocation environment or          * 00037300
*                 parameters.                                         * 00037400
*                                                                     * 00037500
*                                                                     * 00037600
*                                                                     * 00037700
*                 HEX REASON  MEANING/ACTION                          * 00037800
*                 CODE                                                * 00037900
*                                                                     * 00038000
*                 xxxx0803    Name: IwmRsnCodeDisabled                * 00038100
*                                                                     * 00038200
*                             Meaning: Caller is disabled.            * 00038300
*                                                                     * 00038400
*                             Action: Avoid requesting this function  * 00038500
*                             while disabled.                         * 00038600
*                                                                     * 00038700
*                 xxxx0804    Name: IwmRsnCodeLocked                  * 00038800
*                                                                     * 00038900
*                             Meaning: Caller is locked.              * 00039000
*                                                                     * 00039100
*                             Action: Avoid requesting this function  * 00039200
*                             while locked.                           * 00039300
*                                                                     * 00039400
*                 xxxx080B    Name: IwmRsnCodeBadPl                   * 00039500
*                                                                     * 00039600
*                             Meaning: Error accessing parameter      * 00039700
*                             list.                                   * 00039800
*                                                                     * 00039900
*                             Action: Check for possible storage      * 00040000
*                             overlay.                                * 00040100
*                                                                     * 00040200
*                 xxxx0824    Name: IwmRsnCodeAmode24                 * 00040300
*                                                                     * 00040400
*                             Meaning: Caller invoked service but was * 00040500
*                             in 24 bit addressing mode.              * 00040600
*                                                                     * 00040700
*                             Action: Request this function only when * 00040800
*                             you are in 31 bit addressing mode.      * 00040900
*                                                                     * 00041000
*                 xxxx0828    Name: IwmRsnCodeBadVersion              * 00041100
*                                                                     * 00041200
*                             Meaning: Version number in parameter    * 00041300
*                             list is not valid.                      * 00041400
*                                                                     * 00041500
*                             Action: Check for possible storage      * 00041600
*                             overlay of the parameter list.          * 00041700
*                                                                     * 00041800
*                 xxxx083A    Name: IwmRsnCodeBadEnclave              * 00041900
*                                                                     * 00042000
*                             Meaning: EWLMMODE=EXPLICIT_SINGLE was   * 00042100
*                             specified and the required Enclave      * 00042200
*                             token does not pass verification.       * 00042300
*                                                                     * 00042400
*                             Action: Check for possible storage      * 00042500
*                             overlay of the enclave token, or        * 00042600
*                             asynchronous events which may have      * 00042700
*                             deleted the enclave.                    * 00042800
*                                                                     * 00042900
*                 xxxx0895    Name: IwmRsnCodeEWLMServNotEnabled      * 00043000
*                                                                     * 00043100
*                             Meaning: Service is not enabled because * 00043200
*                             caller invoked the IWMCONN service with * 00043300
*                             EWLM=NO.                                * 00043400
*                                                                     * 00043500
*                             Action: Ensure that EWLM=YES is         * 00043600
*                             specified on the IWMCONN request to     * 00043700
*                             enable this service.                    * 00043800
*                                                                     * 00043900
*                 xxxx0896    Name: IwmRsnCodeBadWorkReqHandle        * 00044000
*                                                                     * 00044100
*                             Meaning: Work request handle is         * 00044200
*                             invalid.                                * 00044300
*                                                                     * 00044400
*                             Action: Check the specification of the  * 00044500
*                             WORKREQ_HDL parameter.                  * 00044600
*                                                                     * 00044700
*                 xxxx08A0    Name: IwmRsnCodeNotExplicitSingle       * 00044800
*                                                                     * 00044900
*                             Meaning: The service has been invoked   * 00045000
*                             with option EWLMMODE=EXPLICIT_SINGLE,   * 00045100
*                             but the enclave has not been created    * 00045200
*                             with the ESTRT=EXPLICIT_SINGLE option   * 00045300
*                             or vice versa.                          * 00045400
*                                                                     * 00045500
*                             Action: If ESTRT=EXPLICIT_SINGLE was    * 00045600
*                             coded on the IWM4ECRE or IWMECREA call, * 00045700
*                             EWLMMODE=EXPLICIT_SINGLE must also      * 00045800
*                             specified on the IWMEBLK call.          * 00045900
*                             If ESTRT=EXPLICIT OR ESTRT=IMPLIED was  * 00046000
*                             coded on the IWM4ECRE or IWMECREA call, * 00046100
*                             EWLMMODE=NORMAL must be specified on    * 00046200
*                             the IWMEBLK call (or the EWLMMODE       * 00046300
*                             parameter can be omitted).              * 00046400
*                                                                     * 00046500
*                                                                     * 00046600
*                                                                     * 00046700
*                                                                     * 00046800
*            10   Name: IwmRetCodeCompError                           * 00046900
*                                                                     * 00047000
*                 Meaning: Component error.                           * 00047100
*                                                                     * 00047200
*                 Action: No action required. The function may be     * 00047300
*                 successful if invoked again.                        * 00047400
*                                                                     * 00047500
*                                                                     * 00047600
*                                                                     * 00047700
*                                                                     * 00047800
*01* REASON CODES:                                                    * 00047900
*                                                                     * 00048000
*       A unique reason code will be returned whenever the return     * 00048100
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00048200
*       under their corresponding return code.  Reason code and       * 00048300
*       return code constants are defined within IWMYCON.  Note that  * 00048400
*       the high order halfword of 31-BIT register 0, and the reason  * 00048500
*       code variable when specified, may be non-zero and represents  * 00048600
*       diagnostic data which is NOT part of the external interface.  * 00048700
*       The high order halfword should thus be excluded from          * 00048800
*       comparison with the reason code values described above.  The  * 00048900
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00049000
*       used for this purpose.                                        * 00049100
*                                                                     * 00049200
*01* MODULE TYPE:  ASSEM MACRO                                        * 00049300
*                                                                     * 00049400
*02*   PROCESSOR:  ASSEM                                              * 00049500
*                                                                     * 00049600
*01* COMPONENT:  SCWLM                                                * 00049700
*                                                                     * 00049800
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00049900
*                                                                     * 00050000
*01* EXAMPLES:                                                        * 00050100
*                                                                     * 00050200
*               IWMEBLK WORKREQ_HDL=WRHANDLE,                         * 00050300
*                       BLOCK_HDL=BKHANDLE                            * 00050400
*      *                                                              * 00050500
*      * Storage areas                                                * 00050600
*      *                                                              * 00050700
*      WRHANDLE DS    CL8             Work Request Handle             * 00050800
*      BKHANDLE DS    CL8             Work Request Block Handle       * 00050900
*                                                                     * 00051000
*                                                                     * 00051100
*01* MACRO USAGE NOTES:                                               * 00051200
*                                                                     * 00051300
*                                                                     * 00051400
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00051500
*        global macro variable.  Any value other than 'NO' will       * 00051600
*        result in the macro expansion being printed.  The default is * 00051700
*        'YES'.  The following examples illustrate how the ZPRINT     * 00051800
*        variable should be set.                                      * 00051900
*                                                                     * 00052000
*                    GBLC &ZPRINT                                     * 00052100
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00052200
*                                                                     * 00052300
*                                                                     * 00052400
*    2.  The  IWMEBLK macro supports multiple versions. The macro key * 00052500
*        list  below  contains the version level in which the key was * 00052600
*        first  introduced.  Positionals  are  identified by the word * 00052700
*        'Positional'  followed by the numeric value of its position. * 00052800
*        Nested  positionals  are  preceded  by their outer key.  The * 00052900
*        lowest value represents the original version and the highest * 00053000
*        value  represents  the  most  recent  version of the IWMEBLK * 00053100
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00053200
*        least  as high as the highest version number of all the keys * 00053300
*        being used.                                                  * 00053400
*                                                                     * 00053500
*        VERSION   KEY                                                * 00053600
*                                                                     * 00053700
*              0      BLOCK_HDL                                       * 00053800
*                     WORKREQ_HDL                                     * 00053900
*              1      ETOKEN                                          * 00054000
*                     EWLMMODE                                        * 00054100
*                                                                     * 00054200
*                                                                     * 00054300
*                                                                     * 00054400
*01* CHANGE ACTIVITY:                                                 * 00054500
*                                                                     * 00054600
*   Flag LineItem  FMID    Date   ID    Comment                       * 00054700
*                                                                     * 00054800
*    $L0=WLMPELM  HBB7708 020909 3241SW:  Enterprise Workload         * 00054900
*                                         Management (EWLM) support   * 00055000
*    $L1=PYN0804  HBB7708 021210 3241SW:  Corrected description       * 00055100
*    $L2=ME01430  HBB7709 040923 3241SW:  Added reason codes to       * 00055200
*                                         replace xxxxRRRR reason     * 00055300
*                                         code                        * 00055400
*    $L3=WLMPERS  HBB7709 041220 3241MB:  64-BIT Support.             * 00055500
*    $L4=WLMPEFP  HBB7709 050614 3241GB:  EWLM Enclave Services       * 00055600
*                                         Fastpath (EWLMMODE).        * 00055700
*    $P1=BLDCHKE  HBB7730 050919 3241BH:  No code change. ToolReq     * 00055800
*                                         5983 -                      * 00055900
*                                         B390.HBB7730.DRIVER5A.OC    * 00056000
*                                         OCHKE fixes.                * 00056100
*    $P1=ME04992  HBB7730 051102 3241GB:  Correct CVTH7709 check in   * 00056200
*                                         ASM code                    * 00056300
****** END OF SPECIFICATIONS *****************************************/ 00056400
*/********************************************************************* 00056500
         MACRO                                                          00056600
&XLABEL  IWMEBLK &WORKREQ_HDL=,&BLOCK_HDL=,&EWLMMODE=,&ETOKEN=,        *00056700
               &RETCODE=,&RSNCODE=,&PLISTVER=,&MF=                      00056800
.*                                                                      00056900
*                     MACDATE -10/10/06-<1>                             00057000
.*                                                                      00057100
.*******************************************************************    00057200
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00057300
.*******************************************************************    00057400
                     GBLC  &ZPRINT     YES=PRINT NO=NO PRINT            00057500
                     GBLC  &ZTEST      YES=TEST NO=NO TEST              00057600
                     GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX      00057700
.*                                                                      00057800
                     GBLC  &ZIWMEBLK   YES=MACRO USED AT LEAST ONCE     00057900
.*******************************************************************    00058000
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00058100
.*******************************************************************    00058200
                     LCLC  &ZMS        ERROR MESSAGE WORK AREA          00058300
                     LCLC  &ZCNDX      SYSNDX CHARACTERS                00058400
                     LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED       00058500
                     LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR      00058600
                     LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE      00058700
                     LCLA  &ZAWRK      USED AS A WORK AREA              00058800
                     LCLA  &ZASIZ      USED FOR SIZE OF VALUE           00058900
                     LCLA  &ZN         NUMERIC WORK VARIABLE            00059000
                     LCLC  &ZC         CHARACTER WORK VARIABLE          00059100
                     LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE      00059200
                     LCLA  &ZTLA       VALUE TOO LONG VARIABLE          00059300
                     LCLC  &ZMAC_G     "G" or null                      00059400
&ZMAC_G              SETC  ''                                           00059500
                     LCLC  &ZMAC_LR                                     00059600
&ZMAC_LR             SETC  'LR'                                         00059700
                     LCLC  &ZMAC_L                                      00059800
&ZMAC_L              SETC  'L'                                          00059900
                     LCLC  &ZMAC_ST                                     00060000
&ZMAC_ST             SETC  'ST'                                         00060100
                     LCLA  &ZMACRET    MACRO RETURN CODE                00060200
&ZMACRET             SETA  0           ASSUME NO ERRORS                 00060300
.*                                                                      00060400
                     LCLC  &ZCSYSLIST(255)      NONXKEY, POS ARRAY      00060500
                     LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()       00060600
                     LCLA  &ZPLLEN     PARAMETER LIST LENGTH            00060700
                     LCLC  &ZENDBASEPL          End of base PL          00060800
                     LCLA  &ZPLWORKA   PARAMETER LIST LENGTH            00060900
.*******************************************************************    00061000
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00061100
.*******************************************************************    00061200
                     LCLA  &ZI         INDEX FOR ARRAY                  00061300
                     LCLA  &ZJ         INDEX FOR PARMS                  00061400
                     LCLA  &ZK         INDEX FOR PARSE                  00061500
                     LCLA  &ZLO        LOW RANGE VALUE                  00061600
                     LCLA  &ZHI        HIGH RANGE VALUE                 00061700
                     LCLC  &ZW         WORK AREA FOR PARM               00061800
.********************************************************************   00061900
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00062000
.********************************************************************   00062100
                     GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL          00062200
                     GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE   00062300
                     GBLA  &SYSALVL    SYSSTATE ARCHLVL                 00062400
                     GBLC  &SYSAM64    SYSSTATE AMODE64                 00062500
.*                                                                      00062600
                     AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED   00062700
                     AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED    00062800
                     SPLEVEL  TEST                                      00062900
.ZSYS2               ANOP  ,                                            00063000
                     AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1        00063100
                     AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1        00063200
                     SYSSTATE TEST                                      00063300
                     AIF   (&SYSALVL LE 1).ZSYS4                        00063400
&ZMAC_G              SETC 'G'                                           00063500
&ZMAC_LR             SETC 'LGR'                                         00063600
&ZMAC_L              SETC 'LG'                                          00063700
&ZMAC_ST             SETC 'STG'                                         00063800
                     AGO   .ZSYS4                                       00063900
.ZSYS3               ANOP  ,                                            00064000
&SYSASCE             SETC  'P'         ASSUME SYSSTATE PRIMARY          00064100
.ZSYS4               ANOP  ,                                            00064200
.*******************************************************************    00064300
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00064400
.*******************************************************************    00064500
                     LCLC  &XWORKREQ_HDL        ++ NAME                 00064600
                     LCLC  &XBLOCK_HDL          ++ NAME                 00064700
                     LCLC  &XEWLMMODE  ++ VALUE                         00064800
                     LCLC  &XETOKEN    ++ NAME                          00064900
                     LCLC  &XRETCODE   ++ NAME                          00065000
                     LCLC  &XRSNCODE   ++ NAME                          00065100
                     LCLA  &XPLISTVER  ++ VALUE                         00065200
                     LCLC  &XMF        ++ VALUE                         00065300
                     LCLC  &XMFCTRL    ++ NAME                          00065400
                     LCLC  &XMFATTR    ++ VALUE                         00065500
                     LCLC  &XMFSCK     ++ VALUE                         00065600
.*******************************************************************    00065700
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00065800
.*******************************************************************    00065900
                     LCLC  &ZXWORKREQ_HDL       ++ INPUT NAME           00066000
                     LCLC  &ZXBLOCK_HDL         ++ OUTPUT NAME          00066100
                     LCLC  &ZXEWLMMODE          ++ INPUT VALUE          00066200
                     LCLC  &ZXETOKEN   ++ INPUT NAME                    00066300
                     LCLC  &ZXRETCODE  ++ OUTPUT NAME                   00066400
                     LCLC  &ZXRSNCODE  ++ OUTPUT NAME                   00066500
                     LCLC  &ZXPLISTVER          ++ INPUT VALUE          00066600
                     LCLC  &ZXMF       ++ INPUT VALUE                   00066700
                     LCLC  &ZXMFCTRL   ++ INPUT NAME                    00066800
                     LCLC  &ZXMFATTR   ++ INPUT VALUE                   00066900
                     LCLC  &ZXMFSCK    ++ INPUT VALUE                   00067000
.********************************************************************   00067100
.***AC.PLV01  PROCESS PLISTVER                                      *   00067200
.********************************************************************   00067300
&XPLISTVER      SETA  0                                                 00067400
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00067500
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00067600
&XPLISTVER      SETA  1                                                 00067700
.ZPLV0          ANOP  ,                                                 00067800
.*                                                                      00067900
                AIF   ('&EWLMMODE' EQ '').ZPLV1E                        00068000
                AIF   (&XPLISTVER GE 1).ZPLV1E                          00068100
&XPLISTVER      SETA  1                                                 00068200
.ZPLV1E         ANOP  ,                                                 00068300
.*                                                                      00068400
                AIF   ('&ETOKEN' EQ '').ZPLV2E                          00068500
                AIF   (&XPLISTVER GE 1).ZPLV2E                          00068600
&XPLISTVER      SETA  1                                                 00068700
.ZPLV2E         ANOP  ,                                                 00068800
.*                                                                      00068900
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00069000
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00069100
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00069200
.*-------------------------------------------------------------------   00069300
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00069400
&ZMS            SETC  '"PLISTVER='                                      00069500
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00069600
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00069700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00069800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00069900
                AGO   .ZPVCK2                                           00070000
.ZPVCK3         ANOP  ,                                                 00070100
.*-------------------------------------------------------------------   00070200
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00070300
&ZMS            SETC  '"PLISTVER='                                      00070400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00070500
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00070600
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00070700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00070800
                AGO   .ZPVCKE                                           00070900
.ZPVCK2         ANOP  ,                                                 00071000
.*-------------------------------------------------------------------   00071100
&ZCVAL          SETC  '&PLISTVER(1)'                                    00071200
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00071300
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00071400
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00071500
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00071600
                AIF   (&ZN LE 1).ZPVCK4A   NOT HIGH                     00071700
.ZPVCK6         ANOP  ,                                                 00071800
&ZMS            SETC  '"PLISTVER='                                      00071900
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00072000
&ZMS            SETC  '&ZMS THE RANGE IS "0-1"'                         00072100
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00072200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00072300
&XPLISTVER      SETA  1                                                 00072400
                AGO   .ZPVCKE                                           00072500
.*-------------------------------------------------------------------   00072600
.ZPVCK4A        ANOP  ,                                                 00072700
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00072800
&ZMS            SETC  'PLISTVER='                                       00072900
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00073000
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00073100
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00073200
                MNOTE 8,' &ZMS IS REQUIRED.'                            00073300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00073400
                AGO   .ZPVCK5                                           00073500
.ZPVCK4         ANOP  ,                                                 00073600
&XPLISTVER      SETA  &PLISTVER(1)                                      00073700
.ZPVCK5         ANOP  ,                                                 00073800
.ZPVCKE         ANOP  ,                                                 00073900
.********************************************************************   00074000
.***AG.MF01 PROCESS MF MACRO FORMS                                      00074100
.********************************************************************   00074200
                     ACTR  10000                                        00074300
.*------------------------------------------------------------------    00074400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00074500
&XMF                 SETC  ''          INITIALIZE XVARIABLE             00074600
.*-------------------------------------------------------------------   00074700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00074800
.ZG26                ANOP  ,                                            00074900
&ZTLC                SETC 'S'                                           00075000
                     AIF   ('&MF(1)' NE '&ZTLC').ZG27                   00075100
&XMF                 SETC  'S'         SET KEYWORD                      00075200
                     AIF   (N'&MF LE 1).ZG26A   CK NUM                  00075300
&ZMS                 SETC  '"MF='                                       00075400
&ZMS                 SETC  '&ZMS.&MF"'                                  00075500
&ZMS                 SETC  '&ZMS "MF"'                                  00075600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00075700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00075800
.ZG26A               ANOP  ,                                            00075900
.*-------------------------------------------------------------------   00076000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00076100
.ZG27                ANOP  ,                                            00076200
&ZTLC                SETC 'L'                                           00076300
                     AIF   ('&MF(1)' NE '&ZTLC').ZG34                   00076400
&XMF                 SETC  'L'         SET KEYWORD                      00076500
                     AIF   (N'&MF LE 3).ZG27A   CK NUM                  00076600
&ZMS                 SETC  '"MF='                                       00076700
&ZMS                 SETC  '&ZMS.&MF"'                                  00076800
&ZMS                 SETC  '&ZMS "MF"'                                  00076900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'         00077000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00077100
.ZG27A               ANOP  ,                                            00077200
.*-------------------------------------------------------------------   00077300
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00077400
                     AIF   (N'&SYSLIST NE 0).ZG27B  POSITIONALS?        00077500
                     AIF   ('&WORKREQ_HDL' NE '').ZG27B  KEYS?          00077600
                     AIF   ('&BLOCK_HDL' NE '').ZG27B  KEYS?            00077700
                     AIF   ('&EWLMMODE' NE '').ZG27B  KEYS?             00077800
                     AIF   ('&ETOKEN' NE '').ZG27B  KEYS?               00077900
                     AIF   ('&RETCODE' NE '').ZG27B  KEYS?              00078000
                     AIF   ('&RSNCODE' NE '').ZG27B  KEYS?              00078100
                     AGO    .ZG27C     INVOCATION OKAY                  00078200
.ZG27B               ANOP  ,                                            00078300
&ZMS                 SETC  'THE "L" FORM OF "MF"'                       00078400
&ZMS                 SETC  '&ZMS CAN ONLY HAVE'                         00078500
&ZMS                 SETC  '&ZMS THE "PLISTVER" KEY'                    00078600
                     MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'       00078700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00078800
.ZG27C               ANOP  ,                                            00078900
.*-------------------------------------------------------------------   00079000
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00079100
&ZXMFCTRL            SETC  'INPUT'     SET IN/OUTPUT                    00079200
&XMFCTRL             SETC  '&MF(2,1)'  SET XVARIABLE                    00079300
                     AIF   (N'&MF(2) GT 1).ZG29B  MULTI PARMS           00079400
&XMFCTRL             SETC  '&MF(2)'    SET XVARIABLE                    00079500
.ZG29B               AIF   (K'&MF(2) GT 0).ZG29C                        00079600
&ZXMFCTRL            SETC  ''          RESET IN/OUTPUT                  00079700
&ZMS                 SETC  'WHEN "L" IS SPECIFIED'                      00079800
&ZMS                 SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'          00079900
                     MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                 00080000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00080100
.ZG29C               ANOP  ,                                            00080200
.*-------------------------------------------------------------------   00080300
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00080400
                     AIF   (K'&ZXMFCTRL LE 0).ZG29P  NOT I/O            00080500
                     AIF   ('&XMFCTRL'(1,1) NE '(').ZG29P               00080600
&ZXMFCTRL            SETC  ''          RESET IN/OUTPUT                  00080700
&ZMS                 SETC  '"MF='                                       00080800
&ZMS                 SETC  '&ZMS.&MF"'                                  00080900
&ZMS                 SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'    00081000
                     MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'            00081100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00081200
.ZG29P               ANOP  ,                                            00081300
.*-------------------------------------------------------------------   00081400
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00081500
&ZXMFATTR            SETC  'INPUT'     SET IN/OUTPUT                    00081600
&XMFATTR             SETC  '0D'                                         00081700
                     AIF   (K'&MF(3) LE 0).ZG32B  PARM                  00081800
&XMFATTR             SETC  '&MF(3,1)'  SET XVARIABLE                    00081900
                     AIF   (N'&MF(3) GT 1).ZG32B  MULTI                 00082000
&XMFATTR             SETC  '&MF(3)'    SET XVARIABLE                    00082100
.ZG32B               ANOP  ,                                            00082200
.*-------------------------------------------------------------------   00082300
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00082400
                     AIF   (K'&ZXMFATTR LE 0).ZG32P  NOT I/O            00082500
                     AIF   ('&XMFATTR'(1,1) NE '(').ZG32P               00082600
&ZXMFATTR            SETC  ''          RESET IN/OUTPUT                  00082700
&ZMS                 SETC  '"MF='                                       00082800
&ZMS                 SETC  '&ZMS.&MF"'                                  00082900
&ZMS                 SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'    00083000
                     MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'            00083100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00083200
.ZG32P               ANOP  ,                                            00083300
.*-------------------------------------------------------------------   00083400
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00083500
                     AIF   (K'&ZXMFATTR LE 0).ZG32S  NOT I/O            00083600
                     AIF   (K'&XMFATTR LE 60).ZG32S  LNG OK             00083700
&ZXMFATTR            SETC  ''          RESET IN/OUTPUT                  00083800
&ZMS                 SETC  '"MF='                                       00083900
&ZMS                 SETC  '&ZMS.&MF"'                                  00084000
&ZMS                 SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'        00084100
                     MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'           00084200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00084300
.ZG32S               ANOP  ,                                            00084400
.*-------------------------------------------------------------------   00084500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00084600
.ZG34                ANOP  ,                                            00084700
&ZTLC                SETC 'E'                                           00084800
                     AIF   ('&MF(1)' NE '&ZTLC').ZG42                   00084900
&XMF                 SETC  'E'         SET KEYWORD                      00085000
                     AIF   (N'&MF LE 3).ZG34A   CK NUM                  00085100
&ZMS                 SETC  '"MF='                                       00085200
&ZMS                 SETC  '&ZMS.&MF"'                                  00085300
&ZMS                 SETC  '&ZMS "MF"'                                  00085400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'         00085500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00085600
.ZG34A               ANOP  ,                                            00085700
.*-------------------------------------------------------------------   00085800
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00085900
&ZXMFCTRL            SETC  'INPUT'     SET IN/OUTPUT                    00086000
&XMFCTRL             SETC  '&MF(2,1)'  SET XVARIABLE                    00086100
                     AIF   (N'&MF(2) GT 1).ZG36B  MULTI PARMS           00086200
&XMFCTRL             SETC  '&MF(2)'    SET XVARIABLE                    00086300
.ZG36B               AIF   (K'&MF(2) GT 0).ZG36C                        00086400
&ZXMFCTRL            SETC  ''          RESET IN/OUTPUT                  00086500
&ZMS                 SETC  'WHEN "E" IS SPECIFIED'                      00086600
&ZMS                 SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'          00086700
                     MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                 00086800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00086900
.ZG36C               ANOP  ,                                            00087000
.*-------------------------------------------------------------------   00087100
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00087200
                     AIF   (K'&ZXMFCTRL LE 0).ZG36R  NOT I/O            00087300
                     AIF   ('&XMFCTRL'(1,1) NE '(').ZG36R               00087400
&ZCGPR               SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                   00087500
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG36P                 00087600
                     AIF   (K'&ZCGPR GT 2).ZG36Q                        00087700
                     AIF   ('&ZCGPR' EQ '0').ZG36Q                      00087800
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00087900
                     AIF   (T'&ZCGPR NE 'N').ZG36Q  INVALID REG NAME    00088000
.ZG36P               ANOP  ,                                            00088100
                     AIF   (T'&ZCGPR NE 'N').ZG36R  NON NUMERIC         00088200
                     AIF   ('&ZCGPR' LT '1').ZG36Q                      00088300
                     AIF   ('&ZCGPR' LE '12').ZG36R                     00088400
.ZG36Q               ANOP  ,                                            00088500
&ZMS                 SETC  '"MF='                                       00088600
&ZMS                 SETC  '&ZMS.&MF"'                                  00088700
&ZMS                 SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'    00088800
                     MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'             00088900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00089000
.ZG36R               ANOP  ,                                            00089100
.*-------------------------------------------------------------------   00089200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00089300
&XMFSCK              SETC  ''          INITIALIZE XVARIABLE             00089400
.ZG40A   AIF   ('&MF(3)' NE 'COMPLETE').ZG41A                           00089500
&XMFSCK              SETC  'COMPLETE'  SET KEYWORD                      00089600
.*-------------------------------------------------------------------   00089700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00089800
.ZG41A               AIF   (K'&XMFSCK GT 0).ZG41C  KEYWORD              00089900
                     AIF   (K'&MF(3) LE 0).ZG41B                        00090000
&ZMS                 SETC  '"MF='                                       00090100
&ZMS                 SETC  '&ZMS.&MF"'                                  00090200
&ZMS                 SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '    00090300
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00090400
&ZMS                 SETC  '&ZMS "COMPLETE".'                           00090500
                     MNOTE 8,' &ZMS '                                   00090600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00090700
.ZG41B               ANOP  ,                                            00090800
&XMFSCK              SETC  'COMPLETE'  SET DEFAULT KEYWORD              00090900
.ZG41C               ANOP  ,                                            00091000
&ZXMFSCK             SETC  'INPUT'     SET IN/OUTPUT                    00091100
.*------------------------------------------------------------------    00091200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00091300
.ZG42                ANOP  ,                                            00091400
&ZXMF                SETC  'INPUT'     SET IN/OUTPUT                    00091500
                     AIF   (K'&XMF GT 0).ZG42E  VALID ARG               00091600
                     AIF   (T'&MF EQ 'O').ZG42D  OMITTED                00091700
&ZASYSLNDX           SETA  0                                            00091800
.ZG42A               ANOP  ,           POSITIONAL MACRO KEY             00091900
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00092000
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG42C             00092100
&ZTLC                SETC 'MF'                                          00092200
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG42A    00092300
.ZG42B               ANOP  ,                                            00092400
&ZXMF                SETC  ''          RESET IN/OUTPUT                  00092500
&ZMS                 SETC  'THE "MF" KEY'                               00092600
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00092700
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00092800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00092900
                     AGO   .ZG42E                                       00093000
.ZG42C               ANOP  ,                                            00093100
&ZXMF                SETC  ''          RESET IN/OUTPUT                  00093200
&ZMS                 SETC  '"MF='                                       00093300
&ZMS                 SETC  '&ZMS.&MF"'                                  00093400
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00093500
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00093600
&ZMS                 SETC  '&ZMS "S",'                                  00093700
&ZMS                 SETC  '&ZMS "L",'                                  00093800
&ZMS                 SETC  '&ZMS OR "E".'                               00093900
                     MNOTE 8,' &ZMS '                                   00094000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00094100
                     AGO   .ZG42E                                       00094200
.ZG42D               ANOP  ,                                            00094300
&XMF                 SETC  'S'         SET DEFAULT KEYWORD              00094400
&XMFSCK              SETC  'COMPLETE'  COMPLETE CHECKING                00094500
.ZG42E               ANOP  ,                                            00094600
.********************************************************************   00094700
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00094800
.********************************************************************   00094900
                     ACTR  10000                                        00095000
.*-------------------------------------------------------------------   00095100
.***AG.MF03 MF=(SLE)                                                    00095200
                     AIF   ('&XMF' EQ 'L').ZGMFX                        00095300
.*----------------------------------------------------------------***   00095400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00095500
                     AIF   (N'&WORKREQ_HDL LE 1).ZG2A  CK NUM           00095600
&ZMS                 SETC  '"WORKREQ_HDL='                              00095700
&ZMS                 SETC  '&ZMS.&WORKREQ_HDL"'                         00095800
&ZMS                 SETC  '&ZMS "WORKREQ_HDL"'                         00095900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00096000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00096100
.ZG2A                ANOP  ,                                            00096200
.*-------------------------------------------------------------------   00096300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00096400
&ZXWORKREQ_HDL       SETC  'INPUT'     SET IN/OUTPUT                    00096500
&XWORKREQ_HDL        SETC  '&WORKREQ_HDL(1)'    SET XVARIABLE           00096600
                     AIF   (N'&WORKREQ_HDL GT 1).ZG2B  MULTI PARMS      00096700
&XWORKREQ_HDL        SETC  '&WORKREQ_HDL'       SET XVARIABLE           00096800
.ZG2B                AIF   (K'&WORKREQ_HDL(1) GT 0).ZG2C                00096900
&ZXWORKREQ_HDL       SETC  ''          RESET IN/OUTPUT                  00097000
&ZMS                 SETC  ' '                                          00097100
&ZMS                 SETC  '&ZMS "WORKREQ_HDL" KEY AND ITS'             00097200
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00097300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00097400
.ZG2C                ANOP  ,                                            00097500
.*-------------------------------------------------------------------   00097600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00097700
                     AIF   (K'&ZXWORKREQ_HDL LE 0).ZG2R  NOT I/O        00097800
                     AIF   ('&XWORKREQ_HDL'(1,1) NE '(').ZG2R           00097900
&ZCGPR               SETC  '&XWORKREQ_HDL'(2,K'&XWORKREQ_HDL-2)         00098000
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                  00098100
                     AIF   (K'&ZCGPR GT 2).ZG2Q                         00098200
                     AIF   ('&ZCGPR' EQ '0').ZG2Q                       00098300
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00098400
                     AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME     00098500
.ZG2P                ANOP  ,                                            00098600
                     AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC          00098700
                     AIF   ('&ZCGPR' LT '2').ZG2Q                       00098800
                     AIF   ('&ZCGPR' LE '12').ZG2R                      00098900
.ZG2Q                ANOP  ,                                            00099000
&ZMS                 SETC  '"WORKREQ_HDL='                              00099100
&ZMS                 SETC  '&ZMS.&WORKREQ_HDL"'                         00099200
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00099300
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00099400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00099500
.ZG2R                ANOP  ,                                            00099600
.*----------------------------------------------------------------***   00099700
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00099800
                     AIF   (N'&BLOCK_HDL LE 1).ZG5A  CK NUM             00099900
&ZMS                 SETC  '"BLOCK_HDL='                                00100000
&ZMS                 SETC  '&ZMS.&BLOCK_HDL"'                           00100100
&ZMS                 SETC  '&ZMS "BLOCK_HDL"'                           00100200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00100300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00100400
.ZG5A                ANOP  ,                                            00100500
.*-------------------------------------------------------------------   00100600
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00100700
&ZXBLOCK_HDL         SETC  'OUTPUT'    SET IN/OUTPUT                    00100800
&XBLOCK_HDL          SETC  '&BLOCK_HDL(1)'      SET XVARIABLE           00100900
                     AIF   (N'&BLOCK_HDL GT 1).ZG5B  MULTI PARMS        00101000
&XBLOCK_HDL          SETC  '&BLOCK_HDL'         SET XVARIABLE           00101100
.ZG5B                AIF   (K'&BLOCK_HDL(1) GT 0).ZG5C                  00101200
&ZXBLOCK_HDL         SETC  ''          RESET IN/OUTPUT                  00101300
&ZMS                 SETC  ' '                                          00101400
&ZMS                 SETC  '&ZMS "BLOCK_HDL" KEY AND ITS'               00101500
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00101600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00101700
.ZG5C                ANOP  ,                                            00101800
.*-------------------------------------------------------------------   00101900
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00102000
                     AIF   (K'&ZXBLOCK_HDL LE 0).ZG5R  NOT I/O          00102100
                     AIF   ('&XBLOCK_HDL'(1,1) NE '(').ZG5R             00102200
&ZCGPR               SETC  '&XBLOCK_HDL'(2,K'&XBLOCK_HDL-2)             00102300
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                  00102400
                     AIF   (K'&ZCGPR GT 2).ZG5Q                         00102500
                     AIF   ('&ZCGPR' EQ '0').ZG5Q                       00102600
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00102700
                     AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME     00102800
.ZG5P                ANOP  ,                                            00102900
                     AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC          00103000
                     AIF   ('&ZCGPR' LT '2').ZG5Q                       00103100
                     AIF   ('&ZCGPR' LE '12').ZG5R                      00103200
.ZG5Q                ANOP  ,                                            00103300
&ZMS                 SETC  '"BLOCK_HDL='                                00103400
&ZMS                 SETC  '&ZMS.&BLOCK_HDL"'                           00103500
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00103600
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00103700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00103800
.ZG5R                ANOP  ,                                            00103900
.*----------------------------------------------------------------***   00104000
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00104100
                     AIF   (N'&EWLMMODE LE 1).ZG8A  CK NUM              00104200
&ZMS                 SETC  '"EWLMMODE='                                 00104300
&ZMS                 SETC  '&ZMS.&EWLMMODE"'                            00104400
&ZMS                 SETC  '&ZMS "EWLMMODE"'                            00104500
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00104600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00104700
.ZG8A                ANOP  ,                                            00104800
.*-------------------------------------------------------------------   00104900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00105000
&XEWLMMODE           SETC  ''          INITIALIZE XVARIABLE             00105100
.ZG9A   AIF   ('&EWLMMODE(1)' NE 'NORMAL').ZG10A                        00105200
&XEWLMMODE           SETC  'NORMAL'    SET KEYWORD                      00105300
.*-------------------------------------------------------------------   00105400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00105500
.ZG10A   AIF   ('&EWLMMODE(1)' NE 'EXPLICIT_SINGLE').ZG11A              00105600
&XEWLMMODE           SETC  'EXPLICIT_SINGLE'    SET KEYWORD             00105700
.*-------------------------------------------------------------------   00105800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00105900
.ZG11A               AIF   (K'&XEWLMMODE GT 0).ZG11C  KEYWORD           00106000
                     AIF   (K'&EWLMMODE(1) LE 0).ZG11B                  00106100
&ZMS                 SETC  '"EWLMMODE='                                 00106200
&ZMS                 SETC  '&ZMS.&EWLMMODE"'                            00106300
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00106400
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00106500
&ZMS                 SETC  '&ZMS "NORMAL"'                              00106600
&ZMS                 SETC  '&ZMS OR "EXPLICIT_SINGLE".'                 00106700
                     MNOTE 8,' &ZMS '                                   00106800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00106900
.ZG11B               ANOP  ,                                            00107000
&XEWLMMODE           SETC  'NORMAL'    SET DEFAULT KEYWORD              00107100
.ZG11C               ANOP  ,                                            00107200
&ZXEWLMMODE          SETC  'INPUT'     SET IN/OUTPUT                    00107300
.*----------------------------------------------------------------***   00107400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00107500
                     AIF   (N'&ETOKEN LE 1).ZG13A  CK NUM               00107600
&ZMS                 SETC  '"ETOKEN='                                   00107700
&ZMS                 SETC  '&ZMS.&ETOKEN"'                              00107800
&ZMS                 SETC  '&ZMS "ETOKEN"'                              00107900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00108000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00108100
.ZG13A               ANOP  ,                                            00108200
.*-------------------------------------------------------------------   00108300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00108400
&ZXETOKEN            SETC  'INPUT'     SET IN/OUTPUT                    00108500
&XETOKEN             SETC  'NO_ETOKEN'                                  00108600
                     AIF   (K'&ETOKEN(1) LE 0).ZG13B  PARM              00108700
&XETOKEN             SETC  '&ETOKEN(1)'         SET XVARIABLE           00108800
                     AIF   (N'&ETOKEN GT 1).ZG13B  MULTI                00108900
&XETOKEN             SETC  '&ETOKEN'   SET XVARIABLE                    00109000
.ZG13B               ANOP  ,                                            00109100
.*-------------------------------------------------------------------   00109200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00109300
                     AIF   (K'&ZXETOKEN LE 0).ZG13R  NOT I/O            00109400
         AIF   ('&XETOKEN' EQ 'NO_ETOKEN').ZG13R                        00109500
                     AIF   ('&XETOKEN'(1,1) NE '(').ZG13R               00109600
&ZCGPR               SETC  '&XETOKEN'(2,K'&XETOKEN-2)                   00109700
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG13P                 00109800
                     AIF   (K'&ZCGPR GT 2).ZG13Q                        00109900
                     AIF   ('&ZCGPR' EQ '0').ZG13Q                      00110000
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00110100
                     AIF   (T'&ZCGPR NE 'N').ZG13Q  INVALID REG NAME    00110200
.ZG13P               ANOP  ,                                            00110300
                     AIF   (T'&ZCGPR NE 'N').ZG13R  NON NUMERIC         00110400
                     AIF   ('&ZCGPR' LT '2').ZG13Q                      00110500
                     AIF   ('&ZCGPR' LE '12').ZG13R                     00110600
.ZG13Q               ANOP  ,                                            00110700
&ZMS                 SETC  '"ETOKEN='                                   00110800
&ZMS                 SETC  '&ZMS.&ETOKEN"'                              00110900
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00111000
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00111100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00111200
.ZG13R               ANOP  ,                                            00111300
.*----------------------------------------------------------------***   00111400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00111500
                     AIF   (N'&RETCODE LE 1).ZG16A  CK NUM              00111600
&ZMS                 SETC  '"RETCODE='                                  00111700
&ZMS                 SETC  '&ZMS.&RETCODE"'                             00111800
&ZMS                 SETC  '&ZMS "RETCODE"'                             00111900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00112000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00112100
.ZG16A               ANOP  ,                                            00112200
.*-------------------------------------------------------------------   00112300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00112400
                     AIF   (K'&RETCODE(1) LE 0).ZG16C  NO PARM          00112500
&ZXRETCODE           SETC  'OUTPUT'    SET OUTPUT                       00112600
&XRETCODE            SETC  '&RETCODE(1)'        SET XVARIABLE           00112700
                     AIF   (N'&RETCODE GT 1).ZG16C                      00112800
&XRETCODE            SETC  '&RETCODE'  SET XVARIABLE                    00112900
.ZG16C               ANOP  ,                                            00113000
.*-------------------------------------------------------------------   00113100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00113200
                     AIF   (K'&ZXRETCODE LE 0).ZG16R  NOT I/O           00113300
                     AIF   ('&XRETCODE'(1,1) NE '(').ZG16R              00113400
&ZCGPR               SETC  '&XRETCODE'(2,K'&XRETCODE-2)                 00113500
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG16P                 00113600
                     AIF   (K'&ZCGPR GT 2).ZG16Q                        00113700
                     AIF   ('&ZCGPR' EQ '0').ZG16Q                      00113800
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00113900
                     AIF   (T'&ZCGPR NE 'N').ZG16Q  INVALID REG NAME    00114000
.ZG16P               ANOP  ,                                            00114100
                     AIF   (T'&ZCGPR NE 'N').ZG16R  NON NUMERIC         00114200
                     AIF   ('&ZCGPR' LT '2').ZG16Q                      00114300
                     AIF   ('&ZCGPR' LE '12').ZG16R                     00114400
.ZG16Q               ANOP  ,                                            00114500
&ZMS                 SETC  '"RETCODE='                                  00114600
&ZMS                 SETC  '&ZMS.&RETCODE"'                             00114700
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00114800
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00114900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00115000
.ZG16R               ANOP  ,                                            00115100
.*----------------------------------------------------------------***   00115200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00115300
                     AIF   (N'&RSNCODE LE 1).ZG19A  CK NUM              00115400
&ZMS                 SETC  '"RSNCODE='                                  00115500
&ZMS                 SETC  '&ZMS.&RSNCODE"'                             00115600
&ZMS                 SETC  '&ZMS "RSNCODE"'                             00115700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00115800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00115900
.ZG19A               ANOP  ,                                            00116000
.*-------------------------------------------------------------------   00116100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00116200
                     AIF   (K'&RSNCODE(1) LE 0).ZG19C  NO PARM          00116300
&ZXRSNCODE           SETC  'OUTPUT'    SET OUTPUT                       00116400
&XRSNCODE            SETC  '&RSNCODE(1)'        SET XVARIABLE           00116500
                     AIF   (N'&RSNCODE GT 1).ZG19C                      00116600
&XRSNCODE            SETC  '&RSNCODE'  SET XVARIABLE                    00116700
.ZG19C               ANOP  ,                                            00116800
.*-------------------------------------------------------------------   00116900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00117000
                     AIF   (K'&ZXRSNCODE LE 0).ZG19R  NOT I/O           00117100
                     AIF   ('&XRSNCODE'(1,1) NE '(').ZG19R              00117200
&ZCGPR               SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                 00117300
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG19P                 00117400
                     AIF   (K'&ZCGPR GT 2).ZG19Q                        00117500
                     AIF   ('&ZCGPR' EQ '0').ZG19Q                      00117600
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00117700
                     AIF   (T'&ZCGPR NE 'N').ZG19Q  INVALID REG NAME    00117800
.ZG19P               ANOP  ,                                            00117900
                     AIF   (T'&ZCGPR NE 'N').ZG19R  NON NUMERIC         00118000
                     AIF   ('&ZCGPR' LT '2').ZG19Q                      00118100
                     AIF   ('&ZCGPR' LE '12').ZG19R                     00118200
.ZG19Q               ANOP  ,                                            00118300
&ZMS                 SETC  '"RSNCODE='                                  00118400
&ZMS                 SETC  '&ZMS.&RSNCODE"'                             00118500
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00118600
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00118700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00118800
.ZG19R               ANOP  ,                                            00118900
.******************************************************************     00119000
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00119100
.******************************************************************     00119200
                     ACTR  10000                                        00119300
.*----------------------------------------------------------------***   00119400
.***AH.P02 EXTRA POSITIONALS                                            00119500
                     AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS         00119600
                     AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL         00119700
                     AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL     00119800
                     AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL      00119900
.ZGLISTX1            ANOP  ,                                            00120000
&ZCVAL               SETC  ''          ERROR FIELD                      00120100
&ZAWRK               SETA  0           POSITIONAL NUMBER                00120200
.ZGLIST2             ANOP  ,                                            00120300
&ZAWRK               SETA  &ZAWRK+1    NEXT POSITIONAL                  00120400
                     AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE         00120500
&ZCVAL               SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA              00120600
                     AGO   .ZGLIST2                                     00120700
.*                                                                      00120800
.ZGLIST3             ANOP  ,                                            00120900
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA           00121000
&ZMS                 SETC  'POSITIONAL ARGUMENT(S),'                    00121100
&ZMS                 SETC  '&ZMS "&ZCVAL"'                              00121200
&ZMS                 SETC  '&ZMS CANNOT BE USED.'                       00121300
&ZMS                 SETC  '&ZMS NO POSITIONAL ARGUMENTS'               00121400
                     MNOTE 8,' &ZMS ARE ALLOWED.'                       00121500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00121600
.ZGLISTX             ANOP  ,                                            00121700
&ZASYSLNDX           SETA  0                                            00121800
.*-------------------------------------------------------------------   00121900
.***AG.MF04 MF=(SLE)                                                    00122000
.ZGMFX               ANOP  ,           END OF FULL SYNTAX CHECK         00122100
.*******************************************************************    00122200
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00122300
.*******************************************************************    00122400
                     AIF   (&ZMACRET NE 0).ZLX2  ERROR DETECTED         00122500
.*******************************************************************    00122600
.***AE.01  START OF IWMEBLK MACRO CODE                                  00122700
.*******************************************************************    00122800
                     LCLC  &M0M0001                 NAME                00122900
&M0M0001             SETC  '&XLABEL'                SET NAME            00123000
                     AIF   (K'&XLABEL NE 0).XLAB2                       00123100
&M0M0001             SETC  'M00M&SYSNDX'            DEFAULT NAME        00123200
.*                                                                      00123300
.XLAB2               ANOP  ,                                            00123400
                     AIF   ('&XMF' EQ 'L').XLAB3                        00123500
&M0M0001 DS    0H                             IWMEBLK-1                 00123600
.XLAB3               ANOP  ,                                            00123700
.*******************************************************************    00123800
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00123900
.*******************************************************************    00124000
              PUSH  PRINT                                               00124100
                     AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON   00124200
                     PRINT OFF         ++ PR01                          00124300
                     AGO   .ZPRNTXX                                     00124400
.ZPRINTX             PRINT ON                                           00124500
.ZPRNTXX             ANOP  ,                                            00124600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00124700
         LCLC  &T1                                                  @L4 00124800
         LCLA  &E1                                                  @L4 00124900
&E1      SETA  0                                                    @L4 00125000
         AIF   ('&XEWLMMODE' NE 'EXPLICIT_SINGLE').NOSING           @L4 00125100
         AIF   ('&XETOKEN' EQ 'NO_ETOKEN').SING                     @L4 00125200
         AIF   ('&XETOKEN' NE '').NOSING                            @L4 00125300
.SING    ANOP  ,                                                    @L4 00125400
&T1      SETC  'IWMEBLK: "ETOKEN" IS REQUIRED WITH '                @L4 00125500
&T1      SETC  '&T1."EWLMMODE=EXPLICIT_SINGLE"'                     @L4 00125600
&E1      SETA  8                                                    @L4 00125700
         MNOTE &E1,'&T1'                                            @L4 00125800
.NOSING  ANOP  ,                                                    @L4 00125900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00126000
.********************************************************************   00126100
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00126200
.********************************************************************   00126300
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00126400
                      LCLA  &ZOPN1         INVOCATION INDEX             00126500
                      LCLC  &ZOPL(4095)    LABEL                        00126600
                      LCLC  &ZOPO(4095)    OPERATION                    00126700
                      LCLC  &ZOPV(4095)    VALUE                        00126800
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00126900
.*                                                                      00127000
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00127100
.******************************************************************     00127200
.***AL.L10 IWMEBLK FMT=LIST MF=S!L PARAMETERS                           00127300
.******************************************************************     00127400
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00127500
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00127600
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00127700
&XMFATTR              SETC  '0D'                                        00127800
.*                                                                      00127900
&ZOPN                 SETA  &ZOPN+1                                     00128000
&ZOPL(&ZOPN)          SETC  ' '                                         00128100
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00128200
&ZOPV(&ZOPN)          SETC  '4,8'                                       00128300
&ZOPN                 SETA  &ZOPN+1                                     00128400
&ZOPL(&ZOPN)          SETC  ' '                                         00128500
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00128600
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00128700
&ZOPD(&ZOPN)          SETC  '++ IWMEBLK ARG PARMS'                      00128800
.*                                                                      00128900
&ZOPN                 SETA  &ZOPN+1                                     00129000
&ZOPL(&ZOPN)          SETC  ' '                                         00129100
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00129200
&ZOPV(&ZOPN)          SETC  '1'                                         00129300
&ZOPD(&ZOPN)          SETC  ' '                                         00129400
.*                                                                      00129500
.ZLMFSL2              ANOP  ,                                           00129600
.*-------------------------------------------------------------------   00129700
.***AM.L00  IWMEBLK FMT=LIST name                                       00129800
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00129900
&ZOPN                 SETA &ZOPN+1                                      00130000
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00130100
&ZOPO(&ZOPN)          SETC 'EQU'                                        00130200
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00130300
&ZOPD(&ZOPN)          SETC '++ IWMEBLK NAME'                            00130400
.ZLMFSL2M             ANOP  ,                                           00130500
.*-------------------------------------------------------------------   00130600
.***AM.L01  IWMEBLK FMT=LIST PARAMETERS                                 00130700
&ZOPN                 SETA &ZOPN+1                                      00130800
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00130900
&ZOPO(&ZOPN)          SETC 'DS'                                         00131000
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00131100
&ZOPD(&ZOPN)          SETC '++ IWMEBLK PARM LIST'                       00131200
.*-------------------------------------------------------------------   00131300
.***AM.L02 XVERSION XL1                                                 00131400
&ZOPN                 SETA &ZOPN+1                                      00131500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00131600
&ZOPO(&ZOPN)          SETC 'DS'                                         00131700
&ZOPV(&ZOPN)          SETC 'XL1'                                        00131800
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00131900
.*-------------------------------------------------------------------   00132000
.***AM.L09  XRSV0002 CL1                                                00132100
&ZOPN                 SETA &ZOPN+1                                      00132200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0002'                         00132300
&ZOPO(&ZOPN)          SETC 'DS'                                         00132400
&ZOPV(&ZOPN)          SETC 'CL1'                                        00132500
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00132600
.*-------------------------------------------------------------------   00132700
.***AM.L09  XPLISTLEN XL2                                               00132800
&ZOPN                 SETA &ZOPN+1                                      00132900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        00133000
&ZOPO(&ZOPN)          SETC 'DS'                                         00133100
&ZOPV(&ZOPN)          SETC 'XL2'                                        00133200
&ZOPD(&ZOPN)          SETC '++ INPUT '                                  00133300
.*-------------------------------------------------------------------   00133400
.***AM.L09  XWORKREQ_HDL CL8                                            00133500
&ZOPN                 SETA &ZOPN+1                                      00133600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XWORKREQ_HDL'                     00133700
&ZOPO(&ZOPN)          SETC 'DS'                                         00133800
&ZOPV(&ZOPN)          SETC 'CL8'                                        00133900
&ZOPD(&ZOPN)          SETC '++ &ZXWORKREQ_HDL '                         00134000
.*-------------------------------------------------------------------   00134100
.***AM.L09  XBLOCK_HDL CL8                                              00134200
&ZOPN                 SETA &ZOPN+1                                      00134300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBLOCK_HDL'                       00134400
&ZOPO(&ZOPN)          SETC 'DS'                                         00134500
&ZOPV(&ZOPN)          SETC 'CL8'                                        00134600
&ZOPD(&ZOPN)          SETC '++ &ZXBLOCK_HDL '                           00134700
.*-------------------------------------------------------------------   00134800
.***AM.L09  XETOKEN CL8                                                 00134900
&ZOPN                 SETA &ZOPN+1                                      00135000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XETOKEN'                          00135100
&ZOPO(&ZOPN)          SETC 'DS'                                         00135200
&ZOPV(&ZOPN)          SETC 'CL8'                                        00135300
&ZOPD(&ZOPN)          SETC '++ &ZXETOKEN '                              00135400
.*-------------------------------------------------------------------   00135500
.***AM.L10 END OF IWMEBLK LIST PARAMETERS                               00135600
&ZOPN                 SETA &ZOPN+1                                      00135700
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00135800
&ZOPO(&ZOPN)          SETC 'EQU'                                        00135900
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00136000
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00136100
.*                                                                      00136200
&ZOPN                 SETA &ZOPN+1                                      00136300
&ZOPL(&ZOPN)          SETC ' '                                          00136400
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00136500
&ZOPV(&ZOPN)          SETC '1'                                          00136600
&ZOPD(&ZOPN)          SETC ' '                                          00136700
.*-------------------------------------------------------------------   00136800
.***AL.L12 IWMEBLK FMT=LIST MF=S!L PARAMETERS                           00136900
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00137000
.*                                                                      00137100
&ZOPN                 SETA  &ZOPN+1                                     00137200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00137300
&ZOPO(&ZOPN)          SETC  'DC'                                        00137400
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00137500
&ZOPD(&ZOPN)          SETC  '++ IWMEBLK ARG PARMS'                      00137600
.*                                                                      00137700
.ZLMFSLX              ANOP  ,                                           00137800
.*-------------------------------------------------------------------   00137900
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00138000
&ZPLLEN               SETA 28                                           00138100
.*                                                                      00138200
.******************************************************************     00138300
.***AI.L01 IWMEBLK FMT=LIST FILL IN PARAMETER AREA                      00138400
.******************************************************************     00138500
                      ACTR  10000                                       00138600
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00138700
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00138800
&ZCVAL                SETC  'LAE'          XAX MODE                     00138900
.ZIMFXA               ANOP ,                                            00139000
.*                                                                      00139100
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00139200
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00139300
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00139400
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00139500
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00139600
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00139700
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00139800
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00139900
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00140000
&ZOPN                 SETA  &ZOPN+1                                     00140100
&ZOPL(&ZOPN)          SETC  ' '                                         00140200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00140300
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00140400
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00140500
                      AGO   .ZIMFNX                                     00140600
.*                                                                      00140700
.ZIMFN2               ANOP ,                                            00140800
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00140900
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00141000
&ZOPN                 SETA  &ZOPN+1                                     00141100
&ZOPL(&ZOPN)          SETC  ' '                                         00141200
&ZOPO(&ZOPN)          SETC  'LAE'                                       00141300
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00141400
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00141500
                      AGO   .ZIMFNX                                     00141600
.ZIMFNX1              ANOP ,                                            00141700
&ZOPN                 SETA  &ZOPN+1                                     00141800
&ZOPL(&ZOPN)          SETC  ' '                                         00141900
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00142000
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00142100
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00142200
.ZIMFNX               ANOP ,                                            00142300
.********************************************************************   00142400
.***AI.L02 IWMEBLK FMT=LIST INITIALIZE PARAMETER AREA                   00142500
.********************************************************************   00142600
.***AI.L03 MF=(SLE)                                                     00142700
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00142800
.*                                                                      00142900
&ZOPN                 SETA  &ZOPN+1                                     00143000
&ZOPL(&ZOPN)          SETC  ' '                                         00143100
&ZOPO(&ZOPN)          SETC  'XC'                                        00143200
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00143300
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00143400
.ZIMFLX               ANOP  ,                                           00143500
.*-------------------------------------------------------------------   00143600
.***AI.L04B XVERSION XL1                                                00143700
                      AIF   (&XPLISTVER EQ 0).ZIMFVZ                    00143800
&ZOPN                 SETA  &ZOPN+1                                     00143900
&ZOPL(&ZOPN)          SETC  ' '                                         00144000
&ZOPO(&ZOPN)          SETC  'MVI'                                       00144100
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00144200
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00144300
.ZIMFVZ               ANOP  ,                                           00144400
.*-------------------------------------------------------------------   00144500
.***AI.L04 XPLISTLEN XL2                                                00144600
&ZOPN                 SETA  &ZOPN+1                                     00144700
&ZOPL(&ZOPN)          SETC  ' '                                         00144800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00144900
&ZOPV(&ZOPN)          SETC  '2(2,1),=AL2(&ZPLLEN)'                      00145000
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    00145100
.*-------------------------------------------------------------------   00145200
.***AI.L25  XWORKREQ_HDL CL8                                            00145300
                      AIF   ('&ZXWORKREQ_HDL' EQ '').ZI4E               00145400
                      AIF   ('&ZXWORKREQ_HDL' EQ 'OUTPUT').ZI4E         00145500
&ZCGPR                SETC  '&XWORKREQ_HDL'                             00145600
.*                                                                      00145700
                      AIF   ('&XWORKREQ_HDL'(1,1) NE '(').ZI4B          00145800
&ZCGPR   SETC  '0('.'&XWORKREQ_HDL'(2,K'&XWORKREQ_HDL-2).')'            00145900
.ZI4B                 ANOP  ,                                           00146000
.*                                                                      00146100
&ZOPN                 SETA  &ZOPN+1                                     00146200
&ZOPL(&ZOPN)          SETC  ' '                                         00146300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00146400
&ZOPV(&ZOPN)          SETC  '4(8,1),&ZCGPR'                             00146500
&ZOPD(&ZOPN)          SETC  '++ &ZXWORKREQ_HDL XWORKREQ_HDL'            00146600
.*                                                                      00146700
.ZI4E                 ANOP  ,                                           00146800
.*-------------------------------------------------------------------   00146900
.***AI.L18  XETOKEN CL8                                                 00147000
         AIF   ('&XETOKEN' NE 'NO_ETOKEN').ZI6                          00147100
&ZXETOKEN             SETC  ''             RESET INPUT/OUTPUT           00147200
.ZI6                  ANOP  ,                                           00147300
.*-------------------------------------------------------------------   00147400
.***AI.L25  XETOKEN CL8                                                 00147500
                      AIF   ('&ZXETOKEN' EQ '').ZI6E                    00147600
                      AIF   ('&ZXETOKEN' EQ 'OUTPUT').ZI6E              00147700
&ZCGPR                SETC  '&XETOKEN'                                  00147800
.*                                                                      00147900
                      AIF   ('&XETOKEN'(1,1) NE '(').ZI6B               00148000
&ZCGPR   SETC  '0('.'&XETOKEN'(2,K'&XETOKEN-2).')'                      00148100
.ZI6B                 ANOP  ,                                           00148200
.*                                                                      00148300
&ZOPN                 SETA  &ZOPN+1                                     00148400
&ZOPL(&ZOPN)          SETC  ' '                                         00148500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00148600
&ZOPV(&ZOPN)          SETC  '20(8,1),&ZCGPR'                            00148700
&ZOPD(&ZOPN)          SETC  '++ &ZXETOKEN XETOKEN'                      00148800
.*                                                                      00148900
.ZI6E                 ANOP  ,                                           00149000
.*-------------------------------------------------------------------   00149100
&ZOPN1                SETA &ZOPN                                        00149200
.*******************************************************************    00149300
.***  PROCESS IWMEBLK OUTPUT PARAMETERS                                 00149400
.*******************************************************************    00149500
                      ACTR  10000                                       00149600
.*------------------------------------------------------------------    00149700
.***AO.L02 XBLOCK_HDL CL8                                               00149800
         AIF   ('&ZXBLOCK_HDL' EQ 'OUTPUT').ZO5A  OUTPUT                00149900
         AIF   ('&ZXBLOCK_HDL' NE 'INOUT').ZO5C  INOUT                  00150000
.ZO5A    AIF   ('&XBLOCK_HDL'(1,1) NE '(').ZO5B  ADDR IN GPR            00150100
&ZCGPR   SETC  '&XBLOCK_HDL'(2,K'&XBLOCK_HDL-2)                         00150200
&ZOPN                 SETA  &ZOPN+1                                     00150300
&ZOPL(&ZOPN)          SETC  ' '                                         00150400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00150500
&ZOPV(&ZOPN)          SETC  '0(8,&ZCGPR),12(1)'                         00150600
&ZOPD(&ZOPN)          SETC  '++ XBLOCK_HDL CL8'                         00150700
                      AGO   .ZO5C                                       00150800
.*                                                                      00150900
.ZO5B                 ANOP  ,                                           00151000
&ZAWRK   SETA  K'&XBLOCK_HDL                                            00151100
         AIF   ('&XBLOCK_HDL'(&ZAWRK,1) NE ')').ZO5G                    00151200
&ZN      SETA  2                                                        00151300
.ZO5H    ANOP                                                           00151400
         AIF   (&ZN GE &ZAWRK).ZO5G                                     00151500
         AIF   ('&XBLOCK_HDL'(&ZN,1) NE '(').ZO5I                       00151600
&ZC      SETC  '&XBLOCK_HDL'(1,&ZN).'8'.','                             00151700
&ZC      SETC  '&ZC'.'&XBLOCK_HDL'(&ZN+1,&ZAWRK-&ZN).',12(1)'           00151800
         AGO   .ZO5J                                                    00151900
.ZO5I    ANOP                                                           00152000
&ZN      SETA  &ZN+1                                                    00152100
         AGO   .ZO5H                                                    00152200
.ZO5G    ANOP                                                           00152300
&ZC      SETC  '&XBLOCK_HDL.(8),12(1)'                                  00152400
.ZO5J    ANOP                                                           00152500
&ZOPN                 SETA  &ZOPN+1                                     00152600
&ZOPL(&ZOPN)          SETC  ' '                                         00152700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00152800
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00152900
&ZOPD(&ZOPN)          SETC  '++ XBLOCK_HDL CL8'                         00153000
.ZO5C                 ANOP  ,                                           00153100
.*******************************************************************    00153200
.***AO.X02  RETURN CODE PROCESSING                                      00153300
.*******************************************************************    00153400
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00153500
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00153600
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00153700
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00153800
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00153900
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00154000
&ZOPN                 SETA  &ZOPN+1                                     00154100
&ZOPL(&ZOPN)          SETC  ' '                                         00154200
&ZOPO(&ZOPN)          SETC  'ST'                                        00154300
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00154400
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00154500
                      AGO   .ZMRETX                                     00154600
.*                                                                      00154700
.ZMRET2               ANOP  ,                                           00154800
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00154900
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00155000
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00155100
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00155200
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00155300
&ZOPN                 SETA  &ZOPN+1                                     00155400
&ZOPL(&ZOPN)          SETC  ' '                                         00155500
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00155600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00155700
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00155800
.ZMRETX               ANOP  ,                                           00155900
.*******************************************************************    00156000
.***AO.X03  REASON CODE PROCESSING                                      00156100
.*******************************************************************    00156200
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00156300
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00156400
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00156500
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00156600
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00156700
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00156800
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00156900
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00157000
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00157100
&ZOPN                 SETA  &ZOPN+1                                     00157200
&ZOPL(&ZOPN)          SETC  ' '                                         00157300
&ZOPO(&ZOPN)          SETC  'ST'                                        00157400
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00157500
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00157600
                      AGO   .ZMRSNX                                     00157700
.*                                                                      00157800
.ZMRSN2               ANOP  ,                                           00157900
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00158000
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00158100
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00158200
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00158300
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00158400
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00158500
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00158600
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00158700
&ZOPN                 SETA  &ZOPN+1                                     00158800
&ZOPL(&ZOPN)          SETC  ' '                                         00158900
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00159000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00159100
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00159200
.ZMRSNX               ANOP  ,                                           00159300
.*******************************************************************    00159400
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00159500
.*******************************************************************    00159600
.ZMFLX                ANOP  ,              MF=L PROCESSING              00159700
.*******************************************************************    00159800
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00159900
.*******************************************************************    00160000
                      ACTR  10000                                       00160100
.*                                                                      00160200
                      LCLA  &ZLC           COLUMN POSITION              00160300
                      LCLA  &ZOPX          LIST TABLE INDEX             00160400
                      LCLC  &ZLL           LABEL                        00160500
                      LCLC  &ZLOP          OPERATION                    00160600
                      LCLC  &ZLV           VALUE                        00160700
                      LCLC  &ZLD           DESCRIPTION                  00160800
.*                                                                      00160900
&ZOPX                 SETA  1                                           00161000
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00161100
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00161200
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00161300
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00161400
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00161500
                      AIF   (K'&ZLD LE 0).ZL5                           00161600
&ZLC                  SETA  35             COMMENT COLUMN               00161700
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00161800
&ZLC                  SETA  33             COMMMENT COLUMN              00161900
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00162000
&ZLV                  SETC  '&ZLV'.' '                                  00162100
                      AGO   .ZL3                                        00162200
.*                                                                      00162300
.ZL4                  ANOP  ,                                           00162400
&ZLV                  SETC  '&ZLV'.' '                                  00162500
.ZL5                  ANOP  ,                                           00162600
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00162700
.*                                                                      00162800
&ZLL     &ZLOP &ZLV                                                     00162900
.*                                                                      00163000
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00163100
                      AGO   .ZL2           CONTINUE LOOPING             00163200
.*                                                                      00163300
.ZLX                  ANOP  ,                                           00163400
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00163500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00163600
         L     14,16(0,0)              GET CVT ADDRESS                  00163700
         AIF   ('&SYSAM64' NE 'YES').AMODE31                        @L3 00163800
         LLGTR 14,14                   Clear high half in 64bit mode@L3 00163900
         TM    CVTOSLV3-CVT(14),CVTH7709 Test for HBB7709      @ME04992 00164000
         BNZ   VEROK&SYSNDX              ...Running on HBB7709      @L3 00164100
         LA    0,IWMRSNCODEBADVERSION    HBB7709 is required        @L3 00164200
         LA    15,IWMRETCODEINVOCERROR   Set return code            @L3 00164300
         B     END&SYSNDX                Skip service invocation    @L3 00164400
VEROK&SYSNDX  DS  0H                     Version check sussessfull  @L3 00164500
.AMODE31 ANOP  ,                                                    @L3 00164600
         AIF   ('&XEWLMMODE' NE 'EXPLICIT_SINGLE').PCCALL           @L4 00164700
         L     15,X'10'                ADDRESS THE CVT              @L4 00164800
         L     15,X'8C'(15,0)          ADDRESS THE ECVT             @L4 00164900
         L     15,X'C4'(15,0)          ADDRESS THE WMVT             @L4 00165000
         L     15,X'144'(15,0)         GET SERVICE ROUTINE ADDR     @L4 00165100
         AIF   ('&SYSAM64' NE 'YES').AMOD131                        @L4 00165200
         SAM   31                      SWITCH TO AMODE 31           @L4 00165300
.AMOD131 ANOP  ,                                                    @L4 00165400
         LHI   0,111                   FUNCTION CODE=IWMEBLK        @L4 00165500
         BASR  14,15                   INVOKE SERVICE ROUTINE       @L4 00165600
         AIF   ('&SYSAM64' NE 'YES').AMOD231                        @L4 00165700
         SAM   64                      SWITCH TO AMODE 64           @L4 00165800
.AMOD231 ANOP  ,                                                    @L4 00165900
         CHI   15,256                  TEST IF INSTALLED ?          @L4 00166000
         BL    PC&SYSNDX               NO, FALLBACK TO PC           @L4 00166100
         AHI   15,-256                 CORRECT RC                   @L4 00166200
         B     END&SYSNDX              BRANCH AROUND PC             @L4 00166300
PC&SYSNDX DS   0H                                                   @L4 00166400
         L     14,16(0,0)              RELOAD CVT ADDRESS           @L4 00166500
.PCCALL  ANOP  ,                                                    @L4 00166600
         L     14,772(14,0)            GET SFT ADDRESS                  00166700
         L     14,380(14,0)            GET LX FOR SERVICE ROUTINE       00166800
         LA    15,111                  GET EX FOR SERVICE ROUTINE       00166900
         OR    14,15                   GET PC NUMBER                    00167000
         PC    0(14)                                                    00167100
END&SYSNDX DS    0H                    END LABEL                        00167200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00167300
.ZLINKX               ANOP  ,                                           00167400
.*******************************************************************    00167500
.***AP.X01  FORMAT GENERATED CODE                                       00167600
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00167700
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00167800
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00167900
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00168000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00168100
                      AIF   (K'&ZLD LE 0).ZL51                          00168200
&ZLC                  SETA  35             COMMENT COLUMN               00168300
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00168400
&ZLC                  SETA  33             COMMENT COLUMN               00168500
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00168600
&ZLV                  SETC  '&ZLV'.' '                                  00168700
                      AGO   .ZL31                                       00168800
.*                                                                      00168900
.ZL41                 ANOP  ,                                           00169000
&ZLV                  SETC  '&ZLV'.' '                                  00169100
.ZL51                 ANOP  ,                                           00169200
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00169300
.*                                                                      00169400
&ZLL     &ZLOP &ZLV                                                     00169500
.*                                                                      00169600
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00169700
                      AGO   .ZL21          CONTINUE LOOPING             00169800
.*                                                                      00169900
.ZLX1                 ANOP  ,                                           00170000
.*******************************************************************    00170100
.***AP.X02  END OF IWMEBLK MACRO                                        00170200
&ZIWMEBLK             SETC  'YES'          SET IWMEBLK USED             00170300
         POP   PRINT                                                    00170400
*                                            IWMEBLK-1                  00170500
         SPACE 1                                                        00170600
.ZLX2                 ANOP  ,                                           00170700
         MEND                                                           00170800
**********************************************************************/ 00170900
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00171000
*%IWMEBLK: MACRO KEYS(WORKREQ_HDL,BLOCK_HDL,EWLMMODE,ETOKEN,RETCODE,    00171100
*                 RSNCODE,PLISTVER,MF);                                 00171200
*  ANS('?'!!MACLABEL!!' '!!'IWMEBLKP '!!MACLIST!!                       00171300
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00171400
*%END IWMEBLK;                                                          00171500
